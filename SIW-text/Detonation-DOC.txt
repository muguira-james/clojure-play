New Detonation ModelBoris DobrydnevBMH Associates, Inc.5365 Robin Hood Road, Suite 100Norfolk, Virginia 23513-2441. U.S.A  HYPERLINK "mailto:dobrydnev@bmh.com" dobrydnev@bmh.com Keywords: Weapon modeling, SAF, CGFABSTRACT: The existing SAF detonation model used in ModSAF, OTB SAF, and JSAF may fail to accurately represent detonation interactions for fast moving entities such as tactical aircraft. The need for a new detonation model became evident in a scenario for testing of Air Defense Artillery (ADA) engagement of Fixed Winged Aircraft (FWA). As the time between successive ticks increased, the performance of the original detonation model decreased.This paper describes a new detonation model that is based on a solid mathematical foundation. It applies calculus methods to compute the closest distance between a munition and target entity. This value is used to trigger the detonation event. In the scenario where ADA missiles were employed against FWA testing showed the new detonation model to be accurate even when high computational load had caused large time intervals between subsequent ticks.1. Introduction     The detonation model is one of the most fundamental physical models in a Computer Generated Forces (CGF) system. One of the purposes of the model is to generate a detonation event between a missile and its target. The principle factor for determining a detonation occurs is the distance between the missile and the target. If the missile passes within the “fusing” distance of the target, a detonation event should be issued and the missile should explode. The main detonation model capability is to determine whether the distance between the missile and the target becomes less than the fusing distance for the missile.The need for detonation model validation arose while working on the Aviation Combined Arms Tactical Trainer – Aviation Reconfigurable Manned Simulator (AVCATT-A) system. The detonation model is a part of the Army’s OneSAF Test Bed (OTBSAF) simulation program. OTBSAF is a government-owned, distributed simulation program configured to operate on a low-cost personal computer using the Linux operating system. Validation of the existing detonation model relative to functional requirements in the AVCATT-A System/Subsystem Specifications (SSS) requirements showed the need for improvement. When computing load increased, the model failed to detect detonations in a large percentage of Air Defense Artillery (ADA) missile engagements against aircraft. The AVCATT-A SSS requirements specified the model to be effective in detecting detonations of ADA missiles against fast moving Fixed Wing Aircraft (FWA) such as fighters.2. Original modelThe analysis of the original implementation of the detonation model revealed some cases where it can potentially fail. On each tick the original detonation model retrieves the current missile location along with the missile location from the last tick. The model then divides the solution space into three zones based on these two locations (see Figure 1.) Figure  SEQ Figure \* ARABIC 1. The way original detection model detects detonation event.If the target is located in the middle zone, the detonation model assumes the closest point to the target has been passed and the model attempts to determine whether there has been a hit or near miss. This approach works well for simple cases such as detonation detections between slow moving objects such as ground vehicles, or detonation detections between a missile and a static object such as a building. However, the model also must detect detonations between fast moving ADA missiles and target aircraft that may be moving very fast. Moreover, when a large number of vehicles is simulated simultaneously, the resulting high computational load leads to a low model tick rate and large time intervals between consecutive ticks. For these conditions, the original detonation model failed to detect a substantial percentage of detonations (see Figure 2) since it is possible for the missile to transit completely through the middle zone dependent on the time interval between successive model ticks and the relative speed of the missile and target.Figure  SEQ Figure \* ARABIC 2. The situation where the original detonation model may fail.As missile-target relative speed increases there is a possibility the detonation model will fail to accurately detect a detonation.There are also other deficiencies in the current detonation model implementation. In the "high fidelity mode" the model checks for all possible targets located within some range from the missile. This range depends on the missile orientation in space and when the missile orientation is close to vertical, the range becomes very small. Another drawback is the model attempts to determine the distance between two objects (missile and target) using positions determined at different times. Based on the model deficiencies described above it was necessary to design a new detonation algorithm that would meet the AVCATT-A requirement for detonation interaction accuracy.3. Algorithm DescriptionThe proposed detonation model is concise, straightforward, and based on the solid mathematical background. The model assumes both the missile and target velocities to be constant during the time interval between two consecutive ticks. This assumption is adequate if the time between ticks is small in comparison with the velocity change of the missile or target over the same time interval. For missile-aircraft detonation interactions over a short period of time, even several seconds, it is very unlikely either the missile or the aircraft will radically change their respective velocities.    On each tick, the detonation model performs the following operations. First, the model retrieves the current (EMBED Unknown) and previous (EMBED Unknown) missile positions along with the current (EMBED Unknown) and previous (EMBED Unknown) target positions as shown on Figure 3. Figure  SEQ Figure \* ARABIC 3. Basic geometry of detonation detection.Using the missile and target displacement in the time interval between two consecutive ticks, the missile and target velocities can be calculated as position change divided over the time interval ( between ticks:EMBED UnknownThese velocities are the average velocities, not the instantaneous ones. In case the previous target position is unknown, the model will use the current target velocity and “reverse dead reckoning” method to estimate the previous target position. This approach is less preferable and would be used as a backup.It is possible to evaluate the missile and target locations at any moment in the time interval between ticks according to the simple formula: the position at any time equals the initial position plus velocity multiplied by the time interval: EMBED Equation.3  Time t can take values within the interval 0 ( t ( (.Knowing the missile and target positions allows the calculation of the distance between them at any moment of time. To do so, we draw the vector between the target and the missile  EMBED Equation.3   at any moment of time:  EMBED Equation.3  The vector  EMBED Equation.3  is shown on Figure 4 for some moment of time.Figure  SEQ Figure \* ARABIC 4. Vector from target to missile positions.The formula for the  EMBED Equation.3  can be developed as EMBED Equation.3  The terms in the equation above can be grouped as: EMBED Equation.3  Relative previous position is EMBED Equation.3  Relative velocity is EMBED Equation.3  .The vectors of relative velocity and relative previous position and are illustrated on Figures 5, 6.Figure 5. Relative velocity.Figure 6. Relative previous position.To find the distance between the missile and the target, the vector  EMBED Equation.3  is multiplied by itself as: EMBED Equation.3  Calculus methods are used to determine whether or not the distance as a function of time approaches a minimum for the time interval. If the time derivative of the distance is equal to zero in the time interval between two successive ticks (0 ( t ( (), the distance has a minimum. The equation for the derivative of squared distance is EMBED Equation.3  Solving the above equation for time enables us to find the time when the distance has the minimum  EMBED Equation.3  : EMBED Equation.3  Thus, the condition of passing through the closest point is  EMBED Equation.3  . If the time of minimum  EMBED Equation.3  lies inside the tick time interval, the closest point to the target is passed in this time interval. The closest distance between the missile and the target  EMBED Equation.3   is equal to EMBED Equation.3  Depending on the value of parametric "fusing distance", the model detects a hit or near miss. If the closest distance  EMBED Equation.3   is less than the “fusing distance” the model detects a hit; otherwise it is considered to be a near miss.4. ImplementationThe enhanced detonation model has been implemented in OTBSAF. All modifications are located within libdetonation library.Although it is possible for the detonation model to fail for extremely low tick rate, the consideration of this situation is impractical because for very low values of tick rates the successful simulation of AVCATT-A system will not be possible. The detonation model has been tested within the full OTBSAF environment when the number of simulated entities substantially exceeded the number of required ones. To test the model a scenario of ADA missiles engaging rotary- and fixed-wing aircraft was employed. All valid detonations were detected to demonstrate the adequacy of the enhanced detonation model to meet AVCATT-A SSS requirements.5. ConclusionsThe new detonation model is now a part of the OTBSAF CGF system. Testing showed its adequacy to meet accuracy requirements for detonation interactions between all types of entities including fast moving missiles and aircraft. 6. Future DevelopmentThe model assumes the missile and target are moving with the constant velocity in the time interval between two consecutive ticks. This approach may not be adequate for some simulation intended uses when the missile and/or the target experience big acceleration in this time interval. The detonation model can take acceleration into account to improve its validity and robustness. The price for this step up, however, is substantial increase in the model complexity and greater computation time spent in the detonation module.7. AcknowledgementsThe author gratefully acknowledges the valuable contributions and support from David Cavitt and Derek Bryan, BMH Associates, Inc.8. Author’s BiographiesBORIS DOBRYDNEV is a research scientist for BMH Associates, Inc.  He holds a M.S. degree in computer science and Ph.D. degree in physics from Old Dominion University.  He is a software developer for AVCATT-A, and has been involved with the BFTT AMN and JSAF FBE projects.TargetMiddle zonelast tickmissile positioncurrentmissile positionlast ticktargetpositioncurrenttargetpositionMiddle zonepreviousmissilepositionprevioustargetpositioncurrentmissilepositioncurrenttargetpositioncurrenttargetpositioncurrentmissilepositionprevioustargetpositionpreviousmissileposition EMBED Equation.3  previoustargetpositionpreviousmissilepositioncurrentmissilepositioncurrenttargetposition EMBED Equation.3   EMBED Equation.3  targetvelocitymissilevelocitytargetvelocitymissilevelocity