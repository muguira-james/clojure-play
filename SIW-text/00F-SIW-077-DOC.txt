The Joint Strike Fighter (JSF)Distributed Product Description (DPD)James W. HollenbachSimulation Strategies, Inc.8615 Conover PlaceAlexandria, VA 22308-2515703-360-3902 HYPERLINK "mailto:jimh@simstrat.com" jimh@simstrat.comLt Col Robert J. Hartnett, Jr., USAFJoint Strike Fighter Program Office1213 Jefferson Davis Highway, Suite 600Arlington, VA 22202703-601-5650 HYPERLINK "mailto:HartnettRJ@jast.mil" HartnettRJ@jast.mil Keywords:  Simulation Based Acquisition (SBA), Distributed Product Description (DPD), data engineering, data model, data interchange standards, data interchange format (DIF), digital system model (DSM), repository, VV&AABSTRACT:  This paper describes the Joint Strike Fighter Program’s efforts to develop a Distributed Product Description (DPD), one of the key architectural concepts of Simulation Based Acquisition.  The initial JSF DPD will be developed to support a specific suite of models and simulations, which are described.  Its role in the IPPD process is explained and anticipated benefits are enumerated.  The logic for the JSF Program Office’s definition of DPD characteristics, components, scope and employment concepts is presented.  These are compared to previous DPD definitions and concepts from various published sources, arguing for their evolution.  The JSF DPD development strategy is reviewed, including the data engineering process and the complimentary roles of government and industry.  User interface concepts, to be provided through a resource access system (i.e., repository), are identified.JSF Employment of Simulation Based AcquisitionJSF Program OverviewThe Joint Strike Fighter (JSF) Program is the Department of Defense's effort to field an affordable next generation strike aircraft weapon system for the Navy, Air Force, Marines, and allied nations.  The JSF will be built in three variants – Conventional Takeoff and Landing (CTOL) for the USAF, Short Takeoff and Vertical Landing (STOVL) for the USMC and Royal Navy, and an aircraft carrier-capable variant (CV) for the USN.  A primary focus of the program is affordability -- reducing the development cost, production cost, and cost of ownership of the JSF family of aircraft.  To support this goal, the JSF Program has endeavored to apply Simulation Based Acquisition (SBA) principles to the maximum practical extent throughout the JSF acquisition process.  References [1] through [5] provide an orientation to SBA concepts, which are evolving as the acquisition community gains experience with this powerful concept for the definition, production, testing and support of complex systems.  The JSF Program expects to pass Milestone II and enter Engineering and Manufacturing Development (EMD) in 2001.SBA Strategy for JSF EMDSBA supports optimization of the JSF system by early and continuing exploration of the largest possible trade space:  across all life cycle activities, across government and contractor organizations, across professional disciplines, and up through system of systems mission area perspectives.  SBA enables better information exchange and better-informed decisions by using computerized modeling, simulation and visualization tools to track the complex interactions inherent in such a broad trade space, surfacing key issues and insights to better empower decision makers.  SBA consequently reduces risk and enables a faster decision process, saving both money and time.During EMD the JSF Program will further SBA realization by enhancing the M&S tools and data contained within the Strike Warfare Collaborative Environment (SWCE), discussed in reference [6], and putting in place a key information sharing aspect of SBA -- the Distributed Product Description (DPD).The Weapon System Contractor (WSC) will provide the Distributed Product Description (DPD) of the JSF, describing its operational performance, logistical characteristics and cost.  The government will provide a modeling and simulation environment in which the DPD-based JSF will operate.  Additional information about JSF modeling, simulation and analysis plans during EMD are contained in reference [7].Definition of the JSF DPDJSF DPD ConceptThe JSF DPD will be a distributed collection of the most current, authoritative JSF information available, provided to users via web technology such that it appears as a single, logically unified product representation.  As depicted in Figure 1 below, the DPD is not intended to be a separate database off to the side of day-to-day engineering and program decisions.  The goal is to use the DPD, and other shared information (e.g., common threat and scenario databases) as the hub of the entire Integrated Product and Process Development (IPPD) process.Figure  SEQ Figure \* ARABIC 1.  JSF DPD at the Hub of the IPPD ProcessInformation sharing is a key tenet of SBA and the government has a keen interest in the timely, accurate and coherent sharing of information about the JSF.  The DPD  provides authoritative system information once, in a single format, to allow its easy and repeated use by various team members with a need for this information.   The DPD will provide a shared view of the product’s developmental state to all its users, throughout the remainder of the JSF acquisition process.  Hence, the DPD will facilitate collaboration across the JSF enterprise.  The JSF DPD will contain the most authoritative information about the JSF and be used to build, modify, and/or configure the JSF Suite of Models and Simulations.GoalsThe government’s goals in having the contractor develop a DPD are to:Provide timely inputs to JSFPO personnel and MS&A tools, resulting in shorter decision cycle times.Improve the traceability (i.e., validation) of JSF representations.Increase information coherency, reducing the number and extent of potential misunderstandings across the JSF government/industry team.Reduce manual data translations to yield lower translation costs and increased productivity.Make information more readily retrievable throughout the JSF life cycle, saving resources and facilitating better informed decisions/actions.Scope of the JSF DPD EffortThe DPD will describe the JSF to the extent required by the tool suite it feeds.  The JSF DPD must provide the most authoritative JSF information currently available, at various levels of resolution, throughout the JSF development cycle: from requirements, through EMD design iterations, to “as built” and tested.  The JSF DPD is not intended to describe the JSF’s operating environment.  That is, the JSF DPD will not describe the characteristics of the threat air defense system; this data will come from other sources, such as the threat section of the authoritative systems data base.To the authors’ knowledge, the JSF DPD project will be the first implementation of a coherent DPD by a DoD acquisition program.  For an initial implementation, it would not be practical to expect the DPD to support all functions and activities of the JSF extended enterprise.  Rather, the JSF DPD will be developed to provide at least that information needed to represent the JSF in the SWCE and Suite of M&S, still an aggressive goal.  This suite of tools spans the mission effectiveness, cost and supportability domains.  The suite is evolving and will continue to do so.  As of August, 2000 it includes the tools shown in Table 1.Table  SEQ Table \* ARABIC 1. SWCE Suite of Models and SimulationsAcronym/Common NameNameDescriptionACQUIREACQUIREEngineering-level electro-opticsASMAircraft Sustainability ModelReadiness- based spares modelAFMSS/ARAir Force Mission Support System /Auto-router Mission management toolsetBRAWLERBRAWLERAir-to-air analysisCALMConsolidated Air Load ManifestLoad optimization for airlift aircraftCFAMCombat Forces Assessment ModelWeapons allocation modelCOVARTComputational Vulnerability and Repair TimeVulnerability modelDIADSDigital Integrated Air Defense SystemHi-fi IADS representationDISAMSDigital Infrared Seeker and Missile Sim.IR guidedmissile performanceEADSIMExtended Air DefenseSimulationC2, C3, ISR, attack operations and TMDESAMSEnhanced Surface-to-Air Missile Sim.Hi-fidelity threat SAM representationFASTGENFast Shotline GeneratorVulnerability modelFLIR 92FLIR 92Electro-opticsGIANTGPS Interference And Navigation ToolGPS interference modelJCCMJoint Common Cost ModelCostJCOREJoint Services Cost Oriented Resources Estimating ModelCostJIMMJoint Interim Mission ModelJSF virtual environment and analysisJOSTEJSF Operating and Support Technologies Eval ModelCost and riskJVSJSF Virtual SimulatorVirtual cockpit LCOMLogistics Composite ModelAircraft support operations and resources.LOTRANLowResolution TransmittanceAtmosphericMIL AASPEM-IIMan-in-the-Loop Air-to-Air System Performance Evaluation ModelHigh-fidelityM-I-L threat fightersMODTRANModerateResolution TransmittanceAtmosphericMOSAICModeling Sys. for Advanced Investigation ofCountermeasuresSignatureRADGUNSRadar-Directed Gun SimulationRadar directed gunsRCHEMResidual ChemicalHazard Environment ModelChemical exposure modelSHAZAMShazamEndgame HE fragmentationSPIRITSSpectral Inband Radiometric Imaging of Tar-gets and ScenesSensorsTHUNDERThunderCampaign analysisTo build a model requires both input data and the algorithms (i.e., methods) that operate on this data to produce an output.  The JSF DPD must therefore include JSF data, algorithms (including look-up tables) and possibly, where it is the most primitive and authoritative information source, software source code (e.g., for flight control or sensor integration functions).  As further discussed in Sub-Section 5.4, product models and process models are not included in the initial JSF DPD.DPD Implementation DPD DevelopmentThe initial JSF DPD will be built by the WSC during EMD.  As noted above, it will include all of the JSF information required as inputs to the SWCE Suite of Models & Simulations.  In the case of government furnished equipment (GFE), such as the propulsion system, the government will provide the WSC with the verified and validated information pertaining to the GFE that is needed for inclusion within the DPD.  The JSF WSC is expected to ensure that:information contained in the JSF DPD is coherent, andduplication of data within the DPD is  kept to an absolute minimum.Coherency is expected in terms of semantics, syntax, levels of resolution (granularity), and integrity among interdependent attributes.  As the developer and maintainer of the JSF DPD, the contractor will be responsible for the data engineering and information modeling (a.k.a data modeling) necessary to achieve this coherency.  The JSFPO understands that to accomplish this task the contractor will require access to government personnel who understand the information requirements and contexts of each tool in the JSF SWCE SoM&S, and will ensure these subject matter experts (SMEs) are available for integrated information modeling sessions.  For broad understanding and utility, the data model is expected to be developed in a standard notation (e.g., Universal Modeling Language [UML], STEP EXPRESS) and shall include a glossary (dictionary) defining the model's semantics.All information within a DPD will be described in such a way as to make clear its appropriate uses (e.g., with metadata as described in data templates from DMSO’s VV&A Recommended Practices Guide).  The provision of such descriptions will reduce the likelihood of DPD information being misused and thereby causing incorrect understandings, inaccurate representations and flawed decisions.  It is the JSF Program’s intention that all representations of the JSF be traceable to authoritative information as part of the verification and validation process, with sufficient supporting documentation to prove this.Data Interchange With DPDAs the developer and maintainer of the DPD, the contractor will define the machine-readable data interchange formats (DIFs) by which information will be deposited in, and withdrawn from, the DPD.  A DIF provides a common, intermediate format by which various categories of DPD information can be described.  DIF requirements will be derived from the common information model discussed above, which specifies the semantics and syntax of DPD information.  These intermediate formats can be readily converted to any number of related output formats without loss or distortion of content using appropriate translation procedures and/or software.  Thus, the native data formats of JSF databases and development tools can be maintained, with the DIF specifying the format by which data is exchanged.  A depiction of DIF-based information exchange, adapted from the SBA Road Map, is shown in Figure 2.Figure  SEQ Figure \* ARABIC 2.  DIF-based Data Interchange with DPDThe structure of each DIF and its data contents will follow formal or emerging commercial standards (e.g., XML Schema; XML Document Type Definitions [DTDs]; ISO 10303 Product Data Representation and Exchange standard [STEP]) to the maximum practical extent.  The mapping and translation of DPD information, delivered in a DIF, into any tool-specific internal formats is the responsibility of the tool owner, not the DPD.DPD Access4.1  DPD “Delivery”The DPD will be an evolving information source throughout the JSF development.  “Delivery” of the initial JSF DPD is expected during the early months of EMD.  The accomplishment of this task is defined as:Making the DPD electronically accessible to authorized government  personnel;Demonstrating that the DPD satisfies the requirements listed in the JSF M&S Support Plan [7] (e.g., scope, data model, coherency, glossary, metadata)Providing appropriate DPD documentation, including the data model and instructions for using the DPD;Training JSFPO-designated personnel in use of the DPD and its associated Resource Access System, andDemonstrating the end-to-end use of the DPD to communicate an evolution in the JSF design and consequent assessments using a portion of the JSF SoM&S.The WSC will ensure the JSF DPD information is kept current as the JSF designs, employment concepts and support concepts evolve during EMD.  Since DPD information will be the information hub of the JSF development process, it is expected that all new versions, or proposed changes to existing versions under evaluation by the government-industry team, will be immediately available in the DPD.4.2  Resource Access SystemIt is anticipated that the JSF Resource Access System (RAS) will include the following user interface functions:access controls, preferably using Public Key Infrastructure (PKI) technology;an information map, search tools and glossary to allow users to find and understand information;a presentation of the various JSF versions and variants represented in the DPD, and the ability to search and select among them;preferably, subscription and trigger mechanisms so users can elect to be alerted when changes occur in specific data fields of interest;parsing tools to allow user-tailored display and download;preferably, depictions showing the expected time to download a selected data set and, once underway, a representation of the progress of the download and expected time remaining.Figure 3 depicts user access to DPD information via the RAS.  The DPD information model, configuration rules and aggregation rules will play key roles in allowing users to navigate the DPD information set and parse, display and download the information they desire.  The JSF Repository Access System is discussed in more detail in references [6] and [7].Figure  SEQ Figure \* ARABIC 3.  DPD Access via the RASApplication Use of DPD Information5.1  Tool-Specific Processing RequirementsThe information available within the DPD will be accessible to users in a common format defined by a DIF, but may be used in several different ways by individual modeling and simulation applications (tools).  These tools may be considered as comprising three classes.The first class of tools are generic data-driven models and simulations that need their databases populated with JSF parameters, but do not require any software development to represent the JSF.  Examples of such tools are Thunder and JCCM.  The data fields within the DPD must be semantically mapped to the correct data fields within the individual tool’s database and some syntactical translation may be required to get the parameters into the form (units, resolution, aggregation) required by the tool.The second class of tools are models and simulations that require the development or modification of software to represent the JSF.  Examples of such tools are MIL-AASPEM II and Brawler.  Software source code is developed to map into an application’s internal software structure, and then compiled with the application's other source code to provide an executable application.  This is the software that has been termed by many (e.g., references [2] and [8]) a Product Model or Digital System Model.  These models and simulations will also require sets of input parameters in the same manner as the first class of tools discussed above.The third class of tools comprises complete, JSF-unique simulations which may be federated with other simulations to accomplish a given objective.  The JSF Virtual Simulator is an example.  Information from the DPD will be used to develop or modify such a simulation, and, as in the other two classes, to provide input data sets.Figure 4 provides a simplified depiction of the process for providing JSF representations, showing the alternate paths that may be followed.  This figure was developed in cooperation with the two WSCs competing in the JSF Program’s current Concept Development and Prototyping (CDP) phase.Figure  SEQ Figure \* ARABIC 4  Process for Providing JSF RepresentationsAnother perspective on the activities performed with DPD information is provided in Table 2, listed in order of increasing complexity and work.Table  SEQ Table \* ARABIC 2.  Activities Performed with DPD InformationDirect InitializationDirectly initialize an application without translation.  The application may be a generic data-driven model (e.g., Thunder) whose database is populated directly with JSF parameters.Translation, then initializationTranslate the information received from the DPD into the form required to initialize the application (per its own internal data structures).  This may be the case with a generic data-driven model or a previously developed JSF DSM or JSF simulation.DSM development or modificationUse the DPD information to develop or modify a Digital System Model (DSM) for use within a particular application (e.g., Brawler).  DSM software source code is developed to map into an application’s internal software structure, then compiled with the application's other source code to provide an executable application.Simulation developmentDevelop or modify a simulation (e.g., virtual FMS cockpit) for use in a simulation federationReuse OpportunitiesEach of the blue boxes in Figure 4 represents an opportunity for reuse.  To achieve optimum cost-effectiveness for the JSF SBA effort, reuse must be maximized (and work minimized).  Previous discussions of the SBA concept have not explored the complexity of reuse opportunities represented in Figure 4.The information in a JSF DPD has a broader potential for re-use than any of the application-specific artifacts that may be developed from it.  However, starting from the primitive information in the DPD also requires the greatest degree of work.  As a rule of thumb, the further left in Figure 4 process that someone has to go to get what they need, the greater the work required to get to the payoff point – the results from a model, simulation or federation execution.Hence if a person wishes to minimize the work required to get the answer he or she seeks from a given model, simulation, or federation execution, they should seek to reuse the resources listed in Table 3 in the order of  priority that they are listed.Table  SEQ Table \* ARABIC 3 Prioritized Reusable ResourcesPriorityResource1Results from a previous execution that meets requirements2An executable application configured with both software and data to reflect current JSF design, initialized per an appropriate scenario3An application configured with both software and data to reflect current JSF design, but requiring initialization with data for an appropriate scenario4An application configured with software to reflect current JSF design, but requiring initialization with an input data set that reflects current JSF design parameters and an appropriate scenario5A software component that reflects current JSF design that can be used as a JSF model in an existing application (model or simulation).6Mappings and translations to convert JSF parameters stored in the DPD into input data sets7Mappings that relate DPD data elements to application database elements, but without needed translations8JSF DPD information aloneThe above list is somewhat simplified, for various complex combinations are possible, but it illustrates a logical rationale for seizing reuse opportunities in the most cost-effective manner.Digital System ModelsA Digital System Model (DSM) is an actual software implementation of data and algorithms (methods) that represent a product’s attributes (e.g., material, behavioral, cost), developed to operate within a specific model or simulation.  DSM is synonymous with product model.  In Table 3 above, DSMs are the resource corresponding to reuse priority 5.Each JSF DSM will be based on common, authoritative information about the JSF provided in the DPD.  This traceability will support the verification and validation of the model.Exclusion of Application Specific Components from the JSF DPDElements in the JSF DPD are the most primitive, authoritative JSF information for a given level of resolution and are provided in a common form usable by a broad range of DPD consumers.  Based on our experience and understanding to date, the JSF Program has chosen to not include application-specific mappings, translations, input data sets and DSMs within the definition of the JSF DPD for four reasons:Application-specific mappings, translations, input data sets and DSMs are not resources which can be commonly used by multiple applications.Since they are application-specific, there is no reason to develop a common, intermediate format (DIF) to interchange them, a key SBA concept for DPD access.If DSMs were included, logic would compel including all other application-specific artifacts (e.g.., mappings, translations, input data sets, execution results) in the DPD as well.Given the differing and complex nature of the components under consideration and their different purpose, requirements, reuse potential, interchange mechanisms, configuration management considerations and business cases, grouping all of these under the single term DPD is undesirable from both a conceptual and system engineering perspective.An objection that has been raised to excluding DSMs from the DPD involves the fact that giving someone a DSM, rather than the source information itself, is less likely to result in misuse of the information and misrepresentation of the product.  That is true, but it is orthogonal to the DPD definition issue raised here.The exclusion of process models from the JSF DPD is largely due to the practical resource, management and risk constraints inherent in this initial DPD implementation.  However, the authors note that the complexity of the many different processes involved in any acquisition program may argue for a similar parsing.The JSF Program recognizes that its narrower content definition for this initial JSF DPD disagrees with some earlier SBA concepts, but a broader DPD definition including the other application-specific components would disagree as well, and consistency argues we choose one or the other.  This DPD definition was arrived at by reasoning through complex implementation considerations in the context of real-world system engineering practice by leading aerospace manufacturers working on a major acquisition program.  The authors believe the emergence of such issues is healthy and is to be expected when attempting to implement as far-reaching and comprehensive a paradigm as SBA.  Indeed, prematurely locking into particular terms, definitions or architectural constructs can be harmful.The JSF Program hopes that this project advances the state of the practice for SBA and also promotes a robust and constructive dialog regarding SBA, including its architectural concepts.  When the SBA Roadmap was published, it was acknowledged that “the entire concept has yet to be defined and implemented” [3] and re-examination of the DPD definition is invited in reference [9], where the authors state, “The definition and ConOps of DPDs will evolve as a variety of users experiment with the concept.”Strategy for Providing Application-Specific ComponentsOf course it is most cost-effective to have DSMs and translation software developed only once for each of the various SWCE models and simulations, and the JSF Program will follow such a strategy.  The government will require the contractor to develop non-proprietary DSMs, where appropriate, for the SWCE SoM&S.  The WSC will also be responsible for establishing any needed translation capability in the most cost-effective manner.However, this is not to imply that the contractor will be the only party to draw information from the DPD.  Several other translations and DSMs will be developed by the government during EMD.  By doing so, the government will be able to verify DPD utility and be better prepared for transition to new models (e.g., JMASS) that may be added to the SWCE Suite of Models during EMD.  The government also expects to routinely configure the SWCE models and simulations with parameters drawn from the DPD and expects the contractor to propose information element mappings to ensure this is done correctly.  The government will coordinate with the contractor to ensure the most cost-effective approach to this task.Within need-to-know constraints, the JSF Program intends to make both the DPD and all application-specific artifacts available for reuse via the RAS.Assuring Authoritative RepresentationsVerification, Validation and Accreditation (VV&A) processes are used to develop a clear understanding of the strengths and weaknesses of the tools being used and the bounds within which results are credible.  VV&A forms a firm foundation for the development, test and evaluation, and training requirements for the Joint Strike Fighter when combined with:disciplined configuration management of both models and data, anda focused data and model improvement program which addresses areas of weakness which adversely impact the quality of analysis.All JSF simulations and application-specific components, including DSMs, will be verified and validated per the VV&A procedures specified in references [7] and [10].  V&V histories will be documented in accordance with this guidance.  The WSC will provide complete traceability of the JSF representation back to the most authoritative information source, the DPD.  In the case of government-developed software based on DPD information, the WSC will be given the option to review it and provide an accreditation recommendation to the government.Sound management practices, supported by these VV&A procedures and with the DPD metadata provisions discussed in sub-section 3.1, should prove effective in ensuring all JSF representations developed from the DPD are authoritative.SummaryDuring its upcoming EMD phase, the Joint Strike Fighter (JSF) Program will take several major steps forward in its implementation of SBA.  Among these is the development and use of a coherent Distributed Product Description, or DPD, to serve a wide range of users, models and simulations.DPD implementation planning has reinforced the expectation of significant benefits to the JSF Program.  Concepts have been explored and matured, implementation tasks have been defined, and issues have been identified.In addition to directly benefiting acquisition of the JSF, the implementation of the JSF DPD project will advance the state of the practice for SBA and promote a robust and constructive dialog regarding SBA, including its architectural concepts.ReferencesN. E. Karangelen, “The Simulation Based Acquisition Vision – A Brief Tutorial,” proceedings of NDIA Workshop on Simulation Based Acquisition, Orlando, March 1998.A Roadmap for Simulation Based Acquisition – Report of the Joint Simulation Based Acquisition Task Force, Acquisition Council Draft for Coordination, December 4, 1998.R. Frost and D. Thomen, “Simulation Based Acquisition, the Road Map,” 1999 Spring Simulation Interoperability Workshop, March 1999.R. R. Lutz and J. F. Keane, “An Architecture for Simulation Based Acquisition,” 1999 Spring Simulation Interoperability Workshop, March 1999.S. Olson, “Simulation Based Acquisition (SBA) – A U. S. Overview and Industry Perspective,”  proceedings of the SMi Conference, London, March 2000.J. E. Coolahan, F.T. Case, and R. J. Hartnett, “JSF Strike Warfare Collaborative Environment (SWCE),” 2000 Fall Simulation Interoperability Workshop, September 2000.Modeling & Simulation Support Plan (MSSP), Joint Strike Fighter (JSF), Version 4.00, Joint Strike Fighter Program Office, August 2000.Air Force Instruction 16-1002, “Modeling and Simulation Support to Acquisition,”  June 1, 2000.R. R. Lutz and J. E. Coolahan, “Developmental Concepts for Digital Distributed Product Descriptions,” 1999 Fall Simulation Interoperability Workshop, September 1999.VV&A Recommended Practices Guide, Year 2000 Edition, Defense Modeling and Simulation Office, http://www.msiac.dmso.mil/vva/.Author BiographiesCAPTAIN JAMES W. HOLLENBACH, USN (ret),  holds a BS in Mechanical Engineering from Rutgers University and an MS in Aeronautical Systems from the University of West Florida.   A Naval Aviator, former EA-6B squadron commander and DoD Acquisition Professional, he has devoted much of his professional life to analyzing, defeating, developing or managing complex information systems.  During his career he has managed over $250M in projects addressing standards, services, software and infrastructure in the areas of C3I and M&S.  As Director of the Defense Modeling and Simulation Office from 1994 to 1998, he led development of the DoD and NATO M&S Master Plans and key initiatives such as the High Level Architecture, Conceptual Models of the Mission Space, and Synthetic Environment Data Representation and Interchange Specification.  His company, Simulation Strategies, Inc., provides modeling, simulation and enterprise integration expertise to government and industry.LIEUTENANT COLONEL ROBERT J. HARTNETT, JR., USAF, is the Chief of Modeling, Simulation, and Analysis for the Joint Strike Fighter Program.  LtCol Hartnett earned a BS degree in Computer Engineering from Tufts University, an MS in Systems Management from the Air Force Institute of Technology, and an MS in Management from Troy State University.  A career Acquisition Professional, he has over 16 years of military experience in a broad range of complex simulation systems.  LtCol Hartnett has worked as both engineer and program manager in complex modeling and simulation areas ranging from the Battlestaff Training aspects of major wargaming centers, to the detailed computer systems engineering of range threat emulators, as well as the connectivity and information dissemination issues for numerous C4I systems.  He also served his time in the Pentagon as a Program Element Monitor (PEM) for HQ USAF.  The Joint Strike Fighter is the first aircraft program in history to use modeling and simulation in such a deep and integrated fashion, and LtCol Hartnett’s combined Government and Industry team is the catalyst for major changes in DoD acquisition practices.