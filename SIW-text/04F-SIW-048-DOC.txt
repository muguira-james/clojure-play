OOS C4I Adapter vs. the SISO C4ISR TRM: A Comparative AnalysisRobert L. Wittman Jr.MITRE CORPORATION3504 Lake Lynda Drive, Orlando, FL 32817321-235-7601 HYPERLINK mailto:rwittman@mitre.org rwittman@mitre.orgStephen Lopez-CoutoProgram Executive Office-Simulation Training and Instrumentation Command (PEO-STRI)12350 Research Parkway, Orlando, FL 32826407-384-3926stephen.lopezcouto@peostri.army.milKeywords: OneSAF, Computer Generated Forces (CGF), Semi Automated Forces (SAF), Command, Control, Communication, and Computers, Intelligence, Surveillance, Reconnaissance (C4ISR), Technical Reference Model (TRM)ABSTRACT: The Simulation Interoperability Standards Organization (SISO) Command, Control, Communications, Computer, Intelligence, Surveillance, and Reconnaissance (C4ISR) study group produced a report following the Fall 2000 Simulation Interoperability Workshop (SIW) that called for the definition and creation of a C4ISR  Technical Reference Model (TRM). This TRM was conceptualized as a reference and catalyst for C4ISR and Modeling and Simulation (M&S) interoperability. The OneSAF Objective System (OOS) includes a C4I Adapter product that allows the simulation to stimulate and be stimulated by the Army’s tactical C4I systems, encompassed by the Army Battle Command System (ABCS). This paper provides an evaluation of OOS’s information exchange capabilities against the capabilities described by the SISO C4ISR TRM to strengthen both the adapter’s design and the TRM. Ultimately the report will compare the OOS C4I Adapter’s architecture against each of the information exchange categories described by the TRM (Persistent, Non-Persistent and Exercise Control Data), the levels of interoperability discussed within the TRM and any other applicable items covered by the TRM. IntroductionThe OneSAF Objective System is the Army’s next generation entity level simulation. As part of the comprehensive simulation system OneSAF includes a full complement of tools supporting the pre-event, exercise execution, post-event and software product-line maintenance phases.  An important part of this toolkit is the OneSAF C4I Adapter.  The C4I Adapter includes a number of components that allow connectivity and interoperability with systems of the Army Battle Command System (ABCS). At OneSAF Final Operating Capability, scheduled for October 2005, the supported systems include the Force XXI Brigade and Below Battle Command System (FBCB2) and the Army Tactical Command and Control Systems (ATCCS).   This paper compares the services and functionality of the OneSAF C4I Adapter with the services outlined within the SISO Technical Reference Model in order to strengthen the technical reference model as well as the overall architecture of the OneSAF C4I Adapter.BackgroundEarly in the OneSAF development process the government team directed the reuse of the WARSIM C4I Adapter.  Although not perfect the original WARSIM adapter gave a working capable base to interface to the ATCCS systems and begin the extensions necessary to support an FBCB2 interface.  Additionally, members of the WARSIM C4I Adapter team had accumulated a wealth of knowledge of protocols, mission threads, and Army C4I systems that will be supported by the OneSAF C4I Adapter.  For a description of the evolution and modifications made in support of the OneSAF system please see [4].   OOS Simulation to C4I Technology Compared to the SISO C4ISR Technical Reference Model (TRM)The goal of the TRM [1], “is to assist programs in achieving more effective level of portability and  interoperability in the following ways: By providing a consistent and common lexicon for description of interoperability requirements between diverse systemsBy providing a means for consistent specification and comparison of system/service architectureBy providing support for commonality across systemsBy promoting the consistent use of standardsBy aiding in the comprehensive identification of information exchange and interface requirements. “The House DiagramBefore directly comparing the C4I Adapter with the Technical Reference Model we categorize the OneSAF C4I interoperability architecture and use the now familiar “House Diagram” within Figure 2 to provide additional context.  Consistent with the categories provided in [1] the OOS approach focuses on reusing and leveraging common C4I and industry standard capabilities.  These reuse components include the DII COE Common Message Processor segment, the Comm. Server, the Command and Control Registry (C2R) or  the Lightweight Data Access Protocol (LDAP) Data Interchange Format (LDIF) file for message translation, protocol conversions, and C4I adapter initialization.  Figure 1: The OneSAF PLAF The OOS reliance on these products is shown explicitly in the OOS Product Line Architecture Framework identified by a COE Services Middleware box within the OneSAF Common Services Layer. [PLAF V18]  The central theme is to reuse and enhance existing products through a controlled process that may in the short-term be more expensive due to coordination and collaboration costs, but is expected in the long-run to reduce the overall software lifecycle costs.  The reduction will be the result of agreeing to and using a single software implementation vice developing parallel implementations that may give slightly difference results and have to be maintained and evolved separately.  Figure 2: The “House Diagram” for Interoperable Shared Systems [2]The next 5 subsections discuss each of the House Diagram interoperability building blocks; starting with Reusable Components and Interfaces and working down through Architecture Alignment.Reusable Component InterfacesTo support the objective of the simulation and C4I system shared solution concept the House Diagram focuses on Reusable Component Interfaces.  This concept drives to the notion of specifying necessary services, the interfaces to those services, and the data necessary to trigger and then receive the value added data.  At one level one may specify these services and interfaces with little or no implementation specific detail such as a programming language binding, specific hardware or software environment, or performance specific information.  This of course leaves the decisions about each of the services up to the vendors providing these services.  To assist the vendors of shared solutions architects may provide additional non-functional or quality specifications associated with the shared components thus providing additional constraints on the components providing the services through the required interfaces.  The quality requirements may include performance and scalability, openness, portability (across hardware and software language platforms), security, reliability, etc.  These services once defined and described can then be evaluated for use in other systems.  For the OneSAF Objective System, reusable component interfaces span file-based data interchange as well as dynamic runtime interchange specifications.  To give an example of file-based exchanges we point to the initialization information used to instantiate an OOS execution where C4I interfaces are necessary.  The C4I Adapter uses the unit addressing specifications that are part of the LDIF and are also used by the real-world C4I systems.   The OneSAF product line also relies on a set of well-defined common services to support higher level simulation-based tools.  Similarly, the C4I adapter product uses translation based services made available through the DII COE Common Message Processor (CMP) to support translation based services between the OOS internal Command and Control Runtime Data Model (C2DM) and the real-world C4I message sets.  This type of reuse was planned as part of the early architecture development and was an essential item in selected the WARSIM C4I Adapter product for use by OOS.  Finally, OOS makes use of the High Level Architecture RunTime Interface (RTI) specification and implementations and the Distributed Interactive Simulation (DIS) specification to federate with and leverage external legacy simulation investments.       Common Standards & ToolsBy reusing DII COE segments and software components OneSAF not only leverages paper based specifications, but also uses the existing implementation. This reduces errors resulting from a different interpretation of the specification or other software-based errors.  Here again the Common Message Processor provides a useful example.  By reusing the CMP component OOS leverages the existing implementation of a variety of message based standards such as USMTF, JVMF, etc. message sets.  The advantages are clearly a single baseline; however the disadvantages for specific programs come in the form of portability, performance, and others.  Common Data/Object ModelsIn a perfect world the simulation community would have a single completely aligned data and object model as would the C4I community.  The two communities could then efficiently converge on a single set of models that comprehensively and unambiguously cover the two domains.  The result would be a single set of models providing a taxonomy and ontology that the domains could use to effectively communicate with one another.  Unfortunately this is not the reality we live in.  Today the C4I community is evolving a number of message standards and a number of databases that house independent data and object models.  The simulation as well has multiple data and object models that continue to evolve at different paces.  In recognition of this situation, and to allow both domains to evolve at their own pace OneSAF is developing its internal models with the intent of being able to support the data necessary to populate JVMF and USMTF message sets.  To do this OneSAF is developing a Runtime Data Model (RDM) comprised of a set of sub models used to distribute and define the set of data available for model use, C4I interface use, data collection, and for human interaction.   The RDM component of particular interest is the Command and Control Data Model (C2DM).  This model specifies the data that is used for OneSAF command entities to command and control subordinate entities, and to allow subordinate, peers, and superior entities to interact via report and order message types.  The C2DM is used to provide a mapping to the real-world command and control messages that must be supported in order to appropriately interface to FBCB2 and the ATCCS systems. Processes for Alignment and MigrationOneSAF is actively pursuing data alignment such that the data generated within OneSAF is sufficient to populate C4I messages used by real-world C4I systems.  Additionally, these messages must be consistent with the operational threads that the messages support.  To ensure the models support the necessary information the OneSAF Knowledge Acquisition and Engineering team uses the Battle Command and Control Operational Architecture (BCCOA) Operational View (OV) artifacts and other authoritative documents to drive the modeling process.  The mission threads, the messages necessary to execute the threads, and the required data are analyzed and steer the data generated within OneSAF.  Although the specific internal messages may not be the same as the real-world messages for performance reasons, the required data is generated and available for packaging into the correct formats by the C4I Adapter Product.  Also as part of the alignment process OneSAF generated a C4I Support Plan. This plan is mandated by the Army’s Acquisition process, for systems interfacing with C4I systems to identify interoperability issues, supportability issues, and sufficiency issues between OneSAF and the C4I systems with which it will interact.  This plan identified issues and recommended collaborative solutions involving the OneSAF development team as well as the C4I system developers. Please see [3] for a detailed discussion of the OneSAF C4I Support Plan.  Finally OneSAF is actively involved in the Army Software Block 2 development process.  As part of this OneSAF is proactively aligning data output with specific message sets and is also investigating specific interfaces to the Automated Information Server (AIS) and its Publish and Subscribe Services (PASS) that are being developed as part of “ABCS 6.4 Good Enough”.Concurrently OneSAF actively participates to refine the Battle Management Language.  This effort hopes to create a machine parsable Battle Management Language where unambiguous orders can be sent and iteratively refined by subordinates ultimately resulting in orders to individual teams and soldiers.  The benefit to the modeling and simulation community is that this same language can be used by automated command entities to refine orders intended for semi and fully automated subordinate entities.    Alignment of ArchitecturesThe first step in the alignment of the OneSAF and C4I architectures is the identification of C4I and simulation interactions, interfaces, and data transmissions.  A systematic analysis of these issues is the purpose of the C4I Support Plan as mentioned in section 3.1.3.  The C4I Support Plan mandates the use of specific DoD Architecture Framework (DoDAF) Operational Views (OV), System Views (SV), and Technical Views (TV).  The OneSAF C4I Support Plan provided this analysis and identified specific issues for resolution to enable eventual architectural alignment across the simulation and C4I enterprise.  These issues span the pre-exercise, exercise execution, and post-exercise lifecycle and include environmental locale and representation alignment, checkpoint/restart, real-time and simulation time alignment, message passage and data alignment, and common component development. [3]   Using these overall architecture alignment progressions and concepts as a backdrop we now move into a specific comparison of the OneSAF Objective System C4I Adapter Product and its components with the C4ISR Technical Reference Model.  Section 3.2 provides this detailed comparisonFunctional InterfaceThe SISO C4ISR TRM defines the functional interface as the data that flows between the C4ISR and simulation systems. The medium in which this data is passed is unimportant. As new systems are designed and fielded (usually on new hardware) the medium and format in which data is transferred does change, while the types and content of the data which is shared remains relatively constant. The C4ISR TRM was designed to be easily adaptable by new systems as they undergo design; as such it is presented at a level high enough to fit the various consumers. This portion of the paper will traverse through the TRM’s Functional Interface Graphic (FIG) and highlight the places where the data aligns or does not with what is used by OOS. The C4ISR SideThe TRM FIG is comprised of two main boxes, C4ISR System and Simulation System along with a set of interactions between those boxes. The C4ISR box does not describe in further detail the any of its contents. It is shown as an empty box that sends and accepts various types of data. That lack of detail is interpreted to mean that the internal system details are unimportant to simulation systems when shown at this level. On the C4I side OneSAF interacts with the Army Battle Command System (ABCS) of systems. While these systems are individually developed by different PM’s, they utilize a common set of tools that are provided by DII COE. These segments create a generally common message creation and transmission scheme among each of the systems. They all still have their stovepipes that must be dealt with (and are used where required by OneSAF), but some commonality is better than none.The Simulation SideThe simulation side of the FIG is populated with boxes that represent many of the general architectural pieces that the majority of simulations provide. Of those, the central and most important box is the Simulation and Models Module. Most of the run time interoperability between C4I systems and simulations occur through some type of model and the simulation engine. OneSAF was built as a composable system. Anyone can create an instance of OneSAF that provides them the tools that Figure 2: The TRM Functional Interface graphic (FIG) [1]they are going to use and nothing more (see Figure 2). OneSAF provides composable pieces that match almost directly those shown on the simulation side of the FIG. One large piece left off of the FIG is the C4I interoperability piece, what we call our C4I Adapter. This adapter is a tightly coupled component that fully fits into the OneSAF architecture. As its name implies it converts the simulation specific data (mostly fed from models) into messages that are sent to and from the ABCS systems. Data ExchangeThe primary reason for a simulation to evaluate the C4ISR TRM is to assist in the discovery and definition of the data exchanges that need to occur between the C4ISR systems and the simulation. The TRM contains four categories of data exchange: Simulation Service Interactions, Persistent Data, Non-Persistent Data and C4ISR System Service Interactions. OneSAF interacts with the Army ABCS systems using all four of these exchange categories. 3.2.3.1	Simulation Service InteractionsThe exchanges required under the Simulation Service Interactions category are mainly limited to pre exercise configuration types of data. The reason for this limitation is that the Army’s ABCS Systems are very strict about what actions they allow external systems to perform on them. There is really no way to “push” changes onto these devices.  The following list compares the Simulation Services described in the TRM with those provided by OneSAF. Simulation MetadataIn their current form none of the Army’s ABCS Systems allow for a simulation to configure or change their operation to run in a non real-time mode or to begin execution at a time other than the current time according to the C4I systems. For these reasons the simulation has no need to transmit any related metadata to the C4ISR devices. Time synchronization between the Adapter and C4ISR Systems is an important requirement though. If messages are not sent and received (verified via a timestamp) within a specific time variance relative to the tactical system’s clock, messages will be automatically dumped. This requires the Adapter to configure its “C4I time” clock via metadata originating from the ABCS Systems.Execution ControlThe TRM describes execution control data as that which would allow a simulation to start, stop, pause, checkpoint, accelerate, etc. a scenario while it is in execution mode. All of those features are available to simulations, but are not found in the ABCS systems. If OneSAF is paused, the time on the C4I systems continue as normal. When the sim is started again the simulation time and C4I time will be out of sync. To make up for this difference the C4I Adapter keeps track of the current sim time and the C4I time (see simulation metadata bullet above). VisualizationVisualization is a valid interaction as described by the TRM. For instance, the simulation could run a series of scenarios as part of a course of action analysis, when the best COA is found it could automatically transmit overlays to the C4I devices showing the tasks that need to be performed. OneSAF does not currently provide this type of functionality. Data CollectionOneSAF performs its data collection function in unison with its task of transmitting messages. When the Adapter parses a message it posts the data into the appropriate OneSAF database. The OneSAF data collector then has access to that data just as any other simulation data. There are no OneSAF tools beyond the C4I Adapter that participate in the collection of data from, to or between C4ISR Systems. Simulation EffectsOneSAF operates with C4ISR Systems in one of two modes: World Comms or Simulation Comms [Wittman, Lopez] The Simulation Comms mode requires that all message traffic between real TOCs and other real C4ISR systems must pass through the simulation before being received by the destination system. In this mode the simulation has full control of message routing and is able to apply whatever comms effects it desires onto the messages. The ABCS systems are tightly coupled to an LDIF. Different LDIFs are created based on the unit and the task organization of the unit using the system. Unless the simulation’s task organization and naming conventions are equal to the real systems the overall simulation to C4I interoperability scheme will fail. In the pre exercise simulation scenario development phase the units being played in the scenario must be identified and the appropriate LDIF must be loaded into OOS. From the LDIF the simulation must extract the Unit Resource Numbers (URNs) and other data that correspond to the entities that are going to be stimulating or stimulated by the tactical C4ISR Systems.   Within OneSAF a final critical interaction that must occur between the simulation and ABCS systems in this category happens at the runtime initialization phase. When the C4I Adapter is started it uses a set of Simulation API’s that were created by PM Common Software in order to affect the IP addresses of some of the represented devices in the ABCS’s TOC Boot Server. The simulation needs to “trick” the ABCS Systems into thinking that each of the devices being played in the simulation are as real as any other system in the exercise. The simulation API’s go into the routing tables and point the addresses of the simulated devices to the IP address of whatever computer is running that instance of the C4I Adapter. These API’s are going to have to change in order to work against the new ABCS 6.4 architecture. 3.2.3.2	Non-Persistent DataThe Non-Persistent data is effectively the core of the data that is exchanged between OneSAF and the C4ISR systems. All of the stimulation between the systems via messaging, the Publish and Subscribe Services (PASS) and in the past architecture, the JCDB, falls under this category. OrdersOneSAF presently supports a variety of two way messages between itself (all generated and acted upon internally by models) and the ABCS Systems. Presently, OneSAF supports a full two-way “Call for Fire” thread (originating from an FBCB2 or an AFATDS) and can receive overlays and display them on the PVD. The Overlay functionality will be extended to allow OneSAF to transmit overlays to the tactical systems.  ReportsOneSAF presently has the capability to create and transmit a number of report type messages. For example, an entity can drive around within the simulation all the while transmitting location reports that move an icon on an FBCB2’s PVD. If that entity spots an OPFOR entity it will automatically create and transmit a Spot/SALUTE report that will create a red icon on the FBCB2 display. OneSAF also has the ability to accept incoming report messages. If an FBCB2 sends that same entity an obstacle report the entity will check its current route against the position of the current obstacle and will adjust if necessary. ImageryOneSAF does not exchange any imagery data with C4ISR systems. TracksTrack data goes hand in hand with some of the report data listed above. OneSAF has (or will have by its FOC) the capability to create tracks of both ground and air units on the appropriate ABCS system. Unit DataOneSAF does not presently have the ability to update UOB data on ABCS systems during the execution of a scenario. This category was moved from persistent data to non-persistent data in the most recent update to the TRM, but from the OneSAF perspective it is still viewed as persistent (OneSAF can change its task organizations at runtime, but cannot presently update them on the C4I devices). The task organizations are matched during the pre-execution phase and remain static during execution. In the future the ability to update TOs on the fly may be implemented.  The C4I Adapter aims to act and communicate to the tactical devices in the same manner that they do. To do this it uses various DII COE products to create, transfer, receive and parse messages. The adapter is capable of handling and parsing any valid message that can be read by the Common Message Processor (CMP). In order to convert the tactical message data into a format that the simulation can understand (and vice versa) a “mapper” must be created prior to runtime. These mappers tell the C4I Adapter’s conversion engines exactly what the data needs to look like so that whatever is on the other end can read the data. Mappers also go steps further by handling conversion of types into other types where required. For example, if JVMF represents a position as a UTM location and OneSAF represents it as Lat/Long the mapper can perform that conversion. 3.2.3.3	Persistent DataPersistent data is by definition the information which is exchanged in the pre exercise phase of a simulation event and remains static throughout. This data should begin and end at a “steady state” between the C4ISR systems and the simulation system. This is not always the case, and as simulation technology matures the gap between persistent and non-persistent will diminish. The TRM classifies the following exchanges as persistent:Mission and Plan InformationOnce the simulation scenario has been developed, the pertinent information needs to be given to the C4ISR systems in the same manner that they would receive it during an operation. The UTO information should probably be included along with the mission and plan data, but was reoriented to be non-persistent. In reality a mission could also be classified as non-persistent as fragmentation orders can be received and completely alter the original mission. Communications PlanOneSAF does not specifically create any sort of communications plan. It does create internal communication networks, but these must align with the C4ISR networks or information exchanges will not be possible. The C4ISR networks are configured via the task organizations. Weather DataOneSAF has the capability to represent dynamic weather conditions. In a thin slice of time weather may be persistent, but it can rapidly change. There are presently no avenues with which to dynamically affect weather on any of the C4ISR systems that OneSAF interoperates with, but it is a stretch to consider weather data persistent. Terrain SpecificationIt is important to align the terrain between the simulation and the C4ISR systems that are involved in an exercise. The persistent portion of terrain is ensuring that the piece of earth represented is equivalent between the systems. Once execution begins terrain can become a very non-persistent thing. OneSAF has the ability to represent dynamic terrain; including creating deformations and having entities react to those changes. Presently that data cannot be pushed to the C4ISR systems, but it should not be precluded from being non-persistent. Those exchange categories show that not all of the exchanges classified as persistent may be relevant either now or in the future. It may be necessary for the TRM to be expanded to show those data interactions that are possible or will be possible. 3.2.3.4	C4I System Service InteractionsThe set of exchanges that are required by OneSAF under the C4ISR System Service Interactions category are mainly behind the scenes interactions and are viewed more as requirements to make things work instead of features that increase training. System Health/Heartbeat StatusThe FBCB2 system requires periodic heartbeats to be sent so that the other systems on the network know who is still alive and available. Depending on the configuration of the simulation exercise the heartbeat will not always have to be created by OneSAF, but the functionality will be included.  Component Service ProtocolsMany messages require acknowledgements that must be transmitted via the C4I Adapter. The Ground Tactical Communication Server (GTCS) handles many of those that fall under the handshaking category, but there are some instances where a message explicitly requires a reply to be sent. In those cases the Adapter will reply in a manner that will satisfy the sender.ConclusionIn general this analysis shows that OneSAF’s implementation aligns very well with the SISO Simulation and C4ISR TRM.  There are places, however, where we are proposing extensions to better support simulation and C4I interoperability. Our proposals include: Adding an Operator Notification interaction category.  This interaction category supports messages to C4I operators or simulation operators of interactions that cannot be handled via automated inputs.  Message notifications include simulation crashes, speed-ups, slowdowns, checkpoint/restarts or other events that cause C4I operators to take special actions.Adding a Platform Status interaction category to allow management and control of simulation and C4I network and platform assets from a single location.A closer look at the data exchange categories listed in the Functional Interface section. Specifically, the line between the exchanges categorized as persistent and non-persistent data may be somewhat fuzzier than those categories allow for.   References1. Carr, Frank; Caylor, Frank; Lacetera, Frank; Tolk, Andreas. C4ISR/Sim Technical Reference Model Sourcebook,  Paper 03F-SIW-124, 2003 Fall Simulation Interoperability Workshop.2. Griffin, A. Lacetera, J., Tolk, A., C4ISR/Sim Technical Reference Model Study Group Final Report, Paper 02F-SIW-022, 2002 Fall Simulation Interoperability Workshop.3. Wittman, Robert., Kelley, Hugh., Cane, Sheila. Simulation to C4I Support Plan Development: Experience Report. Paper 03S-SIW-135, 2003 Spring Simulation Interoperability Workshop.4. Wittman, Robert., Lope-Couto, Steve. C4I Adapter Reuse Experience Report. Paper 04S-SIW-038.doc, 2004 Spring Simulation Interoperability Workshop.5. OneSAF Objective System Product Line Architecture Framework Version 18, 17 July 2004.Author BiographiesROBERT L. WITTMAN JR. currently works for the MITRE Corporation supporting the OneSAF program.  He has been part of the U.S. DoD M&S community since 1990. He holds a B.S. in Computer Science from Washington State University, a M.S. in Software Engineering from the University of West Florida, and a Ph.D. in Industrial Engineering from the University of Central Florida. STEPHEN C. LOPEZ-COUTO is an engineer for the US Army’s Program Executive Office for Simulation, Training and Instrumentation (PEO STRI). He has been supporting the OneSAF program since early 2000. He holds a B.S. Degree in Computer Engineering from the University of Central Florida. 