 DOCPROPERTY "Title"  \* MERGEFORMAT data translation methodologies between the Draft Link-16 SISO standard, IEEE1278, and NATO STANAG 5602STANAG 5602 THe SIMPLE standardTesting to determine the level of Interoperability (IO) between separate Tactical Data Links (TDL) of different Platforms can be undertaken at three levels: through paper analysis, through the interconnection of ground rigs and through live trials. In Feb 96 the (then) Ad Hoc Working Group (AHWG) on NATO Common Interoperability Standards (NCIS) Testing decided that there was a requirement to define a single interface standard to support the second of the above levels of testing. This resulted in the development of a standard called the Standard Implementation for Multiple Platform Link Evaluation (SIMPLE), STANAG 5602 (Reference A).  This STANAG defines a protocol to provide the means for geographically (national and international) separated TDL assets (C4ISR, C2 and non-C2 platform test rigs) to exchange environment data and TDL messages in order to conduct detailed TDL IO testing. The STANAG supports the exchange of all current TDLs but predominantly the development and testing was orientated around Link 16.  Consequently the emphasis of this paper is on Link 16 aspects of the STANAG, although the principles are the same for any other TDL message set that is exchanged across a SIMPLE network.What are the methodologies behind SIMPLE?In order to conduct IO testing using live platform test rigs hosting operational host software two basic requirements have to be met:Firstly, the platform rigs need to be connected via a suitable and secure medium.Secondly, a methodology was required to exchange network, simulated entities (environment data) and TDL messages.It was found that the IEEE 1278 .1 & 1a (Distributed Interactive Simulation (DIS)) standards (References B & C) did not provide the means to fulfil the second requirement in its entirety, as it did not specify Protocol Data Units (PDUs) that would support the exchange of TDL messages.  However, there were several PDUs which provided the means to fulfil the requirement to exchange simulated entities (environment data).Therefore, so as to reduce the risk and development time, it was recommended that an existing standard, the SPAWAR Gateway protocol, which supported the exchange of TDL messages, should form the baseline for a new standard. TDL PacketsIn SIMPLE the methodology for exchanging TDL messages is to take the host generated message traffic from the MIDS/JTIDS terminal interface and repackage it for transmission across the SIMPLE network.  The receiving SIMPLE node extracts the TDL message traffic from the received packet and presents it to the host interface as if it had been received from a MIDS/JTIDS terminal.  DIS PDU PacketsA new packet definition (DIS PDU Packet) was added to the baseline protocol to support the exchange of PDUs for simulated entities (environment data).The content of SIMPLE DIS PDU packet remains faithful to the definitions in the IEEE standards, indeed part of the CM process for STANAG 5602 requires that the these standards be monitored to ensure that all amendments are reviewed and recommended for adoption as required.Although the SIMPLE community does not directly join or interact with the Simulation community it was felt that this alignment process was essential in the event, as is now the case, that PDUs to support the exchange of TDL messages were developed.  This would greatly reduce the effort and risk should it be decided to align the SIMPLE testing environment with the simulation environment by employing a single standard.How the TDL TESTing community employs dis In the SIMPLE testing environment simulated entities are normally generated centrally and distributed to all participants. These entities represent environment categories of Air, Surface (Maritime) Subsurface (Maritime), Land (Ground) and Space.  It should be noted that in many instances it is not necessary to generate entities to conduct IO testing and are generally only required to undertake testing associated with position such as TDL correlation.The IEEE DIS standard provides a large number PDUs many of which are not appropriate for SIMPLE testing, therefore the catalogue was categorised into three major groups, those that were mandatory, those that were desirable and those that were optional.The PDUs that were considered mandatory for transmission and reception are:  Entity StateStart/ResumeStop/FreezeAcknowledgeThere are two DIS PDUs that are classified as desirable for transmission and reception, the Electromagnetic Emissions and IFF/ATC/NAVAIDS (only layer 1 of this PDU is implemented) and to date only the latter PDU has been utilised. The remaining PDUs were categorised as optional for implementation. SIMPLE Interpretation of PDUsThe IEEE standard and the SISO Enumerations document define the fields and field values with the requirements of the simulation community in mind.  However, it has been found in practice their use in the SIMPLE testing environment are more specific and therefore, the STANAG provides guidance by annotating as mandatory where a valid, non-default value of a field shall be transmitted and optionally where a non-default value of a field may be transmitted. This philosophy was also extended to the specific field values so that implementers were not required to implement values that would never be used in the SIMPLE testing environment.  Three of the four mandatory PDUs have been clarified in this manner and are described below:ENTITY STATE PDUThis PDU is used to promulgate entities created by the scenario generator to other participants in a SIMPLE environment.  If a new entity is created in the scenario an ENTITY STATE PDU will be generated.  Whilst an entity exists in the scenario the normal rules for PDU generation and maintenance are extant.  When the scenario generator removes an entity then the PDU will cease being generated.  This simplistic approach obviates the need to implement the CREATE and REMOVE PDUs for the SIMPLE environment.The ENTITY-KIND field for this PDU has a range of 0-7 but in the SIMPLE environment only the following values are utilised with the indicated categorisation. ValueKindImp1PlatformM2MunitionOThe DOMAIN field identifies the Domain of the Entity Type and in the SIMPLE environment only the following values are utilised with the indicated categorisation.PlatformValueDomainImp1LandM2AirM3SurfaceM4SubsurfaceO5SpaceOMunitionValueDomainImp0 -11AllOSTOP/FREEZE PDUThe use of this PDU in the SIMPLE environment is designed to provide the capability to terminate or to freeze a simulation.  When a scenario is terminated it can only be started again from the beginning.  To support this requirement the following field definitions shall be used in the SIMPLE environmentThe REASON field has a range of 0-8 but only the following values are utilised with the indicated categorisation (any other value is invalid).  To terminate a scenario the field is set to = 2.  To freeze all entities at all sites i.e. a scenario freeze the field is set to = 1.  When the field = 1 it shall be used in conjunction with the FROZEN BEHAVIOUR field described below.BitReason to StopImp1RecessM2TerminationMWhen invoked the FROZEN BEHAVIOUR field is Mandatory and shall only be used to freeze all entities at all sites and is achieved by setting the field value = 0.  This will stop the simulation clock, cease transmitting any data on simulated entities and cease updating positions of existing entities. START/RESUME PDUFor the SIMPLE environment this PDU shall only be used to instruct all entities at all sites to leave a frozen state to begin participating in the simulation.  This will be achieved by setting the RECEIVING ENTITY ID field to the maximum value i.e. all bits set. What methodologies/interpretations will be necessary?transmitter pduThe premise upon which TDL IO testing is carried out in the SIMPLE environment is to interconnect live platform rigs to determine the level of IO for that combination of platforms and test criteria.  This premise would not change should the SIMPLE community adopt the DIS-J proposal.  MIDS/JTIDS terminals are not normally part of the configuration for undertaking TDL IO Testing.  Terminals are replaced with an emulator that provides only sufficient fidelity to ensure host/terminal and terminal/host-interfacing requirements are met, which can be different for each platform.  The emulator also undertakes PPLI generation and terminal Receipt/Compliance (R/C) processing.  A SIMPLE converter would then interface the emulator for the transmission and reception of the SIMPLE packets to and from other participants.For this reason it is likely that the Transmitter PDU would not be utilised except as a precursor to a Signal PDU, as it is not a requirement for undertaking TDL IO testing to emulate the JTIDS/MIDS terminal to such a high degree of fidelity.At reference D it states that a Transmitter PDU shall be issued in four instances all of which are required to establish or terminate a simulated JTIDS network. A simulated JTIDS network is not required in order to undertake TDL IO testing in a SIMPLE environment.  Therefore, if the Transmitter PDU were to be implemented in the interests of commonality with the simulation environment, one view would be that the PDU would only be issued when a participant commences or ceases generating Link 16 messages.  In this case TSA mode would be set to the lowest level of fidelity and all the remaining data item fields set to defaults.  However, that said, the decision on whether to implement the Transmitter PDU would rest with the TDL IO Testing Syndicate.signal pduThe Signal PDU could potentially replace the various TDL Packets relating to Link 16 currently employed to exchange TDL message traffic in the SIMPLE environment.  An initial assessment shows that the Signal PDU would fulfil the requirements for TDL IO testing. However, that said, the decision on whether to implement the Signal PDU would rest with the TDL IO Testing Syndicate.Data items mapping between the two protocolstransmitter pduThe SIMPLE methodology does not employ an equivalent packet to the Transmitter PDU but it is expected that this PDU shall be sent at the beginning and end of a transmission with multiple Signal PDUs in between.Although there is no data item mapping that can be undertaken for this PDU the data item implementations do need to reflect the unique environment in which it will be employed.  The table below represents one suggestion for the implementation of the data items for use in the SIMPLE environment.   The finalisation of the data item implementation will require a consensus from both the Simulation and SIMPLE communities.Transmitter PDU FieldsSimple ImplementationPDU HeaderProtocol VersionThis field shall be set to value 6 (IEEE 1278.1a-1998).Exercise IDSee Reference IEEE 1278.1-1995PDU TypeThis value shall be set in accordance with the PDU Type being reported.Protocol FamilyThis value shall be set in accordance with the PDU Type being reported.TimestampAbsolute time stamping shall be used. Additionally the time shall be referenced to UTC(USNO).LengthSee Reference IEEE 1278.1-1995PaddingThis field shall be set to zero.Entity IDSiteSee Reference IEEE 1278.1-1995ApplicationSee Reference IEEE 1278.1-1995EntitySee Reference IEEE 1278.1-1995Radio ID All bits set to 1Radio Entity TypeEntity KindAll bits set to 1DomainAll bits set to 1Country All bits set to 1CategoryAll bits set to 1Nomenclature VersionAll bits set to 1NomenclatureAll bits set to 1Transmit State 0 = OffInput Source 0 = OtherPadding This field shall be set to zero.Antenna LocationX componentAll bits set to 1Y componentAll bits set to 1Z componentAll bits set to 1Relative Antenna Locationx componentAll bits set to 1y componentAll bits set to 1z componentAll bits set to 1Antenna Pattern Type All bits set to 1Antenna Pattern Length All bits set to 1Frequency All bits set to 1Transmit Frequency Bandwidth All bits set to 1Power All bits set to 1Modulation TypeSpread SpectrumAll bits set to zero indicates that spread-spectrum modulation is not in use.Major 0 = OtherDetailSet all to 0 = OtherSystem0 = Other Crypto System 0 = OtherCrypto Key ID All bits set to 1 Length of Modulation Parameters  PaddingThis field shall be set to zero.Modulation Parameter #1Time Slot Allocation ModeAll bits set to 1Modulation Parameter #2Transmitting Terminal Primary Mode 0-NTR 1-JTIDS Unit ParticipantModulation Parameter #3Transmitting Terminal Secondary Mode 0=None Modulation Parameter #4Synchronisation State2=Fine SynchronisationModulation Parameter #5Perceived Transmit Time All bits set to 1Modulation Parameter #6Network Synchronisation ID All bits set to 1Padding This field shall be set to zero.signal pduThe following tables provide a mapping of the data items between the Signal PDU and associated SIMPLE packets.  The tables attempt to show a direct relationship between like data items.  However, in many instances where there is no direct relationship between data items they are either redundant, used for error checking (SIMPLE currently uses a byte Bi-Synchronous transfer protocol) or not considered applicable for TDL IO testing.This initial attempt at mapping the data items is only the first iteration and should form the basis for further technical discussion.Message Type = 0 (JTIDS Header/ Link-16 Message) vs SIMPLE Packet Type = 1 Link 16 messagesSignal PDUSIMPLE Packet Type = 1 Link 16 messages (Note 1)FieldBitsRemarksFieldBitsRemarksNPG Number16NPG Number16Net Number8Net No.8TSEC CVLL8No Equivalent Field and N/A  for SIMPLEMSEC CVLL8No Equivalent Field and N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFNo Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot IDTimeslot NumberEpoch Number178Sequential Slot Count Field 1Field 216 8Defines MIDS/JTIDS slot (based on UTC) in which message transmitted. (Note 4)Message Type = 0 (JTIDS Header/ Link-16 Message)SIMPLE Packet Type = 1 Link 16 messages (Cont)Timeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or unencodedSee Message sub-type belowRelay Transmission         (See note 5)1No Equivalent Field and N/A  for SIMPLESTN15STN15SDU Serial Number16Inserted by source Secure Data Unit (SDU) of the originatorNo Equivalent Field and N/A  for SIMPLETadil-J Word #175Message Word #1416Message data consists of one or more codewords -  (Link 16 70-Bit codewords) -  5 Parity bits stripped off:-:-Tadil-J Word #N75Message  Word #N16No Equivalent Field (see note 6)R/C Flag 8Defines if a Link-16 message requires Receipt/ComplianceSee Timeslot Type aboveMessage Sub-Type30 = Unencoded Free Text1 = Coded Free Text2 = Link 16 Fixed FormatNo Equivalent FieldWord Count16Number of 16-Bit data words in message data bodyNo Equivalent FieldLoopback ID16Defines unique terminal/host reference for specific messagesMessage Type = 3 (JTIDS Header/JTIDS Voice CVSD) vs SIMPLE Packet Type = 13 MIDS/JTIDS VoiceSignal PDUSIMPLE Packet Type = 13 MIDS/JTIDS VoiceFieldBitsRemarksFieldBitsRemarksNPG Number16NPG Number16Net Number8Net No.8TSEC CVLL8No Equivalent Field and N/A  for SIMPLEMSEC CVLL8No Equivalent Field and N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFNo Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot ID25No Equivalent Field and N/A  for SIMPLEMessage Type = 3 (JTIDS Header/ JTIDS Voice CVSD)SIMPLE Packet Type = 13 MIDS/JTIDS Voice (Cont)Timeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or unencodedNo Equivalent Field and N/A  for SIMPLERelay Transmission         (See note 5)1No Equivalent Field and N/A  for SIMPLESource Track number (STN)15STN15SDU Serial Number16Inserted by source Secure Data Unit of the originatorNo Equivalent Field and N/A  for SIMPLECVSD Encoded Voice data225 to 1860Size of data area is dependent upon timeslot typeMessage Data225 or 465Coded or unencoded free text message codewordsNo directly equivalent Field – See Signal PDU Message type Identifier aboveJTIDS/MIDS Voice Type31 = 16 kb/s CVSD2 = 2.4 kb/s LPC-103 = 4.8 kb/s4 = 9.6 kb/s5 = 24 kb/s MELPNo equivalent fieldMessage Encoding10 = 255 bit – coded1 = 465 bit - unencodedNo equivalent fieldNumber of Codewords16Number of codewords included in the messageMessage Type = 4 (JTIDS Header/JTIDS Voice LPC 10) vs SIMPLE Packet Type 13 MIDS/JTIDS VoiceSignal PDUSIMPLE Packet Type = 13 MIDS/JTIDS VoiceFieldBitsRemarksFieldBitsRemarksNPG Number16NPG Number16Net Number8Net No.8TSEC CVLL8No Equivalent Field and N/A  for SIMPLEMSEC CVLL8No Equivalent Field and N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFNo Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot ID25No Equivalent Field and N/A  for SIMPLEMessage Type = 4 (JTIDS Header/JTIDS Voice LPC10)SIMPLE Packet Type = 13 MIDS/JTIDS Voice (Cont)Timeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or unencodedNo Equivalent Field and N/A  for SIMPLERelay Transmission         (See note 5)1No Equivalent Field and N/A  for SIMPLESource Track number (STN)15STN15SDU Serial Number16Inserted by source Secure Data Unit of the originatorNo Equivalent Field and N/A  for SIMPLELPC10 Encoded Voice data225 to 1860Size of data area is dependent upon timeslot typeMessage Data225 or 465Coded or unencoded free text message codewordsNo directly equivalent Field – See Signal PDU Message type Identifier aboveJTIDS/MIDS Voice Type31 = 16 kb/s CVSD2 = 2.4 kb/s LPC-103 = 4.8 kb/s4 = 9.6 kb/s5 = 24 kb/s MELPNo equivalent fieldMessage Encoding10 = 255 bit – coded1 = 465 bit - unencodedNo equivalent fieldNumber of Codewords16Number of codewords included in the messageMessage Type = 7 (JTIDS Header/VMF) vs SIMPLE Packet Type 8 Variable Message FormatSignal PDUSIMPLE Packet Type = 8 Variable Message formatFieldBitsRemarksFieldBitsRemarksNPG Number16PG or NL Number16Depends upon PG/NL flag belowNet Number8Net No.8TSEC CVLL8No Equivalent Field N/A  for SIMPLEMSEC CVLL8No Equivalent Field N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFNo Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot IDTimeslot NumberEpoch Number178Sequential Slot Count Field 1Field 216 8Defines MIDS/JTIDS slot (based on UTC) in which message transmitted. (Note 4)Message Type = 7 (JTIDS Header/VMF)SIMPLE Packet Type = 8 Variable Message format (Cont)Timeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or unencodedThe Equivalence is implicit as this is a VMF packetRelay Transmission         (See note 5)1No Equivalent Field and N/A  for SIMPLESource Track number (STN)15STN15SDU Serial Number16Inserted by source Secure Data Unit of the originatorNo Equivalent Field and N/A  for SIMPLETadil-J Word #175Message Data Word #1416Message data consists of one or more codewords – (Link 16 70-Bit codewords) -  5 Parity bits stripped off:-:-Tadil-J Word #N75Message Data Word #N16No equivalent fieldPG/NL1Participation group or Needline groupNo Equivalent Field (see note 6)R/C Flag 8Defines if a Link-16 message requires Receipt/ComplianceNo Equivalent FieldWord Count16Number of  16-Bit data words in message data bodyNo Equivalent FieldVMF Segment Count8Total number of  segment in packetNo Equivalent FieldVMF Segment ID8Number of the VMF segmentNo Equivalent FieldLoopback ID16Defines unique terminal/host reference for specific messagesOther Message TypesMessage Type = 1 (RTT A/B)No Equivalent Packet and N/A for SIMPLE Message Type = 2 (RTT reply)No Equivalent Packet and N/A for SIMPLEMessage Type = 5 (JTIDS Voice LPC12)No Equivalent Packet and has not been considered for SIMPLEMessage Type = 6 (LET)No Equivalent Packet and has not been considered for SIMPLENotes:1.	Special processing requirements:a. 	All messages transmitted by a host within a single time slot shall be included within a single Link 16 packet.b. 	In order to preserve communications bandwidth SIMPLE Nodes shall have the capability to “Include” or “not include” J31.7 messages in Link 16 packets. The default is “not include”.c. 	SIMPLE Nodes are responsible for ensuring that Link 16 Receipt/Compliance (R/C) responses are provided to the SIMPLE Network in a timely manner; for example:(1) 	When interfaced to a terminal farm, the SIMPLE Node may generate Machine/Receipt (MR) responses for its interfaced terminals and suppress the true MRs.If terminals are being emulated at a SIMPLE Node, the terminal emulation shall ensure that terminal generated R/C messages (e.g. MR) are generated and transmitted, as would be the case for a real terminal.The JTIDS/Voice Packet is a legacy packet from the SPAWAR Gateway and is used in conjunction with a Gateway Voice Box. Only Gateway users have procured this item and have only really been used when the Gateway systems were first commissioned. The Round Trip Timing (RTT) Packet in SIMPLE should not be confused with Link-16 RTT. In SIMPLE this packet is used to determine the average transit time of packets transmitted between each connected pair of SIMPLE Nodes.Field 1 & 2 combination, provides a 24-bit field from which the receiving system can identify one particular bit in the whole day, so it is possible to calculate the Epoch, Frame, Time slot & Set.Should this field also include the Indicator/Type Modifier label?  The type modifier is used in conjunction with the Message Type Indicator field to determine if a free text message should be Single Pulse (SP) or Double Pulse (DP), or for a Fixed or Variable message to be relayed or not be relayed.It will be the responsibility of the implementers to determine what the Receipt/Compliance requirements are when the applicable message is encoded or decoded. Potential pitfalls for implementers?(TBD)References:STANAG 5602 Edition 2IEEE Standard 1278.1 – 1995IEEE Standard 1278.1a – 1998TADIL TALES - SIW-02F-119 dated 8 Aug 02 This paper will not address this requirement further as it is a separate issue. The exchange of network data will not be addressed in this paper, as it is not core to the discussion. DOCPROPERTY "Classification"  \* MERGEFORMAT UNCLASSIFIED - DRAFTSTA/R/ DOCPROPERTY "Contract Number"  \* MERGEFORMAT 089/ DOCPROPERTY "Document Number"  \* MERGEFORMAT 215/ DOCPROPERTY "Issue"  \* MERGEFORMAT AIssue  DOCPROPERTY "Issue"  \* MERGEFORMAT A  DOCPROPERTY "Document Date"  \* MERGEFORMAT 20 November 2002 DOCPROPERTY "Disk ID"  \* MERGEFORMAT RES:  FILENAME \* Upper\p \* CHARFORMAT C:\DOCUMENTS AND SETTINGS\JLAUDONE.ADMIN\LOCAL SETTINGS\TEMPORARY INTERNET FILES\CONTENT.IE5\W12Z4563\03S-SIW-079[1].DOCPAGE  1 DOCPROPERTY "Classification"  \* MERGEFORMAT UNCLASSIFIED - DRAFT