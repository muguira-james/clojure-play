Developing Extensible Battle Management Language to Enable Coalition InteroperabilityMichael R. Hieb, Ph.D.Alion S &T1901 N. Beauregard St.Alexandria, VA   22311-1705(703) 933-3376Michael.R.Hieb@us.army.mil Andreas Tolk, Ph.D.VMASCOld Dominion UniversityNorfolk,  VA  23529(757) 686-6203atolk@odu.eduWilliam P. SudnikovichAtlantic Consulting Services, Inc.167 Avenue at the CommonShrewsbury, NJ 07702(732) 460-9416wsudnikovich@acsinc-nj.comJ.  Mark Pullen, D.Sc.George Mason UniversityComputer Science/C3I MS4A5George Mason UniversityFairfax, VA   22030(703) 993-1538mpullen@gmu.eduKeywords: Battle Management Language (BML), Extensible Modeling and Simulation Framework (XMSF), Command and Control Simulation Interface Language (CCSIL), Command and Control (C2), Global Information Grid (GIG), Joint Common Data Base (JCDB), Command and Control Information Exchange Data Model (C2IEDM)ABSTRACT: Command and Control (C2) communication in a network centric environment is postulated to be data intensive. However, the most critical C2 information, the commander’s intent, orders and directives, does not currently flow as data. It is communicated as “free text” elements within messages or as stand-alone files. While suitable for interpersonal communication, it is inadequate for use with simulations, or for the future forces that have robotic components. As commanders increasingly rely upon simulation-based decision aids (and therefore use their C2 devices to control simulations) a solution for this “free text” problem must be found.  Battle Management Language (BML) was developed as a solution to this problem.BML is defined as the unambiguous language used to: 1) command and control forces and equipment conducting military operations and, 2) provide for situational awareness and a shared, common operational picture.  It can be seen as a representation of a digitized commander’s intent to be used for real troops, for simulated troops, and for future robotic forces.Based on this concept, the U.S. Army developed a prototype of BML demonstrating an actual National Training Center (NTC) Brigade Operations Order.  The US Defense Modeling and Simulation Office’s (DMSO) Extensible M&S Framework (XMSF) initiative has started with this BML prototype (consisting of a future US Army C2 System and a US Army Entity Level Simulation) is transforming it into a joint and coalition solution (using a Joint C2 System and a Joint Simulation) based on open standards.  The XMSF prototype will demonstrate a web-enabled Extensible Battle Management Language (XBML).  This version is based on the NATO C2 standard, the Command and Control Information Exchange Data Model (C2IEDM) and will be extended by applying the standards promoted by XMSF.  The goal of XBML is a methodology for developing standard doctrinal terms and allowing these to be accessed as web services in the context of an operational mission plan. This paper describes the XBML prototype and evaluates its extensibility to coalition operations.  Many of the same problems that occur in joint “understanding” of Operations Orders between simulations and C2 systems also occur in coalition operations.1. IntroductionAs military organizations move toward operating in a network centric environment, they are relying more upon open commercial standards than previously.  This is mainly due to the success of the world-wide Internet in the past 10 years.  To the extent that commercial standards can be used, this is preferable to military specific standards.  However, it is recognized that there are certain areas where military specific standards must be developed.  One of these is security.  Another is the representation of military tasks, actions and missions.Figure 1: XBML Coalition ConceptA critical deficiency in current simulation systems is the lack of a standard methodology for representing command and control information.  Many advanced simulations have excellent representations of command and control internal to their simulations, but do not use this representation when dealing with other simulations or Command and Control systems (here we define C2 systems as the range of planning to execution systems used in military operations). See [5,13,14] for related work in simulation C2 formats.Battle Management Language (BML) was developed as a common standard to represent military tasks, actions and missions, both in simulations and C2 systems [3].  A proof of principle BML prototype was developed in the domain of ground forces (for a US Army Mechanized Brigade) [16].  As BML development continues, the issue of how to address different domains is a key issue.  BML will allow a commander to develop a plan and exchange data with other organizations – the commander’s subordinates, his superiors and his equals.  However, in a joint environment, this will involve different services exchanging planning information and plans with each other.  In a coalition environment, one nation will exchange plans with another.  Thus, BML needs to address the following dimensions:ServiceJointNationalThis is shown in Figure 1.  The coalition systems may belong to different nations and be specific to particular services (e.g., ground or air).  Typically, a federation of simulation systems will be employed to support the mission planning systems for training or operations.  In addition, the systems involved can be highly aggregated (such as a joint logistics system tracking movement of assets or a large joint simulation system) or very detailed(platform specific systems).The challenge for BML is to provide a common methodology, a common syntax and semantics.  However, each nation and service will have different tasks unique to itself, and BML must be flexible enough to accommodate them.Extensible Battle Management Language builds on the experience of the US Army proof of principle implementation by using internet standards to develop web-enabled interfaces.  However, while Internet and Web standards are a tremendous aid to developing flexible interfaces (addressing BML methodology and syntax), they do not address the issue of common semantics.  XBML uses the Command and Control Information Exchange Data Model in order to establish a common representation for tasks, actions and missions.  XBML represents mission in terms of Who, What, Where, When, Why as an organizing principleThis paper focuses on how to establish interoperability between distinctly different domains, building upon work in progress.  BML is described in [3], and [4] investigates the scalability of BML to coalition operations.  [16] describes the US Army proof of principle in detail and [8] presents the first phase of XBML, concentrating on applying commercial internet standards to “open up” the specific interfaces.  In addition, Tolk in [18] explains how the C2IEDM will be used for semantic interoperability for XBML as well as for M&S in general.The remainder of this paper is organized as follows:  Section 2 describes XMSF.  Section 3 describes XBML and its current status. Section 4 examines XBML applicability to coalition operations and Section 5 presents XBML future plans.2.  XMSFXMSF is a set of profiles for use of open standards, developed by existing standards bodies, and methodologies for their application, to facilitate reuse, composability, and orchestrated execution of distributed and heterogeneous Modeling and Simulation (M&S). Because it is based on Web standards, it has the ability to provide simulation services to a wide class of live systems.  XMSF uses open standards to increase the efficiency of development and applicability of simulation systems. Many software systems that composably scale to worldwide scope utilize Internet and Web technologies. XMSF, by applying these Web-based technologies, is an advance toward composable simulation systems and is a viable technical platform to integrate live systems, such as C2 systems.Software systems that composably scale to worldwide scope using Internet and Web technologies are strong candidates for use in composable simulations.  XMSF is characterized by the application of open standards and open sources to increase the efficiency and applicability of distributed simulation systems. Therefore, XMSF is an evolutionary step toward advanced distributed simulation not necessarily limited to military standards. XMSF uses particular standards related to the Web, to reach the next level of this domain of distributed computing.  By embracing commercial Web technologies as a shared-communications platform and a ubiquitous-delivery framework, military M&S can fully leverage mainstream practices for enterprise-wide software development.  Its focus on open, Web-based standards and technologies doesn’t imply that XMSF is limited to the public Internet; it can just as well operate on secure military networks.  Two of these Web-based standards play a particular role in XBML:1) The Extensible Markup Language (XML) is designed to improve the functionality of the Web by providing more flexible and adaptable information identification.  It is a standardized file format on the basis of the Standard Generalized Markup Language (SGML) and became a wide spread standard for Web applications within the last couple of months.2) The Simple Object Access Protocol (SOAP) is a protocol for exchange of information in a decentralized, distributed environment.  It is an XML based protocol to let applications exchange information over the Hyper Text Transfer Protocol (HTTP), which is supported by all Internet browsers and servers.Agreeing on a common tag set of underlying XML documents is the first step allowing unambiguous information exchange on the semantic level of interoperability.  This tag set then can be used to define SOAP message content to be exchanged between these applications via the Internet or a Web-based military network supporting the minimal set of Internet standards and may later be used for semantically meaningful web service definition.  Although in complementing papers the need for additional standards to insure meaningful interoperability is stressed [19, 20], this level is sufficient for XBML applications and the initialization of C4I systems by M&S applications.C2 systems are of particular interest in composable simulations because they are the windows through which the warfighters see the world.  There is a growing requirement to interface existing and emerging simulations to C2 systems.  We believe that ultimately the best solution is to use the same underlying Information Technology (IT) infrastructure supporting M&S and C2 systems, facilitating the delivery of simulation services for operational applications as required.  To do this, XMSF must be extended and integrated into emerging C2 systems and standards. Using XMSF to integrate simulations into C2 networks is discussed in [21, 22].Given that XMSF addresses a critical technology base for simulation composability, extending XMSF to address C2 integration will bring a crucial domain as part of the overall set of candidates for composition.  To date, efforts to use Simulations with C2 systems have been fragmented and “stovepiped”.  XMSF provides mechanisms for addressing this issue systematically as well as providing a deeper interoperability.Warfighters deal directly with C2 systems, but there are many barriers to integrating simulations into C2 systems. While technical solutions are necessary, experience has proven that they are not sufficient to solve integration and interoperability problems.  We are including C2 in an XMSF Distributed Testbed in order to demonstrate the potential of XMSF to the C2 community and provide a basis for experimentation.  Experimentation will allow us to consider the complex issues of dealing with live systems.Once developed, this C2 XMSF testbed capability will support both simulations and C2 systems.  This will allow exploration of a number of critical issues in C2/M&S interoperability that have not been addressed to date – such as time management and labeling of live vs. simulated data [17]While XMSF provides the means for technical integration in form of a C4I testbed applicable to C4I and M&S components based on open and commercially supported standards, BML provides the means for syntactically and semantically unambiguous descriptions of Command and Control information, both orders and situational awareness [3]. While we will define BML more accurately in the following sections, for now it can be best thought of as the “digitized commanders intent” to be used in C2 systems, as well as in M&S applications, that need to get orders from a user.The project described in this paper, XBML, merges both concepts.  It builds on the technical flexibility of XMSF to migrate the Army specific BML prototype into the XMSF environment.  Additional components will be integrated to broaden the applicability and BML will be extended to cover other services and even to be used in combined application domains with international partners.In the next sections we will deal with the underlying concepts in more detail before describing BML, the XBML prototype, and current XBML activities.3.  XBML ConceptWhile XMSF ensures the integration and migration of components on a technical level, BML is the foundation for a methodology for complete and unambiguous specifications of the commander’s intend.3.1  The Battle Management Language ConceptTaking the widest possible interpretation, BML is defined [3, 4] as follows:BML is the unambiguous language used to command and control forces and equipment conducting military operations and to provide for situational awareness and a shared, common operational picture.Along with this definition, there are four principles that are fundamental to BML:BML must be unambiguous;BML must not constrain the full expression of a commander’s intent;BML must use the existing C2 data representations when possible; andBML must allow all elements to communicate information pertaining to themselves, their mission and their environment in order to create situational awareness and a shared, common operational picture.BML must contain no distinction between live or simulated forces, thus ensuring that commanders and staff can train as they fight. They will use the same BML whether they are dealing with live subordinates, a simulation, or a semi-autonomous robotic entity.BML is more than a well-structured language.  In its complete expression, BML must be a methodology that allows complete and unambiguous specification of C2 information, directly linked to doctrine. The methodology must represent doctrine, identify appropriate doctrinal sources, elaborate doctrine into a standardized authoritative representation, and specify the rules for how the representation communicates informationTo accomplish this, the BML must incorporate doctrinal terms, graphics, tactics, etc. in a form that allows the intricate relationships of these abstract concepts to be linked to the physical aspects of the warfighter’s environment (organizations, features, persons, facilities, and materiel). The representation must include the necessary entities along with well-defined relationships. This then allows the basic vocabulary, semantics and syntax to be unambiguously defined as well as related to each other in a methodology. This implies developing structured message formats that can be parsed into existing and future operational messages as well as formats that communicate with simulations. BML must blend structure that allows automation of the language with ease of use for the military professional. It should not be a radical change from the language the commander and staff currently use, but instead an evolution that provides a means to gain structure while remaining transparent to the user. It must be based on doctrine and linked to the doctrinal sources, both to ensure standard use/understanding, and to foster concise and precise use of the language. The technology components of BML must support the “train as you fight” concept and therefore exist in a single format, at least as far as the military professional user is concerned. The output of the automated system is dependent on whether the intended audience is a human, a software “intelligent agent” or a autonomous robot.Figure 3: BML MethodologyBML is being built based upon work that has gone before, EAGLE BML and CCSIL [5,13,14].Figure 2 shows graphically our BML implementation concept.  This consists of:A C2 Database (used by a C2 application).  BML must be imbedded and integrated into the C2 Database.A Doctrine Repository, with doctrine accessible to the C2 application.  The more strongly the BML terms are tied to how live forces are trained and employed will enable how well BML will perform.Figure 2: BML ConceptA technology to disseminate BML terms from the Doctrine Repository and a technology for exchanging BML messages.Figure 3 shows the scope of the BML methodology.  This paper shows how BML can be extended from a service specific implementation (Army using specific interfaces) to an approach linking coalition, joint and service elements. It is important to note that there may be different BML “dialects”.  A populated BML for the Army will be different from a populated BML for the Air Force due to the difference in how they employ their forces.  But the way that a BML language is constructed must be standard so BML information can be exchanged and understood.A key aspect of BML is that with the vocabulary and its associated relationships built into a database, Graphical User Interfaces (GUI) and other applications can be constructed that allow implementation of BML.The development of XBML is being conducted in phases.  As the XMSF project looked at BML, it was fairly straightforward to determine which XMSF standards would be applied first, in order to “open up” the interfaces.  Follow-on phases include migrating to the C2IEDM from the MSDB, integrating additional components, and extending the semantics of the BML vocabulary. 3.2  Development of an XBML TestbedIn this section we describe what was done in Phase 1 of XBML, conducted in 2003.  The US Army BML proof of principle [16] comprises the following elements as shown in Figure 4:To generate orders, the Combined Arms Planning and Execution System (CAPES) is used.  This is a prototype US Army Planning System. This C2 component creates operational orders (OpOrds) that are exchanged using a proprietary tagged XML document.A Multi Source Data Base (MSDB) is based on the U.S. Army Standard data model of the Joint Common Data Base (JCDB), which has been extended by the BML development team by introducing over 100 new tables and relations. It is accessed via standardized database manipulation statements based on ODBC or JCDB. It is implemented in open source software of the Linux environment.A BML Demonstrator specific XML-BML Parser reads the information from the XML document and generates data manipulation statements.  The XML-BML Parser reads the XML document, maps the information to data elements of the Multi Source Data Base (MSDB), and inserts the information contained in the document into the MSDB.A BML Graphical User Interface (BML-GUI) allows data manipulation of the content of the MSDB under consideration of the semantic and syntactic constraints of the BML. The input of CAPES can be used as a basis to create more detailed operational orders for the subordinated units (which are simulated using the OTB simulation system). The paradign here is who-what-when-where-why, also called “the 5Ws.”The MSDB information is based on the U.S. Army doctrinal language. In order to execute such orders, this information has to be mapped from doctrinal terms to OTB interpretable terms. This is done by the C4I Simulation Interface (C4ISI), which reads the MSDB and generates order files for OTB.Finally, the M&S component OneSAF Test Bed (OTB) system is used to simulate the effect of the generated orders. It reads the order generated by C4ISI and executes them respectively.Figure 4: Army BML Proof of PrincipleFigure 4 shows a simplified version of the US Army BML PoP demonstration.  Note that each element of the PoP communicates with the MSDB in a different manner, using unique interfaces and protocols.  Also the components must be physically resident on a local network.  The BML PoP is more fully described in [16]It is worth mentioning that the Army BML prototype focused on the C2 application.  Its objective was to proof that an unambiguous definition based on Army doctrine is possible (by defining the BML vocabulary), that C2 data can be used as a hub (by extending the JCDB), and that an application can support C4I as well as M&S components (by coupling with CAPES and OTB).Figure 5 shows the results of the first phase of XBML.  Each of the interfaces between the components comprising the original Army BML Proof of Principle (PoP) demonstration environment were investigated to determine approaches to incorporate open, Web-based methods to implement the interfaces to conform with the principles of XMSF.  As indicated earlier, two Web-based standards that were chosen to implement the interfaces to construct the XBML prototype were XML and SOAP. XML was used to provide a standard way to structure the data passed between the components. SOAP was used to package the ODBC and JDBC calls to the MSDB database.  More details on this are given in [8]Figure 5: XBML Testbed – Phase 1Figure 6: I/ITSEC XMBL Demo ConfigurationThe results of Phase 1 were demonstrated at the Interservice/Industry Training, Simulation and Education Conference (I/ITSEC).  Figure 6 shows the demonstration configuration, which had 3 nodes, two at I/ITSEC at the Orlando Conference Center and one node at George Mason University in Fairfax Virginia.  The nodes at I/ITSEC were physically on the I/ITSEC network and communicated to the GMU node through the commercial Internet. All of the nodes accessed one MSDB located at the XMSF booth at I/ITSEC.  The NEW-V component was a Web-based conferencing application. The implementation of XML and SOAP in accordance with XMSF principles among the components of the BML demonstration environment allowed seamless, distributed and remote execution of each of the components.  The demonstrations conducted during the I/ITSEC laid the groundwork for extending the XMSF concepts to meet the challenges of future tactical Command and Control requirements.4. XBML ExtensionsThis section will address how BML can be extended to to coalition members through use of the C2IEDM data structures.  The foundation for this was developed in [7, 10, 23].4.1  C2IEDM Insuring Coalition InteroperabilityWhen examining interoperability issues concerning the different Services, or between nations in a coalition we usually consider issues affecting their working together. We are not concerned with their C2 systems being interoperable with simulations. Since the early 1990’s the U. S. Services have undertaken an extensive revision of Service and Joint doctrine to first document and then to standardize and align their doctrine with a goal of improving interoperability in training and execution.  This same process is occurring within formal alliances such as NATO.It is almost impossible to imagine a situation in the future when a single U. S. Service will be unilaterally employed. Because future military operations, and a significant amount of training, will be Joint in nature, it is critical that a Joint Service approach be taken to the BML development effort. The same issues that have driven the Army to embark on this program also confront the other Services as they develop both their C2 and simulation systems.A BML, as described in this paper, developed and applied by the other Services and by Coalition members would not only allow interoperability among their C2 systems and simulations, but also among themselves.Just as the BML PoP implemented the 5Ws within the JCDB [3] , Figure 7 shows similar structures within the C2IEDM. We believe that the same concept for developing BML for the U. S. Army will also work for the other Services, Joint and Combined/Coalition operations (see Figure 3) [4].Figure 7: Subset of LC2IEDM Tables showing the 5 WsTo create the Army BML we described an approach of:Incorporating the doctrinal base into the Joint Common Data Base (JCDB), Building in the vocabulary as contained in FM 101-5-1 [6], Operational Terms and Graphics (future FM 1-02) as data tables, andBuilding in the syntax and semantics as defined through the AUTL, ARTEP-MTP and the other related Field Manuals for use of the items specific to echelon and type units as relationships between data tables.Expanding this approach to other Services and the Joint level involves Incorporating the individual Services and Joint doctrinal base into the C2IEDM. Expanding the vocabulary from the FM 101-5-1 (future FM 1-02) to Joint Publication 1-02, Department of Defense Dictionary of Military and Associated Terms, as well as any Service specific dictionaries.Expanding the syntax and semantics as defined through the UJTL, CJCSM 3500.04B, and Joint Doctrinal manuals; as well as each Service’s task list (Universal Naval Task List (UNTL), OPNAVINST 3500.38/MCO 3500.26/USCG COMDTINST M3500.1; Air Force Task List (AFTL), Air Force Doctrine Document 1-1) and their respective doctrinal manuals.Expanding it to a coalition such as NATO would be more challenging but follow the same paradigm:Incorporating NATO doctrine into the C2IEDM.Expanding the vocabulary to include Alliance Administrative Publication – 6 (AAP-6), NATO Glossary of Terms and Definitions (English and French) [1]Perhaps most challenging would be identifying/expanding the syntax and semantics since it does not appear that a NATO equivalent of the UJTL or ARTEP exists.More details concerning the data semantics of the C2IEDM are given in [18].Figure 8: Notional BML Extensions to the C2IEDM 5W CoreXBML ExtensionsFigure 8 gives an example of how XBML will extend the basic C2IEDM structures with specific Service mission information.  As with current coalition exercises using the C2IEDM, different nations and services will have to agree upon the extension to be used for a particular exercise or operation.  The key principle is that the basic C2IEDM data representations are not changed.  Thus, missions are always represented as Actions and planned missions as Action-Tasks.  A more difficult situation emerges when the C2IEDM has partial Missions, but not the complete set of missions necessary for a particular domain.  In this case, the existing codes (or enumerations) within the C2IEDM will have to be added to.  This is a current area that the XBML testbed is exploring.It is apparent that as XBML grows, a method must be set up to “manage” the extensions used.  Tolk discusses this extensively in [18] in the context of managing data with the C2IEDM.5. ConclusionIn summary, XMSF is a broad integration method based on open standards.  BML is a collection of methods to capture C2 information in an unambiguous way.  XBML is merges these two concepts in a powerful manner,There is a need for a unified BML methodology. BML is vital to achieve C2 to Simulation interoperability. It can also assist in achieving command and control interoperability within Joint and coalition environments acting as the true common language between humans, machines, Services and National militaries.With XBML we have demonstrated the capability of distributed, remote operation of web-enabled components. The concept of simulation applications implemented as Web services will support future network centric operational concepts. The Web based implementation facilitates the ‘smart-pull’ concept of information distribution as described in the DoD Net-Centric Data Strategy.6. AcknowledgementsThe authors gratefully acknowledge and support given by the DMSO for the development of XMSF and XBML. BML was originally sponsored by the US Army SIMCI OIPT [15]. The XBML work is based upon a foundation of work done by the US Army and performed by Scott Carey, Martin Kleiner, LTC Ken Wilson and Richard Brown.  The authors received invaluable support with the C2IEDM Data Model from Dr. Francisco Loaiza, Dr. Gene Simaitis and Dr. Steven Wartik. The research work at VMASC was partially sponsored by General Dynamics – AIS.7. ReferencesAllied Administrative Publication – 6 (AAP-6) “NATO Glossary of Terms and Definitions (English and French)”, 2002, http://www.nato.int/docu/ stanag/aap006/aap6.htmBendz, J., Johannisson, P., Ohland, G., Frank, A., Dahmann, J., Konwin, K., Lof, S. and Briggs, R., “Coalition Interoperability Through Standards-Based Collaborative Environments”, Paper 01F-SIW-053, 2001 Fall Simulation Interoperability Workshop, 2001.Carey, S., Kleiner, M., Hieb, M.R. and Brown, R., “Standardizing Battle Management Language – Facilitating Coalition Interoperability”, Paper 02E-SIW-005, 2002 European Simulation Interoperability Workshop, London, England, 2002. Carey, S., Kleiner, M., Hieb, M.R. and Brown, R., “Standardizing Battle Management Language –A Vital Move Towards the Army Transformation”, Paper 01F-SIW-067, Fall Simulation Interoperability Workshop, 2001.CCSIL Message Content Definitions,  HYPERLINK "http://ms.ie.org/cfor/cfor.html#Documentation" http://ms.ie.org/cfor/cfor.html#Documentation.FM101-5 Staff Organization and Operations, Headquarters Department of the Army, 31 May 1997. (to be renumbered FM 5-0)Haddix, F., Sheehan, J., Loesekann, M., and Scrudder, R. “Semantics and Syntax of Mission Space Models”, Paper 99F-SIW-152, Fall Simulation Interoperability Workshop, 1999.Hieb, M.R., Tolk, A., Sudnikovich, W., and Pullen, J.M., “Developing Battle Management Language into a Web Service”, Paper 04S-SIW-113, 2004 Spring Simulation Interoperability Workshop, Crystal City, VA, 2004.Hieb, M.R., and Sprinkle, R., “Simulation Infrastructure for the DII COE Architecture: The Army Vision”, Paper 00F-SIW-035, 2000 Fall Simulation Interoperability Workshop, 2000.Hieb, M.R., and Blalock, J., “Data Alignment Between Army C4I Databases and Army Simulations”, Paper 99S-SIW-034, Spring Simulation Interoperability Workshop, 1999.Kleiner, M.S., Carey, S.A., and Beach, J., “Communicating Mission-Type Orders to Virtual Commanders”, Paper, Proceeding of the 1998 Winter Simulation Conference, December 1998.May, G., briefing “NATO Doctrine Development”, Semi-Annual Army Doctrine Conference 14-15 November 2001,  HYPERLINK "http://doctrine.army.mil/SAADC/ saadc2001briefings/natodoctrine.ppt" http://doctrine.army.mil/SAADC/ saadc2001briefings/natodoctrine.ppt.Ogren, J., and Fraka, M., “EAGLE Combat Model Battle Management Language (BML)”, Powerpoint presentation, BML Symposium at Fort Leavenworth, KS, 25 April 2001. ( HYPERLINK "http://www.simci.org/ html/librsry.html" http://www.simci.org/ html/librsry.html Public Folder/Meetings/Architect Meetings/Battle Management Language/BML Symposium/Eagle Presentation).Salisbury, M., “Command and Control Simulation Interface Language (CCSIL): Status Update” MITRE Informal Report, Twelfth Workshop on Standards for the Interoperability of Defense Simulations, 1995 ( HYPERLINK "http://ms.ie.org/cfor/diswg9503/diswg9503.pdf" http://ms.ie.org/cfor/diswg9503/diswg9503.pdf)SIMCI WWW Site, Army Overarching Integrated Product Team for Simulation to C2 Interoperability:  HYPERLINK "http://www.simci.org" http://www.simci.org, 2004.Sudnikovich, W., Hieb, M.R., Kleiner, M. and Brown, R., “Developing the Army's Battle Management Language Prototype Environment”, Paper 04S-SIW-115, 2004 Spring Simulation Interoperability Workshop, Crystal City, VA, 2004.Timian, D.H., Hieb, M.R., Lacetera, J., Tolk, A., Wertman, C., and Brandt, K., “Report Out of the C4I Study Group”, Paper 00F-SIW-005, 2000 Fall Simulation Interoperability Workshop, 2000.Tolk, A., “Moving towards a Lingua Franca for M&S and C3I –Developments concerning the C2IEDM”, Paper 04E-SIW-016, 2004 Euro Simulation Interoperability Workshop, Edinburgh, Scotland, 2004.Tolk, A., “Composable Mission Spaces and M&S Repositories - Applicability of Open Standards”, Paper 04S-SIW-009, 2004 Spring Simulation Interoperability Workshop, 2004.Tolk, A. and Muguira, J., “The Levels of Conceptual Interoperability Model”, Paper 03F-SIW-007, 2003 Fall Simulation Interoperability Workshop, 2003.Tolk, A. and Daly, J., “Modeling and Simulation Integration with Network-Centric Command and Control Architectures”, Paper 03F-SIW-121, 2003 Fall Simulation Interoperability Workshop, 2003.Tolk, A. and Pullen, J.M., “Ideas for a Common Framework for Military M&S and C3I Systems”, Paper 03E-SIW-032, 2003 Euro Simulation Interoperability Workshop, 2003.Wartick, S.P., Haugh, B.A., Loaiza, F., and Hieb, M.R., “Building in Interoperability: A Comparison of C4I Data Models and Simulation Object Models”, Paper 01S-SIW-021, 2001 Spring Simulation Interoperability Workshop, 2001.Zimmermann, B., “Integrated Army Modelling and Simulation Data Network”, MSG-022/SY-003/25 Conference on “C3I and M&S Interoperability”, Antalya, Turkey, October 2003 (to be published in RTO-MP-123)Author BiographiesMICHAEL HIEB is an Assistant Vice President for C4I Programs for Alion Science and Technology. Dr. Hieb is currently an Architect for the Army SIMCI OIPT.  He received his Ph.D. in Information Technology at George Mason University in 1996 and performed his doctoral research at the GMU Center for Excellence in C3I.  Dr. Hieb received his MS degree in Engineering Management from George Washington University and his BS degree in Nuclear Engineering from the University of California in Santa Barbara.  He has published over 50 papers in the areas of M&S integration with C4I and Machine Learning. Previously, he worked as a Nuclear Engineer for General Electric.ANDREAS TOLK is Senior Research Scientist at the Virginia Modeling Analysis and Simulation Center (VMASC) of the Old Dominion University (ODU) of Norfolk, Virginia.  He has over 12 years of international experience in the field of Applied Military Operations Research and Modeling and Simulation of and for Command and Control Systems.  In addition to his research work, he gives lectures in the Modeling and Simulation program of ODU.  His domain of expertise is the integration of M&S functionality into related application domains, such as C2 or web-based services, in particular based on open standards.William P. Sudnikovich is a Project Manager for Atlantic Consulting Services in Shrewsbury, NJ and a technical architect for the Army’s SIMCI OIPT. Prior to joining ACS in 2000, Mr. Sudnikovich held various technical and management positions with the US Army CECOM RDEC and was influential in establishing M&S activities there.  He was an active contributor to the development of the IEEE 1278 DIS standards and is a former Chairperson of the C4I Forum of the SISO Simulation Interoperability Workshops.  Mr. Sudnikovich holds BS and MS degrees in Computer Science from Rutgers University and Fairleigh Dickinson University.J. MARK PULLEN is Professor of Computer Science at George Mason University, where he heads the Networking and Simulation Laboratory in the C3I Center. He holds BSEE and MSEE degrees from West Virginia University, and the Doctor of Science in Computer Science from the George Washington University. He is a licensed Professional Engineer, Fellow of the IEEE, and Fellow of the ACM. Dr. Pullen teaches courses in computer networking and has active research in networking for distributed virtual simulation and networked multimedia tools for distance education. PAGE  Page  PAGE 9 of  NUMPAGES 1204E-SIW-064 – Page  PAGE 1 of  NUMPAGES 1104S-SIW-113 – Page  PAGE 11 of  NUMPAGES 11