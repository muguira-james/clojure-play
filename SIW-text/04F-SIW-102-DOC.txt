The Army Constructive Training Federation – Multi-Resolution Modeling: The Next Generation of Land Component Commander Training at the Unit of Employment Echelon of CommandAnita ZabekHugh HenryThe MITRE Corporation3504 Lake Lynda DriveSuite 360Orlando, FL  32817anita@mitre.orghhenry@mitre.orgDavid ProchnowThe MITRE Corporation7515 Colshire DriveMcLean, VA  22102 HYPERLINK mailto:prochnow@mitre.org prochnow@mitre.orgMichael WrightProgram Executive Office for Simulation, Training, and Instrumentation12249 Science DriveOrlando, FL 32826Michael.Wright11@peostri.army.milKeywords:ACTF-MRM, CBS, JCATS, CSSTSS, TACSIM, RTM, multi-resolution modeling, C4IAbstract: The Army Constructive Training Federation - Multi-Resolution Modeling (ACTF-MRM) is a command post exercise driver designed for training land component commanders and their staffs at the Unit of Employment echelon of command.  ACTF-MRM provides a simulated operational environment, in which computer-simulated forces stimulate and respond to the command and control processes of the commander and staff.  The staff interacts with the simulation environment via the respective real-world Command, Control, Communication, Computers, and Intelligence (C4I) devices, or via human intermediaries that serve as role players.The first version of ACTF-MRM, completed in fiscal year 2004, adds entity-level operations, such as Military Operations in Urban Terrain, to the Army’s current systems which were previously used to train at Division and above.  The multi-resolution modeling (MRM) capability is achieved by disaggregating Corps Battle Simulation (CBS) -owned aggregate units (typically companies) into individual vehicles and squads and then transferring control of them from CBS to the Joint Conflict and Tactical Simulation (JCATS) for subsequent play in JCATS at the entity level. Using this mechanism, ACTF-MRM allows an entire theater of operations to be simulated, using aggregate representations for most objects while using entity-level representations for areas of tactical significance.  ACTF-MRM additionally solves a long standing problem of inconsistent representation of individual vehicles and squads at the various Command, Control, Communication, Computers, Intelligence, Surveillance and Reconnaissance (C4ISR) systems, including the Army Battle Command System (ABCS), the Global Command and Control System – Army (GCCS-A), and simulations of unmanned aerial vehicles and the  HYPERLINK "http://employeeshare.mitre.org/d/ddashcun/transfer/021100%20ALSA%20JSTARS%20MTTP%20-%20Sign%20Draft/021100%20ALSA%20JSTARS%20MTTP%20-%20Signature%20Draft%20.pdf" Joint Surveillance Target Attack Radar System (JSTARS). ACTF-MRM will continue to evolve using a yearly development cycle for incorporating additional enhancements.  ACTF-MRM will also be one of two major contributions by the Army to the Joint National Training Capability (JNTC). This paper will present the ACTF-MRM architecture, design, integration experience, performance tuning, and the way forward for future versions.1. IntroductionThe Army Constructive Training Federation - Multi-Resolution Modeling (ACTF-MRM) is a command post exercise driver designed for training land component commanders and their staffs at the Unit of Employment X (UEX) and Unit of Employment Y  (UEY) echelons of command. ACTF-MRM provides a simulated operational environment, in which computer generated forces stimulate and respond to the command and control processes of the training audience.ACTF-MRM is developed by the Program Executive Office for Simulation, Training, and Instrumentation (PEO STRI), as the material developer, and the U.S. Army National Simulation Center (NSC), as the user. It is a new development effort to incrementally build upon the Army’s current training capability used in the past to support training at the Division and Corps levels. In future versions, ACTF-MRM will incorporate the Army’s next generation simulations to include the Logistics Federate (LogFed), Warfighter’s Simulation (WARSIM), and One Semi-Automated Forces (OneSAF). PEO STRI and NSC are also developing a second federation, called the Army Constructive Training Federation – Entity Representation (ACTF-ER), which targets training audiences at lower echelons of command - UEX  and Unit of Action. ACTF-ER was formerly known as Digital Battlestaff Sustainment Trainer (DBST).The Jet Propulsion Laboratory (JPL), Lawrence Livermore National Laboratory (LLNL), Booz Allen Hamilton (BAH), the NSC’s Logistics Exercise and Simulations Directorate (LESD), Northrop Grumman Information Technology (NGIT), and Tapestry Solutions develop the components that comprise ACTF-MRM Version 1. The MITRE Corporation provides systems engineering and integration support. Version 1 was developed rapidly starting in July 2003, culminating in an operational readiness exercise (ORE) in June 2004. Key ORE findings will be corrected and then retested in August 2004. ACTF-MRM is targeted to support its first training event in the fall of 2004.The primary objectives of Version 1 are to enhance the Army’s current training capability in two ways: 1) add a capability to selectively simulate the battlespace at the entity level to support selected missions such as Military Operation in Urban Terrain (MOUT), and 2) provide consistent representation of entities across all Command, Control, Communication, Computers, Intelligence, Surveillance and Reconnaissance (C4ISR) systems.2. System OverviewIn ACTF-MRM, the training audience’s interface with the simulation is via their Command, Control, Communication, Computers, and Intelligence (C4I) devices, the same tools used to communicate in the real world, or via human intermediaries known as role players. Role players typically represent the military superiors or subordinates of the training audience. They convert direction into simulation input via ACTF-MRM's human computer interfaces. Role players also interpret simulation output and relay that information to the training audience. The role player-training audience communication channels include voice, e-mail, chat, or formatted messages sent to the training audience's C4I devices. A third team of human operators, technical controllers, start and stop the system, and control run-time parameters such as game speed. In addition to the simulated operational environment, ACTF-MRM has an after action review (AAR) capability. This function captures and collects data on the events and activities of the exercise and provides feedback. This supports performance-oriented review. The AAR function lets commanders and trainers assess unit performance, identify strengths and weaknesses, and adjust the unit's training plan accordingly.  From a technical perspective, ACTF-MRM is an interconnected set of constructive simulation software, supporting software, and commercial-off-the-shelf hardware. The components are connected using four interfaces. Two are standards - the High Level Architecture (HLA) and Distributed Interactive Simulation (DIS). The custom interfaces are the CBS Master Interface (MI) and point-to-point. This is illustrated in Figure 1, which is a notional or logical view as many logical separate connections actually occur over the same physical network.Figure  SEQ Figure \* ARABIC 1 - ACTF-MRM Architecture SHAPE  \* MERGEFORMAT 2.1 The Corps Battles Simulation (CBS) OverviewCBS simulates combat, combat support, and combat service support (CSS) aspects of land-based military operations.  In ACTF-MRM, CSS modeling is shared with the Combat Service Support Training Simulation System (CSSTSS), intelligence modeling is shared with TACSIM, and entity-level combat is shared with the Joint Conflict and Tactical Simulation (JCATS). CBS is developed by PEO STRI through contract with JPL.In ACTF-MRM, CBS also generates and shares a common, doctrinally realistic laydown of those entities not simulated by JCATS to all C4ISR systems, via the appropriate intermediate component.A key architectural feature of CBS, from the ACTF-MRM perspective, is the MI. The MI supports the development and use of external (to CBS) software that supports one or two-way communication via a set of proprietary services. This external software is known as an MI Application. In ACTF-MRM, both TACSIM and the Runtime Manager (RTM) receive data on aggregate units and on vehicles and squads via the MI.2.2 JCATS OverviewJCATS is a multi-service, multi-sided, interactive, entity-level simulation, developed by LLNL and sponsored by the United States Joint Forces Command’s Joint Warfighting Center (JWFC). [1]JCATS is used for training, analysis, experimentation, mission planning and mission rehearsal.  JCATS is capable of simulating small group tactics, with explicit modeling of urban terrain, including detailed building features.  It is also capable of supporting larger scenarios – it simulated about 28,000 of the 30,000 entities in federated mode in Millennium Challenge 02.  In ACTF-MRM, JCATS may take over simulation of selected CBS units at the vehicle and squad level, after the control of these units is transferred from CBS to JCATS. These units may later be transferred back to CBS.2.3 CSSTSS OverviewCSSTSS simulates detailed Army logistics processes and provides high-fidelity CSS information to the training audience, including use of the Standard Army Management Information System (STAMIS). CSSTSS is developed by LESD. In ACTF-MRM, CSSTSS shares CSS functions with CBS. The CBS model executes unit-level CSS and CSSTSS executes direct support (DS) and general support (GS) CSS. The exchange of sustainment information between the two models is analogous to the link between unit and DS level of support. As data is exchanged between the two models, it is aggregated and disaggregated. For example, artillery ammunition is consumed in CBS by round. CSSTSS tracks munitions by DoD Identification Code (DODIC). CSSTSS converts that round to a set consisting of a projectile, charge, and fuse. When CBS requests a round of ammunition, CSSTSS checks its own records for all three components before permitting the transfer.2.4 TACSIM OverviewTACSIM provides simulated intelligence collection and reporting to support training of intelligence analysts, operators, and collection managers. It also provides training for commanders and staffs through aggregated products that do not require further intelligence analysis. TACSIM is developed by PEO STRI via contract with NGIT. TACSIM is a family of simulation processes and processors that simulate and stimulate the US intelligence system, from tactical to national levels. This includes communications, electronic, image and human intelligence.In ACTF-MRM, TACSIM reports on both the entities represented in CBS and the entities simulated in JCATS. Reports are transmitted to the training audience via the All Source Analysis System (ASAS).TACSIM also includes feeds to simulations of unmanned aerial vehicles (UAV) and the  HYPERLINK "http://employeeshare.mitre.org/d/ddashcun/transfer/021100%20ALSA%20JSTARS%20MTTP%20-%20Sign%20Draft/021100%20ALSA%20JSTARS%20MTTP%20-%20Signature%20Draft%20.pdf" Joint Surveillance Target Attack Radar System (JSTARS) - in ACTF-MRM the feeds include both CBS and JCATS entities.2.5 RTM OverviewRTM provides the interface that permits the ACTF-MRM training audience to interact with the simulation using their organic C4I equipment. RTM provides a feed toASAS for tactical intelligence reports;Maneuver Control System (MCS) for force status information;Air Missile Defense Workstation (AMDWS) to provide situational awareness for air defense artillery units and Tactical Ballistic Missile (TBM) early warning; Army Field Artillery Tactical Data System (AFATDS) for reporting and directing fires information; andCombat Service Support Control System (CSSCS) (and soon its follow on Battle Command Sustainment Support System (BCS3)) for logistics information.In addition, RTM provides a feed from AFATDS back into the simulations to avoid artificial time delays that are incurred when the training audience cannot enter orders directly to the simulated unit. This capability is required to support time critical targeting such as counter battery operations. RTM also provides a situational awareness feed to Global Command and Control System – Army (GCCS-A) and to Command and Control Personal Computer (C2PC), and, on the lower tactical internet, to Force XXI Battle Command, Brigade-and-Below (FBCB2) via the  HYPERLINK "http://wc3srv.mitre.org/W900/Server/Sites/FTMO/STORM%20INC%20Design%20W15C%20Review%20March%2099.ppt" Simulation, Testing, Operations, Rehearsal Model (STORM). RTM is developed by BAH under contract to the NSC. The RTM component has three essential functions:Receive and accumulate information from the models; Compile the data for use by C4I systems; andSend information to specific C4I workstations on a real time or scheduled timetable.  The C4I workstations that receive direct stimulation from the simulation are known as inject points. The C4I network's inject points receive the information and automatically post and/or automatically forward it to other C4I computers much as they would during real-world operations. Thus commanders and staffs participating in the exercise can realistically use their C4I computers.In ACTF-MRM, RTM receives data from JCATS, CBS and CSSTSS, and sends data to CBS.The RTM / C4I device configuration used in the ORE is depicted in Figure 2. [BAH]Figure 2 – RTM / TACSIM – C4I Configuration for the ORE [2]2.6 Vision XXIVision XXI is an AAR and exercise control system, providing an integrated view and analysis of the ACTF-MRM training environment. The system provides analysts with an extensive set of visualization, reporting, and analytical tools. Vision XXI provides the visual interfaces and tools to capture and replay the significant battle interactions (losses, fire missions, combat status, etc.)  Vision XXI is developed by Tapestry Solutions for the NSC and has both a DIS feed from JCATS and an MI feed from CBS.2.7 Joint Training Confederation (JTC) Infrastructure Software (JIS) OverviewThe JIS is designed to support the JTC's migration from the Aggregate Level Simulation Protocol (ALSP) to the DoD standard HLA, and to monitor and control the HLA federation. It consists of the Runtime Infrastructure (RTI), the ALSP Data and Protocol Over RTI (ADAPTOR), and the Federation Management Tool (FMT).  These components are described in the following sections.2.7.1. RTIThe RTI is the underlying software implementation required of the HLA. ACTF-MRM Version 1 uses the Defense Modeling and Simulation Office (DMSO)-provided RTI-Next Generation (RTI-NG) Version 6.4.3, which was developed by Science Applications International Corporation. 2.7.2 ADAPTORThe ADAPTOR software permits components with existing ALSP interfaces (called actors) to "speak HLA". The ADAPTOR was developed by The MITRE Corporation for PEO STRI. The ADAPTOR's primary function is to translate ALSP text messages received from an actor into RTI service calls and vice versa. An ADAPTOR is executed for each actor, providing a common interface between each actor and the rest of the HLA federation. It acts to filter messages that are not of interest to the actor, and translates ALSP messages from its actor into the appropriate RTI service call. For ACTF-MRM, both CBS and CSSTSS employ their ALSP interfaces and thus use the ADAPTOR to communicate over HLA.2.7.3 FMTThe FMT, also developed by the MITRE Corporation, is a graphic tool providing a global perspective on federation status.  This includes the evolution of federation time, the health and status of the communications channels, and game object information. In addition to viewing information, the FMT employs a variety of interactions with the ADAPTORs to allow the user to directly manipulate or stimulate an actor or its ADAPTOR.3. ACTF-MRM DesignThis section describes aspects of the ACTF-MRM design, including rationale and issues encountered.3.1 ACTF-MRM FOMThe ACTF-MRM Federation Object Model (FOM) was derived from the JTC FOM.  The JTC is a collection of service and agency simulations that exchange object information in order to support joint training exercises all over the world.   The JTC FOM was the logical choice to serve as the basis of the ACTF-MRM FOM for several reasons.  First, the JTC FOM is used by the ADAPTOR which supports CBS and CSSTSS.  In addition, the FOM represents aggregate objects already, meaning that the FOM only needed to be modified to accommodate entity-level representations.  In fact, the main changes to the JTC FOM were the addition of an object class for representing entities, and the addition of HLA interactions for requesting the creation or deletion of these objects.The second reason for starting with the JTC FOM was that the ACTF-MRM user wanted to leave open the possibility of interoperating with the other models in the JTC.  For this reason, none of the FOM elements were deleted from the JTC FOM.  The preservation of interoperability with the JTC was a good decision.  Before ACTF-MRM Version 1 was completed, the user requested experiments with the Air Warfare Simulation (AWSIM), the Air Force simulation of the JTC.  These tests showed good potential, and demonstrated that ACTF-MRM could interoperate with JTC simulations in the future, should that be required.3.2 ACTF-MRM Time ManagementACTF-MRM employs HLA time management.  The three combat simulations (CBS, CSSTSS, and JCATS) are all time regulating and time constrained.  As is customary in the JTC, CBS and CSSTSS advance time in one-minute intervals.  JCATS, on the other hand, advances time using a configurable time increment that has been set to a range of values from six seconds to one minute. Coordination of time was relatively straightforward in ACTF-MRM. Although JCATS simulates at a more detailed level than the other simulations, the high fidelity modeling occurs internally.  At the HLA interface level, JCATS performs its functions at a level that is more compatible with the other simulations, often accumulating updates over a period of time and only sending them out at periodic intervals. An issue surfaced regarding the JCATS architecture and time management. The JCATS system uses a separate bridge process as the link between the JCATS simulation and the federation. While the bridge uses time management and reliable transportation, the link between the bridge and the JCATS simulation uses unreliable transportation that does not guarantee delivery order. This created some problems in integration and LLNL added data integrity checking and retransmission request code to compensate.Another time management issue that arose was associated with crash recovery.  After a federate crashed, it had to be manually removed from the federation (i.e. through an operator command at the RTI Console).  In some cases, this worked fine as time advancement resumed after the dead federate was removed.  However, in other cases, the RTI time manager deadlocked, as diagnostics revealed that each of the remaining federates had requested time advances but one was never granted.  Of course, as we improve stability, this becomes less of an issue. Also, in the future we plan to migrate to a commercial RTI, which hopefully will not have this problem.3.3 Consistent Entity Location One of the goals of ACTF-MRM is to provide a consistent representation of platforms across the entire system.  This goal was a response to a known shortcoming in the previous training systems.  These prior systems used aggregate simulations as the main combat drivers, but a good portion of the training audience interacted with C4ISR systems that require data at the entity level.  To compensate, the interfaces to the C4ISR systems received aggregate data from the simulation and then disaggregated data to the platform level.  The problem was that each system’s disaggregation algorithm was different, resulting in inconsistencies in the platform-level representations.  To address this issue, CBS created an algorithm referred to as FLUD.  The FLUD mechanism converts CBS aggregates into representations of platforms and squads, referred to as Formation Elements (FEs).  Each FE is assigned an equipment type, location, and a functional role.  The formations created by FLUD depend on the aggregate unit composition and mission. In turn, CBS shares the FE data over the MI.  Both TACSIM and RTM receive the entity level data from the MI, and as a result, no longer have to perform their own disaggregation.  TACSIM uses the data internally and passes it on to UAV and JSTARS simulations and ASAS, and RTM passes it onto various C4I systems.Because the location of FEs represented by CBS cannot change autonomously, the location of the FEs can be represented as an offset from the location of the aggregate. Therefore, FE state changes only occur when the mission of the aggregate changes – changing the posture of the unit and footprint of FEs - or an FE is destroyed. This reduces the number of MI updates and helps performance. As will be discussed in the subsequent section, it is also possible for the FEs to be “controlled” by JCATS.  JCATS is said to control the FE when it takes ownership of a large subset of attributes.  CBS always maintains some of the attributes, including the PrivilegeToDelete attribute. When control is transferred, JCATS updates the attributes now under its control.  CBS then receives this data and again makes it available over the MI, thus maintaining consistency across the training environment.It should also be noted that the generation of FEs by CBS is done solely for the benefit of the systems that need entity-level information.  CBS does not use that level of detail in its internal calculations, but instead performs all of its modeling at the aggregate level.  Furthermore, the CBS user also never sees the entity-level information.3.4 Handoff of Control of Entities from CBS to JCATSMulti-resolution modeling (MRM) allows both theater-level and tactical level training to occur with the same simulation system.  One fundamental issue with any MRM system is determining where to allocate high fidelity modeling and low fidelity modeling.  One approach is to permanently designate certain objects as aggregates and others as entities.  This works best when the simulation is scripted and the entity objects, for instance, stay where you want detailed modeling to occur.In an unscripted MRM environment, it is more advantageous to change the resolution of an object when needed.  For instance, an aggregate unit entering a city may need to convert to an entity-level representation in order to simulate MOUT.  To accommodate the fluid nature of combat operations, ACTF-MRM developed a capability for transfer of objects between CBS and JCATS for aggregate or detailed modeling, respectively, of the military objects being simulated.3.4.1 JCATS Areas of InterestTo implement object transfer in ACTF-MRM, JCATS employs areas of interest (AOIs) that are easily configured prior to initialization and during runtime.  Each AOI is a polygonal area inside of which JCATS is interested in entity level representations.The JCATS AOI concept is depicted in Figure 3. The JCATS controller can tell which FEs are controlled by CBS because they have a circle drawn around them. Figure 3 – JCATS Area of Interest SHAPE  \* MERGEFORMAT JCATS subscribes to all CBS aggregate units.  When one of the CBS aggregates enters a JCATS AOI, JCATS sends an HLA interaction requesting that CBS generate FE objects over HLA for the aggregate.  (Recall that CBS creates FEs for all aggregates at all times but until this point in time, only shares them with MI clients.) CBS responds by creating the FE HLA objects, which are then discovered by JCATS.  (Note that, at this time, JCATS still does not have control of the objects.)Similar to above, when a CBS aggregate moves out of a JCATS AOI (plus a small buffer zone to prevent frequent transitions in and out of the AOI), JCATS requests that CBS delete the FE HLA objects. 3.4.2 FE Data Mappings Each FE HLA object includes a specification of equipment or personnel type.  In addition, each of these objects can be associated with specific supply types and munitions.    In order for the exchange of data to be meaningful, appropriate data mappings must exist between CBS and JCATS.  In some cases, not all items represented in JCATS will be in CBS, and visa versa, so there may be some one-to-many mappings.While it may be common sense that these data mappings must exist, the size of the problem is staggering.  This is because each simulation can include thousands of items, and these change frequently from one event to another.  In Version 1 of ACTF-MRM, a simple approach using data mapping tables was employed, but these were difficult to generate and frequently became out of date.  A more sophisticated means may be necessary for long term usage of the federation.3.4.3 Object Handoff and HandbackOnce a CBS aggregate unit has been “FLUDed,” it is then possible to transfer control of all the FEs associated with it from CBS to JCATS.  By design, this is done manually.  Although it would be straightforward to implement an automatic transfer, experience shows that it works best to do this manually so that the JCATS operator is not overwhelmed.The handoff mechanism employs HLA ownership management services.  HLA allows for both push and pull methods of transferring attributes.  In addition, an attribute push may be unconditional or negotiated.  ACTF-MRM implements ownership transfers using an unconditional push.  CBS transfers a large subset of the FE attributes to JCATS.  Once JCATS takes control of the entities, its operators can move them and issue them orders.  Meanwhile, in CBS, the aggregate object can no longer be manipulated by the CBS user, and as a result the CBS workstation uses a graphic indicator to indicate the object is no longer under CBS control.While JCATS controls FEs, it will send updates periodically.  CBS, in turn, updates the aggregate objects associated with the FEs.  This includes calculating center-of-mass locations. JCATS entities may engage each other in combat, and results of engagements are sent from JCATS to CBS using HLA interactions.  In turn, CBS sends combat result interactions for the affected aggregate units.  In ACTF-MRM Version 1, a shortcoming is that JCATS only sends kills data to CBS, not damage data.  This is because CBS currently does not have a mechanism for accounting for which particular FEs are damaged, just a count of number damaged in the aggregate.  This created an accounting problem when an FE is damaged multiple times in JCATS.  The next version of ACTF-MRM will address this issue. The handback of objects from JCATS to CBS works similarly to the original handoff from CBS.  It uses the same HLA unconditional push of the attributes that JCATS had acquired.  After the handback occurs, CBS operators can resume manipulation of the aggregate objects, while JCATS users are given a visual indication that the FEs associated with the aggregate are no longer under JCATS control.3.5 Combat Engagements between JCATS and CBSWith both aggregate-level and entity-level objects existing in ACTF-MRM, there are cases when objects of different resolution need to interact with each other.  This is minimized by limiting entity-level objects to the JCATS areas of interest, but still there must be appropriate mechanisms to allow the aggregate-level and entity-level objects to perceive each other and exchange combat.For ACTF-MRM, we decided early that we would not permit direct fire close combat between CBS objects and JCATS objects.  The two combat algorithms are so fundamentally different, that making the two work together would be an immense challenge.  CBS employs Lanchestrian equations, while JCATS performs system-on-system modeling.  Because these algorithms are so different, there are not yet any plans to resolve this issue, other than employing the handoffs to minimize the occurrences of close proximity of opposing ground objects represented by the different simulations.On the positive side, indirect fire is exchanged between CBS and JCATS objects, and the mechanics for doing so work well.  In fact, we were able to use the same indirect fire interaction that is employed in the JTC.  Although the mechanics of indirect fire work well, there are issues associated with targeting.  Because CBS interacts at the aggregate level and JCATS at the entity level, the targeting is frequently not at the most advantageous point.  A CBS user may target an aggregate whose FEs are controlled by JCATS, and this will be done by targeting the unit center of mass.  (Recall that the CBS user does not even see the entity-level data.)  If the JCATS user has positioned the FEs over a wide area, this targeting will have minimal impact.  Conversely, a JCATS operator may target FEs of an aggregate under control of CBS.  In this case, the JCATS operator would be better off targeting the unit center of mass, but that is not visible to the JCATS user.  These targeting issues will be addressed in future versions of ACTF-MRM.ACTF-MRM Version 1 has also implemented direct fire exchanges between air and ground objects.  These work well, and again we were able to use existing JTC interactions.A summary of JCATS – CBS interoperability is depicted in Figure 4.Figure 4 – JCATS-CBS Interoperability SHAPE  \* MERGEFORMAT 4. ACTF-MRM Performance OptimizationThe integrator decided to test overall system performance early in the development cycle. This decision was based on previous efforts where performance was adequate during testing and integration, but bogged down under real exercise loading.  The decision was also driven by concern over the large number of FEs that could be generated. The NSC provided estimates of 1.6 million FEs in an Ulchi Focus Lens exercise.A key metric in ACTF-MRM performance is the ratio between wall clock time and simulation time. Generally, the simulation’s rate of time advance should appear to the training audience to be the same as the wall clock’s rate. This is known as a 1:1 game ratio. In practical application, the system must be able to exceed this ratio, and run faster than the wall clock.  This is required because during checkpoint saves, simulation time does not advance, and thus catch-up to wall clock time is required.To create an exercise-like load, we used an initialization database from a previous Division level exercise, provided by the NSC, and the order stream recorded at that exercise. The data set was then doubled, tripled, and quadrupled. This provided the opportunity to test, in discrete steps, replays of one to four blue divisions, with approximately symmetrical opposing forces and selected civilian, relief, and prisoner of war entities. Testing exposed the fact that some ACTF-MRM components using the MI initially could not process the one-division load4.1 MI Applications PerformanceThe MI applications interfacing TACSIM and RTM exhibited problems early in the performance testing. The applications were unable to keep up with the volume of data generated by the FEs using the baseline data set. Investigation showed that CBS was generating more data than required. This problem was corrected, but the MI applications still lagged.The RTM’s MI application, which runs on Linux, required modest tuning to get the required performance. The TACSIM MI application, which resides on the Solaris operating system, was more problematic. In this case, resolution required extensive MI software optimization and more powerful hardware. This combined hardware-software approach solved this performance problem.4.2 HLA PerformanceGiven the state of the MI applications, testing of the HLA interfaces proceeded with the MI applications disconnected. In the most extended test run, the federation achieved an average game ratio of 1.5:1 over 18 wall clock hours. During this period, using the doubled (two blue divisions) data set, CBS owned about 10,000 ground units and 700,000 FEs. JCATS started with no FEs and grew to own about 7,000. Within the HLA, 43,000 objects existed, with no performance problems.When simulation time is advancing in a conservatively managed HLA federation, each federate can be in one of two states: time advancing or time granted. A federate that has asked the time management service for permission to advance simulation time, but has not yet received permission, is in the time advancing state. Conversely, a federate that has received permission, but not yet requested another time advance, is in the time granted state. Any federate that spends significantly more time in the time granted state (compared to other federates) is known as the pacing federate. This is because a federate that remains in the time granted state for extended periods while others are waiting for a time grant is impacting the ability of the overall federation to advance.During the thirteen performance test runs, CBS was typically in a time granted state 70% of the time while JCATS was in this state 45% of the time. Therefore, CBS was the pacing federate. Had the HLA components’ performance been unacceptable, additional effort would have been applied to tuning HLA parameters. For ACTF-MRM Version 1.0, this was not required.4.3 TACSIM Guard TACSIM can use a feature called the SMART guard to allow data to be sent from a federation running at an unclassified or coalition-SECRET level to TACSIM running at the US-only SECRET level. Because of the problems with the TACSIM MI application, SMART was not tested under load until the ORE, where it proved to be a bottleneck at the ORE. Resolution of this issue is ongoing.5. Current Status The first ACTF-MRM ORE conducted in June of 2004 indicated that ACTF-MRM provides critical new functionality and will be employed in future Warfighter Staff Exercises or Mission Rehearsal Exercise (MRX) Events with certain caveats: Adequate performance of the TACSIM SMART guard is demonstrated.Issues with JCATS reporting of attrition back to CBS are fixed.Supplies that are handed to JCATS from CBS units, at the aggregate unit level, are distributed appropriately to JCATS entities and consumption of supplies is reported back to CBS, again, at the unit level. The ability to aggregate JCATS entities for control purposes is provided.  This capability currently exists in JCATS as a standalone simulation as well as in other federations but has not yet been testing within ACTF-MRM. Stability and performance in the federation are regained - and in the case of the CBS/JCATS interface, stability is significantly improved - after the required modifications are made and tested. The federation is verified as functioning reliably when distributed to remote sites via long haul network communications.  Furthermore, ACTF-MRM did not have well documented and reliable operations procedures because much of the federation’s key capabilities were developed in the months, and, in some cases, weeks, just prior to the ORE.  The procedures that require the most work are those dealing with integration of JCATS with the rest of the federation since it is the first time JCATS has been used with the rest of the simulations and support software, which have a long history of use together. Therefore in the near future:The ACTF-MRM team will document and test procedures prior to a potential employment of the federation for a training event in the fall of 2004. ACTF-MRM Version 1 will be fielded to the entire 60-site Army user base without the CBS/JCATS linkage capability.  Although the linkage to JCATS is not yet ready to be fielded, many other useful capabilities are provided in the to-be-fielded ACTF-MRM Version 1 such as CBS FLUD and the entity level consistency that it provides to the entire federation.  Plans are in place to make and test the necessary corrections. An ORE follow on test is planned for 16-20 August 2004 to verify that these conditions are met.Use of Version 1 with the linkage to JCATS will be limited to the upcoming special events or other exercises that can be supported by the development team.6. Lessons LearnedThe following are key lessons learned from the experience of designing, building and testing ACTF-MRM Version 1.Data mappings are time consuming to create and can hamper testing if they are not right by forcing attention on the mappings instead of true implementation or design issues.Test tools help and more are needed. ACTF-MRM used a tool developed by MITRE for the JSIMS program called the Simulations Interoperability Test Harness (SITH) but did not  have time to use all of its features, and also encountered some problems operating it in the ORE test environment. ACTF-MRM also developed rudimentary tools to test data mappings. It was relatively straightforward to test mapping of FE attributes since the reflections in JCATS occur automatically once the aggregate units are put in the JCATS AOI (and an AOI equivalent in size to the CBS playbox ensures all units are in the JCATS AOI) However, testing munitions mappings is more problematic since interactions containing munitions only occur when units engage. The experience with the JCATS bridge –which originated in Millennium Challenge 02 which used no time management- shows that HLA interfaces that work in non-time managed federations may need design revisions in a time managed mode.The DMSO provided RTI NG is no longer supported and has some significant problems, particularly with the federation state after a federate must be forcibly removed. This is a critical issue for ACTF because it must support long-running exercises in which federates may occasionally crash.  For that reason, ACTF-MRM needs to move to a commercial RTI.Valid combat interactions between aggregate and entity federates can be problematic and the value should be examined relative to their cost. Key issues are sensing, different approaches to modeling combat and vulnerability data. Attention to performance in the design and early performance testing really pays off.Dependencies in functionality should be examined and integration should be planned accordingly. In ACTF-MRM, RTM’s and TACSIM’s ability to get and process FE data via the MI was dependent on first establishing stable FLUD and JCATS handover / handback. Because this was not explicitly recognized at first, the RTM and TACSIM teams participated in integration events prior to our really being ready for them to do so.More focus should be placed on the interfaces to C4ISR systems since this is the training audience’s window into ACTF-MRM.  This is difficult to accomplish because of both the dependency issue raised in the previous bullet, and also because access to the C4ISR devices, in particular, can be difficult to arrange.The development team needs to work closely with the user when the user develops test plans to make sure that the test objectives are inline with tested capabilities. If the desired end state is a big reach, the developer should recommend incremental steps to get there, so if the overall goal is not reached, the “camel’s straw” can be determined. In the runup to the ORE, the user attempted to execute ACTF-MRM at a level (on many dimensions) that vastly exceeded what the development team had tested. This created a situation with a frustrated user and too many new variables for the development team to sort out the problems. The solution was to take a big step back and proceed forward in an incremental fashion.When a new team is formed to create a federation, or new team members are added, it is important that open communications and empowerment are established from the start as an expectation from all players. In the beginning of ACTF-MRM, not all players “pushed back” on group decisions, often assuming that the integration team somehow “knew better”. As the team matured this situation greatly improved and the team became more effective as a result.In a similar vein, it is important that the integration team be diligent in communicating information in a timely fashion to all players. In ACTF-MRM it was easy for the integration team to focus on the players involved in the problem at hand and to fail to follow up with the other players. Failing to communicate can lead to unintended consequences and players working to different ends. When bringing in a new federate, it is important that sufficient time is allocated to develop integrated operational procedures. If this is not done, operator errors can drive system stability to unacceptable levels and can preclude development of user confidence in the system’s overall robustness.It is important that the user and developer prioritize the objective. ACTF-MRM was a short-fuse development activity and focus was put on getting the highest priority functionality – the basic FLUD and handoff – over lower priority functionality such as CBS-JCATS cross model combat interactions.The development teams for each component need to be resourced at levels relatively appropriate for their workload. Because of other commitments, one federate team was under-resourced compared to others and this created a bottleneck – not to mention overworked people!7. Version 2 PlansVersion 2 design will begin after the follow on ORE test is complete. Like Version 1, Version 2 will target a June ORE, but in 2005.7.1 Complete Version 1 Functionality Some Version 1 functionality was deferred and other needs improvement. Areas that will be addressed in Version 2 include:Air-to-ground and ground-to-air combat interactions between CBS and JCATS.  Much work was done in this area in Version 1 but additional testing is required.   Additionally, the linkage to the Air Force’s AWSIM simulation will require additional testing in Version 2. Handoff of fixed wing aircraft and airbases from CBS to JCATS. This capability currently exists in Version 1 but was not validated.  Resupply from CBS to JCATS.  In Version 1, supplies are transferred along with units from CBS to JCATS. The capability to subsequently resupply upon depletion of these supplies in JCATS was not included in the Version 1 effort. Full tracking by CBS of entity damage events in JCATS. Damage of FEs in JCATS will be tracked in CBS in Version 2.7.2 Anticipated New Version 2 WorkIn additional to Version 1 cleanup activities listed in the previous paragraph, new functionality is planned for ACTF-MRM Version 2 to include: Convert the RTM and TACSIM interfaces from MI to HLA.  This helps to pave the way for interoperability with planned Version 3 federates (WARSIM and OneSAF) that use HLA and not the CBS MI. Evolve the ACTF-MRM FOM to facilitate the above full migration to HLA. Currently FE updates are communicated to TACSIM and RTM over MI and not HLA.  In order to add this information without creating performance problems, FEs owned by CBS will not be represented as individual HLA objects but instead as an array attribute of the aggregate. This was the approach used in the MI and was borrowed originally from JSIMS. Evolve ACTF-MRM entity representation towards alignment with the JNTC JFOM. This would be a first step towards allowing ACTF-MRM entities to interoperate with Live and Virtual entitiesCommon scenario generation capability across the federation. Common scenario generation would simplify current complex simulation database development and data mapping issues, e.g. CBS/CSSTSS simulation database mirroring, JCATS/CBS multi-resolution data mapping and simulation/C4I data alignment. 	In Version 2, we will lay the groundwork for implementation of common scenario generation in Version 3.Provide the capability to target individual CBS FLUDed FEs. Although CBS currently provides the federation with a consistent entity level representation, targeting must still be performed by hitting a given CBS unit’s center of mass.  The Version 2 effort to provide the ability to target these individual FEs will fully realize the many benefits of CBS FLUD.  Also in Version 2 there will be an Initial Capabilities Event which will serve as a proof of concept for the employment of the WARSIM in Version 3.  Finally, as the Joint Training Capability Analysis of Alternatives (AoA) results are implemented, it is possible and even expected that ACTF-MRM alignment with the Joint MRM Federation, which is anchored by JTLS and JCATS, could jump in priority over all of the aforementioned functional improvements.In all cases, ACTF-MRM is well on its way towards providing a significant increase in capability to the warfighter. The evolutionary, yearly spiral will ensure that new capabilities are provided as soon as possible and with the least risk.8. AcronymsAARAfter Action ReviewABCSArmy Battle Command SystemACTF-ERArmy Constructive Training Federation – Entity RepresentationACTF-MRMArmy Constructive Training Federation – Multi-Resolution ModelingADAPTORALSP Data and Protocol Transfer Over RTIAFATDSArmy Field Artillery Tactical Data SystemAMDWSAir Missile Defense WorkstationAOIArea of InterestAPIApplication Programming InterfaceASASAll Source Analysis SystemBAHBooz Allen HamiltonBCS3Battle Command Sustainment Support SystemC2PCCommand and Control Personal ComputerC4ICommand ,Control, Communication, Computers, and IntelligenceC4ISRCommand, Control, Communication, Computers, Intelligence, Surveillance and ReconnaissanceCBSCorps Battle SimulationCSSCombat Service and SupportCSSTSSCombat Service Support Training Simulation SystemCSSCSCombat Service Support Control SystemDBSTDigital Battlestaff Sustainment TrainerDISDistributed Interactive SimulationDMSODefense Modeling and Simulation OfficeDODICDepartment of Defense Identification CodeDSDirect SupportFBCB2Force XXI Battle Command, Brigade-and-BelowFEFormation ElementFMTFederation Management ToolFOMFederation Object ModelGCCSGlobal Command and Control SystemGSGeneral SupportHLAHigh Level ArchitectureJCATSJoint Conflict and Tactical SimulationJISJTC Infrastructure SoftwareJNTCJoint National Training CapabilityJPLJet Propulsion LaboratoryJTCJoint Training ConfederationLLNLLawrence Livermore National LaboratoryMCSManeuver Control SystemMIMaster InterfaceMRMMulti-Resolution ModelingMRXMission Rehearsal ExerciseNGNorthrop GrummanNGITNorthrop Grumman Information TechnologyNSCNational Simulation CenterOneSAFOne Semi-Automated ForcesOREOperational Readiness ExercisePEO STRIProgram Executive Office for Simulation, Training, and InstrumentationRTIRuntime InfrastructureRTI-NGRuntime Infrastructure Next GenerationRTMRun Time ManagerSITHSimulation Interoperability Test HarnessSQLStandard Query LanguageSTAMISStandard Army Management Information SystemTBMTactical Ballistic MissileUAVUnmanned Aerial VehicleWARSIMWarfighter’s Simulation9. References[1] 	Joint Warfighting Center, US JFCOM: “JCATS Executive Overview”, August 2003.[2] 	BAH: slide for ACTF ORE, May 2004.[3] A. Bowers, D. Prochnow, J. Roberts: “JTLS-JCATS: Design of a Multi-Resolution Federation for Multi-Level Training” Proceedings of the Fall 2002 Simulation Interoperability Workshop, Orlando, Florida, September 2002.Author BiographiesANITA ZABEK has been in the lead systems engineering role for a variety of DoD federations including JSIMS, the JTC and a variety of DMSO-sponsored federations in the test and evaluation, training, and analysis domains. Prior to joining MITRE, Ms Zabek worked for the Jet Propulsion Laboratory as task lead for the first CBS ALSP interface. Ms Zabek started her career in M&S at Ketron Inc and at the Institute for Defense Analyses. Ms Zabek has BS and ME degrees in Systems Engineering from the University of Virginia.DAVID L. PROCHNOW is a Lead Software Engineer in the Modeling and Simulation Engineering department at the MITRE Corporation.  He has served as the technical lead on several simulation programs at MITRE.  While at BDM International and Control Data Systems, Mr. Prochnow developed software for various corps-level and theater-level wargames.  He received a B.S. in Computer Science from the University of Virginia in 1983.HUGH HENRY is a Lead Modeling and Simulation Engineer with MITRE Corporation in Orlando, FL. He was previously at the Jet Propulsion Laboratory, working on the Joint Theatre Level Simulation (JTLS), Corps Battle Simulation (CBS), and several space flight projects. He holds a Master’s degree in Computer Science from Azusa Pacific University. Mr. Henry is a Certified Modeling and Simulation ProfessionalMICHAEL WRIGHT is the Lead Systems Engineer for PEO STRI on the ACTF-MRM project.  He has been a Systems Engineer and Integrator for numerous Army Command and Staff training federations, primarily at the entity level, for the past nine years.  Mr. Wright holds a BS in Electrical Engineering from the University of Central Florida and an MS in Industrial Engineering from Texas A&M University.  The users may connect other AAR systems to ACTF-MRM – at the ORE the users connected a system called ARCHER. FLUD is no longer an acronym but the name was preserved because the process of creating representations of hundreds of thousands of objects “floods” the recipient with data. The concept of an AOI, along with some other aspects of ACTF-MRM, was borrowed from the Joint MRM federation. [3] CSSTSS  was not included in the test because it does not get FE data so its load has not changed from its use prior to ACTF-MRM.PAGE  2PAGE  13	JCATS Controlled ObjectsJCATS AREA OF INTERESTJCATS Controller PerceptionCBS Controlled ObjectsJCATS must reflect entities in the boxJCATS will not reflect entities outside the boxCBS Objects are shown with “External Entity” circlesOwnership TransferIndirect FireGround-to-AirAir-to-Ground