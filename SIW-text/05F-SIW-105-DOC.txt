05F-SIW-105Bandwidth Reduction Techniques Used in DIS Exercises:An UpdateJerry SzulinskiLockheed Martin CorporationDistributed Mission Operations Center4500 Aberdeen Dr., SE, Building 942Kirtland Air Force Base, New Mexico 87117505-853-0257, DSN 263-0257 HYPERLINK "mailto:jerry.szulinski@kirtland.af.mil" jerry.szulinski@kirtland.af.milJoe SorrocheASRC Communications, Ltd.USAF Distributed Mission Operations Center (USAF DMOC)4500 Aberdeen Dr., SE, Building 942Kirtland Air Force Base, NM 87117505-853-0372, DSN 263-0372 HYPERLINK "mailto:joe.sorroche@kirtland.af.mil" joe.sorroche@kirtland.af.milJerry SzulinskiLockheed Martin Corporation.Distributed Mission Operations Center4500 Aberdeen Blvd St. SE, Building 942Kirtland Air Force Base, New Mexico 87117505-853-0252, DSN 263-0252jerry.szulinski@kirtland.af.mil. ABSTRACT:  Papers 03E-SIW-023 and 04S-SIW-077 presented bandwidth reduction techniques used in the Theater Air Command and Control Simulation Facility (TACCSF) Desert Pivot distributed exercises.  To recap, bandwidth reduction techniques included network transmission rules and using the TACCSF designed and built DIS Filter-Analyzer™ (DFA) and TACCSF Software Router™ (TSR). Since the paper was last presented, Desert Pivot exercises have evolved into Virtual Flag events, and have grown in participation and network complexity, and the TACCSF is now the Air Force Distributed Mission Operations Center (DMOC) of Excellence.  Several additional Army, Navy and Air Force sites have been added to Virtual Flag events. In addition, DMOC has added the following network connections:  The Joint Training and Experimentation Network (JTEN); The Distributed Missions Operations Network (DMON); The Defense Research Engineering Network (DREN), The Joint Distributed Engineering Plant (JDEP), The Distributed Training Operations Center (DTOC), and over 25 T-1s.  Data transferred among simulations are based on several protocols, including Distributed Interactive Simulation (DIS), NATO-EX, High Level Architecture (HLA), Video Tele-Conferencing (VTC), Tactical Data Links, and scenario playback capability for exercise brief and de-briefs. Because of this growth, additional bandwidth reduction techniques have been added to the DFA and TSR, as well as the DMOC network routers.This paper presents the additional bandwidth reduction techniques added, which contribute to the continued success of Virtual Flag events.IntroductionThe Air Force Distributed Mission Operations Center of Excellence (DMOC), formerly the Theater Air Command and Control Simulation Facility (TACCSF), located at Kirtland AFB, New Mexico, participates in many Air Force distributed exercises, as well as conducting four Virtual Flag (VF) distributed training exercises each year.  The exercises focus on Command and Control warfighter training in the sensor-to-shooter kill chain, experimental exercises, proof of concept, and many other training objectives.  The DMOC’s wargaming infrastructure includes representations of over two hundred computers, over 100 Local Area Networks (LANs), and over 25 Wide Area Networks (WANs).  Some of the 25 WANs that connect to the DMOC include the Joint Training and Experimentation Network (JTEN) site, the Distributed Missions Operations Network (DMON), the Defense Research Engineering Network (DREN), the Joint Distributed Engineering Plant (JDEP), the Distributed Training Operations Center (DTOC), and over 25 T-1s.   These networks are connected together, and have different bandwidth capabilities, which require continuous monitoring such that bandwidth limits are not exceeded.  Additional bandwidth reduction techniques have been added and are employed throughout all networks, ensuring that bandwidth is not exceeded on any network.  The following sections describe the additional bandwidth reduction capabilities added since papers  03E-SIW-023 and 04S-SIW-077.Network DescriptionsThe DMOC currently has persistent connections to several WANs, and over 25 point-to-point T-1 connections, shown in Figure 1.  The WANs connected to the DMOC, and DMOC LANs are described next.DMOC WANsAs mentioned in the introduction, several WANs connect to the DMOC, with varying bandwidth capabilities.  The WANs and bandwidth capabilities are shown in Table 1. The data sent and received from external sites must be continuously monitored so that the bandwidth of each WAN is not exceeded, resulting in data packet loss and data degradation.  Each site, when planning a Virtual Flag training event, submits technical capabilities and requirements.  The requirements are analyzed to determine if adequate bandwidth is available to send and receive all required data.WANs Connected to DMOCHardware Connection Total     BandwidthJTENDS-345 MbpsDMONDS-345 MbpsDRENOC-315 MbpsJDEPOC-310 MbpsMDANETOC-310 MbpsARCNETOC-310 MbpsDTOC1.5 Mbps*T-11.5 Mbps*T-1 connection to DTOCTable 1.  WANs and Bandwidth Capabilities2.2	DMOC LANsDMOC has a 100 Mbps LAN, which is referred to as the Common LAN.  All simulation data from local simulations and distributed sites are sent to the Common LAN.  Data required for each site are filtered, using the DIS Filter/Analyzer (DFA), sending only data that are required. The DFA has additional filtering capabilities that are discussed in detail in Section 3.    All required simulation data is sent to each external site.  Data that are not required is filtered, thus reducing bandwidth requirements.  There are several other DMOC internal LANs separated by the DFA, where only required data are sent, thus reducing the process loading for DMOC virtual and constructive simulations.  Figure 2 shows a detailed network diagram, which includes the DMOC Common LAN and how DFAs are connected.Bandwidth Reduction TechniquesThis section first briefly reviews previously presented bandwidth reduction techniques that are still used, then describes additional capabilities developed to support ever growing VF training events.Simple bandwidth rulesThe Bandwidth Rules were put in place to limit the amount of data on the DIS WAN, limit the users allowed on the DIS WAN, and limit the types of data on the DIS WAN.  They are: Figure 1.  Network Connections to the DMOCFigure 2. DMOC Internal Network DiagramNetwork use for only exercise data (DIS/NATO-EX/etc.) during the exercise.No FTPs during exercise or integration testing.Maximize bandwidth by adjusting Protocol Data Unit (PDU) update rates.Quality of Service (QOS) added to all routers.The network rules allow control of what data is on each network, the update rates of specific PDUs, and the ability to control the flow of data on the WANs.  Continuous monitoring of the DIS WAN during the integration testing and exercise is required to determine if data packets are lost, unauthorized data is on the WAN, and to determine if the predicted bandwidth is accurate.  These measurements are recorded and analyzed to determine if the predicted bandwidth was accurately calculated. The DIS Entity State PDU update rates commonly used are 55 seconds for ground stationary targets, 5 seconds for air objects, increased to 1 second when the distance threshold is exceeded.  Emission PDUs are sent once every 15 seconds, or when a change occurs. However, filtering of specific DIS PDUs is also required to limit what data is sent to which DIS LAN.  Filtering is accomplished by the DFA, and described in detail in Section 3.2.Quality Of Service (QOS) has been added that prioritizes all data on the LANs and WANs.  QOS is part of the CISCO router software where data priority is configured and maintained.  QOS is used during exercises to ensure that the highest priority data has precedence, and is routed through first to other routers and sites.  For example, before QOS was implemented, Video Teleconferencing (VTC) before VF training events was required, but other network data was not allowed because it would degrade the quality of the video data.  Consequently, integration testing, file transfers, and other tasks requiring the network would not be accomplished until the VTC was completed.  Now, VTCs and integration testing can occur simultaneously.  The VTC has highest priority, and modeling and simulation data is still transmitted, but it does not affect the VTC data quality.    The DIS Filter-AnalyzerThe DIS Filter-Analyzer (DFA) is a software application that can read DIS PDUs and determine if the PDU passes or fails the filter criteria set by the user (Ref [2]). It is important to note that several filter parameters could be applied at the same time.  For a PDU to be forwarded, it must pass all filters.  Also, a PDU and its interaction will be passed on.  For example, if an Entity turns on its radar and sends an Emission PDU, the Emission PDU is also forwarded.  If the Entity fires a weapon, the Fire and Detonate PDU is also forwarded.  The only exception is the range and DIS Enumeration filters.  These filters are relevant only for the Entity State PDUs.  An Entity State PDU must pass only one of these filters in addition to the other active filters to be forwarded. The sequence of filter checking is outlined below.DIS Exercise Identification (ID).  The DFA can allow or deny any PDU by Exercise ID.PDU Type enabled filter.  The DFA can allow or deny any PDU by type, such as Entity State, Fire, Detonation, Start, Stop, etc.  Entity State PDUs and their interactions are allowed or denied, based on the filter criteria. Allow/Deny Site filter.  The DFA can allow or deny PDUs generated from a specific site/application/entity id. DIS Enumeration.  The DFA stores the allowed DIS entities based on their enumeration.  The DIS enumerations are marked such that the filter can deny certain types of Entity State PDUs based on DIS enumeration.  PDUs sent by the denied entities are also disallowed (e.g.: enumeration for a MiG29 is disallowed - Entity State PDUs from all MiG29's are filtered, as well as any fire/detonation/emission/etc. PDUs from those entities).Range filter.  The DFA has 400 spherical and cylindrical range filters.  The filter allows Entity State PDUs within a range of a selected Site, Application, and Entity ID, or a specific latitude/longitude/altitude location.  This range filter can allow “bubbles of high fidelity” onto the LAN.  Controlling the amount of high fidelity data allowed onto a LAN, reduces the required bandwidth, and reduces the amount of data the simulator must process.   The filter criteria are applied to PDUs as they are read on the network interfaces.  If a PDU passes the filter criteria, it is immediately passed on to the outgoing LAN.  If the PDU fails any of the filter criteria, it is not passed on.The DFA receives DIS traffic from two separate DIS LANs, which will be referred to by example as the Blue Air CGF LAN and the common DIS LAN as shown in Figure 2.  Based on operator-selected parameters, PDUs received on the Blue Air CGF LAN are forwarded to the Common DIS LAN, and PDUs received on the Common DIS LAN are forwarded to the Blue Air CGF LAN.  The primary functionality of the DIS Filter is to reduce the PDU traffic between two LANs.  Secondary functionalities are to separate voice and data PDUs received on one port onto two ports, and combine voice and data PDUs received on two ports onto one port.  The DFA software architecture is shown in Figure 3. EMBED Visio.Drawing.6  Additional CapabilitiesThe DFA GUI has been updated to include all added capabilities.  Figure 4 shows the main GUI, and Figure 5 shows the edit filter GUI.  The additional capabilities added to the DFA are as follows:Additional PDU types Additional PDU types added to the PDU filtering capability are the Transfer of Control, Set Record, and Acknowledge PDUs.  These were added as part of the DMOC Operations/Tactical Environment Generator merge project.  Transfer of control using DIS PDUs has been added to the Air Warfare Simulator (AWSIM), Next Generation Threat Simulator, and the DMOC F-15 Virtual Simulators.  Transfer of control tests have been conducted with successful results, and event use is planned in the future when required.  Set data PDUs have also been added, which is required to pass encapsulated Multicast data packets sent by TSRs , described in detail in section 4.DFA Manager.  All DFAs can be controlled with the DFA Manager, which can access each DFA GUI.  Also, configuration management systems are part of the DFA Manager functions; such as creating DFA network configurations for event support, hence any network or DFA changes can be controlled from one display.  Each configuration file contains all DFA settings for a specific filter between LANs, and can be saved and recalled for modifications.  In addition, the DFA Manager can group filters by exercise, such that Increased Routing Paths.  When the DFA was originally designed, only four data paths could be configured between two LANs.  The paths separated voice and data DIS PDUs.  However, with the addition of several different LANs and WANs, several DFAs were required to filter data between these WANs, which required the addition of several PCs.  Now, 16 different paths can be configured between LANs and WANs.  Multiple paths can be configured between the same LAN, but different UDP Ports.  For example, the DMOC AWACS Virtual simulator has 14 consoles, and can be split into four different AWACS if required to support different events.  Only one DFA would be required between the AWACS LAN and the Common LAN; separating the four AWACS onto different UPD ports, and keeping voice separate as well.  Also added was the option to use a different DIS exercise ID with each path, if required, or use a common DIS exercise ID to all paths.DIS Voice Auto Subscribe.  During VF training events, there can be over 100 different frequencies on the DMOC Common LAN, supporting many different sites and simulations.  The DIS Voice Auto Subscribe function automatically determines which DIS voice frequencies are used on one LAN, and only allows those to pass, thus reducing bandwidth use by DIS voice.  One example of this reduction is sending and receiving data with the F-16 simulators at the Mesa facility.  First, the F-16s are in a air to ground training mission, so a range filter is applied to the F-16 entity state PDUs.  Also, only four frequencies are used at the site, so the DFA automatically determines which DIS voice frequencies are used, then sending only those frequencies from the DMOC Common LAN.DIS Transport Function.  The DFA has the ability to transport DIS entity state PDUs from one part of the world to another.   This requirement was from a previous VF event, where the Ft. Benning Virtual Village entity state PDUs, such as buildings and other fixed targets were transported to Southwest Asia.  The Army conducted training at the Ft. Benning facility, but the location of the village and Army personnel appeared in Southwest Asia to all other VF participants.  This increased the fidelity of training for all VF participants without requiring Figure 4.  DFA GUI ManagerFigure 5. DFA Edit GUIcreation of a high fidelity village in the area of interest.Link 16 Conversion.  The DFA has the capability to convert TADIL messages sent using DIS Signal PDUs, but using a Boeing developed Signal PDU, to the SISO J Signal and Transmitter PDUs.   This was required to allow TADIL J transmission and interoperability between the DMOC F-15s and the Boeing Mission Training Centers F-15 simulators.  IFF Conversion.  Another requirement for interoperability between the DMOC and the Boeing Mission Training Centers F-15 simulators was the conversion of IFF messages from primary mode 4 to the DIS standard alternate mode 4.  This required the DFA to read incoming IFF messages from the Boeing MTCs, and then convert to the DIS standard alternate mode 4.Added box shape to Range Filter.  During JRF, a rectangular portion of the area of interest was filtered because of the Joint Live, Virtual, and Constructive segregation requirements.  To accomplish this, three spherical range filters were created, but some entitles were reported in the areas not covered due to the circular range filter shape.  Now, specific lat/long coordinates can be entered to create a box shaped range filter, including squares, rectangles, or any 4-sided area required.Additional Routes.  The DFA can now provide up to 16 different routes between LANs.  These routes can be configured to provide specific routes between two LANs, or many different LANs, depending on how many Network Interface Cards on the PC are available.  This capability allows the addition of DIS filters without requiring additional PCs, only additional NICs.Update Rate Change.  The DFA can now reduce the Entity State PDU update rates sent by simulations.  During JRF, some simulations required higher ground Entity State PDU update rates than the 55 seconds required for ground entities.  The solution was to increase the update rate for one of the ground computer generated forces simulation, then modify the DFA such that updates for fixed ground entities were only passed once every 55 seconds to some LANs, and all updates passed to other LANs that required a 5 second update rate.DIS Enumeration Conversion.  The DFA can now convert DIS enumerations in the entity state PDU.  The feature allows conversion of non-standard DIS enumerations from simulations that cannot change the enumeration field in the DIS entity state PDU to an enumeration that is listed in the DIS standard.DIS Delay.  The DFA can add a delay to the first route by typing the delay on the command line when starting the DFA.  The requirement was implemented during JRF, when known propagation delays were required for DIS PDUs sent to a DIS/HLA gateway.DFA on SGI OS.  The DFA was originally written and compiled on a SGI machine, with IRIX Operating System (OS).  The DFA was then moved to PC hardware using Linux OS, plus additional capabilities.  However, some distributed sites did not allow the Linux OS, so the additional capabilities were added to the SGI version.  In addition, an additional requirement was introduced into the DMOC Configuration Management process such that all corrections and updates would be added to both DFA OS versions.Future ModificationsFuture DFA modifications that are planned are:Ping through the DFA.  Currently, the DFA does not pass any data between LANs except DIS standard data.  The capability would allow network health monitoring from one location, rather than setting up separate ping applications on all LANs separated by the DFAAllow non DIS data to pass through the DFA.  The capability would enable other types of data to pass between LANs unaffected by the DFA, such as other simulation protocol data, HLA, NATO EX, and tactical data links.Add TADIL J to transport capability.  This would require the DFA to read TADIL J messages sent using DIS Signal PDUs and transport the location in the J2.X series messages, and reported locations, the J3.X series messages.DFA Manager recovery.  During a Blue Flag training event, the DFA PC crashed.  The filters controlled by the DFA Manager continued to run, but were not accessible i.e., the filters could not be monitored, modified, or shut down.  A capability would be added to the DFA such that any filter could assume DFA Manager tasks, including GUI display and control.TACCSF Software Router (TSR)DMOC, formerly TACCSF, exercises support various data formats within its synthetic battlefield, commonly referred to as the Battlespace.  As described before, the most prevalent is the Distributed Interactive Simulation (DIS) protocol as defined by the IEEE Std 1278.  Most of the Battlespace simulations use this protocol to communicate between each other to present the warfighters with an underlying synthetic environment.  Many of the live-fielded systems, however, use the NATO-EX format for communication; this data also needs to be sent between the remote sites and DMOC.  One such particular instance is the connection of the remote Army National Guard Patriot, Joint Services Work Station (JSWS) and MCE systems through DMOC.  Partial T-1 links often connect these live systems through networks such as the Guardnet, and the TSR acts as a transport utility for this network and the data carried within it.  The TSR additionally supports video tele-conferencing for after action debriefs.  The TSR was one of the first applications in distributed training environments to use software routing in order to reduce bandwidth.  It does this by employing multicast where broadcast was typically used to send User Datagram Protocol (UDP) data, such as DIS.  Use of multicast ensures a single copy of the data on the wire, whereas broadcasting it could potentially create multiple copies thus increasing the bandwidth requirement.  Multicast additionally ensures that the data is sent only to the remote sites that actually show interest in this data by subscribing to the multicast subscription group.In the past 2 years the TSR function has expanded considerably over its initial capability as described in the Fall 2004 SIW paper 04S-SIW-077 Bandwidth Reduction Techniques Used in DIS Exercises.  The basic TSR functionality, as can be seen in Figure 4 is to act as a network gateway for a simulation site.  It listens to all UDP-based network traffic, including DIS, VTC, NATO-EX, etc., wraps it in its own format, and sends it to all remote TSR application for decoding, and forwarding to their local systems.  The original application exclusively used a “multicast bridging group” that was used by all TSRs to communicate with each other.There is also a data-metering scheme built into the TSR, which allows users to configure how and what type of data is to be buffered for later transmission.  This feature allows for non-uniform network loads to be smoothly spread over limited available bandwidth simultaneously minimizing data loss, and limiting latency of time-critical data.New TSR Protocol FeaturesThe function and design criteria of the original TSR application can be found in Ref. [3].  Several transport features and a graphical user interface (GUI), were added since then.  Where the original TSR was capable of listening to broadcast UDP packets, and it used a multicast address to communicate to all other TRSs (Ref [3]), the current TSR has a greatly expanded networking functionality.  TSR now can accept any UDP data that is carried using broadcast, unicast or multicast protocols.  This further expands its usefulness beyond the DIS protocol.The “bridging” method, the communication between TSRs, has also been expanded.  In addition to the original multicast method, users can now also select broadcast or unicast.  This is particularly helpful in situations where multicast is not allowed, but where the metering features of the TSR are desired.  This can be seen in Figure 6 where the “Forwarding & Receiving Protocol” is specified.  Specifying a non-broadcast IP address triggers the software to use unicast instead of broadcast as the actual protocol between TSRs.  The side effect of this, of course, is that only one pair of TSRs can be used in this configuration.The “Transmitting Medium” specification can be seen above the “bridging protocol” specification.  Initially, only “UDP packets” were supported because the TSR used its own format structure in which it wrapped the data packets.  With time, it was desired for the TSR data, DIS or otherwise, to be allowed to pass through DIS Filters.  Since the DIS Filters treat all packets as DIS PDUs, it was necessary to make these TSR packets become DIS PDUs.  When selecting this feature, the TSR packets, which are already carrying some other UDP-based data, are wrapped inside Set Data PDUs.  Another configuration window (not shown) allows users to specify the Set Data PDU Exercise ID, and Entity ID of the TSR to distinguish it from legitimate simulations.  In this mode, the TSR applications become de-facto simulations participating in a given exercise with exception that they do not create or consume any simulation data, but merely relay somebody else’s data (not necessarily DIS data) across the wide are DIS network.Selecting “UDP Packets” still uses the TSR-specific protocol, and is independent of the “bridging protocol”.  In other words, it is possible to use multicast, broadcast, or unicast, to transport the TSR-formatted packets.  Alternatively, these same transport mechanisms are available for transporting the TSR packets wrapped inside Set Data PDUs.New TSR GUIThe original TSR software was wholly configured via ASCII configuration files (Ref. [3]).  These were relatively easy to configure, particularly for network engineers, who were the most typical users of the TSR.  As the software matured, expanded, and transitioned into the DMOC mainstream the typical user base transitioned to a simulation user.  This transition created a need to provide a more user-friendly graphical environment.The current TSR i comprised of two Linux executables: TSR_APP, and TSR_GUI (Figure 6).  The TSR_APP is the application, which performs the actual reading and writing of packets to and from the networks.  It retains its command line driven user interface, and it is run from a Linux shell.  At startup, the TSR_APP reads the configuration file as specified on the command line where the entire route, port and options configuration is stored.The TSR_GUI is a separate process that simply performs the configuration actions, and saves them to a file.  When the “Start” button on the TSR_GUI is pressed, the current GUI configuration is saved to a temporary file.  The TSR_APP is then launched in a new Linux shell, and the configuration file is passed to it via a command line option.  This configuration file can still be manually edited in an ASCII editor as before.  Likewise, if a user chooses to do so, the TSR_APP can be launched independently of the GUI.  This approach has some advantages.  First, a number of TSRs can be launched remotely without incurring the penalty of communicating with many X servers across long haul networks.  Second, some users prefer using ASCII files since they can use many readily available scripting features included with the Linux operating system.  These scripts allow for rapid global changes to multiple ASCII configuration files without the hassle of loading them one at a time into GUIs.  Most of the TSR configuration is network related, and thus requires restarting the application when configuration changes.  Such physical application separation therefore does not have adverse affect on functionality since there is very little dynamic (at runtime) configuration possible. The TSR GUI is designed to provide as much information to the users as possible without the need to navigate through a myriad of windows in an attempt to find information.  The GUI information is divided into 4 primary areas: Local Interface, Remote Interface, Bridging Interface, and Statistical Information.  These are graphical representations of the functionality described in Ref. [3].ConclusionDistributed training and simulation such as DMOC’s VF events provide today's warfighters with a realistic training environment, which includes coalition operations.   VF events fulfill many training concepts including “train like we fight”, and “no particpants will be a training aid in a VF event”.The VF events primarily use DIS as the distributed simulation protocol.  There are still many DIS-based distributed exercise infrastructures remaining in the simulation and training community. In many cases these infrastructures will remain in place in years to come, so it is imperative to use the available network bandwidth more efficiently.  As the role of distributed virtual, constructive and live simulation grows, tools such as the DIS Filter and the TSR allow us to move forward, and to add to the training realism.Bandwidth capabilities have increased such that bandwidth considerations are not as critical as a few years ago.  However, differences in bandwidth capabilities still require careful monitoring such that the network with the lowest bandwidth capability can still interoperate with other higher bandwidth capable networks.There are other technologies that provide similar functionality; however, the tools described in this paper offer maximum flexibility while maintaining minimal impact to the existing network and exercises infrastructures.5.	References[1]	IEEE 1278.1a, 1998 [2]	DIS Filter-Analyzer Software User’s Manual, 2005.[3]	04S-SIW-077 Bandwidth Reduction Techniques Used in DIS Exercises.  Joe Sorroche, Jerry Szulinski; April 2004.BiographyMr. SORROCHE has 17 years professional experience; 10 years experience in the Modeling and Simulation field. He currently works for Arctic Slope Regional Corporation Communications (ASRCC) at the DMOC as the Exercise Director for distributed exercises, and has been the Engineering lead for the DMOC for JEFX 06, JEFX 04, Millennium Challenge 02, JEFX 2000, JEFX 99, EFX 98, and many Blue Flag and Virtual Flag exercises. He is the Vice Chair for the Simulation Interoperability Standards Organization (SISO) Tactical Data Links Study Group, the Link 16 Product Development Group Chair, and the SISO Liaison for the NATO Tactical Data Link Interoperability Testing Syndicate.  Mr. Sorroche is a co-recipient of the Fall 2002 SIWZIE Award for paper 02F-SIW-119 titled “TADIL TALES.”  He has Bachelors and Masters of Science Degrees in Electrical Engineering from New Mexico State University.  He is a member of Tau Beta Pi and Eta Kappa Nu Honor Societies.   Mr. Szulinski has 15 years of experience in the modeling and simulation field, and currently works for Lockheed Martin as a Principal System Engineer at the DMOC.  During his career he has been involved with constructive, live and virtual simulation including rotary- and fixed-wing flight simulation, physics-based weapons effects modeling, live air combat maneuver ranges, mission rehearsal and exercise support for Navy’s Fleet Battle Experiments and Air Force’s Virtual Flag exercises.  His primary area of expertise is within distributed simulation (DIS/HLA), visual simulation and computer networking.  He holds a Bachelor of Science in Aeronautical Engineering from Embry-Riddle Aeronautical University. Page  PAGE 2 of  NUMPAGES 10Page  PAGE 5 of  NUMPAGES 1Page  PAGE 5 of  NUMPAGES 1Figure 4. Functional DMOC/Guardnet TSR Architecture  DMOC Figure 6.  TACCSF Software Router Configuration                 Figure 3: Software Architecture