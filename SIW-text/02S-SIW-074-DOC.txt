Conceptual Modeling- The Missing Link of Simulation DevelopmentJack “Jake” BorahAEgis Technologies Group12565 Research Parkway, Suite 390Orlando, FL 32826407-380-5001 HYPERLINK "mailto:jborah@aegistg.com" jborah@aegistg.comKeywords:Conceptual modeling, simulation development processABSTRACT:  Conceptual modeling has been a topic of discussion for several recent Simulation Interoperability Workshops (SIWs).  Ongoing work by Haddix [01F-SIW-098] and Lacy [01S-SIW-074] has highlighted the need to reconcile the multiple views presented by various authors at past SIWs in order to achieve consensus on an essential technique of simulation engineering.    Unfortunately, a critical shortcoming of these discussions has been that the purpose of a conceptual model has not been clearly understood.  Past papers have discussed conceptual modeling as it relates to simulation, system, and software development with little regard to the distinctions between these activities.  Simulation, system and software development are fundamentally similar in that they are engineering efforts employing structured time-sequenced processes ultimately meant to create products in response to customer’s requirements.  However, there are, at least, three critical differences between simulation/system/software engineering.  That difference is the perspective or intellectual frame of reference of the engineer.  Each type of engineer implicitly has a differing, experiential, view of their world guiding the manner they proceed through development.  How the engineer views the world and, more importantly, the anticipated form of the finished product, has a great influence upon the embedded development techniques the engineer employs during the development of the product.  Simulationists, systems engineers, and software developers have been trained to focus upon differing elements as key features for a sound conceptual model. This paper advocates that the community of  engineers engaged in simulation development need to step back and develop a clear understanding of role of conceptual modeling in the simulation development process.  Once the role of conceptual modeling is established then the requisite elements of a sound conceptual model can be defined as a part of ongoing discussion of sound simulation development practices.IntroductionThis paper is part of the extended discussion surrounding the use of the term “conceptual model” within the context of simulation and High Level Architecture federation development.  The role of a “conceptual model” and even the very definition of the term have been the basis for much discussion within the M&S community.  In yet another attempt to resolve the dilemma posed by a “conceptual model”, this paper advocates that the M&S community should develop a widely accepted definition and methodology for conceptual modeling by starting with a  of review some basic principles of simulation development.This “return to basics” approach was suggested by the Dr. Haddix’s Fall 2001 Simulation Interoperability Workshop Paper [01F-SIW-098] [1].  Dr. Haddix presented in his paper a discussion of the software development processes and nomenclatures in an attempt to resolve the discussion of “conceptual modeling”.   In doing so, Dr. Haddix highlighted a key idea that will be expanded upon in this paper, the review of simulation development processes and the associated nomenclature.  To resolve outstanding issues over “conceptual modeling”, it is important to perform such a review.  While simulation development has similarities to systems and software engineering, simulation development has several distinct differences.  These differences significantly influence development activities and products and set simulation development apart from systems and software development.      Simulation Development BasicsTo begin, the terms “model”, “modeling”, and “simulation” must be defined.  Merriam Webster’s Collegiate Dictionary [2] has several possible definitions for the term “model” as a noun.  The one most applicable in this context is “ a miniature representation of something” or “a pattern of something to be made.”   Model or modeling defined in verb sense is “to produce a representation or simulation of.”   Finally, simulation is “the imitative representation of the functioning of one system or process by means of the functioning of another.”   So model, modeling, and simulation all share the fundamental relationship of being a man-made representation of something.   Generally, these terms differ on the basis of dynamism.  Models are regarded as static entities, while simulations are dynamic in that some change is depicted over time.  This is one aspect of modeling and simulation that is often misunderstood or neglected.    But returning for a moment to the definition of the term “model”, Banks, Carson, and Nelson in Discrete-Event System Simulation [3] defines a “model” in a similar fashion to those above as “a representation of a system for the purpose of studying the system”.   In doing so, Banks adds an important aspect to the definition of model that highlights one of the differences between simulation development and systems or software engineering.  Banks in his definition has indicated the reason a model is constructed.  A model is a representation of a system for a distinct purpose, that purpose being the further study of the system.  Jeff Rothenburg [4] while researching military simulations at RAND in the early 1980’s wrote, “modeling in its broadest sense is the cost effective use of something in place of something else for some purpose.  Every model refers to some real-world entity (its referent) of which it is a model; it has some purpose with respect to this referent, and it must be cost-effective (in some relevant coin) to use the model for this purpose than to use the referent itself.  Modeling thereby makes it possible to study phenomena that are too difficult, too dangerous, or impossible to observe directly.”The “cost effective use of something is place of something else for some purpose” is an important, fundamental distinction of simulation development.  Models are built as representations for a definitive purpose, which has been established.  The purpose for which the model has been constructed is established in the simulation development process.  This is another place where simulation development efforts go astray.  Systems engineers and software designers often view the end product as a replication of the real world where as simulationists view the end product as a suitable imitation of the real world. Bernard Zeigler in Theory of Modelling and Simulation [5] described the simulation development process (for computer simulations) in terms of three major elements—the real system, the model, and the computer (Figure 1).  For him, modeling was primarily concerned with the relationships between real systems and models, while simulation referred to relationships between computers and models.  Zeigler also wrote that one of the most important aspects of modeling was communication.  “The long-term contribution of any modeling effort lies in the benefits it affords, either by direct use or by guidance for further development, to science and industry.”  Zeigler thought that there were several aspects of modeling that aided effective communication.  Of interest in this paper are the first two of his aspects—the informal description of the model, the formal description of the model structure.   EMBED PowerPoint.Show.8  Figure 1- Zeigler’s Basic Elements of the Modelling and Simulation EnterpriseAccording to Zeigler, the informal description of a model is written using English or other natural language and contains the assumptions that went into directing its construction.  He wrote that the informal model played a fundamental role during “the period of activity in which the modeler conceives, programs, debugs, and test his models” He elaborated by stating, “Writing out an informal description of the model, presenting the essentials but not the details, helps one to maintain a clear gestalt of the model as it develops.”  In his view, the informal model helps “both users and colleagues grasp the basic outlines of the model and to visualize it within the framework of their prior conceptions about how things work.”  This is the fundamental purpose of a “conceptual model”. The term “model” has been defined in this paper, but not the term “conceptual model”.  Returning for a moment to Merriam Webster’s [2], the adjective “conceptual” is defined as “of, relating to, or consisting of concepts.”  The noun “concept” is defined as “something conceived in the mind” or more concisely for the purposes of this paper, “an abstract or generic idea generalized from particular instances.”  Therefore the term “conceptual model” should be defined as “an abstract representation of something generalized from particular instances.”Zeigler indirectly reaffirms this definition by concluding that, “an informal description of the model is the most natural and effective way of establishing contact with the reader’s intuition and of interfacing your model to have an effect on the reader’s world model—either to add nicely to its prior structure or to jar it into a more adequate one, when the two models conflict.”  Zeigler then wrote that the formal description of a model is useful once users and colleagues comprehend the informal model and want more detail.  The formal model is the unambiguous description of the model structure divorced from program implementation.  The formal model should be used as an aid “to detect omissions and inconsistencies, and to resolve ambiguities inherent in informal descriptions.”   The formal description “has the virtue of clarity and conciseness, while sacrificing the natural interfacing with the reader’s intuition afforded by informal description.”Thus, a second distinctive feature of simulation development is that differing presentations of models are built during a simulation development process for differing audiences.  Zeigler also established a hierarchy of model elements underlying the simulation development process.  He wrote, “Although they [the elements] may not come isolated and neatly labeled in a modeller’s description of his simulation, keeping the distinctions they embody in mind will greatly enhance our ability to deal with the subject area at hand.”  These elements were:The real system, “a source of potentially observable data”The experimental frame, “a set of limited circumstances under which the real system could potentially be observed or manipulated”The base model, “a comprehensive model capable of accounting for the behavior of the real system in all possible experimental frames”The lumped model, “a simplification of the base model that remains valid in the experimental frames of interest”The computer model, “which implements the lumped model in a particular programming language on a particular machine”This hierarchy of model elements highlights the third and fourth distinctive features of simulation development, abstraction and simplification.  Authors of simulation texts agree that the real world is too complex to be fully understood much less modeled by humans.  Therefore the most practical approach to building a model is to abstract from the real world only those key elements that form a reasonable approximation of the real world required for the purpose at hand.  In this manner, all models are simplifications and abstractions of the real world.Simplification is an analytical technique in which unimportant details are removed in an effort to define simpler relationships.  Scientists and engineers have traditionally used simplification as a problem solving technique to produce approximations of complex problems that yield usable results.  Abstraction is a more intuitive analytical technique.  Abstraction requires the modeler to establish the essential features of a real system and then represent those features in a different form.  The resultant model demonstrates the qualities and behaviors of the real world system, while not being a direct emulation of the system.  Law and Kelton [6] suggested that, “ A simulation practitioner must determine what aspects of a complex real-world system actually need to be incorporated into the simulation model, and what aspects can safely be ignored.  It is generally not necessary to have a one-to-one correspondence between each element of the system and each element of the model.  Modeling each aspect of the system will seldom be required to make effective decisions, and will also be infeasible due to time, money, or computer restraints.”  When completed, the simplified and abstracted parts of the real world can be synthesized into a useful approximation of the original complex real world system. Widman, Loparo, and Nelson [7] noted, “that the model cannot represent the real system completely.  It always represents an idealized approximation.  The simulationist must ensure that the approximation is adequate for the desired simulations.” The Simulation Development ProcessAuthors of simulation textbooks such as Law and Kelton, Bennett, Shannon, as well as Banks and Carson, have defined simulation study or development processes.  The schema proposed by Banks and Carson [3] will be discussed within this paper.  They list six steps in their development process.  Others depict as many as twelve steps.  Whether there are as few as six steps or as many as twelve, the authors generally agree on the nature of the activities that must take place.  All processes seem to follow the modeling hierarchy suggested by Zeigler in which a real world system is synthesized into a computer model.  The six steps of Banks and Carson are:  Problem formulationSetting of objectives and overall project planModel conceptualizationData collectionModel translation.This paper will examine the important characteristics of their first three steps using the words of established authors in the field of simulation science.  As these steps are discussed, it will be shown that the current version of the High Level Architecture Federation Development and Execution Process (FEDEP) model embraces these simulation development considerations.Problem formulation—“Every study should begin with a statement of the problem.  If the statement is provided by the policymakers, or those that have the problem, the analyst must ensure that the problem being described is clearly understood. … There are occasions where the problem must be reformulated as the study progresses.  In many instances, policymakers and analysts are aware that there is a problem long before the nature of the problem is known.”  “  Every study must begin with a clear statement of the study’s overall objectives and specific issues to be addressed; without such a statement there is little hope for success.”  Law and Kelton [6] advise, “Carefully define the issues to be investigated, the measures of performance for evaluation, the manner in which the model is to be used, and the alternative systems configurations of interest at the beginning of the study.  Models are not universally valid, but are designed for specific purposes.  If the issues of interest have not been specified, then it is impossible to determine the appropriate level of model detail.”  These quotations from noted simulation textbook authors are quite similar to guidance currently contained in the Federation Development and Execution Process (FEDEP) Model, Version 1.5, Activity 1.1, Identify Needs [8].   “The primary purpose of this activity is to develop a clear understanding of the problem to be addressed by the federation.”  As well as, “an explicit and unambiguous statement of federation needs is critical to achieving clear communication of intent among the developers of the federation.  Failure to establish a common understanding of the required product can result in costly rework in later stages of the federation development process.” Setting of objectives and overall project plan—“The objectives indicate the questions to be answered by simulation.  At this point a determination should be made concerning whether simulation is the appropriate methodology for the problem as formulated and objectives as stated.”  This “phase refines an idea about a task to be performed using computing equipment, into a definition of what is expected from the computer system.”  One product, a risk assessment, should result from this step for simulation development.  A risk assessment should set forth the technical and non-technical risks sufficiently to set expectations for management and the development team during the remainder of the development.  Once again, this simulation development process guidance is similar to text of the FEDEP model, Activity 1.2, Develop Objectives [9].  “The purpose of this activity is to refine the needs statement into a more detailed set of specific objectives for the federation.  The federation objectives statement is intended as a foundation for generating federation requirements, i.e., translating high-level user/sponsor expectations into more concrete, measurable federation goals.”  “Early assessments of federation feasibility and risk should also be performed as part of this activity.  In particular, certain objectives may not be achievable given practical constraints (such as cost, schedule, availability of personnel or facilities) or even limitations on the state-of-the-art of needed technology.  Early identification of such issues and consideration of these limitations and constraints in the Federations Objectives Statement will set appropriate expectations for the federation development effort.”Model conceptualization—“The construction of a model of a system is probably as much art as science. …The art of modeling is enhanced by an ability to abstract the essential features of a problem, to select and modify basic assumptions that characterize the system, and then to enrich and elaborate the model until a useful approximation results. … the model complexity need not exceed that required to accomplish the purposes for which the model is intended.  Violation of this principle will only add to model building and computer expenses.  It is not necessary to have a one-to-one mapping between the model and the real system.  Only the essence of the real system is needed.”  This step is intended to “develop a model or the system’s desired behavior. … Analysis must yield a statement of what the system does, not how it does it. … When reasonably complete, management should be able to answer the following six questions:  What are the system’s major functions?  With respect to these functions, what are the primary behaviors that the system exhibits?  For each of these primary behaviors, what variant behaviors may arise?  What are the roles and responsibilities of the key classes and objects that contribute to these behaviors?  How must the system relate to other systems?  And finally, are there any new or revised areas of risk that have been uncovered during the discovery process?”  Four products should result from this step.  The first product is a description of the simulation’s context.  The second is a collection of scenarios that define the behavior of the simulation.  The third is a domain model, and the fourth is a revised risk assessment. [9]  These products dovetail neatly with creation of a federation scenario, and development of a federation conceptual model which are products of Step 2: Develop Federation Conceptual Model [8] in the FEDEP model.   The Role of a Conceptual ModelHaving reviewed a simulation development process to the point where a conceptual model is first featured, it is time to ask, what is the role of a conceptual model in simulation development?  This question is at the center of all the discussion on conceptual modeling.  Pace [10], Lacy [11] and Haddix [1] in recent SIW papers have indicated the extent of the confusion over conceptual models.  Pace has stated that, “ a simulation conceptual model is a simulation developer’s way of translating modeling requirements  (i.e. what is to be represented by the simulation) into a detailed design framework (i.e., how it is to be done), from which the software, hardware, networks (in the case of distributed simulation), and systems/equipment that will make up the simulation can be built.”  Lacy noted in summarizing the outcome of a Defense Modeling and Simulation Office meeting, “The overloading of the term ‘conceptual modeling’ was discussed.  Participants eventually described two types of conceptual models—the domain-oriented Functional Descriptions of the Mission Space (FDMS) and the design-oriented Conceptual Models of Systems (CMoS).”  Finally as Haddix points out, “Many terms, including ‘Conceptual Modeling’ (CM) have multiple usages throughout the system development literature. … Does conceptual model refer to the conceptual model of the user or the conceptual model of the system designer?”So, once again, what is the role of a conceptual model in simulation development?  First of all, it is to be part of Rothenburg’s cost-effective model constructed for a cognitive purpose.  Second, it is to be an embodiment of the communications in Zeigler’s modeling process, and finally it is to be the result of the “art of modeling” or the process of analysis, abstraction, simplification, and synthesis within a simulation development process.  Shannon [12] defined the “art of modeling” when he wrote, “The process by which a systems engineer or management scientist derives a model of a system he is studying can best be described as an intuitive art.  Any set of rules for developing models has limited usefulness at best and can only serve as a suggested framework or approach.  In attempting to make the process of modeling explicit we are trying to systematize the intuition and experience of those who have gone before. … The approach to the successful building of models appears to proceed on the basis of elaboration and enrichment.  One begins with a very simple model and attempts to move in an evolutionary fashion toward a more elaborate model that reflects the complex situation more clearly. …Thus, the art of modeling consists in an ability to analyze a problem, abstract from it its essential features, select and modify the basic assumptions that characterize the system, and then enrich and elaborate the model until a useful approximation results.”There is no single conceptual model per se because of the essence of the “art of modeling”.  There are multiple iterations of the conceptual model, which evolve as required by a simulation development process.  A simulation conceptual model is a “living” document that grows from an informal description to a formal description to communicate between the diverse groups (sponsors/users, modelers, systems engineers, and software designers) participating in a simulation development.  The FEDEP expresses the most appropriate view of a conceptual model.  “During the Conceptual Analysis activity, the federation development team produces a conceptual representation of the intended problem space based on their interpretation of user needs, federation objectives, and the defined environment. … The federation conceptual model provides an implementation-independent representation that serves as a vehicle for transforming objectives into functional and behavioral capabilities; the model also provides a crucial traceability link between the federation objectives and the design implementation.  This model can be used as the structural basis for many federation design and development activities (including scenario development) and can highlight correctable problems early in the federation development process when properly validated.”  The M&S community should realize that the ambiguity concerning a conceptual model is not going to be easily resolved since many differing developmental perspectives (simulation, systems, and software) are employed during a simulation development.  Each perspective would like a conceptual model defined and documented according to their view.  However, this is an apt place to recall the cliché concerning five blind men and the elephant.  Each touching a different part of the elephant (tusk, trunk, ear, leg, and tail) thinks he has found the most precise definition of the elephant.  But each is wrong because they are unable to view the entire elephant from their perspective.  It is the same situation here.  A conceptual model should be malleable and adopt a coherent form appropriate for each particular simulation development phase.  Highly unstructured, informal conceptual models are sufficient during the early phases of simulation development when simulationists are performing requirements identification and knowledge engineering activities with end users/sponsors.  Later, when simulationists need to pass on information with systems and software developers, the informal conceptual model should be transformed into a formal conceptual model through the formalization of its structure and greater elaboration of interior detail.  The M&S community should recognize the role of the informal conceptual model, and establish its genetic code before continuing to specific the format and detail of a formal conceptual model.The M&S community should always remember what Shannon [12] wrote, “ The art of modeling can be mastered by those who possess the necessary skills of ingenuity, insight, and resourcefulness, as well as an extensive exposure to the systems and physical phenomena they are trying to model.  There is no hard and fast rule about how the problem is originally formulated, i.e., how one looks at it in the first place.  There are no magic formulas for deciding what should be included in the model in the form of variables and parameters, descriptive relationships and constraints, and criterion for judgment of effectiveness.  Remember that nobody solves the problem; rather, everybody solves the model that he has constructed of the problem.  This concept helps to keep the model and the art of modeling in the proper perspective.”References[1] F. Haddix: “Conceptual Modeling Revisited: A Development Model Approach for Modeling & Simulation,” Paper 01F-SIW-098, Proceedings of the Simulation Interoperability Workshop, Fall 2001[2] Merriam-Webster’s Collegiate Dictionary, 10th ed., Merriam-Webster, Inc., Springfield, Massachusetts, 1994[3] J. Banks, J.S. Carson, and B.L. Nelson, Discrete Event Simulation, 2nd ed., Prentice Hall, New Jersey, 1996.[4] J. Rothenburg, “Knowledge-Based Simulation at the RAND Corporation,” Knowledge-Based Simulation: Methodology and Application, Fishwick and Modjeski (eds.), Springer-Verlag, 1991[5] B.P. Zeigler, Theory of Modeling and Simulation, Wiley, New York, 1976[6] A.M. Law and W.D. Kelton, Simulation Modeling & Analysis, 2nd ed., McGraw-Hill, New York, 1991[7] L.E. Widman, K.A. Loparo, and N.R. Nelson (eds.), Artificial Intelligence Simulation & Modeling, John Wiley & sons, New York, 1989[8] High Level Architecture Federation Development and Execution Process (FEDEP) Model, Version 1.5, Defense Modeling and Simulation Office, 8 December 1999[9] G. Booch, Object Solutions: Managing the Object-Oriented Project, Addison-Wesley, Menlo Park, California, 1996 [10] D. Pace: “Simulation Conceptual Model Development,” Paper 00S-SIW-033, Proceedings of the Simulation Interoperability Workshop, Spring 2000[11] L. Lacy, S. Youngblood, and R. Might: “Developing a Consensus Perspective on Conceptual Models for Simulation Systems,” Paper 01S-SIW-074, Proceedings of the Simulation Interoperability Workshop, Spring 2001[12]  R. Shannon, Systems Simulation : The art and science, Prentice-Hall, New Jersey, 1975Author BiographyJACK BORAH is a Senior Systems Engineer with AEgis Technologies Group.  Currently he is the Program Manager for AEgis Commercial HLA Training as well as Advanced Distributed Learning (ADL) Products.  He has been a primary DMSO HLA training program instructor for the past two years, and is a retired military officer with over 25 years experience in military training and training systems.  He holds a BS from the Air Force Academy and MAS from Embry-Riddle Aeronautical University.  