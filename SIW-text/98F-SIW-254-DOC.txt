Network Resource Reservation in a Distributed Simulation EnvironmentLarry A. O’FerrallNaval Research Laboratory4555 Overlook Ave, SWWashington, DC 20375Code 5523Integrated Communication Technology(202) 767-5110oferrall@itd.nrl.navy.milGrant ShackelfordBBN Technologies1300 N. 17th Street, Suite 1200Arlington, VA 22209(703) 284-4735 gshackel@bbn.comKeywords:RSVP, IP, ATM, resource, reservation, multicast, QoSABSTRACT:  Follow-on work related to the STOW '97 ACTD in the area of resource reservation not only provided an implemented solution to end-to-end Quality of Service (QoS), it also defined current deficiencies and outlined future areas of investigation.  Due to the requirement of a shared infrastructure for future DoD networks, resource reservation and traffic management are issues that need to be addressed.  We have tested current COTS solutions and emerging standards in a STOW environment.  Some IETF standards based solutions that were integrated into the design of the STOW '97 ACTD but were not used for programmatic reasons are emerging as essential components of a future shared network.  RSVP from IP based simulation hosts running ModSAF integrated with ATM QoS parameters has been demonstrated in the lab and on the STOW '97 network.  This required the simulation application to be cognizant of required bandwidth and request it from the network.  STOW '97 used a modified RTI to perform this function.  There is a strong case for supporting this functionality in subsequent official releases of the RTI1. Introduction to Resource Reservation1.1 BackgroundRequirementsNeedIn the past, Wide Area Networks (WANs) used for distributed simulation exercises were built from dedicated links as standalone networks. Resource reservation was done manually and worked in conjunction with scheduling of the network. Due to cost constraints, future implementations of Wide Area Networks (WANs) for the Department of Defense (DoD) and, to a large extent, commercial industry will be constructed across a shared infrastructure.  DoD will purchase the required bandwidth for a given networkservice from a "service provider".  Theat "service provider" maycould be another government agency or a commercial interest.  For the DoD, this bandwidth requirement will most likely be met by procuring service from a public ATM network. This service will beis provided in the form of an ATM Virtual Path (VP) through the service provider’s network to a particular site.  These sites will pay for the cost of an access circuit to the service provider’s network and pay only for the bandwidth they need from the provider. Once the access circuit is established, multiple network services to meet the needs of different DoD communities and classification levels can share the bandwidth and cost of this common link.need only to connect physically to the service provider and multiple networks can be accessed over this common link.  While this is clearly a cost savings, However, this means that multiple services and therefore, multiple traffic types will need to be accommodated over this shared link.  Priority  and policy based reservation mechanisms will be required to maintain Quality of Service (QoS) in this shared environment.  Without QoS mechanisms, all traffic will be treated with equal priority across the network.    This can result in undesirable traffic packet loss in higher priority data flows being caused byfrom congestion from lower priority data traffic flowsWith VP service, the service provider will police traffic as it enters the network to conform withto the service contract purchased for that virtual path.negotiated VP bandwidth.  If the physical line speed of the interface is greater than the service provided, traffic shaping and other traffic management tools mechanisms will need to be implemented.  These traffic management tools mechanisms must preserve the requested QoS of the data traffic flow by giving higher QoS flows preference in traffic management.1.2 STOW and resource reservationThe Synthetic Theater of War (STOW) architecture is optimized when simulation applications request bandwidth from the network based on their knowledge of entity load and traffic generation per entity. The current STOW design uses two standards based solutions in a way that allows the application to request services across an integrated IP and ATM network.  In the IP portion of the architecture RSVP is used., and Iin the ATM WAN portion, built in QoS is provided by using mechanisms are used over Variable Bit Rate (VBR) Switched Virtual Circuits (SVCs). 2. Resource Reservation Technologies2.1 RSVPAs part of a larger effort to provide QoS in the Internet, the ReSerVation Protocol (RSVP) is being developed as an in-band signaling protocol for requesting guaranteed end-to-end qualities of service across an IP packet switched network. RSVP is an IETF effort that is detailed in RFC 2205 and other companion papers.   It allows an application to request a guaranteed QoS from the network.  This QoS is in the form of a bandwidth specified usingwith the following parameters: of data rate (r) and bucket or burst size (b).  When an RSVP QoS request is made (signalledsignaled), signaled, the network will first verify that it can guarantee the requested QoS for a data flow, and then it will confirm to the requesting party that the request has been granted.  This request has to be forwarded and approved by all network devices in the path of the data flow for true end-to-end QoS to be a reality.Each network device must verify that it has the resources available to guarantee the QoS requested.  This means checking the request with an admission control algorithm and a policy control algorithm.  The admission control determines that the device can dedicate enough physical resources, such as, processor resources and buffer space, to accommodate the requested parameters.  The policy control verifies that a flow has the requiredcorrect authorization to request the resource guarantee.  If the RSVP request passes both tests, the reservation is accepted and the IP flow will receive a guaranteed QoS through that device.  If either test fails, the requested QoS will not be providedflow will be refused the guarantee.  This does not stop the data flow from going through the device, it merely means the data flowbut it also does not have the requested quality a guarantee of service.RSVP is a receiver-based protocol that sends bandwidth requests using IP multicastthat utilizes IP multicast to signal its bandwidth requests.  Theis receiver-based model is intended to make RSCVP more scalable allows for scalability.  RSVP utilizes standard multicast routing protocols to route its signaling traffic.  RSVP aggregates reservations from endpoints whose paths converge onto a common path.  As a request propagates up the multicast tree, it will proceed only until it reaches a router that already has a reservation for that flow from another end station.   The router will then merge the two flows into a single reservation.  This makes an efficient use of bandwidth on the network.2.2 ATM QoSATM was designed with QoS mechanisms included.   There are multiple classes of service available over an ATM infrastructure.  These include Constant Bit Rate (CBR), Variable Bit Rate (VBR) and it’s subcategories real-time (VBR-rt) and non-real-time (VBR-nrt), Unlimited Bit Rate (UBR), and Available Bit Rate (ABR).   CBR traffic is usually associated with time critical applications that send constant data streams such as voice and video.  VBR is usually associated with applications that want data delivered with a high degree of assurance but may not be time critical.  UBR is commonly called “best effort” due to the lack of guaranteeds of QoS.  Since STOW only deals with VBR and UBR, CBR and ABR will not be detailed here.  Upon call setup, VBR calls request a guaranteed QoS.  The main parameters that are requested are Peak Cell Rate (PCR), Sustained Cell Rate (SCR), and Maximum Burst Size (MBS).  Upon receiving a call setup request, the ATM switch executes a Call Admission Control (CAC) algorithm to determine if it can guarantee the requested QoS.  If the call setup is accepted by the CAC, then the call setup proceeds to the next switch.  If the call is accepted, the switch will reserve enough resources to handle the SCR and any burst, at the PCR, up to the MBS.  When a data source sends traffic that is less than or equal to the SCR, theits traffic is referred to as conforming traffic.  If a source is transmitting at a rate greater than the SCR but less than the PCR, theits cells are “tagged” as non-conforming.  Tagged cells can be carried across the network, even though they exceed the SCR, unless congestion occurs.  When congestion is encountered in the WAN, tagged cells are dropped first.UBR calls do not request a QoS and will take whateverany bandwidth is not currently being used.  If congestion occurs in the WAN, VBR traffic will be protected up to the bandwidth requested at call setup, whilewhereas UBR traffic will take all of the available bandwidth not being used for VBR and CBR.  If the link is oversubscribed, UBR traffic will be dropped if it is in contention with CBR and conforming VBR traffic.3. STOW Network architecture and resource reservation3.1 History and design criteriaThe STOW architecture was designed with end-to-end QoS as a key element.  A STOW site is pictured in Figure 3.1.  At the time the STOW architecture was being developed,of development, no commercially available network device was capable of translating IP RSVP (r,b) parameters into ATM QoS SVCs.  Therefore, a special purpose device was created to perform this and other IP/ATM and LAN/WAN integration functions.  The Quality-of-service Capable Bi-level Multicast Router (QCBMR) was developed to perform bi-level multicast routing, multicast flow aggregation, translation between RSVPintegration of IP and ATM QoS, and SVC management.  The QCBMR was placed in parallel with a commercial router between the IP LAN and the ATM WAN.  All multicast traffic was processed by the QCBMR.  All unicast traffic was processed by the commercial router.  The QCBMR useshas a bi-levelproprietary multicast routing protocolalgorithm that maintains global knowledge of multicast group interest at all sites.  The QCBMR establishes point-to-multipoint SVCs to transport multicast group traffic over the WAN to interested sites.  If several multicast groups at a site are bound for the same group of destination sites, the QCBMR will aggregate those groups onto a single point-to-multipoint SVC going to the destination sites.   There are currently two devices establishing SVCs at any STOW site.  The router establishes UBR SVCs and the QCBMR establishes VBR SVCs.  (No distinction is made in the current STOW ATM switches between VBR-rt and VBR-nrt.  VBR is treated as VBR-nrt).  All multicast traffic is forwarded by the QCBMR and transmitted over VBR connections and all other traffic is forwarded by the unicast router and transmitted over UBR connections.  This design allows simulation traffic to be protected from non-simulation traffic (e.g. web browsing, file transfers, etc ) congestion on the same virtual path, e.g. web browsing, file transfers, etc.3.2 RSVP in STOWWhen a simulation host sends an RSVP reservation message onto the LAN, the QCBMR processes the (r,b) parameters and translates them into the ATM VBR parameters of Sustained Cell Rate (SCR) and Maximum Burst Size (MBS).  The QCBMR signals a VBR ATM SVC across the WAN.  If the call is established, this will guarantee that the conforming cells are delivered to their destination. The STOW architecture utilizes VBR and UBR ATM SVCs.  RSVP, which is transmitted over multicast, is mapped to VBR with QoS parameters and unicast traffic is mapped to UBR ATM WAN connections.  In a typical STOW environment a majority of the traffic consists of simulation packets, which are primarilytherefore multicast packets.  Since multicast is mapped to VBR traffic, it is protected in WAN congestion situations.Figure 1. Typical STOW siteA modified version of the RTI, RTI-s, was used in the STOW 97 ACTD.  RTI-s includes support for RSVP.  It uses a static model for each entity's bandwidth requirements and makes requests based on the number of entities in a multicast group.  The reservation is based on a simple combination of a default reservation per entity multiplied by the number of entities per multicast group. Therefore, the same traffic reservation is requested regardless of the type of entity and of the amount of traffic that entity could generate.  There is no aggregation of reservations done in the RTI-s, therefore, there is no mechanism for utilizing the statistical nature of the burstiness of the entities’ traffic.  Even though the model for requesting bandwidth is simple it has proven a good proof of concept for resource reservation.The RTI-s does not implement the whole RSVP protocol as described in section 2.1.  The RTI-s utilizes the RSVP API provided by ISI to make calls to It makes requests of a UNIX daemon called rsvpd.  RTI-s communicates with rsvpd, which in turn handles the RSVP protocol in the LAN.  RTI-s requests resources through rsvpd.  Rsvpd translates these requests into PATH messages that are used to make (r,b) requests of the network.  RTI-s does not wait for confirmation of availability of requested bandwidthits request.  The STOW architecture does not return a confirmation of the RSVP reservation.  The QCBMR listens for PATH messages and makes ATM VBR SVCs based on the PATH messages. This lack of confirmation does leave some unreliability in the request, but update mechanisms in the multicast group membership protocol, IGMP, helps the system recover from a missed RSVP PATH messages.4. Testing	RSVP was not used in the STOW 97 ACTD, however the functionality was proven in small trial runs.  Tests performed after the ACTD attempted to characterize the behavior of current implementations of RSVP/ATM QoS mechanisms in this architecture.  Testing of the QoS mechanisms was performed in a laboratory at the Naval Research Laboratory and across the DARPA/DISA Joint Program Office (DDJPO) WAN.  The DDJPO WAN was the network that was used for the STOW97 ACTD.  It is a nationwide network consisting of Virtual Path service provided byover a commercial ATM networkcarrier.  Wide area testing consisted of four sites: NRL in Washington, D.C., Joint Training, Analysis & Simulation Center (JTASC) in Suffolk, VA, What If Simulation System for Advanced R&D (WISSARD) facility in Virginia Beach, VA, and SPAWAR Systems Center in San Diego, CA (SSC-SD).  Since incremental changes in software had occurred in all network devices in the time leading up to the STOW 97 ACTD, initial tests consisted of functional verification that the various versions of RSVP code that were implemented in the simulation hosts and the QCBMR were interoperable.  The simulation hosts were using rsvpd implementations based on USC Information Science Institute (ISI) code version 4.1a(x).  The QCBMR’s RSVP code, also based on ISI code, had been altered by BBN to handle large numbersamounts of multicast groups.  The lab testing verified that the simulation host versionimplementation was compatible with the QCBMR implementationversion.Further lab testing traced rsvpd reservations from test applications and ModSAF along the path from their transmission on the Ethernet, through the establishment of the ATM QoS call, to delivery of the packets on the destination LAN.  Measurements were taken to verify that the requested packet rate was being protected through the simulated LAN/WAN environment.  Testing then moved to the DDJPO network.  This provided real-world stresses that were not available in the laboratory environment.  Multiple simulation hosts were available at each site.  When activated at a site, each host joined several multicast groups.  As part of the RSVP implementation, rsvpd on each host joins a well-known multicast group.  Rsvpd transmits its path messages on this group and listens to others on the local LAN.  Each host attempts to keep track of every other hosts’ state (host, group, reservationand reservation).  Storage of this information in the SAF environment becomes prohibitive, since a site maycan have hundreds of machines and ModSAF will handle approximately 3000 multicast groups.  In our tests, even at relatively low levels (5 simulators, 200 multicast groups each), the rsvpd daemonimplementation would crash.  This would not interfere with the application’s operation but would destroy the QoS mechanisms for that host.  A short-term fix was implemented in the Multicast Edge Device (MCED), which effectively isolated each host from hearing the other hosts’ reservations.  This allowed the system to perform as designed by keeping rsvpd from crashing.  Once again, reservations were confirmed from the simulation hosts through the network.  5. ConclusionsWe have made several conclusions from these tests.  Resource reservation is important to future shared infrastructure networks.The larger problem of how to implement RSVP functionality falls into one of three categories. Current implementations of rsvpd need to be fixed to handle the large multicast loading that occurs in the STOW environment.The RTI needs to include RSVP functionality, directly generating RSVP PATH messages without using rsvpd.Rsvpd needs to be changed to ignore the state of the other hosts on its LAN.  This could be done with a run-time option.  Running a modified implementation of rsvpd that only included the functionality used in STOW, effectively an “rsvpd lite”.All of the above solutions require synchronization between the evolving specification of RSVP and the RTI.  While the RSVP spec has matured considerably since the design phase of STOW, it is not a finalized standard.  As of this date, RSVP is a working group within the IETF.  The working group is responsible for evolving the standard and then presenting it to the Internet standards track The solution that requires inclusion of RSVP functionality in the RTI allows for tighter control of the timing of RSVP message transmissions. In the current implementation, the RSVP daemon is running as a separate process and could lose processing time to the ModSAF application.  This is a question that has not been fully explored and one that could change when hardware is upgraded or software is improved.Altering current freely available rsvpd implementations to perform only required STOW functionality would result in a simple software “upgrade” in a host which would use the RSVP mechanism.  This could also be done as an implementation of “rsvpd lite”.  This would not require a change to RTI-s.  However, this will produce a non-standard solution that will have to be maintained across all platforms. While the concept of resource reservation has been proven for use in distributed simulation exercises, much work is left to be done.  Traffic patterns of entities need to be analyzed and intelligent algorithms for aggregating reservations at the host level need to be developed. The builders of the RTI need to incorporate this philosophy into future releases. RSVP support is not currently planned for the next release of the RTI.  Current network devices can be configured to perform some default QoS mechanisms but this is not a long-term solution.LARRY O’FERRALL is an Electrical Engineer at the Naval Research Laboratory in Washington DC.  He is involved with IP and ATM research in the Integrated Communications Technology Branch.  He was a member of the Real-time Information Transfer and Networking (RITN) project that developed the network technologies for STOW. GRANT SHACKELFORD is a Network Engineer with BBN Technologies in Rosslyn, VA. He has been working in the simulation field for over 10 years and worked on the original SIMNET contract for BBN.  He was also a member of the Real-time Information Transfer and Networking (RITN) project that developed the network technologies for STOW. 