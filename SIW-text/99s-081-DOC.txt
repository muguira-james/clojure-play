USING COMMAND AGENTS FOR MILITARY PLANNINGJean-Paul BoucheMATRA Systemes & Information6, rue Dewoitine, B.P. 14,78 142 Velizy - FRANCE+ 33 1 34 63 75 09bouche@matra-ms2i.frJean-Pierre FlochThomson-CSF DETEXIS55, quai Marcel Dassault, B.P. 301,92 214 Saint-Cloud - FRANCE+ 33 1 34 81 66 03jean-pierre.floch@detexis.thomson-csf.comMartine MichelSYSECA66-68 avenue Pierre Brossolette,92 247 Malakoff Cedex - FRANCE+ 33 1 41 48 02 17martine.michel@syseca.thomson-csf.comKeywords:Automated Planning, Command Agents, Course of Action (COA), Knowledge Acquisition, VV&A.ABSTRACT: The main objective of the CARNEADE (Digitized Air Land Battle for Analysis, Training and Decision-making) project is to meet the various needs of the French Army and the DGA (the French acquisition directorate of the Ministry of Defense) in the following areas : Training of Headquarter staffs at Brigade level and above, Operational decision support and Force System analysis. For this main objective, the CARNEADE project consists in the development of a family of tools based on a “common air-land battle simulation kernel”.Sizing own forces and improving Courses Of Action (COA) are complex issues in the combat operations preparation. This paper presents the functional and technical approaches used in the Army Operational Planning Demonstrator (DPO) to provide staff officers with an effective framework for military planning.The corner stone of this development is the use of Command Agents (CA) modeling the division, regiment and company commanders decision-making processes. The friendly and enemy division CA's elaborate separate Courses Of Action and those COA's are then played one after another in the combat simulation system. The simulation results are finally used by the military staff to evaluate and compare the friendly COA's.This paper presents the various techniques used for military knowledge representations of tactics, tasks and missions at the different Army echelons. Issues related to flexibility and effectiveness of planning services are examined and then problems associated with Command Agents, such as knowledge management and VV&A, are addressed. Finally lessons learned for future developments of the program are considered..1. Objectives and BackgroundThe main objective of the CARNEADE (Digitized Air Land Battle for Analysis, Training and Decision-making) project is to meet the various needs of the French Army and the DGA (the French acquisition directorate of the Ministry of Defense) in the following areas: Training of Headquarter staffs at Brigade level and above, Operational decision support and Force System analysis. For this main objective, the CARNEADE project consists in the development of a family of tools based on a “common air-land battle simulation kernel”.Modeling not only covers mission performance, with real-life behavior of the units in their environment, but also the decision-making process.Command Agents, computer components simulating the decision-making processes at the various command levels, are used whenever needed. The main advantage of using the Command Agents formalism is, in particular, that it makes it possible to reduce the staff necessary to operate the simulation and thus, reduce costs, while offering ultimate objectivity and realism. The French Army General Staff and the DGA/SPOTI manage the CARNEADE project.The Defense Analysis Center (CAD) and the Army General Staff-Operations Research & Simulation Center (CROSAT) are the technical & operational Advisors for the CARNEADE project. The engineering work is conducted under a consortium of four companies : Thomson-CSF DETEXIS (formerly DASSAULT ELECTRONIQUE), , MATRA Systemes & Information, SYSECA and SEMA/Department AERO.At present, this project has led to the realization of three operational demonstrators that testify to the technical feasibility of the system’s innovative concepts. The first demonstrator consists of three simulation tools : force tailoring tool, tactical tutoring tool and decision-making support tool. It has been realized in 1993 and it simulated in a fully automated way 36 hours of battle in two hours : a friend armored division leading delaying maneuver. It is based on a “common simulation kernel”. The purpose is to demonstrate the capability this “common simulation kernel” to meet various requirements with minimum specific adaptations. The second demonstrator is a “ Forces overseas ” tactical tutoring tool for a group of three officer players. Its main objective is to prove that the “common simulation kernel” could easily evolve in order to take into account new theaters and terrains (of desert type), new military actors (light forces), and new doctrines (friend attack). Enemy combined Arms Task Forces are conducted by Command Agents, only an officer animator controls their actions.The third and the last demonstrator of the feasibility phase, the Operational Planning Demonstrator (DPO), has two main objectives:determine what is the efficiency of functions and services for an operational planning tool,improve CAs techniques.This demonstrator is developed within the framework of a changing geostrategic concept. It is a peacetime/crisis operational planning tool. It is meant to show the capability of the “common simulation kernel” to tackle modular force compositions and changing doctrines. It determines the best force for a military engagement both in term of volume and type that directly impact on the success or failure of the force performing the mission. Such a tool enables to optimize the composition and the courses of action of a French division/brigade force (of about 10 000 combatants) that is engaged in a given theater against a given threat, in an offensive action of area reconquest. This paper will now focus on main techniques used for the design and implementation of the “common simulation kernel”.2. Overall model structureThe existing hierarchical structure of the French military forces with Orders, Reports through this structure is represented as such in the simulation.Figure 2.1 : modeling of  hierarchical structure of military forces The High level is a French Division and elementary units represented by aggregated models are at company/squadron level.At each level of Command, a Command Entity (CE) is modeled through :Command Post (CP) Platform behavior that represent physically the CE, modeling its movements, destruction’s,.… Since Command officers operate from vehicles on the battlefield the Command Entity must also be associated with simulated vehicles. Some communication services are also associated, including access to descriptions of the communication networks assigned to this unit, and management of a queue of incoming messages.Command agents (CA) that simulate the CP officers decision-making processes during the battle, taking part into the perception-decision-action cycle. The perceived battle situation by each unit is transmitted by reports to the upper level and orders are sent to the subordinate units by means of operational messages.At the lowest level, elementary units are represented by command entities associated with physical activities models that simulate physical behaviors of subordinate units. These models are aggregated and represent for example: infantry companies, tank squadrons, engineer sections(More than 100 CE are modeled in the simulation subsystem of the DPO without any operator in the loop.3. The DPO Planning ProcessThe planning process of the DPO begins with the definition of an initial operation context :the enemy (volume and mission ),the environmental conditions ( terrain, weather conditions, presence of civilians,..),the mission given to the friendly forces,a global volume of the friendly forces (global description and maximum number of the different types of friendly units),a set of constraints to be satisfied (no side effects, allied and joint coordination, specific initial instructions,....).Figure 3.1 : description of the planning processThe operator of the planning tool then chooses :a composition of the friendly forces from the global volume, under certain constraints,a set of friend and enemy courses of action amongst those elaborated and proposed by the tool,a set of indicators that will be used to assess the different friendly courses of action.The simulation tool then enables the assessment of the various couples (friendly forces composition, friendly courses of action) against the various enemy courses of action, and rank those couples by exploiting the simulation results (looking at the values taken by the indicators).From the simulation results, the operator can then :adapt a friendly course of action,modify the friendly forces composition,relax some constraints,and then go back to the simulation.In this planning process, Command agents at all levels of forces apply the unique principle of the French MRT (Tactical Reasoning Method).:The process for choosing the best course of action, is a progressive approach by different analyses : context (METT-T,..), structure of maneuver, satisfaction of constraints, quantified the different structures of maneuver for the mission by a fuzzy logic evaluation process.Technical Description4.1 Command Agents common architectureThe architecture of Command Agents is based on two concepts : a monitor, and a library of base functions. The monitor manages the internal state of the agent and sequences the elementary functions according to a state-transition-action graph (very similar to a finite state machine formalism). The base functions fall into two classes :Operational functions (or knowledge-based functions) model the CP operational activities at CP or cell level. These functions enable :tactical situation assessment and updatemaneuver elaboration maneuver planningmaneuver controlService functions implement the management and execution of technical tasks such as data collection, tactical situation management, message management and processing, scheduling, communication services, etc.).At each level, the relative weight of operational and service functions and their complexity depend on the nature of the processes and actions modeled. In particular, tactical knowledge and courses of action elaboration is more complex at division level than at regiment level. This explains why different techniques have been used to model tactical knowledge at the different levels. Organizing and formalizing this knowledge is a key factor for the success of such an enterprise as CARNEADE. This explains why a significant amount of effort has been devoted to knowledge acquisition, engineers and officers working in close collaboration throughout the process.4.2 Major Units (Division / Brigade) Command AgentsThe initial maneuver elaboration is based on the maneuver margin concept and a constraint-based reasoning mechanism. The Maneuver margin describes the set of actions selected to fulfill the assigned mission. During the elaboration process, the maneuver margin is constrained by various analyses concerning eligibility of actions with respect to tactical situations, mission phases, etc. A fuzzyset based formalism is used to represent the imprecise knowledge used during these analyses. The process finally ends up with a reduced margin which only encompasses the eligible courses of action. Based on the reduced margin, final course of action elaboration consists in fixing the implementation details for the selected actions: location and time, type of units employed, etc. The following phases are:maneuver planning, based on a joint forces deployment plan complemented with specific plansmaneuver control and plan adaptation.The overall maneuver elaboration, planning and control process at the Division/Brigade level is based on the use of a hierarchy of expert rules, which provides a maximum flexibility in terms of use and representation of knowledge.4.3 Regiment level Command AgentsAt the regiment level, knowledge representation is based on the use of decision tables. Decision tables are used at two stages : maneuver initial elaboration, and maneuver control.Once a new operations order is received from the upper level, decision tables are used to determine the best course of action according to a factor analysis including mission nature, terrain, means and enemy situation. Maneuver control decision tables are triggered upon message reception such as subordinate units reports, upper level orders or occurring events (end of fire...). The readability of decision tables is a key advantage for knowledge acquisition. They are usually complemented with planning algorithms used to represent the behavior of supporting units, artillery and engineers.4.4 Elementary Unit Command AgentsIn CARNEADE, elementary units are aggregated models that represent companies, squadrons, engineers sections, etc. The goal of aggregation is to limit the number of parameters required to describe these complex structures, and consequently :facilitate physical activities modelingenable their monitoring via a finite state machinereduce computation timereduce the amount of descriptive data.Very similarly to what has been described above for Command Posts, elementary units are decomposed in terms of decisional and physical behavior. The main difference is that the lower levels are not explicitly represented in the simulation. Therefore :the information sent by the execution part of an elementary unit to the decision part of the model are a synthesis of the data that would really be transmittedthe “ orders ” sent by the decision part of the model are different from real orders, and in fact very close to an action intent.Tactical knowledge used at this level is represented by means of Mission Graphs which define for each mission type the list of successive actions and states, with associated transition conditions.Finally, physical behavior at the elementary unit level is represented through action models such as move, observe, fire, ..., interaction and reaction models.4.5. The terrain in the DPOIn the DPO, the physical models act on a physical representation of the terrain, as in any simulation. This model is not satisfactory for the CAs because of two reasons:CAs, like the commanders, don’t think about altitudes, segments of road… but about crests, routes…changes in the physical terrain (e.g. a bridge is destroyed) are not immediately known by the commanders but after an acquisition process.In order to take those remarks into account, a specific model of terrain is used by the CAs. It is called the Decisional Terrain (DT). Each CA reasons on its own instance of the DT. The following figure shows the generation and use of this terrain.Figure 4.5.1. Terrain models generation and useFor consistency purposes, underlined in the following paragraph, the DT is generated from the physical terrain. The DT is partly pre-processed before the simulation because of performance issues: crests or forest borders extraction… Then during the simulation the CAs use these elements to elaborate directly usable features like maneuver lines, routes…5. Knowledge acquisition and managementOne of the major challenges of the project has been knowledge engineering and especially the answers to two questions: (1) How to make sure that the final product is valid ? (2) How to manage a large amount of knowledge efficiently ?5.1 The lessons learned from the previous demonstratorsThe lessons drawn from previous developments helped us a lot for defining a methodology and for developing tools to support knowledge engineering in the DPO project. In order to understand this background and the reasons which led us to some choices, this paragraph sums up the most important difficulties, related to the CA, we encountered during those preliminary experiences and the various sources of mistake we discovered when validating the simulations.The most common error is a lack of understanding between two CAs: a CA sends a message to a subordinate CA which doesn't react as expected by the first. In order to understand the sources of this type of error, the figure 5.1.1 presents a synthetic scheme of the knowledge acquisition and modeling process.Figure 5.1.1. Acquisition and modeling processSome problems came from the knowledge elicitation phase where two typical errors have been made:in spite of multi-level discussions, during which experts and engineers gathered to decide how to conduct some missions and especially what messages (orders) would be exchanged, some choices were made afterwards separately by the knowledge acquisition teams (KATs). These choices led to divergences from the initial meaning of the commonly defined messages (even if the formats were unchanged) and later led to some integration "disagreements".the other error is well-known in knowledge engineering: the engineer understanding of what the expert says is not exactly what the expert meant.During the modeling phase, some new approximations were made by the engineers and they also led to divergences between the CAs.Those mistakes can be considered as typical knowledge engineering errors. Some others follow which are out of this scope and relative to data:parameters used in the physical world differed from those used in the CAs. It led to errors like, for example: a company CA starts firing with a non-optimal distance of engagement, but "thinking" it is. As learning is not integrated in our system, the unit has never correctly engaged combats. So it is necessary to have a direct relation between the physical characteristics of the weapon systems and the CA's knowledge.terrain representations were not consistent. This leads to errors like: a tank CA commands its subordinate CAs to drive through a plain but its subordinates see a forest in their decisional terrains. They consider their mission is not feasible, their commander considers it is and they enter a dead lock. The same error can occur between a CA's decisional terrain and the physical terrain.The reader can notice that those last issues are parallel to those encountered within simulation federations.In the validation phase, discovering the origins of such misbehaviors has sometimes been very expensive. For instance, the effects of a division CA mistake were sometimes visible only a few hours after the erroneous decision was taken. Furthermore, discovering the origin of the mistake can take a few days. For this reason, in order to avoid the errors listed above, a knowledge elicitation and validation methodology and associated tools were developed in view of:developing semantic interoperability between the knowledge acquisition teams,reducing the "mental distance" between the expert and the model.5.2 The knowledge elicitation processThe knowledge acquisition and modeling process used within the DPO is shown on figure 5.2.1.Figure 5.2.1. The knowledge elicitation processDuring phase 1, the whole acquisition and modeling team is present in common meetings (experts and engineers in charge of decision modeling and of physical world modeling). They agree on a common modeling framework related to the division types of mission which can be played (relevant Courses of Action, limits of the environmental conditions(). Then a more detailed analysis is conducted for each military domain (e.g. artillery, intelligence(): context of use of the units and of their capabilities, phenomena to be represented, coordination with the other domains( The presence of the people in charge of the physical world modeling is decisive: they insure the CA decision effects will be adequately represented and conversely the CA can react to the physical world events.Phase 2 continues with the same teams in common meetings. However, the physical world modeling engineers participate only if required. Here, the basic elements of analysis are the missions: either missions assigned to the regiments by the division or to the companies by the regiments. The context of each mission is discussed: what is expected by the superior, what the subordinate expects to do, what information is needed in the message in which the mission assignment is formulated, what information is exchanged during the mission(Phase 3 is dedicated to a fairly detailed knowledge acquisition. Starting from the parameters describing the operational external context of the missions, each team has to define, at the concerned level, the mission execution characteristics. When external parameters depending on two (or three) levels have to be changed, a new multi-KAT joint meeting is necessary.Phase 4 is part of the validation process: each domain expertise is presented to independent experts of the domain. The expertise is validated considering the results of each team. This guarantees an inter-level consistency based on both the control of the independent validation team and the care taken by the acquisition team to present its work.Finally, phase 5 is the modeling phase where knowledge is represented with the adapted formalism. A tool, presented in paragraph 5.4, has been used for the company level CAs.5.3 ValidationThe validation activity comprises two major stages:the first one, as described in paragraph 5.2., whose objective is to validate the expertise. The opinion of an expert is confronted to an independent team of experts. Most of them were teaching in military academies or had been assigned to doctrine centers.the second stage objective is to validate the software. It is conducted in reverse order of the knowledge acquisition. (1) in each CA, an elementary validation insures that each mission can take place as specified in phase 3 of the acquisition (detailed expertise). The experts can experiment the application of their knowledge modeling on some real (simulated) cases. Except for some minor mistakes, the average behavior of the CAs was correct but the experts often discovered some lacks in degraded cases (e.g. a unit deprived of a part of its subordinates). At the end of this first phase, the CAs have a correct individual behavior. (2) The global validation is then conducted, first by validating each military domain representation (for this, part of the division CA can be used separately) then finally with the whole software. This activity takes a long time because of numerous external conditions to test: forces composition, weather, terrains…5.4 ToolsSome tools were developed for helping the developers of the DPO. Two of them were especially helpful:	the GMT editor. This tool is an editing support for the company level knowledge modeling. This tool is user friendly and both the engineers and the experts working on this level of command used it. The benefits drawn from it is that it provided the “company KAT” with a formalism and a tool allowing them to discuss and finally to agree on a unique and definitive representation of the expert knowledge (because directly used by the software). That is what we previously called a “mental distance” reduction.	the testing tool. In order to test the CAs individually, we had to generate a lot of external stimulations corresponding to the orders or reports exchanged with their environment in the simulation. Those messages were generated by a testing tool designed for simplifying the messages fields filling. This tool was based on a messages format repository which permitted to follow the formats evolution in a transparent way. This repository was used too to automatically generate the pieces of CA software relative to common types and to messages encoding/decoding.6. Lessons learned6.1 User AcceptanceAlthough the use of command agents offers unquestionable advantages such as staff reduction and games reproducibility, it requires important efforts in terms of knowledge acquisition and formalization, and validation. The results must be indisputable, which means that users must have a total confidence in the simulation tool. In order to achieve this, it appears that the following conditions must be met :Officers implied in the expertise acquisition process must be in activity and aware of the last doctrine evolutions in order to give an official recognition to the modelsPhysical data used in the models and their simplifications must also be collected through and approved by operational officersBoth physical data and knowledge must be accessible to users in an intelligible form , along with a clear indication of their origin (for certification purposes)Traceability is a key success factor : providing the user with the trace of the reasoning facilitates his understanding of the process and his confidence in the simulation tool ; traces also facilitate the validation process and help the user to intervene in the simulation process in an appropriate manner.Man in the loop and decision automation must be combined in an harmonious way to provide the most effective compromise between the realism of a human-driven game and the effectiveness of the simulation.6.2 Technology AssessmentIn the context of the Operational Planning Demonstrator (DPO) development, various techniques have been used to implement Command Agents according to the hierarchical level. Overall, these techniques proved to be relevant, each of them with advantages and drawbacks, especially with respect to the officers’ ability to understand and master the underlying modeling paradigms. For example, the fuzzy rules based technique used at division/brigade level enables imprecise knowledge formalization but is more difficult to apprehend than the decision tables or mission graphs technique.Finally, the lowest aggregation level selected has been in general the company level, but experience has shown that this level could vary according to the type of maneuver, and also according to the type of force (esp. for support forces).Author BiographiesJean-Paul BOUCHE is Project Manager in the C3I and Simulation Department of MATRA Systemes & Information, France. He has been working for 8 years on the CARNEADE project. He is in charge of various related projects in the tactical simulation domain. He is supporting the NATO M&S WG as a member of the NIAG Industrial Policy Sub-Group (IPSG).Jean-Pierre FLOCH is Technical deputy Manager of the Strategic Business Unit “Information Technology & Systems” at Thomson-CSF DETEXIS, France. He graduated from ENSEA -electronic engineer, IAE-business management, and ENSIMAG-software engineer. He has been involved in advanced software techniques for more than fifteen years and mainly in simulation activities for C3I systems, scenario generator systems and CARNEADE project since 1988 as the program manager for a consortium of five French companies. He has been also involved in distributed activities for last 5 years as a member of the French ADIS Working group and involved in NATO M&S activities as a member of the NIAG Industrial Policy Sub-Group (IPSG) for supporting the NATO M&S Master Plan.Martine MICHEL is Project Manager in the simulation department of SYSECA, a software and services subsidiary of Thomson-CSF, France. She has been working for 6 years on the CARNEADE project and also on various related fields (tactical trainers, data fusion systems()