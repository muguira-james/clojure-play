Net-Centric Modeling, Simulation, and AnalysisDan Caudill, Lt. Eric Like, and Jim ZehAFRL/VACD, 2180 8th Street, Suite 1 Wright-Patterson AFB, OH 45433Matthew Garr and Steve TopperJohns Hopkins University Applied Physics Lab, 11100 Johns Hopkins Road, Laurel MD 20723ABSTRACT: The Air Force Research Laboratory Air Vehicles Directorate (AFRL/VA) and Johns Hopkins University Applied Physics Lab (JHU/APL) are developing procedures and Modeling, Simulation, and Analysis (MS&A) tools that will facilitate analysis of how future air vehicle capabilities can be most effectively employed and interoperate within a circa 2020+ net-centric war fighting environment.  Successful modeling, implementation, and utilization of the advanced war fighting environments that these future capabilities will operate in requires designing sound experimental procedures. M&S is required to execute the large number of tests that will support these experiments, but is not an end in itself.  This team is critically examining the architecture-to-model link to discover how M&S is best utilized for these types of analysis activities.This paper first provides some background on the reasons for performing such MS&A activities followed by a description of the mission level modeling components that are required. Next, it provides additional details on the Blue C4ISR network capability that was chosen to be modeled, followed by an overview of the experimental and architectural design processes that were developed. These processes include our use of the Unified Modeling Language (UML) and a generalized "meta-model" for net-centric architecture development as well as a process for linking these architectures to executable models. Finally, it wraps up with a discussion regarding our plans for continued MS&A activities focused on evaluating future air vehicle capabilities operating in net-centric environments.1.   BackgroundThe Air Force Research Laboratory Air Vehicles Directorate (AFRL/VA) has recently adopted a new way of doing business called Capability Focused Technology Investment (CFTI). This is a technology research and development approach that is focused on understanding and exploiting how any given technology or collection of technologies will create or enable a gap filling capability in a future war fighting environment. In order to quantify the potential impact on mission effectiveness of future technologies, AFRL requires the ability to accurately model and evaluate the employment of technological capabilities within future battlefield situations. To address this need, the Aerospace Vehicles Technology Assessment and Simulation (AVTAS) facility in AFRL/VA is working to develop a MS&A capability that will allow AFRL technologists the ability to simulate and evaluate various future technologies and capabilities within a realistic, flexible, and reconfigurable representation of a future, net-centric war fighting environment. The AVTAS analysts and engineers will also utilize this MS&A capability to support the Aeronautical Systems Center’s (ASC) Capabilities Based Planning efforts, which are focused on evaluation of potential future concepts operating in a net-centric war fighting environment.To accomplish these things, AVTAS engineers teamed with several support contractors, including Johns Hopkins University Applied Physics Laboratory (JHU/APL), to develop the capability to evaluate various notional air vehicle concepts operating as part of a future net-centric war fighting environment. This is being accomplished by developing and using a variable set of reconfigurable models and tools that are generic enough to support multiple projects with distinct and unique requirements. These models and tools are employed within an iterative MS&A methodology designed to allow investigation of any number of future technological capabilities. A diagram depicting the major activities associated with that MS&A methodology can be found in Figure 1.1. Although there are a variety of activities involved in this methodology, it should be noted that a large portion of those MS&A activities are performed at the mission level (i.e. the constructive and virtual simulation studies). As such, this paper is primarily focused on the techniques employed for the modeling and implementation of a future, net-centric war fighting environment within a reconfigurable, mission level model. It should be noted that the mission level model is common to both our constructive and virtual simulation studies, primarily for analysis correlation purposes, so it must be able to support both types of simulations. In particular, we will focus most of our attention on those parts of the model dealing with the Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) network architecture representation. SHAPE  \* MERGEFORMAT Figure 1.1 – Modeling, Simulation and Analysis Methodology2.   Mission Modeling ComponentsIn order to evaluate the effectiveness of any potential addition to the Air Force inventory, each capability must be analyzed with respect to how well it performs in a realistic representation of its intended operating environment.  This requires a clear definition of the Red Side components that will be engaged, how the system interacts with other Blue Side components, and how users will operate the system in a virtual mode.  These components essentially create the overarching mission level model to be used for MS&A activities. In the case of the AVTAS simulation environment, it was decided that several of these primary components would be developed using a simulation framework called FLAMES[1]. Each of these primary components are addressed and described in more detail below.2.1  Red IADS ComponentsThe Red Side components consist primarily of an Integrated Air Defense System (IADS).  This includes an echelon of Commanders, Weapons Managers, SAM sites, Sensor Managers, and Radar Sites.  Also modeled is the necessary Command and Control system capable of assessing targets and deciding the best avenue to engage the incoming Blue threats.The models being used to represent the Red IADS were developed in FLAMES by the Ternion Corporation for the National Air and Space Intelligence Center (NASIC).  The IADS model has the capability to produce plots and tracks, assess incoming blue targets, react to those targets, and determine the best way to engage a target given all of the available resources.  These models have the ability to be arranged in any desired number, configuration, or hierarchy.  Likewise, their behaviors are capable of being modified to match the characteristics of any desired role.  Additionally, future plans call for these models to be enhanced and equipped to even more realistically model the dynamic behavior of IADS, including the ability to move, reorganize, and avoid detection.2.2  Blue C4ISR ComponentsFuture net-centric system architectures will see C4ISR capabilities performed by an ever-expanding array of systems.  Many advanced space-based, air-breathing and miniature concepts will therefore need to be analyzed through M&S.  Just as these net-centric systems will be interoperable in reconfigurable environments, the M&S environment must be flexible enough to represent these unpredictable constellations.  To properly analyze the potential contribution of any conceptual systems, their contributions of information, decisions, or effects must be accurately integrated into the C4ISR architecture.The team will be building a wide variety of system and cognitive models, and where applicable, integrating pre-existing models into the M&S environment.  As the library of systems and behaviors expands, so too will the range of analysis that can be considered.To discover the most effective system-to-capability links, AVTAS engineers and analysts will need to represent and study many different system configurations.  All blue C4ISR component models must therefore be constructed to rapidly “plug-and-play” into the simulation environment.  Under the FLAMES environment, scenario variables, parameters that can be changed between simulation runs, can include different architectural configurations in addition to numerical system parameters.  Many diverse candidate systems-of-systems will be written directly into run matrices, allowing rapid analysis of the capabilities provided by these configurations.Section three of this paper will provide a more detailed focus on blue C4ISR development.  It will cover the design and implementation procedures in use, the initial systems scheduled for implementation, and a description of the initial “use case” to be employed in this simulation environment.2.3  Virtual Simulation ComponentsIn addition to evaluating future air vehicle capabilities using constructive analyses, systems will also need to be tested in a virtual mode with human players taking part in any given scenario.  This provides the opportunity to determine whether the system or systems under test will be able to perform under the more realistic setting of having a human operator in the loop.  The equipment used to implement this virtual simulation functionality consists of several integrated components as described in the following paragraphs.The pilot that is actively participating in the scenario will sit inside of a reconfigurable cockpit capable of mimicking the characteristics of a multitude of different airframes.  Integrated into this cockpit is an aerodynamics model which will perform all of the calculations necessary to produce realistic flight characteristics of the vehicle.  An out the window scene generator gives the pilot the ability to “look outside” of the canopy, and the heads down display (HDD) is capable of showing the output of various sensors and information sources.  These include Infra-Red (IR) sensor video, Synthetic Aperture Radar (SAR) imagery, track reports, and command and control messages, to name a few. This cockpit simulation is comprised of several simulation models tied together to create a reconfigurable simulation capability able to support many different projects.The cockpit is connected to the main mission modeling software to allow the operator to interact with the various entities modeled in the environment in real-time. These entities may include other platforms with human operators as well as computer controlled representations of threats, targets, munitions and other digital players.  The mission model performs all of the calculations required for the cognitive modeling of the computer controlled players, as well as for the physics associated with any of their equipment.Finally, the virtual simulation also contains a “Stealth Viewer” capability. This gives the analysts, simulation operators, and other observers the ability to view what is happening inside the scenario from any desired vantage point both in real time as well as in a playback mode. This capability is primarily used for the purposes of analysis, demonstration, and pilot debriefing.3.   Blue C4ISR Research and DevelopmentThe AFRL/VA and JHU/APL team requirements for a flexible modeling environment quickly extended beyond the scope of capabilities offered by legacy mission models.  A previous spiral of simulation development used the Joint Integrated Mission Model (JIMM), which is part of the Air Force Studies and Analysis Toolkit, to conduct constructive analysis, with additional models federated for virtual, man-in-the-loop studies.  However, the JIMM scenario developers discovered three critical limitations.  First, they could not develop advanced cognitive processes without significant workarounds.  Second, they could not vary the fidelity of the member models.  Third, they could not create or integrate new system models without initiating a lengthy configuration review process in which their requirements were often in conflict with those from other user sites.The team therefore initiated a search for alternative simulation environments and conducted a comparison study between Ternion Corporation’s FLAMES environment and JIMM.  They discovered that although FLAMES is provided with fewer models off-the-shelf, it offers developers significant flexibility to integrate custom models.  The team then determined that this characteristic would make FLAMES more suitable for CFTI studies, since it would allow model developers to accurately represent future systems whose details remain undefined today.   Despite the requirement for significant initial model development work, the reusability and accuracy of the models the team builds in FLAMES should provide additional utility over time.The FLAMES environment will therefore serve as the M&S framework of choice to conduct future mission-level studies at AVTAS.  Careful planning will be required to ensure that the models developed in the near future remain reconfigurable and interoperable.  To this end, the team has developed an object and information-modeling standard to which all member models will be held. This paper will now discuss those modeling standards, before describing the first use case, or scenario configuration, currently under development.Object Modeling, UML and Meta-ModelingThe FLAMES modeling framework constitutes an open environment that requires individual models to be developed using either existing software programs or built from scratch.  In either case, the resultant models need to be adaptable to alternative technologies, concepts and architectures.  These technologies can be defined for either internal system functions or inter-operable systems.  The physical location of these systems and their processes are variable.  A rigorous process using accepted practices is required to ensure development of models that can be reused and reconfigured.Universal Modeling Language (UML), Object Oriented (OO) design, and meta-modeling concepts enable this design environment and provide the flexibility needed to achieve the capabilities required for both simulation and existing/conceptual systems.  UML provides a standard for expressing OO analysis and design decisions.  OO design enables software design methods that model characteristics of abstract or real objects using classes and objects.  Meta-modeling concepts create an ontology that defines relations among objects that, if properly constructed, allows data to be shared and reused across object boundaries and between applications - in this case objects designed for the Net-Centric Operations Warfare (NCOW) domain.The team uses these concepts to enable development and analysis of C4ISR NCOW concepts.  UML/OO/Meta-Model development efforts allow creation of realistic representations of system alternatives that can be assessed under both static and dynamic conditions.  - Static environments assess systems and processes under controlled conditions.  The purpose of these tests is to identify proper function of end-to-end processes and/or capability gaps within or between systems.  The static environment is initially used to determine proper function of concepts or capabilities within a larger System-of-Systems (SoS) environment.  - Dynamic environments test systems and process threads defined by the architecture within an executable model and enable more accurate analysis of actual system performance and interactions under both test and operational conditions. The architecture as a result, can be used to identify system requirements/alternatives and serve as a centralized design environment that facilitates model development.  Scenarios applied to the model enable analysis of system/SoS performance under dynamic conditions defined by representative use cases/scenarios.  These should represent the range of possible operating conditions for the system. The Department of Defense Architecture Framework (DoDAF) provides structure and UML constructs that when combined with object oriented systems engineering techniques, provide a process/structure for creating and understanding systems capability requirements and operational concepts that define the architecture.  Using DoDAF/UML techniques and proper supporting tools, the objective of this structured approach is to enable efficient development and assessment of system-of-systems concepts and technologies.  This includes rapid translation of concepts developed in architectural frameworks into executable models.  This is especially important because complex systems increasingly rely on automation of capabilities to support complex operational concepts.  The capability to quickly assess the feasibility of these material vs. non-material solutions and man vs. machine issues in both static and dynamic environments is becoming increasingly important and can be enabled by this methodology.The goal of this effort is to develop network centric C4ISR operational architectures that enable assessment of system/SoS alternatives while simultaneously capturing and extracting methods/data required for design and production of executable models.  As the architecture development process has progressed, it was noted that many identified activities shared similar methods/attributes.  As various methods were classified into fundamental processes, the team discovered that a meta-model consisting of four supported processes and four supporting processes could be used to identify any activity in the architecture.  These meta-model elements are depicted in Figure 3.1.  The processes are closely related to the “observe, orient, decide and act (OODA)” cycle, but create an ontology that is more useful for C4ISR research, development, test and evaluation because they are more readily convertible into executable models.Figure 3. SEQ Figure \* ARABIC 1 – Meta-model core and supporting capabilities and their interactions.Below is a definition of meta-model process steps:Supported activities:Collect – to gather data.Interpret – to derive significant information from data in relation to the current body of knowledge. Decide – to resolve on a course of action.Engage – to enter upon or employ oneself in action; specifically, to enter into combat.Supporting activities:Translate – to turn from one language to another while retaining the meaning of the information.	Communicate – to send out electrical signals or electromagnetic waves corresponding to some data.Move – to go from one place to another; particularly to get into position to perform some action.Update Knowledge State – to update data, facts and/or perceptions possessed by an entity.The meta-model construct allows standardization of capability definitions at a fundamental level.  When combined with architecture development artifacts using UML tools and OO design techniques, the meta-model enables reuse of developed methods.  Additional processes can be created using the same fundamental activities.  If executable models are developed to the meta-model standard, a higher level of model reuse is enabled and much faster, more efficient model development activities are possible.  Figure 3.2 illustrates the relationship of the meta-model to the executable model.Figure 3.2 – Meta-model elements form links between capabilities and systems.  Analysis should address how well a candidate system of systems fulfills capability requirements.The team is currently developing techniques to enable architecture and model development that supports the meta-model standard and they are also developing follow-on meta-data standards that can support standardized data interchange between meta-model processes. While these standards are intended to be followed within the activities being pursued by this specific team, widespread adoption of such standards could provide a means for various M&S organizations to more efficiently share and utilize a variety of different M&S models and tools. Use Case DescriptionVarious use cases will be used to represent the realistic range of operating conditions that systems are likely to encounter.  Use cases therefore support analysis studies that evaluate the capability of various architecture implementations across these conditions.The team is currently implementing the first of many use cases.  This case includes a number of present-day and future candidate systems.  The supporting family of systems for the first spiral of model development is one potential configuration.  Future studies will introduce different concepts from various AFRL directorates and beyond.  However, to perform analysis studies, executable system models must be built.  Those selected for the first round of spiral implementation include the following:Long Range Strike (LRS) Aircraft – The LRS aircraft is a next-generation long-range bomber equipped with an advanced sensor package including Synthetic Aperture Radar (SAR) and Ground Moving Target Indicator (GMTI) capabilities.  Top speeds vary from M2.2 to M3.5 for the currently implemented concept.SensorCraft – An AFRL/VA concept, the SensorCraft is the air breathing component of a fully integrated ISR enterprise.  SensorCraft is envisioned to work with space and ground assets by automatically adapting sensor management to track and identify camouflaged, concealed, and moving targets.  It contains SAR, GMTI, and ELINT sensors.Penetrating ISR (PISR) – Penetrating ISR is an air-breathing platform equipped with an electro-optical (EO) sensor that provides high-detail imagery for final target identification.Space Based Radar (SBR) – SBR is a constellation of satellites with SAR and GMTI capabilities.Multi-Sensor Command and Control Aircraft (MC2A) – The MC2A in this use case contains only command and control functionality.  It develops weapon-target pairings and assigns LRS aircraft to engage specific targets.  Combined Air Operations Center (CAOC) – The CAOC is generally responsible for air operations.  In the future net-centric environment, decisions may be relocated to an in-theater commander on board a MC2A or directly to engagement platforms.  Reconfiguring these decision processes provides insight into the potential value of disaggregated decision making.Distributed Common Ground Station (DCGS) – The DCGS is a reach-back intelligence tasking and processing center.  It simulates data processing using time delays and issues sensor tasking orders to obtain high quality sensor data for targets or objects of interest.Wideband Network Waveform (WNW) – WNW is a network capability that enables advanced multimedia exchange, including simultaneous audio, data, and video transfer.  The network supports commercial IP routing, automatic network reconfiguration, and multiple independent levels of security.  This is one candidate system to fulfill the requirements of a Multi-Platform Common Data Link (MP-CDL).Transformational Communication Architecture (TCA) – TCA is a satellite communication (SATCOM) capability that will incorporate mobile and tactical data users with global intelligence.  It will integrate the National Security Space Communications Systems with terrestrial networks under the Global Information Grid Integrated Architecture (GIG-IA) framework. TCA will provide secure SATCOM between all user terminals and networks compliant with the GIG-IA.Figure 3.3 – System configuration for the initial round of spiral implementation. Other interoperable models could replace or augment such systems in future analytic studies.The first use case to be implemented in the FLAMES environment involves a long-range targeting task in a denied-access scenario.  The primary targets in this scenario are the Target Acquisition Radars (TARs) and Target Tracking Radars (TTRs) that allow the enemy air defense system to detect and track blue assets.  The blue process threads involved in this use case are:A red TAR/TTR is detected with any of the ISR assets in the constellation.  A SAR map taken from SBR or SensorCraft might contain imagery of this target, or the SensorCraft’s ELINT sensor might detect emissions from a radar site.	  Meta-model processes: collect, interpret, update knowledge state.	Raw or partially-processed sensor data is disseminated across the Wideband Network Waveform, and the DCGS chooses to process this data.  Meta-model processes: translate, communicate, interpret, update knowledge state.	Automatic Target Recognition (ATR) algorithms alert the presence of a potential target and the DCGS orders high-resolution collectors to examine the target.  Depending on current conditions, the most ideal sensor will vary—the SensorCraft might collect a spot SAR map, or the Penetrating ISR aircraft may collect close-range EO imagery of the target.	Meta-model processes: collect, interpret, decide, translate, communicate, move, update knowledge state.	The DCGS processes high-resolution data, and the CAOC and MC2A add the target to a list of potential engagements.	Meta-model processes: interpret, decide, translate, communicate, update knowledge state.	Depending on command authority, the MC2A or CAOC assigns an LRS aircraft to engage the target.  Meta-model processes: decide, translate, communicate, engage, move, update knowledge state.	As enemy radar sites are disabled and the IADS capabilities are diminished the ISR constellation collects Battle Damage Information (BDI) which the CAOC and MC2A use to determine whether subsequent strikes are required.	Meta-model processes: collect, interpret, decide, translate, communicate, move, engage, update knowledge state.	3.3  Initial DevelopmentThis team recently began implementing portions of the C4ISR architecture in FLAMES.  This paper will now describe development in the eight supported and supporting meta-model capabilities, and the software integration process with the NASIC IADS system models.Collection – In modeling collection, the team is ensuring the ability to choose among various levels of fidelity.  Therefore, easy interchange of sensor models is essential for this environment.  At this point, the team has a number of sensor models at its disposal.  These include a simple geometric calculation and a radar model that takes terrain into account.  For more advanced sensing calculations, SAR maps, and GMTI representation, the team is working to integrate a Northrop Grumman sensor simulation package directly into the FLAMES environment.  Interpretation / Decision – Both interpretation and decision processes are being modeled as cognitive processes.  These are C or C++ models that are user-defined and access meta-data-based knowledge structures to create new knowledge or make decisions.  Cognitive processes in this architecture include target prioritization and assignment, sensor resource management, and LRS aircraft reactive countermeasures. Engagement – Engagement profiles are modeled using cognitive processes.  Behaviors can be rapidly changed, by exchanging cognitive models.  For example, a set of cognitive models causes the LRS aircraft to fly towards a target, begin a SAR map offset at the maximum range of its sensor, turn back towards the target, and fire after final confirmation.  A simple exchange of cognitive models could introduce an engagement profile that uses off-board data exclusively, or one that engages multiple targets per ingress.  Knowledge – Knowledge capability is currently represented in a form compatible with the FLAMES kernel standard data types.  As further fields and data entries are developed, they will be added to data structures compatible with meta-data standards.  As new information arrives, applicable meta-model processes update the knowledge state.  Units and equipment read from and write to data structures to represent changes to the knowledge state.Translation – In this architecture, the primary means of communication is through message exchange.  Messages therefore model a common language spoken within the architecture.  Translation is simulated in how platforms translate knowledge and intentions into messages and how they decode incoming messages to read and interpret them.  One example of an already-implemented translation process is the MC2A’s generation of an assignment message, and the LRS aircraft’s reception and decoding of this message.  In this case, the MC2A sorts through targets, and once it finds one to assign, it inserts certain fields from its knowledge state into an instantiation of a message model.  In this way, the target assignment has been translated into a language the LRS aircraft can understand.  Likewise, when the LRS aircraft receives the assignment message, it is responsible for translating this message by extracting data fields, and then using this information to control its target engagement.  Communication – Communication systems will form the core of a net-centric architecture.  Initially, we will be integrating message sizes and baud rates to simulate network traffic and congestion.  Future spirals will introduce network models that represent system behavior with higher fidelity.  These models will allow analysis of how various transmission strategies and message dissemination patterns influence the overall quality of knowledge that each asset in the C4ISR constellation can access.  The team is currently considering integrating OPNET[2] network models, should that reduce the overall level of effort or expenditure required to achieve high-fidelity network simulations.Movement – Platform movement is implemented in a set of models that contain equations of motion that define vehicle types.  The team is currently using models provided with FLAMES which include a satellite, a fixed-wing aircraft, a rotary-wing aircraft, and a ground vehicle.  To define further types of vehicles or to create higher-fidelity models, developers will integrate equations of motion directly into equipment models in the FLAMES environment.3.4  NASIC IADS Model IntegrationReuse and sharing of models is a key factor in conducting M&S studies on a shorter, more affordable timeline.  To this end, the team is using Integrated Air Defense Models developed by the National Air and Space Intelligence Center to represent red threat environments.  Integrating red and blue activities requires matching fidelities among models.  For example, targets must have the necessary characteristics that allow them to interact with the sensor models, and data types must be compatible.  Additional model requirements must be met both sides.  In this integration effort, the team ran into an early challenge.  The NASIC IADS models require that blue platforms have additional data fields to identify their target types.  The IADS depends upon these fields to determine weapon-target pairings.  As an interim solution, the team has added these fields to all blue platforms.  However, to achieve interoperability in the long term, all data fields will be required to adhere to common data standards.  Adherence to meta-data standards will reduce the incidence of similar conflicts.Even taking integration challenges into account, the ability to use IADS models largely off-the-shelf has let the AFRL/VA and JHU/APL team focus the majority of its effort on blue element modeling.  Red side tasks will primarily be focused on scenario development and integration work. Some modifications to the IADS model may be required to allow for the most effective integration with the blue element modeling, but the fact that the IADS model does not need to be developed from scratch will significantly reduce the time required to produce analysis results.4.   Status & Way AheadThis team’s efforts to develop a network centric MS&A capability to support the AFRL/VA CFTI process is in its early stages and preliminary model development and integration activities are underway. Current plans call for an initial net-centric MS&A capability to be in place near the middle of CY05. This initial capability will be founded on a basic representation of the “use case” described previously in this document. The work will not stop there, however, as the AFRL/VA and JHU/APL team will be working to continuously expand and improve on this capability for the next several years as required to support the variety of AFRL and ASC based studies expected to utilize this capability.In addition to the ASC and NASIC partners, this team has been working closely with the AFRL Munitions Directorate (AFRL/MN) and, more recently, the AFRL Space Vehicles Directorate (AFRL/VS) to integrate advanced weapon capabilities into our simulation environment.  This collaboration has been quite effective so far primarily due to the fact that AFRL/MN has been using  FLAMES for the past 2 years so they were able to share their FLAMES modeling and utilization experiences with us.  This team continues to look for additional opportunities for collaboration with other MS&A organizations -- not only to maximize our ability to support the specific goals associated with our endeavors, but also to share our capabilities with those collaborating organizations in the hope that it might benefit their MS&A activities as well. We firmly believe that a great deal of untapped collaborative opportunities currently exists within the MS&A industry, and we are dedicated to exploring those possibilities as much as possible.5. References[1]  FLAMES simulation framework, Ternion Corporation;  HYPERLINK "http://www.ternion.com" www.ternion.com [2]  OPNET Technologies Inc.;  HYPERLINK "http://www.ternion.com" www.opnet.com Author BiographiesDan Caudill received a BS Degree in Aerospace Engineering from the University of Cincinnati in 1989 and has worked for the Air Force Research Laboratory’s Aerospace Vehicle Technology Assessment and Simulation (AVTAS) Branch since graduation. Mr. Caudill has more than 15 years of technical experience in developing and conducting various flight simulation studies and during that time has served as a simulation software developer, simulation operator, test director and project lead. MATTHEW GARR received a BS degree in Computer Science from Stanford University in 2002 and is an MA candidate in National Security Studies at Georgetown University.  He has two years of experience in Modeling and Simulation at the Johns Hopkins University Applied Physics Laboratory.  In this position, he has built models and scenarios to support analysis for the Joint Strike Fighter and Long Range Strike initiatives.  LT ERIC Like received a BS Degree in Electrical Engineering from the University of Texas in 2003.  He began working for the Air Force Research Laboratory’s AVTAS branch in early 2004.  During his time here, Lt Like’s work has focused on developing models of various potential future Air Force systems.STEVE TOPPER received a BA degree in Economics from Virginia Tech in 1980 a graduate certificate from the Naval War College in 1996.  He served as an F-14 Naval Flight Officer during Lebanon, Desert Storm and Balkans operations and on the War Gaming Faculty at the Naval War College.  Upon retirement, he served as the Site Lead for C4ISR engineering and system analysis team at the USAF Electronic Systems Center, Hanscom AFB, MA.  He is currently a Project Manager at the Johns Hopkins University Applied Physics Laboratory and supports analysis of the USAF Airborne Electronic Attack and Long Range Strike and DARPA’s Joint Unmanned Combat Air Systems programs.Jim Zeh received a BS degree in Electrical Engineering from the University of Cincinnati in 1980 and a MS degree in Computer Science from the University of Dayton in 1987. He has over 20 years of experience in Modeling and Simulation to support Air Force Research Laboratory 6.2 and 6.3 research and has authored several conference papers and technical reports.  Mr. Zeh is currently the project lead for the Simulation Based Research and Development effort within the Air Force Research Laboratory.  This involves coordinating the Simulation Based Research and Development effort throughout the Department of Defense, NASA, Industry, and Academia.Mission Task AnalysisCampaign Level AnalysisConcept Design AnalysisIterativeProcessEngagement Level Constructive AnalysisMission LevelVirtual AnalysisMission Level Constructive Analysis