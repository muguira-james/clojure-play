APPLYING ENTERPRISEARCHITECTURE TO MODELING AND SIMULATIONKenn Atkinson, P.E.Science Applications International Corporation (SAIC)1901 N. Beauregard St., Suite 500Alexandria, VA 22311703-824-3414 HYPERLINK "mailto:katkinson@dmso.mil" katkinson@dmso.milMs. Philomena ZimmermanDefense Modeling and Simulation Office1901 N. Beauregard St, Suite 500Alexandria, VA 22311703-998-0660 HYPERLINK "mailto:pzimmerm@dmso.mil" pzimmerm@dmso.milAbstract: The general consensus in industry and government is that large, complex systems development and acquisition efforts should be guided by explicit enterprise architectures. The Federal Enterprise Architecture and the DoD Architecture are two example implementations which demonstrate current efforts in applying architectural techniques to large government development and acquisition activities.  Using component architecture to promote reusability and composability has been addressed in several past SIW presentations. Expanding the component framework to an enterprise architecture could provide a quantum leap in capability and ease of use. A robust, practical, theoretically grounded framework for enterprise architecture and component design is needed.  Rather than invent the wheel again, we are considering reusing and adapting frameworks others have created to address similar problems.This paper provides an overview of the Federal Enterprise Architecture, and the DoD Architecture Framework and highlights features and capabilities which could be applied to Modeling and Simulation in order to meet the identified Warfighter needs and provide a foundation which can be used to create more reusable, scalable, secure and interoperable simulations.Keywords :Entreprise architecture, component-based architecture, interoperability, composability, reuse, Zachman FrameworkIntroductionThe general consensus in industry and government is that large, complex systems development and acquisition efforts should be guided by explicit enterprise architectures. The Federal Enterprise Architecture and the DoD Architecture are two example implementations which demonstrate current efforts in applying architectural techniques to large government development and acquisition activities. The Federal Enterprise Architecture serves as a reference point to facilitate the efficient and effective coordination of common business processes, information flows, systems, and investments among Federal Agencies and other Governmental entities. In time, Government business processes and systems will operate seamlessly in an enterprise architecture that provides models and standards that identify and define the information services used throughout the Government. [1]The Defense Science Board and other major studies have concluded that one of the key means for ensuring interoperable and cost-effective military systems is to establish comprehensive architectural guidance for all of DoD.  [2] The DOD Architectural Framework provides a critical mechanism for understanding operational concepts and their relation to automated capabilities, anticipating changes in operational concepts or changes in automated capabilities.  As DoD moves toward the concept of Net-Centric Operations and Warfare (NCOW), DoD components have made significant progress in using architectures. [3] The success of modeling and simulation (M&S) as a key enabler of this transformation process will be largely dependent on increased reuse, and an improved ability to rapidly and flexibly compose new components and simulations to satisfy the specific needs of the user. [4]  A recent survey of warfighter  needs by the Defense Modeling and Simulation Office (DMSO) identified faster, less costly development, standardized (reusable) components and multi-resolution, composable simulation environments as critical advanced M&S techniques. [5].  The burden of developing and/or integrating models, simulations, databases, interfaces, etc. each time M&S is applied hinders the effective use of M&S capabilities.  To minimize this burden, the DoD has established a strategy to foster simulation interoperability and reuse, calling for the establishment of a common technical framework (CTF) and common services. The goal of DMSO’s Composable Mission Space Environments (CMSE) initiative, sometimes referred to as "composability," is to identify the issues related to "composability" and then target DMSO initiatives, and suggest related research from other organizations.  This paper examines the Federal Enterprise Architecture Framework and the DoD Architectural Framework to identify the salient characteristics of an enterprise architecture that would be of value to the modeling and simulation industry to increase reuse and composability.  DefinitionsArchitecture:  The definition of an architecture used in ANSI/IEEE Std 1471-2000 is: "the fundamental organization of a system, embodied in its components, their relationships to each other and the environment, and the principles governing its design and evolution."[6] An architecture is the highest-level concept of a system in its environment.  Every system has an architecture.  An architectural description is a model used to present the structure and behavior of the whole system. It shows how the system fulfills the needs in the context of its environmentIt identifies major system components, their interconnections and dependencies, and the limits within which they must operateArchitecture Description:  An architecture description is composed of one or more views, which are a way of looking at an architecture (description).  A view represents the whole system to focus on one or more critical concerns:Support multiple audiences each with their own concernsReduce perceived complexity through separation of concernsComponent:  Components model the major “chunks” of a system from the chosen point of view. These may be functions, services, resources, hardware, data or other entities. Connections express the relationships between components (again from the chosen point of view). These may be “traditional” connections such as data, control flows or other kinds of links. Constraints represent “laws” which the components and connections must observe. Typical constraints include non-functional requirements (performance attributes, security needs, “ilities”) and other considerations that govern the structure of the system (implementation requirements, adherence to standards, etc.). [7]Architecture is defined as the structure of components, their relationships, and the principles and guidelines governing their design and evolution over time. [8] An architecture is a conceptual model conveying the responsibilities, organization, and inter-relationships of the major technology components that will best support an area of business need, including where necessary, the external systems necessary to provide context and express interfaces.  An architecture framework is an organizing mechanism for managing the development and maintenance of architecture descriptionsIntegrated (Enterprise) Architecture:  An architecture consisting of multiple views (operational, systems, and technical standards) that facilitate integration and promote interoperability across family-of-systems (FoS)/system-of-systems (SoS) and compatibility among related mission area architectures [9].  .  An Enterprise Architecture defines how software, computing, storage and networking systems should integrate and operate to meet the changing needs of your business [10] and also provide a structure for organizing resources, describing and managing Enterprise Architecture activities.  Enterprise Architecture Framework:  An enterprise architecture framework is one way of translating modeling requirements (i. e., what is to be represented by the simulation) into a detailed design framework (i. e., how it is to be done), from which the software, hardware, networks (in the case of distributed simulation), and systems/equipment that will make up the simulation can be built.ToolsBoth the Federal Enterprise Architecture Framework and the DOD Architecture Framework are based on three common tools:  The business models used to decompose the enterprise into segments that represent each of the major business areas of the enterprise.  The views which document linkages between mission needs, information content, and IT capabilities and a Zachman matrix which define the products which relate stakeholder perspectives to implementation focus.Business ModelsIn general terms an enterprise architecture framework is used to decompose the enterprise into segments that represent each of the major business areas of the enterprise.  The architectural models within the framework document the business and design models implemented to support the major business areas of the enterprise [11]Architecture Views An architecture is documented as a model and is comprised of one or more views.  Frameworks describe the details and relationships of these model views and the underpinning information contained in the Zachman products.  The various views of the architecture are often classified as conceptual, logical, and physical views. Conceptual views are the most abstract and tend to be described in terms that are most familiar to the inexperienced users of the system. The conceptual view is used to define the functional requirements and the business users' view of the application to generate a business model. Logical views show the main functional components and their relationships within a system independently of the technical details of how the functionality is implemented. Architects create application models, which are logical views of the business model, as they determine how to meet business objectives and requirements. The application models represent the logical view of the architecture for an application. Physical views are the least abstract and illustrate the specific implementation components and their relationships. Each of the elements in the physical view is implemented, normally by a design and development process, as a software or hardware system. This implementation view is normally owned by the development or operations organizations within the implementer, or user organization. [12]Zachman MatrixIn 1987, John Zachman published a different approach to describing the elements of system development. Instead of representing the process as a series of steps, he organized it around the points of view taken by the various players. These players included (1) someone who has undertaken to do business in a particular industry, (2) the business people who run the organization, (3) the systems analyst who wants to represent the business in a disciplined form, (4) the designer, who applies specific technologies to solve the problems of the business, (5) the builder of the system, and finally (6) the system itself. Mr. Zachman represents each of these perspectives as a row in his matrix. Just as a journalist asks about a situation: what, how, who, where, when and why, he identified similar things that each participant should look at. The items examined can be represented by columns in the matrix. Specifically, the columns represent the data manipulated by an organization (what), its functions and processes (how), locations where business is conducted (where), events that trigger business activities (when), the people and organizations involved (who), and the motivations and constraints, which determine how the business behaves (why). The set of cells thus defined turn out to house all the various modeling techniques we use in the information processing industry. Moreover, they identify some places where we could use some new models. In addition, the translations required to go from row to row reveal interesting things about both how we do and how we should do our business. [13]In summary, a Zachman matrix relates perspectives (rows) and focus (columns).  Each cell resulting as an intersection of a row and column describes a model or architectural description for each unique combination of perspective and focus.Federal Enterprise Architecture Framework, (FEAF)Congress required Federal Agency Chief Information Officers to develop, maintain, and facilitate integrated systems architectures with the passage of the E-Government Act of 2002 [14] and the Clinger-Cohen Act of 1996. [15] Additionally, the OMB has issued guidance that requires agency information systems investments to be consistent with Federal, Agency, and bureau architectures. OMB guidance provides for the content of Agency enterprise architectures. [16] The Chief Information Officer Council, the Department of the Treasury [17], the National Institute of Standards Technology (NIST), and GAO, are examples of government agencies which have developed architecture frameworks that define the content of enterprise architectures. [18]The Federal Enterprise Architecture Framework (FEAF) developed by the Chief Information Officer Council will be used as an example implementation in this paper.  The Federal Enterprise Architecture (FEA) vision identifies what must be done to serve the strategic needs and direction of the Federal Government. The Federal CIO Council seeks to develop, maintain, and facilitate the implementation of the top-level enterprise architecture for the Federal Enterprise. This architecture will serve as a reference point to facilitate the efficient and effective coordination of common business processes, information flows, systems, and investments among Federal Agencies. In time, Government business processes and systems will operate seamlessly in an enterprise architecture that provides models and standards that identify and define the information services used throughout the Government.The FEAF is a conceptual model that defines a documented and coordinated structure for crosscutting businesses and design developments in the Government. [19] The FEAF becomes the strategic information asset base that defines the business, information necessary to operate the business, technologies necessary to support the business operations, and transitional processes for implementing new technologies in response to the changing needs of the business.The Federal Enterprise Architecture Framework is described in four levels, each providing a greater level of detail.  Levels I, II and III are depicted as a flow chart integrating the eight principle components.  The eight principle components are:  	architectural drivers, strategic direction, current architecture, target architecture, transitional processes, architectural segments, architectural models, and standards.  Figure 1 shows the Level I diagram as defined by the FEAF.  Each of the eight components is described below and includes the details added by the Level III view.  In the Level III view each component is subdivided to display the additional detail. The FEAF includes the documentation of the current architecture, target architecture and the transitional processes needed to achieve the target architecture as part of Levels I, II and III.Architecture Drivers Architectural drivers represent external stimuli or change agents which impact the enterprise architecture: Levels II and III of the FEAF define two subdivisions: business and design drivers. The business drivers could be new legislation, new administration initiatives, budget enhancements for accelerated focus areas, and market forces. Design drivers include new and enhanced software and hardware and their combinations with a variety of deployment approaches.  Strategic Direction Strategic direction guides the development of the target architecture and consists of a vision, principles, and goals and objectives.  Levels II and III define two subdivisions:  vision and principles. Current ArchitectureThe current architecture defines the "as is" enterprise architecture and consists of two parts: current business and design architectures (i.e., data, applications, and technology). This is a representation of current capabilities and technologies and is expanded as additional segments are defined.Target Architecture The target architecture defines the "to-be-built" enterprise architecture and consists of two parts: target business and design architectures (i.e., data, applications, and technology). This represents the future capabilities and technologies resulting from design enhancements to support changing business needs.Transitional ProcessesThe transition process defines the migration path from the current architecture to the target architecture. Critical transition processes for the Federal Enterprise include capital IT investment planning, migration planning, configuration management, and engineering change control.  Levels II and III provide additional details for Investment Review, Segment Coordination, Market Research, and Asset Management. Architectural SegmentsArchitectural segments consist of focused architecture efforts on major crosscutting business areas, such as common administrative systems or program areas. They represent a portion (segment) of the overall enterprise architecture. A segment is considered to be an enterprise within the total Federal Enterprise.Architectural ModelsThe architectural models define the business and design models that comprise the segments of the enterprise description.  Level II includes the Business Model, Data Model, Application Model, and Technology Model.  Level III expands the Application Model with the Conceptual Process Model and the Interoperability Model.StandardsRefer to all standards (some of which may be mandatory), guidelines, and best practices.  Level II includes Security Standards, Data Standards, Application Standards, and Technology Standards.Federal Enterprise Architecture Framework Level 4The FEAF implements Level IV as a Zachman matrix as shown in Table 2.  Down the left side are the perspectives; across the top are the different focuses or product of these perspectives.  The cells resulting as the intersection of the perspectives and focuses explicit what the enterprise business is and what information is used to conduct it (i.e., the business models).Perspectives (Rows) Each row represents a total view of the solution from a particular perspective. An upper row or perspective does not necessarily have a more comprehensive understanding of the whole than a lower perspective. Nor does an upper row decompose into greater detail in a lower row. Each row represents a distinct, unique perspective; however, the deliverables from each perspective must provide sufficient detail to define the solution at the level of perspective and must translate to the next lower row explicitly.Planner's View (Scope)A "bubble chart" or Venn diagram, which depicts in gross terms the size, shape, partial relationships, and basic purpose of the final structure. Owner's View (Enterprise or Business Model)The enterprise (business) models, which constitute the designs of the business and show the business entities and processes and how they relate.Designer's View (Information Systems Model)The system model that includes the data elements, logical process flows, and functions that represent business entities and processes.Builder's View (Technology Model)The technology models, which adapt the information systems model to the details of the programming languages, input/output (I/O) devices, or other required supporting technology.Subcontractor View (Detailed Specifications)The detailed specifications used to code individual modules and the detailed requirements for components of the modular systems software.Focus (Columns)Each focus asks a question. The perspective defines the form and details required to make each answer explicit and understood.  The FEAF includes the first three columns (i.e., Entities = what, Activities = how, Locations = where).  The Zachman Framework includes three other columns not incorporated into the Federal Enterprise Architecture Framework at this time. Few formal modeling designs are available for the abstractions who, when, and why. This causes the descriptive representations (i.e., models) for these columns to be more theoretical and less empirical.Models (Cells)The models or architectural descriptive representations are made explicit at the intersections of the rows and columns. An intersection is referred to as a cell. Because a cell is created by the intersection of a perspective and a focus, each is distinctive and unique and represents a normalized and explicit description for the perspective’s focus.The models or descriptions are higher-level depictions or the surface answers of the cell. The refined models or designs supporting that answer are the detailed descriptions within the cell. Decomposition (i.e., drill down to greater levels of detail) takes place within each cell.FEAF Reference ModelsThe FEA is being constructed through a collection of interrelated "reference models"[21] designed to facilitate cross-agency analysis and the identification of duplicative investments, gaps, and opportunities for collaboration within and across Federal Agencies. These models are defined as: Business Reference Model (BRM)The Business Reference Model is a function-driven framework for describing the business operations of the Federal Government independent of the agencies that perform themPerformance Reference Model (PRM)The PRM is a framework for performance measurement that provides common application measures throughout the federal government. It allows agencies to better manage the business of Government at a federal strategic level while providing a means for gauging progress towards the target FEA. Data and Information Reference Model (DRM)The Data and Information Reference Model (DRM) will describe, at an aggregate level, the data and information that support program and business line operations. The model will aid in describing the types of interaction and exchanges that occur between the Federal Government and its various customers, constituencies, and business partners. Service Reference Model (SRM)The Service Component Reference Model (SRM) will identify and classify horizontal and vertical IT service components that support Federal agencies. The model will aid in recommending service capabilities to support the reuse of business components and services across the Federal Government. Technical Reference Model (TRM)The Technical Reference Model (TRM) is a hierarchical foundation to describe how technology is supporting the delivery of the service component. The TRM will outline the technology elements that collectively support the adoption and implementation of component-based architectures.Framework SummaryEnterprise architecture is the principle structural mechanism for establishing a basis for assimilating high rates of change, advancing the state of the art in enterprise design, managing the knowledge base of the enterprise, and integrating the technology into the fabric of the enterprise. Enterprise architecture is cross-disciplinary, requiring diverse skills, methods, and tools within and beyond the technology community.  The Federal Enterprise Architecture Framework establishes a universal language to facilitate communication, research, and implementation of enterprise architecture concepts across the Federal Enterprise. The Framework is a valuable cognitive management tool, central to making long-term and short-term trade-offs inherent when managing change in a complex enterprise. Component ArchitectureIvar Jacobson states “Component-based software engineering (CBSE) is now the way to produce software fast, with less effort, of high quality – not just the first time a product is released but for its entire life.”[16] In 2002, the Federal Enterprise Architecture Program Management Office (FEA-PMO) Software Architecture Working Group (SAWG) published the “Component-Based Architecture (Guidance and Recommendations)” [22] high-level discussion on the background, challenges and scope of using Component-Based Architecture standards.  The definition of standards, recommended technologies, and best practices surrounding the adoption of a system architecture that supports component reuse, distribution and cross-agency collaboration. is a key factor helping the FEA-PMO achieve its vision.  The technology standards recommended in this document are well established in the industry and are being recommended to promote and support the development and deployment of scalable, interoperable, and reusable computing platforms and components.The FEA-PMO defines a Component as an application, capability, or service that leverages technology to perform a specific business function. These standards will greatly facilitate the ability to share and reuse a common set of technology components, while also leading to reduced investment spendingIntegrated Component-Based Architecture ModelThe FEA-PMO recommends the use and implementation of a tier-based architectural framework to develop components and applications. Tiered application design provides the best solution to leverage components and services across an enterprise-wide CBA. By partitioning the layers, developers can create components using a “building block” approach aimed at reuse and interoperability. By embracing this methodology, agencies will reduce solutions and the components development costs while increasing the speed in which they can be deployed.Security LayerThe security layer provides an overarching set of services that encompass the registration of components, services, user authentication, validation, encryption, etc. Presentation LayerThe presentation layer (or user interface) presents the users with easy-to-use screens to perform the task or business function. (i.e., forms, reports, etc.)Business Logic LayerThe business logic layer contains the calculations, algorithms, components and functions that will perform the specific tasks and/or requests (i.e., search engine, query database, save data)Transaction Management LayerThe transaction management layer acts as a “coordinator” to ensure activities are properly executed and operating efficiently (i.e., thread management, commit, rollback)Information Storage LayerThe information storage layer is where the actual information is stored and maintained (i.e., databases, knowledge repositories, legacy systems)DoD The DoD Architecture Framework, Version 1.0, [23] defines a common approach for Department of Defense (DoD) architecture description development, presentation, and integration.  The Framework is intended to ensure that architecture descriptions can be compared and related across organizational boundaries, including Joint and multinational boundaries.Version 1.0 of the DoD Architecture Framework is an evolution of the C4ISR Architecture Framework, Version 2.0, dated 18 December 1997.  This evolution reflects and leverages the experience that the DoD components have gained in developing and using architecture descriptions.  The most significant changes in this version of the Framework include guidance on determining architecture content based on intended use; focus on using architectures in support of DoD’s Requirements Generation System (RGS), the Planning, Programming, and Budgeting System (PPBS), and the Acquisition Management System (AMS); and increasing emphasis on the data aspects of architectures. DoD Architecture ViewsThe Framework [24] defines three related views of architecture: operational (OV), systems (SV), and technical standards (TV).  Each view is composed of sets of architecture information that are depicted via graphic, tabular, or textual products.  The All-DoD Core Architecture Data Model (CADM) defines the data structure and relationship for architecture information.Operational Architecture ViewThe OV is a description of the tasks and activities, operational elements, and information exchanges required to accomplish DoD missions.  DoD missions include both warfighting missions and business processes.  The OV contains graphical and textual products that comprise an identification of the operational nodes and elements, assigned tasks and activities, and information flows required between nodes.  It defines the types of information exchanged, the frequency of exchange, which tasks and activities are supported by the information exchanges, and the nature of information exchanges in detail sufficient to ascertain specific interoperability requirements.[f]Contains descriptions (often graphical) of the operational elements, assigned tasks and activities, and information flows required to support the warfighter. It defines the types of information exchanged, the frequency of exchange, which tasks and activities are supported by the information exchanges, and the nature of information exchanges in detail sufficient to ascertain specific interoperability requirements.Technical Architecture ViewThe TV is the minimal set of rules governing the arrangement, interaction, and interdependence of system parts or elements whose purpose is to ensure that a conformant system satisfies a specified set of requirements.  The TV provides the technical systems-implementation guidelines upon which engineering specifications are based, common building blocks are established, and product lines are developed.  The TV includes a collection of the technical standards, implementation conventions, standards options, rules, and criteria organized into profile(s) that govern system components and interfaces for a given architecture. [g]The technical architecture (TA) view is the minimal set of rules governing the arrangement, interaction, and interdependence of system parts or elements, whose purpose is to ensure that a conformant system satisfies a specified set of requirements. The technical architecture view provides the technical systems implementation guidelines upon which engineering specifications are based, common building blocks are established, and product lines are developed. The technical architecture view includes a collection of the technical standards, conventions, rules, and criteria organized into profile(s) that govern system services, interfaces, and relationships for particular systems-architecture views and that relate to particular operational views.Systems Architecture ViewThe SV is a description, including graphics, of systems and interconnections providing for, or supporting, DoD functions.  DoD functions include both warfighting and business functions.  For a domain, the SV shows how multiple systems link and interoperate and may describe the internal construction and operations of particular systems within the architecture.  For the individual system, the SV includes the physical connection, location, and identification of key hardware and software; it may also include data stores, circuits, and networks and may specify system and component performance parameters.  The SV associates resources to the OV and its requirements per standards defined in the TV.  [h]The systems architecture (SA) view is a description, including graphics, of systems and interconnections providing for, or supporting, warfighting functions. For a domain, the systems architecture view shows how multiple systems link and interoperate, and may describe the internal construction and operations of particular systems within the architecture. For the individual system, the systems architecture view includes the physical connection, location, and identification of key nodes (including materiel-item nodes), circuits, networks, warfighting platforms, etc., and it specifies system and component performance parameters (e.g., mean time between failure, maintainability, availability). The systems architecture view associates physical resources and their performance attributes to the operational view and its requirements following standards defined in the technical architecture.All View ProductsThere are some overarching aspects of an architecture that relate to all three of the views.  These overarching aspects are captured in what is termed “All-Views Products.”  These aspects include the scope and context for the architecture.  The scope includes the subject area and timeframe for which the architecture is applicable.  The subject area for architecture descriptions is often based upon mission areas or support functions (such as Special Operations, Strategic Deterrence, or Logistics) or is based upon processes within those missions.  Some architectures cover cross-mission areas or cross-functional areas. [I]Architecture ProductsArchitecture products are those graphical, textual, and tabular items that are developed in the course of building a given architecture description and that describe characteristics pertinent to the purpose of the architecture.  When used as part of an architecture description, all products, even those whose primary presentation is graphical, should contain explanatory text.  The set of architecture products are listed in Table 3.  Table  SEQ Table \* ARABIC 3 DoD Architecture ProductsApplicable ViewFramework ProductFramework Product NameAll ViewsAV-1Overview and Summary InformationAll ViewsAV-2Integrated DictionaryOperationalOV-1High-Level Operational Concept GraphicOperationalOV-2Operational Node Connectivity DescriptionOperationalOV-3Operational Information Exchange MatrixOperationalOV-4Organizational Relationships ChartOperationalOV-5Operational Activity ModelOperationalOV-6aOperational Rules ModelOperationalOV-6bOperational State Transition DescriptionOperationalOV-6cOperational Event-Trace DescriptionOperationalOV-7Logical Data ModelSystemsSV-1Systems Interface DescriptionSystemsSV-2Systems Communications DescriptionSystemsSV-3Systems-Systems MatrixSystemsSV-4Systems Functionality DescriptionSystemsSV-5Operational Activity to Systems Function Traceability MatrixSystemsSV-6Systems Data Exchange MatrixSystemsSV-7Systems Performance Parameters MatrixSystemsSV-8Systems Evolution DescriptionSystemsSV-9Systems Technology ForecastSystemsSV-10aSystems Rules ModelSystemsSV-10bSystems State Transition Description SystemsSV-10cSystems Event-Trace DescriptionSystemsSV-11Physical SchemaTechnicalTV-1Technical Standards ProfileTechnicalTV-2Technical Standards ForecastThe products that should be developed for a given architecture description depend on the intended use of the architecture.  Section 4.4 provides a use matrix that depicts which products should be developed based on intended use.It is important to distinguish between an architecture view and an architecture product.  As stated earlier, a view represents a perspective on a given architecture, while a product is a specific representation of a particular aspect of that perspective.  Thus, a view consists of one or more products.Architecture GuidelinesThe DoD Architecture Framework provides guidance on building and integrating architecture descriptions.  A high-level, six-step process has been developed to provide some general guidance to the architect and to emphasize the guiding principles. Built with a Purpose in Mind.  An architecture should have a specific and commonly understood purpose to increase the efficiency of the effort and the utility of the resulting description.  The purpose determines how wide and deep the scope should be, which characteristics to capture, and what timeframes to consider.  This principle applies equally to the description of an architecture as a whole or to any portion or view of an architecture.  This principle can also apply to groups of architectures.  If architecture descriptions built by various organizations are to be compared, it is important that they all be built from the start with the purpose of comparison in mind.Simple and Straightforward as PossibleDeveloping overly complex architectures is costly in both time and money.  Focusing the architecting effort is essential to obtain an acceptable return on investment.Facilitate, Not Impede, Communication Among Humans Architecture descriptions must be structured to allow humans to understand them quickly and to guide the human thinking process in discovering, analyzing, and resolving issues.   Extraneous information must be excluded and common terms and definitions must be used.  Often, graphical formats offer an excellent media for rapid human understandingRelatable and Comparable Like the previous principle, this one requires the use of common terms and definitions.  This principle also requires that a common set of architectural “building blocks” or reference documents be used as the basis for architecture descriptions.  This principle also dictates that products of a given type that are developed for different architectures must display similar information about their respective domains, in similar formats.  The appropriate, common format and information content for each product type must be specified in architecture guidance, such as in this Framework.Modular, Reusable, and DecomposableArchitecture descriptions should consist of related pieces that can be recombined with a minimum amount of tailoring, so that they can be used for multiple purposesSummaryThe success which employing a common enterprise architecture has achieved in both government and industry make it a candidate for applying to modeling and simulation.  The use of an enterprise architecture can help achieve the goals of interoperability, reuse and composability.  The fundamentals of an enterprise architecture are well defined, mature, and readily adapted to the needs of the M&S community.  There are two critical, distinctly different challenges facing any modern enterprise as it emerges into the Twenty-first Century Information Age. These challenges affect its ability to operate effectively and dynamically respond to the ever-increasing rates of change in the competitive marketplace and regulatory environment. The Enterprise must: begin making descriptive representations (models) of the Enterprise explicit. This entails populating various cells of the Zachman Framework with instances of models, for example, defining specific models for the Enterprise, with the intent of producing system implementations that more accurately reflect the intent of the enterprise, and of retaining the models to serve as a base-line for managing Enterprise change.   Formalize and enhance the Enterprise Architecture process. Initially, this would entail defining for the Enterprise, for example, the generic components (contents) of each of the cells of the Framework, that is, defining what is important to capture in each cell when building instances of models for that enterprise. This would enable formalizing the management system (plans and controls) for building the Enterprise models, for evaluating and deploying development methodologies and tools, for selecting and/or defining databases (repositories) for storing the Enterprise models, for defining the roles, responsibilities and skills required within the architecture process, etc. [25]While Enterprise Architecture is more critical than ever, the reality is that doing it "right" takes time - time that must be carefully balanced between today’s immediate needs and those that address the changing requirements of the future. How do we make "educated compromises" so that we can satisfy the present issues at the same time that we are defining and building a platform for managing the changing business and technology needs of the future?  Organizations that ultimately succeed at this balancing act will be the ones that develop and maintain explicit architectural representations of the enterprise; they alone will have the tools to manage change - as it occurs - no matter how complex.  [26]References [1] “Federal Enterprise Architecture Framework, Version 1.1” The Chief Information Officers Council, September 1999[2]  “DoD Architecture Coordination Council (ACC)”Under Secretary of Defense (Acquisition & Technology), Assistant Secretary of Defense (Command, Control, Communications, and Intelligence [C3I]), Joint Staff/J6 Memorandum, 14 January 1997[3]  “DOD Architecture Framework, Volume 1:  Definitions and Guidelines, Draft”, DOD Architecture Framework Working Group, 15 January 2003 [4] Transformation Study Report, Executive Summary, 27 April 2001, http://www.defenselink.mil/specials/transform/intro.html and click on “Executive Summary” under “Related Sites” [5] Warfighter M&S Needs Assessment of the Unified Commands and Selected Supporting Commands (Final Report), 17 November 2000.[6] IEEE Recommended Practice for Architectural Description of Software-Intensive Systems (IEEE Std 1471-2000)[7]”Patterns of Enterprise Architecture” Martin Fowler, Addison-Wesley 2003[8] An overview of the activities and products of the IEEE AWG. Slides presented at the SEI/SIGAda Product Line Architecture Workshop, Salem, MA, June 1997.[9] “Interoperability and Supportability of Information Technology and National Security Systems.” DoDD 4630.5, January 11, 2002 [10]”Enterprise Architecture” Corporate Technologies, www.cptech.com[11]  “E-Gov Enterprise Architecture Guidance (Common Reference Model), Draft Version 2.0” Federal Enterprise Architects Working Group, July 25, 2002 [12] Microsoft Architecture Overview, Executive Summary, Michael Platt, July 2002[13]“The Zachman Framework- An Introduction” David C. Hay, Essential Strategies, Inc.   HYPERLINK "http://www.tdan.com/i001fe01.htm" http://www.tdan.com/i001fe01.htm[14]  “E-Government Act of 2002”, H.R. 2458[15]  “Clinger-Cohen Act of 1996”, Division E, 40m U.S.C. Section 1401 ET seq.[16]”Management of Federal Information Resources” OMB CircularA-130, November 20,2000[17]  “Treasury Enterprise Architecture Framework, Version 1” Department of Treasury, Chief Information Officers Council, July 2000[18]  “A Practical Guide to the Federal Enterprise Architecture, Version 1.0” Chief Information Officer Council, February 2001[19]  “Federal Enterprise Architecture Framework, Version 1.1” The Chief Information Officers Council, September 1999[20]”Component-Based Software Engineering, Putting the Pieces Together” George T. Heineman and William T. Councill, Addison-Wesley, 2001[21][22]  “Component-Based Architecture (Guidance and Recommendations), Version 1.3” Federal Enterprise Architecture Program Management Office (FEA-PMO), Solution Architects Working Group, Working Draft October 24, 2002[23] DoD Architecture Framework, Volume 1:  Definitions and Guidelines, Version 1.0,Final Draft , DoD Architecture Framework Working Group, 16 January 2003  [24]  “Interoperability In DoD Acquisition Programs Through Enterprise Architecting” Mary Linda Polydys, The Journal of the Defense Acquisition University, Vol. 9, No. 3, Summer, 2002[25]  “Department of Defense Joint Technical Architecture, Version 4” Department of Defense, 17 July 2002[26] “Architecture – A Balanced Approach” The Zachman Institute for Framework Advancement,  HYPERLINK "http://www.zifa.com" http://www.zifa.com[27]  “The New Enterprise Architecture” Alexander Drobik, Jeff Comport, Bill Rosser, Jeff Schulman, Gartner, Inc.  HYPERLINK "http://www.gartner.com" www.gartner.com, 2003 [28]  “Information Management Directions: The Integration Challenge” NIST Special Publication 500-167, By Elizabeth N. Fong and Alan H. Goldfine; September 1989[29]  “Strategic Information Planning:  Framework for Designing and Developing System Architectures” GAO/IMTEC-92-51, June 1992Authors:Kenn Atkinson is a Scientist for Science Applications International Corporation, assigned to the Support Staff for the Defense Modeling and Simulation Office. He has 23 years experience in software development and RF measurement systems.  Mr. Atkinson is a Registered Professional Engineer, received a Masters in Engineering Administration from the University of Utah and a Bachelors in Physics from the Brigham Young University.Philomena (Phil) Zimmerman has worked 18 years in development and testing for the DoD.  For the last nine years, she has worked in the development of simulation software, and the creation and management of distributed simulation systems, largely for the Test and Evaluation community.  She is currently on a rotational assignment, from the Naval Research Laboratory, to the Defense Modeling and Simulation office, working as the Associate Director, Joint Programs and Transformation Initiatives.     Ms. Zimmerman received a BS in Mathematics from St. John Fisher College.Figure  SEQ Figure \* ARABIC 4 FEAF Component ArchitectureTable  SEQ Table \* ARABIC 1 The Zachman Framework MatrixWhatDataHowFunctionWhereNetworkWhoPeopleWhenTimeWhyMotivationScope(contextual)PlannerList ofImportantThingsList ofProcessesList ofLocationsList ofOrganizationsList ofEvents orCyclesList ofBusiness GoalsStrategyBusiness Model(conceptual)OwnerSemanticModelBusinessProcessModelBusinessLogisticsSystemWorkflowModelMasterScheduleBusinessPlanSystem Model(logical)DesignerLogicalDataModelApplicationArchitectureDistributedArchitectureHumanInterfaceArchitectureProcessingStructureBusinessRuleModelTechnology Model(physical)BuilderPhysicalDataModelSystemDesignTechnologyArchitecturePresentationArchitectureControlStructureRuleDesignDetailed Model(specification)SubcontractorDataDefinitionProgramNetworkArchitectureSecurityArchitectureTimingDefinitionRuleSpecificationEnterpriseDataFunctionNetworkOrganizationScheduleStrategyTable  SEQ Table \* ARABIC 2 FEAF Level IV MatrixPerspectivesDataArchitecture(entities=what)ApplicationArchitecture(entities=how)TechnologyArchitecture(Entities=where)Planner’s ViewObjectives/ScopeList ofBusiness ObjectsList ofBusiness ProcessesList ofBusiness LocationsOwner’s ViewEnterprise ModelSemanticModelBusinessProcess ModelBusinessLogistics ModelDesigner’s ViewInformation Systems ModelLogicalData ModelApplicationArchitectureSystemDeployment ArchitectureBuilder’s ViewTechnology ModelPhysicalData ModelSystemDesignTechnologyArchitectureSubcontractor’s ViewDetailed SpecificationsData DefinitionProgramsNetworkArchitectureFigure  SEQ Figure \* ARABIC 2 Federal Enterprise Architecture Level 1Figure  SEQ Figure \* ARABIC 1 Architectural ViewsFigure  SEQ Figure \* ARABIC 3 Integrated Component-Based Architecture Model