Requirements Consumption and Analysis in an HLA FederationRodneyLongSTRICOM ES12350 Research ParkwayOrlando, FL 32826Rodney_Long@stricom.army.milKevin MullallyAcuSoft, Inc.12249 Science DriveSuite 160Orlando, FL 32826Mullally@acusoft.comKeywords:HLA; Requirements; TestingABSTRACT: Following the Federation Development and Execution Process (FEDEP) model, requirements are defined based on the objectives of a federation.  These requirements are used as a model for the implementation of the federation and are ultimately levied to test whether the federation objectives have been met.  Requirements are a useful and sometimes critical resource in the development and execution process.  They establish the boundaries and the means by which the federation will proceed.  This paper examines methods used to define requirements and how they can be used within activities throughout the FEDEP.  Specific areas of discussion include the definition of testable requirements, the establishment of requirements traceability, and the use of requirements to identify and mitigate risk.IntroductionThe HLA Federation Development and Execution Process (FEDEP) [1] model identifies the basic need for defining requirements to be used initially for design and later for post execution analysis.  Requirements are a resource that provide great utility within an engineering process and should be fully leveraged.  This paper investigates methods by which requirements are identified and how they can be further utilized within the FEDEP process.What is a Requirement?For a customer, requirements are created as a mechanism for identifying needs.  For a developer, requirements are used to specify what needs to be developed.  The IEEE 610 (1990) [2] standards defines requirements as:A condition or capacity needed by a user to solve a problem or achieve an objective.A condition or capability that must be met or possessed by a system or system component to satisfy a contract, standard, specification, or other formally imposed documents.A documented representation of a condition of capability as in 1 or 2.For the customer and the developer, requirements play a key role in the engineering process.  Greater success can be achieved when the customer and developer consume and analyze requirements collaboratively.Requirements EngineeringRequirements Engineering is a discipline that is involved with the development and use of requirements in an engineering process.  Pohl (1993) defines Requirements Engineering as:The systematic process of developing requirements through an iterative co-operative process of analyzing the problem, documenting the resulting observations in a variety of representation formats, and checking the accuracy of the understanding gained. [3]A common viewpoint is that requirements are put together at the start of a project and then referenced at the end of a project to show that the customer is “getting what they asked for.” There are countless cases where using requirements in this manner, not considering them throughout the process, leads to miscommunication and result in defects.  The best use of requirements is to consume and analyze them in each step of the process.  This ensures that the requirements are fully understood and captures any variance at the earliest possible stage.  Through a process of iterative development and collaborative analysis, quality and customer satisfaction are assured.In studying a few engineering models, we gain an understanding of how requirements should be applied.  The waterfall process, shown below, places requirements at the beginning of the process and indicates that requirements are examined and may be revised throughout the process.The ‘V’ model, shown below, indicates that the requirements developed in the Feasability Study and Product Definition are used for High Level Design at the beginning of the process and for the Evaluation and Acceptance at the end of the process.  Accordingly, requirements are also shown to impact Integration and System Test as well as Module Verification.Requirement Consumption and AnalysisRequirements need to be consumed and analyzed at each step of the engineering process.  Requirement consumption involves the customer and developer understanding the requirement and how it applies the current tasks within the process.  Requirement analysis involves the use of tests to ensure that the requirement makes sense to the customer and the developer.  Requirements analysis should be performed before and after implementation each step in the process.  If needed, modifications to requirements should be made to maintain their applicability.Defining RequirementsRequirements are drawn from many sources, such as the customer, the developer, technical standards and specifications.  Collaborative involvement between the customer and developers is essential for the definition of useful requirements.  The time spent to agree upon the issues at hand is well spent and justified through cost avoidance and future time saving.  Special attention is needed to guarantee that each requirement is clear in its purpose.Requirement AudienceWhen defining a requirement, be sure to identify the audience for which it is intended.  Technical or military experts, project managers, or developers of a particular type of simulation in a federation are examples of requirement audience.Requirement LanguageUse language that allows the requirement to be properly consumed and analyzed by the desired audience.  The “DoD MODELING AND SIMULATION (M&S) GLOSSARY” [4] is an excellent reference for language to be used for the M&S audience.  EXAMPLE:Accuracy- The degree of exactness of a model or simulation, high accuracy implying low error.  Accuracy equates to the quality of a result, and is distinguished from precision, which relates to the quality of the operation by which the result is obtained and can be repeated. [4]Another use of language can be directed at the practitioners of a specific technical discipline, such as programmers or network engineers.Testable RequirementsThe inference of requirements is that they impose a measurable standard by which the product will be tested.  A legitimate requirement must be testable.  When defining requirements, attention must be taken to ensure that the audience addressed and the language used allows tests to be derived that reflect the intent of the requirement.  A good practice is to include metrics, by which the requirement can be tested, within the specification of the requirement.Requirements TraceabilityA tracking mechanism is needed to account for requirement consumption and analysis throughout the process.  To accomplish this, a Requirements Traceability Matrix is utilized, mapping each requirement to a functional responsibility within the system.  In this manner, functional (unit) tests and system tests can be performed that are correlated to specific requirements.Verification and ValidationIn Modeling and Simulation (M&S), Verification and Validation comply to the following definitions:Verification.  The process of determining that a model implementation accurately represents the developer's conceptual description and specifications. [5]Validation.  The process of determining the degree to which a model is an accurate representation of the real-world from the perspective of the intended uses of the model. [5]From the requirements perspective, Verification is associated with requirement consumption and Validation is associated with requirement analysis.  During requirement consumption and analysis, verification and validation of the requirement is performed.DefineFederationObjectivesDevelopFederationConceptualModelDesignFederationDevelopFederationIntegrateAndTestFederationExecuteFederationAnd AnalyzeResultsIdentifyNeedsDevelopObjectivesDevelopScenarioPerformConceptualAnalysisDevelopFederationRequirementsSelectFederatesAllocateFunctionalityPreparePlanDevelopFOMEstablishFederationAgreementsImplementFederateModificationsPlanExecutionIntegrateFederationTestFederationExecuteFederationProcessOutputPrepareResultsFEDEP 1.4 Six Step ProcessFederation Development and Execution Process (FEDEP)Requirements are consumed and analyzed throughout the FEDEP process.Step 1: Define Federation ObjectivesThe federation user and federation development team define and agree on a set of objectives, and document what must be accomplished to achieve those objectives. [1]The customer defines high level requirements in the Objectives Statement.Step 2: Develop Federation Conceptual ModelA representation of the real world domain that applies to the problem space is developed. [1]The customer and developers collaborate to derive low level requirements from the Conceptual Model.Requirements are analyzed for clarity and testability.A Requirements Traceability Matrix is developed, mapping requirements to functional responsibilities.Step 3: Design Federation Federation participants (federates) are determined, and required functionalities are allocated to the federates. [1]Based on the Requirements Traceability Matrix, federates are selected and functional responsibilities are assigned.The customer and developers collaborate to analyze that the requirements are completely and clearly represented in the federation design.Step 4: Develop Federation The Federation Object Model (FOM) is developed, federate agreements on consistent databases/algorithms are established, and modifications to federates are implemented (as required). [1]The customer and developers collaborate to ensure that the requirements are fully met in the FOM and Federation agreements.Federate developers perform functional (unit) tests to ensure that the federate meets the requirements within its functional responsibilities.Step 5: Integrate And Test Federation All necessary federation implementation activities are performed, and testing is conducted to ensure interoperability requirements are being met. [1]The customer and developers collaborate to analyze that each federate meets the requirements within its functional responsibilities and the federation as a whole meets the high level requirements set forth in the Objectives Statement.Step 6: Execute Federation And Analyze Results The federation is executed, outputs are generated, and results provided. [1]The customer and developers collaborate to analyze the output of the federation execution and measure the results based on expected outcome.ToolsRequirements are best consumed and analyzed through the use of tools.Requirements DatabaseDocumenting requirements and establishing a Requirements Traceability Matrix can be utilized through the development of an interactive database.  A web based interface to the Requirements Database is ideal for creating the collaborative environment needed for requirements usage.  Requirements based milestones can also be tracked via the Requirements Database.Federation Test SystemThe Federation Test System (FTS) is a tool designed to facilitate HLA Federation Testing.  The FTS creates an environment where federation requirements can be tested, on the federate and federation level, throughout the FEDEP process.  Analysis reports are captured as well as the requirements and federate capabilities associated with each test.Federation Requirements DIFHLA tools make use of Data Interchange Formats (DIFs) to openly exchange data.  A Federation Requirements DIF would allow tools to consume requirements in an automated fashion.  This would be very useful for tools that facilitate requirements testing and analysis and would provide extensibility to the Requirements Traceability Matrix.  The development of a Federation Requirements DIF would lead to the coherent consumption and analysis of requirements across a wide range of applications.ConclusionRequirements are an essential part of the FEDEP and need to be defined with a focus on clarity and testability.  To reduce risk and ensure quality, the customer and developers need to collaborate on the consumption and analysis of requirements at every step in the FEDEP.  A potential has been identified for a Federation Requirements DIF and possibly a Requirements Overlay to the FEDEP.References[1]	DMSO, “High Level Architecture Federation Development and Execution Process (FEDEP) Model,” Version 1.4, June 9, 1999.[2]	IEEE “IEEE Standard Glossary of Software Engineering Terminology” IEEE Std 610.12-1990.[3]	Linda A. Macaulay: “Requirements Engineering” Springer-Verlag London Limited, London 1996.[4]	DMSO, “DoD MODELING AND SIMULATION (M&S) GLOSSARY” January 1998.[5]	DoD Instruction 5000.61, "DoD Modeling and Simulation (M&S) Verification, Validation, and Accreditation (VV&A)," April 29, 1996[6]	Ian Graham: “Requirements Engineering and Rapid Development” Addison Wesley Longman Limited, Essex, England 1998.Author BiographiesRODNEY LONG is a Computer Engineer for the U.S. Army Simulation, Training, and Instrumentation Command.  Mr. Long has been involved in the development of the Data Collection Tool, Federation Management Tool, the next generation RTI, Federation Test System, the migration of the RWA simulator to HLA, and several of the I/ITSEC DIS Interoperability Demonstrations.  He holds a B.S.E in Computer Engineering from the University of South Carolina and has 11 years of experience in modeling and simulation for the training community.KEVIN MULLALLY holds a BS degree in Electrical Engineering from the University of Central Florida.  Mr. Mullally has been involved in the simulation industry for over 6 years.  His participation includes the design and development of the DIS Test Suite (DTS), a DIS compliance test tool, and the coordination of DIS compliance testing efforts for exercises performed at I/ITSEC 96 and I/ITSEC 97.  As a Project Engineer for AcuSoft, Inc., Mr. Mullally is responsible for the development of the Federation Test System (FTS), an HLA federation testing tool.  Mr. Mullally currently chairs the SISO-SIW Testing Forum.