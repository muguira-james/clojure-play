Conceptual Modeling- How do we do it?—A practical exampleJack “Jake” BorahAEgis Technologies Group12565 Research Parkway, Suite 390Orlando, FL 32826407-380-5001 HYPERLINK "mailto:jborah@aegistg.com" jborah@aegistg.comKeywords:Conceptual modeling, simulation development processABSTRACT:  At the Fall 02 Simulation Interoperability Workshop, the author presented a paper that advocated the formulation of a SISO study group on conceptual modeling. His paper was well received by the workshop attendees, and preliminary steps were taken to form such a study group.  One of those steps was to suggest the Terms of Reference (TOR) for the study group.  The TOR was posted to the Federation Development Track forum email reflectors and comments were solicited.  One of the early comments was that as a first action a Simulation Conceptual Modeling Study Group should collect practical examples of Simulation Conceptual Modeling.This paper will present the practical experience gained during related projects meant to reverse engineer a conceptual model from two existing M&S applications.  The first application was a HWIL simulation using portions of real-world missile defense systems to test and to produce data to identify the interoperability capabilities and limitations of such systems.  The second was a data-driven model using optimistic parallel, discrete event simulation (PDES) meant to allow warfighting commanders, their staffs, and the system acquisition community to examine missile and air defense concepts of operation (CONOPS), doctrine, tactics, techniques, and procedures as an integral part of larger combat environments through the use of human-in-control experiments.       The objective of this paper is to document the practices of simulation conceptual modeling as used in these projects, and thereby facilitate peer-to-peer technical discussions of such practices.  Additionally, a paper such as this one may serve as a guide for other simulation developers and highlight the merit of establishing a SISO Recommended Practices Guide for Conceptual Modeling.  A Conceptual Modeling Recommended Practices Guide (RPG) would be useful to the M&S community as an extension to the Federation Development and Execution Process (FEDEP) RPG.  IntroductionThis paper is the third in a series by this author in the extended discussion of simulation conceptual modeling.  In the previous papers [1, 2], the author started his discussion of this topic by providing his perception of fundamental tenets of simulation conceptual modeling.  Each of the previous papers were well received and the outcome of their presentation was the general sense among the Modeling and Simulation (M&S) community that it was time to form a Simulation Conceptual Modeling Study Group within the Simulation Interoperability Standards Organization.  Action has been taken create such group for the Spring 2003 Simulation Interoperability Workshop.  It is anticipated that one of the first actions of the Simulation Conceptual Modeling Study Group, when approved, will be to conduct a call for research describing practical examples of simulation conceptual modeling.  The central idea is to build a repository containing documentation of how conceptual modeling has been done within modeling and simulation projects.  In turn, the documentation in the simulation conceptual modeling repository will be analyzed by the study group to identify the activities and artifacts which are common among the simulation conceptual modeling examples.  Once the common activities and artifacts are identified, then a strawman conceptual modeling process can be constructed for M&S community review and comment.  If the M&S community continues to support this work, then the strawman conceptual modeling process can mature over time to become a recommended practices guide.  However, long before a recommended practices guide can be developed, examples of simulation conceptual modeling must be obtained.  This paper is meant to be among the first to provide such examples for future analysis and study.  Conceptual Modeling OpportunityA definition established in the earlier papers by this author for a “conceptual model” was “an abstract representation of something generalized from particular instances.”  This definition while accurate is usually not precise enough for practical use by simulation engineers and software developers.  Therefore more contextual references are needed to aid in the comprehension of conceptual modeling.  A conceptual model will be defined by the way it is used within a particular simulation development. In the author’s previous paper he stated that there were three generalized uses for a conceptual model.  First, it is to be part of Jeff Rothenburg’s cost-effective model constructed for a cognitive purpose [3].  Second, it is to be an embodiment of the communications in Bernard Zeigler’s modeling process [4].  Third, it is to be the result of the “art of modeling” or the process of analysis, abstraction, simplification, and synthesis within a simulation development process.  In review, there is no single conceptual model per se because of the essence of the “art of modeling”.  There are multiple iterations of the conceptual model, which evolve as required by a simulation development process.  A simulation conceptual model is a “living” document that grows from an informal description to a formal description to communicate between the diverse groups (sponsors/users, modelers, systems engineers, and software designers) participating in a simulation development.Over the past nine months, the author has had the opportunity to “practice what he preaches” in that the author was given the responsibility to build conceptual models for two simulations used within the domain of ballistic missile defense.  The first simulation was a HWIL simulation using portions of real-world missile defense systems to test and to produce data to identify the interoperability capabilities and limitations of such systems.  The second was a data-driven model using optimistic parallel, discrete event simulation (PDES) meant to allow warfighting commanders, their staffs, and the system acquisition community to examine missile and air defense concepts of operation (CONOPS), doctrine, tactics, techniques, and procedures as an integral part of larger combat environments through the use of human-in-control experiments.  The development of the conceptual models for these simulations has proven to hold several significant challenges.  In theory, the creation of a simulation conceptual model normally appears to be a straight forward process.  As stated previously by the author, the simulation conceptual model serves as the “communication bridge” between the simulation’s sponsor/user and the simulation’s development staff.  Therefore to anchor the approach end of the conceptual model, the conceptual modeler needs to collect the requirements that the sponsor/user has set forth for the simulation.  To anchor the opposite departure end of the model, the conceptual modeler needs to exhibit the user requirements in a manner meaningful to the development staff.  However, the chasm that the conceptual model spans is treacherous and the unwary modeler can quickly tumble into deep trouble.  Indeed in actual practice the conceptual model is more akin to a swaying rope bridge in the jungle than a stable six lane wide concrete highway bridge.  There are many underlying reasons.  The first is that simulation conceptual modeling is not a broadly practiced well-known activity.  As a consequence, the conceptual model sponsor does not necessarily know what they have purchased.  The conceptual modeler then is required to teach the sponsor the characteristics of a concept model.  Some sponsors view the conceptual model in terms of software development.  Others see a conceptual in terms of system engineering.  Sponsors have a general vague notion about a conceptual model, and the modeler is obliged to educate his customer in addition to constructing his conceptual model.Another reason that it is difficult to construct a conceptual model is that conceptual modeling is an intellectual activity.  The conceptual model is a collection of ideas that the conceptual modeler has arranged in a meaningful manner.  A conceptual model by its essence does not have a tangible physical presence that can be easily seen and understood.  Artifacts can be created that show a particular aspect of the conceptual model, but these artifacts should not be mistaken for the conceptual model.  A well-formed conceptual model useful to a varied stakeholders will contained many different perspectives, each keyed to a particular interest of a stakeholder.  To understand this facet of conceptual modeling, it might be useful to compare constructing a conceptual model to the development of architectural plans for building a house.  Early on the house is an intellectual construct.  It does not exist.  It has no physical presence.  There is a lot on which it will eventually be build, but nothing else.  The prospective homeowners have assembled their ideas together with those of the architect.  Several different views of the house are created.  One might be a color drawing depicting how the completed house will be painted.  Another might be a floor plan indicating all the electrical outlets.  A third might be the floor plan showing the plumbing.  None of them is individually is the conceptual model of the house. Each of these is a part of the conceptual model of the house.  The same is true for the artifacts of the conceptual model for a simulation.  A word processing document, a graphics tool diagram, and CASE tool files are not by themselves the simulation conceptual model.  Each represents a component of the simulation conceptual model.  Together they present different perspectives of the conceptual model.               Conceptual Model Study- Hardware in the Loop simulation for ballistic missile defense The simulation for which this conceptual model was being constructed is more of a stimulator than a traditional simulation.  The basic concept of this simulation is to have a centralized control facility coordinate the orderly execution of a prepared threat scenario in conjunction with defensive reactions from a real world missile defense system operating within developmental facilities throughout the United States.  The simulation executive functions and simulation representation activity are communicated to the defensive systems through internet through the simulation either direct connections between computers or by an emulation of a real world tactical communications network.  The direct challenge was to reverse engineer, in accordance with an aggressive schedule, a conceptual model from the existing simulation implementation using any available authoritative documentation and subject matter experts.  This became more of challenge as the available documentation was reviewed.  Over the life cycle of this simulation, a stable requirements management process had not been employed.  Consequently, a great deal of time was needed to synthesize an authoritative requirements baseline from many different documents.  An indirect challenge for the development of this conceptual model was the seductiveness of the actual implementation of the simulation.  There was always a strong temptation to replicate the simulation implementation in the form of a conceptual model.  The existing software could be analyzed for entity classes, attributes, operations, and parameters.  However, to do so would be in effect to reverse engineer the simulation software architecture.  As a reverse-engineered software architecture, the conceptual model would not have provided the customer any value because the customer could obtain the same information directly from the software design documents.  Further, a conceptual model influenced too heavily by the existing implementation would negate the capability to use the conceptual model to help forecast the effect of future requirements.  This capability was the primary reason to construct a conceptual model.  Therefore, the conceptual modeling team had to be constantly on their guard against simply documenting the existing implementation.There were additional complications to the conceptual modeling, some of which have been discussed earlier as a part of conceptual modeling opportunity section.  A major complication for this conceptual model was the ambiguity of the required format to document the conceptual model.  Conceptual modeling was begun under the erroneous impression that the format style of conceptual model was to be defined by the conceptual modeling team as their first task.  The conceptual modeling team was dissuaded from this notion during the preparations for the project kickoff meeting.  At this point, the conceptual modeling team was advised to employ a draft conceptual modeling schema being studied by an independent advisory group (see Figures 1 and 2).  In addition, the conceptual modeling team was asked to produce the conceptual model in a format compatible with common commercial office document software.  The conceptual modeling team had planned to document the model through a series of interlinking diagrams accompanied by explanatory text.  This customer requirement for the conceptual model negated that approach.  From this point on the conceptual model was primarily documented in text accompanied by illustrative diagrams.The conceptual modeling team proceeded to create several draft versions of the conceptual model in strict adherence to the suggested format.  As each draft was created, it became more apparent to the conceptual modeling team that this format was not suitable for this conceptual model.  The available documentation and the intended purpose of the conceptual model were not well served by the rigorous application of the suggested conceptual model schema.  The conceptual modeling team sought and obtained relief from the customer for a degree of editorial license with respect to the suggested conceptual model schema.  The early drafts of the conceptual model were created in a tabular format.  The tabular format quickly became unintelligible as additional information was incorporated into the conceptual model.  In particular, the tabular format broken down when additional simulation elements were added to the existing model.  It was difficult to maintain the correct relationship between a simulation element and its descriptors as more entries were made in the table.  The amount of text data entered into individual cells caused a single simulation element section in the table to span several sheets.  It was easy to see that this problem would only get worse as work on the conceptual progressed.  To solve this problem the conceptual modeling elected to adopt a technical report format to document further refinements of this conceptual model.  CHARACTERISTICQUALIFICATION GUIDANCECONCEPTUAL MODEL IDENTITYHow is the subject entity accorded unique identity?Denotative handleWhat unique identifier denotes the subject entity?  What is it called?EncapsulationHow is the subject entity effectively isolated or discriminated from other related entities?  How is its boundary defined?ATTRIBUTESWhat are the static or structural characteristics of the subject entityInternal structureWhat are the significant characteristics of the internal structure of the subject entity?  Does it exhibit a recognized architectural form or pattern?ParametersWhat parameters are necessary to specify the subject entity?  What are their data structures?State variables / state rangesWhat state variables are intrinsic to the subject entity?  What are their dynamic ranges What are their data structures?InterfacesWhat data or stimulus-response interfaces relate the subject entity to others?  What are their data structures?BEHAVIORSWhat are the dynamic or process characteristics of the subject entityPreconditionWhat preconditions are necessary for the successful operation of the subject entity?  What must be true for the entity to respond as intended to stimulus?Function (intention, responsibilities)What function is the subject entity intended or expected to represent?  What are the entity’s responsibilities in relation to its interactions with other entities?Internal processWhat are the internal processes of the subject entity?  What is their organization?  Do they exhibit a recognized method or pattern of behavior?Exceptions (consequences of unintentional behaviors) What exceptional results may be expected as a result of unexpected or unintended behavior representation by the subject entity?  What can go wrong?  What will happen when it does?PostconditionsWhat will be the state of the subject entity after it has ‘done its job’?RELATIONSHIPSWhat are the types of relationships between the subject entities and others?  Referent What is the referent of the subject entity?  What does it represent?Specialization or inheritance What is the type or class of the subject entity?  Does it have a parent class? Does it have daughter classes?  How is it specialized with respect to its parent?  How is it differentiated with respect to its siblings?  Are there any special constraints on inheritance?CompositionWhat is the composition of the subject entity?  Of what is the subject entity comprised?  In what composites does the subject entity participate?  What does it comprise?  What special conditions exist upon such composition?CausalityWith what entities does the subject entity have causal relations?  Does it serve as causal agent or is it subject to effect?  What conditions pertain to the effectiveness of such causal relationships?Client server / useWith what entities does the subject entity have client server or use relationships?  Is it a client or server? What conditions pertain to the effectiveness of such client server relationships?Data flowWith what entities does the subject entity have data flow relationships?  Does it provide or receive data? What conditions pertain to the effectiveness of such data-flow relationships?Control flowWith what entities does the subject entity have control-flow relationships?  Does it exercise control or is it controlled? What conditions pertain to the effectiveness of such control flow relationships?Figure 1 - The table provides guidance for the specification of the qualities of each of the characteristics of conceptual model elements.CHARACTERISTICQUALIFICATION GUIDANCEREFERENTTo what conceptual model component does this metadata pertain?POINTS of CONTACTWhat information is sufficient to unambiguously identify and if appropriate contact the organizations or individual agents with authority and responsibility for the following roles?AuthorshipWho is the author of the subject entity?CustodianshipWho is the custodian of the subject entity?CertificationWho is authorized to certify the quality of the subject entity?  Who is the VVA agent?INTENTIONWhat is the intended use of the subject entity?  What expectations of its nature, use, quality, or value exist?  What qualities, implied by its intended use are essential?ASSUMPTIONSWhat assumptions have been made in the development of the subject entity?LIMITATIONSWhat limitations are constraints upon use are known to pertain to the subject entity?AUTHORITATIVENESSUpon what basis does the authoritativeness of the subject entity rest?AUDIT TRACEABILITY In what form is audit traceability maintained between the subject entity and other relevant entities?  Requirements?  Other conceptual model components?  Sources of external data?  Specification of the referent?  etc.Figure 2 - The table provides guidance for the specification of the qualities of each of the characteristics of conceptual model element metadata.The selection of an appropriate technical report format was a bit of an adventure.  However, after the conceptual modeling team determined that a government approved format was not available, a general purpose format that was approved for government use was adapted to serve as the vehicle for documenting this conceptual model.  The adaptation was accomplished by incorporating the topical headings of the suggested conceptual model table schema into the general technical report format (Figure 3).Table of Contents				Page TOC \o "3-3" \h \z \t "Level1TOC,1,Level2TOC,2"  HYPERLINK \l "_Toc31179611" Summary	 PAGEREF _Toc31179611 \h v HYPERLINK \l "_Toc31179612" 1.0	CONCEPTUAL MODEL DESCRIPTION	 PAGEREF _Toc31179612 \h 1 HYPERLINK \l "_Toc31179613" 1.1	Conceptual Model Parts	 PAGEREF _Toc31179613 \h 1 HYPERLINK \l "_Toc31179614" 1.2	Points of Contact for the Conceptual Model	 PAGEREF _Toc31179614 \h 1 HYPERLINK \l "_Toc31179615" 1.3	Authorship	 PAGEREF _Toc31179615 \h 1 HYPERLINK \l "_Toc31179616" 1.4	Change History	 PAGEREF _Toc31179616 \h 1 HYPERLINK \l "_Toc31179617" 2.0	SIMULATION CONTEXT	 PAGEREF _Toc31179617 \h 2 HYPERLINK \l "_Toc31179618" 2.1	Purpose and Intended Use	 PAGEREF _Toc31179618 \h 2 HYPERLINK \l "_Toc31179619" 2.2	Background	 PAGEREF _Toc31179619 \h 2 HYPERLINK \l "_Toc31179620" 3.0	SIMULATION CONCEPT	 PAGEREF _Toc31179620 \h 3 HYPERLINK \l "_Toc31179621" 3.1	Simulation Representation	 PAGEREF _Toc31179621 \h 4 HYPERLINK \l "_Toc31179622" 3.1.1	Description of the Natural Environment	 PAGEREF _Toc31179622 \h 10 HYPERLINK \l "_Toc31179623" 3.2	Simulation Executive	 PAGEREF _Toc31179623 \h 12 HYPERLINK \l "_Toc31179624" 4.0	SIMULATION COMPONENTS	 PAGEREF _Toc31179624 \h 16 HYPERLINK \l "_Toc31179625" 4.1	MDSE Test Control Segment (TCS)	 PAGEREF _Toc31179625 \h 17 HYPERLINK \l "_Toc31179626" 4.1.1	Description of TCS	 PAGEREF _Toc31179626 \h 17 HYPERLINK \l "_Toc31179627" 4.1.2	TCS Composition	 PAGEREF _Toc31179627 \h 18 HYPERLINK \l "_Toc31179628" 4.1.3	TCS Possible States	 PAGEREF _Toc31179628 \h 20 HYPERLINK \l "_Toc31179629" 4.1.4	TCS Tasks/Actions/Behaviors	 PAGEREF _Toc31179629 \h 20 HYPERLINK \l "_Toc31179630" 4.1.5	TCS Relationships/Interactions	 PAGEREF _Toc31179630 \h 21 HYPERLINK \l "_Toc31179631" 4.1.6	TCS Events	 PAGEREF _Toc31179631 \h 21 HYPERLINK \l "_Toc31179632" 4.1.7	TCS Data	 PAGEREF _Toc31179632 \h 24 HYPERLINK \l "_Toc31179633" 4.1.8	Build 3.4 Upgrades	 PAGEREF _Toc31179633 \h 26 HYPERLINK \l "_Toc31179634" 4.2	Tactical System Drivers Segment (TSDS)	 PAGEREF _Toc31179634 \h 28 HYPERLINK \l "_Toc31179635" 4.2.1	Description	 PAGEREF _Toc31179635 \h 28 HYPERLINK \l "_Toc31179636" 4.2.2	TSDS Composition	 PAGEREF _Toc31179636 \h 28 HYPERLINK \l "_Toc31179637" 4.3	Tactical Communications Environment Segment (TCES)	 PAGEREF _Toc31179637 \h 28 HYPERLINK \l "_Toc31179638" 4.3.1	Description of TCES	 PAGEREF _Toc31179638 \h 28 HYPERLINK \l "_Toc31179639" 4.3.2	TCES Composition	 PAGEREF _Toc31179639 \h 29 HYPERLINK \l "_Toc31179640" 4.3.3	TCES Possible States	 PAGEREF _Toc31179640 \h 32 HYPERLINK \l "_Toc31179641" 4.3.4	TCES Tasks/Actions/Behaviors	 PAGEREF _Toc31179641 \h 32 HYPERLINK \l "_Toc31179642" 4.3.5	TCES Data	 PAGEREF _Toc31179642 \h 34 HYPERLINK \l "_Toc31179643" 4.3.6	Build 3.4 Upgrades	 PAGEREF _Toc31179643 \h 34 HYPERLINK \l "_Toc31179644" 4.4	Tactical Hardware in the Loop (HWIL)	 PAGEREF _Toc31179644 \h 35 HYPERLINK \l "_Toc31179651" 5.0	CONCEPTUAL MODEL VALIDATION HISTORY	 PAGEREF _Toc31179651 \h 45 HYPERLINK \l "_Toc31179652" 5.1	Summaries and Requirements Addressed	 PAGEREF _Toc31179652 \h 45 HYPERLINK \l "_Toc31179653" 5.2	References to Validation Reports	 PAGEREF _Toc31179653 \h 45 HYPERLINK \l "_Toc31179654" 6.0	SUMMARY	 PAGEREF _Toc31179654 \h 45 HYPERLINK \l "_Toc31179655" 6.1	Conceptual Model Development Plans	 PAGEREF _Toc31179655 \h 45 HYPERLINK \l "_Toc31179656" 6.2	Current Conceptual Capabilities and Limitations	 PAGEREF _Toc31179656 \h 45 HYPERLINK \l "_Toc31179657" 7.0	REFERENCES	 PAGEREF _Toc31179657 \h 46 HYPERLINK \l "_Toc31179658" ACRONYMS	 PAGEREF _Toc31179658 \h 47 Figure 3- Table of Contents for Technical Report Formatted Conceptual ModelAdditional complications arose in conjunction with the development of conceptual model content over successive drafts of this model.  Here the early complication was the selection of an appropriate point of focus for the conceptual model.  From the start, the conceptual modeling approach was going to be a top-down development with breadth being stressed over depth.  This means that the lateral boundaries for the conceptual model on a selected level of abstraction were going to be established before embellishing detail for any specific model aspect was going to be sought.  Several iterations of the conceptual model were constructed before the highest level of abstraction was satisfactorily established for the customer.  The conceptual modeling began by establishing the central simulation control function as the top level of abstraction.  The second iteration on the focus of the model incorporated the tactical communications emulation.  The third iteration brought in the simulation components that interfaced with the real world missile defense systems.  The fourth iteration on model focus established the level of abstraction which has been carried forward into the current conceptual model.  The breadth of this conceptual model spans the simulated representations and simulation execution functions embedded in the simulation control, tactical communications emulation, and real-world missile defense system interfaces. The complication that arose later concerned the appropriate manner to satisfactorily describe the simulation elements.  As was previously stated during the discussion of model format selection, while the conceptual modeling team had initially favored diagramming this conceptual model through adaptation of the Unified Modeling Language notation, text had been chosen as the primary descriptive methodology.  Nevertheless, while it is a cliché, a picture is worth a thousand words.  Relationships between conceptual model components are often more readily understood when they are depicted in diagrams.  After the conceptual modeling team had been given editorial license concerning the format of this conceptual model, they also began incorporating UML diagrams.  The first diagrams were static structure diagrams that were constructed depicting the elements complementary to the focus of the conceptual model.  A drawing program was used for the first UML diagrams so that these diagrams could easily be imported into the word processing document containing the conceptual model text.  The drawing program proved to be an unsatisfactory method for generating UML diagrams because of the lack of a robust capability to link or embed diagrams.  A software engineering tool was subsequently employed to rehost the existing diagrams and create additional ones.  The conceptual modeling team found that the UML diagrams from the software engineering tool could be imported into the word processing document as easily as the drawing tool diagrams had been.Once the static structure diagrams were created, a question arose concerning which other UML diagrams should be employed as embellishments to this conceptual model.  This became a concern due to the anticipation that the dynamism of the simulation would be needed to be described for part of the customer base.  Currently, several sequence and activity diagrams have been constructed highlighting the interactions that can occur within the simulation.This conceptual model is now undergoing an iterative review process with the customer for reasons discussed earlier.  The idea to use a conceptual model for simulation development requirements management is new to this customer.  Consequently, the customer is not 100% certain of how a conceptual model should be tailored for his use.  At this time, the customer is satisfied that the conceptual modeling team is making progress toward establishment of a suitable baseline conceptual model.          Conceptual Model Study- optimistic parallel, discrete event simulation (PDES) for ballistic missile defenseThe second conceptual model discussed in this paper is being constructed for more traditional simulation.  The novel feature of this simulation is that it has been created to use an optimistic parallel, discrete event simulation engine in order to achieve a great deal of processing in near real time.  This is necessary so as to present a realistic synthetic environment for humans in the loop.  The majority of simulation activity occurs which a single facility.  If required distributed simulation environment can be created using either the Distributed Interactive Simulation protocol or the High Level Architecture as appropriate.This conceptual model has been developed in parallel with the HWIL simulation.  This was done because both models are being produced for the same customer for the same purpose.  This approach has advantages as well as disadvantages.  The advantage is the ability to share lessons learned between the modeling efforts.  This was beneficial early on because of the ambiguity over the most appropriate format and focus of the conceptual model.  The disadvantage is that the conceptual modeling team has to review a completely set of documents and learn the purpose, architecture, and operation of an entirely different simulation.  Another reason to conduct parallel conceptual model development is that the customer has set a goal that these conceptual models along with others being produced by other conceptual modeling teams be constructed so that they will be as cross compatible as possible.  To achieve this goal, the conceptual modeling team has been coordinating their work with the other conceptual modeling teams.  The various conceptual modeling teams have formed a working group to facilitate this coordination.  The effect of the cooperative working group thus far has been that useful features of other conceptual models have been incorporated into these conceptual models.Many of the challenging aspects associated with constructing conceptual models are shared between these models.  The most notable difference between the conceptual models was due to the differences between the simulation developer’s processes.  The HWIL simulation has relied upon a requirements management process in which engineering change proposals have sufficed to identify new simulation requirements over the last four simulation software versions.  This has made the traceability of the simulation requirements challenging but manageable.  The parallel discrete event simulation has a superficially more regulated management requirements process.  The complication with the parallel discrete event simulation is that for each annual software development cycle, several software versions are spun off and upgraded with features meant to support the objectives of several different simulation workshops or wargames.  At the end of the year, the primary software build is updated with either a part or all of the features that have been developed and it becomes a new software version.  This has been called “simulation development in a hurricane.”  Reverse engineering a conceptual model for this simulation is akin to shooting at a moving target.  Nevertheless, the conceptual modeling team has persevered in applying the same modeling techniques developed for the HWIL simulation to this simulation.ConclusionsReverse engineering a conceptual model is deceptively hard.  The most obvious reason it is hard is due to the existence of the implemented simulation.  The implementation of the simulation contains a wealth of detail that appears useful to incorporate into a conceptual model.  However, it must be always remembered that the implemented simulation is the articulation of only one of the possible ways a simulation could be constructed.  There are many different techniques that could be employed to simulate an aspect of the real world.  The simulation designers and software developers chose a particular pathway to implement the existing simulation.  A conceptual model that is heavily dependent upon the actual implementation is of questionable value when considering alternative future choices for simulation construction.  The way that the current model has been constructed may bias the requirements analysis for future developments.   Furthermore the reverse engineering of a conceptual model is hard because of the tacit assumption that ample documentation is available to help structure and populate a conceptual model.  However, this is an illusion.  In the real world usually a great deal of information is omitted from documentation.  The information omitted is often the information that is most important to the development of a well-formed conceptual model.  The conceptual model should describe the sponsor’s purpose for a conceptual model.  It should document what the sponsor will ultimately expect from the implemented simulation.  Additionally it should contain the rational behind the sponsor’s requirements.  This is useful because it is insightful data that will help the simulation designers formulate their plans in accordance with the intentions of the sponsor.The conceptual model should establish for all stakeholders what the simulation is suppose to do when implemented.  It should also express why the simulation should work a particular way.  It should not simply be a description of how the simulation works.  A conceptual model that reflects the implemented simulation doesn’t add value to a simulation development since the conceptual model contains only information available from other documents.  References[1] J. Borah, “Conceptual Modeling- The missing link of simulation development”, Paper 02S-SIW-074, Proceedings of the Simulation Interoperability Workshop, Spring 2002[2] J. Borah, “Conceptual Modeling- How do we move forward- The Next Step”, Paper 02S-SIW-054, Proceedings of the Simulation Interoperability Workshop, Fall 2002 [3] J. Rothenburg, “Knowledge-Based Simulation at the RAND Corporation,” Knowledge-Based Simulation: Methodology and Application, Fishwick and Modjeski (eds.), Springer-Verlag, 1991[4] B.P. Zeigler, Theory of Modeling and Simulation, Wiley, New York, 1976Author BiographyJACK BORAH is a Senior Systems Engineer with AEgis Technologies Group.  Currently he is the Chief Modeler and Program Manager for four Missile Defense Agency conceptual models as well the PM for Advanced Distributed Learning (ADL) Products.  He is a retired military officer with over 25 years experience in military training and training systems.  He holds a BS from the Air Force Academy and MAS from Embry-Riddle Aeronautical University.  