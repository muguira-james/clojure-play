The COTS Simulation Package Interoperability Product Development Group (CSPI-PDG)Dr Simon J E TaylorCentre for Applied Simulation ModellingSchool of Information Systems, Computing and MathematicsBrunel University, UxbridgeUB8 3PH, UKsimon.taylor@brunel.ac.ukDr Stephen John TurnerSchool of Computer EngineeringNanyang Technological UniversityNanyang Avenue, Singapore 639798assjturner@ntu.edu.sg Dr Malcolm Yoke Hean LowSingapore Institute of Manufacturing Technology71 Nanyang Drive, Singapore 638075yhlow@SIMTech.a-star.edu.sgKeywords:HLA, Discrete-event simulation, COTS simulation packages, Standards, CSPI-PDGABSTRACT: For many years discrete-event simulation has been used to analyse production and logistics problems in manufacturing and defence.  In the early 1980s, visual interactive modelling environments were created that supported the development, experimentation and visualisation of simulation models.  Today these environments are termed Commercial-off-the-shelf Simulation Packages (CSPs).  With the advent of distributed simulation and, later, the High Level Architecture, the possibility existed to link together these CSPs and their models to simulate larger problems within enterprises (e.g. multiple production lines) and across supply chains.  However, the problem of standardising the use of the HLA and its constituent parts in this domain exists.  The solution of this problem is the work of the CSP Interoperability Product Development Group (CSPI-PDG).  The purpose of this paper is to introduce the CSPI-PDG and to review for the first time in a SISO Workshop the suite of standards proposed by the group and the current progress.1. IntroductionFor many years discrete-event simulation has been used to analyse production and logistics problems in manufacturing and defence.  In the early 1980s, visual interactive modelling environments were created that supported the development, experimentation and visualisation of simulation models.  Today these environments are termed Commercial-off-the-shelf Simulation Packages (CSPs) (Swain 2003).  With the advent of distributed simulation and, later, the High Level Architecture (HLA), the possibility existed to link together these CSPs and their models to simulate larger problems within enterprises (e.g. multiple production lines) and across supply chains.  However, the problem of standardising the use of the HLA and its constituent parts in this domain exists.  Combined work towards this began in 2002 with the formation of the CSP Interoperability Forum (CSPIF).  In 2004 the CSPIF made a successful product nomination to SISO.  The result of this was the formation of the CSP Interoperability Product Development Group (CSPI-PDG).  The purpose of this paper is to introduce the CSPI-PDG and to review the suite of standards proposed by the group and its current progress.The paper is structured as follows.  Section 2 introduces the problem of CSP interoperability in more detail.  Section 3 presents the aim and objectives of the CSPI-PDG.  Section 4 introduces the range of proposed standards.  Section 5 summarises the paper with an overview of initial development.2. CSP InteroperabilityConsider a federation composed of CSPs/model federates that exchange data via a runtime infrastructure (RTI) in a time synchronized manner (figure 1).  Two factories, F1 and F2, generically interact as denoted by the black double-headed arrow.  Each model consists of an arrival source Soi, a queue Qi, a workstation Wi, a resource Ri, and an exit sink Sii (where i is the factory identifier).  Different types of information might be exchanged.  For example, entities might be passed between models (i.e. the two factories are linked together – entities leave F1 at Si1 and arrive in F2 at So2) and the resources R1 and R2 might be shared to reflect a shared set of machinists that can operate workstations W1 and W2.  If this was the case, factory F1 must publish and send information to the RTI in an agreed format and time synchronized manner and factory F2 must subscribe to and receive that information in the same agreed certain format and time synchronized manner, i.e. both federates must agree on a common representation of data and both must use the RTI in a similar way.  Further, the “passing” of entities and the sharing of resources require different distributed simulation protocols.  In entity passing, the departure of an entity at a sink and the arrival of an entity at a source is effectively the same scheduled event in the two models – most distributed simulations represent this as a timestamped event message sent from one federate to another (with the timestamp typically equal to the time that the entity finished processing in the last workstation (W1 in our example) (Boer, et al. 2002; Sudra, et al. 2002).  The sharing of resources cannot be handled in the same way.  For example, when resource (R1) is released or an entity arrives in queue Q1, a CSP executing the simulation of F1 will determine if workstation W1 can start processing an entity.  If resources are shared, each time R1 or R2 changes state a timestamped communication protocol is required to inform and update the changes of the shared resource state (Low, et al. 2003)This outlines our interoperability problem.  First, what information can be exchanged between CSP/model federates?  Secondly, of these, what are their synchronisation requirements and in what common format should the data be exchanged?  Thirdly, given the number of different ways these approaches can be potentially implemented, which is the best approach?  Finally, given that there is no standard on which these CSPs are based, how can we accommodate changes in interoperability requirements?  It is the answers to these questions that define the CSPI-PDG  range of proposed standards.  The next section outlines the aim and objectives of the CSPI-PDG. 3. The CSPI-PDGThe CSPIF was created in 2002 in an attempt to unify research and developments in the interoperation of CSPs.  The main outcome of the CSPIF was the reduction of the interoperability problem into different interoperability requirements.  For example, in the last section it was briefly outlined that the interoperability requirements of entity transfer and resource sharing were different.  In discussions over two years, this was further expanded into specific interoperability requirements.  It was further identified that as new features were continually added to CSPs, it was likely that that list of interoperability requirements will grow further.  However, only by a successful combination of end users, CSP vendors and researchers, could these interoperability requirements be solved successfully.  The concept of several interoperability reference models (IRMs) was identified.  These were meant to be understandable by CSP user and technology provider alike, and form the basis of interoperability solution (in terms of data exchange representation and mechanism).  Finally the forum identified the need for benchmarks to compare different solutions.  Following from this, the aim of the CSPI-PDG is thereforeto create a standardized approach to CSP interoperability using the IEEE 1516 High Level Architecture.But what of the questions posed in section 2?  The IRMs are intended to reduce the requirements of information exchange into solvable problems and so answer the first question and produce our first objective. To answer the second question three objectives are needed to produce standard data representation and exchange mechanisms, and a set of interoperability frameworks that combine these as needed by each IRM.  The third question suggests a set of benchmarks and is addressed by the fifth objective.  The final question requires an open, extensible standard and the final objective.  The objectives of the CSPI-PDG are therefore toCreate standard reference model(s) that can be used to communicate concepts and problems between researchers, users, and vendors in support of the CSPI-PDG aim,Develop standard data exchange representations,Develop standard data exchange mechanisms,Develop standard interoperability frameworks, Develop standard benchmarks, andCreate an open, extensible standard.Each of the above objectives of the standards development process will now be discussed as they outline the CSPI-PDG proposed range of standards.4. Proposed CSPI-PDG StandardsWhat standards do our objectives require?  The first requires the standardization of our IRMs.  The objectives of data representation and exchange are combined with the need for interoperability frameworks into a set of interoperability framework standards, one for each IRM.  Common aspects of these frameworks, however, form standards in their own right.  Currently, only one exists, a standard representation for entity transfer.  The objective for benchmarks also require a set of standards, the so-called CSP Emulators (CSPEs), again one for each IRM.  The final objective of openness is satisfied by a set of administration document standards, one for all CSPI standards and one for each set (with the exception of the entity transfer specification).  We now present the suite of CSPI-PDG standards (note that the term “product” is used in the SISO sense).  The numbering scheme in the following reflects the numbering of our proposed standards.0. CSPI Products Overview DocumentThe CSPI Products Overview Document (POD) will capture the principles of CSPI product development, the products under development, their development cycle, details of the website (under development) and reflector, how to submit a new standard for consideration (covering our need for openness), compliance testing, product review, and how to become a member.   1. Interoperability Reference Models (IRM)1.0 IRM Overview Document (IRM-OD)1.1 Type I IRM (Asynchronous Entity Passing)1.2 Type II IRM (Synchronous Entity Passing)1.3 Type III IRM (Shared Resources)1.4 Type IV IRM (Shared Events)1.5 Type V IRM (Shared Data Structure)1.6 Type VI IRM (Shared Conveyor)As we have previously indicated.  The requirements of CSP interoperability are complex.  Experience has shown that current solutions are difficult to classify in such a way that end users are clear as to what functionality an interoperability solution supports.  Additionally, a review of possible interoperability requirements has shown that some are relatively straightforward to support and others are extremely difficult.  From this it has also been shown that not all interoperability problems need all of the requirements.  From this a series of reference points have been developed to clearly communicate the interoperability requirement to end users, vendors and technology enables.  These reference points are termed Interoperability Reference Models (IRMs) and are, effectively, “conceptual models” of interoperability problems.  Taylor (2003) describes each of the above in more detail.  Figure 2 shows the current range developed by the CSPIF.  Additionally, the IRM Overview Document (IRM-OD) is intended to give an overview to the rationale of the IRMs, a definition of an IRM and their scope, the current set of IRMs, how to propose/compliance test new IRMs (i.e. it is an open process), and periodic review.  Also, the possible confusion between the term IRM and the fact that these are proposed guidance products have been discussed.  It has been decided to keep the term IRM intact as it represents a reference point from which guidance can be given.  2. Interoperability Frameworks (IF)2.0 IF Overview Document (IF-OD)2.1 Type I IF (Asynchronous Entity Passing)2.2 Type II IF (Synchronous Entity Passing)2.3 Type III IF (Shared Resources)2.4 Type IV IF (Shared Events)2.5 Type V IF (Shared Data Structure)2.6 Type VI IF (Shared Conveyor)Following on from each IRM is an Interoperability Framework (IF).  An IF is intended to specify standard detailed guidance on the interoperability solution for each IRM problem.  Whereas an IRM is effectively a “conceptual model” of an interoperability problem, the corresponding IF is the detailed solution.  Each is intended to have a reference architecture (based on the HLA), a data exchange format (based on the OMT), an algorithm specifying the protocol and the interface between the model/CSP and the Federate Interface Specification (RTI), and additional information as necessary.  Each is based on the simple architecture in figure 3.  Conceptually the models interact directly.  However, in practice the CSPs are responsible for model execution and for the transfer of information to and from a model.  The CSP Handler (CH) synchronizes the transfer of this information to/from the CSP and the RTI as required (via ambassadors as normal) as well as any additional synchronization needed by the corresponding IRM.  It is possible that for each IF there could be two or more algorithms reflecting conservative and optimistic time advancement mechanism (each can be appropriate and depends on the analysis techniques used in a simulation modelling project).  As with the IRMs, an IF Overview Document (IF-OD) is intended to give an overview to the rationale of the IF, the current set, how to propose/compliance test new IFs (i.e. it is an open process), and periodic review.3. Entity Transfer Specification (ETS)The Entity Transfer Specification (ETS) is a data exchange specification that supports Type I & II IRMs.  The current version at time of writing is 1.1.1 and has a supporting paper (Taylor, et al. 2004).  The ETS forms part of the Type I & II IFs.  The ETS hierarchy and OMT are shown in figure 4 and figure 5 respectively.4. COTS Simulation Package Emulator (CSPE) Benchmark4.0 CSPE Overview Document (CSPE-OD)4.1 Type I CSPE (Asynchronous Entity Passing)4.2 Type II CSPE (Synchronous Entity Passing)4.3 Type III CSPE (Shared Resources)4.4 Type IV CSPE (Shared Events)4.5 Type V CSPE (Shared Data Structure)4.6 Type VI CSPE (Shared Conveyor)As discussed, one of the problems of developing IFs for each IRM is that the current interface between any interoperability solution and a model/CSP combination is that CSPs can introduce a significant communication latency.  While this has not prevented some excellent exemplars of CSP interoperability from being developed, it has prevented “best of breed” comparisons, i.e. it is extremely difficult to compare the relative performance of various proposed solutions.  Additionally, without (sometimes costly) third party licensed development agreements with CSP vendors it is difficult to investigate potential interoperability solutions.  The COTS Simulation Package Emulator (CSPE) benchmark is intended to be public domain software, with supporting documentation, that emulates the functionality and interface to a COTS simulation package that can be used to investigate and to compare various interoperability solutions.  CSPEs for each IRM will be developed as appropriate.  As with the IRMs, a CSPE Overview Document (CSPE-OD) is intended to give an overview to the rationale of the CSPE benchmarks, the current set, how to propose/compliance test new CSPEs (i.e. it is an open process), and periodic review.  Taylor, et al. (2005) shows an example of how a CSPE for the Type I IRM can be used.5. ConclusionsThis paper has reviewed the proposed range of standards that is the focus of the CSPI-PDG.  The initial standards being developed are currently being drafted and will be ready for balloting by July 2006.  It is hoped that these will lead the development of distributed applications using CSPs in production and logistics.  The CSPI-PDG welcomes participation.  To join either subscribe to the reflector or email the acting chair (Simon Taylor)AcknowledgmentsThe authors would like to thank the members of the CSPIF for their input to the development of the proposed standards, Rick Severinghaus, for making the bridge into SISO, Chris Rouget and Katherine Morse for the guidance in the development of the CSPI-PDG. ReferencesBoer, C.A, A. Verbraeck and H.P.M. Veeke, “The possible role of a backbone architecture in real-time control and emulation,” in Proc. Winter Simulation Conference, pp. 1675-1682, 2002.Low, Y.H., B.P. Gan, J.J. Wei,  X. Wang, S.J. Turner. and W. Cai, “Implementation Issues for Shared State in HLA-Based Distributed Simulation,” in Proc. European Simulation Symposium, pp. 5-13. 2003.Swain, J.J. “Simulation Reloaded: Sixth biennial survey of discrete-event software tools,” OR/MS Today, vol. 30, no. 4, pp. 46-57, 2003.Sudra, R. S.J.E. Taylor and T. Janahan, “Distributed supply chain management in GRIDS,” in Proc. Winter Simulation Conference, pp. 356-361, 2000Taylor, S.J.E., S.J. Turner and M.Y.H. Low, “A Proposal for an Entity Transfer Specification for COTS Simulation Package Interoperation,” in Proc EUROSIW, 04E-SIW-081, 2004.Taylor, S.J.E. (2003) HLA-CSPIF: The High Level Architecture – COTS Simulation Package Interoperation Forum.  In Proceedings of the Fall 2003 Simulation Interoperability Workshop. Simulation Interoperability Standards Organisation, Institute for Simulation and Training.  Florida. 03F-SIW-126.Taylor, S.J.E., S.J. Turner, N. Mustafee, H. Ahlander and R. Ayani, “COTS Distributed Simulation: A Comparison of CMB and HLA Interoperability Approaches to Type I Interoperability Reference Model Problems,” Simulation, 81:1, pp 33-43, 2005.Author BiographiesSIMON J.E. TAYLOR is the Information Director of ACM SIGSIM, ACM SIGSIM PADS Liaison Officer and Chair of the Simulation Study Group of the UK Operational Research Society.  He is a steering committee member of PADS and general co-chair of the UK Simulation Workshop Series.  He currently leads the international COTS simulation package interoperability forum (HLA-CSPIF) through SISO ( HYPERLINK "http://www.cspif.com" www.cspif.com) and is acting chair of the CSPI-PDG.  He is a Senior Lecturer in the Department of Information Systems and Computing and is a member of the Centre for Applied Simulation Modelling, both at Brunel University, UK. He was previously part of the Centre for Parallel Computing at the University of Westminster. He has an undergraduate degree in Industrial Studies (Sheffield Hallam), a M.Sc. in Computing Studies (Sheffield Hallam) and a Ph.D. in Parallel and Distributed Simulation (Leeds Metropolitan). His main research interests are the use of distributed simulation to benefit modelling and simulation.  He is also a member of the London-based Purple Theatre Company!  STEPHEN J. TURNER joined Nanyang Technological University (Singapore) in 1999 and is currently an Associate Professor in the School of Computer Engineering and Director of the Parallel and Distributed Computing Centre. Previously, he was a Senior Lecturer in Computer Science at Exeter University (UK). He received his MA in Mathematics and Computer Science from Cambridge University (UK) and his MSc and PhD in Computer Science from Manchester University (UK). His current research interests include: parallel and distributed simulation, distributed virtual environments, parallel algorithms and languages, grid computing and multi-agent systems. MALCOLM YOKE HEAN LOW is a Research Engineer with the Production and Logistics Planning Group at the Singapore Institute of Manufacturing Technology. He received his Bachelor and Master of Applied Science in Computer Engineering from Nanyang Technological University, Singapore in 1996 and 1997 respectively, and a D.Phil. in Computer Science from Oxford University in 2002. His research interests are in the areas of adaptive tuning and load-balancing for parallel and distributed simulation systems, and the application of multi-agent and web service technology in supply chain logistics coordination. Figure 2: Interoperability Reference Models EMBED Visio.Drawing.6  Figure 3: Component Relationships EMBED Visio.Drawing.6  Figure 1: A Simple Distributed Simulation EMBED Visio.Drawing.6  Type VI IRM (Shared Conveyor) EMBED Visio.Drawing.6  Type V IRM (Shared Data Structure) EMBED Visio.Drawing.6  Type IV IRM (Shared Event) EMBED Visio.Drawing.6  Type III IRM(Shared Resources) EMBED Visio.Drawing.6  Type II IRM (Synchronous Entity Transfer - Bounded Queue) EMBED Visio.Drawing.6  Type I IRM (Asynchronous Entity Transfer) EMBED Word.Document.8 \s Figure 4: Entity Transfer Specification Interaction Class Hierarchy EMBED Visio.Drawing.6  