Data Integration for Simulation SupportRonald SmitsBruce HarrisDynamics Research Corporation60 Frontage RoadAndover, MA 01810978-475-9090 ext.1498HYPERLINK "mailto:rsmits@drc.com"rsmits@drc.com;  HYPERLINK "mailto:bharris@drc.com" bharris@drc.comKeywords: Unit Order of Battle, JTIMS, start exercise dataABSTRACT: This paper will describe the ongoing efforts by the Joint Staff J-7 and the Defense Modeling and Simulation Office (DMSO) to integrate the Unit Order of Battle Data Access Tool (UOB-DAT), part of the Functional Description of the Mission Space (FDMS) Toolset, with the Joint Training Information Management System (JTIMS), the distributed, online automation of the Joint Training System (JTS). UOB-DAT is designed to provide simulation developers with consistent and authoritative order of battle information. UOB-DAT's intended purpose is to automate the start exercise data load process, while JTIMS provides the integrated automated system for managing training exercises and related events. The integration of the two tools makes the authoritative sources for military units available to the exercise planners and developers in JTIMS. The objective of the project is to develop a round-trip interface between JTIMS and UOB-DAT. This interface will enable JTIMS users to view, extract, and store UOB data to the JTIMS data structure for JTS products development. This interface should also enable JTIMS users to locate UOB data in JTS products and extract that data to the UOB Data Interchange Format (DIF) and associated data coding specifications. Based on exercise scenarios and identified task forces within JTIMS, the round-trip interface would greatly facilitate the start exercise data load requirements for simulations.1. IntroductionThe Defense Modeling and Simulation Office (DMSO) Data Engineering Program has been sponsoring the Unit Order of Battle Data Access Tools (UOB-DAT) project. UOB-DAT is designed to provide simulation developers with consistent and authoritative order of battle information. UOB-DAT's intended purpose is to automate the start exercise data load process. The UOB-DAT consists of three main components: a data interchange format, a data extraction tool, and a set of authoritative data sources.The Data Interchange Format presents order of battle information from all sources in a single, understandable format. This format eliminates the need for simulation developers to understand the minor differences between Service-specific and foreign order of battle data sets. The format is based on data elements that have been formally reviewed and adopted by the DoD Data Dictionary System (DDDS). Data instances are enumerated using a rigorous data coding specification. US order of battle is enumerated using Unit Identification Codes (UIC’s), National Stock Numbers (NSN’s), and Service-specific occupation codes. Non-US order of battle is enumerated using the appropriate DIA coding specifications.The data extraction tool provides unit order of battle data in the interchange format. This tool features a graphical interface that allows users to browse unit order of battle data and select individual units. Selected units form a scenario task force that can be used to start a simulation exercise. Other information included in the tool covers unit equipment, aircraft resources, and personnel. The tool supports organizing the reporting hierarchy of a task force, including adding specific or generic units. Further, the tool supports "rolling up" subordinate units into a parent unit, which is important for simulations that operate at aggregation levels above the basic company, and supports equipment and personnel "mapping."  The tool allows for local data editing and scenarios can be saved for later use.Authoritative data sources include the Conventional Forces Database (CFBD) that covers order of battle information on U.S. units (classified SECRET), the Military Intelligence Data Base (MIDB) that covers order of battle information on foreign units (classified SECRET). A Generic Data Base covering both U.S. and foreign (unclassified) is also provided. As part of the effort to implement the requirements-based Joint Training System (JTS), the Joint Staff, J7, and the United States Joint Forces Command-Joint Warfighting Center (USJFCOM-JWFC) support and maintain an integrated automated system for managing training exercises and related events, the Joint Training Information Management System (JTIMS). The JTS, as defined in the Joint Training Manual (JTM), consists of four phases: Requirements, Plans, Execution, and Assessment. JTIMS was designed to support key processes described in CJCSM 3500.03, the Joint Training Manual, published in 1996. JTIMS is an automated system specifically designed to assist users in developing the key products related to each of the four phases of the JTS. JTIMS provides a Web-based, Graphical User Interface (GUI) for developing and viewing the JTS product data and is specifically designed to support the task-based, closed-loop features of the JTS. More specifically, JTIMS facilitates the development of an integrated, task-based, "thread" to guide the application of all four JTS phases. Requirements, plans, execution events, and assessments can all be derived from, or linked to, essential mission tasks. JTIMS facilitates collaborative development of JTS products by supporting multiple users within a user group (e.g., CINC), working from geographically dispersed sites. Different subsets of users within a user group may develop the products associated with the various phases or steps of the JTS. As one set of the products for an earlier phase in the JTS life cycle is complete, the information associated with these products can be made available to users associated with the next phase or step in the life cycle. Any users within a user group can participate in the integrated development of the JTS products, as long as they have access to a computer with a Web-browser. As JTS products are completed and approved by users within a user group, the data associated with them can be copied to a central space within the database where the other user groups in the JTS community can access it.1.1 BackgroundThe US DoD M&S Master Plan [1] identifies three components of the M&S Common Technical Framework: the High Level Architecture (HLA), Conceptual Models of the Mission Space (CMMS) (currently referred to as the Functional Description of the Mission Space (FDMS)), and data standards for common representation of data across models, simulations, and Command, Control, Communications, Computers and Intelligence systems. The UOB-DAT is intended to be the common, baseline for consistent Unit Data representations. 2. Description of the User InterfaceThe JTIMS software consists of two types of Java software—Java servlets and Java applets. The Java servlets dynamically generate HTML pages and follow traditional user interface guidelines for Web-design. Hyperlinks provide the connectivity among pages, allowing users to navigate through the JTIMS Web-site via many alternative pathways. The JTIMS Web site supports navigation to the pages above and below the current one in the structure, and navigation to sibling pages and other portions of the application.The Java applets, while being displayed within the browser, have an interface that is more similar to that used in traditional stand-alone applications. Therefore, they require separate user interface guidelines. The separation of a component’s model (data structure) from its user interface (display and interaction behavior) is one of the key features behind the “pluggable look and feel” architecture of the Java Foundation Class (JFC). One JFC application can present a Java look and feel style, another a MS Windows look and feel style, and another a Motif look and feel style. To provide a consistent interface, all JTIMS applets and servlets will employ the JAVA look and feel theme. This theme was chosen because it is not tied to a particular platform. The Java look and feel (JLAF) is designed to provide: Consistency in the appearance and behavior of common design elements Compatibility with industry standard components and interaction styles Aesthetic appeal that does not distract from application contentFigure 1 provides an overview of common application components and the equivalent Java code names. A view of these user interfaces will be described in further detail.CODE NAMECOMMON NAMEJApplet Applet JButton Command button JCheckBox Checkbox JCheckBoxMenuItem Checkbox menu item JColorChooser Color chooser JComboBox Non-editable and editable combo boxes JDesktopPane Desktop pane JDialog Dialog box, secondary window, and utility window JEditorPane Editor pane JFrame Primary window JInternalFrame Internal frame, minimized internal frame, and palette JLabel Label JList List JMenu Drop-down menu and submenu JMenuBar Menu bar JMenuItem Menu item JOptionPane Alert box JPanel Panel JPasswordField Password field JPopupMenu Contextual menu JProgressBar Progress bar JRadioButton Radio button JRadioButtonMenuItem Radio button menu item JScrollBar Scrollbar JScrollPane Scroll pane JSeparator Separator JSlider Slider JSplitPane Split pane JTabbedPane Tabbed pane JTable Table JTextArea Plain text area JTextField Editable and noneditable text field (single line) JTextPane Formatted text pane JToggleButton Toggle button JToolBar Toolbar JToolTip Tool tip JTree Tree view JWindow Plain (unadorned) window Figure 1.  Java Look and Feel of the JFC UI 2.1 Selected Java UI ComponentsPrimary windows are provided by the native operating system of the platform on that the Java application is running, for instance--UNIX, Microsoft Windows, OS/2, or Macintosh. Specifically, the window border and title bar, including the window controls, are provided by the native operating system. The content of the window is, of course, provided by JTIMS. Window behavior, such as resizing, dragging, minimizing, positioning, and layering, is controlled by the native operating system.Typically, when users close or minimize a window, the operating system closes any associated secondary windows as well. However, the operating system does not take care of this behavior automatically for JFC applications. JTIMS keeps track of its secondary windows and closes them if the primary window is closed or hides them if their primary window is minimized.In JFC, primary windows are created using the JFrame component. This component appears with the border, title bar, outline, and window controls of the platform on which it is running. Within JTIMS applets, the Object Selection and Object View Window will be primary windows. All other windows will be secondary windows. JTIMS relies heavily on tree views. A tree view represents a set of hierarchical data in the form of an outline that users can expand and collapse. Tree views are useful for displaying data such as the folders in a file system or the table of contents in a help system.A tree view is made up of nodes. The top-level node from which all other nodes branch is the root node. Nodes that might have sub nodes are called “containers”. All other nodes are called “leaves.” The graphic for a container in JTIMS will be a folder icon and the default graphic for a leaf in JTIMS will be a file icon. Each node also has a label that describes its contents. "Turners" will appear next to each container in the tree view. The turner will point right when the container is collapsed and down when the container is expanded. By default, turners will not be displayed for the highest-level nodes.Figure 2.  JTIMS User InterfaceFinally, JTIMS queries allow users to enter wild card characters to search for specific text patterns. JTIMS uses the wild card conventions that are employed by the Oracle DBMS. These conventions are as follows:_ searches for the occurrence of a single character. For example, abc_d retrieves the strings abcad, abced, and abczd but not abc7d and abcddd.% searches for the occurrence of zero or more alphanumeric characters. For example, abc%d retrieves the strings abcad, abcd, abfklsmd, and abc7d but not abcd5.3. An Approach to Dynamic Data Exchange As described earlier, the UOB-DAT utilizes a Data Interchange Format (DIF) to standardize the data extracted from the original authoritative data sources. The DIF separates UOB data into four logical files, Unit, Personnel, Equipment, and Aircraft. Within these files, all data elements are captured as fixed length, comma-delimited ASCII. The data elements share the Unit Identifier Code (UIC) as the primary key to link an associated field between the files. The Unit file can be viewed as the parent with the remaining three files representing the children. The definition of the DIF is shown in Figure 3 as an IDEF1X data model.Figure 3.  UOB Data ModelThe data exchange between the UOB-DAT server and its clients is dynamic. The tool’s data browser provides on-demand data feeds from the server to the client, thereby greatly reducing bandwidth requirements and reducing load times. The user can extract loaded data to the Force Structure Editor (FSE) and create task forces by selecting those units that may be of interest. The FSE allows for the units to be modified in almost every way, from reporting hierarchies to the properties of the unit, including UIC and assigned personnel or equipment.Figure 4.  UOB Browser and FSEThe created task organizations can be saved locally and extracted in the UOB-DIF format for later use. The JTIMS application operates, as discussed earlier, as a Java-based, client-server application. As such, no data is stored locally. JTIMS and the underlying integrated database enable its users to identify, in real time, conflicts between resources and attempt to resolve such conflicts dynamically within their user-group. The Unit data from which JTIMS users presently select resides within the JTIMS database. The library data is static and can only be updated by the database administrator. Users can add units, but there is no associated data for the units, i.e., no equipment, personnel, or aircraft data. The dynamic exchange of authoritative data about Units and associated data offers clear benefits to JTIMS users and, by extension, to exercise planners. Having the JTIMS users select the responsible organizations and training audiences directly from authoritative sources would greatly reduce the need for user-defined units and enhance not only conflict identification, but transportation planning, costing, exercise preparation, and other areas as well.The objective of the integration of UOB-DAT with JTIMS is to develop a round-trip interface. This interface will enable JTIMS users to view, extract, and store UOB data to the JTIMS data structure for JTS products development. This interface should also enable JTIMS users to locate UOB data in JTS products and extract that data to the UOB Data Interchange Format (DIF) and associated data coding specifications.JTIMS will develop a Web-Based (Java) interface, through the use of a UOB-DAT/JTIMS Client, to (a) extract JTIMS relevant unit order of battle information from the UOB-DAT Server engine (in DIF format) and to (b) extract UOB-DAT relevant unit order of battle data from JTIMS. The call function by the UOB-DAT/JTIMS Client will be automatically handled by the UOB-DAT Server engine, which in turn will issue the reply in UOB-DIF format for interpretation by the UOB-DAT/JTIMS Client. Similarly, the JTIMS server engine will automatically handle the call function by the UOB-DAT/JTIMS Client. The JTIMS server engine will respond using the JTIMS-specific XML format for data export. The UOB-DAT/JTIMS Client will then convert the JTIMS-specific XML format and data coding to the UOB DIF format and data coding.4. Status of the Integration EffortThe integration of UOB-DAT and JTIMS is a two-phased effort. The initial (completed) effort focused on demonstrating an automated call handling and data exchange between the JTIMS/UOB-DAT client and the UOB-DAT server, while the second (in progress) phase focuses on the presentation of the data to JTIMS users and the capture of task organization from JTIMS users for possible UOB-DAT interest.The JTIMS/UOB-DAT client software was developed to replace the call functions currently performed by the UOB-DAT client. The decision was made that for the first phase, the JTIMS/UOB-DAT client would focus on replacing the resident JTIMS organizational table data. JTIMS users immediate benefit would be greatest if the existing table were archived and replaced by the authoritative UOB-DAT dataset. JTIMS therefore needed to obtain the complete Unit list from the authoritative sources, complete with all data elements from the Unit DIF. While re-hosting that large volume of data on JTIMS is not necessarily the most efficient use of resources, bandwidth and server availability, as well as immediate benefit analyses dictated that approach as the most feasible for the near term.The initial call from the JTIMS/UOB-DAT client establishes it as an authorized user to the UOB-DAT server, by supplying login information. But unlike the UOB-DAT client, the initial call is followed by a request for a complete data dump. As discussed earlier, the UOB-DAT client software utilizes an on-demand data transfer routine to enhance speed and minimize bandwidth. That approach was examined as a possibility for the JTIMS/UOB-DAT client as well, but rejected after a careful analysis of the requirements of JTIMS users and the data transfer capabilities inherent in the UOB-DAT server. As a result of that analysis, JTIMS now receives a complete set of UOB data after the initial login procedure is completed. The data is then pulled into a database and made available to the JTIMS community. This initial approach is not considered feasible as a long-term solution, since it presents a number of significant shortfalls. It requires a “man-in-the-loop” to exchange the stored data set for the imported dataset and does not take full advantage of the access to the original data sources, among other limitations. It does, however, satisfy the immediate need for authoritative Unit data for JTIMS users, and by extension, facilitates the exercise planning processes and enhances the associates JTS products and processes.5. Requirements-Based DevelopmentHistorically, the military has relied on event-based training, but under the auspices of then Chairman, Joint Chiefs of Staff, General Shalikashvili, the entire DoD culture began switching the paradigm to requirements-based training.In event-based training, there was no objective way to capture training effectiveness for an organization. Translating event-based training to “readiness,” a commander subjectively deemed his unit “ready” simply because they “participated” in “X” events over a “Y” period of time. It became exceedingly difficult to justify requests for increased training dollars when the status quo could not be effectively measured.Since the publication of the Universal Joint Task List (UJTL) 3.0 in September 1996, requirements-based training has been a growth industry in both the live training and simulation arenas. The key in this paradigm is isolating the “What”, or those missions that must be accomplished by an organization. The missions are comprised of operations, and the operations are comprised of tasks. The tasks are performed under a set of conditions to a particular standard set by the commander. When the tasks are performed, the effectiveness of the training can be measured objectively.All current task lists exist in the JTIMS database. Each of the task lists provides a complete definition of the tasks to be performed to include doctrinal references. In addition, the UJTL contains a list of 290 conditions and over 5500 measures of performance that allows the commander to do complete mission analysis and then evaluate his unit’s performance on a particular task.If there is no organized means of operating with the data, the existence of a tasks/conditions/measures of performance database alone means little. Within the Joint Training System, organizations determine the “What” by using the Missions, Operations, and Tasks paradigm (Figure 4).Figure 5.  Mission Analysis ParadigmEach organization has a series of missions it must perform. These can be further decomposed into operations and tasks. Importantly, missions are contextual, and one organization’s mission could very well be a second organization’s operation, and a third organization’s task.In the Plans Phase of the JTS (JTIMS automation), a Command’s Misison Essential Task List (METL or Joint METL (JMETL)) is the key element in formulating the Joint Training Plan. In this phase, the Joint Mission Essential Tasks are linked to specific training audiences and training objectives. These combinations are then linked to specific exercises or events that can then be evaluated in the Execution Phase. Data observed and evaluated over a series of exercises or events are then compiled in the Assessment Phase so that the commanders can more readily evaluate the training readiness of their units in specific, measurable areas. Clearly, identifying training audiences and other organizations from the authoritative data sources (i.e., the UOB-DAT data set) creates a much more robust foundation for systematic analysis, conflict resolution, and process automation. It is the area of process automation that DMSO has been most interested in. The natural consequence of the CINCs' and Services' constrained live exercises, especially at the strategic and operational levels of war, is the explosion of modeling and simulation as a positive way to compensate for shrinking training resources. DMSO is hard at work sponsoring various research endeavors. It has supported the creation of a series of models (Joint Simulation System - JSIMS, Warrior Simulation 2000-WARSIM, National Air and Space Model) all stored within the Functional Description of the Mission Space (FDMS). The UOB-DAT and JTIMS integrations efforts are part of the software toolsets that connect the various simulations and, working with the J-7, Joint Staff, will connect the DMSO tools to the Joint Training Management Information System (JTIMS) to enhance start exercise data collection/automation.6. Simulation Development Support The task information, along with the associated Unit data, generated during the training requirements analysis could be used to feed the scenario generation activities that take place prior to a simulation exercise. More specifically, the simulation software would “recognize” the mission and tasks, and based on this recognition would produce templates of scenario events [sometimes called “Master Scenario Event Lists” (MSELS)], scripted Computer Generated Forces (CGF) behaviors, and mission/task performance measures. Analysts at the simulation site could then review and update the templates to reflect the unique circumstances of a particular training situation. The JTIMS will capture the MSEL information by integrating the Joint Staff-selected stand-alone MSEL generator as part of the JTIMS/JTS support tools.Simulation systems must have several features to properly process task information and take advantage of the reduced data/knowledge acquisition. First, the simulation systems must have the capability to semantically analyze the task information. Several recent advances in the semantic representation of simulation data should facilitate this analysis. Second, the simulation systems must have the additional semantic data or libraries to fill-in and supplement any information missing from the task data provided by the training requirements analysis process. These potential gaps in the data libraries can be addressed through the JTIMS export features.The JTIMS database contains data on the Joint and Service task lists and their associated conditions and measures taxonomies and also contains taxonomy of missions and task templates. These templates specify the tasks to be performed in each mission, a concept that the Navy has extended. The Navy includes a description of the temporal relationships among tasks within a mission. This temporal relationship will be part of the future versions of JTIMS, along with graphical representations and drawing tools.The plans for JTIMS include exports of mission/task data and associated templates. All JTIMS data exports will be formatted in the Extensible Markup Language or XML ( HYPERLINK http://www.w3.org/TR/WD-xml-lang-970331.html http://www.w3.org/TR/WD-xml-lang-70331.html). XML provides an industry standard for exchanging data that directly facilitates the development of automated tools for data processing. Additionally, DMSO has developed a detailed Data Interchange Format (DIF) for describing various elements of military operations including processes such as missions and tasks. The primary intent of this DIF is to guide knowledge acquisition associated with the development of simulations. This knowledge is stored in both native and common format in the FDMS and the FDMS is designed to facilitate the exchange of FDMS data among various simulation programs. While there are no plans to include the JTIMS exports within the FDMS, primarily because of classification issues, selected datasets could be made available to authorized simulation developers to support training activities for DoD-sponsored simulations. 7. SummaryThe Joint Staff, J-7 and the Defense Modeling and Simulation Office are collaborating to integrate two key components for military training, mission/task data and force structures from authoritative sources. While such integration has immediate benefits within the Joint Training System, tangible benefits are available to a wide range of audiences, from exercise planners to simulation developers. The round-trip interface between the UOB-DAT and JTIMS respective servers will allow for thehe dynamic creation of task organizations within the context of the JTS products. As the application of the JTS paradigm continues to gain prominence, information contained within JTIMS, and by association the UOB-DAT, will be of interest to a widening audience. The ability to extract “STARTEX” data sets directly from the source for use in M&S applications is one more example of its utility.8. References[1]	Department of Defense Modeling and Simulation (M&S) Master Plan, DoD Dir 5000.59-9P, October 1995. [2]	Jack Sheehan et al.: “Conceptual Models of the Mission Space (CMMS): Basic Concepts, Advanced Techniques, and Pragmatic Examples,” Spring 1998 Simulation Interoperability Workshop, March 1998.[3]	Lawrence H. O’Brien PhD.: “Development of Task-Aware Simulation Systems,” I/ITSEC ’00 Proceedings, November 2000[4]	CJCSI 3500.02B, Joint Training Master Plan 2000 for the Armed Forces of the United States, 1 May [5]	CJCSM 3500.03, Joint Training Manual (Coordinating Draft), July [6]	ADS website: Definitions and Responsibilities page at URL: http://165.113.139.101/definitions.html.[7]	CJCSM 3500.04B. Universal Joint Task List, 1 October [8]	DoD Directive 5000.59, "DoD Modeling and Simulation (M&S) Management," January 4, 1994.Author BiographiesRON SMITS is the systems integrator for the Joint Training Information Management System at Dynamics Research Corporation. He is the DMSO liaison to the NASM program and brings extensive experience in operations planning, training, and management, based on over 16 years experience flying operational fighter aircraft, to the simulation world. He has been involved with the FDMS Data Dictionary and NASM conceptual models since joining DRC in 1998. He is a graduate of the Royal Military Academy, the Netherlands, and earned his Masters Degree from Old Dominion University in International Studies.BRUCE HARRIS is the Director of the Training and Performance Analysis Department for Dynamics Research Corporation. He is also the Program Manager for Data Engineering projects with DMSO. He has an extensive background in operations, planning, training and education, based on a career in the Army; and provides an operator’s perspective in the management of numerous modeling and simulation projects with DMSO. Mr. Harris is a graduate of Hofstra University in Political Science. He earned a Masters Degree from Seton Hall University in History and Education, as well as diplomas in National Security Strategy from both the U.S. Army War College, and the National War College, where he later served as the Chief of Staff, Army Chair and head of the Military Strategy and Operations Department. DATE \@ "MM/dd/yy" 01/04/01  TIME \@ "h:mm AM/PM" 8:03 AM