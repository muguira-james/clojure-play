The Joint Simulation System (JSIMS)Terrain Data FusionProcess ModelMary KruckDr. Dale MillerTim MillerJohn RourkeMike McInnisJoseph HussLockheed Martin Information SystemAdvanced Simulation Center3605 132nd Ave SE, Suite 400Bellevue, WA 98006425-746-6800mkruck, ddmiller, tmiller, jrourke, mmcinnis, jhuss @lads.is.lmco.comKeywords:Terrain Data Base, IDEF0, Geospatial Data ModelABSTRACT Development of terrain data bases for ground maneuver simulation has usually involved improvisation of ad hoc processes, typically due to inconsistencies in the source data and to the lack of a priori requirements for the representation and organization of features. Two examples of this are the CCTT and STOW programs, for which detailed process models were developed only after the production of initial data bases. The WARSIM program, which is responsible for the production of all JSIMS terrain data bases, has established a geospatial data model for the representation, attribution and organization of features, the JSIMS Terrain Common Data Model (TCDM). Based upon the requirements established therein, a detailed process model for the production of WARSIM and JSIMS data bases was developed using IDEF0 modeling. This process model describes the activities of importing NIMA source data, reorganizing the data according to the TCDM specification, de-conflicting feature data both within and between thematic layers (coverages), processing the digital elevation data (anomaly removal and integration of terrestrial and bathymetric data sets), exporting the data sets, and verifying the data base using the Synthetic Environment Evaluation and Inspection Toolset (SEE-IT). This paper presents a high level view of the process model as well as a sample vertical cross-section. The results of applying this process to the initial 5 x 5 degree WARSIM Build 2 Southwest Asia terrain data base are discussed.IntroductionProcess models have long been used to evaluate and improve business processes and operations.  In the realm of simulation, process models have been developed to describe the production of terrain data bases.  Two such examples are those developed for the Close Combat Tactical Trainer (CCTT) and the Synthetic Theater of War (STOW) programs.  These process models were developed after the production of initial data bases.  A more recent process model developed for the WARSIM 2000 program describes those processes that are anticipated for the development of WARSIM/JSIMS terrain data bases.  The scope of this process model is limited to those processes required to produce a terrain data base using the Terrain Data Fusion System (TDFS).  The TDFS is the WARSIM/JSIMS application used to fuse heterogeneous data sources into a cohesive digital description of the geography.  It provides operational capabilities among which are automated data base production, interactive data base production, and interactive editing capabilities.  It is designed to be a rules-based system whose core is the Environmental Systems Research Institute (ESRI) geographic information system (GIS) product ARC/INFO.  The TDFS product, the fused terrain data base is intended to serve as the baseline data base for the derivation of various Synthetic Natural Environments (SNEs) employed throughout JSIMS (e.g., CGF and C4I).The Evolution of the JSIMS Terrain Data Fusion Process ModelThe JSIMS Terrain Data Fusion Process Model has as its origin the recognition of the need to bound the processes involved in terrain data base production and the direct relationship of those processes to the end product.  Additionally, the trend of terrain data base production efforts is toward a process that is both efficient and reproducible.  Since the process is tightly bound to the requirements of the end product, it must be well understood as to just what that product is.  To that end an evaluation of JSIMS/WARSIM requirements was conducted.  In general, as for most programs, specific terrain data base requirements are not provided, rather, requirements are expressed as Use Cases, that is, how the simulation system is expected to be used.  These requirements must be distilled into a set of meaningful requirements directly applicable to the Terrain Data Base and the application used to produce it.  This distillation process resulted in the development of a geospatial data model against which all JSIMS/WARSIM TDBs must abide.  This geospatial data model is the JSIMS Terrain Common Data Model (TCDM) (See  REF _Ref455365797 \r [1]).  In the process of developing the TCDM additional information pertinent to the process model was obtained.  While not directly reflected in the TCDM it plays a key role in the development of the process model.  This information is the identification of those data base elements (features) that are key to the intended use of the WARSIM/JSIMS systems, a feature priority of sorts.  The TCDM, along with Terrain Data Base Generation System requirements, provide the basis for the derivation of the process model.The Process Model and IDEF0The JSIMS Terrain Data Fusion Process Model is documented using IDEF0.  IDEF0 modeling is used to produce a function model of a system or subject area.  A function model is described by the IDEF0 standard  REF _Ref455200652 \r [2] as ‚Äúa structured representation of the functions, activities or processes within the modeled system or subject area‚Äù.  In our case, the subject area is the production of terrain data bases.  IDEF0 is based on the Structured Analysis and Design Technique( (SADT() developed by Douglas T. Ross and SofTech, Inc. and is required methodology for defining processes per the Joint Technical Architecture (JTA) ‚Äì Army  REF _Ref455365957 \r [3].  Application of IDEF0 to a system, results in a model that consists of a hierarchical series of text and diagrams cross-referenced to each other.  The two primary model elements are (1) functions (defined as activities, processes or transformations), represented in diagrams as boxes, and (2) the data and objects that interrelate with those functions, represented as arrows.  Put another way, the boxes provide a description of what happens; arrows convey data or objects related to the functions performed.  Arrows do not represent flow or sequence.A name and node number identify each box in an IDEF0 model.  The name is an active verb or verb phrase describing the function.  Node numbers are used to identify the node in associated text.  Each side of a function box has a standard meaning; the side of the box with which an arrow interfaces reflects the arrow‚Äôs role.  Arrows entering the left side of the box are inputs (I).  Arrows entering the top are controls (C).  Controls specify the conditions under which the function produces the correct output.  Arrows leaving the box on the right side are outputs (O), and arrows entering the bottom of the box represent mechanisms (M).  Mechanisms are the means by which a function is accomplished.  In the JSIMS Terrain Data Fusion Process Model ‚Äúmechanisms‚Äù are used to identify the individual or individuals that play some part in completing the activity.  Each arrow is labeled with a noun or noun phrase.  (See  REF _Ref455201335 \h Figure 1.1.) EMBED Visio.Drawing.4  Figure  STYLEREF 1 \s 1. SEQ Figure \* ARABIC \s 1 1 IDEF0 SyntaxThe graphic representation of the process model illustrates terrain data base production activities and their associated relationships.  These functions are decomposed in more detailed diagrams until the activity is described to a level supportive of the goals of the model.  The top-level diagram in the model, the context diagram, provides the most general or abstract description of the production process.  It is followed by a series of child diagrams reflecting the details.  In general, diagrams read from upper left to lower right with the initiating activity in the upper leftmost position.  Each activity is, in essence, a node within a tree of activities.  Nodes are numbered sequentially, using decimal notation to reflect child nodes.  For example, the first main activity is number 1, its child activities are numbered 1.1, 1.2, and so on.The Terrain Data Fusion Process ModelThe JSIMS Terrain Data Fusion Process Model captures the details of terrain data base production at conceptual and logical levels.  It reflects the construction as anticipated for JSIMS/WARSIM and hence is a working document that will be revised as the TDFS is developed and production processes are refined.  The process model serves many purposes.  It:Guides terrain data base developers (referred to as Data Base Engineers (DB Engrs) in the model) in performing their tasks,Serves as a resource for Terrain Data Fusion System requirements definition and design,Serves as a resource for process tracking and review,Serves as a resource for the development of deliverable documents such as the Data Base Generation Guide, a user‚Äôs guide.Two views of the process model are presented herein.  The first view, a horizontal view, shows the relationships of the top-level production activities.  Each top-level activity is briefly described by its child activities.  The second view, a vertical view, shows the depth of a single top-level activity, that is, a view of its detailed sub-processes.  First, the overall process is presented in the context diagram,  REF _Ref455206265 \h Figure 2.1. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 1 Terrain Data Fusion Context DiagramThe context diagram identifies the primary input to and output from the TDB production process, the controls influencing production, and the individual role players involved in the production.  Input to the production process consists of Project Information (e.g., a Project Name and storage location), Playbox Information (e.g., required source data) and the Source Data itself.    Controls affecting TDB production fall into two categories, those bounding or limiting production (e.g., source data structure and availability (Source Data Resources)), and those tied to the act of carrying out a given process (e.g., the Configuration Management (CM) Plan).  Output from the production process consists of a Terrain Data Base export, Project Information, in this case historical information and metadata, and verification results.  Individuals participating in the production process include Subject Matter Experts (SMEs), Project Managers (PMs), and data base engineers (systems engineers and data base developers).  The Terrain Data Fusion context diagram serves as the parent diagram for all others.  The single process identified therein is decomposed into eight (8) top-level activities.TDB Production ‚Äì The Top-Level Tasks, A Horizontal ViewThe top-level terrain data base production activities are:Setting Up  a Terrain Data Base ProjectIdentifying and Acquiring Source DataImporting the Source DataProcessing the Vector Source DataProcessing the Elevation Source DataCreating the Export ModelGenerating a TDB ReleaseVerifying the TDBThe relationships between these top-level activities are shown in  REF _Ref455283940 Figure 2.2.  Note that not all input, output, controls and mechanisms are specifically shown due to space limitations.  They are, however, described in the following sections. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 2 Terrain Data Fusion - Level 1Setting Up the Terrain Data Base ProjectTo facilitate TDB production and configuration management and control, a TDB Project is established.  A TDB Project is defined to be all TDB components, in their various production states, and any metadata related to the TDB being produced.  All are housed within a single structure (and its sub-structures) identified by a TDB Project name and physical storage location.  Primary elements of a TDB Project are its Project Catalog, containing project metadata and production histories, and Project Libraries.  The Project Libraries house the various states of the data as it moves through the production process.  Separate libraries are maintained for vector and elevation data.   REF _Ref455284966 \h Figure 2.3 illustrates the relationships between the child processes of Node 1: Set Up the Project. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 3 Set Up the Project - Node 1.0Identifying and Acquiring Source DataIdentification and acquisition of source data begins as soon as project requirements become available.  The requirements are analyzed and candidate source data identified.  Requests for data are submitted to the appropriate authority and are catalogued when received.  REF _Ref455286487 \h Figure 2.4 illustrates the relationships between the child processes of Node 2: Identify and Acquire Source Data. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 4 Identify and Acquire Source Data - Node 2.0Importing the Digital Source DataThe Initial Operating Capability (IOC) requirements for WARSIM identify source data types available in digital form.  These vector and raster/elevation data are imported into the Terrain Data Fusion System,. and stored in internal TDFS structures, i.e., the Project Libraries.  Some source data types are converted to an internal form on import to facilitate down-line operations.  Data that has been imported is checked through visual and statistical inspection.  The data may optionally be archived/ check-pointed.   REF _Ref455287919 \h Figure 2.5 illustrates the relationships between the child processes of Node 3: Import Digital Source Data. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 5 Import Digital Source Data - Node 3Processing the Digital Vector Source DataThe processing of the vector source data is a complex process highly dependent on program requirements.  The complexities are not explored here, but will be addressed at some level in the vertical view of the Process Model.  Vector processing begins with the conversion of the vector data to an intermediate form.  This form is known as the JSIMS Simple Data Model and is a "simple" representation of the JSIMS TCDM.  In this form, all vector features are represented as simple features, i.e., primitive features such as areas, lines and points.  Converting the various source data types to a single representative form facilitates the fusion process.  Fusion begins with the identification and correction of anomalies present at geo-tile edges.  Once corrected, the individual coverages comprising the geo-tile are merged to form a single set of coverages extending across all geo-tiles.  The coverages are then de-conflicted.  De-confliction is the process by which features are modified or moved to produce a coherent representation, e.g., a building feature is moved from its original location within the boundaries of a river to be some distance from the river edge.  De-confliction is first performed on features within a coverage (e.g., transportation crossings are de-conflicted against transportation networks).  It is then performed across coverages (e.g., hydrographic features are de-conflicted against transportation features). The final activity is the conversion to complex coverages and features.  Complex features are features that may be represented by one or more simple features.   REF _Ref455290130 \h Figure 2.6 illustrates the relationships between the child processes of Node 4: Process Vector Source Data.    You will note that, at this level, no quality control check is shown.  Multiple quality control checks are included within the lower level processes of this node. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 6 Process Vector Source Data - Node 4Processing the Elevation Source DataThe processing of elevation source data is somewhat less complex than that of vector data.  In general, this processing can be summarized as the removal of anomalies and the merging of terrestrial and bathymetric elevation models.  In practice, the larger part of these activities is focused on the removal of anomalies.  Two types of anomalies are currently being addressed, those referred to as cornrows, and errors at or near the geo-tile boundary.  Elevation processing is completed by a visual and statistical inspection.  Data base engineers may optionally archive/checkpoint the data and/or create surface lines for geo-tile boundaries.   REF _Ref455290485 \h Figure 2.7 illustrates the relationships between the child processes of Node 5: Process Elevation Source Data. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 7 Process Elevation Source Data - Node 5Creating the Export ModelCreation of the export model is the final process performed prior to release of a terrain data base.  The processes of this node are directly related to creating the various elements of the export model, i.e., the terrain data base components.  For WARSIM/JSIMS, the vector data is exported in Vector Product Format (VPF), the elevation data is exported in Digital Terrain Elevation Data (DTED) Level 1 format, and surface line data is exported as 3-D vector data.   REF _Ref455290704 \h Figure 2.8 illustrates the relationships between the child processes of Node 6: Create the Export Model. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 8 Create the Export Model - Node 6Generating a Terrain Data Base ReleaseGeneration of a terrain data base release consists of generating the appropriate release documentation, producing the release on the designated media and creating an archive of the release.   REF _Ref455290828 \h Figure 2.9 illustrates the relationships between the child processes of Node 7: Generate a TDB Release. EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 9 Generate a TDB Release - Node 7Verifying the Terrain Data BaseVerification of the WARSIM/JSIMS Terrain Data Bases occurs through the application of the Synthetic Environment Evaluation and Inspection Toolset (SEE-IT), see Reference  REF _Ref455395314 \r [4].    REF _Ref455291190 Figure 2.10 illustrates the relationships between the child processes of Node 8: Verify the Terrain Data Base.   EMBED Visio.Drawing.5  Figure  STYLEREF 1 \s 2. SEQ Figure \* ARABIC \s 1 10 Verify Terrain Data Base - Node 8TDB Production ‚Äì A Deeper Look, a Vertical ViewLooking again at  REF _Ref455290130 Figure 2.6, seven (7) activities are shown.  In actuality these seven activities are, at their lowest level, 77 activities, and this number reflects only those activities associated with processing Vector Map Levels 0 and 1.  Additional activities (~19) are required to process other vector source data types such as Digital Feature Analysis Data (DFAD), Digital Nautical Chart (DNC) data, and Foundation Feature Data (FFD).  REF _Ref455395521 Table 2.1 identifies the individual activities, the lowest level 77 are highlighted.Table  STYLEREF 1 \s 2. SEQ Table \* ARABIC \s 1 1 Vector Processing Activities4.	Process Vector Source Data4.1	Convert Vector Data to the JSIMS Simple Data Model4.1.1	Convert VMAP0 to the JSIMS Simple Data Model4.1.1.1	Convert VMAP0 Attribution to the JSIMS Simple Data Model4.1.1.2	Convert VMAP0 Geometry to the JSIMS Simple Data Model4.1.1.3	Typecast VMAP0 Features4.1.2	Convert VMAP1 to the JSIMS Simple Data Model4.1.2.1	Convert VMAP1 Attribution to the JSIMS Simple Data Model4.1.2.2	Convert VMAP1 Geometry to the JSIMS Simple Data Model4.1.2.3	Typecast VMAP1 Features4.1.3	Generate Feature Statistics4.1.4	Review Converted Data and Conversion History4.1.5	Checkpoint the Converted Vector Data4.2	Resolve Intra-Source Edge Anomalies4.2.1	Identify & Correct Intra-Source Segment Anomalies4.2.2	Identify & Correct Intra-Source Area Anomalies4.2.3	Quality Control Check Intra-Source Edges4.3	Merge Source Data into JSIMS Aggregate Coverages4.3.1	Create Aggregate Coverages4.3.2	Merge Source Coverages/Feature Classes for the TDB4.3.3	Dissolve Inter-Source Edges4.3.4	Quality Control Check the Merged Data4.3.4.1	Quality Control Check the Merged Data Inter-Source Boundaries4.3.4.2	Quality Control Check the Merged Data Feature Coverages and Classes4.3.5	Merge Supplemental Data into JSIMS Aggregate Coverages4.3.5.1	Merge Supplemental Features4.3.5.2	Quality Control Check the Merged Supplemental Features4.3.5.3	Compute Statistics on JSIMS Aggregate Coverages4.3.6	Populate the JSIMS Libraries4.3.7	Checkpoint the Merged Data4.4	De-conflict Features Within a Coverage4.4.1	De-conflict Linear and Point Hydrography Coverage Features4.4.1.1	De-conflict Linear Waterways4.4.1.2	De-conflict Rapids & Locks4.4.1.3	De-conflict Dams4.4.2	De-conflict Transportation Coverage Features4.4.2.1	De-conflict Linear Transportation Networks4.4.2.2	Represent Bridges as Spans and Complex Features4.4.2.3	Generate Overpass Crossings4.4.2.4	De-conflict Transportation Crossings4.4.2.5	De-conflict Control Towers4.4.3	De-conflict Point Culture Coverage Features4.4.3.1	Cluster Oil Wells4.4.3.2	Fuse Cultural Features4.4.4	De-conflict Surface Areals Coverage Features4.4.4.1	De-conflict Surface Areals Requiring Typecasting4.4.4.2	Typecast Surface Areal Features Imported as Points or Lines4.4.4.3	Derive Background Feature4.4.5	Quality Control Check De-conflicted Features4.4.6	Checkpoint the De-conflicted (within a Coverage) Data4.5	De-conflict Features Across Coverages4.5.1	De-conflict Linear & Point Hydro Against Surface Areal Hydro4.5.1.1	De-conflict Linear Hydrography Against Surface Areals Hydrography 4.5.1.2	Generate Hydrographic Nexi/Centerlines4.5.1.3	De-conflict Rapids Against Surface Areals Hydrography4.5.1.4	De-conflict Locks Against Surface Areals Hydrography4.5.1.5	De-conflict Dams Against Surface Areals Hydrography	4.5.2	De-conflict Hydrographic Features Against Linear Transportation4.5.3	De-conflict Linear & Point Trans Against Hydrography4.5.3.1	De-conflict Fords Against Linear Hydrography4.5.3.2	De-conflict Fords Against Surface Areals Hydrography4.5.3.3	De-conflict Bridges Against Surface Areals Hydrography4.5.3.4	De-conflict Bridges Against Linear Hydrography4.5.4	Generate Default Bridges at Transportation/Hydrography Intersections4.5.5	Generate Transportation Nexi4.5.6	De-conflict Surface Areals Against Linear Trans & Hydro4.5.6.1	De-conflict Surface Areals Against Linear Transportation4.5.6.2	De-conflict Surface Areals Against Linear Hydrography4.5.7	De-conflict Point Culture4.5.7.1	De-conflict Point Culture Against Surface Areals Hydrography4.5.7.2	De-conflict Point Culture Against Linear Hydrography4.5.8	Complete Surface Areal Processing4.5.8.1	Assure Continuity of Surface Areals Coverage4.5.8.2	Compute Surface Areal Surface Trafficability Groups (STGJ, STGC, STGS) 4.5.8.3	Generate Coastline Linear Feature from Ocean Surface Areal4.5.9	Quality Control Check De-conflicted Coverages4.5.10	Checkpoint the De-conflicted Coverages4.6	Convert Aggregate Coverages to Complex Coverages4.6.1	Construct Surface Areal Regions4.6.2	Convert Hydrography to Complex Coverages4.6.2.1	Construct Hydrographic Routes4.6.2.2	Process Hydrographic Points4.6.3	Convert Transportation to Complex Coverages4.6.3.1	Construct Transportation Regions4.6.3.2	Construct Transportation Routes4.6.3.3	Process Transportation Points4.6.4	Convert Distribution Features to Complex Coverages4.6.4.1	Construct Distribution Routes4.6.4.2	Process Distribution Points4.6.5	Convert Terrain Obstacles to Complex Coverages4.6.5.1	Construct Terrain Obstacle Regions4.6.5.2	Construct Terrain Obstacle Routes4.6.6	Convert Marine Trafficability to Complex Coverages4.6.6.1	Construct Marine Trafficability Regions4.6.6.2	Construct Marine Trafficability Routes4.6.6.3	Process Marine Trafficability Points4.6.7	Convert Administrative Boundaries to Complex Coverages4.6.7.1	Construct Administrative Boundary Regions4.6.7.2	Construct Administrative Boundary Routes4.6.7.3	Process Administrative Boundary Points4.7	Construct Complex Features4.7.1	Generate the Point/Node Complex Feature Coverage4.7.2	Generate the Complex Features4.7.3	Checkpoint the Complex FeaturesApplying the Process ModelAs previously noted, the Process Model reflects those activities anticipated for production of JSIMS/WARSIM terrain data bases.  Additionally, it provides a perspective into the concept of operation for the Terrain Data Fusion System.  Ultimately it is desirable to have a process model that reflects the final process to be employed in TDB production efforts, and is a logical successor to the original.  To this end, the process model is being applied during TDB production efforts scheduled to support pre-Initial Operating Capability (IOC) Builds. Two such production efforts were scheduled, one each for Builds 2 and 3. To date, only the Build 2 production effort has been completed.  This effort was the first application of the Process Model to a real production effort.  The production was conducted according to the Process Model though the tools (namely the Terrain Data Fusion System) employed, were not necessarily those called out therein.  (The TDFS is currently in its IOC design phase.) On the whole, the initial TDB construction process showed the Process Model to be generally accurate and quite useful.  However, in applying the Process Model to this effort two shortcomings became apparent.  The first is the division and depth of the vector processing activities.  Actual TDB production is generally accomplished by multiple individuals, and because of the organization of the data into coverages, many of the vector processing activities can be accomplished on a per coverage basis, often concurrently.  The second deficiency is the omission of child activities, again in vector processing.  Such omissions were recorded and will serve as the blueprint for revising the Process Model.  One other item of note is that the process model was used in this production effort to identify production tasks against which status was reported.  The deficiencies identified above made it difficult to accurately report process completion.ConclusionsBenefits stemming from the generation of a process model are traditionally seen in the form of increased productivity, repeatability of process, and lower overall production costs.  While this is true for TDB production, additional benefits are realized. The process model serves as an educational tool with respect to understanding the problem space (in this case TDB fusion) and to envisioning the final production environment. Further, it facilitates interaction between end-users and those developing the tools to be used in the production process.  Lastly it provides a basis for production scheduling and status reporting.While the process model may never completely reflect every possible production activity relationship its benefits far outweigh its shortcomings. ReferencesPaul A. Birkel, Dale D. Miller, Timothy Miller, John Rourke, Eric Root, "The Terrain Common Data Model (TCDM):  A Joint Effort of JSIMS, STOW, and JWARS",  8th SISO CGF & BR Conference May 1999.The Standard for Integration Definition For Function Modeling (IDEF0), Federal Information Processing Standards Publication 183, December 21, 1993.Joint Technical Architecture-Army, Version 5.0, 11 September 1997Robert F. Richbourg, Tim Stone, "Automating Error Detection and Correction in Synthetic Environments", 98F-SIW-087, SIW Fall 1998.Author BiographiesMARY KRUCK is a Senior Systems Engineer at Lockheed Martin Information Systems (LMIS), Advanced Simulation Center (ASC), Bellevue, WA.  Her current focus is the development of the Terrain Data Fusion System for WARSIM 2000.  Previous responsibilities include leading the STOW Dynamic Virtual World (DVW) effort, and lead Systems Engineer for the Anti-Armor Advanced Technology Demonstration  (A2ATD) and LOSAT programs.  Prior to joining LMIS-ASC, Ms. Kruck was employed by CAE-Link where she contributed in the areas of radar and visual simulation, terrain data base generation, mission generation and object oriented design and implementation.  Ms. Kruck earned a B.S. in Mathematics from California Polytechnic University, San Luis Obispo, CA.  DR DALE D. MILLER is the manager of Advanced Technology Development for the Advanced Simulation Center group of Lockheed Martin Information Systems.  He currently leads the projects Dynamic Terrain and Objects in the Virtual World and the Terrain Data Base Generation & Technology for Synthetic Environments, both sponsored by DARPA and USATEC.  Dr. Miller received his Ph.D. in Mathematics from the University of Washington in 1976.  Since then he has contributed in the areas of DIS and its successor, HLA, real-time computer graphics, computer image generator design, adaptive filtering, image processing, feature extraction, machine vision, and optical character recognition.TIM MILLER is a geologist and GIS developer with Lockheed Martin Information Systems Advanced Simulation Center. He leads the GIS software development for the JSIMS Terrain Data Fusion System.  In TDB construction, he has been involved with the synthesis of digital data sources and the development of new data models for accurate representation of real world phenomena. Tim also played a key role in GIS activities for the STOW Worldwide Terrain Data Base (WWTDB) and in developing techniques for data transfer in to and out of S1000 through S1000 API tools, ARC/INFO AMLs, and the S1000 Polygon Attribute Table (PAT). JOHN ROURKE is a Staff Project Engineer at LMIS-ASC and has been a member of the staff since 1995. During that time he has led teams developing Terrain Data Bases and Dynamic Element Databases for DARPA STOW efforts. These efforts include the Ground Maneuver Box TDB, the SW Asia TDB for the STOW '97 ACTD, and the Stevenville, Newfoundland TDB used in the JCOS ACTD.  Mr. Rourke is currently the Project Engineer for the WARSIM Terrain Data Fusion System development.  Mr. Rourke earned a B.S. in Aeronautical Engineering from Embry Riddle Aeronautical University in 1981.MIKE MCINNIS is a GIS Analyst for Lockheed Martin Information Systems-Advanced Simulation Center.  He is currently a part of the team of developers using ESRI‚Äôs ARC/INFO GIS in concert with Microsoft‚Äôs Visual Basic to develop the Terrain Data Fusion System for JSIMS/ WARSIM.  JOSEPH HUSS is a Staff Software Engineer /GIS Specialist at  Lockheed Martin Information Systems- Advance Simulation Center, Bellevue, Washington. He has participated in the development of JSIMS/ WARSIM and STOW databases. His expertise is utilized throughout development, design, and production of GIS databases and database production applications.