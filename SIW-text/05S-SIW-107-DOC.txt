Multi-level Resolution Engagement Modeling Through a JWARS-JSAF HLA FederationDavid Macannuco, Carole SnowAdvanced Simulation CenterLockheed Martin Simulation, Training and Support HYPERLINK "mailto:David.j.macannuco@lmco.com" David.j.macannuco@lmco.com,  HYPERLINK "mailto:Carole.snow@lmco.com" Carole.snow@lmco.com Ronald D. Painter, PhD, James W. Jones IIISimualtion and Test Division GroupCACI INC. – FEDERAL HYPERLINK "mailto:rpainter@caci.com" rpainter@caci.com,  HYPERLINK "mailto:jamjones@caci.com" jamjones@caci.comAbstract: Engagement level models need to be executed within proper theater level context to provide context sensitive analysis of weapons systems, architectures, and concepts. This paper describes a multi-level resolution approach to engagement level modeling using a JWARS-JSAF HLA federation. The Joint Warfare System (JWARS) provides a balanced, validated, multi-sided constructive simulation of joint theater warfare, and will support activities within DoD including force assessment, joint planning, concept and doctrine development, and analysis.  Joint Semi-Automated Forces (JSAF) models air, land, and maritime platforms, including guided munitions, at the entity level and provides behavior models at both entity and small unit level.The impetus for creating a JWARS-JSAF federation was the selection of both as core M&S applications for use at the new Lockheed Martin Global Vision Integration Center.  The intent of the federation is so that the analytical capability of JWARS might be enhanced by a capability to “hand off” an event of interest for simulation in JSAF, with results reported back to JWARS and applied to affect subsequent events in its executing scenario.  In addition, using JSAF running in real time would afford an opportunity to use human players where appropriate and provide an entity-level visualization of the event using the related ModStealth application.  JSAF, in turn, benefits by having JWARS provide a campaign context.  In essence, JWARS provide the consistent campaign context for instance(s) of JSAF, which highlights events of interest.As a proof of concept, an HLA federation was defined to support the handoff of an air-to-ground mission as specified in the JWARS Air Task Order (ATO), with mission results reported back in terms of changes in the materiel assets of the attacking strike package and any enemy units engaged.  Issues encountered and discussed included representing complex scenario within a single FOM interaction, synchronizing a much faster than real time JWARS federate with a real-time, potentially human-in-the-loop JSAF, and developing sufficiently compatible representations of units, platforms, and weapons within a given scenario.  Potential extensions of this capability have been identified and are discussed.1.0 IntroductionNew weapon system concepts including Command and Control systems are evaluated and refined through the use of a wide variety of simulation systems from engagement level representations to campaign level simulations. These simulation results usually cannot be directly related to each other because the “scenarios” used for the analyses are different. An integrated simulation system using multi-level resolution modeling techniques allows a campaign level simulation to provide a proper and coherent context to the mission and engagement level simulations. It also provides the traceability of data from the engagement and mission level simulations to the campaign level analyses.   The Lockheed Maritn and CACI, Inc. team has developed a multi-level resolution simulation capability built upon an HLA federation consisting of the Joint Warfare System (JWARS) and Joint Semi-Automated Forces (JSAF).      In this system, JWARS provides the campaign level context and JSAF provides the mission level high resolution simulation.  Both JWARS and JSAF have been modified to support this capability.  The basic process is as follows.  During a simulation run, JWARS detects certain critical events for which more detailed engagement analysis is desired.  Currently critical events have been defined as air to ground attacks.  When a critical event is detected, JWARS sends a description of the event to JSAF via an HLA interaction.  JSAF then uses this description to create and execute the mission level scenario.  While the mission is being simulated in JSAF, JWARS adjusts its simulation time management and continues to simulate the portions of the campaign that have not been transferred to JSAF.  JSAF periodically updates JWARS with the status of the units that are being modeled in JSAF.  When the mission is completed JSAF transfers control of the units back to JWARS.  In this paper we discuss the techniques used to create the JWARS-JSAF federation and the techniques used to address the issues faced in multi-level resolution modeling. 2.0 JWARS-JSAF Multi-Resolution Federation OverviewThe JWARS-JSAF multi-resolution simulation capability has been built as an HLA federation.  The HLA was selected because of ease of implementation, support of existing simulation tools and the ability to access existing capabilities of the simulations.  For instance, to enable JWARS to control the time of day in JSAF requires only that JWARS publish the Time object of the JSAF FOM.   The total federation consists of JWARS, JSAF, the Federation Manager, the Caber data logger and various 3D viewers as shown in Figure 2-1. The HLA also provided a simple solution for the management of time between a strictly time managed, time constrained simulation (JWARS) and a real time simulation (JSAF).  By using synchronization points, time could be stopped in both simulations systems to allow the transfer of data between the two systems. Without the stoppage of time, time synchronization between the two simulations would be lost.Figure 2-1 Federation Diagram2.1 ScenarioAt the start of this effort, JWARS had just released the source code as unclassified but all the databases necessary to run JWARS were classified. Desiring to execute the federation in an unclassified environment, the team had to construct an unclassified JWARS scenario from scratch. A limited JWARS scenario placed in the southwest USA was picked as a starting point. The small scenario was then expanded to include a large ground engagement and air-to-ground missions. Driven by this still limited scenario, the team determined that only air-to-ground attack missions would be federated between JWARS to JSAF.  More specifically, CAS (Close Air Support) and pre-planned strike missions from land and naval assets were federated.   The federation design provides for other methods of automatically or manually determining when the data should be transferred from JWARS to JSAF.  We selected this critical event method for simplicity and to enable the system to run completely automatically.  2.2 A Note on Resolution versus FidelitySimulation systems can be measured in terms of resolution and fidelity.  Often when discussing these issues the terms are used interchangeably or incorrectly.  Resolution refers to the level of detail in the model.  Fidelity refers to how well the model predicts the actual behavior of the system.  It is incorrect to assume that higher resolution means higher fidelity.  For example using a pseudo-random number generator is a low resolution but high fidelity way to model a die roll.  One could develop a high resolution model that includes all the physics involved.  If the physics modeling introduces a bias into the die the high resolution model would be of lower fidelity.  Often it comes down to the question you seek to answer with your model.   3.0 ProtocolIn order to achieve a multi-resolution capability, a synchronization and data exchange protocol had to be developed.  This protocol needed to support communicating scenario data to from JWARS to JSAF, communicating unit status from JSAF to JWARS and synchronizing the simulations during execution.  In this section we discuss how these goals are achieved.3.1 Operating StatesDuring execution the system can be in one of three operating states; fully aggregated (FA), disaggregated (DA) and pause state.  The system is in the FA state when the entire simulation is being run in JWARS.  In FA mode the simulation clock moves ahead as fast as possible.  Typically JWARS runs several hundred times real time.  The system transfers to the DA state when one or more missions are being executed by the JSAF simulation.  During DA state JWARS and JSAF move their simulation clocks in sync with real-time.  The pause state provides the systems the necessary time to create, destroy and update simulation objects when transferring the simulation of those objects between the different resolutions.   The pause state is used in three cases.  The first is when the system is transferring between FA and DA modes.  The second case is when a critical event occurs in JWARS while the system is in DA mode.  The final case is when the system transfers from DA back to FA mode.  These pause states enable the simulations to stay synchronized to within a reasonable level while the potential time consuming transfer process is ongoing. 3.2 Coordinating Operating State ChangesInitially the team considered using HLA time management services for coordinating the transfer between different modes of operation.  Time management was rejected because the performance overhead was not needed for the level of synchronization that we were trying to achieve. The JWARS team originally designed a JWARS interface federate to minimize modifications to JWARS. In this configuration, JWARS and the Interface federates were running in the time managed, time regulating mode. The resulting run times were an order of magnitude slower than the less precise but working final design. The JWARS team also found that interfacing time constrained, time managed federates with JSAF could easily result in deadlocks between the JWARS and Interface federates. The team settled on the use of RTI sync points as the method of synchronizing the federation.  RTI sync points enable all federates in an RTI federation to achieve a known state.   A sync point can be named and given a tag.  The name and tag data fields are used to enable federates to understand the purpose of the sync point and are used in our protocol  The sync point protocol has four stages.Announce:  A federate tells the RTI it would like to achieve a sync point.Distribute: The RTI distributes the announcement to all federates.Achieving: Federates tell the RTI they have achieved the sync point.  Before achieving, the federate can perform any function it requires to achieve the sync point.Sync: The RTI informs all federates that the sync point has been achieved when all federates report achieving the sync point.3.3 Federation Object ModelThe FOM is based on the standard JSAF FOM with several additions.   In this section, we define the new objects and interactions. The key addition to the FOM was the MissionEngagement interaction.  This interaction is sent by JWARS when a critical event is detected.  It describes all the information that JSAF needs to create the mission level scenario.  When a mission has been completed JSAF must notify JWARS.  This is done by sending a MissionEnded interaction from JSAF to JWARS.  The key parameter of this interaction is the mission_id.Another important aspect of the system operation is the need for JSAF to provide unit status to JWARS during the DA operational state.  Two very similar objects were added to the FOM to represent JWARS Battlespace Entities (BSE) and JWARS Fire Control Points (FCP).  These objects enable JWARS to track the locations and resources of these JWARS objects being controlled and updated by JSAF. For example, the JWARS flight group (BSE) has a number of aircraft, weapons and fuel. JSAF will fly each aircraft individually consuming fuel and expending weapons and losing aircraft that need to be reflected back into JWARS. JWARS records when weapons are fired and aircraft are lost for post analysis.Finally JWARS was modified to publish some JSAF FOM objects.  These include the Aggregate object and the Time object.   By publishing the Aggregate object, JSAF can display the location of all the JWARS BSEs on the plan view display (PVD).  The Time object is published as the first step in sharing environmental data between JWARS and JSAF.  By publishing the Time object JWARS can set the ephemeris time in JSAF.  3.4 Protocol Use CaseUp to this point, the components of the protocol have been described, but we have not shown how those components are combined to create a multi-resolution federation.  In this section, a use case, as described in Table 3.4-1, is used to elucidate the protocol.  In the use case, two critical events occur in JWARS.  These critical events overlap, so JSAF has two missions running simultaneously.  This enables us to show all the basic permutations of the protocol.Table 3.4 -1 Protocol Use CaseEventDescriptionStateStartFederation begins with the entire simulation repre-sented in JWARSFAJWARS Detects Critical EventJWARS issues a sync point with name “Pause” and tag “FA”FAFederation SyncAll the federates achieve the sync point and JWARS Sends Mission-Engagement Interaction.PauseSimulation TransferJSAF creates the scenario described in the interaction, including JWARS BSE/FCP objectsPauseSim Transfer CompleteJSAF issues a sync point  with name “Resume” and Tag “DA”PauseFederation SyncJSAF and JWARS continue execution in real timeDAJSAF Updates BSE/FCP ObjectsJSAF periodically sends status to JWARS via these objectsDAJWARS Detects Critical EventJWARS issues a sync point with name “Pause” and tag “DA”DAFederation SyncAll the federates achieve the sync point and JWARS Sends Mission-Engagement Interaction.PauseSimulation TransferJSAF creates the scenario described in the interaction, including JWARS BSE/FCP objectsPauseSim Transfer CompleteJSAF issues a sync point  with name “Resume” and Tag “DA”PauseFederation SyncJSAF and JWARS continue execution in real timeDAMission EndsJSAF issues sync point with tag “Pause” and label “DA”DAFederation SyncAll the federates achieve the sync point and JSAF Sends MissionEnd Interaction.PauseSimulation TransferJSAF destroys objects associated with this mission.  JWARS resumes controlPauseSim Transfer CompleteJSAF issues a sync point  with name “Resume” and Tag “DA”PauseFederation SyncJSAF and JWARS continue execution in real timeDAMission EndsJSAF issues sync point with tag “Pause” and label “DA”DAFederation SyncAll the federates achieve the sync point and JSAF Sends MissionEnd Interaction.PauseSimulation TransferJSAF destroys objects associated with this mission.  JWARS resumes controlPauseSim Transfer CompleteJSAF issues a sync point  with name “Resume” and Tag “FA”PauseFederation SyncJWARS continues execution in fast as possible modeFA4.0 Multi-Resolution ChallengesMulti-Resolution modeling has a number of recognized challenges. The JSAF-JWARS federation was able to demonstrate solutions to a number of these challenges.   In this section, we highlight the challenges which we have solved and we discuss a key remaining challenge.4.1 Solved ChallengesOne of the most daunting challenges of multi-resolution modeling is that level of entity resolution between models. JWARS, unlike most aggregate models, uses an entity level representation of the warfight but restricts independent entity functionality to the aggregate level. A flight group has aircraft each with associated fuel, weapons, and sensors but does not allow the aircraft to act independently. Ground warfare is aggregated at the battalion level but each battalion is broken down into fire concentration points (allowing company level decomposition), tanks, truck, guns, fuel, water, etc. This allowed a one to one representation between JWARS aggregate entities and JSAF units.The differences in the environmental representations between models in multi-resolution modeling were another significant problem. Fortunately, JWARS and JSAF both use the global coordinate system (GCS) and the compact terrain database (CTDB) which allowed the simulations to see the same terrain and pass a common set of coordinates. The environmental interface, while limited to the coordination of ephemeris time in the current federation, should be straight forward since JWARS has a full environmental server that can supply JSAF with a full weather starting state.The JSAF-JWARS use of synchronization points with time pauses allowed the effective coordination of time between the simulations without a large amount of overhead by allowing each simulation to manage it own time in coordination with the other simulation. This required the aggregate simulation (JWARS) to change its time management at synch points.The interactions of entities between simulations in multi-resolution modeling can be a significant problem. The JSAF simulation is able to associate the simulation entities with JWARS appropriate aggregates. With this association, JWARS was modified to accept both JSAF aggregate and entity data allowing JWARS BSEs to interact with JSAF entities during the simulation.Successful multi-resolution modeling puts unique requirements on both the aggregate and entity level simulations beside common issues such as coordinate systems, environment, etc. The aggregate level simulation must carry a representation of all the entities to be represented in the entity level simulation and be able to change time management schemes to match the entity level simulation. The entity level simulation must be able to be completely populated by the aggregate simulation and cleanup afterwards. It also needs to be able to pause time to allow entities to be able to created and destroyed without affecting time synchronization between the simulations.4.2 A Key Open ChallengeOne of the most difficult aspects of transferring simulation between a low resolution model and a high resolution model is that all the information required by the high level resolution model will not be known by the low level resolution model.  If it was there would be no difference in resolution!   In the development of the JWARS-JSAF federation, this issue is most acute when JSAF is attempting to place entities on the terrain.  This action requires JSAF to generate the position of each individual entity from the single location provided by JWARS.Entity placement is currently performed in a simplistic manner.  JWARS provides JSAF with a unit location and the number and types of vehicles in the unit.  JSAF then uses its standard formation algorithm to calculate the vehicle locations around the unit location.  The current placement algorithm does not consider the terrain.  This leads to situations where vehicles are placed in poor terrain locations.   For example, our terrain location is mountainous and vehicles are often placed on slopes which they would not attempt in the real world.  Other times units end up being separated by physical obstacles, such as a river.  The placement algorithm also does not consider the layout of vehicles from other units.    This leads to situations where vehicles are placed on top of each other.  We handled this situation through adjusting the aggregate level scenario to reduce the likelihood of this happening.The solution to these problems must be addressed by both the aggregate and entity level simulations.  At the aggregate level, unit locations must be sensible in the context of the entity level terrain.  Since JSAF and JWARS use the same terrain format this should be possible.  The aggregate level simulation should provide additional information about the formation of the units.  For example did the units fight into their current positions or are they in an encampment.  More information along these lines will enable the entity level simulation make intelligent decisions about the vehicle placement.  At the entity level, vehicle placement can be improved by adding complex terrain reasoning and more complex formation computation.  The terrain reasoning needs to consider natural and human obstacles to determine appropriate areas to place vehicles.  Formation algorithms must understand not only static formation shapes such as line or wedge but also dynamic formation modifiers such as convoy or fighting.  Formation templates or placement algorithms need to be agile in the face of terrain and other constraints.  Research in this area would not only benefit multi-resolution simulation, but it will also benefit rapid and automatic scenario generation.5.0 ConclusionThe JWARS-JSAF federation has already demonstrated that the concept of multi-level resolution modeling is both feasible and desirable. The adaptability of both the JSAF and JWARS models to handle different federation FOMs will allow future enhancements of the federation to be added in an incremental fashion. We have already integrated human in the loop simulators and C4I systems into this federation.  The entity aggregate representation in JWARS makes it an ideal candidate for driving the campaign level context for mission level simulations, while the wide range of models available in JSAF makes it an ideal candidate for playing the scenario at the entity level.  A single ten day campaign scenario presented JSAF with 26 unique mission engagements. The much faster than real time JWARS can get to a particular engagement with a few minutes and present man-in-the-loop training events to JSAF operator who can watch the outcome of his decisions on the rest of the campaign and have the answer in minutes. The human can then try different alternatives.  We hope to continue to improve this federation to support a wide variety of future weapon systems concept development..6.0 AcknowledgmentsThe JSAF-JWARS federation was developed by Lockheed Martin in collaboration with CACI as a first step to enable Lockheed Martin companies and customers to develop and evaluate advanced system concepts.  This work is being done under the auspices of Lockheed Martin’s Center for Innovation (the Lighthouse).   A core modeling and simulation capability is a key component of the Lighthouse.  The team was tasked to provide a core M&S capability to enable rigorous analysis and human in the loop experimentation to be performed in a joint context.  In addition, the core needed to be unique and not duplicate existing capabilities within the corporation.  Lockheed Martin IS&S selected JWARS and JSAF as the core models to support these requirements.    ABOUT THE AUTHORSDavid Macannuco is a Senior Staff Software Engineer with Lockheed Martin’s Advanced Simulation Center in Burlington, Massachusetts.  Dave is the M&S Software Lead for the Center for Innovation.  Dave has been involved in many modeling and simulation efforts focusing on CGF and HLA based technologies.Ronald Painter is the Chief Scientist for the Simulation and Test Division Group of CACI, Inc. in Arlington, Virginia. He is the technical lead for JWARS and provides simulation architecture technical guidance for all the simulation architecture implementations and distributed simulation efforts of the division. Integrated HLA into the JWARS architecture and worked with DMSO to have JWARS pass HLA certification processJames W. Jones, III is a Software Engineer with the Simulation and Test Division Group of CACI, Inc. in Arlington, Virginia. He has extensive experience designing and implementing HLA federations, is a part of CACI's Architecture for Reuse (ARCHR)development team and has made significant contributions to expanding the signal types represented in CECOM's SIGINT Test BedCarole Snow is a Staff Software Engineer with Lockheed Martin's Advanced Simulation Center in Suffolk, Virginia.  Carole is currently involved with development and integration of the JWARS-JSAF Federation at the Center for Innovation in Suffolk.