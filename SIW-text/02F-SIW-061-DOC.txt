JVB Federation DesignSusan HarkriderVirtual Technology Corporation5400 Shawnee RoadSuite 203Alexandria, VA 22312-2300 HYPERLINK "mailto:sharkrider@virtc.com" sharkrider@virtc.comDr. Joseph McDonnellDynamic Animation Systems6035 Burke Centre ParkwaySuite 200Burke, VA 22015 HYPERLINK "mailto:jmcdonne@d-a-s.com" jmcdonne@d-a-s.comDr. Wesley BraudawaySAIC1100 N. Glebe Rd. STE 1100Arlington, VA 22201 HYPERLINK "mailto:wbraudaway@sito.saic.com" wbraudaway@sito.saic.comKeywords: JVB, HLA, Federation, OF/FCS, SMARTAbstract: The Joint Virtual Battlespace (JVB) is a collaborative simulation environment that supports a variety of aggregate, entity-level, and man-in-the-loop simulation functions and services.  JVB is sponsored by the U.S. Army to support the investigation of key Objective Force/Future Combat System (OF/FCS) concepts and technologies in a way that also addresses key M&S issues, such as the scarcity of simulation systems that support the SMART (Simulation and Modeling for Acquisition, Requirements and Training) initiative. This paper describes how the JVB design supports the SMART process and life cycle by reusing modeling and simulation information and by sharing standard algorithms. The paper then discusses how the JVB distributed simulation environment allows the investigation of future combat operations with varying levels of resolution and fidelity to best support analysis objectives. The paper concludes with a discussion of the application of the JVB architecture to support multiple objectives: the Analysis of Alternatives (AoA) C4ISR Experiment; the FCS Lead Systems Integrator (LSI) design/engineering tradeoffs; and the Joint Synthetic Battlespace (JSB) FOM development efforts.IntroductionJVB was initiated by the Joint Precision Strike Demonstration (JPSD) Project Office, which is working in conjunction with industry and numerous DoD partners, to provide a Simulation Based Acquisition capability. The goal of the program is to provide the Army with a set of SMART tools that supports full spectrum analysis of system designs and operational concepts while reducing risk and reducing acquisition timelines.JVB is a simulation environment that supports a variety of aggregate, entity-level and man-in-the-loop simulation functions and services. The JVB design reuses modeling and simulation information and shares standard algorithms. This reuse is the primary means by which JVB satisfies the SMART initiative, all within a flexible operational environment. The final capability will be a flexible, robust toolbox for evaluation of concepts, technologies, and proposals. JVB will be capable of supporting highest fidelity digital terrain, environmental effects, and physics based modeling. It will be capable of supporting data collection and analysis, and systems trades. JVB will be capable of exploring C4ISR with live/constructive/virtual systems, and will be capable of supporting end-to-end exercises at entity level resolution. [1]Federation Design The JVB component architecture is unique in its ability to integrate models of varying fidelity to enable evaluation and to facilitate synergy of components and subsystems. This component-based framework supports the FCS concept of a system of systems, rather than the current M&S focus on individual systems. This beneficial approach provides a SMART service-based component environment for virtual prototyping, experimentation, demonstration, and analysis required to support a SMART integrator. This integration approach is shown in Figure 1 below.Figure 1. JVB Integration ApproachFederate SelectionThe JVB federation design process began with the identification, evaluation, and selection of federates, as recommended by the FEDEP. In this particular situation, many federates were identified by the federation sponsor to satisfy the program objectives within the system architecture. The federate list included some legacy simulations, such as Eagle and OneSAF Test Bed (OTB), as well as some component level service development, in particular, a new command, control, communications grid component. At the onset of JVB, the federation was quite large with a multitude of federates, but as the federation purpose and objectives were reviewed, the set of components have been pruned. JVB’s architecture uses the High-Level Architecture (HLA) to implement its dynamic behavior as federate component interactions.   With this strategy, all components in the architecture are implemented as HLA federates and their communication is implemented using the HLA Federation Object Model and Run-time Infrastructure. JVB is a flexible system designed to integrate the best of what is available, building only what is absolutely necessary.  (See Table 1 below for a discussion of the services and models currently implemented.)From the beginning, JVB was designed to be heavily modular (i.e., minimized coupling) to allow the insertion of new models with minimal disruption to the existing framework.  This also minimizes maintenance and sustainment costs.  The flexibility this approach brings is a key component of JVB.System Architecture This section describes the system view of the JVB architecture.  The system view is described in terms of the organization of its functional components and an abstract representation of the system’s dynamic behavior.   More detailed description of these components and their interactions is contained in the System Detailed Description of the JVB Framework document. [2]As shown in Figure 2, JVB was specifically designed as a component framework to provide the basis for using it as an extensible tool supporting a variety of military operational studies and operational system approach analyses.  Each layer in the component framework contains a base set of component classes that can be used, extended, or replaced as needed to support an operational study.  The framework is divided into the layers of System Control, Command-Control-Communications, Platforms, and Simulation Services.  The System Control layer provides the system tools to define and control an execution event.  The Command-Control-Communication (C3) layer provides both the organization behavior implementation (aggregate and entity) and the common decision service components.  The Platforms component layer provides the simulation of physical organizations and entities within the simulation environment.  Finally, the Simulation Services provide a variety of simulation models needed to implement a simulation in the military operational environment. Figure 2. JVB System Component FrameworkFederation design trade studies resulted in the current list of federates as shown in Table 1 below. Time management, federation management, runtime performance, and implementation approach characteristics were the criteria for federate selection. Functionality allocation was made in coordination with the system architecture. The federation concept was to run primarily in a time managed mode, and the FOM was developed to support this capability. The initial FOM was based on the Aerial Common Sensor (ACS) Program’s FOM, but has evolved over time to address the specific requirements of JVB. (The FOMs will be merged in the Fall 2002.) The ACS program, also sponsored by the JPSD program office, is another component-based implementation of SMART initiatives.Federation FunctionalityThe JVB federation functionality was allocated to meet multiple criteria: completion of the identified scenario; operational requirements of the federation; and data collection and analysis requirements. The scenarios have been chosen to meet the OF/FCS analysis requirements, and focus on force effectiveness given improved communications topologies within a Unit of Action (UA). The operational requirements consist of pre-exercise operations, federation execution, and post-exercise operations. These processes enable construction of the component-based framework in a repeatable, robust manner.Pre-Exercise OperationsDuring pre-exercise operations, a JVB user prepares a study plan identifying specific elements of analysis. An aggregate force lay down then emerges from this plan. This aggregation, usually in the form of an Eagle scenario, along with the EEA, MOE and MOP, are the basis for the overall operational context of the study.  The JVB Scenario Definition Tool is then used to transform the scenario from the aggregate with global behaviors to entities with local behavior.  These activities are completed prior to exercise start. The pre-exercise components of the operational architecture are used to prepare the JVB exercise environment for executing an exercise.  This includes development of the exercise concept, developing and configuring the exercise components, selecting or collecting the appropriate exercise data, developing the analysis approach, and developing the data collection strategy.  The exercise concept must identify the operational capabilities of JVB that are needed to produce the analysis products to satisfy the exercise objectives. Based on the objectives and constraints defined in the exercise concept, the JVB team executes the standard HLA federation development and execution process. This includes the design of the federation as it will be executed specifically for an exercise. Since JVB is a testbed that incorporates legacy as well as new models and simulations, each with their own requirements for input data, the potential for data mismatch is great.  JVB’s data processes provide records of the standard audit trails for each type of input data, including the source agency, the processes required to transform data into the formats required by the using federate, and the agencies charged with doing the transformation.The scenario design and implementation process includes not only the lay-down of units on the synthetic battlefield, order of battle, and unit roles, but also terrain databases, weather and other environmental parameters.  It is expected that the JVB user, in conjunction with the government stakeholders, will define the scenario to include those elements designed to achieve the objectives of the exercise such as the opposing force structure and capability, the Object Force unit composition, the C4ISR architecture and other relevant FCS specific organization and equipment capabilities.Exercise Execution During exercise execution, individual entities maneuver around the battle space and are tracked by Eagle.  Eagle then updates the position of aggregate units based on the location of the unit leader.  Various attributes of individual entities may be represented in different ways, depending on the representation required to meet the study goals.  Command and control of the entities is the responsibility of the C3 grid.  It synthesizes all reports and applies the appropriate response based on the stimuli.  The strength of the C3 grid is that the rules are defined by the user and can be configured to concentrate on specific TTP or behaviors at any level.  The C3 Grid, as part of the static view of the current JVB architecture is shown in Figure 3.  The static view represents the capabilities of the JVB architecture by the integration of existing models (Eagle and OTB for example) into a robust environment with the high fidelity digital terrain, dynamic environmental effects and physics-based modeling.  This figure shows an abstract concept of how the framework allows the integrated models to pass data between themselves and share a common battlespace.  As illustrated, the “Eagle” system (or an equivalent simulation) provides an aggregate context of the scenario to include the terrain, control measures and similar attributes.  The “C3 Grid” components are a programmable environment that will accommodate the complexity of the C4ISR technology demonstrations.  Among other virtual entity platforms, the “OTB” system represents the programmable combat vehicles of the Combat Systems technology demonstrations.For a well-defined exercise, any combination of models and tools can be made to form an instance of JVB. The general functionality of the models and tools available within the JBV framework are described in Table 1. Asterisked components have been integrated into the JVB architecture, but are not currently in use.JVB ComponentFunctionalitySimulation Management and AnalysishlaControlCreates and manages federation executionScenario DefinitionGenerates the scenario file used by hlaControl to initiate a JVB scenario runhlaResultsData management system used to collect, store, retrieve and playback federation dataAnalysis Tool (hlaEval)Analyzes simulation results; supports build, store and display results of queriesFCSViewProvides a 3-D visualization of a federation execution including terrain features, entities, sensor area of interest (AOI), detections, routes, and detonationsCommand and Control View (C2View)Provides a plan view display or graphical, two-dimensional view, including object state data, of a federation executionTactical Command, Control and Communications (C3)Grid Java RTI FrameworkProvides an abstraction layer between the federate application logic and the RTIRule-driven InfrastructureModels C2 node process, bridging OTB and Eagle, by translating Eagle unit tasking into platform commandsThe Battalion Federate [Tactical Unit of Action (TUoA)]Issues high-level C2 tasking to Company federateThe Company Federate [Operational Unit Cell (OUC)]Acts directly or tasks platoon units in response to situation or Battalion directionThe Platoon Federate [Functional Unit Cell (FUC)]Responds to situation state and Company direction in controlling the behavior of platform and lower level entitiesAggregate Definition Service (ADS)Creates and reports a perceived operational picture of variable quality that provides the context for C2 decisions implemented in the echelon based federatesMessage Transceiver Service (MTS)Models radio communications for the federation executionHuman Performance Model (HPM)*Tracks and analyzes the human response to activity occurring within the C3 GridDynamic Organization Service (DOS)Describes tactical organizations by command and functional structuresBattlefield Geometry Service (BGS)Generates battlefield geometry objects representing a given area or a segment, simulated field of view, Area of Interest (AOI), and battlefield linesNetworked Fire Service (NFS)As a component of the targeting process, optimizes the weapons/target mix based on cost/benefit, timeliness, and weapon effectivenessOrganic Connection Service (OCS)Translates between groups of component interactions, providing an abstraction layer between C3 Grid component interactions and the rest of the architectureMobility Server (NRMM) *Provides NRMM based limitations of ground platform speedsRoute Planning Service (RPS) *Generates road network derived routes between two locations consisting of waypoints, waypoint achievement time, and enemy avoidance wait timePlatformsEagleModels operational-level ground and air-ground combat operations using aggregate-level military units and explicitly representing C2 processesSystem Laydown and Emitter (SLE)A pseudo-disaggregation model that publishes platforms, radios, and radars based on Eagle aggregate unitsOne Semi-Automated-Forces (ONESAF) Testbed Baseline (OTB)Creates and controls platform entities on the simulated battlefieldUMBRA *Models unmanned ground vehicle (UGV) and unmanned aerial vehicle (UAV) platformsRemote Piloted Vehicle (RPV) *human control interface for a representative simulated Tactical UAV (TUAV) system providing both pre-mission planning and tactical situational awareness Rogue Warrior *Human-in-the-loop extension of FCSViewObservable Server *Provides observable signature data for all platforms in the JVB federationSimulation ServicesAcoustic/Seismic Propagation *Provides sound radiation and vibration frequencies between federation objects (represented sensors, emitters, and target platforms) to each respective sensor componentEO/IR Propagation *Computes the propagation of entity emissions to a specific call of sensor systemsRF Propagation *Provides IMINT/ELINT/COMINT radio frequency links between simulated objects representing sensors, emitters, and target platformsAcoustic Sensor *Models acoustic sensor behaviorSeismic Sensor *Models seismic sensor behaviorEO/IR Sensor *Models electro-optical and infrared sensor behaviorRF Sensor *Models IMINT, ELINT, and COMINT sensor behaviorPaint the Night (PTN) *Provides a high resolution EO/IR scene of a target vehicle as input to a sensor system display for human-in-the-loop considerationEffectsNuclear, Chemical, Biological, Radiological (NCBR) *Models NCBR effectsLethality/Vulnerability Server *Generates damage reports for every weapon fire / detonation event pairMissile Server *Performs BEWSS/IDEAAS based missile behavior modelingTable 1. JVB Component FunctionalityPost-Exercise OperationsAs shown in Table 1, JVB utilizes a suite of visualization and analysis tools for post exercise data reduction and analysis.  The analyst can use these tools to evaluate MOP as well as search for insight on what variables to modify for future exercise operations. New functionality required to support specific data elements can be added to existing federates, or provided by new federates. The process of determining the best mix of components is collaborative and iterative.Through its data collection strategy, JVB has the capability to support a wide range of analytical studies ranging from traditional attrition analysis to network centric force effectiveness.  The distributed nature of the JVB system architecture enables the collection of many discrete interactions that create a simulation event.  This distributed design allows for high-resolution data collection and definition of the sensing chain, kill chain, and command and control messages and information related to federate tasking and engagements.  Causality can be defined and attributed to specific component systems, entities, and/or operational organizations.  The data collection strategy is made possible by ensuring the time line of FOM interactions and object updates can be correlated and linked based on their participation in a simulated event sequence.  These interactions and object updates include physics-based events, commands, and information flow.Based on the operational concepts to be analyzed and the capabilities of the JVB components to make simulated interactions public, an analysis plan is developed to define the Measures of Effectiveness (MOE) and Measures of Performance (MOP). The analysis plan also describes the method for deriving values, which then creates requirements for any additional tools needed within the JVB architecture. A detailed description of the JVB data analysis process is contained in “The Use of Analysis Requirements in the Development of the JVB Federation”. [3]Federation Execution PlanThe common understanding of the goals for development, test and execution of the JVB federation is documented in several places, as referenced throughout this paper. These federation design documents form the basis for a series of test and integration plans, in which specific tasks, milestones, and schedule are identified for each federate. The test and integration plans identify the network, federate hardware and software configurations, as well as federation details such as the FOM version, RTI version, scenario file, and configuration management strategy.The existing JVB framework was composed, tested and demonstrated through a series of integration events based on the test and integration plans. The purpose of the events is to demonstrate the added functionality and fidelity as it is developed via rapid software prototyping. The integration events are typically held once per quarter, for a period of six weeks. The integration events are conducted in a typical test and integration methodology via unit and system level testing, followed by full integration of the components within the JVB federation. The integration events are conducted on a local area network using a wide variety of hardware and operating systems. As integration events are completed, a software baseline is declared and configuration managed by branching the CVS code. At that point, the JVB framework can be established at other facilities as required. JVB ApplicationsBecause of its relevance to the SMART initiative, the JVB is applicable to analysis, experimentation, and evaluation of alternatives. Since JVB is a component-based framework, specific requirements are dependent on customer objectives. As such, the JVB has applicability to several efforts, including the Objective Force (OF)/Future Combat System (FCS) C4ISR Experiment, the FCS Lead Systems Integrator (LSI) Capstone Demonstration, and the Joint Synthetic Battlespace (JSB). Each of these efforts utilizes the JVB architecture in slightly different manners, based on the customer objectives. These efforts are described below.OF/FCS C4ISR Experiment JVB will participate in the Objective Force (OF)/Future Combat System (FCS) C4ISR Experiment at the Unit of Action Maneuver Battle Lab (UAMBL) in Ft.Knox, KY in December of this year. The experiment is intended to provide input to the FCS Analysis of Alternatives and the Operational and Objective (O&O) analysis. Both of these, in turn, will provide input to the FCS Milestone B decision. The three objectives of the OF/FCS C4ISR experiment are to:Provide insights on the ability of the proposed C4ISR architecture to enable battle command and the impact of that architecture on force effectiveness.Provide insights into the selection, training and development of future FCS unit leaders and staff.Serve as the initial experiment in a series of Unit of Action (UA) developmental efforts that will culminate in the establishment of a virtual UA test bed at Ft. Knox, KY. The experiment will implement a derivative of the Caspian Sea scenario, in which a U.S. led Combined Joint Task Force (CJTF) is formed to rescue hostages, defeat an insurgent dissident movement, and restore the host nation’s legitimate government. The lead ground element of that CJTF is a Unit of Employment (UE) and the UA under investigation is one of three UAs in that UE. The experiment will be conducted in a human-in-the-loop, simulation supported, secure environment. The experiment will primarily focus on the issues of battle command and how it affects measures of force effectiveness. The experiment will be conducted using a typical analytic methodology, i.e., define issues, sub-issues, and essential elements of analysis, define scenario and experiment design, conduct the experiment, analyze the collected data and synthesize results. [3]FCS LSI Capstone DemonstrationThe JVB architecture will form the basis for the FCS LSI Capstone Demonstration, scheduled to occur in March 2003.  The initial capstone demonstration plans to utilize the Joint Virtual Battlespace [JVB] capability at Ft Knox.  It is the final simulation-based demonstration to be presented during the Concept and Technology Demonstration (CTD) phase.  The demo will tie together and present to the customer a representation of the Block I FCS concept in an operational context.  This includes the platforms, weapon systems, C4ISR architecture, System-of-Systems (SoS) architecture, and the corresponding interfaces and interactions. The capstone demonstration will be the key event in which the Block I FCS concepts developed throughout the concept and technology demonstration phase of the program are examined.  The results of this demonstration will illustrate the basis for the gating decision required to move the FCS program into the System Design Development Phase, in which the actual deployable systems are designed and prototyped. Therefore, the objective of the Capstone is to demonstrate the merged capabilities and results from the CTD experiments to provide evidence of Block I FCS concept’s combat effectiveness to provide the FCS Program with supporting rationale to proceed to a successful ASARC and DAB Milestone B decision. The objective will be achieved by simulating a full UA in battle within the JVB interactive synthetic environment. That is, the Capstone demonstration incorporates the entire SoS concept and approach.  The key capabilities to be demonstrated include: robot control for the employment of ARVs; command and control information flow through a vertical slice of the UA; and coordinated fires through the netted fire approach.The goals of the demonstration are to:Reduce the integration risk for the Block I FCS concept by representing and illustrating the composition and organization of the Block I FCS conceptual Unit of Action (UoA) in an operational, force on force context,Demonstrate vertical and horizontal collaboration throughout the echelons of the UoA,Incorporate war fighters using C2 devices over a complete vertical slice of the command echelon to demonstrate C2 and visualization tools to provide COP/CROP,Demonstrate that the critical technology capabilities, as shown in the Critical Technology Demonstrations, provide functionality to yield an effective fighting force,Demonstrate the overall operational capabilities of the Block I FCS concept.For the Capstone demonstration, the JVB architecture provides the LSI the ability to implement and integrate its C4ISR concept within the C3 Grid.  Additionally, the capabilities of LSI’s Block I FCS vehicles, sensors, and robots can be implemented and integrated within the OTB system.  Using this approach and Eagle to define the UoA context, this implementation will provide the Capstone demonstration.Joint Synthetic Battlespace The Air Force’s Joint Synthetic Battlespace (JSB) is a distributed simulation program that has established an ongoing collaboration with the JVB and Aerial Common Sensor (ACS) programs.  Like the two Army programs, JSB has adopted a component based architecture. The JSB primarily differs in the scope and depth of their modeling effort.  The JSB program is focusing on modeling the interaction between targets, sensors, and the environment at a significantly higher level of fidelity than JVB.  Not surprisingly, JSB is also concentrating more heavily on modeling airborne entities and on air-to-ground and ground-to-air interactions. Despite the difference in focus, program designers meet regularly to exchange documents, software, and insights gained from their various activities.Like JVB, JSB has also taken the ACS FOM as their starting point.  The JSB program has extended this FOM in a number of areas.  Some of their extensions will enable them to model dynamic and heterogeneous weather to better support the specific sensor models that they are planning to use.  The JSB federation developers have made conscious decisions to maintain consistency with the ACS FOM when possible.The JSB program is also continuing to collaborate with the JVB and ACS programs to foster the exchange and reuse of common simulation components.  As examples, JSB is integrating an MTI-SAR sensor model initially developed for the ACS CE phase, the ACS and JVB programs are planning to use the higher fidelity propagation federate being developed by JSB, JVB is planning to use the same versions of JointSAF as JSB to model Air Force ISR platforms.  JSB is also integrating the SIGINT model developed by PM Prophet, and as a direct result of this, the ACS and JVB programs are also planning to integrate the Prophet model into their environments.References[1] JVB Various: “System Architecture Description for the Joint Virtual Battlespace Framework”, 8 March 2002.[2] JVB Various: “System Detailed Description for the Joint Virtual Battlespace Framework”, 25 March 2002.[3] Eiserman, Dr. Gary and Harkrider, Susan: “The Use of Analysis Requirements in the Development of the JVB Federation”, 2002 SMART Conference, Salt Lake City, UT. [4] TRAC Ft. Leavenworth: “Objective Force (OF)/Future Combat System (FCS) C4ISR Experiment Analysis Plan, 6 June 2002.[5] Braudaway, Dr. Wesley: “Future Combat System Demonstration Plan: CTD Capstone Demonstration” (draft), 28 June 2002.Author BiographiesSUSAN HARKRIDER is a systems engineer for Virtual Technology Corporation. She is the lead for test and integration efforts at the JVB. Over the past thirteen years, she has been responsible for a multitude of M&S and training efforts, including the Close Combat Tactical Trainer (CCTT) and various HLA infrastructure tools. She received her MSE and BSE from the University of Central Florida.JOSEPH MCDONNELL, Ph.D. is a Principal Scientist with Dynamic Animation Systems (DAS).  He is currently the Chief Engineer and Federate Development Team Lead for the Joint Virtual Battlespace (JVB) Program.  Previously he has supported NVESD's Countermine Division, the Warfighter Analysis andIntegration Center and FEMA's National Fire Academy. Dr. McDonnell received his Ph.D. in Mathematics from the University of Virginia.WESLEY BRAUDAWAY, Ph.D. is a software systems architect for the Applied Simulation Technology Division within SAIC's TRG Group in Arlington, VA.  Dr. Braudaway is also the Capstone Demonstration lead for the FCS Lead System Integrator program.  He has been involved in several Simulation-based Acquisition environment efforts including JVB and Aerial Common Sensor programs and has been involved in several Computer Generated Forces related research and development projects.  Dr. Braudaway received his Ph.D. from Rutgers University's Computer Science Department and has been actively involved in the M&S community since 1991.Figure 3. JVB System Static View EMBED PowerPoint.Slide.8   EMBED PowerPoint.Slide.8  