Enabling Proprietary Information Protection inSimulation Based Acquisition EnvironmentsKenneth L. SullivanVeridian10560 Arrowhead DriveFairfax, VA 22030703-277-1797 HYPERLINK mailto:ken.sullivan@veridian.com ken.sullivan@veridian.com, Keywords:SBA Process, Product Models Repository Security, Configuration Management, DPD data integrity, Proprietary data Protection, Classified Information Protection, Multiple Levels of Security, Proprietary Data TransferABSTRACT: In large collaborative Simulation Based Acquisition environments, the protection of corporate proprietary, or restricted/ classified information is often difficult and at cross purposes with the need to share information.  While systems are set up to provide a project general classification level protection, the limiting of information to specific individuals or partners is hard to control.  Through the use of Persistent Access Control technology, a very precise level of control can be exercised both for the simulation environment as well as collaborative or documentation applications.  This paper addresses the technology and discusses its applications in SBA simulations as well as administrative environments and shows how end recipient users can be controlled in their subsequent use of the information.1. IntroductionThe Security threat to SBA The Simulation Based Acquisition (SBA) Functional Description [6] identifies that one of the most challenging tasks of SBA is establishing the rules and mechanisms that will protect proprietary, restricted, and classified information within the Product Models Repository and, indeed, the entire SBA process and architecture itself.  For SBA to be successful, the vast data sources required for major acquisitions must be readily available to all participants in the form and function that each participant needs.  Accessibility, however, flies in the face of many necessary participants.  Corporations need to protect their sensitive or proprietary production capabilities or cost data. Intelligence organizations need to protect sensitive sources, methods and assessments, and government acquisition officials need to restrict data and assessments that should not be shared with every individual, contractor, or organization involved in a SBA.During the development of the Digital Product Description  (DPD) or the development of environmental simulations or other simulations critical to the evolution of the DPD, it is also most important that all evaluators and participants use the same, or latest evolved, simulations and environments for their judgements.  Without some controlling configuration management mechanism in place across the SBA environment, there is a high probability for miss-correlation in assessments and the use of improperly VV&A’ed components to be used.  New military capabilities are often classified, with component subsystems sometimes needing the additional security of special compartments.  In an enterprise of thousands of people that might need to be involved in a large SBA, it is very important that knowledge or information on certain components not be made available to some individuals or groups even within the SBA enterprise.What is needed is an SBA Infrastructure that: Allows the participants, repository managers, or Program Managers to designate which organizations or individuals should have access to provided data, Provides a means to prevent access to that data by unauthorized people, Protects the information or simulation data at multiple security levels not only when it is the repository, but in transit as well,Provides a dynamic configuration management capability for both simulations and data,Protects evolving simulations and data from unauthorized alterations, andEnforces and limits authorized users to just their designated uses of the furnished information.1.2  A Technology SolutionA recently patented security technology designed for other information assurance applications appears to be very relevant for SBA simulation, collaboration systems, and database environments.  This technology, called Persistent Access Control (PAC), trade named VeriFIDES™, is being developed to operate independently from software applications and can be implemented either in a software only or machine-enforced mode depending on the level of security required.This paper will first describe the PAC concept and some of the implementation details and then explore some typical SBA simulation, data, configuration management, and software protection applications.2. Persistent Access Control (PAC) ConceptThe PAC technology is a combination of a trusted hardware base and a low overhead “license management” mechanism that ensures persistent control of digital data.  Information requiring protection is encrypted during creation and remains encrypted at all times except when being processed in active memory by an authorized recipient. The system allows the open distribution of data (“content”) in a protected (encrypted) form. Thus users may be sent data by a distributor (the “push” model) or may retrieve them from a server (the “pull” model) (see Fig. 1). The transmission medium is irrelevant. In order to access the data an electronic license, called a “ticket”, must be present. The ticket contains the information necessary to determine whether or not an access is permitted, as well as the information needed to decrypt the data. The “access control mechanism”, in the user’s PC, controls all input/output operations and, using the information in the license, allows or disallows specific accesses. Fig. 1. Operational ConceptTransactions within a repository or simulation environment, or between simulations, focus on access control. The content owner, who creates data and specifies the level of protection or authorizations, distributes data and licenses to other specific users. If the license permits, derivative products may be redistributed by the receiving participants to others. The secondary recipients, however, would each need to obtain a license—either from the originator or from the creator of the derivative product, depending on the license arrangements made between the originator and the re-distributor.Executable software that is aware of the access control mechanism can interrogate the mechanism to determine whether or not a feature is allowed by the license controlling the program. This enables distribution of multiple compartments and security levels of software conveniently within a single package.3. Implementation Overview The objective of the PAC system is to retain control of data for the data owner while allowing other participants freedom to utilize data to which they are granted access. The basic concept is to secure data by encryption whenever they are external to the trusted hardware system. When data are within the system they may be decrypted and made available for processing or reviewing by the user (as the owner authorizes). The system intercedes to ensure that no data may be released (output) unless the user is authorized to do so. The mechanism for capturing the federate data owner’s limits and delivering them to the user’s system is the electronic license or “ticket”. Without a license a user cannot access the data—the key is not available.3.1 EncryptionProtected data are encrypted when data is created or brought under protection and remains so when they are outside the trusted hardware system. The data owner selects a secret key and an encryption algorithm. The secret key will not be exposed to the user. It will be used to decrypt the data only within the trusted hardware. Because protected data are encrypted they may be openly transmitted and distributed.Fig.  2. Data File StructureThe data owner encrypts the data elements that are to be protected (see Fig. 2). A header record is prefixed to the file or simulation RTI data. The header record contains an identifier denoting the file’s protected status. This header includes the unencrypted name of the file, the structure of the file—which parts are plain text and which parts are protected (encrypted), and an encrypted hash value (of the file) that is used to bind the header to the encrypted file. This binding ensures that the only the valid header can be associated with the encrypted file.A file is recognized as containing protected data when a header record precedes it. Removal of the header record will prevent the system from recognizing a file as protected. Although this may appear to be vulnerability it is not. Without a header the access mechanism will not recognize the data as protected and will not decrypt the file. Only the data owner can digitally sign and bind a header to a protected file that will match a license created by the data owner and contain the secret key to decrypt the protected file. 3.2 Electronic LicenseThe electronic license contains the name of the file, a list of access permissions, and the secret key needed to decipher the encrypted file (see Figure 3). One or more of the access permissions may require that the license be signed by the data owner or by other parties. The license may also contain or require other licenses or digital certificates that need to be obtained from other data owners. The license might also require the presence of a token, e.g., a specific Fortezza card or other biometric identifier.Fig. 3. License StructureThe license is encrypted and then prefixed with the plain text file name. Doing so allows the system rapidly to locate a license. The plain text name is used only to improve performance. The name within the encrypted license is used to verify the identity of the license. The key used by the data owner to encrypt the electronic license is described later.3.3 Trusted Hardware SystemThe security of the system depends on the hardware to retain protected data within the system unless the data owner (as expressed in one of the permissions granted in the online license) permits release. To simplify this exposition, the ubiquitous personal computer is used as the frame of reference. Each PC will contain a unique private key stored securely and an associated public key. The public key is used to encrypt electronic licenses intended for the PC. The trusted hardware system also protects the cryptographic variables—the PC’s private key and any secret keys used to decrypt content--they are never made available to the user. 4. Access Control MechanismThe firmware (in the case of the use of a BIOS) or the drivers and the I/O elements of the OS that provides basic services to application programs are effectively replaced by new modules including an access control mechanism that mediates all requests for input or output (see Figure 4). Any request for an input or output operation from an application is handled by the new I/O routines including the access control mechanism. Therefore, any attempt directly to execute input or output operations results in the execution of the access control mechanism.Fig. 4. Access Control MechanismImplementing this would depend on the establishing of a secure environment (e.g., memory protection, privileged instruction limitations, etc.). and would be based on a trusted operating system (at least with respect to I/O routines). Additionally, each new operating system release (and each different operating system) would require coordination and verification of the access control software.The preferred implementation approach, that is independent of the operating system, is for the access mechanism to be part of a "hypervisor", an operating system-like program that creates a virtual system image (in the same fashion as the operating system creates a virtual memory image for application programs). The hypervisor is interposed between the operating system and the hardware--and is unseen by the operating system  (Figure 5). Fig. 5. Hypervisor Access Control MechanismThe resulting virtual system appears to function as the actual PC system except that all input or output operations and all privileged operations are trapped and analyzed by the hypervisor. Any attempt directly to execute input or output operations results in control being passed to the access control mechanism where the restrictions specified in the electronic license are enforced.The specific actions taken by the access control mechanism are described below. Because the access mechanism has no awareness of application tasks it must treat the entire computer as if only one task were running. This means that the access restrictions imposed on any active task are applied to each of the tasks in the system. When a trusted, multi-thread OS is available, true Multi-Level Security system can be achieved with this approach.In either the BIOS or Hypervisor approach, the access control mechanism, although implemented in software, is protected by hardware and is part of the trusted hardware system. The access control mechanism ensures that protected data are accessed only as provided in the electronic license.  The access control mechanism will be small and can be made secure.5. Trusted hardware5.1	Tamper-Detecting EnclosureThe system as described so far is vulnerable to physical intrusion. A determined thief can obtain the plain text version of a file by capturing the bit stream as it is transferred to memory. Alternately, the thief could reset the system and then start a program that would capture the contents of RAM. Protection from this class of attack requires barring entry to the system.A tamper-detecting enclosure provides a signal shortly before an attacker can gain physical access to the system. When tampering is detected, the private key, secret keys, and plain text data are destroyed.  The tamper–detecting enclosure is small and could be a processor case lock or a copper mesh envelope around the critical processing area of circuit board. 5.2 Non-Volatile StorageTo protect against a “sledge hammer attack” where the PC might be destroyed in order to gain unfettered access to the hard disk, all protected data (as indicated by the system-wide flag) are encrypted before writing and decrypted upon reading. Writing or reading internal storage is treated as a special case of an output or input operation, allowing data accesses to continue to be controlled by any license restrictions.5.3 Peripheral EquipmentWhenever data leave the system (i.e., exit the tamper-detecting case) they must be protected. In some cases an electronic license may allow plain text data to be output, however we will describe the situation where protection is required. Data are encrypted prior to being sent to an output device.If the device is a transducer producing a physical product, such as a printer, display, or audio system, the data must be protected up to the time they are converted into the end product. This requires encryption for transmission as well as protection within the peripheral.Note:  PAC may be implemented in a software only environment, but the levels of trust and resistance to physical attack throughout the entire SBA environment would need to be accredited by the cognizant security official prior to implementation.Applications to SBA EnvironmentsIn this section we will address how the PAC technology relates to the four Virtual Domains [Mission, Product, Production, and Operations and Support (O&S)] and the two key databases of all information (Product Models Repository and Environmental Models Repository).  Since repository data is shared among the four domains and the two repositories are populated with information from the four domains, it is imperative the security paradigm operates across the entire SBA environment.  This is because Simulation Based Acquisition calls for products to be completely modeled and simulated, from the initial user requirements definition through design, manufacturing logistics, training, operational usage and disposal in the four Virtual Domains [6].Mission Virtual DomainIn the Mission Domain, the information collected is usually very sensitive.  The impetus for weapons system product acquisition, for example, is evolving threat data normally derived from very classified intelligence sources.  While this information needs to be made available to key engineers and evaluators, it rarely needs to be common knowledge of all SBA personnel involved on the project.  Likewise, government technologists and corporate research and development scientists will need to share their technology, but not all of the proprietary details.  Even the fact that specific technologies are being considered for application to a new threat is information that needs limited, as well as very controlled in distribution.In this domain, PAC would serve as the gatekeeper of information logically considered for mission analysis.  Fig 6.  Simulation Based Acquisition Process [6]In conjunction with government and corporate security officers, the organizations providing sensitive information would determine the level of encryption adequate for full protection and specify individuals or groups or machines authorized to decrypt and use the information.  They would also determine the processing restrictions and determine reprocessing permissions for those authorized access to the information.  This would even include such mundane functions as the authority to print, make new files or transfer information to magnetic media.  Some examples of PAC controlled data would include:Using multiple levels of classification of information in a common database, based on the level of abstraction or sanitization.Compartmenting simulation data on preliminary analytical simulations to individual companies and their proprietary R&D capabilities.Protecting developing models with separate tickets depending on the level of verification and validation or higher fidelity so that only appropriate models could be used for analysis.Limiting the authorization to develop simulation and analytical software to specific teams and work environments.The net result for the Mission Domain is that through PAC, the configuration manager and system security officers would have a tool that would control not only access to multiple protected categories of information, but be able to mandate specific applications of the information.  The Audit function of PAC would also provide an audit of attempts to inappropriately access or process information.Product Virtual DomainIf the concepts and analyses of the Mission Domain are deemed worthy of further exploitation, activity begins in the Virtual Product Domain to mature the model. This domain is strongly connected to the Product Models Repository and specifically to the Digital Product Descriptions (DPD) that document the evolving and real products.In this domain, PAC could serve as the key tool for configuration management enforcement of the versions of models to be employed for specific analyses and the control for dissemination of the evolving models.  As new products, in digital form, are developed, they would be identified as the latest version in the evolution of understanding of the product capabilities and “tickets” rescinded for developers to use previous models.  It would also keep relevant technologies available for analysts to apply while enforcing archiving of inappropriate or rejected technologies and data.  When a new analysis is mounted, the analysts would be given “tickets” to the specific data chosen for analysis and simulation.  From a security perspective, various contractor models and technologies would carry a pedigree of who on the SBA team had access and who used or attempted to use the data.Production Virtual DomainsIn the Production Virtual Domain, data, information, production cost trade studies, and manufacturing simulation alternatives relative to actually producing the product are being collated and analyzed.  As the product model is further defined, elaborated, and refined in the Product Domain, this new information is evaluated and considered in production trades and simulations.PAC, in this domain, is particularly relevant to the protection of proprietary cost and production processes of participating corporations.  Where the information is provided to competitor corporations, it is done in a considered manner with tickets issued to those who specifically need the information along with the originating corporation controls on further printing, copying, and dissemination.  Indeed, the PAC capability could potentially allow more corporations to participate or partner by protecting the control and release of additional proprietary data.Once the Production Virtual Domain activities are ready for transition to actual (real) contracting for competitive bids, the accumulated data then is released or retained by the government through review of the proprietary ticket authorizations of the resulting data.  Operations and Support Virtual DomainIn this domain, the data and information acquired is real logistic, maintenance, and test and evaluation data.  This information is needed to continually update the DPD in the Product Models Repository that will further raise the VV&A stature of the product fielded.In this domain, PAC becomes verifier of the pedigree of the information.  The data is encrypted as it is received in the repository and tickets issued to those organizations and individuals charged to analyze and evaluate the latest performance and production reliability information.  As information is superceded, it is still available for archive types of research, but would no longer carry authorizations for full VV&A analysis.Product and Environmental Models RepositoriesThese repositories are the location of product and environmental constraint data for the product models.  They differ primarily in that the product repository is primarily the responsibility of industry while the environmental repository is the responsibility of the government.  The similarity of the repositories is that they both contain data that needs to be protected: industry protecting their proprietary R&D, cost information, and production capabilities; the government protecting threat data, commonality of database representations, the synthetic environment and model interfaces.  In each repository, data must be protected upon being placed in the repository, configuration managed as new data or analysis is accepted, controlled in its dissemination (who has access), and restriction of the use of the data by authorized recipients.  Without confidence in these last factors, both government and industry will restrict the information they provide, thus making the repositories less useful and complete.  Given a robust security mechanism, collaboration and sharing across the SBA enterprise should increase.The appropriate application of PAC to the repositories would provide the following benefits:Multiple levels of security in a common database enforced with ticket authorizations.Isolation of security compromises: audit the authorized recipients, determine who physically accessed the information, and update ticket information to preclude further compromise.Audit attempts to improperly access or process protected data.Negotiated access to information and data among industry vendors, government suppliers, security officers, and configuration managers.Distribution of all SBA data to remote sites or processing environments on open circuits while remaining fully encrypted and protected.7.  SBA Simulation EnvironmentsThe application of PAC technology to a SBA simulation environment is fairly straightforward and would take place in the FOM and software environment preparation phase.  These will be addressed in terms of security environment, FOM setup, hardware constraints, and runtime concept of operations.Security EnvironmentIn all analytical simulation environments where classified information involved, there is a Senior Security Official who must determine that the classified information in the environment is properly protected.  This involves verifying the security credentials of the participants, the facilities and automated information systems security, and, when multiple levels of security are involved, that the procedures for distribution of classified information and downgrading and sanitization rules are established and secure.In a PAC environment, this would take place in the context of “licensing” the outputs of the various federates to the permissions and processing of the other federates.  Since most simulations usually deal with three or less security levels and a limited number of special compartments, this would require relatively little time by the security administrator to review the FOM objects and attributes proposed by each federate for publishing.  Comparing these against the security authorizations and guidelines for each federate’s participants, the security administrator would then issue licenses to each recipient from a controlled workstation for just the simulation data they would be allowed to receive.  The administrator would also issue the appropriate encryption keys to be used by the publishing federates that would correspond with the subscriber licenses.  While not normally addressed in most simulation environments, the PAC sets up and enforces Mandatory ORCON or Originator Control.In setting up the software development environment, the security officer and configuration manager would collaborate to establish standards and processes for the acceptance of code into the environment.  They would set up the development environment as an encrypted environment that would be controlled and accessed through the use of tickets.  Only those personnel authorized to work on any piece of the software would be issued tickets allowing them to access and develop in the environment.  Where code needed to be imported from uncontrolled or untrusted environments (i.e., industry model objects), the configuration manager would insist on a Trusted Software Development Methodology process that would “vet” the code prior to its acceptance and insertion.  At each step of the software development process, then, tickets would be issued to permit actions such as build, integration, and testing.   Most importantly, the PAC infrastructure would control the further actions of the authorized recipients of any files or information to just those authorized by the configuration manager, security officer or program manager.Once the FOM and simulation environment are set up, the security administrator would then run a security test with fully cleared participants to ensure that only the appropriate FOM data could be received by the subscribers.  They would also check to ensure that the subscriber processing and subsequent publishing constraints were met.FOM SetupThe FOM Setup would not need to change except for the fact that all federates would need to create their SOMs and federate processes under the PAC protected processes.  As the FOM objects are entered into the system, they would be stored as encrypted files that would trigger encryption/ decryption processes and the necessary header generation and internal security checks.  At run time, the users and participants would be unaware that the process was running except for machine logon that would be different from a personal computer.The RTI would require a modification to accommodate the instantiation of the license and data headers.  These however, should not be significant.  The license data and encryption keys would all be transmitted prior to the simulation and be resident on all subscription federates.  The header to accompany the published data, since there would be no need for extensive human readable text, would be only the few bytes necessary to identify the simulation object, the encryption key, and the authorized federate subscriber.Hardware ConstraintsAll digital computer information, unless protected by encryption or rigid physical access limitations, is susceptible to theft or compromise by a determined and skilled attacker.  To prevent this theft or compromise, the PAC employs both encryption and hardware protection.  When data that requires protection is created, it is encrypted and remains encrypted at all times except within the protected hardware when opened by the creator or another authorized user.  This includes storage, transmission, and storage at the destination computer.  In this manner, only authorized recipients, which could include specific federates or simulation facilities, would ever be allowed open the files.The hardware that is necessary to enforce the physical access restrictions is very small.  It consists of a processor case lock or copper mesh envelope to protect the critical memory and bus of the processor.  The purpose is to signal the processor that an unauthorized access is in progress.  When detected, the private key and any secret keys are overwritten with random numbers multiple times in less than a microsecond.  This effectively renders all the keys secure.  In this manner, the classified data is protected even if the machine is attacked. 8.  Coalition Simulation ApplicationsSBA simulations could also include the adjunct of coalition forces if deemed valuable to the overall system development.  Simulations involving coalition forces are a natural environment for this capability.  By considering each participant’s security authorizations and need-to-know, they can be licensed to receive just the level of information each is authorized.  (This assumes of course that the FOM has been set up to reflect publish, and allow subscription to the appropriate level of information).  For example, the sensor or van generating classified reporting in the simulation might be visible in the synthetic environment to all participants, but the classified products from the sensor or van could only be subscribed to by the federates operating at the necessary level of security.  With the PAC security in place, the simulation can run with every federate’s license permitting it’s members to see just their authorized information, even though all federates are connected to the same LAN or WAN. 9.  Current PAC Development StatusThe Persistent Access Control technology has been awarded two U.S. Patents covering both the software only as well as hardware-enforced implementations.   It has also been designated as the foundation technology in the World Airline Entertainment Association Specification 0598 for DVDs for in-flight movies.  PAC is in the requirements and design phase, awaiting development decisions.10.  Summary Information security is, and will continue to be a major concern of all SBA and simulation environments.  The PAC security technology provides an approach to solving this security problem because it provides end-to-end security for multiple levels of security as well as multiple compartment protections in an enforceable manner. While the instantiation of the technology will require some modifications to simulation FOM development and data headers, it cleanly can protect SBA information and simulation data in a manner that is directly relevant to rapid acquisition of new systems in a fully protected environment.3. References[1]	Paul B. Schneck and Marshall D. Abrams: United States Patent, “System for Controlling Access and Distribution of digital Property”, Patent Number 5,933, 498, August 3, 1999.[2] Paul B. Schneck, “Persistent Access Control to Prevent Piracy of Digital Information”’ IEEE Proceedings, 7 July 1999, pp1239-1250 [3] P. Devanbu and S. Stubblebine, “Research directions for automated software verification using trusted hardware”, in Proceedings of the IEEE Proceedings, 7 July 1999, pp. 274-279.[4] U. Linqvist, T. Olovsson and E. Jonsson, “An analysis of a secure system based on trusted components”, in Proceedings of the 11th Annual Conference on Computer Assurance, Systems Integrity, Software Safety and Process Security, COMPASS 96, pp. 213-223.[5] N. Rankl and W. Effing, “Smart Card Handbook”, John Wiley & Sons 1997.[6] Simulation Based Acquisition Steering Group (SBA ISG), “Simulation Based Acquisition Functional Description, v1.1”, on DMSO Web Site Special Interest Area, 24 February 1999.[7] Paul B. Schneck and Marshall D. Abrams: United States Patent, “System for Controlling Access and Distribution of Digital Property”, Patent Number 6,314,409, November 6, 2001.Author BiographiesKEN SULLIVAN is the Program Manager for the National Wargamming System and lead systems analyst for the PAC applications and integration project.  He has been involved with the JSIMS and NATSIM programs.  