Modifying the RTI for Active NetworksMatthew D. DorschVictor J. Skowronski, P.E., PhDLitton TASC55 Walkers Brook DriveReading, MA 01867781-205-7337, 781-205-7449 HYPERLINK "mailto:mddorsch@tasc.com" mddorsch@tasc.com,  HYPERLINK "mailto:vjskowronski@tasc.com" vjskowronski@tasc.comKeywords:Active Networks, Packet Filtering, Content-Based Filtering, Network Performance, High Level Architecture, Run-Time Infrastructure, ModSAF, OneSAF, Computer Generated Forces, CGFABSTRACT: The concept behind Active Networks is that the network will filter data based on the interests of the simulation nodes. In order to filter data, a network node must know about the interests of its end nodes. The network node must also be able to decode data in the information stream so that it can determine if a particular data packet should be passed on to its end nodes or dropped. This paper discusses modifications that were made to the RTI, to the simulations that comprised the federation (ModSAF), and to the FOM to incorporate these capabilities in the operation of the simulation.Data Distribution Management (DDM) was modified so that the RTI would notify the network whenever a simulation made a subscription request. Modifications were also made to the Federation Object Model (an extension of the RPR-FOM) of the simulations being used. The modifications allowed the network to determine the location of an entity within a routing space.IntroductionWhile distributed simulation infrastructures have evolved significantly in flexibility, abstraction, and interoperability, performance and scalability of the support networks remain a critical limitation. Advancing the state-of-the-art for large-scale distributed simulations therefore requires significant advances both in the underlying network technologies and in the ability of simulations to exploit these new networking capabilities. This paper discusses work in the area of Active Networks and an adaptation of a simulation (ModSAF) to make use of the new Active Network capabilities. Similar modifications could also adapt OneSAF or any other Computer Generated Forces (CGF) simulation to take advantage of the Active Network capabilities.The next section describes the Active Network capabilities developed and implemented in this project. The following section provides a detailed discussion of the changes that were made to ModSAF and to the Run Time Infrastructure (RTI) to exploit these capabilities. Finally, the results of exploiting these capabilities are described.Active Networks OperationActive Networks deploys computational resources directly within the network to enhance the performance of traditional services and to enable the rapid deployment of new services (see reference  REF _Ref501850102 \r \h [4] and reference  REF _Ref503253843 \r \h [5]). These services are currently in the experimental stage, but commercial development is now being explored. In the present application, the new service is content-based filtering. Packets are routed within the active network based on end-user interest in those packets.With content-based filtering, end users (ModSAF in this case) transmit their interests to the network. These interests are translated into tests of the data in the packets being transmitted through the network. The active network then organizes these tests into filters at the various nodes of the network. These filters block the transmission of packets that do not contain any data of interest to downstream users.In the present application, the ModSAF simulation was modified to transmit its interests in entities simulated by other federates to the RTI. The RTI then translated the interests into filter specifications that were sent to the network. The next section describes the modifications that were made to ModSAF and the RTI to perform these functions.RTI and ModSAF Modifications REF _Ref501875891 \h Figure 31 shows a typical Active Network topology. Each simulation node (S1 through S4) runs a ModSAF simulation program. Two routers are connected to each other and to two of the simulation nodes to form the network. Active network filters in the routers are used to reduce traffic in the connection between the routers. This configuration does not allow the simulations themselves to perform the filtering, since they cannot distinguish between data requested by neighbors on the same router and data requested by simulations at the other end of the network. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 3 SEQ Figure \* ARABIC \s 1 1 Sample Topology for Active Network TestThe simulation and router nodes were implemented using PC’s running LINUX. LINUX was chosen for compatibility with ModSAF version 5.1, a version that uses HLA. LINUX was also used in the routers to simplify the development of the active networks.The architecture of the active network filtering software is shown in  REF _Ref501944263 \h Figure 32. The simulation sends subscription requests to the RTI as is normally done under HLA to obtain information about entities being simulated. The modified RTI translates the subscription information into a form suitable for processing by the active network (The form is called an Ifilter in the context of the Active Network.) The RTI then transmits the filter information to the Active Filtering Signal Protocol (AFSP) Host Module in the simulation host. The AFSP Host Module sends the filter information to the simulation host Filter Manager, and, through the Secure Active Networks Transmission Service (SANTS), to the AFSP module in the router. The AFSP module in the router transmits the filter information to the router Filter Manager and to the other routers of the network.At runtime, the simulation produces and receives updates of simulation data. This data passes through the RTI, then through the active network filters in both the simulation host and the network routers. The filters are designed to block transmission of simulation data that is not needed by the simulations downstream of the filter, thereby significantly reducing network traffic. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 3 SEQ Figure \* ARABIC \s 1 2 Active Network Filter ArchitectureThis section has described the overall architecture and operation of the active network (see references  REF _Ref501961494 \r \h [7] and  REF _Ref501961497 \r \h [8] for more information). As previously noted, it was necessary to modify both the RTI and the simulation in order to take advantage of the capabilities of the active network. The following subsections describe the modifications that were made to the RTI/Active Networks interface, to the RTI/simulation interface, and to the simulation.RTI and Active Networks InterfaceThe Run Time Infrastructure (RTI) that was used in this project was the RTI-Kit, obtained from Georgia Tech Research Institute (GTRI). The RTI-Kit provides access to the source code of the RTI. This access was necessary  to make the modifications needed to interface the RTI with the Active Network.The RTI that was used in this project was the RTI-Kit, obtained from the Parallel and Distributed Simulation Group at the Georgia Institute of Technology (see  REF _Ref501962359 \h Figure 33 for a diagram of the architecture).  The RTI-Kit is currently distributed as part of the Federated Distributed Simulation Tool Kit (FDK) package. The FDK includes RTI source code, which was modified to interface the RTI with the Active Network. For further information on RTI-Kit, see references  REF _Ref502022746 \r \h [6] and  REF _Ref501962416 \r \h [9]Figure  STYLEREF 1 \s 3 SEQ Figure \* ARABIC \s 1 3 RTI-Kit Block DiagramThe interface between the active network and the RTI was implemented through the Data Distribution Management (DDM) function of HLA (see references  REF _Ref502115366 \r \h [1] and  REF _Ref502115379 \r \h [2]). DDM provides mechanisms that allow the RTI to manage the distribution of data based on attributes of the data. These mechanisms were adapted to provide the capabilities needed for the active network.In DDM as specified by HLA, routing spaces define how interests are managed. A routing space is an N-dimensional coordinate system that spans the simulation playbox. Regions are defined by specifying intervals of the routing space dimensions.  REF _Ref502116395 \h Figure 34 shows an example of a routing space with several regions defined. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 3 SEQ Figure \* ARABIC \s 1 4 Sample Routing Space and RegionsRegions in DDM can be either Update or Subscription Regions. A simulation declares an Update Region when it intends to post updates for the entities that it is simulating and expects that the entities will exist within the Update Region. A simulation declares a Subscription Region when it wishes to receive information about entities and events only within that region. The RTI computes the overlaps between Update and Subscription Regions. The RTI notes the region overlaps and routes information from the Update Region to simulations that are subscribing to an overlapping Subscription Region.The active network also uses a concept of a routing space and of regions within the routing space, but it uses them differently. Instead of computing overlaps, the active network tests the location of the data within the routing space to determine whether it is inside a particular Subscription Region. If the data is inside the region, it is routed to the simulations subscribing to that region.  REF _Ref502118331 \h Figure 35 shows a sample active network with interest filters installed at the routing nodes of the network. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 3 SEQ Figure \* ARABIC \s 1 5 Sample Active Network with Interest RegionsEach node in the active network constructs an interest region that is the union of the interest regions of all downstream simulations. The region is used to test data packets received from upstream simulations. Data packets that are in the interest region are passed to downstream nodes. Data packets that are outside the interest region are dropped.The tests in the active filters are implemented as greater or less than comparisons between the boundaries of the interest region and the data. The active network therefore needs to know the boundaries of all the Subscription Regions, not just how they overlap the Update Regions. The RTI transmits the boundaries of the Subscription Regions to the active network by converting the boundary information to the Ifilter format used by the active network. (see  REF _Ref501944263 \h Figure 32). Whenever the simulation requests a subscription with a region, the boundaries of the region are converted to Ifilters and transmitted to the active network. Since regions are created in HLA prior to subscription requests, the RTI in the simulation host maintains a list of the regions created by the local simulation. The list contains information on the boundaries of the region that can then be converted into an Ifilter format.The next section describes how the local simulation creates a Subscription Region and passes that information to the RTI so that it can be used to create a content-based filter.Simulation and RTI InterfaceThe simulation uses the Data Distribution Management (DDM) function of HLA to communicate its interests to the RTI (see references  REF _Ref502115366 \r \h [1] and  REF _Ref502115379 \r \h [2]). When the simulation declares an interest, it uses the Subscribe Object Class Attributes with Region service of HLA. The region used in the subscription was previously created using the Create Region service, and when necessary, it is changed using the region modification services. Maintaining the regions used by the subscriptions keeps the RTI informed of the interests of the simulation so that it can pass this information to the active network.The use of DDM provides a mechanism to transmit interest information to the RTI that is consistent with the current HLA specification. The interfaces for the services are used as prescribed by HLA. Information may be used in a manner that is different from the intent of the specification, but the manner in which HLA is being used is consistent with the HLA specification.The simulation does not use the corresponding update services of DDM to transmit information to the RTI. The use of update regions is not precise enough to take advantage of the capabilities of the active network.  Specifying the location of an entity by its region leaves considerable uncertainty about the entity’s actual position within the region. A different mechanism is therefore used to inform the RTI and the active network about the location of entities in the routing space. This mechanism required a modification to the simulation, which is described in the next section.Simulation ModificationsWhen an entity update is transmitted to the RTI and the active network, the location of the entity in the routing space must also be provided. The location information is needed by the active network to filter the update information as it is routed through the network.The Federation Object Model (FOM) used by ModSAF Version 5.1 (reference  REF _Ref502559125 \r \h [3]) contains a routing space with four dimensions: latitude, longitude, frequency, and subspace. It was decided to use latitude and longitude interest filtering. These two dimensions are sufficient for defining the interest region of a particular entity, so the other dimensions are not needed.While the routing space dimensions that specify location are latitude and longitude, the object attributes that specify location are expressed in geocentric coordinates (GCC). Converting between latitude and longitude and GCC requires special conversion algorithms. Including these conversion algorithms in the active network would have increased the complexity of the filters and the time needed to test data packets. Rather than incur this penalty, it was decided to modify the FOM to include the necessary dimensions as attributes of the Base Entity class. The new dimension attributes were also inserted in front of all other attributes so that they would occupy a known location in all data packets.The RTI Ambassador was modified to ensure that the necessary entity data was transmitted to all simulations. When ModSAF creates an entity, the RTI Ambassador creates an interaction that is sent to the network to inform the other simulations of the new entity’s existence. The RTI was configured to send the interaction via a reliable protocol that would not be filtered. Thus, all simulations would be informed about all new entities. The RTI Ambassador was also modified to send all attributes with every update. Entity attribute updates are filtered by the network. If attributes are included in an update only when their value changes, and the update containing the last change was sent before the entity entered the simulation’s interest region, then the simulation would not receive the correct value of the attribute. This is particularly important for attributes that are set when an entity is created and never changed afterward. Sending every value of every attribute with every update avoids this problem.ModSAF was modified so that subscriptions would be made with an interest region. Whenever an entity is created in a ModSAF simulation, ModSAF makes a subscription request for that entity. This subscription request was modified to include an interest region. The interest region would be created based on the location of the new entity. If the vehicle location changed during the simulation, a new interest region would be computed and submitted to the RTI.In addition to the modifications needed for active networks, a feature of ModSAF was disabled so that new entities would be controlled by the simulation on which they were initially loaded. Under normal circumstances, control of an entity may be transferred when it is first created to balance the computational load among simulations. Control transfer in ModSAF was disabled so that entities with roughly the same interest region could be controlled by the same simulation. Disabling load sharing also ensured that the distribution of entities between simulations could be repeated in subsequent experiments.Summary of ModificationsThe modifications that were made to ModSAF and to the RTI to use the capabilities of the active network were as follows.Each RTI stores the extents of each routing space region for each simulation that it manages.A subscription with region request from a simulation or a modification of an already subscribed region causes the RTI to send an Ifilter request to the active network.The base entity in the FOM includes the dimensions of the routing space as attributes.The dimensional attributes in the base entity are flagged by ModSAF to ensure that they were always transmitted.The dimensional attributes of the base entity are updated by ModSAF from the entity’s corresponding attribute whenever an update is posted.Subscription requests are made by ModSAF with an interest region specified.Load sharing of entities in ModSAF is disabled.No changes were made to the manner in which the RTI transmits updates to the network. In particular, the RTI does not perform any special processing on the data packets being transmitted.The next section describes the results of using the content-based filtering of the active network to reduce network traffic.ResultsThe configuration shown in  REF _Ref501875891 \h Figure 31 was used to run a simulation involving three sets of opposing-force tank platoons and one flight of aircraft as illustrated in  REF _Ref502024164 \h Figure 41. Each set of tank platoons and the aircraft flight were simulated on a different host. This grouping of the simulation entities enabled each host to establish a clearly-defined interest region.The sets of tank platoons are located far enough apart to be outside each other’s interest regions, so data from the tank platoons will be filtered by the active network. The aircraft flight is tasked to conduct a series of air strikes against each opposing-force tank platoon. The active network initially filters out the aircraft data packets. As the aircraft enter the interest region of each tank platoon, the aircraft data is passed to the simulator of that platoon by the network. The interest region of the aircraft flight is also updated as it flies across the terrain. As the aircraft approach a particular set of tanks, the interest region of the aircraft will be modified to include the tanks. The simulation controlling the aircraft will then receive the data packets sent by the simulation controlling the tanks. The aircraft simulation will cease receiving the data packets from the tank simulation when it posts an update to its interest region that no longer includes the terrain occupied by the tanks. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 4 SEQ Figure \* ARABIC \s 1 1 Active Network Test ScenarioA graph of the network traffic for two of the simulation hosts is shown in  REF _Ref502027462 \h Figure 42 and  REF _Ref502027466 \h Figure 43. The graphs show the number of packets being filtered out by the network (green) and the number being passed (blue) as a function of time. Since the scenario was set up such that no entities on one simulation host were initially in the interest regions of the entities on any other simulation host, all packets were initially filtered out by the network.Note that the data packets were not actually dropped by the network. In order to measure the effectiveness of the active network, packets were marked rather than dropped when the active network filters determined that the packet did not need to be transmitted. This enabled the simulation hosts to measure the efficiency of the filters in the network and to create the graphs shown in  REF _Ref502027462 \h Figure 42 and  REF _Ref502027466 \h Figure 43. REF _Ref502027462 \h Figure 42 shows the traffic being sent to a simulation host when no other host’s entities are in its interest region. In this case all the packets are dropped.  REF _Ref502027466 \h Figure 43 shows network traffic as the interest region of the aircraft flight changes to include a tank platoon. Initially, all packets are dropped. However, once the tanks are in the interest region, the packets from the tank platoon’s simulation host are no longer dropped. Instead, they are passed to the host simulating the aircraft so that the response of the aircraft to the tanks can be properly simulated. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 4 SEQ Figure \* ARABIC \s 1 2 Trace of Packet Traffic to Host with No Outside Interactions EMBED Word.Picture.8  Figure  STYLEREF 1 \s 4 SEQ Figure \* ARABIC \s 1 3 Trace of Packet Traffic to Host as Interest Region of Aircraft Expands to Include Tank PlatoonThe modifications made to ModSAF and the RTI-Kit enabled them to interface with the active network. The interface enabled simulations to transmit interest requirements to the active network. The active network was then able to filter network traffic and block data packets that were not of interest to the simulations.As can be seen from  REF _Ref502027462 \h Figure 42 and  REF _Ref502027466 \h Figure 43, the active network filtering achieved a significant reduction in network traffic. For the simulation controlling the tank platoon being attacked in  REF _Ref502027466 \h Figure 43, fifty percent of the data packets were marked as unnecessary by the active filter.ConclusionsExisting simulations can be modified to take advantage of the capabilities of active networks. As described in Section  REF _Ref502112090 \r \h 3, the extent of the modifications required is small.The opportunity for significant reduction (fifty percent in the scenario described in Section  REF _Ref502046803 \r \h 4) in network traffic is greatest when the scenario contains large numbers of entities having limited regions of interaction with each other. The ability to group entities to optimize the interest regions of individual simulations is also important. The scenario in Section  REF _Ref502046803 \r \h 4 is an example of a simulation scenario that can be configured for reductions in network traffic by content-based filtering. Some level of traffic reduction can typically be achieved if entities are allocated logically across hosts.Routing space dimensions were included in the base class attributes of the FOM so that this information would be in the data packets being filtered. Inclusion of these attributes is not an HLA requirement. Providing explicit connections between routing spaces and the entities that are located within them may become more important, however, as the use of content-based filtering becomes more widespread.TASC expects to continue its efforts in the area of Active Networks. These efforts will include assisting with the incorporation of Active Network technology into commercially available routers.ReferencesDepartment of Defense, “High Level Architecture Interface Specification”, Version 1.3, DMSO, April 1998 Department of Defense, “High Level Architecture Run-Time Infrastructure Programmer’s Guide”, Version 1.3 Release 2, June 15, 1998US Army STRICOM, “Release Notes for ModSAF 5.1 (HLA)”, December 20, 1999S. Zabele, T. Stanzione, “Interest Management Using an Active Networks Approach”, Proceedings of the Spring 1999 Simulation Interoperability Workshop, Orlando, FL, March 1999T. Stanzione, S. Zabele, “Active Network Technologies for Computer Generated Forces”, Proceedings of the 9th Conference on Computer Generated Forces and Behavioral Representation, Orlando, FL, May 2000McLean, Thom and R. Fujimoto, "The Federated-simulation Development Kit: A Source-Available RTI", Proceedings of the Spring 2001 Simulation Interoperability Workshop, Orlando, FL, March 2001 HYPERLINK "http://www.tascnets.com" http://www.tascnets.com, DARPA-sponsored Networking Research at TASC HYPERLINK "http://www.isi.edu/active-signal/ARP/index.html" http://www.isi.edu/active-signal/ARP/index.html, Active Reservation Protocol (ARP) Project HYPERLINK "http://www.cc.gatech.edu/computing/pads/fdk.html" http://www.cc.gatech.edu/computing/pads/fdk.html, FDK – Federated Simulations Development KitAuthor BiographiesMATTHEW D. DORSCH is a Member of the Technical Staff at Litton TASC. Prior to joining TASC, he worked as a programmer/analyst and developed user interfaces. Matthew received a B.S. in Computer Science from Rensselaer Polytechnic Institute.DR. VICTOR J. SKOWRONSKI is a Senior Member of the Technical Staff at Litton TASC, where he investigates terrain representation for CGF systems.  Prior to joining TASC in 1996, he did research in solid modeling at Rensselaer Polytechnic Institute, where he also earned a PhD in Computer Engineering. Victor earned a M.E. and a B.E. in Electrical Engineering from Stevens Institute of Technology. He is a licensed Professional Engineer in New York and Massachusetts.AcknowledgementThe authors would like to acknowledge the contribution of Tom Stanzione. Tom helped to lay the conceptual basis for this work. He also provided needed organizational skills early in the project. This work is supported by the US Army STRICOM under contract N61339-00-C-0022.