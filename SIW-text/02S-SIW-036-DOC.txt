Ground-Based Midcourse Defense Reference FOMAnn M. BrandJoint National Integration Center730 Irwin AvenueSchriever, AFB, CO 80912719-567-8558ann.brand-contractor@jntf.osd.milKeywords:Ground-Based Midcourse Defense, GMD, NMD, Reference FOM, Midcourse Defense SegmentABSTRACT: The Ground-Based Midcourse Defense (GMD), formerly National Missile Defense (NMD), simulation interoperability strategy is derived from the “DoD Modeling and Simulation (M&S) Master Plan”.  This Master Plan prescribes the creation of an M&S Common Technical Framework (CTF) to support interoperability and reuse.  Accordingly, the GMD community is building an analogous GMD CTF that will provide a solid foundation towards incorporating M&S interoperability concepts into the GMD program. As a step towards achieving this objective, the GMD Modeling and Simulation Advisory Panel (MSAP) Interoperability Subgroup (IOSG) has developed a GMD Reference Federation Object Model (FOM).  This Reference FOM will enable the GMD community to readily compose Federations for purposes such as performing trade studies, risk analyses, vulnerability analyses, GMD element and system engineering and design, and logistics requirements.  The GMD Reference FOM defines common threat and synthetic natural environment representations into bounded levels of resolution to satisfy the mission space object representation's need for interactive behavior.  This paper will describe the process that was used to build the FOM and give guidance to other members of the GMD community in its use.1.	IntroductionAs the Modeling and Simulation (M&S) community has matured, an emphasis has been placed on interoperability and reuse. Distributed Interactive Simulation (DIS), Aggregate Level Simulation Protocol (ALSP), and now High Level Architecture (HLA) are but a few examples of Department of Defense (DoD) initiatives aimed at promoting interoperability and reuse.  Vision and guidance towards achieving these goals are documented in the DoD M&S Master Plan.  This plan recommends the development of a Common Technical Framework (CTF).  The M&S CTF identifies HLA and Data Standardization as key tools that will be used to promote simulation interoperability.   The Ground-based Missile Defense (GMD) M&S community is responsible for defining its own implementations and strategies to be in accordance with the DoD M&S Master Plan.  Therefore, an analogous GMD CTF is being constructed.  The GMD CTF should not be considered a separate entity from the M&S CTF, but rather the GMD implementation portion of it.The creation of Reference Federation Object Models (FOMs) is one means of establishing data interface standardization within a community.  A Reference FOM can be defined as a set of HLA Object Model Template (OMT) compliant tables and associated meta-data that forms an identification of commonly used and accepted classes of objects, attributes and interactions.  A true Reference FOM must also be accepted within the community it was built for as a suitable building block for the development and establishment of other FOMs.   A good example of a Reference FOM is the Real-Time Platform Reference (RPR) FOM, which is commonly used as a baseline FOM by DIS legacy simulations.  A GMD Reference FOM would establish common semantics and syntax for commonly used GMD entities.  It is meant to be a basis FOM (or superset) that new GMD Federations can use as a baseline to create specific FOMs for their particular Federation.  This would allow variant simulations to create federations and interoperate more easily. This paper describes the rationale and process used to create the GMD Reference FOM, reports on prototype federations that used this FOM and gives guidance for other GMD Federations that may want to use the FOM. 2.	Creating the GMD Reference FOM Members of the GMD Modeling and Simulation Advisory Panel (MSAP) Interoperability Subgroup (IOSG) developed the GMD Reference FOM as a collaborative effort.  The GMD MSAP IOSG assists the GMD System Engineer in developing and implementing a comprehensive GMD modeling and simulation interoperability strategy.  The GMD MSAP IOSG is the primary organizational component for overall definition and coordination of the GMD M&S interoperability requirements and subsequent implementation and oversight. 2.1	Purpose  The GMD Reference FOM is a concept for implementing the CTF and promotes the ability to readily compose FOMs for purposes such as performing trade studies, risk analyses, vulnerability analyses, GMD element and system engineering and design, and logistics requirements analysis.  The GMD Reference FOM defines common threat and synthetic natural environment representations into bounded levels of resolution to satisfy the mission space object representation's need for interactive behavior.  The benefits of a GMD Reference FOM are that it:Identifies commonly used objects, attributes and interactions throughout multiple federations for elimination of duplication and promotion of reuse.Promotes a common representation of the synthetic natural environment and threat representations for reuse across all simulations.Provides a simulation architecture that guides the development of new mission space object representations and the re-engineering of legacy simulation object models.Provides an open and extensible configuration management approach for an evolving mission space definition as the GMD design matures to its final configuration and as threats change over time.2.2	Approach The first step in the FOM development process was to identify elements and interactions that are used within the GMD community.  Figure 2-1 depicts the GMD simulations that were evaluated as possible federates in the creation of the GMD Reference FOM.  Each of these elements was analyzed to determine simulation inputs and outputs.   EMBED Word.Picture.8  Figure 2-1:	GMD Baseline ElementsIt was decided to use the RPR FOM [Version 1.0; Draft 2] as the basis for defining GMD objects.  The RPR FOM is a translation of DIS Protocol Data Units into HLA OMT format.  The RPR FOM is a commonly used Reference FOM for DIS simulations transitioning to HLA.  It was felt that the ability to maintain interoperability with such simulations outweighed the benefits that may have been obtained by designing a GMD Reference FOM from scratch.  Additionally, several GMD simulations such as Wargame 2000 and Mission Defense Space Tool (MDST) have already developed Specification Object Models based upon the RPR FOM.We then looked at mapping the simulation inputs and outputs we identified into HLA objects and interactions.  In general, object classes are used to describe entities that exist over a period of time, while interactions are more appropriate for messages.  Therefore the subgroup decided to make GMD messages interactions and model missiles (both threat and interceptors) using objects.Consideration was also given to the implementation of signature data.  We decided that the signature should reside inside of the sensor simulation and not be passed across the interface.  This allows the sensor simulations to be swapped in and out, each having their own internal signature representation, potentially at different levels of fidelity, and the threat/Ground-based Interceptor (GBI) does not need to know what is plugged in.GMD messages are already well defined by the Command, Control, Communications and Intelligence community.  These messages are subject to change, so we decided to categorize the interactions by publisher, rather than specifying each specific message type.  We felt that this approach allowed flexibility and reduced maintenance, while at the same time reducing message traffic associated with a more general broadcast type approach.  We further divided the messages into Comm  messages and direct messages.   If a federate were modeling communication effects for the Federation the Comm messages would be published and subscribed.  The “normal” GMD message set would be used for direct communications between federates.  Figure 2-2 illustrates a notional GMD Federation along with object and interaction parameters.Figure 2-2:	Notional GMD  Federation3.	Using the GMD Reference FOM Entity RepresentationsWe decided to represent missiles, both interceptors and threats, as HLA objects.  Fire and detonation information, as well as GMD messages were handled through the HLA interaction mechanism.  Table 3-1 depicts the Object Model Development Tool (OMDT) Object Class Structure Table.  An “S” indicates a federate may subscribe to object of the indicated class.  A “P” means a federate may publish objects of that class.Class 1Class 2Class 3BaseEntity  (S)PhysicalEntity  (S)Munition (PS)Table 3-1: Object Class Structure TableThe munition class, as taken from the RPR FOM, was used to model missiles.  Each threat or interceptor will be an object instantiation of a munition class.  The munition object inherits most of its attributes from BaseEntity, to include: acceleration; angular velocity; orientation; world location; and a dead reckoning algorithm designation.  From PhysicalEntity it inherits a Trailing Effects Code which is used to specify the type and size of any trail the missile is emitting.  The munitions class also has an additional Boolean attribute designating whether “Launcher Flash Present” exists. The MunitionDentonation, StartResume, and WeaponFire interactions were also derived from the RPR FOM.  The BaseGMDMsg and its associated sub-interactions were created specifically for the GMD community.  Table 3-2 shows the OMDT Object Interaction Table.  An “I”, Initiates, implies that a federate is capable of initiating and sending an interaction of the type specified.  An “R”, Reacts, implies that a federate can elect to subscribe and react to the specified interaction.Interaction1Interaction2Interaction3MunitionDetonation (IR)StartResume  (IR)WeaponFire (IR)BaseGMDMsg (R)GMDMsg (R)BMC2Msg (IR)GBIFarmMsg (IR)GBRMsg (IR)XBRMsg (IR)IFICSMsg (IR)MCSMsg (IR)UEWRMsg (IR)EKVMsg (IR)GMDCommMsg (R)BMC2CommMsg (IR)GBIFarmCommMsg (IR)GBRCommMsg (IR)XBRCommMsg (IR)IFICSCommMsg (IR)MCSCommMsg (IR)UEWRCommMsg (IR)EKVCommMsg (IR)Table 3-2: Object Interaction TableThe WeaponFire interaction is used to communicate information associated with the firing or launch of a munition.  Attributes such as initial velocity, firing location, quantity fired and rate of fire are passed using this interaction.The MunitionDentonation Interaction is used to communicate information associated with the impact or detonation of a munition.  Attributes such as final velocity fuse type, munition type and so forth are passed using this interaction.The StartResume Interaction is a Simulation Management (SIMAN) interaction, sent from a Simulation Manager federate to either:  a) start simulating one or more entities or b) resume simulation of one or more entities after a pause.  Times, real world and simulation, as well as identifying entity information, are sent as part of this interaction.  All GMD messages inherit a message length, followed by the message itself from the GMDBaseMsg Interaction.  This interaction is further subdivided into either a “regular” GMD message or a GMDComm Message.  The GMDMsg is used when a Federation is not simulating communication effects.  In these instances the interactions would be a point-to-point communication.  If the Federation is simulating communication effects, the interactions would first be routed to the Communications federate via the GMDCommMsg.  The Communications federate would apply whatever delay or corruption is appropriate and then republish the message using the appropriate GMDMsg interaction subclass.  A federate will publish a message of a type corresponding to the GMD System element it is simulating.  For example, GBRSim (Ground Based Radar Simulation) would publish interactions of either type GBRMsg or GBRCommMsg.  It would also subscribe to interactions that it found of interest.  In this example, if GBRSim expects to receive commands from BMC2, then it should subscribe to BMC2Msg interactions.In summary, all federates, except for the Communications federate, will always subscribe to messages of a GMDMsg interaction type.  However, if the federation uses communication effects, they will publish messages using a GMDCommMsg interaction type; which will go to the Communications federate; which will process the message and send it on as a sub-interaction of type GMDMsg.  If a simulation modeling communication effects is not part of the Federation, each federate will publish and subscribe to messages of a GMDMsg interaction subtype.Coordinate SystemThe World Geodetic System of 1984 (WGS-84) Earth-Centered, Earth-Fixed (ECEF), also referred to as Earth-Centered Rotating (ECR), coordinate system is recommended for all location, state, vector and covariance data.  The WGS-84 coordinate system is a right-handed, orthogonal system defined as follows:The +Z axis is defined as the vector that originates at the Earth’s center and passes through the North PoleThe +X axis is defined as the vector that originates at the Earth’s center and passes through the equator at the prime meridianThe +Y axis is formed from the cross product of the +Z and +X vectors, completing the right-handed ECEF orthogonal system.  The +Y axis originates at the Earth’s center and points toward the equator at 90 degrees east longitude.UnitsThe following units are recommended when deriving a FOM from the GMD Reference FOM:Meters, kilograms, and seconds (MKS)Radian for angular measuresProbabilities measured from 0.0 to 1.0, as opposed to percentagesInitial GMD Reference FOM FederationA Federation composed of GBRSim and MDST was established to test the GMD Reference FOM.  GBRSim is a high fidelity radar model element of the Ground-Based Midcourse Defense (GMD) GBR Hardware-in-the-Loop digital environment that simulates GBR.  GBRSim was designed as a complete software system for modeling radar performance against potential threats.  Its flexibility provides a general-purpose tool for creating missile scenarios, performing coverage studies and analyses, and investigating algorithm tradeoffs.MDST is the current Space Based Infrared System (SBIRS) Special Program Office approved software for use in wargames and exercises until the SBIRS System Simulation becomes available.  The Exercise Support and Analysis group at the Joint National Integration Center (JNIC) operates MDST.  Federation SetupA stand-alone network was created to run the experiments.  This network consisted of two Silicon Graphics O2 workstations running IRIX 6.5.11, as shown in Figure 4-1.  The Defense Modeling and Simulation Office (DMSO) developed RTI software used was version NG 3.2.  The GMD Reference FOM was used.  Both simulations ran using the HLA time regulating and constrained options.Figure 4-1	Experiment ConfigurationGBRSim is a high fidelity model, and will run slower than real time if a complex threat is used.  MDST needs to run in a real-time configuration.  Therefore, a simple threat scenario consisting of one launch and two associated decoys was used.  Because GBRSim needs to preprocess the threat, a separate threat federate was not created.  Instead, GBRSim published threat data at one-second intervals.  MDST received and processed the threat data.  The SBIRS system detected the threat and produced a track.  At booster burnout MDST generated a cueing message from the SBIRS burnout report which was published and received by GBRSim.  GBRSim processed the cueing message, generated a search fence and attempted to detect and track the threat.Lessons LearnedMDST and GBRSim were able to successfully communicate using the RTI and the GMD Reference FOM.  MDST received threat data and created the cueing message at burnout.  GBRSim received the message and was able to generate the search fence as directed.  Figure 4-2 illustrates a successful detection and track run from GBRSim.  The clusters of points at the bottom of the graph represent a cross section of the search volume generated by GBRSim, while the long line shows the threat being detected and tracked.Figure 4-2	GBRSim Tracking DetectionInitially, we found some errors in the way we interpreted sizes of certain basic data types referenced in the GMD Reference FOM.  For example, one simulation represented a Boolean using eight bits, whereas the other one used four.  These misunderstandings would have been avoided if we had completely filled out the Federation workbook, which we started, but did not complete before our integration testing.  Another programming “lesson learned” was that one should ensure all software exceptions that are capable of being thrown from the RTI service calls are recognized and appropriately handled.  The RTI layer does not contain debug symbols; therefore, handling the exceptions minimizes debugging effort.There were several timing issues that needed to be resolved.  MDST is a real-time simulation. It normally runs in sync with the system clock. GBRSim is purely event based. It normally runs as fast as possible without regard for real-world time. The RTI “Constrained” and “Regulating” time services served to synchronize the two simulations. Each simulation clock was constrained by and regulating the other.MDST’s implementation of the time services caused some slowing and confusion in track times. In other federations, without using RTI time services, MDST has only been required to tick the RTI at a rate of 1 Hz to receive periodic object updates or interactions. With the introduction of time constraint, we discovered that it could take several ticks for the RTI to process a time advance request and issue a time advance grant. With one tick per second, MDST would be granted a one-second time advance every three seconds, thus running at approximately one third real-time. GBRSim was synchronized with MDST, and thus held to the same one third real-time. The solution was to isolate the tick calls from other periodic processing and increase the tick rate, using a new system clock based periodic event to tick several times per second. All other periodic processing, including time advance requests and object and interaction processing were then tied to the simulation clock at the previous rate of 1 Hz. When increasing the tick rate, the minimum and maximum tick times had to be adjusted. For example, at a tick rate of 10 Hz, the maximum tick time should be equal to or less than 0.1 seconds or the simulation may not be able to keep up. If the minimum tick time was greater than 0.1 seconds, the simulation could not possibly maintain a 10 Hz tick rate because each tick would take too long.Originally, the threat was published using the HLA “best effort” paradigm, as it was felt that an occasionally missed threat update would not cause the simulation to fail and the increased speed from using the “best effort” mechanism versus the “reliable” option was desirable.  However, we found that if we missed receipt of one packet, we received no subsequent updates.  The problem was corrected by changing send mechanism to “reliable/time-stamped”.  We suspect that the problem was due to a faulty recovery mechanism in the RTI version we were using, since the problem was intermittent and according to the HLA documentation occasional missed “best effort” packets should not cause subsequent packages to not be received.  Note that GBRSim continued to publish the threat in these instances, MDST just did not receive them.  Also, this was the only change we had to make to the GMD Reference FOM during the course of this experiment.5.	ConclusionsIn summary, the experiment worked as expected:Both simulations were able to communicate via the DMSO RTI NG using the GMD Reference FOM.GBRSim propagated the threatSBIRS detected the threat and generated a quick alertSBIRS tracked the threat and generated a cueing message at booster burnoutGBRSim received the cueing message, generated search fences and initiated detection and tracking of  the threatOnly one change needed to be made to the GMD Reference FOM, which was changing the sending mechanism from “best-effort” to “reliable” for threats.  Future plans include rerunning the experiment remotely using existing secure connections between the JNIC and the Advanced Research Center at Huntsville.  We are also looking at expanding the Federation through the addition of other Federates, such as Wargame 2000 and BMC3.  6.	References[1] United States Dept. of Defense: “DoD Modeling and Simulation Master Plan,” October 1995. [2] Simulation Interoperability Standards Organization: “Reference FOM Study Group -- Final Report,” 9 March 1998; Version 1.0.[3] GMD LSI BMC3 Message Catalogue (9d743-10323-2) AcknowledgmentsThe author would like to thank the following individuals for their assistance and support in the creation of the GMD Reference FOM: Nhuchi Khong (XBR Program Office, Dr. Forrest Gibson (JNIC NEST), Kathleen Cowan (XonTech), Ron Aruta (XonTech), Ron Pipes (JNIC NEST), Brad Kettner (JNIC MDST), Ken Deis (JNIC MDST), and Louis Adams (JNIC IS).Author BiographiesANN BRAND is a Principal Software Engineer at the Raytheon Systems Company, Colorado Springs, Colorado.  She served as technical lead for the development of the GMD Reference FOM. In HLA terminology, a FOM is used to specify the exchange of all public data among federates in a common, standardized format (i.e., the HLA OMT format).   The GMD System Engineer is responsible for the overall system engineering and requirements definition for potential GMD systems. In the functional GMD system, Battle Management, Command, Control and Communications (BMC3) would generate cueing messages in response to data provided by SBIRS and other GMD elements.  Since BMC3 was not part of this federation, MDST completed and published the message itself, given the data it had available.