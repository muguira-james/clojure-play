Modeling the Factors That Influence Military Operations Other Than WarJeffery J. BergenthalSean S. CullenDoris C. LinLockheed Martin Information SystemsAdvanced Simulation Center37 North AvenueBurlington, MA 01803781-505-9510, 781-505-9522, 781-505-9539 HYPERLINK "mailto:jbergent@lads.is.lmco.com" jbergent@lads.is.lmco.com,  HYPERLINK "mailto:scullen@lads.is.lmco.com" scullen@lads.is.lmco.com,  HYPERLINK "mailto:dlin@lads.is.lmco.com" dlin@lads.is.lmco.comKeywords:Military Operations Other Than War, High Level Architecture, Behaviors, ReuseABSTRACT:  Simulating Military Operations Other Than War (MOOTW) is a challenging problem.  The factors that influence MOOTW behaviors are complex – social, economic, political – and the environment in which the force is operating can be significantly less well defined than in war.  Concepts such as resolve, restraint, impartiality, legitimacy, consent, etc. will often guide the behaviors of the parties involved.  Rules of engagements are complex with many levels of escalation, and the use of force, whether appropriate to the situation or not, may impact all parties involved.  This paper describes an on-going effort to develop a simulation framework that supports the representation of the forces and sides involved in an operation and the factors that can influence their behavior.  The conceptual model for the framework and the representation of this model within a FOM are described.  A proof of principle experiment conducted with ModSAF used elements of the framework to impact peacekeeping behaviors.  The framework implementation and results of a proof of principle experiment are discussed.1.  IntroductionMilitary operations can occur within a wide spectrum of situations including force on force operations, large coalition operations against an enemy force, peacekeeping operations as part of an international peacekeeping force, etc.  Each of these situations has a unique set of forces and organizations involved, potentially including the US military forces, the enemy force, allied coalition forces, non-combatant civilians, non-governmental organizations, paramilitary groups, etc.  There are a large number of factors that can influence the behavior of the forces and organizations.  Some of these factors are well defined, while others are vague, and the importance of each factor varies across the spectrum of operations.  The relationship between these forces and organizations is not static and can change during the course of an operation. The Multiple Forces and Sides project is a US Army Simulation, Training and Instrumentation Command (STRICOM) sponsored effort that has focused on designing and developing a framework that will allow simulation systems to portray a large number of sides across the spectrum of military operations.  The first phase of the project was devoted to designing and developing the foundations of this framework simulation to provide a representational model for sides and relationships, to maintain the current state of the model and to provide means for changing the state and communicating state changes to simulation systems.  [1].  Primary design considerations were that the framework should be able to support a wide variety of models and simulations, and that the framework should be extensible.  The framework was integrated with US Joint Forces Command’s Joint Semi-Automated Forces (JSAF) and proof of principle demonstrations were conducted.The second phase of the project has focused on extending the framework’s representational model to include those factors associated with a side that can influence its behavior to support a system’s ability to simulate MOOTW.  In the case of a computer generated forces (CGF) system, information from the model could be accessed and used as basic actuators by its behavioral architecture.  This would allow a side to act/react in a particular way towards another side partially based on the characteristics and attributes of the other side (e.g., a group of civilians that believes a peacekeeping operation is “legitimate” and that the peacekeepers are “impartial” would behave differently towards the peacekeepers than a group of civilians that has different perceptions).  Simulation controllers (i.e., a White Cell) could change the state of the representational model, or models within the simulation could be used to change the state (e.g., a model of psychological operations within a simulation could be used to change the civilians perceived legitimacy of the peacekeeping operation). 2.  Requirements AnalysisA basic set of requirements for the simulation of multiple sides was developed in the initial phase of the project through the review of system specifications and requirements for the Warfighters Simulation (WARSIM) and One Semi-Automated Forces (OneSAF) CGF systems [2], [3] and [4], and through responses to a series of focus questions provided by subject matter experts (SMEs).  Key points in this basic set of requirements include:Sides can be aligned with each other to form a force.  These alignments can take various forms, each with a different level of commitment and coordination.Relationships can be categorized into broad categories – friendly, neutral, suspect, unknown, and enemy.The relationship between two sides is not necessarily symmetrical.During the project’s second phase, further analysis was performed to expand the requirements to support the simulation of MOOTW.  The WARSIM and OneSAF system specifications and requirements were reviewed again to ensure MOOTW specific requirements had been captured.  The bulk of the analysis effort was dedicated to reviewing a large volume of MOOTW related literature including:Joint doctrinal publications [5], [6], [7] and [8].US Army field manuals [9], [10] and [11].A series of MOOTW course readings from the US Army Command & General Staff College web site [12].Lessons learned information from the Center for Army Lessons Learned virtual research library [13].Policy, doctrine, guidance, training, and lessons learned information from the Joint Warfighting Center Peace Operations Research library [14].Points gleaned during the analysis were refined into requirements, documented [15], and submitted to the SMEs for review.  Discussions were held with the SMEs to clarify certain requirements, and a final revision of the requirements was published that incorporated their feedback.  The expanded requirements encompass two major concepts:Factors particular to a side, such as its resolve or restraint.Factors describing how a side is perceived, such as legitimacy or partiality/fairness. An example of this latter concept is described in the following excerpt [6]:“In MOOTW, legitimacy is a condition based on the perception by a specific audience of the legality, morality, or rightness of a set of actions. This audience may be the US public, foreign nations, the populations in the area of responsibility/joint operations area (AOR/JOA), or the participating forces. If an operation is perceived as legitimate, there is a strong impulse to support the action. If an operation is not perceived as legitimate, the actions may not be supported and may be actively resisted.  In MOOTW, legitimacy is frequently a decisive element. The prudent use of psychological operations (PSYOP) and humanitarian and civic assistance (HCA) programs assists in developing a sense of legitimacy for the supported government.Legitimacy may depend on adherence to objectives agreed to by the international community, ensuring the action is appropriate to the situation, and fairness in dealing with various factions. It may be reinforced by restraint in the use of force, the type of forces employed, and the disciplined conduct of the forces involved.”3.  Multiple Forces And Sides FrameworkThe forces and sides representation is designed around a conceptual model and a system model.  The conceptual model provides the framework for representing:Forces and sides,The relationships between forces and sides, andBasic information about each force and side.The system model defines how the conceptual model is implemented within the system.  The design achieves the goal of providing a flexible representation and implementation that can work with a variety of simulation systems.3.1 Conceptual ModelThe Forces and Sides conceptual model provides a framework for developing simulations that require the capability of having large numbers of forces and sides with dynamically changing relationships.  The model is intended to provide the simulation with knowledge of the current relationships between the forces and sides as well as basic information about each force and side.The Forces and Sides conceptual model is diagrammed in Figure 3.1.   At the top level of the model are forces. Forces are collections of one or more sides.  Sides are high-level organizational groupings.  Sides may be military, paramilitary, governmental (non-military) or civilian.  Examples of sides include the US Army (military), Red Cross (civilian), KLA (paramilitary) and FBI (governmental).  While sides are typically well organized and defined groups, they may also be hastily organized groups such as conscripted civilians.Figure 3.1.  Forces and Sides Conceptual ModelEach side is organized into a collection of units.  This breakdown is dependent on the side.  The conceptual model for forces and sides does not include unit level information.  The simulation provides unit level information.   Implicit in the model is that the simulation uses the forces and sides model to make appropriate modeling decisions.  The forces and sides model does not know anything about the simulation, except the relationships between the forces and sides.   This decision was made for the following reasons:The forces and sides model should support a wide variety of simulations. The management of forces and sides should have a low computational cost.  Tracking all the units in a simulation would be redundant and expensive.The disadvantage of this approach is that the model does not provide a complete top-down representation of the simulation starting from the force level and progressing downwards to the individual entities in the simulation.  While this may be a requirement for some systems, the conceptual model does not preclude building this representation as another piece of the simulation system.  To build such a representation, developers would be able to take advantage of the ability of the unit object to inherit the attributes of its force and side.The forces and sides representation enables simulations to keep track of the relationships between the various forces and sides involved in an exercise.  The representation also contains information that describes each force and side.  While these attributes have semantic meaning, the representation does not control or mandate how a particular simulation system uses these attributes.For example, both forces and individual sides have a morale attribute.  If a side with a high morale rating joins a force with a low morale rating, the forces and sides representation will not modify the force’s or the side’s morale ratings. Models within the simulation system could modify the ratings or a human operator could modify the ratings, but this would be the decision of the simulation, not of the forces and sides representation.3.2 Simulation FrameworkThe Forces and Sides system model consists of two main building blocks:The Forces and Sides Hierarchical Object Model (FS HOM)The Forces and Sides Agent (FSA)The FS HOM is a code base that maintains and provides access to the current state of the Forces and Sides model.  The FS HOM can be incorporated into any simulation software that requires access to this data.  The FSA is an application that controls the current state of the Forces and Sides model.  The FSA provides access to the Forces and Sides model that allows a user, a model, or another simulation system to modify the state of the Forces and Sides model.  The following sections provide an overview of the FS HOM, the FSA, and how the state of the Forces and Sides model is communicated and changed.3.2.1 Forces & Sides Object ModelThe FS HOM was written in C++ and was comprised of the FSObjects (forces and sides), the attributes, attribute templates, and attribute template managers for the FSObjects and the relationships between the FSObjects.  For the project’s second phase, we added several new attributes to the forces and sides, some of which necessitated changes to how relationships were being handled internally.The organizations supported by the FS HOM are forces and sides.  All forces and sides must have a name and a parent.  Forces can have NULL parents but sides must have either a force or another side as a parent.  Forces and sides each have their own set of default attribute templates that are maintained by the attribute template manager for that particular class.  Upon creation, these attribute templates are registered with the attribute template manager for a specific type of FSObject and all FSObjects of that type will be have that attribute.For the project’s first phase, all sides were provided with morale, leadership and type description (e.g., military, paramilitary, etc.) as attributes.  All forces were provided with morale, leadership, type (coalition, alliance, and grouping), and command side as attributes.  Several new attributes were added to support MOOTW.  Table 3.1 provides the full complement of scalar attributes for forces and sides.Table 3.1.  Scalar Attributes of Forces and Sides.Force Scalar AttributesSide Scalar AttributesCommand SideEducationMoraleEthnicityRestraintHuman NeedsSecurityLeadershipTypeMoraleLeadershipPerceived Legitimacy of Own ForceResolveReligionResolveRestraintSecurityTypeIf the user wants to change the value of an attribute for a particular force or side, then an attribute is created for that force or side which has a pointer to the desired attribute template and its new value.  When a query is made for the value of an attribute for a particular force or side, the FS HOM first looks to an attribute for a value.  If the attribute does not exist, then the FS HOM looks to the parents of the force or side to see if they have an attribute for that value.  If none exists, then the value is taken from the attribute template.Forces and sides also maintain a list of relationships with other FSObjects.  The relationship between two FSObjects can be friendly, neutral, suspect or enemy.  To support MOOTW, we added perceived legitimacy and perceived credibility to forces.  These attributes are lists of integers indicating how legitimate or how credible one force views another force.  We also added perceived partiality to forces that maintains a list of how partial (biased) one force is towards another as viewed from an observer.Template classes were generated to handle all the 1-D attributes (relationships, perceived legitimacy and perceived credibility) and the 2-D attribute (perceived partiality).  The values themselves are maintained in an associative array within the instantiation of the template class.  An entry is made in this array each time the user enters an attribute change.  These attributes are not required to be symmetric.When a query is made for the relationship between one FSObject and another, the FS HOM first checks for a direct relationship between the two.  If one doesn't exist, then the FS HOM checks for a direct relationship between all the parents of the first FSObject and the second FSObject until the parents are exhausted.  If one still doesn't exist, then the FS HOM checks for a direct relationship between the first FSObject (and all its parents) and the parents of the second FSObject until all the parents are exhausted.  If every search resulted in no direct relationship, then the relationship is neutral. Using this scheme, FSObjects are neutral by default unless they share a common parent in which case they are friendly.For example, in Figure 3.2, the following checks are made in determining the relationship between S3 and S4:S3-S4; S1-S4; F1-S4; S3-S2; S1-S2; F1-S2; S3-F1; S1-F1; F1-F1Figure 3.2.  Determining Relationship.The first direct relationship encountered is returned.  By default the two sides are friendly because the relationship between F1 and F1 is friendly.  A similar mechanism is used to finding the perceived legitimacy/credibility of one force to another and the perceived partiality between two forces as viewed by a third.  The default return value is specified at class instantiation.3.2.2 Forces & Sides AgentThe FSA is responsible for maintaining and distributing the global state of the forces and sides model.  The FSA provides a user interface that allows for the creation of scenarios and allows for viewing and modifying the current state of the forces and sides model during an exercise.  The FSA also supports a network interface that allows other simulations in an exercise to modify the state of the forces and sides model.  Figure 3.3 shows a snapshot of a set of forces and sides that have been created with the FSA.  The tabs equate to the functions possible with the FSA.The only change in this GUI is the addition of the tab, Perceived Attributes, which allows for the user to modify the perceived attributes that were introduced into the FS HOM to support MOOTW.Figure 3.4 shows a sample table through which the Exercise Controller can modify the perceived credibility between the forces that have been created.  As noted previously, the attributes do not have to be symmetrical.Figure 3.3.  Forces and Sides Agent.Figure 3.4.  Force-to-Force Perceptions of Credibility.The FSA is written in Java-Swing.  It interfaces with its local copy of the FS HOM using the Java Native Interface (JNI).  The FSA can exist as a stand-alone application or be integrated into an existing application.3.2.3 Communicating and Changing the State of the Model.The FSA has been implemented as an HLA compliant application.  The Agile FOM Interface (AFI) [6] has been integrated with the FSA to allow the distribution of the state of the forces and sides model through the RTI.  The FSA joins the federation as a separate federate and allows the super user for the federation (e.g., the Exercise Controller) to manage the forces and sides in the federation. The FSA’s Simulation Object Model (SOM) is based upon the FS HOM.  Table 3.2 shows the SOM’s Object Class structure and Table 3.3 shows an excerpt of the Object Attribute Table.   The Organization object class is the base class for Forces and Sides.  The attributes defined at this level are those that are common to both forces and sides (name, parent, morale, leadership, relationships, restraint, resolve, and security).Table 3.2.  SOM Object Class Structure Table.Class1Class2Organization (PS)Force (PS) Side (PS)Table 3.3.  Excerpt of SOM Object Attribute Table.ObjectAttributeOrganizationnamemoraleleadershipparentForcerelationsrestraintresolvesecurityForcecommandSidetypelegitimacycredibilitypartialitySidetypeforces_legitimacyreligionethnicityhuman_needseducationThe FSA allows Exercise Controllers the capability to modify the state of the model as the scenario is executing.  Model features that can be modified during scenario execution include:Changing inter-force and inter-side relationships.Creating a new force or a side.Modifying force or side characteristics.The FSA is responsible for propagating those changes to the rest of the simulations in the federation.  The FSA also provides an interface that allows other simulations to modify the state of the model when appropriate.  The interaction classes that are used to request and propagate changes are show in Table 3.4.The RequestForceSideModification interaction encompasses all requests that would be made by a slave FS HOM (an FS HOM instance in a federate) to the master FS HOM (the FS HOM instance in the FSA).  These interactions include requests to change attributes, relationships, alignment (i.e. parent), credibility, legitimacy and partiality.Table 3.4.  Interaction Class Table.Interaction ClassInteraction SubclassRequestForceSideModification (IR)RequestAttributeChange (IR)RequestAlignmentChange (IR)RequestCredibilityChange (IR)RequestLegitimacyChange (IR)RequestPartialityChange (IR)RequestRelationChange (IR)RequestNewFSObj (IR)RequestObjectRemoval (IR)ForceSideModificationResponse (IR)The RequestNewFSObj and RequestObjectRemoval interactions are requests for the creation and deletion of FS Objects by the slave FS HOM to the master FS HOM.  The ForceSideModificationResponse interaction is the response sent by the master FS HOM to the slave FS HOM to indicate the status of any of the above requests.4.  Using The Framework to Support MOOTW BehaviorsA small proof of principle experiment was conducted with Modular Semi-Automated Forces (ModSAF) to use the framework to support the simulation of MOOTW behaviors.4.1 Integrating the Framework With ModSAF 5.1During the first phase of the project, the FS HOM was integrated with the Agile FOM Interface version of Joint Semi-Automated Forces (JSAF/AFI), and then federated with the FSA using RTI 1.3.  In that effort, we were able to make use of the relationship and the morale information provided by the FS HOM to affect the behaviors of the JSAF entities.  The relationships between forces and sides were used to determine the colors of the vehicles on the Plan View Display (PVD) and to control the actions on contact, the rules of engagement, and the ability to resupply other vehicles.  The morale of a force or side was used to affect the competence of a unit.  We integrated all these changes into ModSAF 5.1 with some slight modifications.No changes were made to how vehicles are displayed on the ModSAF Graphical User Interface (GUI).  The ModSAF GUI is given an affiliation to a force or side at startup and each vehicle is affiliated with a force or side at creation.  The colors that are used to display the vehicles on the GUI depend on the relationship between the GUI's affiliation and the vehicle's affiliation.  Friendly forces appear in blue, enemy forces in red, suspect forces in yellow and neutral forces in green.A slight change was made in the threat assessment algorithm, developed during the project’s first phase, so that the algorithm will make use of the restraint information in the FS HOM.  The threat assessment algorithm is implemented as follows:Friendly vehicles are not threats.Enemy vehicles are threats.Suspect vehicles are not threats by default.  However, if the restraint is low (less than or equal to 50) and if any vehicle in a suspect force fires upon any vehicle in my force, then all vehicles in that suspect force are a threat.  If the restraint is high (greater than 50), then that suspect force is a threat only if one of our vehicles has sustained damage.Neutral vehicles are not threats by default.  However, if the restraint is low (less than or equal to 50) and if a neutral vehicle fires upon any vehicle in my force, then that firing vehicle is a threat.  If the restraint is high (greater than 50), then that neutral vehicle is a threat only if one of our vehicles has sustained damage.By replacing the ModSAF threat assessment functions in the actions on contact, the rules of engagement and the resupply task with the above threat assessment algorithm, relationship and resolve information from the Forces and Sides model would impact all ModSAF entities and units.A generic accessor function was also added to ModSAF so that all of the FS HOM attributes would be available to any portion of the ModSAF code that required access to the attributes.  Finally, the FOM used by ModSAF 5.1 was extended to encompass the FSA SOM and interactions described in Section 3.2.3.4.2 Proof Of Principle DemonstrationSeveral entities that could be players in a MOOTW battlespace were added to ModSAF.  These entities included:Non-Combatant Civilian (individuals & groups)Red Cross WorkerCivilian Pickup TruckSchool BusParamilitary Soldier (individuals & groups)Paramilitary Pickup TruckThe Red Cross Worker and Civilian vehicles (pickup truck and school bus) are unarmed while both the Paramilitary soldier and the Paramilitary Pickup Truck carries an AK-47 with small amounts of ammunition.  The Non-Combatant Civilians, while unarmed, were provided with the ability to engage other forces by throwing rocks.  A behavior was designed and developed for a squad of soldiers conducting a peacekeeping Presence Patrol.  A Presence Patrol is used to establish a presence of force and exhibit impartiality towards the previously warring factions.  The behavior was broken down into four states:  Patrolling, Inspecting, Defending, and Aborting.  Patrolling and Aborting are the only states that require user input.  Patrolling requires a point or line object to define the route and Aborting requires a point object to define the home base that the patrolling unit will withdraw to.  All other factors affecting the performance of the Presence Patrol are obtained from the FS HOM.Patrolling parameters (e.g., rate of march, formation, etc.) are modified according to both the security and resolve attributes of the patrolling unit.  The rate of march is determined by resolve.  It ranges from a cautious walk for a unit with high resolve to a brisk run for units with low resolve. The formation type used during the patrol depends on the value of the security attribute.  A patrolling unit with low security (high importance of mission accomplishment) would patrol in a wedge formation, while a patrolling unit with higher security (high importance on force protection) would patrol in a staggered column formation.  This has the effect of the soldiers being more spread out at a lower security setting and more closely grouped, but not huddled, at higher security settings.The way Inspections are carried out depends on the:Security and resolve of the inspecting unit, and Relationship with the side being inspected.If the entity/unit to be inspected is either considered neutral or suspect an inspection is carried out.  Friendly and enemy forces are not inspected.  The value of the security attribute defines the posture of the soldiers providing cover for the inspectors.  A low value leaves the soldiers standing, a medium value has the soldiers take a kneeling stance, and the soldiers assume the prone position for a high security value.  The security setting also determines the number of inspectors sent to conduct the inspection.  The number ranges from one to three with one for a low security value and three for a high value.  The area for conducting inspections varies based on both security and resolve and adjusts the width of the swath along the patrol route.  A higher resolve results in further deviation from the course to conduct inspections while a higher security setting results in a more cautious route where inspections are conducted only in close proximity to the patrol route.The Defending state becomes active whenever an enemy is encountered or if incoming fire is detected.  The value of the security attribute is used in this state by affecting the amount of time spent waiting before resuming the patrol.The Aborting state is triggered from the Defending state when a threshold calculated from the number of incoming rounds, security setting, and resolve setting is exceeded.  A high resolve indicates a strong desire to accomplish the mission and raised the threshold while a high security setting indicates a tendency to protect the soldiers and to call off the mission in the face of strong resistance. A sample scenario was generated involving a US Army Infantry squad conducting a Presence Patrol in an area containing Paramilitary forces.  The scenario was run numerous times with different relationships between the sides and different values for select attributes.  Examples of how the state of the Forces and Sides model affected the behavior of the patrolling unit are shown in Figures 4.1 and 4.2.  In the situation depicted in Figure 4.1, the patrolling unit considered the Paramilitary Side as neutral and had low values for the resolve and security attributes.   The figure shows the patrolling soldiers spread thinly across the road, moving too quickly to ensure complete inspections, not taking defensive precautions during inspections, and only sending one soldier out to inspect vehicles encountered.In the situation depicted in Figure 4.2, the patrolling unit considered the Paramilitary Side as suspect, and had high values for the resolve and security attributes.  For each Paramilitary vehicle encountered, three soldiers were dispatched to inspect the vehicle, the inspection was conducted at a slower pace, and the remainder of the squad formed a defensive position in the prone position. Figure 4.1.  Unit With Low Resolve and Security Inspecting Neutral Vehicles.Figure 4.2.  Unit With High Resolve and Security Inspecting Suspect Vehicle.5.  ConclusionsWith our military forces participation in MOOTW becoming more commonplace, greater emphasis is being placed on ensuring that MOOTW can be modeled in the simulations used for training, analysis, and experimentation.  This can be challenging when one considers the large number of factors influencing MOOTW that must be modeled.  Many existing simulations were only designed to model force-on-force situations and extending them to support MOOTW models and behaviors may not be straightforward.The project’s two phases have demonstrated that the Multiple Forces and Sides framework can allow a force-on-force simulation to simulate operations involving many sides (>30) with dynamic relationships between the sides.  Additionally, the project has shown that the framework can be used to support the development of fairly generic MOOTW behaviors that are influenced by the state of the Forces and Sides model.While the framework has been developed with an eye towards the OneSAF and WARSIM systems, we believe that the Multiple Forces and Sides framework can be suitable in supporting the modeling of MOOTW within a wide range of applications.  The objects and attributes modeled in the FS HOM do not capture all factors that are important in MOOTW.  Additional object classes could easily be added to the FS HOM to capture key factors that a particular application requires.  For example, a Leader class could be added to the FS HOM to allow the modeling of individual characteristics of a force / side leader.The current implementation of the FSA relies on Exercise Controller intervention to affect a change in the attributes of a force / side, and to change relationships.  Models that do affect the values of attributes, or that change relationships, could be integrated, or federated, with the FSA to provide a more robust simulation of MOOTW.  With more detailed knowledge acquisition, the FSA could be augmented with models that affect the attributes and relationship changes based upon the actions and events during the simulation.  For example, a PSYOP model could be federated with the FSA to change the level of cooperation and belligerence of non-combatant civilians towards a peacekeeping force.  Factors affecting the civilians’ attitude may include the perceived legitimacy and perceived partiality of the peacekeeping force. 6.  AcknowledgementsThis effort is being funded by US Army STRICOM on contract number N61339-99-C-0035, COR: Michelle Kalphat.  The authors would also like to acknowledge the assistance in requirements analysis provided by Jeff Bittel (TPO OneSAF), Jim Cook (MMBL), Jim Kollenberg (LMIS), Bob Knox (LMIS), MAJ Tim Metivier (NSC) and Roy Ramsey (NSC). References[1]	J. Bergenthal, D. Lin, D. Macannuco, R. Patel: “A Simulation Framework for Multiple Forces and Sides”, 9th Computer Generated Forces & Behavior Representation Conference, Paper 9TH-CGF-051, May 2000.[2]	JSIMS Requirements Trace Matrix (RTM), Version 3.3, 8 February 1999.[3]	WARSIM 2000 System Specification, Drawing Number 150474, Rev Level A, 18 March 1999.[4]	OneSAF Operational Requirements Document (ORD), Version 1.1, 14 January 2000.[5]	Joint Publication 3-0, Doctrine for Joint Operations, 1 February 1995[6]	Joint Publication 3-07, Joint Doctrine for Military Operations Other Than War, 16 June 1995 [7]	Joint Publication 3-07.2, Joint Tactics, Techniques, and Procedures for Antiterrorism, 17 March 1998[8]	Joint Publication 3-07.3, Joint Tactics, Techniques, and Procedures for Peace Operations, 12 February 1999[9]	Field Manual 100-15, Corps Operations, 29 October 1996 [10]	Field Manual 100-20, Military Operations in Low Intensity Conflict, 5 December 1990 [11]	Field Manual 100-23, Peace Operations, December 1994[12]	Course readings available at  HYPERLINK "http://www-cgsc.army.mil/djco/COURSES/MS520-0/index.htm" http://www-cgsc.army.mil/djco/COURSES/MS520-0/index.htm[13]	Numerous articles at  HYPERLINK "http://call.army.mil/call.html" http://call.army.mil/call.html[14]	Accessible at (user id and password are required)  HYPERLINK "http://www.jwfc.jfcom.mil/genpublic/library.html" http://www.jwfc.jfcom.mil/genpublic/library.html[15]	Lockheed Martin Information Systems Advanced Simulation Center, CDRL A001 - Scientific and Technical Report, “Multiple Forces and Sides Concept Document Version 2.0”, 25 July 2000. [16]	D. Macannuco, B. Dufault, L. Ingraham: “A FOM Agile Framework,” Simulation Interoperability Workshop, Paper 98F-SIW-025, September 1998.Author BiographiesJEFFERY J. BERGENTHAL is a Principal Investigator at Lockheed Martin Information Systems Advanced Simulation Center (LMIS-ASC) and has over 14 years experience in modeling and simulation.  Jeff currently provides project management and key engineering services in advanced technology development projects involving Computer Generated Forces being performed for STRICOM and the Naval Research Laboratory.  He received his BS in Management Science from the Massachusetts Institute of Technology and his MS in Operations Research from the University of California, Los Angeles.  Prior to joining Lockheed Martin, Jeff served as an Air Defense Artillery officer in the US Army.SEAN S. CULLEN is a Software Engineer at Lockheed Martin Information Systems Advanced Simulation Center (LMIS-ASC).  He has three years of experience in modeling and simulation.  Sean received his BS in Computer Science from Middle Tennessee State University.  Prior to joining Lockheed Martin he served the U.S. Army as a Specialist in an Air Defense Artillery unit and participated in operation "Determined Resolve".DORIS C. LIN is a Senior Software Engineer at the Lockheed Martin Information System's Advanced Simulation Center and has over six years experience in modeling and simulation.  Doris is currently working on both the Multiple Forces and Sides project and on various projects involving Export CGF.  She received her BS in electrical engineering from the University of Massachusetts, Amherst and her MS in electrical engineering from Rensselaer Polytechnic Institute.  Prior to joining Lockheed Martin, Doris was an Edison Engineer at General Electric working on various programs including the Bradley Fighting Vehicle. The prudent application of the appropriate military capability.  “A single act could cause significant military and political consequences; therefore, judicious use of force is necessary. Restraint requires the careful balancing of the need for security, the conduct of operations, and the political objective. Excessive force antagonizes those parties involved, thereby damaging the legitimacy of the organization that uses it while possibly enhancing the legitimacy of the opposing party [6].” The degree to which the force/side places importance on force protection and casualty avoidance in its military operation.  Low values equate to greater importance being placed on mission accomplishment; high values equate to greater concern for force protection and casualty avoidance at the expense of mission accomplishment Firmness of purpose; determination to act; degree of cohesion.ForceASide1Side2ForceBSide3Side4Relationship A to BRelationship B to AUnitUnitUnitUnitUnitUnitUnitForces /Sides ModelSimulation SpaceEquipment