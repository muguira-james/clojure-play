SISO Transfer Control Study GroupFinal Report Draft14 March 2004This report describes proposed changes to the transfer control function to maintain the integrity of DIS and ensure interoperability.This document is designed for two-sided printing.Prepared byFrank Hill404.464.4511fhill@sdslink.comThis Page Left BlankTable of Contents	1.0	Introduction	1-1	2.0	Study Group Activities	1-1	3.0	Study Group Website	1-1	4.0	Transfer Control Analysis	1-1		4.1	DIS	1-2		4.2	HLA	1-2	5.0	Recommendations	1-2		Appendices	A.	 IEEE 1278.1a - Transfer Control	A-1		4.5.8.3 	Transfer Control	A-1		4.5.8.3.1  	Definitions	A-2		4.5.8.3.2  	Transfer Control Rules	A-2		4.5.8.3.2.1  	General Rules	A-2		4.5.8.3.2.2  	Push Transfer Rules	A-7		4.5.8.3.2.3  	Pull Transfer Rules	A-9		4.5.8.3.2.4  	Transfer Control Timers	A-11		4.5.8.3.3  	Related PDUs	A-12		4.5.8.3.3.1  	Transfer Control Request PDU	A-12 		4.5.8.3.3.2  	Acknowledge-R PDU	A-14		4.5.8.3.3.3 	Set Record-R PDU	A-15		4.5.8.3.3.4 	Record-R PDU	A-16		4.5.8.3.3.5  	Event Report PDU	A-174.5.8.3.3.6 	Entity State PDU	A-18		4.5.8.3.3.7 	Data Query PDU	A-20		4.5.8.3.3.8 	Data PDU	A-21		4.5.8.3.3.9 	Record Query-R PDU	A-22		4.5.8.3.4 	Related Records	A-23	B.	IEEE 1278.1a - Other Changes	B-1		1.0	General	B-1		3.1	Definitions	B-1		4.5.1	PDU Header	B-3		5.1.4	Symbolic Names	B-3		5.2	Basic Data Types and Records	B-4		5.2.61	PDU Status Field	B-4		5.2.62	Munition Record	B-4		5.2.63	Engine Fuel Record	B-5		5.2.64	Storage Fuel Record	B-6		5.2.65	Designation Record	B-6		5.2.66	Expendable Record	B-7Table of Contents				5.2.67	Total Record Sets Record	B-8		5.2.68	Launched Munition Record	B-8		5.2.69	Association Record	B-9		5.2.70	Location Record	B-10	C.	DIS Enumeration Document Changes	C-1		1.0	General	C-1		3.4	PDU Status	C-1		3.4.1	Transferred Entity Indicator	C-1		7.3.	Acknowledge PDU	C-1		7.3.2	Response Flag	C-1		7.7	Record-R PDU	C-1		7.3.2	Record Query-R PDU	C-1		11.4	Transfer Control Request PDU	C-1		11.4.1	Transfer Type	C-1		14.0	General Records	C-2				14.1	Munition Record	C-2		14.2	Engine Fuel Record	C-2		14.3	Storage Fuel Record	C-3		14.4	Designation Record	C-3		14.5	Expendable Record	C-3		14.6	Association Record	C-4		14.7	Location Record	C-4	D.	DIS Study Group Participants	D-1	E.	IEEE 1278.1 - Annex D Transfer Control	E-1		D.1	Scope	E-1		D.2	Background	E-1		D.3	General Guidelines	E-1		D.4	Design Guidelines	E-2		D.4.1	Uses of Transfer Control	E-2		D.4.2	Entity Processing	E-4		D.4.2.1	Local and Remote Entity Data Bases	E-4		D.4.2.2	Determining Local/Remote Status	E-4		D.4.2.3	Avoiding Duplicate Entities	E-4		D.4.2.4	Parking Entities	E-4		D.4.3.5	Re-entering an Exercise	E-4		D.4.4.6	Validity Checks	E-5		D.4.2.6.1	Ownership	E-5		D.4.2.6.1	Messages Out of Sequence	E-5			D.4.2.7	Fidelity Considerations	E-5		D.4.2.7.1	Associated PDUs	E-5		D.4.2.7.2	Appearance	E-5		D.4.2.8	Who owns The Entity?	E-5D.4.2.8.1	General	E-5D.4.2.8.2	Transferred Entity Indicator	E-5D.4.2.8.3	Automatic Generation of the Ownership 				Data Query PDU	E-5		D.4.3	Automatic and Manual Modes	E-6		D.4.4	Human System Interface	E-6		D.4.5	Push Transfer Request	E-7Table of Contents		D.4.6	Pull Transfer Request	E-8		D.4.7	Internal State Data Exchanges	E-8		D.4.8	Transfer Control Management	E-8		D.4.8.1	Federation Agreements	E-8		D.4.8.2	Initialization Data	E-8		D.4.9	Processing Associated Records	E-9		D.4.10	Transfer Timing Considerations	E-10		D.4.11	Simulation Tool Changes	E-10		D.4.11.1	DIS Loggers	E-10		D.4.11.2	Multi-Level Security Applications	E-10		D.4.12	Transfer Control Gateway	E-10		D.4.13	Live Entity Transfers	E-11		D.4.14	Reliability Service	E-11	F.	HLA Changes	F-1		1.0	General	F-1		2.0	RPR FOM 1.7 Changes	F-1		2.1	Object Class Structure Table	F-1		2.2	Object Interaction Table	F-1		2.3	Attribute Table	F-2		2.4	Parameter Table	F-3		2.5	Enumerated Datatype Table	F-3			2.6	Complex Datatype Table	F-5		2.7	Routing Space Table	F-5		2.8	Object Class Definitions	F-5		2.9	Attribute Definitions	F-6		2.10	Parameter Definitions	F-6		2.11	Notes	F-6		3.0	GRIM Changes	F-6	G.	Future Enhancements	G-1		1.0	General	G-1		2.0	Transfer Control Order	G-1		3.0	Transfer Control for Game Players	G-1		4.0	Air Platform Capability Record	G-1		5.0	Air Mission Record	G-4		6.0	Capability Record	G-6		7.0	Primary Entity Record	G-8		H.	Terms of Reference	H-1		This Page Left Blank	1.0	IntroductionThe paper presented by Frank Hill at the Spring 2003 SISO Interoperability Workshop (SIW) indicated that the current transfer control design contained in IEEE 1278.1a was not interoperable as evidenced by an analysis of the requirements and research into DoD and commercial projects that had implemented transfer control.  (See 03S-SIW-044 - Transfer Ownership - A Marvelous Capability Sitting Out The War.) This was the impetus for establishing the SISO Transfer Control Study Group which was chartered by the SISO CC to study and propose changes to the DIS standard and HLA RPR FOM to ensure that transfer control in a DIS or HLA environment using the RPR FOM would be basically interoperable.  The group was also to look at native HLA transfer control implementations to identify any issues there as well.Since several United States Department of Defense (DoD) projects had already implemented transfer control, and other would be implementing the capability in early 2004, it was imperative that the group reached consensus on the changes needed as soon as possible.  It was agreed that this necessitated a two-stage process. First to come to agreement on specific technical issues, documenting the rational and discussions.  Second, to write the technical changes as draft changes to IEEE 1278.1a.  That way, the exact wording could be reviewed early on which would expedite consensus by the simulation community.  It would also expedite the work of the Product Development Group (PDG).2.0	Study Group ActivitiesThe TC Study Group began its work on 11 August, 2003 with the first telecon.  A series of telecons were held during the life of the group, as well as, meetings at the Fall 2003 SIW and the Spring 2004 SIW.The first phase of the study group activity addressed defining record formats and values that would be needed to convey internal state data when handing over an entity.  The second phase was reviewing and improving the sequence of messages involved in a transfer transaction.  The third phase was defining a set of rules for transfer control.  This culminated in the review of that portion of the Transfer Control Study Group Final Report that covered all DIS changes. The forth phase was to look at HLA RPR FOM changes needed for the new transfer control approach.  Finally, native HLA transfer control was looked at.  The last activity was a final version of the DIS Study group Final Report that included DIS and HLA recommendations and draft changes to related documents.  A request to form a Product Development Group was the last act of the Transfer Control Study Group.Although anyone was welcome to actively participate, as usual, there was a core set of volunteers who set about to produce draft changes, analysis and reviews.  These core volunteers were present at the majority of the telecons and produced the bulk of the work. A series of weekly one and a half hour telecons were held to review draft documents and ideas.  The core members of the group and a list of subscribers to the study group are contained in Appendix I. 3.0	Study Group DocumentsA series of documents were produced in support of the group’s activities.  These were posted to the Transfer Control Document Library on the SISO Website and will be transitioned and archived on the Transfer Control PDG website.Meeting MinutesTerms of referenceRecord Definition DocumentRules DocumentFinal Report4.0	Transfer Control AnalysisThe overarching principles were to ensure that the transfer control design supported as broad a transfer of types of entities as possible, that any changes would be compatible with HLA and that the types of data records required be kept to what experience and analysis showed would most probable be required.  Only two of the new records were deemed to be essential.  The rest are optional records that may be implemented as needed by federation agreements.It was decided that it would be appropriate to use some terms introduced by HLA that also applied to a DIS environment as well.  This includes use of the terms “federate”, “federation”, and “attributes”.  As used for DIS, they have identical meanings.  Many other terms have been introduced for clarity to explain various aspects of the transfer control process with precision. 4.1	DIS ApproachThe initial task that was tackled was the development and agreement on a set of internal store data records used during the transfer process.  This was followed by an analysis and modification to the messages and message sequence for transfers.  Changes were made keeping in mind the need to be backward compatible, in so far as practical, with existing transfer control implementations.  Then, the existing transfer control rules were reviewed and modified to ensure interoperability.  It was felt that considerable more detail was required to assist implementers and ensure that resulting software would be interoperable.  The guiding principle was to include a rule if it was deemed necessary to ensure compatible functionality. In other words, if the rule was omitted, there was a good likelihood that some developers, especially if they had limited experience with distributed simulation or simulators,  would overlook important considerations that would cause interoperability issues when their software was undergoing certification or integration testing with other federates.  It was generally agreed that any internal state record data or other records should be based on systems analysis, experience, and what has already been implemented broadening to include transfers of all entity kinds and platforms.  Also, it was agreed that some transfer would be automatic and some would involve operator intervention and control.   This needed to be explicated accounted for in the requirements.The IEEE 1278.1a, para 4.5.8.3 rewrite lays out the functional requirements for the transfer control capability while leaving developers free to implement whatever software program design fits their situation.   Based on past experience, the additional detail added to the standard should reduce the software development costs and reduce the risk of interoperability issues later on.4.2	HLA ApproachThe HLA implementation of transfer control was addressed last.  First, the HLA RPR FOM and GRIM updates were coordinated.  Then, contact was made with developers who have implemented transfer control in a native HLA environment.5.0	RecommendationsIt is recommended that a Transfer Control Product Development Group (PDG) be formed to prepare draft changes to  the IEEE 1278.1a DIS Standard.    The draft changes produced by the TC Study Group will serve as the initial draft to be reviewed by a wider distributed simulation community and balloted on.  The documents in the Transfer Control Study Group document library on the SISO website should be transferred to an archive file as part of the Transfer Control PDG Document Library maintained on the SISO website. Appendix AIEEE 1278.1a  Transfer Control1.0	GeneralThe Entity handover function is described in paragraph 4.5.8.3 of the IEEE 12178.1a-1998 DIS Standard. This appendix contains a complete replacement for that paragraph and redesignates the function as the Transfer Control Function as that is the term that has come to be commonly used.  Changes to other paragraphs of the standard that are required to support the Transfer Control function are contained in Appendix B.   Changes to the DIS Enumeration Document for transfer control are in Appendix C.  Replace the present paragraph 4.5.8.3 in its entirety with the following:4.5.8.3 	Transfer ControlThe handover of an entity and associated attributes from one federate to another shall be accomplished using the Transfer Control process.  This applies to constructive, virtual and live entity transfers and to any combination (e.g., virtual-constructive, constructive-constructive, etc.) unless otherwise indicated.  This process is initiated by sending a Transfer Control Request PDU that contains a transfer request..  The transfer of an entity may occur as a Push or Pull transfer.  These are defined in the  3.1 Definitions Section.  The Transfer Control Request (TCR) PDU provides a capability to transfer control of a complete entity from one federate to another in an exercise. (For the HLA RPR FOM, this is referred to as the transfer of a base entity object.)    Annex D contains informative design guidance for implementing transfer control.There is no best effort to maintain a certain level of fidelity for a transferred entity.  The basic fidelity required to be maintained is specified in this section.  Additional fidelity requirements, and any restrictions on transfers between federates, are expected to be addressed in federation agreements.  A transfer transaction may be in progress at one federate and not at the other federate involved in the transfer due to the delay in exchanging messages.  There should not be more than a few seconds when the transfer status differs between the two federates.Broadcast transfers where a federate is asking multiple federates to assume ownership of an entity shall not be allowed.  Likewise, swap transfers, as mentioned in the 1278.1a standard, shall  not be allowed. Any kind of entity, including an environmental process entity, but excluding an Aggregate Entity, may be handed over from one federate to another.   A federate is deemed to have implemented the Transfer Control function if initiates or receives and processes the Transfer Control Request PDU.  A federate that does not implement the Transfer Control function is not required to process any of the PDUs unique to this function.   The PDUs associated with the Transfer Control function are listed in Table 60.1.  The Records associated with the Transfer Control Function are listed in 4.5.8.3.4.Table 60.1 - Transfer Control Function PDUsPDUTransferTransactionNon-TransactionTransfer Control Request  xSet Record-RxRecord-RxxAcknowledge-RxEntity State  xEvent Report (Ownership)xData Query  (Ownership)xData   (Ownership)xRecord Query-R x4.5.8.3.1	DefinitionsThe terms used by Transfer Control are defined in the 3.1 Definitions Section of this standard.	4.5.8.3.2	Transfer Control Rules.The general and specific rules that apply to the Transfer Control function are listed here.4.5.8.3.2.1	General Rules.The following general rules shall be met by a federate that implements the Transfer Control function or requires knowledge of federate ownership in a federation that includes transfer control capable federates, or desires to exchange internal store data outside of a transfer transaction.	a)	For Federates that implement the Transfer Control Function, the following rules apply:	1)	The Entity ID of the transferred entity shall remain the same and shall not change as a result of either the completion or termination of a transfer transaction.		2)	Both Simulation Management and Simulation Management with Reliability PDUs are used in addition to PDUs that belong to other families.   Simulation Management with Reliability PDUs are permissible to use regardless of whether the Acknowledged service level has been requested.		3)	All references to the Entity State PDU shall be applicable to the Entity State Update and the Environmental Process PDUs unless otherwise indicated.	4)	All transfers shall use the Required Reliability Service of Unacknowledged since not all requirements of the Acknowledge Reliability Service are used.  	5)	There shall be no limit on the number of times an entity can be transferred between federates including being transferred back to a federate that previously owned it.	6)	A federate may implement either a full or limited  transfer control capability (see para 3.1- Definitions).  See also 11) and 25) in this sub-paragraph.	7)	A federate that implements transfer control shall ensure that the determination of whether an entity is a local or remote entity is not based solely on the Simulation Address portion (Site/App) of the Entity ID for the entity and shall account for the fact that the Simulation Address (Site/App) portion of a remote entity may be identical to that of its own Simulation Address.		8)	A transfer may be initiated automatically by a federate or manually by operator action at a federate.  Likewise, the processing of a TCR PDU or Acknowledge-R PDU at the receiving federate may be the result of automatic logic or manual intervention by an operator.   Both methods may be available to a federate and used for different transfer transactions.	9)	Simultaneous transfer transactions shall be allowed between federates so long as different entities are involved in each transfer transaction.  The number of simultaneous transfer transactions allowed is beyond the scope of this standard.  There is no requirement for a federate to be able to handle more than one transfer transaction at a time whether initiated by itself or in response to a received transfer request.	10)	When a transfer is in progress, it is referred to as a transfer transaction. A transfer transaction may be initiated automatically or manually.   It may be responded to automatically or manually or a combination of the two methods.	11)	A federate that does not implement the full or limited Transfer Control capability shall not be required to respond to the Transfer Control Request PDU or any PDU’s sent as part of a transfer transaction.	12)	The only federates involved in a transfer transaction shall be the Divesting Federate and the Acquiring Federate.	13)	A transfer capable federate shall ensure that it does not initiate a new local entity using an Entity ID that already exists for either a local or remote entity currently in its data base.	14)	To avoid potential ownership conflicts during the rejoin of a federate after exercise start, transfer capable federates shall implement a means to prevent duplicate Entity ID’s. 	15)	A federate that implements the transfer control function and provides for no operator interaction shall include a capability to automatically terminate a transfer transaction started by the simulation application based on, as a minimum, timeouts.  Other criterion may be applied as well. 					16)	Before the completion of a transfer transaction, either federate involved in a transfer transaction may terminate the transaction by automatic or manual means.	17)	The Total Record Sets Record shall be required to be implemented for transmission by any federate whose local data conveyed in various records could exceed the maximum length of the PDU in which it is placed.  All federates that implement a full or limited transfer control capability shall be required to process the Total Record Sets Record in conjunction with a transfer.		18)	The Launched Munition Record is required to be implemented by any federate that can either initiate or accept a transfer request where the entity being transferred is a munition. 		20)	The fidelity requirements associated with assuming ownership of an entity are beyond the scope of this standard. 	21)	Federates implementing transfer control shall implement the PDU Status field -Transferred Entity Indicator subfield in the PDU Header Record for the Entity State, Entity State Update and Environmental Process PDU’s, whichever of these PDUs are implemented.22)  PDUs shall be transmitted in the physical order shown in Figures 22 and 23.23)	A federate that allows for an operator-initiated transfer request shall provide feedback to the operator on the status of the request including rejection of the request by the federate’s application. 24)	An entity shall only be eligible to be involved in one transfer transaction at a time.  Once a transfer transaction is initiated for an entity, no new transfer control request for it shall be sent to another federate until the transaction is terminated or completed. 25)	Any federate that implements either a full or limited transfer control capability shall:	a)	Provide a visual indication to an operator in the form of an always-present or requested display, or access to a data file, which provides information on the current ownership of each entity in its data base and on data necessary to ensure that transfer transactions can take place.  Detailed Human System Interface requirements are beyond the scope of this standard. (See Annex D.)	b)	Provide the capability to manually remove from its data base individual local and remote entities.  This is needed to ensure that ownership conflicts can be resolved if automatic logic fails.	c)	Ensure that the initial motion, orientation, and positional values contained an Initial Entity State PDU reflect the most recent values received from the previous owner taking into account any extrapolation of such data that may occur prior to issuance of the first Entity State PDU. and that further automatic changes to those parameters are based on logic that takes into account rates of change. 		26)	If a federate that assumes ownership of an entity has the capability to continue some or all of the entity attributes (e.g., IFF and emissions data) that were being transmitted by the previous owner, it shall ensure that the required PDUs are transmitted within one entity heartbeat cycle after assuming ownership.  The minimum requirement for the data to be contained in such PDUs shall be to duplicate the non-PDU Header data contained in the last PDU of each type received from the previous owner that was processed prior to assuming ownership. 		27)	When a transaction is cancelled, both federates shall ensure that their data base and other system status information for the entity are restored to their original condition as it existed before the transaction was initiated and shall ensure that the cancellation does not result in an ownership conflict.		28)  No entity that is part of an aggregation shall be eligible to be transferred as a single entity unless it is removed from the aggregation to which it belongs and established as a separate, standalone entity.  	b)	For Federates that do not implement the Transfer Control Function, the following rules apply:		1)	A federate that does not implement the transfer control capability, but needs to determine ownership of entities during an exercise, shall implement the following:			a.	Receive and process the Ownership Event Report PDU. 			b.	Issue the Ownership Data Query PDU.			c.	Receive and process the Ownership Data PDU in response, as a minimum, to an Ownership Data Query PDU it originated.  			d.	Have the ability to process the Transferred Entity Indicator subfield of the PDU Status Field in the PDU Header Record.			e.	A federate may also receive and process an Ownership Data PDU that is not in response to an Ownership Data Query PDU that it originated for the purpose of maintaining its ownership data base.  			f.	The federate shall comply with the rules set forth for the use of these PDUs in 4.5.8.3.	2)	If a federate does not process ownership information as defined in subparagraph b) 1) above, it shall ensure that it recognizes the existence of the PDU Status Field in the PDU Header Record as a legitimate field and not a Padding field, unless it does not perform a validity check to ensure that a Padding field is set to zero. 	c)	If a federate implements a limited transfer control capability, it shall:		1)	Respond to any received Transfer Control Request PDU that initiates a Push or Pull transfer that it does not implement.  The response shall be an Acknowledge-R PDU indicating Unable To Comply.	2)  	Comply with all rules associated with the type of transfer it can originate or respond to. d)	Transfer Initiation Rules.	1)	A transfer transaction is initiated by sending a TCR PDU that contains a request to transfer an entity.  The valid Transfer Types and associated (enumerations) are as follows:				a.	Push Transfer.  Push Transfer-Entity (1), Push Transfer - Environmental Process (4).		b.	Pull Transfer.  Pull Transfer-Entity (2) , Pull Transfer - Environmental Process (5), Manual Pull Transfer - Entity (8), and Manual Pull Transfer - Environmental Process (9).		2)	Only an Active entity shall be eligible to be transferred as indicated by the Entity State PDU Appearance State subfield being set to zero. 	e)	Transfer Transaction Completion Rules.	1)	The transfer transaction for an entity shall be considered completed by the Acquiring Federate when the Ownership Event Report PDU for the entity has been sent.  The transfer transaction shall be considered completed at the Divesting Federate upon receipt of the Ownership Event report PDU..    		2)	The divesting federate shall continue to have ownership, process interactions, and output information on the entity until it receives the Ownership Event Report PDU from the acquiring federate at the appropriate time in the transfer transaction.  	3)	An acquiring federate shall ensure that all PDUs required to be output at the time it assumes ownership of an entity are output within one heartbeat period following the receipt of all necessary information from the divesting federate.  Subsequent PDUs for the entity shall be output at the next appropriate heartbeat interval.	4)	The values contained in the initial PDUs output by the acquiring federate shall reflect the latest information received from the previous owner for those attributes and capabilities, as a minimum, that are required to be continued as specified in paragraph 7) below. 	5)	Whenever the acquiring federate assumes ownership of an entity, the Reporting Source subfield of the PDU Status field shall be set as follows for the Entity State, Entity State Update, and Environmental Process PDUs only:			a.	If the Site/Application of the Entity ID is the same as its own Site/Application,  it shall be set to 0 (No difference).					b.	If the Site/Application of the Entity ID is not the same as its own Site/Application, it shall be set to 1 (Difference).		6)	Regardless of which PDUs are generated by the acquiring federate, once the transfer transaction is completed, the divesting federate shall cease transmitting all PDUs where the entity was the primary Entity ID in the PDUs (e.g., Entity State, IFF/ATC/NAVAID and Electromagnetic Emissions PDUs.)  No final PDUs of any kind shall be issued for the transferred entity.		7)	The following data fields of the Entity State and Entity State Update PDU shall be maintained by the new owner using the last values received from the divesting owner and shall not be subsequently changed for the life of the entity: 			a.	Entity ID.  			b.	Entity Type and Alternate Entity Type. 			c.	Markings.	f)	Transfer Termination Rules 		1)	A transfer transaction may be manually cancelled by either involved federate. In this case, the federate initiating the Cancel TCR PDU shall terminate the transaction and disregard any further PDU’s received from the other federate related to the transaction. The federate receiving a valid Cancel TCR PDU from the other federate involved in the transaction shall also terminate the transaction and cease transmitting any further messages associated with the transfer.  		2)	A transfer transaction shall be automatically cancelled if any of the following conditions are met:					a)	An appropriate Acknowledge-R PDU is sent by a federate involved in a transfer transaction indicating Unable To Comply. This cancels the transfer transaction at the sending federate at the time the PDU is sent and at the receiving  federate at the time the PDU is received and processed.			b)	A TCR PDU is sent or received with Transfer Type set to Cancel Transfer (7) by either the Acquiring or Divesting Federate.			c)	A timer expires without receiving an appropriate message from the other federate or the required number of Set Record-R PDUs are not received.  In this case, the Cancel TCR PDU shall be sent. 			d)	A message is received out of sequence or it contains inappropriate values.	g)	Ownership Conflict Rules.		1)	A federate that implements either the full or limited transfer control shall ensure that it can detect an ownership conflict between itself and another federate.  See 3.1 Definitions and Annex D.		2)	An ownership conflict check shall be made whenever a remote entity is initially received by a federate and the entity is not currently involved in a transfer transaction, and the receiving federate holds the entity locally.		3)	An Ownership Conflict shall exist if any of the following conditions are met.  The appropriate response shall be as indicated.		a.	The Reporting Source is set to 0 (No Difference) for a remote entity and the Remote Entity ID is the same as a local entity being maintained by the receiving federate.  In this case, the receiving federate shall discard the received Entity State or Entity State Update PDU and send an Ownership Event Report PDU that is broadcast to all federates.		b.	The Reporting Source is set to 1 (Difference) and the Remote Entity ID in the PDU is the same as a receiving federate’s local Entity ID.  In this case, the receiving federate shall:			1. 	Accept the remote PDU in accordance with processing of valid remote data.			2.	Remove the conflicting entity from its data base without sending a Cancel Entity State PDU.			3.		If the federate detecting the conflict has transfer control information stored indicating it is the owner, it may reject the remote entity and instead  send an Ownership Event Report PDU broadcast to all federates.		h)	Munition Transfer Rules.		The transfer of a munition entity shall be accomplished using the following additional rules:	1)	An acquiring federate shall only take ownership of a munition entity that has been fired from another entity if it has an engagement capability, including generation of the Detonation PDU, that would allow it to continue the engagement for this type of munition.  	2)	The divesting federate shall send the Launched Munition Record for the entity which the acquiring federate shall process, store and use the data either in the eventual Detonation PDU or in a new Launched Munition Record if the entity is transferred to someone else before it detonates.	3)	The acquiring federate shall be able to continue the engage to a specific target entity if one is contained in the Launched Munition Record.  However, the engagement may be subsequently broken if its internal engagement logic determines that the intercept is not feasible.	i)	Transfer Gateway Rules.		 A transfer gateway may be used to provide some or all of a transfer control capability to a host federate where the host federate is not able to completely incorporate this functionality.  If a transfer gateway is used, it shall ensure that DIS traffic is managed to and from the host federate such that it is in compliance with the applicable rules contained in 4.5.8.3.	j)	Transmission of Internal Store Data Outside of a Transfer Transaction.		The transmission of internal store data for an entity that is related to a decision whether to transfer the entity, or in preparation for such a transfer, shall be accomplished using the Record-R Query PDU and Record-R PDU. All other transmissions of internal store data for reasons not related to transfer control may be accomplished using any of the PDUs that have a capability to request or transmit internal store data.  There is no requirement for a federate that implements transfer control to initiate or respond to a Record-R Query PDU. 	k)	Automatic and Manual Transfer Mode.		A federate shall be considered in the Automatic Transfer mode if there is no operator manual intervention in the decision to comply or not comply with a received transfer request.  A federate shall be considered in the Manual Transfer mode if there is the capability for an operator to make a decision whether to comply or not comply with a received transfer request.  		1.	Regardless of which transfer mode an federate is operating in, when it receives a transfer request, the initial Acknowledge-R PDU shall be automatically generated.  If the federate is in the Automatic Transfer mode, it shall set the Response Flag to Able to Comply or Unable To Comply.  If it is in the Manual Transfer mode, it may also respond with the Response Flag set to Able to Comply or Unable To Comply if it has initial automatic validity checks that would preclude it from complying with the request.  Otherwise, it shall set the Response Flag to Pending operator action. 		2.	Manual operator actions to initiate a transfer request or cancel one may occur in both the automatic and manual transfer modes. 		3.	A federate operating in the Manual Transfer mode shall alert an operator to a transfer request for which a Pending Operator action response was returned to the originator of the request.  This alert and any decision support information shall be made available to the operator such that a final response can be sent within the time limits imposed by the Manual Response timer.  4.5.8.3.2.2		Push TransferThe rules and associated message sequence for a Push Transfer are specified in this section.  A Push transfer is where the present federate who owns an entity desires to hand the entity over to another federate.  A request is sent from the present owner (divesting federate) to the potential new owner (acquiring federate). This request includes any internal state data.  The acquiring federate then responds with an Acknowledge-R PDU indicating  whether it can take the entity or not.  It may initially respond to indicate that an operator will make the decision and then follow up with the final decision. Once the acquiring federate has indicated that it can take the entity from the divesting federate, it sends the Initial Entity State PDU, Ownership Event Report PDU and any other PDUs that would normally be sent for a new local entity.   Some optional PDUs are also involved in the process.  Timers are set by each federate at different points in the transfer process to allow the transfer to be automatically terminated if applicable. 	a)	Push Transfer Rules		A Push Transfer shall comply with the general transfer rules specified in 4.5.8.3.2.1, 4.5.8.3.3 and 4.5.8.3.4 in addition to the specific Push Transfer rules listed in b. below.	b)	Push Transfer Message SequenceThe message sequence and associated rules shall be as defined in this paragraph and depicted in Figure 22.  The steps listed here correlate with those shown in Figure 22.   If there is a conflict between this paragraph and the content of Figure 22, the requirements defined here shall be considered superceding.  	1)	Step 1.   The Divesting Federate (DF) transmits a TCR PDU that indicates a transfer request (see 4.5.8.3.2.1.d.1.a ) with the TCR PDU set as specified in 4.5.8.3.3.1 to a specific Acquiring Federate (AF).  Required internal state data inside Record Sets shall be included, if applicable.  	2)	Step 2.   If the number of record sets needed to send all the internal store data exceeds the maximum length of the TCR PDU, the remaining record sets shall be included in one or more Set Record-R PDUs sent at the same time and following the TCR PDU.	3)	Step 3.   If the AF is in the manual mode, an Acknowledge-R PDU with the Response Flag set to Pending Operator Action shall be automatically sent to the DF and the AF operator alerted to the transfer request.   Otherwise, this step is skipped.	4)	Step 4.   If an Acknowledge-R PDU with the Response Flag set to Able To Comply is sent, the transfer transaction shall be continued and steps 5 through 7 shall be executed.  If an Acknowledge-R PDU with the Response Flag set to Unable To Comply is sent, the transfer transaction shall be cancelled by both parties.   	5)	Step 5.   (Optional) One or more Record-R PDUs may be optionally sent by the AF to reflect the content and exact values of the record(s) received from the DF.  The records may be placed in the Record-R PDU in any order.  A DF shall not be required to process the Record-R PDU when received as part of a transfer transaction.  	6)	Step 6.   The AF shall send the initial Entity State PDU before the TC_AUTO_RESPONSE _TIMER expires.  If there are additional PDUs related to the entity, they shall be sent in accordance with the federate’s requirements for sending such PDUs for a newly initiated local entity.	7)	Step 7. The AF shall also send the Ownership Event Report PDU before the TC_AUTO- _RESPONSE _TIMER expires.  This is the PDU that ends a transfer transaction.  This PDU must follow the initial Entity State PDU but may be interspersed with other PDUs so long as it is sent before the timer expires. Figure 22 - The Push Transfer4.5.8.3.2.3	Pull Transfer The rules and associated message sequence for a Pull Transfer are specified in this section.  A Pull transfer is where a federate asks to take ownership of someone else’s entity. A request is sent from the potential new owner (Acquiring federate) to the present owner (Divesting Federate). The divesting federate then responds with a Acknowledge-R PDU indicating  whether or not it will relinquish ownership of the entity  It may initially respond to indicate that an operator will make the decision and then follow up with the final decision. Once the divesting federate indicates that it will relinquish ownership entity, it will send any applicable internal state data.  The acquiring federate then sends the Initial Entity State PDU, Ownership Event Report PDU and any other PDUs that would normally be sent for a new local entity.   Some optional PDUs are also involved in the process.  Timers are set by each federate at different points in the transfer process to allow the transfer to be automatically terminated if applicable PDU’s are not received within time limits.    	a)	Pull Transfer Rules		1)	A Pull Transfer shall comply with the general transfer rules specified in 4.5.8.3.2.1, 4.5.8.3.3 and 4.5.8.3.4 in addition to the specific Pull Transfer rules listed in b. below.		2)	A federate shall not send a Pull Transfer Request if, as a minimum, any of the following conditions exists:				a.	It is at entity capacity such that it could not store the transferred entity at the time the transfer request is made.				b.	It cannot maintain the entity with the same entity type after the transfer is completed.				c.	It does not currently hold the entity to be transferred as an external (remote) entity in its entity data base. 		3)	A federate shall not be required to both initiate and respond to a Pull Transfer request.  It may do one or the other, or both.		4)	If a Pull TCR PDU is received addressed to a transfer-control capable federate that is not the owner of the entity, an automatically generated Acknowledge-R PDU with Response set to Unable To Comply shall be returned to the originator of the Pull TCR PDU. 			5)	The federate receiving a Pull Transfer Request directed to it shall ensure, as a minimum, that all the following conditions are met before responding with an Able to Comply Acknowledge-R PDU.  If they are not met, an Unable To Comply Acknowledge-R PDU shall be sent.				a.	The entity to be transferred is held in its entity data base as an internal (local) entity at the time the TCR PDU is received. 				b.	The entity is not presently involved in a transfer transaction.				c.	Internal criteria has been met for relinquishing ownership.  Specific criterion is beyond the scope of this standard.		d.	Eligibility checks to ensure that the federate requesting ownership is capability of maintaining the entity are beyond the scope of this standard.  Such check should be in accordance with the federation agreement.	b)	Pull Transfer Message Sequence	1)	Step 1.   The Acquiring Federate (AF) transmits a TCR PDU that indicates a transfer request (see 4.5.8.3.2.1.d.1.b ) with the TCR PDU set as specified in 4.5.8.3.3.1 to a specific Divesting Federate (DF).  	2)	Step 2.   If the DF is in the manual mode, an Acknowledge-R PDU with the Response Flag set to Pending Operator Action shall be automatically sent to the AF.  The DF operator alerted to the transfer request.   Otherwise, this step is skipped.	3)	Step 3.   If an Acknowledge-R PDU with the Response Flag set to Able To Comply is sent, the transfer transaction shall be continued and steps 5 through 7 shall be executed.  If an Acknowledge-R PDU with the Response Flag set to Unable To Comply is sent, the transfer transaction shall be cancelled by both parties.   	4)	Step 4.  If an Able To Comply Acknowledge PDU is sent, any applicable internal state data shall  be sent in one or more Set Record-R PDU immediately following the Acknowledge PDU.    	5)	Step 5 (Optional) One or more Record-R PDUs may be optionally sent by the AF to reflect the content and exact values of the record(s) received from the DF.  The records may be placed in the Record-R PDU in any order.  A DF shall not be required to process the Record-R PDU when received as part of a transfer transaction.  	6)	Step 6.   The AF shall send the initial Entity State PDU before the TC_AUTO_RESPONSE _TIMER expires.  If there are additional PDUs related to the entity that need to be sent, they shall be sent in accordance with the federate’s requirements for sending such PDUs for a newly initiated local entity.	7)	Step 7. The AF shall also send the Ownership Event Report PDU before the TC_AUTO- _RESPONSE _TIMER expires.  This is the PDU that ends a transfer transaction.  This PDU must follow the initial Entity State PDU but may be interspersed with other PDUs so long as it is sent before the timer expires.Figure 23 - The Pull Transfer4.5.8.3.2.4	Transfer Control TimersThe timers associated with the Transfer Control function are shown in Table 60.2.Table 60.2 - Transfer Control TimersSymbolic NameDefinitionNumeric Range*DefaultvalueTC_AUTO_RESPONSE_TIMERTransfer Control Automatic Response TimerThis timer shall be set as specified in Figures 22 and 23.If a valid, expected PDU is not received in the allotted time from the other federate involved in a transfer transaction, the transaction shall be terminated and a Cancel Transfer Control Request PDU shall be sent. (1,1-600) seconds5 secsTC_MAN_RESPONSE_TIMERTransfer Control Manual Response TimerThis timer shall be set as specified in Figure 22 and 23.This timer shall be set (by an AF or DF) upon receipt of a Pending Operator Action Acknowledge-R PDU, or during a pull-divest when the AF is in the manual transfer mode and the DF is expecting a Record-R PDU or an Initial Entity State PDU.If a valid, expected PDU is not received in the allotted time from the other federate involved in a transfer transaction, the transaction shall be terminated and a Cancel Transfer Control Request PDU shall be sent.(1,1-600) seconds120 secs*Numeric range  (n1, n2 - n3)  where N1 is the increment that the value can be specified in (e.g. 1 means  1 second intervals, 2 means 2 second intervals. If the increment is 2, then the timer value over the range can be 2, 4, 6, etc.)  N2 is the lowest possible value and n3 is the highest possible value.4.5.8.3.3	Related PDUsThe following PDUs are used as part of the Transfer Control Function.  Only the Transfer Control Request PDU is unique to transfer control.  All other PDUs used to support transfer control are also used to support other DIS functions.  These will be referred to here as non-unique PDUs.  The general and detailed requirements for a non-unique PDU specified in Sections 4 and 5 apply in addition to the specific rules specified here when used in support of transfer control.  If a conflict exists between the PDU requirements contained outside of 4.5.8.3 and those contained here, the requirements specified here shall be considered superseding.  If a conflict exists between the rules specified in 4.5.8.3.2 and the issuance and receipt rules specified here (4.5.8.3.3), the rules in 4.5.8.3.2 shall be considered superseding. 4.5.8.3.3.1	Transfer Control Request PDUThe Transfer Control Request PDU shall be used to request the transfer of an entity and to cancel such a transfer. This PDU is only used in conjunction with the Transfer Control Function. 	a.	Information Content.   The fields shall be set as specified in Table 60.3.  See also 5.3.9.3 for the format and definition of the fields for the transfer Control Request PDU.Table 60.3 Transfer Control Request PDUFieldsSubfieldsValue PDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating Application0Receiving Entity IDSiteApplicationEntity IdentifierThe Receiving Entity ID shall be set based on the Transfer Type field value as follows:If Transfer Type = 1, 4 Push TransferReceiving SiteReceiving ApplicationNO_ENTITY  (0)If Transfer Type = 2, 5, 8, 9 Pull TransferEither the specific federate may be specified:Receiving SiteReceiving ApplicationNO_ENTITY  (0)Or broadcast to all federate may be specified:ALL_SITES   (FFFF-Hex)      ALL_APPLIC  (FFFF-Hex)      NO_ENTITY  (0)If Transfer Type = 7 Cancel TransferThe other federate involved in this transfer transaction.Receiving SiteReceiving ApplicationNO_ENTITY   (0)Or broadcast to all federate may be specified:ALL_SITES    (FFFF-Hex)      ALL_APPLIC  (FFFF-Hex)      NO_ENTITY   (0)Request IDA unique number assigned by a federate that identifies this transfer transaction.  Any subsequent PDU containing a Request ID field from a federate that is involved in this transfer transaction shall use this value. Required Reliability Service1 = UnacknowledgedTransfer TypeAs appropriateTransfer Entity IDThe Entity ID of the entity being transferred.Site = non-zero valueApplication = non-zero valueEntity = non-zero-valueNumber of Record Sets0 = No records are associated with this transfer control request PDU. (In this case, no Record Set fields are included.)n = 	Number of record sets in this specific PDU. (If the total number of record sets are more than can be contained in this PDU, the first Record Set must contain the Total Record Sets Record.  One or more Set Record-R PDUs are used to send the remaining records.Record Set #1 See 5.3.9.3As appropriate.Record Set #R See 5.3.9.3As appropriate.	b.	Issuance of the Transfer Control Request PDU.   		The Transfer Control Request  PDU shall be issued as follows:		1)	When a federate desires to initiate the transfer of an entity or environmental process.  In this case, the appropriate timer shall also be set.		2)	When a federate desires to terminate a transfer transaction.		3)	If this is a transfer request, the appropriate timer shall be set, if applicable.	c.	Receipt of the Transfer Control Request PDU.   		A received Transfer Control Request  PDU shall be processed by the addressed or applicable federate as follows:		1)	If it is a Pull transfer request and the Receiving Entity ID field value indicates a broadcast to all federates, the receiving federate shall determine if the entity in the Transfer Entity ID field is one that it owns.   If it is the owner, then rules 2) and 3) below shall apply.  If not, the PDU shall be ignored and no Acknowledge-R PDU shall be output.		2)	If this is a transfer request, and it has passed initial validity checks, an Acknowledge-R PDU shall be output to the federate indicated in the Originating Entity ID field of the TCR PDU with one of the following responses:			a)	An Unable to Comply response shall be issued if, for whatever reason, the federate determines that the request cannot be automatically complied with. 			b)	An Able to Comply response shall be issued if the federate determines that the request can be automatically complied with. 			c)	A Pending Operator Action response shall be issued if the federate is in the Manual Transfer Mode. 		3)	If this is a Cancel Transfer Request that has passed validity checks, the receiving federate shall cancel the transaction.  No Acknowledge-R PDU shall be output in this case.4.5.8.3.3.2	Acknowledge-R PDUThe Acknowledge-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.5 and 5.3.12.5.  It is used in support of the Transfer Control process to acknowledge the Transfer Control Request PDU when it contains a request to transfer an entity and when an operator has manually determined whether it can accept a transfer (i.e., Able to Comply, Unable to Comply).  Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content		The Acknowledge-R PDU when used in support of transfer control shall be set as specified in Table 60.4.Table 60.4 - Acknowledge-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierSite of originator of the transfer request.Application of originator of the transfer request. 0Acknowledge FlagNone5 (Transfer Control Request)Response FlagNoneOne of the following, as applicable:1 = Able to comply.2 = Unable to comply.3 = Pending operator response.Request IDNoneSet to the Request ID value in the Transfer Control Request PDU to which this Acknowledge-R PDU is responding.	b.	Issuance of Acknowledge-R PDU 		The Acknowledge-R PDU shall be issued in support of transfer control when either of the following conditions occur:		1)	A Transfer Control Request PDU is received with a transfer type of 1, 2, 4, 5, 8, or 9.  In this case, the acquiring federate shall send an Acknowledge-R PDU with the Response Flag set to 1, 2 or 3.  If the TCR PDU is accompanied by one or more Set Record-R PDUs, the Acknowledge-R PDU shall not be sent until all expected Set Record-R PDUs have been received. (See 4.5.8.3.3 for the when not all expected Set Record-R PDUs are received.). 		2)	An Acknowledge-R PDU was previously sent with the Response Flag = 3 and the acquiring federate has now determined whether or not it can comply with the request.  In this case, the acquiring federate shall send an Acknowledge-R PDU with the Response Flag set to 1 or 2. 		3)	If the Response Flag is set to 2 (Unable To Comply), the transfer transaction shall be automatically terminated.	c.	Receipt of Acknowledge-R PDU 		When an Acknowledge-R PDU is received in support of transfer control, it shall be processed as follows by a federate that has implemented transfer control:		1)	If the Response Flag = 1 (Able to Comply), the receiving federate shall proceed to the next phase of the transfer transaction as specified in 4.5.8.3.2.		2)	If the Response Flag = 2 (Unable to Comply), the receiving federate shall automatically terminate this transfer transaction.		3)	If the Response Flag = 3 (Pending operator response), the receiving federate shall initiate the TC_MAN_RESPONSE_TIMER and await another Acknowledge-R PDU with the Response Flag set to 1 or 2.4.5.8.3.3	Set Record-R PDUThe Set Record-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.14 and 5.3.12.14.   The Set Record-R PDU is used in support of transfer control to pass internal state data.  Only the requirements related to its use in support of transfer control are specified here.	a.	Information Content		The Set Record-R PDU fields shall be set as shown in Table 60.5.Table 60.5 - Set Record-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLIC0Request IDNoneSet to the Request ID from the original TCR PDU. Required Reliability ServiceNone1 (Unacknowledged)Padding- - - -0Number of Record SetsNoneR = Number of Record Sets in this PDU.Record Set #1See 5.3.9.3As appropriate.Record Set #RSee 5.3.9.3As appropriate.	b.	Issuance of Set Record-R PDU		The Set Record-R PDU shall be issued in support of transfer control to transmit internal state data as follows:		1)	By the divesting federate that initiated a Push Transfer Request when all the necessary records cannot be contained in the TCR PDU.  Multiple Set Record-R PDU may be required to send all the necessary data.		2)	By the divesting federate that has sent a Can Comply Acknowledge-R PDU in response to a Pull Transfer Request.  If no internal state data is required to be sent, a single Set Record-R PDU shall be output with the Number of Record Sets field set to zero.	c.	Receipt of Set Record-R PDU		A received Set Record-R PDU in support of transfer control shall be processed by the federate to whom it is addressed as follows:		1)	For a Push Transfer Request,			a)	If all Set Record-R PDU(s) have been received, mandatory record data shall be processed as required by this standard.  Other record data shall be processed as agreed to in a federation agreement.			b)	Optionally, Record-R PDU(s) may be output in accordance with 4.5.8.3.3.4. 		c)	If processing the data contained in a Set Record-R PDU results in terminating the transfer, the acquiring federate shall reply with an Unable To Comply Acknowledge R-PDU to the originating federate.		3)	For a Pull Transfer Request, the acquiring federate shall perform either of the following:			 a) 	Complete the transfer in accordance with 4.5.8.3.2.3 and, optionally, send one or more Record-R PDUs as specified in 4.5.8.3.3.4.					b) 	 If processing the data contained in a Set Record-R PDU results in terminating the transfer, the acquiring federate shall reply with a Cancel Transfer TCR PDU and automatically terminate the transaction. 4.5.8.3.3.4	Record-R PDUThe Record-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.15 and 5.3.12.15.  The Record-R PDU is used by the Transfer Control function to provide feedback on internal state data received from the divesting federate during a transfer transaction.  It may also be used to transmit internal state data for an entity in response to a Record Query-R PDU received when no transfer transaction is in progress.  Only the first use involving transfer control is covered in this paragraph.   (Use of the Record-R PDU to respond to a Record Query-R PDU is specified in 4.5.11.3.15.)    	a.	Information Content		When the Record-R PDU is used to return a copy of the internal state data received from the divesting federate during a transfer transaction, the fields shall be set as shown in Table 60.6.Table 60.6 - Record-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Request IDNoneThe Request ID that was contained in the original TCR PDU.Required Reliability ServiceNone1 (Unacknowledged).Padding- - - -0Event Type0 (Other)Response Serial NumberA sequential number beginning with zero (0) that indicates the Record-R PDU(s) that make up this response. If more than one Record-R PDU is part of the response, each one shall have the same number.Number of Record Sets (R)NoneNumber of Record Sets in this Record-R PDU.Record Set #1See 5.3.9.3As appropriate.Record Set #RSee 5.3.9.3As appropriate.	b.	Issuance of the Record-R PDU. 		The Record-R PDU when used as part of a transfer transaction shall be optional.  It may be issued in response to a Transfer Control Request PDU containing records or in response to one or more Set Record-R PDUs received by a federate as part of a transfer transaction.  The issuance requirements of 4.5.11.3.15.2 shall apply.  	c.	Receipt of the Record-R PDU.		Receipt of the Record-R PDU when used as part of a transfer transaction shall be optional.  If implemented, the receipt requirements of 4.5.11.3.15.3 shall apply.  4.5.8.3.3.5	Event Report PDUThe Event Report PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.5.4.11 and 5.3.6.11.  When used in support of transfer control, the Event Report PDU shall be used to report ownership of an entity by a federate that has implemented  transfer control. When used for this purpose, it shall be referred to as the Ownership Event Report PDU.  Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content	When the Event Report PDU is used to support the Transfer Control Function, the fields shall be set as shown in Table 60.7. Table 60.7 - Ownership Event Report PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLICALL_ENTITIESEvent Type17 = Reporting Source IDPadding0Number of Fixed Datum Records0Number of Variable Datum Records1Variable Datum # 1Variable Datum ID  15800 = Entity ID RecordVariable Datum Length48Variable Datum ValueEntity ID RecordPadding (64-bit boundary)16-bits unused	b.	Issuance of the Ownership Event Report PDU 		The Ownership Event Report PDU shall be transmitted under the following conditions:		1)	An acquiring federate assumes ownership and has transmitted the initial Entity State PDU. It shall transmit the Ownership Event Report PDU immediately following the Entity State PDU.  The Ownership Event Report PDU shall be output  regardless of the PDU Status Record - Transferred Entity Indicator value.		2)	When an ownership conflict is detected and a federate determines that it is the rightful owner.   	c.	Receipt of the Ownership Event Report PDU	When an Ownership Event Report PDU is received, it shall be processed as follows:	1)	If the receiving federate is the Divesting Federate in a transfer transaction for this entity, and it has previously received the initial Entity State PDU from the Acquiring Federate, it shall consider this transfer transaction to be completed. 	2)	If the receiving federate implements the Transfer Control function, it shall be processed to determine if there is an ownership conflict between it and the federate indicated to be the owner of the entity in the Ownership Event Report PDU.  If a conflict is detected, the processing specified in 4.5.8.3.2.1.g shall apply.		4.5.8.3.3.6	Entity State PDUThe Entity State PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.2.1 and 5.3.3.1  When used in support of transfer control, the Entity State PDU is used by a new owner to report the entity upon assuming ownership and thereafter in accordance with the rules for reporting an entity except for requirements related to entity state data fields whose values must be maintained which are contained herein. Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content	The initial Entity State PDU sent by the acquiring federate shall have the fields and subfields set in accordance with Table 60.8.  Initial values that are subsequently changeable are also specified in the table. Table 60.8 - Initial Entity State PDU FieldSubfieldValue*PDU HeaderAllPer standardEntity IDAllNot changeableForce IDForce IDPer standardNumber of Articulation Parameters (n)NumberPer standard Entity TypeAll  Not changeableAlternative Entity TypeAll  Not changeableEntity Linear VelocityAllPer standardEntity LocationAllPer standardEntity OrientationAllPer standardEntity AppearanceAllPer standardDead Reckon ParametersAllPer standardEntity MarkingsAll  Not changeableCapabilitiesAllPer standardArticulation ParametersAllPer standard*ValuePer Standard.   As specified by the IEEE 1278.1/1a Standard. Not changeable.  The values in this field and all its subfields, if any, shall remain the same as was contained in the last Entity State PDU received from the divesting owner prior to creation of this entity in the local data base.	b.	Issuance of the Entity State PDU 			When the Entity State PDU is generated by a federate that has accepted ownership of an entity or environmental process due to a transfer transaction, the following requirements shall be met.  Any reference to Entity State PDU shall also apply to the Environmental Process PDU unless otherwise specified.   If there is a conflict between the requirements here and those specified elsewhere in 4.5.8.3, this paragraph shall be considered superceding.		1)	The fields in the Initial Entity State PDU and subsequent Entity State or Entity State Update PDUs shall be set as specified in Table 60.8.		2)	The Initial Entity State PDU shall be output immediately after the entity has been converted or instantiated as a local entity.  		3)	Further remote data received on the entity from the divesting federate after the entity has been converted or instantiated as a local entity shall be ignored.		4)	Issuance of the Initial Entity State PDU does not end the transfer transaction.  The transfer transaction is completed upon issuance of the Ownership Event Report PDU.	c.	Receipt of the Entity State PDU 			When an Entity State PDU is received by a federate during a transfer transaction, the following requirements shall be met.  Any reference to Entity State PDU shall also apply to the Environmental Process PDU unless otherwise specified.  		1)	If the federate receiving the Entity State PDU is the acquiring federate, it shall continue to process remote entity state data until such time as it has established the entity as a local entity.  Once it is established as a local entity, received entity information shall be ignored.		2)	If the federate receiving the Entity State PDU is the divesting federate, it shall cease transmission of the Entity State (or Entity State Update) PDU and any other PDUs (e.g., IFF/NAVAID/ATC PDU) that has local data for the entity.			4.5.8.3.3.7	Data Query PDUThe Data Query PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.5.4.8 and 5.3.6.8.  When used in support of transfer control, the Data Query PDU shall be used by a federate to request ownership information for an entity.  When used for this purpose, it is referred to as an Ownership Data Query PDU.  Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content		The information contained in an Ownership Data Query PDU shall be as shown in table 60.9.Table 60.9 - Ownership Data Query PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLICALL_ENTITIESRequest IDIdentifies this specific Data Query PDU request.  Starts at 0 and incremented by one for each succeeding Data Query PDU sent after a simulation is initialized.Time Interval0Number of Fixed Datum Records1Number of Variable Datum Records1Fixed Datum ID #132-bit enumeration15900 = Ownership RequestVariable Datum # 1Variable Datum ID  15800 = Entity ID RecordVariable Datum Length48Variable Datum ValueEntity ID RecordPadding (64-bit boundary)16-bits unused	b.	Issuance 		Any federate may issue an Ownership Data Query PDU whether or not they have implemented the Transfer Control function.   This request may be automatically generated or initiated by manual operator action.  See Annex D, 	c.	Receipt 		Each federate that has implemented the transfer control function shall process the Ownership Data Query PDU and respond with an Ownership Data PDU.  If a federate has not implemented the transfer control function, this PDU shall be ignored.4.5.8.3.3.8	Data PDUThe Data PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.5.4.10 and 5.3.6.10.  When used in support of transfer control, the Data PDU shall be used by the present owner of an entity that has implemented  transfer control to respond to an Ownership Data Query PDU.    Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content		The information contained in an Ownership Data PDU shall be as shown in table 60.10.Table 60.10 - Ownership Data PDUFieldsSubfieldsValuePDU Header- - - -As applicableOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierData Query SiteData Query Application0Request IDSet to the Request ID contained in the Ownership Data Query PDU to which this Data PDU is responding. Padding0Number of Fixed Datum Records1Number of Variable Datum Records1Fixed Datum ID #132-Bit enumeration15910 = Ownership Data. (The Originating Entity ID is the owner of the entity specified in the Entity ID Record (15800).Variable Datum # 1Variable Datum ID  15800 = Entity ID RecordVariable Datum Length48Variable Datum ValueEntity ID Record Padding  16-bits (needed to achieve required 64-bit boundary)	b.	Issuance of the Data PDU.		The Ownership Data PDU  shall be issued in response to receipt of an Ownership Data Query PDU.  	c.	Receipt of the Data PDU.		A federate that has sent an Ownership Data Query PDU shall process any Data PDU where it is the Receiving Entity ID and the  Request ID equals the Request ID contained in the original Data Query PDU.  A federate may also process a Data PDU not addressed to it where the Fixed Datum ID = 15910.4.5.8.3.3.9	Record Query-R PDUThe Record Query-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.13 and 5.3.12.13.  When used in support of transfer control, the Record Query-R PDU shall be used by a federate when requesting internal state data on an entity in preparation for deciding whether to initiate or respond to a transfer request.  A federate that implements transfer control is not required to either initiate or respond to a Record Query-R PDU if it has no requirement to request internal state data outside of a transfer transaction.  Any request for internal store data not related to a transfer transaction is beyond the scope of this standard.   a.	Information Content		The information contained in a Record Query-R PDU shall be as shown in table 60.10.Table 60.10 - Record Query-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLICALL_ENTITIESRequest IDIdentifies this specific Data Query PDU request.  Starts at 0 and incremented by one for each succeeding Data Query PDU sent after a simulation is initialized.Required Reliability Service 1 = UnacknowledgedPadding0Event Type16-bit enumeration1 = Internal Entity State dataNumber of Records32-bit unsigned integerRecord ID #132-bit enumeration Record ID #n32-bit enumeration 	b.	Issuance of the Record Query-R PDU.		When the Record Query-R PDU is used to request internal store data related to a possible transfer transaction, it shall be for a specific entity, be addressed to the owner of the entity, and contain the Record IDs for the data it is requesting.  It shall be sent once.  If no Record-R PDUs are received in response to the query within a federate’s timeout parameter, it shall be assumed that the federate to which it is addressed does not have the capability to provide internal store data related to a pending transfer transaction.  	c.	Receipt of the Record Query-R PDU.		If the federate to which the request is directed implements the receipt of this PDU for the purpose of providing internal state data for an entity it owns, it shall respond with the requested data, if available, in one or more Record-R PDUs.  If data is not available for a requested Record ID, the Record ID shall be returned with zero values in the data fields for that record.  4.5.8.3.4	Related RecordsThe records related to the Transfer Control function are listed in Table 60.12.  These records shall be used to pass the type of internal state data indicated by each record when required by provisions of 4.5.8.3 and by a federation agreement.  The records format and rules are described in Section 5.2 of this standard.Table 60.12  Transfer Control Related Records		Record NameSection 5.2PDU Status Record5.2.61Munition Record 5.2.62Engine Fuel Record5.2.63Storage Fuel Record 5.2.64Expendable Record 5.2.65Total Record Sets Record 5.2.66Launched Munition Record 5.2.67Association Record 5.2.68Location Record 5.2.69 This page is blankAppendix BOther Changes to IEEE 1278.1a1.0	GeneralThis appendix lists the pother changes to paragraphs in IEEE 1278.1a in addition to the replacement of paragraph 44.5.8.3.The paragraph numbers below  correspond to those in IEEE 1278.1a.3.1	DefinitionsAdd the following sentence to the 3.1 Definitions section and include theIf a term in italics precedes a PDU name, it is used to more clearly and easily define the use of the PDU.  The following definitions apply to the Transfer Control function. Able To Comply Acknowledge-R PDU.  An Acknowledge PDU with the Response set to Able to Comply.Acquiring Federate.  The federate (simulation application) that will become the new owner of the entity involved in a transfer transaction.Appropriate PDU.  A PDU involved in a transfer transaction that (1) is sent or received at the correct point in the message sequences associated with a transfer transaction, and  (2) contains correct data.Auto Pull Transfer   A Pull Transfer that is initiated at the originating federate via automatic logic that does not involve an operator.Automatic mode.  A federate is in the Automatic mode if the simulation application is automatically processing all messages associated with a transfer transaction.  A federate at which an operator manually initiates a transfer is considered to be in the Automatic mode if the operator has no control over the completion of the transfer transaction except to manually cancel the transfer.Cancel Entity State PDU.  An Entity State PDU with Appearance Bit 23 set to Inactive.Cancel TCR PDU.   A TCR PDU with Transfer Type set to Cancel transfer.Divesting Federate.  The federate (simulation application) that presently owns the entity involved in a transfer transaction.Federate.  A simulation as represented by a simulation address (site/application).Federation.  A group of federates formed to conduct an exercise, test or experiment.Full transfer control capability.  The capability to initiate and respond to both Push and Pull Transfer requests.Internal State Data.   Data held by a federate that is not contained in the Entity State, Entity State Update, or an associated attribute PDU (e.g., IFF PDU, Emissions PDU).Limited transfer control capability.  The capability to initiate and/or respond to a Push or Pull Transfer request but not able to both initiate and respond to both Push and Pull transfer requests. (See Full transfer control capability.)Manual mode.   An acquiring or divesting federate is in the Manual mode if (1) an operator manually initiates the transfer request, Acknowledge-R PDU, or manually initiates sending the initial Entity State PDU to complete a transfer. The simulation application will still automatically process some of the messages associated with the manual mode.Manual Pull Transfer  A Pull Transfer that is initiated at the originating federate via manual logic that involves operator action to send the Transfer Request.Originating Federate.  The federate that initiates a transfer transaction by sending the transfer request.Owner, Ownership.  The federate that owns the entity and is sending PDUs related to the entity. Ownership Conflict.  An ownership conflict exists when the present owner of an entity receives an Entity State, Entity State Update PDU or an associated attribute PDU (e.g., IFF PDU, Emissions PDU) from another federate and the entity is not currently involved in a transfer transaction with the present owner.Ownership verification check.  A check made to verify the present owner of an entity.  This is accomplished by comparing the Originating Entity ID from the Transfer Request with stored ownership information previously received in the Ownership Event Report PDU or an Ownership Data PDU. Ownership Data Query PDU.  A Data Query PDU with the Datum ID = 15800 Entity ID Record.  If the federate that owns the entity has implemented the Transfer Control function, it is required to respond with an Ownership Data PDU.Ownership Data PDU.  A Data PDU with the Datum ID = 15700 Reporting Source ID Simulation Address Record.Ownership Event Report PDU.  An Event Report PDU with the Datum ID = 15700 Reporting Source ID Simulation Address Record.Primary Entity ID.  The Entity ID in a PDU to which the data primarily applies when more than one Entity ID is contained in the PDU.  For example, for the Electromagnetic Emissions PDU, the Emitter Entity ID is the Primary Entity ID.Pull Transfer.  A transfer where the Acquiring federate wants to take ownership of another federate’s entity. A Pull Transfer may be an Auto Pull Transfer or a Manual Pull Transfer.Push Transfer.  A transfer where the Divesting federate wants to give its entity to another federate.Transfer Request TCR PDU.  A TCR PDU that where Transfer Type is set to Push or Pull.Push Transfer Request.  A TCR PDU with Transfer Type set to a Push transfer value.Pull Transfer Request.  A TCR PDU with Transfer Type set to an Auto or Manual Pull transfer value.Transfer Request.  A TCR PDU with Transfer Type set to a  Push or Pull transfer value.Transfer Transaction.  The process associated with the transfer of an entity.  This process is initiated by sending the Transfer Request TCR PDU for an entity and is completed by sending the Ownership Event Report PDU or terminated by a Cancel TCR PDU.  A transfer transaction will be in effect at one federate, or both federates, depending on the phase of the transfer transaction and message exchange. Unable To Comply Acknowledge-R PDU.  An Acknowledge PDU with the Response set to Unable to Comply.Validity check.  A check by a federate to determine if a PDU is received in the sequence or at the time required by the standard, or in accordance with a federation agreement, and that the data is valid.    A federate may use additional criterion to determine validity beyond that required by this standard.Valid data.  Data that conforms to the requirements of the standard and which is appropriate for a given circumstance as determined by validity checks performed by a receiving federate.Valid PDU.  A PDU that contains appropriate information for the situation and which has passed validity checks by the receiving federate.  If the PDU is part of a sequence of message exchanged between two federates, it must arrive at the proper time in the sequence.. 4.5.1		PDU HeaderThe PDU Header section requires the addition of the following new field.  This field will replace the 16-bit padding field in the PDU Header.4.5.1.6	PDU StatusThe PDU Status field shall specify status information related to this PDU.5.1.4	Symbolic NamesAdd the following to the introduction:     D: means a Default Value.  Range is expressed as an increment followed by the lowest and highest value allowed.Add the following additions in alphabetical order to the existing list:Symbolic name	Value	Range	DefinitionTC_AUTO_RESPONSE_TIMER 	D: 5 sec	1, 1-100	Table 60.2TC_MAN_RESPONSE_TIMER 	D: 120 sec	1, 1-600	Table 60.2NO_VALUE	0	- - - - - -	- - - - - - - -5.2 	Basic Data Types and RecordsThe Basic Data Types and Records section requires the addition of the following new records that support the Transfer Control function.5.2.61		PDU Status FieldPDU status information shall be specified in the PDU Status field is contained in the PDU Header as shown in Table 90.1.  Enumerations are defined in the EBV Document.Table 90.1.  PDU Status FieldBoolean BitFieldUnits0Not used1-bit Unused1Transferred Entity Indicator16-bit enumeration2-15Not usedunused5.2.62		Munition RecordMunition (weapon) information for an entity shall be communicated using a Munition Record.  The Munition Record shall indicate the weapons (munitions) presently available for an entity.    It shall be used when weapons data  for an entity is being transferred between the originating federate and a receiving federate that will become the new owner of the entity.  It may also be used for other purposes.   This record is optional even if the divesting federate maintains internal munitions data for the entity being transferred.  The Record ID = 500001.Non-Specific Stations: One Munition Record is used for each type of munition when stations are not specified (i.e., the Station fields are all set to NO_VALUE).   Specific Station:  One Munition Record is used to indicate the quantity of a munition type located at one specific station when the station field value is non zero.   All Munition Records associated with an entity shall either be Non-Specific Stations or Specific Stations.   There shall be no mixing of the two types in a given transfer.   The format of the Munition Record shall be as shown in Table 90.2.Table 90.2 - Munition RecordField size (bits)Field Names and Units64Munition Type64-bit enumeration32Station/Launcher32-bit enumeration16Quantityunsigned integer8Munition Status8-bit enumeration8Padding8-bits unusedTotal  Munition Record size = 128 bits The Munition Record shall contain the following information: a)	Munition Status.  This field shall identify whether the munition quantity represents a Ready To Fire or Inventory munition.  It shall be represented by an 8-bit enumeration.b)	Munition Type.  This field shall identify the entity type of the munition.  This field shall be represented by an Entity Type record (see 5.2.16 of this standard, and Section 4 of EBV-DOC).c)	Quantity Remaining.  This field shall identify the quantity remaining of this munition. If the Munition Station field is zero, it shall represent the total quantity remaining for this munition type for this entity in units of one.  If the Munition Station field has a non-zero value, it shall represent the quantity remaining at that station.  It shall be a 16-bit unsigned integer.d)	Station.	  This field shall indicate the station to which the entity is assigned if the munitions is attached to the entity.  The values used for attached parts in section 4.7.2 of the EBV-DOC shall be used.  It may also represent a launcher associated with the entity such as missile launchers for a SAM site.  In this case, the articulated parts enumeration values listed in section 4.7.2 of the EBV-DOC shall be used .  A NO_VALUE shall indicate that this munition is not associated with any station and represents the total quantity of this munition type for this entity.5.2.63		Engine Fuel RecordEngine Fuel information for an entity shall be communicated using an Engine Fuel Record.  The Engine Fuel Record shall indicate the amount of fuel remaining for an entity.    It shall be used when engine fuel data  for an entity is being transferred between the originating federate and a receiving federate that will become the new owner of the entity.   It may also be used for other purposes.   This record is optional even if the divesting federate maintains internal engine fuel data for the entity being transferred    The Record ID = 500002.Non-Specific Engine:  One Engine Fuel Record is used for all engines associated with the entity if the Engine field is N)_VALUE.   Specific Engine:  One Engine Fuel Record may be used to indicate the quantity of fuel remaining for each engine specified in the Engine field associated with the entity.  The Engine Fuel Records associated with an entity shall either be Non-Specific Engine (1 record) or Specific Engine (2 or more records).   There shall be no mixing of  specific and non-specific engines in a given transfer.  The format of the Engine Fuel Record shall be as shown in Table 90.3.Table 90.3 - Engine Fuel RecordField size (bits)Field Names and Units32Fuel Quantityunsigned integer8Fuel Measurement Units8-bit enumeration8Fuel Type8-bit enumeration8Fuel Location8-bit enumeration8Padding8-bits unusedTotal  Engine Fuel Record size = 64 bitsThe Engine Fuel Record shall contain the following information: a)	Fuel Quantity.  This field shall indicate the quantity of fuel remaining in increments specified in the Fuel Measurement Units. b)	Fuel Measurement Units.  This field shall identify the fuel measurement units.  It shall be represented by an 8-bit enumeration.c)	Fuel Type.  This field shall identify the type of fuel.    It shall be represented by an 8-bit enumerationd)	Fuel Location.	  This field shall indicate the location of the fuel as related to the entity.  A zero indicates that there is no specific location that is part of the entity.  In this case, the fuel quantity applies to that available for all engines associated with the entity.e)	Padding.  This field shall be padding (spare).    It shall be set to NO_VALUE.5.2.64		Storage Fuel RecordStorage Fuel information for an entity shall be communicated using a Storage Fuel Record. This also include off-load fuel. Storage fuel is defined as fuel that is not available for use by engines associated with the entity being transferred or for entities that do not have engines. The Storage Fuel Record shall indicate the amount of fuel remaining that is being stored by the entity being transferred.    It shall be used when storage fuel is required to be transferred as part of a transfer.  It may also be used for other purposes.   This record is optional even if the divesting federate maintains internal storage fuel data for the entity being transferred.   The Record ID = 500003. The format of the Storage Fuel Record shall be as shown in Table 90.4.Table 90.4 - Storage Fuel RecordField size (bits)Field Names and Units32Fuel Quantityunsigned integer8Fuel Measurement Units8-bit enumeration8Fuel Type8-bit enumeration8Fuel Location8-bit enumeration8Padding16-bits unusedTotal  Storage Fuel Record size = 64 bitsThe Storage Fuel Record shall contain the following fields: a)	Fuel Quantity.  This field shall indicate the quantity of fuel remaining in increments specified in the Fuel Measurement Units. b)	Fuel Measurement Units.  This field shall identify the fuel measurement units.  It shall be represented by an 8-bit enumeration.c)	Fuel Type.  This field shall identify the type of fuel.    It shall be represented by an 8-bit enumerationd)	Fuel Location.	  This field shall indicate the location of the fuel as related to the entity.  A NO_VALUE indicates that there is no specific location that is part of the entity.  In this case, the fuel quantity applies to the entire entity.e)	Padding.  This field shall be padding (spare).    It shall be set to NO_VALUE.5.2.65		Designation RecordDesignation information associated with an entity being transferred or with a Location Record shall be communicated using a Designation Record.  Designation information includes call signs, a target or location designation, etc. This record is optional for a transfer transaction even though the divesting federate may have designation information available for the entity in its internal stores.  The Record ID = 500004.The format of the Designation Record shall be as shown in Table 90.5.Table 90.5 - Designation RecordField size (bits)Field Names and Units16Designation IdentifierUnsigned Integer8Designation Type8-bit enumerationn*8Designationn ASCII charactersTotal Designation Record size = 24 + n * 8 bitsThe Designation Record shall contain the following fields: a)	Designation Identifier.  This field shall indicate the identifier associated with this designation for use in another record to associate it with a specific designation record..  It shall be represented by a 16-bit unsigned integer.b)	Designation Type.  This field shall indicate the type of designation.  It shall be represented by an 8-bit enumeration.c)	Designation.  This field shall identify the Designation using alphanumeric characters.  Unused characters shall be set to a null value.  The designation will be a variable-length field up to the maximum size allowed for a single PDU and shall be null terminated.5.2.66		Expendable RecordExpendables (e.g., chaff, flares, etc.) information for an entity shall be communicated using an Expendable Record.  The Expendable Record shall indicate the expendables presently available for an entity.    Non-Specific Stations: One Expendable Record is used for each type of expendable when stations are not specified (i.e., the Station fields are all set to zero).   Specific Station:  One Expendable Record is used to indicate the quantity of expendables located at one specific station when the station field value is non zero.   All Expendable Records associated with an entity shall either be Non-Specific Stations or Specific Stations.   There shall be no mixing of the two types in a given transfer.  This record is optional even if the divesting federate maintains internal expendable data for the entity being transferred.    The Record ID = 500005.The format of the Expendable Record shall be as shown in Table 90.6.  Table 90.6 – Expendable RecordField size (bits)Field Names and Units64Expendable Type64-bit enumeration32Station/Launcher32-bit enumeration16Quantityunsigned integer8Expendable Status8-bit enumeration8Padding8-bits unusedTotal  Expendable Record size = 128 bitsThe Expendable Record shall contain the following fields: a)	Expendable Status.  This field shall identify whether the expendable quantity represents a Ready To Disperse/Launch or Inventory expendable.  It shall be represented by an 8-bit enumeration.b)	Expendable Type.  This field shall identify the entity type of the expendable.  This field shall be represented by an Entity Type record (see 5.2.16 of this standard, and Section 4 of EBV-DOC).c)	Quantity Remaining.  This field shall identify the quantity remaining of this expendable. If the Expendable Station field is zero, it shall represent the total quantity remaining for this entity in units of one.  If the Expendable Station field has a non-zero value, it shall represent the quantity remaining at that station.  It shall be a 16-bit unsigned integer.d)	Station.	  This field shall indicate the station to which the entity is assigned if the expendable is attached to the entity.  The values used for attached parts in section 4.7.2 of the EBV-DOC shall be used.  A zero shall indicate that this expendable is not associated with any station and represents the total quantity of this munition for this entity.5.2.67		Total Record Sets RecordThe Total Record Sets Record shall be used when the record sets needed to transmit all the records associated with an entity exceeds the maximum allowed for a single PDU.  For a transfer transaction, the Transfer Control Request, Set Record-R, and Record-R PDU’s may contain this record.  For other transmissions to support other functional areas, Record-R, and Record-R PDU’s may contain this record.This record is mandatory for a transfer transaction if  the divesting federate cannot fit all the necessary records in the Transfer Control PDU for a Push transfer or in a single Set Record PDU in the case of a Pull transfer.  This record shall only be included for the first PDU in a sequence of PDU’s carrying record sets.    The Record ID = 500009.The format of the Total Record Sets record shall be as shown in Table 90.7.  Table 90.7 – Total Record Sets RecordField size (bits)Field Names and Units8Total Record Sets8-bit unsigned integer24Padding24-bits unusedTotal  Expendable Record size = 32 bitsThe Total Record Sets Record shall contain the following field: a)	Total Record Sets.  This field shall identify the total number of record sets when not all record sets fit into one PDU.5.2.68		Launched Munition RecordInformation for a munition entity being transferred when it was the entity specified in the  Munition ID field of a previously transmitted Fire PDU shall be communicated using the Launched Munition Record.   The acquiring federate shall process and store the Firing Entity ID and Event ID fields contained in this record and shall use it to either (1) complete the corresponding fields in a subsequent Detonation PDU related to this munition entity or (2) pass this information on to another federate if the munition is transferred again before the Detonation PDU is issued.   The Launched Munition Record shall not be used if the entity being transferred is a munition for which no Fire PDU was issued.  This record may also be used to support other functional areas besides the transfer function.The acquiring federate shall not accept the transfer of a munition when a target entity or location is specified in this record and it either (1) has no model that would allow the continuation of the munition to that target or (2) the model immediately cancels the entity if it determines that it cannot intercept the target.  The acquiring federate is not required to maintain an association between the acquired munition and a target entity or location contained in this record if it’s internal engagement model subsequently determines that the target is not feasible to be reached by the munition entity that was handed over.   The Target Entity ID and Target Location in World Coordinates fields shall be related if both fields are set to non-zero values.  One, or both fields, may be set to valid data or both fields may be set to NO_VALUE.  If a target entity is specified, and it has a non-zero velocity, the Target Location in World Coordinates field shall be set to NO_VALUE.  This record is mandatory if the entity being transferred is a munition entity that was previously contained in the Munition ID field of a Fire PDU.  The Record ID = 500010.The format of the Launched Munition Record shall be as shown in Table 90.8.  Table 90.8 – Launched Munition RecordField size (bits)Field Names and Units48Fire Event IDEvent Identifier Record (IEEE 1278.1-1995, para. 5.2.18)48Firing Entity IDEntity Identifier Record.(IEEE 1278.1-1995, para. 5.2.14)48Target Entity IDEntity Identifier Record.(IEEE 1278.1-1995, para. 5.2.14)192Target Location in World CoordinatesLocation in World Coordinates Record.  (IEEE 1278.1-1995,  para. 5.2.34)16Padding16-bits unused.Total  Launched Munition Record size = 352 bitsThe Launched Munition Record shall contain the following fields: a)	Fire Event ID.  This field shall identify the Event ID that was contained in the associated Fire PDU. b)	Firing Entity ID.  This field shall identify the firing entity that was contained in the Firing Entity ID field of the associated Fire PDU.c)	Target Entity ID.  This field shall identify the Target Entity ID, if any, associated with the entity being transferred. The Target Entity ID may not be the same as the one that was included in the Fire PDU.  If there is no associated target entity, this  field shall be set to NO_ENTITY.d)	Target Location in World Coordinates.  This field shall identify the Real-World coordinates of the target location when it is a geographic location instead of a specific entity.  The Target Location in World Coordinates shall be set to NO_VALUE if a the Target Entity ID field contains an entity.e)	Padding.  This field shall be padding (spare).5.2.69		Association RecordAn entity or location associated with a primary entity shall be communicated using the Association Record.  If more than one entity or location is associated with the primary entity, multiple Association Records may be sent.   Either an associated entity or a location, but not both, may be specified.  At least one of the two association object fields must contain valid non-zero information.This record is optional for a transfer transaction even if the divesting federate maintains internal association data related to the entity being transferred.    The Record ID = 500011.The format of the Association Record shall be as shown in Table 90.9.  Table 90.9 – Association RecordField size (bits)Field Names and Units8Association Type8-bit enumeration48Associated Entity IDEntity Identifier Record. (IEEE 1278.1-1995, para. 5.2.14)192Associated Location in World CoordinatesLocation in World Coordinates Record.  (IEEE 1278.1-1995,  para. 5.2.34)8Padding8-bits unused.Total  Association Record size = 256 bitsThe Association Record shall contain the following field: a)	Association Type.  This field shall identify an Association Type. This shall be an 8-bit enumeration.b)	Associated Entity ID.  This field shall identify an Entity ID, if any, associated with the entity being transferred. If there is no associated entity, this  field shall be set to NO_VALUE.  In this case, the Target Location in World Coordinates field must contain valid coordinates.c)	Associated Location in World Coordinates.  This field shall identify the Real-World coordinates of a location associated with the entity being transferred. is a geographical location instead of a specific entity or there is also a geographical location associated with the Target Entity ID.  The Target Location in World Coordinates shall be set to zero if a the Target Entity ID field contains an entity that has a non-zero velocity.d)	Padding.  This field shall be padding (spare).5.2.70		Location RecordThe Location Record is used to convey location information relevant to an entity or to an exercise including defining airspace, targets, routes, and areas of interest.   It may be a single point to represent an orbit center point, or it could be multiple points representing a path or route or area of interest.   Examples include sending waypoints defining the path an aircraft should fly or an orbit location.     The Record ID = 500012.The Location Record shall contain the following fields: Designation identifier.  The designation identifier for a Designation Record, if any, that is associated with this Location record.Location Type.  This field shall identify the type of location.Location Coordinates.  This field shall identify a location in standard DIS coordinates.Related Altitude Type. This field shall identify a related altitude type such as an MSL or AGL altitude.Related Altitude. This field shall identify the related altitude value.Time 1 Type.  This field shall identify Time 1, if applicable. Time 1.  This field shall identify Time 1 Time 1, if applicable, that is associated with the location typeTime 2 Type.  This field shall identify the type of time associated with Time 2.Time 2.  This field shall identify Time 2, if applicable.Sequence Number.  This field shall specify the sequence number when there is a series of related Location Records that define a route, air control line or enclosed area or airspace.Total Sequence Points.  This field shall specify the total number of points in a sequence..Designator.  This field shall contain a designator associated with the location.The format of the Location Record shall be as shown in Table 90-10.  Table 90.10 – Location RecordField size (bits)Field Names and Units16Designation IdentifierUnsigned integer8Location Type8-bit enumeration192Location CoordinatesWorld Coordinates Record. (IEEE 1278.1-1995, para. 5.2.34)8Related Altitude  Type8-bit enumeration16Related AltitudeUnsigned integer8Time 1 Type8-bit enumeration64Time 1Clock Time Record8Time 2 Type8-bit enumeration64Time 2Clock Time Record8Sequence NumberUnsigned Integer8Total  PointsUnsigned IntegerTotal Event ID Transfer record size = 408 Appendix CTransfer Control Enumerations1.0	GeneralThe changes to the enumerations to support the Transfer Control function contained in the IST-CF-03-01 EBV Document, dated 5 May 2003, are listed here.3.4  PDU Status  (new)3.4.1	Transferred Entity IndicatorThis section specifies the 1-bit enumeration for the Transferred Entity Indicator field.  This field is set, when applicable, for the Entity State, Entity State Update and Environmental Process PDU.Field value	Purpose0	No difference.  The Simulation Address of the Entity ID is the owner 1	Difference.  The Simulation Address of the Entity ID is not the owner.7.3  	Acknowledge PDU7.3.2  Response FlagThis field specifies the 16-bit enumeration for the Response Flag field in the Acknowledge PDU.Field Value	Response Flag0	Other1	Able to comply2	Unable to comply3	Pending operator action    (new)7.7  Record-R PDUThis section specifies the 16-bit enumeration for the Event-Type field in the Record-R PDU.Field Value	Event Type0	Other1-66535	unused7.8  Record Query-R PDUThis section specifies the 32-bit enumeration for the Event-Type field in the Record Query-R PDU.Field Value	Event Type0	Other1	Internal entity state data2-66535	unused	11.4  Transfer Control PDU    The transfer types are changed as shown.11.4.1  Transfer TypeThis section specifies the 8-bit enumeration for the Transfer Type field of the Transfer Control PDU.		Field ValuePresent	0Other	1Push Transfer- Entity.  A federate automatically or manually initiates a request for transfer of an entity it owns.	2*Pull Transfer- Entity.  A federate automatically initiates a request to assume ownership of an entity presently owned by another federate. 	3*Not used	4 Push Transfer - Environmental Process.  A federate automatically or manually initiates a request for transfer of an environmental process it owns.	5Pull Transfer - Environmental Process . A federate automatically initiates a request to assume ownership of an environmental process presently owned by another federate.	6*Not used.	7Cancel Transfer.  The present transfer is cancelled.	8*Manual Pull Transfer - Entity.  A federate manually initiates a request to assume ownership of an entity presently owned by another federate.	9*Manual Pull Transfer - Environmental Process. A federate manually initiates a request to assume ownership of an environmental process presently owned by another federate.*denotes change in meaning or new enumeration from IEEE 1278.1a    14.0  General RecordsThis section lists all the enumerations for records that are not limited to a particular family.14.1  Munition Record14.1.1	Munition TypeThe 64-bit enumeration for the Munition Type field is defined in 4.2.1.2 and 4.2.3.1 where Kind = 2.14.1.2	Station/LauncherThe 32-bit enumeration for the Station/Launcher field is defined in 4.7.3 Articulated Parts section.14.1.3	Munition StatusThis field specifies the 8-bit enumeration for the Munition Status field.Field Value	Purpose		0 		Other	1 	Ready To Fire	2 	Inventory	3-255	Unused14.2  Engine Fuel Record14.2.1	Fuel Measurement UnitsThis field specifies the 8-bit enumeration for the Fuel Measurement Units field. Field Value	Purpose		0 		Other	1 	1 liter	2 	1 kilogram	3-255	Unused14.2.2	Fuel TypeThe 8-bit enumeration for the Fuel Type field is defined in 4.2.3.6 and uses the Specific field values defined as part of the supply type 6-0-0-0-1 enumeration.14.2.3	Fuel LocationThis field specifies the 8-bit enumeration for the Fuel Location field.Field Value	Purpose	0 	Other	1  	Location 1*	2  	Location 2*	3-255 	Unused		* to be defined for specific platforms per a federation agreement.  When an exercise defines locations for a specific platform type (e.g., 1 = Central Fuel tank for an F15C aircraft), it is recommended these locations be submitted for inclusion here to facilitate standardization.	14.3  Engine Fuel Record14.3.1	Fuel Measurement UnitsThe 8-bit enumeration for the Fuel Measurement Units field is defined in 14.2.1.14.3.2	Fuel TypeThe 8-bit enumeration for the Fuel Type field is defined in 4.2.3.6 and uses the Specific field values defined as part of the supply type 6-0-0-0-1 enumeration.14.3.3	Fuel LocationThe 8-bit enumeration for the Fuel Location field is defined in 14.2.3.14.4  Designation Record14.4.1	Designation TypeThis field specifies the 8-bit enumeration for the Designation Type field .Field Value	Purpose	0  	Other call sign	1	Voice call sign		2	Tactical call sign	3	Collective call sign	4	Indefinite call sign	5	International call sign	6	Net call sign	7	Visual call sign	8	Basic Encyclopedia  (BE number used in targeting)	9-255 	Unused14.5  Expendable Record14.5.1	Expendable TypeThe 64-bit enumeration for Expendable Type is defined in 4.2.1.8 and 4.2.3.8 where Kind = 8.14.5.2	Station/LauncherThe 32-bit enumeration for the Station/Launcher field is defined in 4.7.3 Articulated Parts section.14.5.3	Expendable StatusThis field specifies the 8-bit enumeration for the Expendable Status field.Field Value	Purpose	0 	Other	1  	Ready To Disperse/Launch	2 	Inventory	3-255 	Unused14.6  Association Record14.6.1	Association TypeThis field specifies the 8-bit enumeration for the Association Type field.Field Value	Purpose	0 	Other	1	Target entity	2 	RTB to Home base 	3 	Enroute to CAP point	4  	Flight leader 	5  	Flight member	6  	Enroute to IP point	7  	Enroute to Rendezvous point	8  	On Station location	9  	Landing zone	10 	Downed pilot	11 	Tanker entity that is currently refueling the transferred entity.	12 	Tanker entity the transferred entity is headed towards to refuel.	13 	Entity headed towards to join up with.  	14-255	Unused	14.7  Location Record14.7.1	Location TypeThis field specifies the 8-bit enumeration for the Location Type field.	Field Value	Purpose	0 	Other 	1	Airspace Point	2 	Control Point	3 	Jammer Start	4 	Jammer End	5 	Launch Point 	6 	Air-to-Ground Search Initiation Point 	7	Refuel Location	8 	Reload Location	9 	Target 	10 	CAP Point	11	Launch Point	12 	Airfield Location	13 	Orbit Point	14 	Rendezvous		15 	End Point	16 	IP	17 	Orbit Definition	18-99 	Unused	100 	Air Refueling Control Point  (ARCP)	101 	Critical Route Point	102 	Hide Location	103 	Hover Location	104 	Pattern Start Point	105 	Pattern End Point	106 	Push Off Point  	107	Route Point	108-255	Unused14.7.2	Related Altitude TypeThis field specifies the 8-bit enumeration for the Related Altitude Type field.Field Value	Purpose	0 	Other	1	Mean Sea Level	2	Above Ground Level14.7.3	Time Type 1 and 2This field specifies the 8-bit enumeration for the Time Type 1 and 2 fields.Field Value	Purpose	0	Other  	1	Absolute Time	2	Relative TimeThis Page Left BlankAppendix DStudy Group Participants1.0	GeneralThe following is a list of the subscribers to the Transfer Control Study Group at the time this final report was approved.  The core members who contributed to most of the work are as follows:Frank Hill, chairperson	SDS InternationalPat Merlet, vice-chair	Sparta Inc.Al Ludwig	The Boeing CompanyAlan Berry	SRC Inc.Dwight Drager	SRC Inc.Jerry Szulinski	Lockheed MartinScott Wilson	Subscribersadinb@usa.net adinb@usa.net alan.berry@kirtland.af.mil Alan Berry albert.j.ludwig@boeing.com Albert Ludwig aykut@harpak.tsk.mil.tr Aykut MANIOGLU bill.helfinstine@lmco.com Bill Helfinstine bjorn.lofstrand@pitch.se Bj bob.strini@ebs-inc.org Robert A. Strini Chris.Rule@tbe.com Chris Rule christina.wilson@jacobs.com Christina Wilson christopher.ballard@us.army.mil Christopher Ballard Craig.Marsden@ngc.com Craig Marsden daniel.morrison@kirtland.af.mil Dan Morrison dperme@gestalt-llc.com David Perme frank.hill3@us.army.mil Frank Hill gene.mclaughlin@gdds.com Eugene McLaughlin gldouglas@link.com Greg Douglas iakgun@harpak.tsk.mil.tr ilker akg James.Evans1@wpafb.af.mil Jim Evans jerry.szulinski@kirtland.af.mil Jerry Szulinski Jim.Caylor@cae.com Jim Caylor jkraisser@northropgrumman.com Jeffrey Kraisser KCromes@northropgrumman.com Ken Cromes kefarwell@raytheon.com Kent Farwell Kelley.Moore@kirtland.af.mil Kelley Moore kevin.morello@kirtland.af.mil Capt Kevin Morello Lee_Marden@Raytheon.com Lee Marden Lisa.Patton@engenuitytech.com Lisa Patton little@sei.cmu.edu Reed Little marcher@sdslink.com Matt Archer mark.a.rybka@boeing.com Mark Rybka Michael.Bachmann@wpafb.af.mil Mike Bachmann Mike.Mora@kirtland.af.mil Mike Mora Mike.VanBoening@Boeing.com Mike Van Boening mmyjak@virtualworkshop.com Michael Myjak MOSSDI@mail.northgrum.com Moss Diane mpetty@odu.edu Mikel Petty mweber@novonics.com Michael WeberNathaniel.Shippee@hanscom.af.mil Nathaniel Shippee Neil.Morris@thales-tts.com Neil Morris Patrick_Merlet@sparta.com Patrick Merlet prochnow@mitre.org Dave Prochnow Richard.Dobson@PeoAvn.Redstone.Army.Mil Richard Dobson  Robert.Lillie@wpafb.af.mil Robert Lillie Scott.Wilson@hanscom.af.mil Scott Wilson stefan.beaubien@adacelcanada.com Stefan Beaubien Timothy.D.Jones3@boeing.com Tim Jones tom.brown@kirtland.af.mil Thomas Brown vlowe@ist.ucf.edu Van Lowe -----------------------------------------------------------------Total subscribers: 48   (as of 16 Feb 2004)	Appendix EIEEE 1278.1a, New Annex D1.0	General.This appendix describes a new annex to be included in 1278.1a.  The purpose of this annex is to provide additional background information on transfer control and recommended practices for implementing this capability into a simulation application.  This information is informative in nature and does not levy a requirement to adhere to the practices described herein.Annex D(informative)Transfer ControlD.1	ScopeThis annex provides additional background information on transfer control and recommended practices for implementing this capability into a simulation application.  This information is informative in nature and does not levy a requirement to adhere to the practices described herein.D.2	BackgroundTransfer control provides the capability for federates to hand off an entity from one federate to another.  It ,my be a handoff from a constructive simulation application to a virtual simulator, or vice-versa, or between two constructive or two virtual simulators.  It may be possible to go from a live to a sim entity, and vice-versa, in the future.  Section 4.5.8.3 of IEEE 1278.1 provides the requirements for implementing transfer control.   This Annex provides additional, non-binding information and guidance to assist developers in implementing this functionality.  The IEEE 1278.1a-1998 DIS Standard implemented the transfer control capability.  Unfortunately, there was no time to form a study group to ensure that the requirements and design concept had no logic errors.  Also, without a formal body to coordinate the record formats and values for internal store data, each organizations was left to implement whatever record and record content that met their specific project needs.   This caused interoperability issues and, basically, no one who has implemented transfer control can transfer an entity to someone else.  After the Spring 2003 SIW, it was decided to establish a Transfer Control Study group to deal with the issues.  The result of that effort was a revised set of transfer control requirements and establishment of a standard set of records to exchange internal store data.This annex has been written to assist developers in implementing transfer control and to provide rationale and background information on the various requirements.D.3	General GuidelinesThe following general guidelines are provided.	a)	Information regarding discarded PDUs involved in a transfer transaction should be logged to a file by the receiving federate.  The log should contain sufficient information to allow the receiving and sending federate to determine why it was discarded.	b)	Validity checks should be made.	c)	Although some transfers will be totally automatic between federates, in many cases they will also involve communications between simulation personnel at the two federates involved in the transfer.  For example, if a constructive or virtual aircraft is being transferred that had an operator portraying the pilot who has radio communications available to talk to C4ISR units, then mission status information, the C4ISR unit and callsign that he or she was in contact with at the time of the transfer must also be provided. Messaging systems or voice communications will be needed to pass this data.  The records added for the transfer control function do not cover all the data that may be needed to be passed between the divesting and acquiring federate. So attention must be paid to developing procedures that take this into account. 	d)	Although there is no requirement for a federate to validate that the originating federate is the present owner of the entity when the receiving federate is not the owner, a receiving federate may make an ownership verification check before responding to the request.  If it determines that the owner is different from the federate indicated by the Originating Entity ID field contained in the TCR PDU, it shall send an Unable To Comply Acknowledge-R PDU.	e)	The key to ensuring maximum interoperability of federates that do transfer control is to inventory the capabilities of each federate and understand their level of fidelity prior to an exercise.  To understand the level of fidelity, a list of the PDUs, along with the PDU fields and field values that can be output for entities needs to be documented. This information should be included in the federation agreement along with any restrictions on who can transfer what kind of entity to whom and under what circumstances.	f)	A federate is expected to output the same DIS PDUs for an entity it assumed ownership of that it can output for a local entity that it originated in the first place.  It is understood that this may not always be the case.  However, it is expected that federation agreements will not allow, for example, an entity that can output IFF data (IFF/NAVAID/ATC PDU) to be transferred to a federate that cannot continue to output the IFF data.  Emissions is another PDU that would be expected to continue to be output by a new owner.  The bets approach is to basically treat any remote federate that you assume ownership of and which becomes one of your local entities just like any other local entity you would have originated in the first place to the maximum extent possible.	g)	Although there is no requirement for a federate to process multiple simultaneous transfers, it may chose to do so.  In this case, feedback should be provided to an operator as to the status of each transfer, the entity being transferred, the type (Manual or Automatic) and who is the other federate involved in the transaction. federates areD.4	Design GuidelinesThe following design guidelines are provided.D.4.1	Uses of Transfer ControlThere are many uses for transfer control, all intended to make a simulation more realistic and to eliminate obvious artificialities on the synthetic battlefield.   Of particular benefit is the injection of an operational crew manning a virtual aircraft, tank or other vehicle realistically by taking over from a constructive entity instead of unrealistically just popping up as a new entity on the battlefield.  Likewise, a virtual entity when killed or when it is no longer in an exciting battle or phase of the mission to the crew, can be transition to a constructive entity instead of simply disappearing off the battlefield. The table on the next page describes some other uses of transfer control.Table D.1  Uses of Transfer ControlSituationSolutionA high-fidelity player  needs to join in a battle that has already started in a realistic manner instead of popping up somewhere in the battlespace.Select a constructive entity and transfer ownership of it to the virtual aircraft, tank, ship or soldier that needs to enter the training event.  An application processes a Detonation PDU and determines that it damaged or destroyed one of its entities, but it has no logic to indicate that condition.  It can only cancel the entity and remove it from the battlespace.The application transfers ownership of the entity to another application that can portray damage or destruction and associated events.  Example: an aircraft hit by enemy fir and goes down in flames. After crashing on terrain, the aircraft is handed off to a federate than can portray the wreckage.An Aggregate application needs to deaggregate.  It does not have the fidelity to send out realistic individual entities.The Aggregate application deaggregates and sends out individual entities. It then transfers control of all the deaggregated entities to an application that can more realistically portray them.A high-fidelity simulator application crashes or the communication link goes down so its entity is no longer in the exercise.A predefined “backup” federate monitors the timeout of the entity and automatically takes ownership of the entity.  If the high-fidelity simulator is restarted, or the communications link is restored, the entity is transferred back to the original owner.  C4I platforms such as  AWACS, the Navy E2C, and virtual cockpit aircraft are prime candidates to have a “backup” federate.A constructive entity encounters an engagement situation but does not have any engagement logic.The constructive entity is handed off to another application that can more realistically perform the engagement.  The target may also be transferred.A munition is launched but the application has a low fidelity fly out and a high-fidelity one is needed.The munition is automatically transferred to a pre-designated high-fidelity munition application that can realistically portray the flyout, provide the proper stimuli to the target and can react to the target’s countermeasures.Entity interaction is slowed by the communication distance and network design to a point where unrealistic interactions occur. Transfer the entity to an application at a federate in a facility that is closer to the entities that it must interact with.  Example:  A simulated aircraft in the U.K. is playing in a worldwide exercise and needs to join  an Australian aircraft formation.  It is transferred to a facility in Australia.A virtual simulator crew wants training in the combat phase only and does not want to spend time on the ingress or egress portion of the mission once it is no longer in hostile territory.Transfer the virtual simulator to a constructive entity.  Then reinitialize the virtual simulator and have it transition to take the role of another constructive entity that is entering a battle phase. Examples:  Aircraft going to a tanker to refuel or returning to base.  A tank that is stopped waiting for a reload of fuel or ammunition.A simulator has a small playbox instead a larger exercise area and a ground vehicle reaches the limits of its playbox.Automatically transfer the ground vehicle to another application that can continue it down the road or across the open terrain.D.4.2	Entity ProcessingD.4.2.1	Local and Remote Entity Data BasesIt is expected that most of the simulations that implement transfer control will already have implemented various PDUs and will be processing remote entities and data received from other federates.    So, one or more data bases will have been developed to store information on local and remote entities.D.4.2.2	Determining Local/Remote Entity StatusBefore transfer control, it was easy to tell whether an entity was a local or remote entity.  One only has to look at the Entity ID.  The Simulation Address (Site/Application) portion of the Entity ID told you who the owner was.  If you saw an Entity State PDU where the Entity ID had your own Site/Application in it, you knew it was either one of your own PDUs reflected back of the network, or it was someone else who was using your site/application.  In either cause, you would discard the message. Now, if you, as a federate, implement transfer control, it may be that you have handed off one of your entities to someone else. So now the remote entity coming in with your Site/Application in the Entity ID may be legitimate. In this case you will not want to discard it anymore.How do you know whether it is a legitimate remote entity?  You will need to perform the following checks:	a.	If you still hold the entity as a local entity, and it is not parked (see 3.1.2), and there is no Overlap Timer in effect, and you have never reinitialized your system, and a transfer transaction is not active for this entity between you and someone else, then you are probably the owner and the received entity is in error.  You need to send out the Ownership Data PDU (as required by the standard) and throw away the PDU.	b.	If you do not hold the entity as a local entity, but it has your site/application in the Entity ID, you can either let it in or perform a further check to see if it is legitimate.  This would be to check the Reporting Source subfield in the PDU Status Field of the PDU Header.  If it is set to 1 (difference), then it is a different federate (site/app) than you and it is probably legitimate.  If it is set to 0 (no difference), the federate that sent the entity is saying that it’s site/app is the same as the site/app in the Entity ID which is the same as your site/app. You both can’t have the same site/app so something is wrong here even though you do not hold the entity locally.  They may have implemented the transfer control rules incorrectly or forgot to implement or set the Reporting Source subfield.  In this case you should discard the PDU and  log the error to a special transfer control log file.  You should also send out an Ownership Data Query PDU so you can find out who sent you the Entity State PDU.   The reply Data PDU will be in your regular DIS log file and you can marry the two up later unless you want to get more sophisticated and add Ownership Data PDUs to a special transfer control log file.D.4.2.3	Avoiding Duplicate EntitiesWhen you initiate a new local entity, it is assumed that a check is made to ensure that it does not duplicate an existing local entity.  Now, a federate that is capable of having a local entity be transferred to another federate must also check remote entities when initiating a new local entity.    This is because the remote entity may have an Entity ID that was originally assigned by you to a local entity that was subsequently transferred to another federate.D.4.2.4	Parking Entities	Some simulations may need to retain the entity as a local entity in its data base even though it has handed over the entity to someone else and is now receiving Entity State PDUs which is used to establish the entity as a remote in its data base.   This retained local entity will be referred to as a parked entity transferred (PET).  The application may clear some of the content of the entity slot in the data base at the time it is parked, as well as, setting some sort of PET Flag.   One use of a parking capability is for applications that have special interfaces to other models that can generate tactical messages that are fed into C4ISR systems about the aircraft mission.  If they drop the local entity completely, they may break this interface.  Of course, there are other solutions to this problem which would negate the need to retain the “local entity”, but this may be to costly to implement.A PET in the data base must be completely invisible to other local and remote active entities that are held in the data base so no interactions can occur.   If displayed to simulation personnel, it should have an indicator that tells them it is a PET and consideration must be given to what kind of commands can be taken for it when in this state. If a transfer request is received to hand the remote entity back to a federate that holds it as a PET, then the TCR PDU processing must include a check to see if it is a PET.  Appropriate logic must be in place to allow the transfer back to proceed smoothly and be accomplished. It is envisioned that parking a local entity would only apply to an entity that was originally started by the federate and not to a local initially created by someone else and transferred to it later on.D.4.2.5	Re-Entering an ExerciseYou may have initially been in an exercise and then left it and now you are rejoining.  This may be due to a network failure where your federate has been operating but has not been on the DIS Network so you have not be sending or receiving traffic. Another case is where you have crashed and now you are recycling. A third case may be where you are a virtual simulator that has been killed, such as a fighter cockpit simulator, and now you are reinitializing the aircraft again.  These situations have different considerations. D.4.2.6	Validity ChecksA federate may perform validity checks on PDUs it receives as part of the transfer control process beyond those required by the standard..D.4.2.6.1	Ownership.  If a federate wants to keep track of all local entities it has transferred by setting some flag in its data base or by having a separate linked data base with that information, that is fine.  However, unless this information is stored in a file that can be read in at re-initialization for the case where your application goes out of the exercise for a while and comes back in, you will not have the information anymore.  The transfer control requirements say that you have to be able to determine the ownership of an entity and detect ownership conflicts without relying on a file read in at initialization or re-initialization time.   This is where the use of the Reporting Source subfield of the PDU Status field in the PDU header comes in.  The standard describes how to use this field to assist in determining ownership.D.4.2.6.2	Messages Out of Sequence.  You may cancel a transfer transaction if the transfer-related PDUs coming from the other federate are in the wrong order or they do not come within the time set by a timer.D.4.2.7	Fidelity ConsiderationsD.4.2.7.1	Associated PDUs.  Other PDUs that have information on the entity such as the IFF/ATC/NAVAID PDU and the Electromagnetic Emission PDU should be continued if you have the capability to do that.  There are no records for passing IFF, laser designator and emissions data so a federate must be able to store remote data from those PDUs if it expects to continue the data.  Federation managers are urged to develop a standard questionnaire to determine for each federate that has a transfer control capability the extent to which they implement transfer control and the specific data fields, and subfields, within selected PDUs that they are able to set to non-zero values.  As a minimum, the following PDUs should have detailed information made available for each federate: Entity State PDU, Entity State Update PDU, IFF/ATC/NAVAID PDU, Electromagnetic Emission PDU, Designator PDU,  and the Environmental Process PDU.  Of particular interest in the Entity State and Entity State PDU are details of the implementation of the Appearance and Capabilities fields for each platform kind and domain.D.4.2.7.2	Appearance.  The Appearance field and its associated subfields within the Entity State and Entity State Update PDU is one of the fields that will create the most obvious discontinuity issues for a transferred entity, especially if the entity is being transferred from a high fidelity to a medium or low fidelity simulation where few if any Appearance fields are used (excluding Bit 23 which is required by the DIS Standard to be implemented by all simulations). The Appearance field is important for visual displays and constructive modeling logic.  Federation management must ensure, based on the level of fidelity required for a particular domain that is part if the exercise (e.g., air, land, etc.) is not compromised when an entity is transferred.  It was recognized that levying the requirement to continue all Appearance fields, whether or not the acquiring federate has the capability to set them to other values, could cause some unrealistic situations such as an aircraft afterburner that would be left on forever.  The continuation of the Damage Status value was seen as a bigger issue.  If a destroyed entity is handed over and the new owner does not implement the Damage Status field, only implements certain values, or only sets it once simultaneously with sending out a final Entity State PDU with State set to inactive, this will have major consequences on the battle.  For example, a ground entity tank is hit and destroyed and is remaining on the battlefield as a smoking hulk.  The new owner does not implement damage status, so after the destroyed tank entity is transferred the Damage Status field is set to zero (no damage).   Now, resources will be expended to kill it again and the debriefing will note this as a simisms.  It was finally decided not to require any Appearance fields to be continued.  Exercise management needs to carefully evaluate which federates will be allowed to transfer which types of entities based on entity implementation information collected from the federates.D.4.2.8	Who Owns The Entity?D.4.2.8.1	General.  One of the major problems with the original transfer control requirements in IEEE 1278.1a was the fact that it was no longer possible to know who owned an entity by looking at the Entity ID for the entity.  This is because the Entity ID remains the same after a transfer in order to preserve continuity.  Many options were explored to restore ownership information while making any solution backward compatible for federates that did not implement transfer control or had a need to know ownership information.  It was finally decided to add a requirement to have a new owner output the Ownership Event Report PDU when it took control of an entity and to respond to an Ownership Data Query PDU, at other times, with an Ownership Data PDU to provide the information.  Since it is surmised that most entities will not be transferred during an exercise, a new Transferred Entity Indicator was added to a new PDU Status Field using the 16-bit padding field that is currently in the PDU Header record.  D.4.2.8.2	Transferred Entity Indicator.  This indicator tells an application whether the site/application (federate) shown in the Entity ID field of an Entity State, Entity State Update or Environmental Process PDU is the same as the present owner.  If not, and a federate has not been keeping track of Ownership Event Report PDUs and needs ownership information, it can then issue an Ownership Data Query PDU.  This solution is backward compatible unless a federate makes a check that a padding field actual contains zero values, in which case, a software change will be required to not make such a check for the present 16-bit padding field in the PDU Header.D.4.2.8.3	Automatic Generation of the Ownership Data Query PDU.  If a simulation application desires to include software logic to automatically generate an Ownership Data Query PDU, the following guidance is provided.  The simulation application should minimize the number of automatic Ownership Data Query PDUs that it generates. This can be done by processing ownership information contained in other PDUs.  These PDUs would Entity State and Entity State Update PDUs (Processing the be the Transferred Entity Indicator in these PDUs tell you whether the owner is different than the site/application of the Entity ID field in those PDUs); Ownership Event Report PDUs,	 and Ownership Data PDUs.D.4.3	Automatic and Manual ModesIt is recognized based on projects that had already implemented transfer control and on system analysis, that a federate may desire to have an operator have control over various phases of a transfer transaction.  This has implications for timers and other processing.  An analysis showed that a transfer of entities could be completely automatic with no human intervention considerations control experience The concept of a federate involved in a transfer transaction	D.4.4	Human System InterfaceThe Human System Interface (HSI) are the displays, alerts and commands used by operators to manage a transfer or to find out ownership information.  A good HSI design for an application that implements transfer would meet the following HSI requirements.	a.	Provide the operator with a display of the entity’s owner (Federate ID).  	b.	Provide the operator with an indication that a transfer transaction is active between it and another federate including the Entity ID, the other federate’s ID, the time and the phase that the transaction is in.  Suggested phases are:		Pull (Push) Transfer Initiated 		Comply/Not Comply/Pending Operator Action Sent/Received			Completed		Canceled		Sample Display		Time	Entity	Transfer Phase	Federate		10:20:10	48:2:10012	Manual Push Req To	48:2		10:20:15	48:2:10012	Ack-Comply From	48:2		10:20:20	48:2:10012	Transfer Complete To	48:2		10:20:10	48:2:10012	Auto Pull Req To	48:2		10:20:15	48:2:10012	Ack-Pending From	48:2		10:20:20	48:2:10012	Canceled - Timeout	48:2		10:20:10	48:2:10012	Auto Pull Req To	48:2		10:20:15	48:2:10012	Ack-Unable	48:2		10:20:15	48:2:10012	Canceled - Unable	48:2		10:20:10	48:2:10012	Auto Push Req From	48:2		10:20:15	48:2:10012	Ack-Able Sent	48:2		10:20:15	48:2:10012	Transfer Complete From	48:2	c.	An operator needs to be alerted to incoming transfer request if it is in the Manual Transfer Mode.D.4.5	Push Transfer RequestThe federate receiving a Push Transfer Request directed to it should ensure, as a minimum, that all the following conditions are met. These should be part of an internal acceptance check.  If they are not met, an Unable To Comply Acknowledge-R PDU should be sent:	1)	The transfer entity is held in the receiving federate’s entity data base as an external (remote) entity at the time that the Push TCR PDU is received. 	2)	The federate will be able to maintain the same entity type for the entity.	3).	There is capacity to accept the entity as a local entity when the local and remote entity data bases are maintained separately.	4)	Internal criteria would not cause the entity to be immediately cancelled upon assuming ownership.	5)	The internal criteria check need only be made once at the time the Push TCR PDU is received and shall be based on the latest entity data available.  If the federate has a limited exercise area, the entity shall be checked to see if it is currently in the exercise area.	6)	Any federation agreements related to transfer control are met.  Typically, it is envisioned that the agreement would place restrictions on which federates can transfer what type of entities to whom.  For example, Federate A, a virtual cockpit, may only accept a Pull Request from Federates E and F as they are the only ones in the federation that can maintain the aircraft with sufficient fidelity to support exercise and training objectives.	7)	Internal acceptance checks may exclude an entity from being eligible for transfer for a variety of reasons besides those listed in 1 through 6 above, such as:		a)	The entity is involved in an engagement either as a target or as the interceptor.		b)	The entity is undergoing kill assessment.		c)	The entity is accelerating, decelerating, changing heading or attitude.D.4.6	Pull Transfer RequestThere is no additional guidance for Pull transfers.D.4.7	Internal State Data ExchangesIf a federate desires to request or send internal state data not related to a transfer transaction, the following PDUs are available:		Data Query PDU (5.3.6.8)		Set Data PDU (5.3.12.9)		Data PDU (5.3.6.10)		Data Query-R PDU (5.3.12.8)		Set Data-R PDU (5.3.12.9)		Data-R PDU (5.3.12.10)		Record-R Query PDU (5.3.12.13)	Record-R (5.3.12.15)D.4.8	Transfer Control ManagementThe implementation of transfer control will always involved some sort of human supervision of the process even if it is fully automatic.  For transfers of virtual entities manned by operators, additional voice and chat coordination will be needed to provide all the information that will be needed by the new owner to maintain the entity and continue to interact realistic with C4ISR systems.   This also goes for a virtual to constructive transfer where the constructive simulation has operators controlling the entities and in contact with C4ISR units on data link or voice nets.D.4.8.1	Federation AgreementsIt is anticipated that a federation will require each federate that can implement transfer control to provide a detailed description if its capability to include the following:	a.	Initiation and Receipt of Push or Pull transfers.	b.	Which records are implemented for transmit and receive and field values implemented.	c.	What kind of entities can be transferred (e.g., aircraft, ships, tanks, etc)	d.	If simultaneous transfers can take place. If so how many?	e.	Whether the transfer capability has undergone certification testing.	f.	The level of fidelity of each kind of entity it can transfer.	g.	Where it is a virtual or constructive simulation.	h.	Can it do both the Automatic and Manual Transfer Mode?	i.	Can it log PDUs and operator actions associated with transfer control.	j.	Does it use a transfer gateway or is it built into the application?This information will be used to determine who can transfer to whom and what kinds of entities.  This is expected to be based, in large part, on fidelity issues.  It is not expected that federates will randomly pick another federate to handover its entity to during an exercise.D.4.8.2	Initialization Data.It is recommended that any implementation of transfer control include an initialization file that can be read in at the time the simulation application is brought up in the runtime mode.  This initialization file would contain parameters to better control the transfer environment and prevent inappropriate transfers from taking place.  These could include a list of eligible federates to accept or transfer an entity to during the exercise.  This can be used by the program when automatically selecting a federate to transfer and entity to and by an operator for manually initiated transfers.D.4.9	Processing Associated RecordsInternal state data is passed as part of a transfer transaction in either the TCR PDU, Set Record-R PDU or in a Record-R PDU.  The records are contained in the record set field of these PDUs. An example of how to fill the records in a record set is show below. EMBED Word.Picture.8  Record Set ExampleFuel State = 32,000 lbs Armament = Qnty 2/ AIM-120 air-to-air missiles and Qnty 3/ AIM-9 Air To Air MissilesRadio Freq = UHF 340.5Callsign = TANGO32Record Set #1Record ID = 1234Record Set Serial Number = 1Record Length = 32 bitsRecord Count = 1Record Values = {32,000.0}Padding = 0 bitsRecord Set #2Record ID = 24Record Set Serial Number = 2Record Length = 80 bitsRecord Count = 1Record Values = {“TANGO32”}Padding = 0Record Set #2 (Continued)Record Count = 2Record Values   Munition Type = AIM-120 enumeration  Station/Launcher = 0  Quantity =2  Munition Status  = 1 = Ready  Padding = 0 bits (in this case)  Munition Type = AIM-9 enumeration  Station/Launcher = 0  Quantity =3  Munition Status  = 1 = Ready  Padding = 0 bits (in this case)The end of each record  is known by taking the record length and dividing it by the record count.Record Set #3Record ID = 2004Record Set Serial Number = 3Record Length = 32 bitsRecord Count = 1Record Values = {340,500,000.0}Padding = 0Record Set #4Record ID = 5Record Set Serial Number = 4Record Length = 64 bits (assuming 8 bits for each character and one additional for the end-of-string marker)D.4.10	Transfer Timing ConsiderationsThere may be situations where both federates involved in a transfer transaction believe they own the entity.  This may occur during the time it takes for the Initial Entity State PDU to travel from the Acquiring federate to the Divesting federate. During that time, the divesting federate may cancel the entity due to detonation processing, etc.  In this case, all other federates upon receiving the Cancel Entity State PDU would cancel the entity from their remote data base except for the acquiring federate who now owns the entity since it has already sent out the Initial Entity State PDU.  The acquiring federate will disregard the Cancel Entity State PDU and continue sending out the entity.  Other federates will now process the entity from the new source.  If the reason the entity was cancelled was due to a detonation, then the entity will have magically reappeared after being killed.  An Overlap Cancel Timer concept was considered to take of this rare situation, but it was decided not to make it a requirement.If this becomes an issue, a solution would be to implement an Overlap Cancel Timer at the Acquiring federate.   The timer would be set by the acquiring federate when it sends the initial Entity State PDU upon assuming ownership.  If a Cancel Entity State PDU is received from the divesting federate on the entity while the timer is active,  the acquiring federate would cancel it’s entity and send a Cancel Entity State PDU.Symbolic NameDefinitionNumeric RangeDefaultvalueOVERLAP_TIMEROverlap TimerSet by the acquiring federate when the Initial Entity State PDU is sent.If a Cancel Entity State PDU is received from the previous divesting federate for the entity while the timer is active,  the acquiring federate shall cancel it’s entity and send a Cancel Entity State PDU.(1,1-10) seconds5 secsD.4.11	Simulation Tool ChangesD.4.11.1	DIS loggers.DIS Loggers need to be able to process the PDUs associated with transfer control including new PDUs, records and Record IDs.  The PDU Status field in the PDU Header needs to be implemented. A PDU should no longer be discarded if the 16-bit padding field in the PDU Header Record used for the new PDU Status Field has non-zero values. The Reporting Source subfield of the  PDU Status Field should be interpreted like other fields.  PDU’s that have new Datum ID’s should be processed.   If a DIS logger makes validity checks, it needs to incorporate changes to account for transfer control-related PDU’s, records and enumerations.D.4.11.2	Multi-Level Security (MLS) Applications.MLS Applications need to process the new PDU Status Field and the new Record ID’s, records, enumerations and the new Transfer Control Request PDU that are part of transfer control.  Otherwise PDU’s will be erroneously rejected.D.4.12	Transfer Control Gateway		A transfer gateway may be used to provide all or a portion of a transfer control capability to a host federate where the host federate has not implemented full transfer control functionality.  If a transfer gateway is used, it shall conform to the applicable rules contained in 4.5.8.3 and to the additional rules herein:The following general guidelines are provided.		a)	The gateway shall ensure that DIS traffic is managed to and from the host federate such that it is in compliance with transfer control requirements as perceived by other federates.		b)	The gateway shall be a federate although it may not need to include its simulation address in PDUs.		c)	The federate shall ensure that the Entity ID information contained in PDUs received from a host federate for an entity it is generating conforms to  transfer control Entity ID rules.  		d)	If the same Entity ID is used by the host federate for an entity once it is reactivated after having previously been active in the exercise and after it was transferred to another federate, the transfer gateway shall change the reactivated Entity ID from the host federate to a unique value to avoid an ownership conflict.  		e)	The transfer gateway shall monitor incoming and outgoing messages that may contain the modified host federate Entity ID and shall modify the Entity ID field(s) of such messages as needed before forwarding them to the host federate.		f)	One or more host federates may be interfaced to a single transfer gateway.D.4.13	Live Entity Transfers		Although Transfer Control does not support the transfer of a TSPI PDU for a live entity, if the federate sending the TSPI PDU also outputs the live entity as an Entity State PDU,  it would qualify as being eligible to be transferred  using the Transfer Control rules and process defined in 4.5.8.3 of this standard.  However, there are important considerations and issues that exercise planners and developers need to be aware of before attempting this type of transfer.   A separate Analysis Paper is being written to be reviewed and discussed by the TC Study group.   D.4.14	Reliability Service		The original Transfer Control requirements in IEEE 1278.1a, para 4.5.8.3 stated that either the Acknowledge or Unacknowledged reliability service could be used but specified use of the Acknowledge-R, Set Record-R and Record-R PDUs.   The message sequences and requirements, although using R-series PDUs and requiring an Acknowledge-R PDU in response to certain messages, did not fully implement reliability service.   For example, no mention was made of re-transmitting the TCR PDU if no Acknowledge-R was received within a certain time period which is a requirement if you use the Acknowledged Reliability Service.  This hybrid approach was retained, except that the Reliability Service Level field of the three R-Series PDUs is required to always be set to 1 (Unacknowledged).  This was based on a review of present transfer control software implementations, none of which had implemented all the requirements of an Acknowledged reliability service and were setting the field to 1 (Unacknowledged).  Also, it was felt that with the use of the timeout mechanism and acknowledgement that the required level of  reliability would be achieved.  Also, it would simplify the software effort needed to implement transfer control in new applications.This Page left BlankAppendix FHLA  Changes1.0 	GeneralThis appendix describes the changes to the HLA RPR FOM and GRIM as a result of the changes in the transfer control requirements and standardization of internal state records.The RPR-FOM adds protocol on top of the HLA native ownership transfer to support mapping the DIS Transfer Control methodology to HLA. It allows both “Push” and “Pull” transfers, but excludes a “Swap” transfer. The GRIM document provides a detailed description of how to implement the Transfer Control function in the HLA RPR-FOM.Steve Monson, at The Boeing Company, explains it like this- “The essence of Transfer Control in the HLA RPR FOM is that the negotiation of the participants in the transfer is agreed to using the Transfer Control Interaction - just like in DIS.  That is using an ‘Arbitration’ process.  In both the ‘Push’ and ‘Pull’ methods, the original owner of the Object essentially puts the Object up for adoption by anyone who wants it.  However, if everyone is following the process correctly, only the federate that was identified in the Transfer Control Interaction will adopt it.  This gets around having to know the Federate ID, and allows Site/App/Entity ID to be used instead - just like in DIS.  Of course everyone must agree to this process in advance and implement it in their software.” He goes on to say that “There are two basic philosophies to Transfer Control.  Use the RTI to arbitrate, or use another outside protocol to arbitrate and then do the mechanics of the transfer using the RTI to ‘arbitrate’ a known outcome.” For the HLA RPR-FOM, the latter methodology was adopted.The terms ‘arbitrated” and “non-arbitrated” are introduced in the GRIM and refer to their DIS corresponding process behaviors.  “Arbitrated” means that the transfer of ownership of the base object and separate attributes such as IFF and emissions data require specific negotiation for the transfer to take place.  All HLA RPR-FOM transfers are “arbitrated”. Only the Entity transfer is “arbitrated” in DIS. “Non-Arbitrated” means that the transfer of ownership of separate entity attributes, such as IFF and emissions data, do not require specific agreement or a message handshake for the transfer to take place.   There are no “non-arbitrated” HLA RPR-FOM transfers. Since only the entity transfer is “arbitrated” in DIS, the transfer of IFF and Emissions data do not involve separate Transfer Control PDUs.  The IFF and Emissions PDUs, if applicable, are automatically generated by the new owner when it begins transmitting the Entity State PDUA new HLA RPR-FOM BaseEntity attribute , for example, “ReportingIdentifierTransferredEntityIndicator” would need to be added to the RPR-FOM to reflect the new DIS Reporting Site and Reporting Application fieldsTransferred Entity Indicator in the new PDU Status Field of the PDU Header.2.0	RPR FOM 1.7 ChangesThe following changes need to be made to the RPR FOM:2.1	Object Class Structure TableClass 1Class 2Class 2Class 22.2	Object Interaction TableInteraction 1Interaction 2Interaction  32.3	Attribute TableObjectAttributeDatatypeCarUnitsResAccuracyAccuracy ConditionUpdate TypeUpdateConditionT/AU/RRSNANANANANANANANACar =  Cardinality     Res = Resolution      RS =Routing Space   T/A = Transferable/Acceptable      U/R = Updatable/Reflectable2.4	Parameter TableInteractionParameter TypeDatatypeCarUnitsResAccuracyAccuracy ConditionRSNANANANANANANANACar =  Cardinality     Res = Resolution      RS =Routing Space   2.5	Enumerated Datatype tableIdentifierEnumeratorRepresentationNoteResponseFlagEnum16 [9]Pending operator action3New See Appendix C 7.3.2TransferTypeEnum8Other0See Appendix C 12.4.1EntityPush1EntityPull2EntitySwap   Not used3NewEnvironmentalProcessPush4EnvironmentalProcessPull5Cancel6EnvironmentalProcessSwap  Not used7NewEntityManualPull8NewEnvironmentalProcessManualPull9NewDatumIdentifierEnum32MunitionRecord500001NewEngineFuelRecord500002NewSee Appendix BStorageFuelRecord500003NewDesignationRecord500004NewExpendableRecord500005NewTotalRecordSetsRecord500009NewLaunchedMunitionRecord500010NewAssociationRecord500011NewLocationRecord500012NewMunitionStatusEnum8Other0New  App C 14.1.3Ready To fire1Inventory2FuelMeasureEnum8Other0New  App C 14.2.11 liter11 kilogram2FuelLocationEnum8Other0New  App C 14.2.3Location 11Location 22Location 33Location 44Location 55Location 22New  App C 14.1.3DesignationTypeEnum8Other call sign0New  App C 14.4.1Voice call sign1Tactical call sign2Collective call sign3Indefinite call sign4International call sign5Net call sign6 Visual call sign7Basic Encyclopedia [89] 8ExpendableStatusEnum8Other0New  App C 14.5.3Ready To Disperse/launch1Inventory2AssociationTypeEnum8Other0New  App C 14.6.1Target entity1RTB to Home base 2Enroute to CAP point3Flight leader4Flight member5Enroute to IP point6Enroute to Rendezvous point7On Station location8Landing zone9Downed pilot10Tanker entity refueling transferred entity11Tanker entity for transferred entity 12Entity headed towards to join up with.  13LocationTypeEnum8Other0New  App C 14.7.1Airspace point1Control point 2Jammer start3Jammer end4Launch point5Air to Ground Search Initiation Point6Refuel location7Reload location8Target9CAP point10Landing zone11Airfield location 12Orbit point  13Rendezvous14End point15IP16Orbit definition17Air refueling Control Point100Critical Route point101Hide location102Hover location103Pattern start point104Pattern end point105Push off point106Route point107RelatedAltTypeEnum8Other0New See Appendix C 14.7.2Mean Seal Level1Above Ground Level2TimeTypeEnum8Other0New See Appendix C 14.7.3Absolute Time1Relative Time22.6	Complex Datatype TableComplex DatatypeField NameDatatypeCarUnitsResAccuracyAccuracy ConditionRSNANANANANANANANACar =  Cardinality     Res = Resolution      RS =Routing Space   2.7	Routing Space Table - Not Applicable2.8	Object Class DefinitionsTermDefinitionNotesReportingIdentifierTransferredEntityIndicatorThe federate that is the owner of a BaseEntity.  It uses the same format as the EntityIdentifier[add definition].New.  See Appendix C 5.2.61` (?)3.4.1   2.9	Attribute Definitions ClassTermDefinition  2.10	Parameter Definitions InteractionTermDefinition  2.11	Notes IDText89Base Encyclopedia (BE) Number used in targeting. 3.0	GRIM ChangesThe following recommended changes are based on a preliminary review of the GRIM Document, Version 2.0D17v3. (Editor’s note: All paragraphs that reference transfer control are listed.  Experienced HLA RPR FOM personnel need to review these paragraphs and the proposed changes to see if they are appropriate.  This includes adding additional changes where a paragraph lists “no change” if felt appropriate.)Miscellaneous suggestions:The RPR FOM definitions of the TransferControl and RecordR interactions does not include the DIS “Required Reliability Service” field.  This causes confusion.  We suggest either adding these fields for consistency, or addressing their omission (rationale) in the GRIM.  The DIS standard specifies the Acknowledge-R PDU for Transfer Control, but the GRIM specifies the Acknowledge interaction.  This causes confusion.  Suggest either using the AcknowledgeR interaction or addressing this issue in the GRIM.  When updating Section 8.1 and the figures therein, suggest being explicit in the treatment of the SetRecordR and RecordR interactions (and remove references to Record and Set Record PDUs and interactions).  4.3	No change.4.3.2	No change.5.13	No change.5.14.10	No changeTable 6-10.	No changeTable 7-1.	No changeAdd SetRecordR.7.5.16	Line 5-9.   Present wording “Requests to transfer control of an entity are communicated with a TransferControl interaction. This interaction maps to the DIS Set Record PDU. “OriginatingEntity”, “ReceivingEntity”, “RequestIdentifier”, and “RecordSetData” shall be required parameters.  The “RecordSetData” field shall contain TBD.  The use of this interaction is described in section 8.1.”    This paragraph will probably need to be revised since the records for a transfer have been developed.  Also, the Transfer Control Request PDU contains records as well as the Set Record-R PDU.  We are using the Set Record-R PDU.  There is no Set Record PDU.  Table 7-39	Originating Entity ID.  Change definition to “The DIS Entity ID triplet of the application originating the request”   The word “entity” was removed to eliminate any confusion as to what can be contained in this field. 8.1	Implementation of Transfer Control	Line 18-24 replace with:		DIS allows for two types of arbitrated transfer control for the initiating application:Push: divesting ownership of an entityPull: acquiring ownership of an entityHLA supports both types of transfers.We have eliminated swap as a transfer type as no one has ever been able to figure out what it is.8.1.2.1.1	We have implemented a new Acknowledge response flag called “Pending Operator Action” for the case where an operator will be making the decision to comply or not comply.  This will need to be included in this section.8.1.2.1.2	Same comment as for 8.1.2.1.1.	Line 36 Present: If an Attribute Ownership Unavailable callback is received for any of the object instance’s attributes, this is an error in the transfer process.  Behavior after this point is undefined.Behavior at this point is undefined. We need to discuss this to see if it is still true with our new design and if not, new words will be needed.8.1.2.2.1	We have implemented a new Acknowledge response flag called “Pending Operator Action” for the case where an operator will be making the decision to comply or not comply.  This will need to be included in this section.8.1.2.2.2	Same comment as for 8.1.2.2.1.	Line 24.  Same comment about behavior as noted for 8.1.2.1.2, Line 36.8.1.3.1	We do explicitly say that in the case of the relinquishing (we all it divesting) federate, it shall cease sending any PDU related to the entity that was transferred including attributes reflected in the IFF and Emissions PDUs.8.1.3.1.1	The ‘pull” of non-arbitrated attributes may still have only the accept and deny options as the8.1.3.1.2	 ‘pending operator action’ may not be applicable here. This needs to be discussed.8.1.3.2	Emissions.  No Change.	Isn’t the IFF data in the same boat as emissions?  It isn’t covered here.8.1.4	Figures 1, 2, 4 and 5 need to be changed.9.7.3	No change  unless we decided to rename the Transfer Control Request PDU to Transfer Control PDU. The GRIM uses both terms in the document.  Few people seems to include the word “request” when talking about the PDU.	Appendix GFuture Enhancements1.0	GeneralThe Transfer Control Study Group investigated and discussed other aspects of transfer control.  These are documented in the minutes to the Transfer Control Study group telecons.2.0	Transfer Control OrderIt may be that eventually simulation management may need to order a federate to transfer its entity to another federate.  This could be easily accommodated by the addition of an addition transfer type (Transfer Order) in the Transfer Control Request PDU. It would be directed to the federate that currently owned the entity ordering it to transfer it’s entity to another federate. It may be that there will be a need to also order a federate to assume ownership of someone else’s entity. This could also be accomplished by the same method. If the federate receiving the order owns it, it would look at an included Federate ID Record (not yet defined) to see who it should push it to.  If it was not the owner, it would look in the federate ID Record to see who it should pull it from. In either case the federate could reply to the order with a comply or unable to comply.  If it said it would comply, then it would initiate the appropriate transfer request.    3.0	Transfer Control For Game Players		It may be desirable to transfer an entity from a high-fidelity commercial game to a military simulation application and vice versa.  This was not analyzed or discussed in detail by the group but is something to consider, especially in support of asymmetrical warfare training.  The U.S. navy has already processed an entity from a commercial game, in this case an aircraft, by a military simulation and the latter has also sent its entity into the game world so they can interact with each other.  This was done using Microsoft DirectPlay API calls.4.0	Air Platform Capability Record1.	Discussion.  The Transfer Control Study Group decided that there was not enough experience or research to propose and vote on a detailed Air Platform Capability Record at this time.  It is expected that there will be a need for such a record, as well as, those for surface, land and other domain missions in the future.  The information presented here may assist in that future effort as a starting point of things to consider.  Also, the list of parameters could form the foundation for a Standard Transfer Control Questionnaire to be used during exercise planning to determine compatible federates to transfer entities to that would preserve the necessary level of fidelity.2.	Description.  The Air Platform Capability Record is used to indicate the required capabilities associated for a transfer transaction when the entity is an air platform.  For a Push Transfer, it represents the minimum capabilities that the present owner expects the new owner to meet in order to maintain an adequate level of fidelity when it assumes ownership of the entity.  The Record ID = 500020.For a Pull Transfer, it represents the capabilities of the originating application that wants to assume ownership of someone else’s entity.  This allows the present owner to have information to assist in deciding whether the originator of the transfer request has sufficient capabilities to maintain the necessary level of fidelity once it assumes ownership of the entity. A separate Capability Record ID number will be assigned for each platform type. The Air Platform capability Record shall contain the following fields: a)	Entity Type.  This field shall identify the entity type.  This field shall be represented by an Entity Type record (see 5.2.16 of this standard, and Section 4 of EBV-DOC).b)	Required capabilities.  This field shall indicate required capabilities.  For a Push transfer, it shall indicate the capabilities required of the receiving federate.  For a Pull Transfer, it shall indicate the capabilities of the originator of the Pull request. c)	Required ES Appearance.  This field shall indicate the Required Entity State Appearance fields that must be maintained.  d).	Required ES Capability.  This field shall indicate the Required Entity State Capability fields that must be maintained.  e).	Required IFF.  This field shall indicate the Required IFF capabilities that must be maintained.  f).	Required Emissions.   This field shall indicate the Required Emissions capabilities that must be maintained.  The format of the Air Platform Capability Record shall be as shown in Table G-1.  Table G-1 – Air Platform Capability Record.  Field size (bits)Field Names and Units64Entity Type64-bit enumeration32Required Capabilities32-bit Boolean32Required ES Appearance32-bit Boolean32Required ES Capabilities32-bit Boolean16Required IFF 16-bit Boolean16Required Emissions 16-bit BooleanTotal  Air Platform Capability Record size = 192 bits3.	Enumerations3.1	Entity Type.   As defined in the EBV-DOC.3.2	Required Capabilities.   See Table G-2.3.4	Required ES Appearance.    One bit for each ES Appearance field.  To be provided.3.5	Required ES Capabilities.   One bit for each ES Capability field.  To be provided3.6	Required IFF.  One bit for each relevant IFF PDU field.  To be provided3.7	Required Emissions.  One bit for each relevant Emissions PDU field.  To be providedTable G-2 - Required capabilities FieldSee the Legend following this table.ParameterField ValueComments0-Not Used1-Entity Type0 = No1 = YesA Yes indicates the entity type specified in the Entity Type field of the Capability Record must be maintained without mapping it to another entity type.2-Alternate Entity Type0 = No1 = YesA Yes indicates the Alternate Entity Type field must be maintained that is presently being transmitted in the Entity State PDU by the present owner.3- Voice Radio Capable0 = No1 = YesA Yes indicates the entity has or requires a voice radio capability, either via an operator or voice software.4- Data Link Capable0 = No1 = YesA Yes indicates the entity has or requires data link capabilities.  This must be coordinated between the two federates prior to the exercise.5-Weapons Capable0 = No1 = YesA Yes indicates the entity has or requires the weapons capabilities indicated in the Weapons Record.    If Yes, a Weapons Record must be included in this TCR PDU.6 -Fuel Capable0 = No1 = YesA Yes indicates the entity must have a fuel model that decrements fuel based on engine performance and can continue the fuel parameters indicated in the Fuel Record. . If Yes, a  Fuel Record must be included in this TCR PDU.7- IFF Capable0 = No1 = YesA Yes indicates the entity must be able to set the IFF values of the IFF/ATC/NAVAID PDU as  specified in the Required IFF field of the Capability Record.8- Emissions PDU0 = No1 = YesA Yes indicates the entity must be able to set the Emissions values of the Electromagnetic Emissions PDU as  specified in the Required Emissions field of the Capability Record..9- Articulated Parts0 = No1 = YesA Yes indicates the entity must be able to set and change the Articulated Parts values being transmitted in the Entity State PDU for this entity by the present owner.10- Human Controllable0 = No1 = YesA Yes indicates the entity must be flown as a virtual or a constructive where an operator can control the entity and interact with other entities and C4ISR units.11- ES Appearance Maintained0 = No1 = YesA Yes indicates the entity must be able to set all values for the appearance bits specified in the ES Appearance record.12- ES Capability Maintained0 = No1 = YesA Yes indicates the entity must be able to set all values for the appearance bits specified in the ES Capability record.13-Articulated Parts0 = No1 = YesA Yes indicates the entity must be able to maintain all the articulated parts associated with the present Entity State PDU for this entity. 14-Aircraft Takeoff/Landing	Capable0 = No1 = YesA Yes indicates the capability to takeoff and land the entity from an airfield, ground location or ship.15-Invincibility0 = No1 = YesA Yes indicates the entity must not be able to be destroyed.  A No indicates the must be able to be destroyed.16-Entity Active after BDA0 = No1 = YesA Yes indicates the entity must remain active in the exercise regardless of the Damage Status value in the Appearance field for the entity.17-Formation Capable0 = No1 = YesA Yes indicates the entity must have the capability to join up with and split from a formation.18-Weapons Reload Capable0 = No1 = YesA Yes indicates the entity must have the capability to have its weapons reloaded during the exercise while remaining in the exercise.19-Refuel Capable0 = No1 = YesA Yes indicates the entity is able to be refueled either via manual operator action or automatic program action.20-Perceived Situation  Awareness0 = No1 = YesA Yes indicates the entity must have a perceived situation capability such that it does not have access to all truth data beyond what it would normally be able to detect visually or via on-board sensors or could receive via a data link from other sources. 21--Detonation Capable0 = No1 = YesA Yes indicates the entity has the capability to process a locally generated detonation or a remote Detonation PDU to determine damage or destruction.22-Engagement Model0 = No1 = YesA Yes indicates the entity has available to it an engagement model that will allow it to engage appropriate targets for which it has applicable weapons.23- Terrain Avoidance0 = No1 = YesA Yes indicates the entity must have the capability to avoid terrain either via automatic terrain avoidance logic or through displays to an operator who is controlling the entity.24-Countermeasures0 = No1 = YesA Yes indicates the entity must have the capability to manually or automatically initiate countermeasures applicable to the type platform and tactical situation. As a minimum, this includes processing the Fire PDU and Emissions PDU to determine if the entity is the target of an engagement and to react accordingly.25-31 Not UsedLegend		No 	If a Push Transfer, indicates this capability is not required.			If a Pull Transfer, indicates that the originator of the request does not have this capability.		Yes 	If a Push Transfer, indicates this capability is required.		If a Pull Transfer, indicates that the originator of the request has this capability.5.0	Air Mission Record1.	Discussion.   The Transfer Control Study Group decided that there was not enough experience or research to propose and vote on a detailed Air Mission Record at this time.  It is expected that there will be a need for such a record, as well as, those for surface, land and other domain missions in the future.  The information presented here may assist in that future effort as a starting point of things to consider.  Also, the list of parameters could form the foundation for a Standard Transfer Control Questionnaire to be used during exercise planning to determine compatible federates to transfer entities to that would preserve the necessary level of fidelity.2	Description.  Air Mission information for an entity being transferred shall be communicated using the Air Mission Record.     The Record ID = 500021.The Air Mission Record shall contain the following fields: a)	Mission Number.  This field shall indicate the mission number associated with this aircraft. It shall be an octal number in the range 0001-7770. A zero value indicates no mission number assigned.  It shall be represented by a 16-bit unsigned integer.b)	Call Sign Type.  This field shall indicate the type of call sign.  It shall be represented by an 8-bit enumeration..c)	Call Sign.  This field shall identify the Call Sign using alphanumeric characters.  Unused characters shall be set to a null value.d)	Assigned Mission.  This field shall identify the assigned mission.  It shall be represented by an 8-bit enumeration.e)	Current Mission.  This field shall identify the current mission.  It shall be represented by an 8-bit enumeration.f)	Flight Leader Entity ID.  This field shall indicate if the aircraft is part of a formation. If the aircraft is not part of a formation, this field shall be set to zero. If it is a flight member, the Flight Leader Entity ID will be contained in this field.  If the aircraft is the flight leader itself, this field will contain the Entity ID of the aircraft being transferred.  This field shall be represented by an Entity ID Record as specified in para 5.2.14 of IEEE 1278.1-1995.)g)	Target Entity ID.  This field shall identify a target entity, if any, as follows: the target entity of an engagement, the entity to join-up with (e.g., a tanker aircraft or another flight), the Return To entity 9such as home base), a CAP station entity, a navigation point, or some other entity toward which the aircraft is flying. If there is no associated target, this field shall be set to zero.  It shall be represented by an Entity ID Record as specified in para 5.2.14 of IEEE 1278.1-1995.)h)	Return To Entity ID.  This field shall indicate the entity that this aircraft will return to at the completion of its mission.  This will either be the home base (or home aircraft carrier) or an alternate landing location that is represented by an entity.   This field shall be represented by an Entity ID Record as specified in para 5.2.14 of IEEE 1278.1-1995.) h)	Return To Entity ID.  This field shall indicate the entity that this aircraft will return to at the completion of its mission.  This will either be the home base (or home aircraft carrier) or an alternate landing location that is represented by an entity.   This field shall be represented by an Entity ID Record as specified in para 5.2.14 of IEEE 1278.1-1995.)i)	Data Link Type.  This field shall indicate the data link type for non-C2 aircraft. If the aircraft is not data link equipped, this field shall be set to zero.   j)	Data Link Status.  This field shall indicate the status of the data link.  If the aircraft is not data link equipped, this field shall be set to zero.   k)	JU Number.  This field shall indicate the JTIDS Unit number assigned to this aircraft.  If the aircraft is not data link equipped, this field shall be set to zero.The format of the Air Mission Record shall be as shown in Table G-3.  Table G-3– Air Mission RecordField size (bits)Field Names and Units16Mission Number16-bit unsigned integer8Assigned Mission8-bit enumeration8Current Mission8-bit enumeration48Flight Leader Entity ID48-bit unsigned integer48Target Entity ID48-bit unsigned integer48Return To Entity ID48-bit unsigned integer8Data Link Type8-bit enumeration8Data Link Status8-bit enumeration24JU Number24-bit unsigned integer8Padding8-bits unusedTotal  Air Mission Record size = 224 bits3.	Enumerations.  All enumerations are new.3.1	Assigned Mission.	0 =	Other	1 =	Strike	2 =	Battlefield Reconnaissance	3 =	AEW	4 =	EW	5 =	SEAD	6 = 	CSAR	7 =	Medevac	8 =	CAS	9 =	Defensive Counter Air (DCA)	10 = 	Offensive Counter-Air (OCA)	11 =	Airlift	12 =	Counter-Insurgency (COIN)	13 =	Interdiction	14 =	Anti-Shipping (Maritime)	15=	ASW	16 =	Special Mission	17 =	PSYWAR	18 =	Assault3.2	Current Mission.	0 =	Other	1 =	RTB	2 =	CAP	3 =	Escort	4 =	Refuel (enroute to tanker)	5 =	Refuel (on-tanker)	6 =	On Ground (operational)	7 =	On Ground (destroyed)	8 = 	On Ship Deck	9 =	Engagement- ground target	10=	Engagement- maritime target	11=	Engagement- air target 	12=	Ingress	13=	Egress	14=	Enroute	15=	Evasive maneuver/countermeasures	16=	Gliding to ground.	17=	Out of control dive.	18 =	Join-up	3.3	Data Link Type.		0 =	No data link capability		1 =	Link-16		2 =	FDL		3 =	SADL		4 =	Link-11A		5 =	Link-4C3.4	Data Link Status.		0 =	No data link capability		1 =	On -Transmit/Receive		2 =	On - Receive Only		3 =	Off4.	Rationale and Discussion.  The Air Mission Record contains basic mission information to expedite the transfer of an aircraft on a mission.  This will assist the receiving federate’s software in performing automatic tasks and in providing feedback to operators on what mission the aircraft is intended to perform and what it is currently doing.  It does not negate the need for voice coordination.  Some virtual and constructive aircraft have a non-C2 data link capability.  Certain basic information is needed to continue the simulation of data links when an aircraft is transferred from one federate to another.  Other data link information will need to be passed via messaging or voice coordination.6.0	Capability Record1.	Discussion.  At the 5 Sep 03 telecon, the group decided that there was no need for any kind of  Capability Record as part of the revision to the transfer control function of IEEE 12781.1a..2.	Description.  The Capability Record is used to indicate the required capabilities associated for a transfer transaction when the entity.  It is intended that the record be used for a Pull Transfer.  For a Pull Transfer, it represents the capabilities of the originating application that wants to assume ownership of someone else’s entity.  This allows the present owner to have information to assist in deciding whether the originator of the transfer request has sufficient capabilities to maintain the appropriate level of fidelity once it assumes ownership of the entity. The Record ID = 500022.Appendix A contains a detailed Air Capability Record for future consideration. The Capability Record shall contain the following fields: a)	Capabilities.  This field shall indicate capabilities the capabilities of the originator of a Pull Request. The format of the Capability Record shall be as shown in Table G.4.  Table G.4–Capability Record.  Field size (bits)Field Names and Units32Capabilities32-bit BooleanTotal  Capability Record size = 32 bits6.2	Enumerations6.2.1	Required Capabilities.   See Table G.5.Table G.5 - Capabilities FieldSee the Legend following this table.ParameterField ValueComments0-Not Used0Unused bits shall be set to zero.1-Iff PDU Capable0 = No1 = YesA Yes indicates the federate is able to transmit an IFF/ATC/NAVAID PDU for this entity.2-Weapons Capable0 = No1 = YesA Yes indicates the federate is able to maintain any weapons contained in the Munition Record. 3 -Engine Fuel Capable0 = No1 = YesA Yes indicates the federate is able to maintain any fuel contained in the Engine Fuel Record. 4- Storage Fuel Capable0 = No1 = YesA Yes indicates the federate is able to maintain any fuel contained in the Storage Fuel Record.5-Call Sign Capable0 = No1 = YesA Yes indicates the federate is able to maintain the call sign contained in the Call Sign Record and will output it in the Entity State PDU markings field.6- Emissions PDU Capable0 = No1 = YesA Yes indicates the federate is able to transmit an Electromagnetic Emissions PDU for this entity.7-Expendable Capable0 = No1 = YesA Yes indicates the federate is able to maintain the expendables contained in the Expendable Record.8-31 Not Used0Unused bits shall be set to zero.7.0	Primary Entity Record1.	General.  At the 14 Oct 03 telecon, it was mentioned that there might be a need for the records associated with transfer control to also be used to support other DIS functional areas.  2.	Description.  The Primary Entity Record is used to indicate the entity to which internal state data is being referenced. The Record ID = 500030.The Primary Entity Record shall contain the following fields: a)	Primary Entity ID.  This field shall specify the primary entity ID.b)	Request/Response Indicator.  This field shall indicate if the The format of the Capability Record shall be as shown in Table G.6.  Table G.6 –Primary Entity Record.  Field size (bits)Field Names and Units48Primary Entity IDEntity Identifier Record.(IEEE 1278.1-1995, para. 5.2.14)16Padding16-bits unusedTotal  Primary Entity Record size = 64 bits3.	Enumerations   -  None4.	 Rationale and Discussions.Any other uses of the records developed for transfer control would require information on the primary entity that is associated with the records. This is the entity to which the records are referenced.  Paragraph 1.3 of this document describes a use for this record.  Since the records were originally intended for only transfer control where the primary entity is known (Transfer Entity ID), a Primary Entity ID record has not been included in those records.   There are two ways to identify a primary entity: (1) include a Primary Entity ID field in all proposed records, or (2) add a Primary Entity Record that contains the Entity ID of the entity of interest.  It is proposed that the Primary Entity Record be used.Appendix HTerms of Reference (TOR) For theSISO Study Group on: “Transfer Control”Rationale: The Transfer Control Study Group is to be formed in order to conduct an investigation on the present design of the transfer control function within the DIS and HLA standards and to establish recommendations for pursuit of the topic within the scope of the SISO, if appropriate.  Transfer control allows different simulation programs to transfer entity and attribute ownership.  There are significant problems and issues with the present standards that have led to incompatible implementations of this capability by companies and organizations. Tasks: The Study Group shall execute the following tasking:1.  Research the use of transfer control in the distribution simulation community: Make a data call for information on transfer control implementation designs and issues.Identify key stakeholders (organizations and companies).2.  Perform analysis and prepare a draft set of proposed changes to the DIS and HLA Standards that address the issues. Prepare a draft set of transfer control design guidelines based on the proposed changes to the standards. 3.	Identify and evaluate prospective significance of the topic to the scope of the SISO and the interests of its members, addressing particularly the implications of transfer control for modeling and simulation.Products:Products resulting from the establishment and execution of the Study Group shall include:Interim Progress Reports to Euro-SIW and Fall SIW.2.	Table of Contents for Final Report (Due Fall 2003)3.	Final Report of Study Group (Due Spring 2004), including:Description of current transfer control implementations by various companies and organizations.Description and analysis of transfer control issues and proposed alternative solutions.Recommendation for changes to standards and guidance documentation to address transfer control issues and ensure interoperability within the distributed simulation community.  Recommendation to the SISO on the topic, and (if appropriate) an accompanying Program Plan (Due Spring 2004).Performance Period:The Study Group shall formally begin work at the Spring 2003 Simulation Interoperability Workshop (SIW).  The Study Group shall submit an interim report at the Fall 2003 SIW. The Study Group shall complete work and submit a final report to the EXCOM, SAC and CC by the Spring 2004 SIW.   The Study group requests a one year operational tenure, since this activity involves a data call to the community (including development of the data call format and needs).This page left BlankSISO Transfer Control Study Group	Final Study ReportPAGE   SISO Transfer Control Study Group	Final Study Report  PAGE iv  PAGE 2 A- PAGE 24 C- PAGE 16 D- PAGE 2 E- PAGE 12 F- PAGE 8 G- PAGE 4 H- PAGE 2Push-AcquirePush-DivestStart Automatic Response Timer if Set Record-RPDU is expected.oror5. Record-R PDUNOTESNumbers match sequence numbers.1.  A Push Request is initiated.2. Optional: The TCR PDU will be followed by one or more Set Record-R PDUs when all internal state data does not fit in the TCR PDU.3. Optional: Only required if the AF is in the manual mode. Indicates final acknowledgement is awaiting manual operator action.4. Optional: If a Not Able To Comply is sent the transfer is cancelled.5. Optional: One or more Record-R PDUs may be sent.  If sent, they are not required to be processed by DF.6. The transfer is completed when the AF publishes the entity for the first time.7. The Event Report PDU is sent to indicate the new owner of the entity.1. Transfer Control Request PDU (Push)2. Set Record-R PDU3. Acknowledge-R PDU (Pend. Opr. Act )4. Acknowledge-R PDU (Able/Not able)6. Initial Entity State PDU5. Record-R PDU7. Event Report PDUAcquiringFederate (AF)DivestingFederate (DF)AAAMAMAStart Manual Response TimerStart Automatic Response Timer if no Set Record-RPDU is sent.AMAAStart Automatic Response TimerAAcquiringFederate (AF)DivestingFederate (DF)Pull-DivestPull-AcquireNOTES match sequence numbers.1.  A Pull Request is initiated.2. Optional: Only required if the DF is in the manual mode. Indicates final acknowledgement is awaiting manual operator action.3.  If a Not Able To Comply is sent the transfer is cancelled.4.  One or more Set Record-R PDU will be sent with internal state data or indicating the absence of data. 5. Optional: One or more Record-R PDUs may be sent.  If sent, they are not required to be processed by DF.6. The transfer is completed when the AF publishes the entity for the first time.7. The Event Report PDU is sent to indicate the new owner of the entity.1. Transfer Control Request PDU (Push)2. Acknowledge-R PDU (Pending)A3. Acknowledge-R PDU (Able or Not able)MA4. Set Record-R PDUMA6. Initial Entity State PDU7. Event Report PDUStart Automatic Response TimerAStart Manual Response TimerM