Single Integrated Air Picture E-2C HWIL Federation--A JDEP PilotJayne E. TalbotVirtual Technologies Corporation5510 Cherokee AvenueAlexandria, VA703.33.6231Mary RockVeridian Engineering22309 Exploration DrLexington Park, MD 20653The Single Integrated Air Picture-Systems Engineer (SIAP-SE) is concerned with providing a consistent and clear tactical picture through Link 16 to its participant systems, E-2C, Aegis, Patriot, and AWACS, among them.  In so doing, they have identified twelve significant issues contributing to the lack of a Single Integrated Air Picture (SIAP).  To resolve these issues the SIAP- SE is constructing a series of federations using constituent Hardware-in-the-Loop (HWIL) facilities.  The Joint Distributed Engineering Plant (JDEP) technical framework serves as the basis for these federations by bringing together, in a reusable manner, existing, commercial-off-the-shelf (COTS) and newly developed tools to create a supporting analysis environment to study SIAP issues.  The SIAP-SE's first federation, the E-2C HWIL pilot event, was successfully executed in early November 2002 at the E-2C Systems Test and Evaluation Laboratory (ESTEL), located at NAWC-AD, Naval Air Station (NAS) Patuxent River, MD. The purpose of the experiment was to study two of the SIAP-SE's Link 16 issues, Data Registration (DR) and Time Synchronization (TS).  By evaluating the E-2C's Mission Computer’s (MC) sensitivity to induced geodetic navigation position and sensor registration biases, one can measure the ability to calculate DR corrections and maintain TS and thus understand the contribution and effects of the E-2C's MC on the SIAP.  Through the High Level Architecture (HLA), the MC was stimulated by a high fidelity radar simulation and generated local internal tracks. "Perfect" remote tracks were fed to the MC through an emulation of the Link 16 terminal and network using SPAWAR's Gateway Terminal Emulator (GTE) and the COTS Dual Link System (DLS), a DIS  application serving as a utility Link 16 player federate. The SIAP-SE's Common Reference Scenario (CRS) supplied the ground truth positional data to the federation through an HLA interface and the JDEP reference FOM served as the starting point for the federation's FOM.  The post data analysis, currently underway, will determine the affects the induced biases have on the ability of the MC to correlate its local tracks to the remote tracks as well as gauge the affects of the data registration algorithms in the MC and the ability to maintain TS.This paper will describe the resulting federation designed to examine these SIAP issues.  It will include a description of the federation development, integration and testing process and an assessment of the tools used in the federation, both SIAP-SE and JDEP-provided.  The paper will conclude with lessons learned during this pilot phase and suggest modifications to the process and resulting federation as the SIAP continues with its HWIL-based federation approach to analysis.OverviewThe Single Integrated Air Picture-System Engineer (SIAP-SE) mission is to increase warfighting performance by ensuring that all participating systems produce and maintain a single integrated air picture (SIAP).  SIAP-SE has identified twelve critical issues contributing to the lack of an operationally effective SIAP.  To investigate these issues, SIAP-SE uses a variety of methods and data sources including live test events, hardware/software/operator-in-the-loop (HWIL/SWIL/OITL) events, and ‘digital’ models and simulations analyses, Ref. [1].   SIAP-SE’s analysis approach includes the use of a standard set of performance attributes and metrics, a common reference scenario (CRS) and the application of a standard technical framework, the Joint Distributed Engineering Plant (JDEP).  The use of common tools, such as attributes, metrics and the CRS, helps to ensure consistency with SIAP-SE events and analyses.  It is anticipated that with the application of JDEP, maximum reuse and reduced development time will be achieved in SIAP-SE events.  This paper describes a SIAP-SE pilot HWIL test event, designed to characterize the contributions of the system under test (SUT) to the creation of a SIAP while making use of the common SIAP-SE tools and the JDEP technical framework.  This paper documents some of the lessons learned in the development of the federation to meet the SIAP-SE’s needs.JDEP is intended to provide users with technical expertise to identify and access existing HWIL/SWIL and simulation capabilities across DoD and industry in order to build distributed simulations to meet users requirements, Ref. [2]. The JDEP technical framework is standards-based relying on the DoD standard for simulation interoperability, the High Level Architecture (HLA) NG v1.3, as the basis for federation development.  However it does not preclude the use of other methods for simulation interoperability.   JDEP offers a reference FOM from which simulation and HWIL interfaces are designed.  JDEP also provides guidance for developing the federation to ensure user needs are met and reuse of the components is considered.SIAP-SE Analysis ApproachSIAP-SE intends to use the data from this HWIL event in several ways. First, the test results will support SIAP problem analysis, SIAP block upgrades, and eventually new system development assessments.   Information on the contribution of the SUT to the SIAP will be used in conjunction with comparable data on other systems to support an assessment of the relative magnitude of different factors on SIAP performance.  Secondly, the data from this test will be used in a subsequent event with a simulated representation of E-2C, to validate the simulation-based results against results of HWIL analysis.   Lastly, as a pilot JDEP federation, SIAP-SE will use their experiences in this event as the basis for a routine approach for conducting federation-based events in support of other SIAP analysis objectives.  Lessons learned in applying the JDEP framework will be fed back into the process to improve it.This test event focused on Data Registration (DR) and Time Synchronization (TS) which are among the twelve issues that have been identified by SIAP-SE as significant impediments to the production of a SIAP.  The test, conducted using the Navy’s E-2C Systems Test and Evaluation Laboratory’s (ESTEL) E-2C HWIL, collected data on these two issues.  Error biases in geodetic position of the E-2C and sensor biases of the E-2C radar were systematically introduced into the navigation model and the radar simulation, respectively, so that effects on the mission computer’s ability to conduct DR and maintain TR over Link 16 could be measured.   A set of standard attributes, metrics and tools, developed and maintained by SIAP-SE, served as the basis for the post analysis.  Qualities, such as clarity, completeness, continuity, and kinematic accuracy, are examples of some of the standard attributes.  They are calculated using a set of metrics collected, in this case, from the test event data.   The Performance Evaluation Tool (PET) is a SIAP-SE analysis tool which includes the sanctioned algorithms for calculating SIAP attributes based on the SIAP metrics collected in live test events or HWIL events.  It was used to automate the attribute calculations for the event.  It is SIAP-SE’s goal to collect the complete set of SIAP attributes for each Link 16 participant system through test events such as these and this event was the first step in collecting such information.Federation OverviewThe E-2C mission computer (MC) served as the system to be characterized or SUT.  The supporting federation included a scenario driver of red and blue aircraft, the E-2C radar simulation/stimulation suite, an IFF response server for blue aircraft, and a simulated Link 16 participant.  The E-2C was represented by the Group II (C) variant, commonly known as the Hawkeye 2000 and was located in the ESTEL.  The E-2C front-end simulation suite included representation of the APS-145 radar and inertial navigation system.  These were modified to add the capability to insert translation and rotation biases into the sensor and platform navigation models.  The scenario driver provided positional information on blue and red aircraft at a 1 Hertz rate based on a 30-minute vignette from the SIAP-SE’s CRS.  The vignette was selected based on test requirements and E-2C detection and track capabilities and limitations.  The Link 16 participant, known as the utility player federate, provided blue force precise position location indicator (PPLI) data and remote tracks over a simulated Link 16 terminal and network as though it were a network participant.  A second Link 16 terminal emulator provided the PPLI and track data to the E-2C MC so that it could conduct automatic local-to-remote track correlation.   The Link 16 host terminal and network emulation was done using SPAWAR gateway terminal emulators (GTEs).  No degradation in the network was modeled.  Figure 1 provides a simple graphical depiction of the federation. SHAPE  \* MERGEFORMAT Figure 1.  E-2C HWIL Federation DescriptionFederation Development ProcessThe federation development process was modeled on the IEEE-standard seven-step Federation Development and Execution Process (FEDEP) shown in Figure 2.  The FEDEP, by design, is a general purpose process.  It was a valuable starting point but required tailoring to ensure that the proper participants were involved in the appropriate steps.   SHAPE  \* MERGEFORMAT Figure 2.  Federation Development and Execution Process (FEDEP)Considerable effort was spent in the early stages of the FEDEP (Steps 1 and 2) to refine the objectives and federation requirements so that federation development could begin.   At this time, there was full participation from all involved to sort out the details about the problem definition and this proved challenging.  Adjustments in the process were made and it is believed that structuring the federation development process into two nearly sequential processes would help to target the correct participants towards to proper goals in The first of the two sequential process focuses on the development and depiction of the user problem domain into successively more detailed structured descriptions.  The second process translates the detailed user problem depiction into the key elements of the federation design.  Figure 3 describes the overlay of these two sequential processes onto the FEDEP.  The two overlays will be described in further detail below. SHAPE  \* MERGEFORMAT Figure 3.  Overlay to FEDEPThe TeamThe technical team was comprised of individuals with various roles and responsibilities from many different organizations.  SIAP-SE, owner of the analysis problem, was the user. SIAP domain experts and analysts who understood the SIAP issues, attributes and systems were critical members of the team throughout the entire FEDEP process. Also included on the team throughout the process were the SUT domain experts and analysts.  It is important to distinguish these two types of domain experts.  The SIAP domain experts have knowledge of the SIAP vision, objectives and issues but may not have an understanding of the technical details of the SUT.  The SUT domain experts have understanding of how the SUT operates and its mission but not necessarily on its contribution or effects on SIAP.    The team included individuals with federation development expertise whose responsibilities include leading the federation development process and application of the JDEP framework.  Other members of the team include those responsible for the SIAP CRS.Depicting User Problem SpaceThe first overlay process describes the iteration that goes on between FEDEP Steps 1, 2, and 3.  As the user, the SIAP-SE was a major participant in this process.  This phase also required active participation of the SIAP and system domain experts and analysts because its successful conclusion was dependent on a common understanding of the problem area, an agreement on the substantive issues to be addressed in the test, and  requirements for selection of the representations to meet the needs of the test.  Individuals responsible for developing the federation were also players in this phase.  It was ultimately their responsibility to ensure a common understanding was shared among the participants prior to starting federation construction.This iterative process took considerable time to reach a common understanding on the team. It became clear that the objectives, as stated by SIAP-SE, meant different things to the participants and required the addition of detail to bring a common understanding to the issues and test requirements.  To help in this process, a comprehensive presentation was prepared by the federation developer to capture the collective understanding of a first level description, referred to herein as a Level 1 depiction.  This was done simply using annotated pictures for each major sequence or thread in the scenario.   Three threads for this event were identified, E-2C local track formation, sharing of Link 16 track data, and reporting of Link 16 PPLI data.   An example of the Level 1 depiction for the sharing of Link 16 track data is shown in Figure 4.  Discussion centering on the Level 1 depiction led to a clarification on the participant system requirements, the sequential ordering of interactions between objects, and scenario requirements.  These depictions were refined until all agreed on a Level 1 depiction for each thread and represented a common understanding of what was required for the analysis. EMBED MSPhotoEd.3  Figure 4. Level 1 Depiction Documenting the sharing of Link 16 track dataThe next step was to add detail such as identifying object interaction sequences, critical scenario requirements, and data collection requirements.  Of particular importance in this test because of its first application, was the credibility of the CRS scenario and its appropriateness as a context for the analysis.  Issues such as, “Does it provide sufficient quantity and realistic positions of friendly and enemy forces?” were raised and evaluated at this time.   Simulation requirements began to evolve and questions such as “Does IFF need to be modeled?” and “What messages must be exchanged over the simulated Link 16 network?” were raised.  Federate requirements began to take shape and discussion on potential federate and federation options took place.  The level of pre-verification and pre-validation required was also discussed during this phase.  While no decisions were made as to the federates or federation, the pros and cons of various options were discussed. This evolution of was captured in a series of Level 2 depictions, one for each thread.  An example of a series of Level 2 depictions is shown in Figures 5 though 7.   Figure 5 evolves directly from figure 4 and describes the types of interactions between simulated objects in the scenario. While they might map directly to federates, that was not a constraint.  It is an attempt to make sure that the critical interactions in the scenario are exposed.   Figure 6 is a first step to identify information exchange requirements.  It is not a diagram of potential federates rather it acknowledges the type of data that needs to be shared to meet the test objectives.  In this case, it shows who needs to have an access to scenario ground truth and who needs to have access to Link 16 data.Between Figures 6 and 7 there were actually a series of depictions that are not shown here.  The discussion surrounding Figure 7 led to a list of options for data exchange, requirements for individual federates and a verification of the methods for the introduction of biases into the E-2C. This series of diagrams were presented and reviewed by the team.  They were refined and updated and what is shown here is the result of the iteration.  It was agreed that the final versions of these charts constituted a common understanding of the objectives and requirements such that federation systems engineering could commence.    EMBED MSPhotoEd.3  Figure 5. Level 2 Depiction:  Sequence Diagram for the sharing of Link 16 track data EMBED MSPhotoEd.3  Figure 6. Level 2 Depiction:  Data Exchange requirements EMBED MSPhotoEd.3  Figure 7. Level 2 Depiction:  Mapping Sequence and data exchange diagrams to logical FederatesFederation Systems EngineeringIt is with a collective understanding of the requirements that the federation design process began.  The federation developers working with the system domain experts had the responsibility to take the event objectives and analysis needs and design a federation to collect the data to support the analysis.  The participation of the user during this phase was not as evident unless the need for clarification on objectives or questions arose and it was important to return to the Depict User Problem Overlay Process to resolve.  During this step, the federation object model (FOM) was defined, the federation agreements made and decisions on which federates to use, which to develop from scratch and which to modify were made.  The federation FOM used as its starting point, the JDEP reference FOM.  The reference FOM is a JDEP tool in which FOMs from existing programs, each focused toward systems engineering or system interoperability, were merged with the hope of bringing the best practices from these programs together.  The reference FOM was modified to meet the needs of the federation initially by the federation developer.  It was then review and iterated to reach a workable FOM.  Attempts were made to avoid FOM development by a large group therefore a small group including the federate interface developers was employed.  The intent in this FOM development process was to bring FOM development expertise to bear on the FOM design choices.  While no issues concerning the data collected during the event surfaced, improvements to the FOM to aid in interface development and maintenance were identified and are provided in the later sections of this paper.In this federation, the aircraft positional data, or ground truth data, was predominate  shared using HLA’s Run Time Infrastructure (RTI).  A few initialization data messages and a small number of federate status and control messages were also passed through the RTI.  No Link 16 messages were passed through the RTI; they were exchanged between SPAWAR’s Gateway Terminal Emulators (GTE) using the Standard Interface for Multiple Platform Link Evaluation (SIMPLE) protocol.In addition to specifying the FOM, agreements on how information would exchanged were made.  The following are the set of federation agreements that evolved during this phase. It should be noted many of the agreements changed once integration began.  It is believed that this is the result of the short timelines and lack of testing for federates prior to the integration testing.  While this is not recommended, it is sometimes necessary to insure a working federation. The coordinate system is WGS-84.  Positional updates for the aircrafts were published in an Earth Centered Earth Fixed (ECEF) formatAll attributes for the Platform class must be updated at the same time so that the timestamp value is valid for all the updates.  For example, one can not update velocity in one time step and then orientation in the next.  All must be updated each time step.  Time Representation:Each object class and interaction class has an attribute/parameter named TimeStamp that will carry the value that corresponds with the time the object update or interaction values are valid.  Each simulation must provide the TimeStamp value with each object update and each interaction that is sent.TimeStamp is represented as a long (32 bit integral value).  Units for TimeStamp are milliseconds.Epoch is Midnight of the previous day so that the starting value of 0 refers to first millisecond of the current day.Each federate must use the received time value with each reflected object and received interaction for processing of the state as appropriate. This includes the need to perform dead-reckoning on values where calculation of physical interactions between entities and/or the environment is appropriate.Time Synchonization:The ESTEL facility will employ Network Time Protocol (NTP) to synchronize the system clocks of each machine or where timing is critical timecard with validated time sources will be used.Radar Cross-section data will be simulated using lookup tables implemented in E-2C radar model.Initial conditions for E-2C position will be published by the driver in an interaction.Management of the federation such as federation start and stop were implemented with a set of interactions in the FOM.RTI1.3NGv6 was used. Standard RTI Initialization Data (RID) file was used.Data Marshalling:All FOM data elements will be encoded using eXternal Data Representation (XDR) standard prior to being sent to the federation and must decode the XDR represented data elements prior to processing their values.With the federate selections, draft FOM, and draft federation agreements in place, federate developers proceeded to develop federates using their own software practices.  It was the goal to have developers come to the integration testing  event with completed and tested federates.  Development and test was not completed prior to the integration and testing. Because of the dependency on the CRS and the common reference scenario driver (CRSD) and the degree of parallel development, several federates were not pre-tested. Three weeks of integration testing were planned prior to the schedule test event.  The integration testing was extended several days to complete integration tasking.  An integration plan was written and published to organize the pair-wise testing that eventually led to a federation-wide test.  Considerable effort was expended in the early integration testing to verify and validate the CRS data itself.  Because it had not been used in this type of event before, considerable effort was taken to ensure it was as promoted.  The same was true of the CRSD and Identification Friend or Foe (IFF) Response Server.  They were carefully verified in the early phases of the integration testing to ensure that the ground truth data to the federation was correct.It should be noted that the radar simulation that served as the front end to the E-2C MC, was validated prior to being used in this event. A separate validation plan was developed and implemented where the simulation was compared with live data.  Its limitation and capabilities were determined before it was decided that this event would be conducted.  The radar simulation, once integrated into the federation, was re-validated against what had been validated originally.The integration testing included a series of dry runs where data for baselines runs were collected. This included not only federation dry runs but analysis dry runs as well.  This was critical for not until the analysis process was tested could one declare the federation ready for testing.After the successful completion of the integration testing and dry runs, a Test Readiness Review (TRR) was conducted by SIAP-SE to certify that the federation was ready for testing.  The test was conducted in accordance with the published test plan and data management plan, products of the SIAP-SE. HLA Federation and ComponentsThe JDEP premise was to develop as little as possible and when development was required, to do so in a manner so that the tools can be reused in future SIAP-SE federations.   Where possible, COTS products were employed.E-2C RepresentationThe E-2C representation included the Hawkeye 2000 tactical bench, radar and IFF simulation suite (RISS), and an HLA gateway to interface to the RTI.  The bench has been used in this configuration in other distributed simulation events using HLA and Distributed Interactive Simulation (DIS). The Tactical Driver (TD) included a flight model, rotodome model, navigational model and simplistic IFF model.  It provided the RISS with antenna azimuth target reports and other control information so that RISS could develop radar reports and radar video for the operator’s display.  Azimuth biases were applied to IFF reports in the TD and azimuth, range rate and range biases were applied to the radar reports via the RISS.  The geodetic navigation position offsets were applied in the TD. These biases represent translational and rotational biases for the E-2C position. Tactical messages such as radar and IFF reports are the output of the tactical driver via the Tactical System Interface Unit (TSIU) to the mission computer.  With this information, the mission computer formulated local tracks.   Figure 8 is a description of the E-2C tactical bench and radar simulation. SHAPE  \* MERGEFORMAT  Figure 8: E-2C RepresentationThe E-2C receives initialization data for its world position and flight path characteristics from the CRS through the driver so that its position can be calculated in the TD and reflected in the RISS.  The TD also provides this E-2C own-ship positional data to the HLA gateway for publication to the rest of the federation. The E-2C federate subscribes to the position updates for all the aircraft in the federation. E-2C subscribes to IFF data over the RTI and receives IFF responses of Mode 1, 2, 3, 4 and C for each blue player in the federation as well as publishing an IFF response for all its own modes.  From the simulated Link-16 network, simulated by SPAWAR’s Gateway Terminal Emulator (GTE), the E-2C received PPLI messages.  Eight PPLIs were required to support E-2C’s data registration requirements.  The PPLI messages included IFF information on blue players that was consistent with IFF responses received from the IFF Response server over the RTI. Through the GTE, the E-2C also received remote tracks from the utility player via Link-16.  The remote tracks were artificially set with track qualities (TQ) of 14, otherwise perfect. With this data, the E-2C performed local-to-remote track correlation.  As errors were introduced into the RISS to reflect translational and rotational biases, the ability of the E-2C to correlate with perfect tracks was expected to degrade.  It is this effect that the experiment measured.Common Reference Scenario Driver The CRSD was responsible for publishing the scenario to the federation using high resolution files, called HIRES, provided by the Joint National Integration Center (JNIC).   The HIRES contain platform types, side, tail numbers, world location, velocity, and orientation as a function of time.  The driver also supplied initialization data to the E-2C federate to set it flight profile and initial world location.  The E-2C then updated their own position on the RTI.  The driver was designed to strictly maintain the update rates in the CRS data so as not to introduce errors into the aircraft positional data.   For this test, JNIC provided updates on aircraft at 1 Hertz.  The driver uses time provided through a valid external source to publish the data at the desired rate, in this case 1 Hertz. The timing source for the computer that CRSD uses is very critical.  As the source of the ground truth, it can not induce errors, whether they are due to the time source or the internal algorithms.  Because of early decisions about the CRS in the User Problem Depiction process, the data was provided in an earth-centered inertial reference system.  Once federation development started, it became clear that all consumers of the ground truth positional data (E-2C and Utility Link 16 Player) required earth-centered earth fixed reference system.  The CRSD was modified to make the reference system conversions rather than to have each subscribing federate make the conversion.  This added processing load to the CRSD and careful testing was required to ensure that CRSD maintained the timing in the data.  Performance was a concern early in CRSD development but did not prove to be an issue.IFF Response ServerThe IFF Response Server was a simple federate that subscribed to blue platform updates and published IFF modes in response. It did not implement a true interrogation/response interaction nor did it simulate energy transmission through the atmosphere. Its purpose was to provide the critical information required by the E-2C MC so that it could formulate local tracks.  During the federation initialization sequence, the E-2C HLA Gateway would request from the server IFF modes for blue aircraft in the scenario (for which data is available).  The frequency of the server’s response is set dynamically by the E-2C federate during federation initialization in a request interaction.  The data for the IFF codes was provided by the E-2C team and included all modes. The IFF Response Server was developed on the same code base as the CRSD making many modifications to this tool, such as FOM changes, simple. Utility Link 16 PlayerThe utility Link 16 player represents a Link 16 participant on the network communicating with E-2C.  It is made up of three components.  The Dual Link System (DLS), a COTS product by Northrop Grumman served is the central component, providing the Link 16 participant to whom E-2C communicates. Minor modifications were made to the DLS to support the requirements of this federation.  The DLS is a DIS application and communicated to the RTI through an HLA/DIS gateway, the second component of the utility Link 16 player.Through the HLA/DIS gateway, the DLS subscribed to the aircraft position updates and the IFF responses from the blue players in the federation and published corresponding PPLI and track messages over the Link 16 network using a SPAWAR GTE, the third component of the utility Link 16 player. To allow for the isolation of effects of the biases to the E-2C data, the following parameters of Link 16 data were agreed upon.  Both the PPLI and the track messages contained perfect positional information. The DLS assigned the highest quality to its track messages; a value of 14 is used.  The ID field in the track messages were set to be “unknown, evaluated” such that no identification information was used in the transmission.   This set the stage for E-2C to correlate its local tracks with perfect remote tracks receive through Link 16. Test Control FederateThe Test Control Federate (TCF) served as a management federate.  It provided simple control and status features to the federation.   It provides the ability to create and destroy the federation as well as to issue Start and Stop scenario commands.  It featured an ability to display the status of those federates who chose to implement the status interactions and objects.  Observations and Lessons LearnedThe next section identifies many of the lessons learned that were collected after the test event was conducted.  These lessons learned focused on the common tools that SIAP-SE is pursuing as well as the lessons learned on the application of the FEDEP process.  The value of the tools and the process are important if SIAP-SE is to continue to approach analysis in this method. FEDEP ProcessTwo process overlays on the FEDEP process was presented in the body of this paper as a means for describing what is believed to be a tailored FEDEP process for the SIAP-SE.  This process was arrived at based on the composition of the team assembled and the need to focus resources toward the correct FEDEP steps.  A more structure process to bring together the different technical knowledge bases and perspectives was required to gain the necessary detail in the early FEDEP steps to move forward with federation development with confidence.  A method for capturing this information was shown and similar methods will be used to systematically capture and discuss the analysis objectives and federation requirements.Some specific comments on federation development follow.FOM DevelopmentThis was the first application of the JDEP reference FOM and it was adapted for this federation using new process.   No significant issues arose as a result of the FOM and the extensions of the reference FOM were straight forward.   The only significant issue was the method used for identifying platform types within the FOM needed improvement.  As it was implemented, it is not very maintainable as platform types change or are added. The current implementation could led to tedious coding and maintenance of HLA interfaces.  It is recommended that this be changed in the future to be more flexible to change and easier to describe to developers.It is believed that the FOM development process could be improved for it was not yet mature.  It is believed that the federate and federation development would benefit from additional formality.  The team should remain as small as possible and should include HLA and simulation/stimulation interface expertise.  The starting point for this process should be the finalized federation objectives, metrics, the data analysis plan, the reference FOM, and a simulation stimulation questionnaire.  The purpose of the questionnaire is to determine the differences between the starting FOM and tactical system federation interface, referred to as a Simulation Object Model (SOM).  This is intended to assist in the development of new HLA interfaces.  The process should include a limited number of face-to-face exchanges to explain the starting reference FOM and agree to the changes.  Face-to-face exchanges allow for detailed technical discussion on the ramifications of FOM decisions.  Once baseline FOM is in place, a process for managing changes to the FOM should be defined so that there is a plan in place to manage changes.  It is the hope that the baseline FOM changes as little as possible but the reality is that it may have to. It is noted that the reference FOM has evolved as a result of our experiences and will be implementing a configuration management process that will provide for a new version of the reference FOM on a yearly basis.  Changes to the existing E-2C HWIL FOM are also envisioned as a result of this experience in areas such as object class and interaction class hierarchy, and the use of complex data types to ensure certain attributes are is delivered together.It was suggested that an Interface Design Specification (IDS) be developed to provide essential documentation.  The ICD would extend the FOM to include further definition of interfaces between federates and include all the federation agreements in a formal document.  Simulation Environment: Federation Agreements The team produced an initial set of agreements that provided guidance to the HLA interface developers during the federation development process. Many of the agreements changed over the course of the integration period.  While some refinement is to be expected, there were significant changes made during the integration which indicates that considerable software was being changed during integration. It is believed that this is due in part to the short time lines and the pilot nature of the project.    It is also recommended that the federation agreements be clearly documented in a single document.  It should be managed digitally so that all may access it and changes can be managed so that all who are affected can have input.Use of XDR proved to be an excellent method to insure interoperability across federation by relying on a standard data encoding scheme.  It is recommended that an XDR implementation be distributed to all developers rather than using multiple implementations and having to verify all implementations.  There are several implementations commercially and publicly available. It is noted that better documentation and a full implementation is required for future events.   Integration and Verification TestingAn Integration Test Plan was developed to plan piece-wise integration during the three week event.  The plan was extensive in calling for the verification of CRS, CRSD, and IFF Response Server and less rigorous in the detail for the remaining components.  The importance of the ground truth in the federation was addressed with an extensive examination of these components. It is anticipated that if these components are reused in the future, they will not have to undergo such testing.  It may be that with the focus on these, other components did not get as detailed of a check out.  The utility Link 16 player is one component that requires more extensive verification as compared with ground truth.During the integration event, dry runs of both the federation and the analysis were conducted. It is believed that more time was required to complete the integration due to the pilot nature of the event.  Common ToolsThe following are comments on the common tools that are targeted for potential reuse in upcoming SIAP-SE events.SPAWAR Gateway Terminal EmulatorsThe Gateway terminal emulators posed a problem during integration because assumptions were made as to the features it emulates.  Although it was known that the GTE did not simulate relative navigation, it was not determined until the integration event that it did not implement key messages to enable the E-2C to conduct DR.  Without the triggering message, the test of E2C’s ability to conduct DR with biases could not be conducted.  In consultation with SIAP-SE, the objectives of the test were altered to collect correlation date without the application of the DR functions in E2C.  By the end of the test, a fix was procured for the GTE to send the message.  The fix was verified and a small number of test cases were run. It was later determined that this change in objectives may have been a blessing for the analysis associated with the assessment of correlation without DR was simpler and its understanding critical to operation with DR.The lesson learned here was for the federation development team to not take for granted the operation of any element in the federation.  Also, the need to have experts on call for the critical elements is imperative.  This had the potential to disrupt the test event but fortunately the fallback position enabled valuable data to be collected and analyzed.  The need to start simply was reinforced by this potential mistake.Utility Link 16 PlayerThe DLS met the needs as a utility Link 16 player.  Any technical issues discovered during the integration test were address satisfactorily and did not impact the test event. There remain some issues that affect usability which need addressing prior to its use in future events.  These include the need to provide the user with the ability to pre-define attributes (PPLI, TQ) for all ground truth without resulting in Link 16 traffic prior to scenario start and a work around for the “warping” of tracks to the test area once scenario starts.  Several repeatable and small anomalies were not explained and did not affect the test results but caused concern.  This included the need to understand how platform category conflicts are handled in DLS. There were no issues associated with the usability of the tool.CRSThe test event was successfully completed using a 30 minute vignette from the CRS as the scenario.  It proved to be flexible enabling the excursions to be tailored to meet integration and verification process needs.  It is believed that with modifications, the CRS excursion would present an operationally representative picture.  Some of the noted representational issues discovered during testing include the fact that E-2C’s location was not operationally valid and its operational ground speed and turn rate were different from a deployed E-2C.  Aircraft were too close to the E-2C and, in some cases, red aircraft were flying directly above the E-2C.  Lastly, there were many examples of aircraft “running in blinds” or operating such that they were blind to the E-2C’s radar.  While this effect was valid, it added variability to the detection process for the APS-145 radar that introduced issues with post analysis.  In all these cases, if the results of these differences were not well understood, they may have affected the test results adversely.  In this case, they did not.There were some issues identified early in the  CRS assessment where E-2C analysts were hampered by the inability to verify that the selected excursion met test needs.  It was further slowed by the lack of visualization tools for the CRS.  Without interactive tools to view the time history of the CRS, the scenario validation was difficult.   Recommendations were made to SIAP-SE and the E-2C system experts to document scenario requirements so that one can measure the applicability of the excursion to the experiment and system.    The full CRS proved to be a difficult scenario to conduct engineering tests and integrate the federation. It contained too many aircraft.  It was difficult to understand the simulation output because it was too complicated.  It is suggested that the CRS be part of a set of scenarios where standard simple excursions would enable specific analysis and thereby lend confidence that the federation is operating as designed.  One would move to the more complex excursions to examine performance in a common operational environment provided by the CRS.   CRSDThe CRSD maintained the desired update rate of 1 Hertz for the aircraft positional information.  No noted latencies were attributed to the performance of the CRSD.  It provided conversions from the Earth Centered Inertial (ECI) to the ECEF reference system required by federates.  The tool was robust and performed the scenario basic driver functions however, it did not implement federation management interactions and status objects fully.  It will be enhanced as the requirements evolve.   The operation of the driver proved to be simple and it was transferred quickly to ESTEL staff so that they could run it as needed.TCFTCF was used primarily to start and stop federation.  Its federate monitoring features were not rigorously tested because only the E-2C gateway federate was fully integrated with the TCF.  It is the recommendation as the federation moves forward that all federate need to fully integrate with the TCF to realize its monitoring benefits and assess its utility.Federation PerformanceFederation performance was not examined extensively nor was it an issue.  It is believed that the scale of the excursion and the 1 Hz update rate did not push the performance envelope. In anticipation of performance issues, two additional versions of CRSD were designed and implemented however they were not tested for their use was not required. It is the recommendation of the test team, that the Test Plan include a performance data analysis and collection plan to address federation performance in the future.  As the federations change to handle more stressing environments, it is critical to design for performance.  It is believed that all participants have responsibilities for performance (federate developers, Infrastructure manager, FOM developer…)The plan should call for engineering experiments using network monitoring tools to build up a set of benchmarks for the JDEP federations. Moving ForwardThe federated-HWIL Test event using the E-2C HWIL tactical bench, radar simulation proved to be successful.  The hypothesis that TS is not an issue was affirmed, settling some internal disagreements.  Data curves demonstrating the affects of geodetic and sensor biases on correlation were generated and will be the starting point for continual investigation.  Fixes for the GTE were made and a set of runs completed however the complete set of biases were not used.  While the full characterization of E-2C’s ability to perform DR as a function of input biases could not be realized, it is believed that the fall back position, characterizing the correlation/decorrelation is a useful data set.  Some analysts felt that an understanding of the correlation/decorrelation prior to the DR process is required to understand the more complex DR process. The test event was successful for data for analysis was collected and the analysis is underway.  While this event was a pilot event for the common tools such as CRS and the JDEP framework, it did not hinder the analysis goals.  Overlays on the FEDEP process were developed in efforts to tailor the FEDEP to meet SIAP-SE goals. References:Single Integrated Air Picture, System Engineering Task Force Analysis:   People, Tools, and Processes; CDR Joseph N. Giaquinto, USN and Mr. Jon Barto; Single Integrated Air Picture System Engineering Task Force; 1931 Jefferson Davis Hwy; Arlington, VA  22246; 703-602-6441.Dahmann, Judith S. and Clarke, Richard. “Joint Distributed Engineering Plant Technical Framework: Applying Industry Standards to System-of-System Federations for Interoperability,” Simulation Interoperability Workshop, September 2002.Theater Air and Missile Defense Capstone Requirements Document (TAMD CRD). (2001, March).  U.S. Joint Forces Command.Combat Identification Capstone Requirements Document (CID CRD). (2001) U.S. Joint Forces Command.SIAP SE TF Technical Report 2001-001: Single Integrated Air Picture (SIAP) Attributes. (2001, June).  Arlington, VA: SIAP SE TF.SIAP SE TF Technical Report 2001-003: Single Integrated Air Picture (SIAP) Metrics Implementation.  (2001, October).  Arlington, VA: SIAP SE TF. SIAP Standard Data Management and Analysis Plan, Version 1.1 (2002, July). Arlington, VA: SIAP SE TF.SIAP Common Reference Scenario Technical Report, Version 1.1 (2002, July). Arlington, VA: SIAP SE TF.Target PositionTarget IFFSim ManagementE-2C PositionIFF ResponseDX1553/J-MessagesE-2C GTEHLADXRadar video and triggerAntenna synchroRadar/IFF Simulation System(RISS)E2C Position/IFF Interrogation/E-2C IFF ResponseControl andStatus dataTarget data (TDIP)Antenna azimuthTarget dataControl msgsSimulated CP->DP msgsRadar RptsRadar RptsIFF RptsNav RptsGPS TimeNav RptsRadar RptsNav RptsGPS TimeMission ComputerandDisplay System(MC/ACIS)Tactical SystemInterface Unit(TSIU)E-2C Tactical Driver(E2CTD)E-2C HLA GWRTIScenarioDriver(CRS)UtilityPlayerE-2CHWILSimStim(RISS)SPAWARLink16 GTE123IFFResponseServer4     Utilities:1:    Test Control2:    Logger3/4:  2D/3D Viewers