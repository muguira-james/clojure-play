Information Warfare In A Synthetic EnvironmentA Case HistoryPatrick GetchellARINC Engineering Services, LLC2551 Riva RoadAnnapolis, MD 21401(407) 381-1114pgetchel@arinc.comKeywords:Information Operations, communications network modelingAbstract:  This paper will document an ongoing effort to improve the realism of the communications environment within a distributed synthetic battlespace with the goal of providing a more robust experience for the training audience. Military strategic and tactical planning has had a dramatic shift over the last 10 years into the realm of information technologies and our objective is to provide an environment that will support the ‘Train as we Fight’ construct.  Our project began in 1998 and had its first debut performance during Joint Expeditionary Force Experiment 2000 / Millennium Challenge 2000. We now have over 8 years of development and employment of the Information Warfare Effects Generator and the Dynamic Communications Environment. The paper will describe what this suite of tools does, how it has been used in nearly twenty large-scale distributed exercises and experiments, and some of its yet untapped capabilities.1.0 Purpose of the ProjectARINC was tasked in 1996 by a USAF customer to engage the exercise community to increase the fidelity of training at the Air Operations Center (AOC) level on the tasking, planning, execution, and assessment of certain offensive Information Operations (IO) missions and weapons. Our tasking had two primary objectives. First, we had to define and incorporate the effects of weapon systems into the behaviors of the Opposing Force (OPFOR) models. This was accomplished through a coordinated and cooperative effort with the exercise planners and OPFOR controllers. Second, we needed to provide appropriate feedback to the player cells, the majority of which was to be in the form of Signals Intelligence. This was again accomplished through a coordinated and cooperative effort with the controllers in the intelligence production cells. During the first few Blue Flag exercises, we evaluated the simulation architecture to determine if a semi-automated function could be established that would aid in the tedious manual processes necessary to effectively represent the effects of weapon systems on the synthetic environment. We determined that the core modeling capability needed was a common dynamic communications network model that portrayed ground truth to interoperate with the OPFOR simulations and the sensor simulations. Our goal  was to provide a comprehensive representation of communications ground truth such that the effects of kinetic and non-kinetic attack (node and link disable) could be played out as realistically as possible. It also had to be modeled at a detailed enough level to allow for the analysis of multi-tier effects and unintended effects.  Although it was intended for this model to interoperate with sensor simulations, the network model would contain whatever communications systems might comprise the OPFOR environment regardless of whether they would be observable by any sensor.  The key elements we needed to capture in this project were: 1) Develop a means to manage and maintain a ground truth view of the communications infrastructure of OPFOR; 2) Develop a means to convert the non-exploitable communications events being generated by some models into realistic Transmitter and Signal Protocol Data Units (PDUs) for exploitation by sensor simulations; and 3) Develop a means for Information Operations controllers to affect the communications environment without the need to operate in a highly classified environment. The following describes the system that was subsequently developed to address this functionality.  2.0 Capability OverviewDevelopment of the Dynamic Communications Environment (DCE) and Information Warfare Effects Generator (IWEG) was begun in 1999.  The fundamental element of the system is the network model within DCE. It was developed to represent communications links and nodes and also to capture network behaviors common to modern commercial communications systems in a manner capable of adapting as technology evolves.  Populating the network model adequately for an exercise is critical to the task.  For a given exercise, the network model is developed from the training requirements, the exercise MIDB (Modernized Integrated Database), and is coordinated with the MSEL (Master Scenario Event List) planning staff to insure that all necessary communication links and nodes are adequately represented to meet the training needs. This forms the basis for the Ground Truth communications networks for the exercise or experiment. As a part of the ground truth they are observable, exploitable, and vulnerable.Communications nodes are typically either contained in a fixed facility whose state/health is maintained by simulation that computes the bomb damage or are associated with an object being represented by another model using the Entity State PDU. In some cases the IWEG/DCE system is required to represent the node entirely, (such as a microwave relay tower) in which case we would publish the Entity State PDU. When a communications node is associated with a moving object, the DCE will track the location updates of the entity, move the node accordingly and evaluate the link state based on the location updates.The various types of communications equipment used in an exercise are separate elements associated with a node. They can be instantiated as ‘children’ of a physical node. As children of parent nodes, equipment can therefore be transferred from node to node, as when carried by an individual from one place to another. While many equipment types are fixed within a facility, our database schema to associate equipment as children of parent nodes is consistent, and provides us the modeling flexibility necessary to represent more complex types of communications and relationships. For example, a cell phone can be associated as a child node of a person, while the person can be associated as a child node of a building. When the person leaves the building, he can take with him the cell phone or leave it there, changing the relationship of the cell phone.  Likewise, when a person is a child of a building, he has access to all the communications equipment within that building. Entire networks can also be children of a facility.  DCE was specifically designed to accommodate and model these types of relationships. Changing the relationships is not always a fully automated function and sometimes requires manual interaction with the database based on the details of the MSELs for the exercise. Most OPFOR models we have worked with in the current distributed exercise community define links only between people, units or facilities (logical links). The DCE also uses logical links, but also defines the network of links between pieces of communications equipment. The transmission characteristics of the links are determined by the equipment. By creating links between individual pieces of equipment, we are able to more realistically characterize a communications network and provide more responsive and detailed interactions for the information operations personnel and intelligence simulations. This process also allows for a more flexible model and the ability to create networks more quickly. This process also allows the user to create and model complex networks accurately. For example: Player A uses a cell phone to send a text message to Player B’s email account. Player B receives the email on his laptop through the wireless connection available at the library. This is a very simple and commonplace event today, however modeling the physical interactions is very complex.  It is necessary to model at the physical level in order to accurately represent vulnerabilities and signatures. The process of populating the database begins by establishing all of the entities involved.  Typical elements included are:Players A and B, and expected locationsBuildings, bridges 	Communications related facilities, telecommunication equipment (switches, routers)Cell phone infrastructurePublic switched telephone network (PSTN) infrastructure and protocols of interestInternet Wide Area Network, Local Area Network and Wireless NetworkInternet service provider and serversEmail service provider and serversLaptop with wireless capabilitySATCOM services and infrastructureThe next step is to define the linkages, whether RF, cable, or fiber, into a logical, realistic network. Finally, a message is generated from Player A with intended recipient of Player B. The message is transmitted from a node, say a cell phone to the appropriate tower, causing the Transmitter and Signal PDU combination to be generated and propagated into the simulation environment. The path, or route, that has been established between Player A and Player B contains many different link types and equipment types. At any point along the route, the message being sent could be intercepted and exploited. When a link in the path contains an RF segment, the proper Transmitter and Signal PDUs are generated, providing sensor simulations with the proper stimulus to intercept and exploit the message being sent.One of our goals in developing this system was to provide information operations specialists a realistic network to interact with; a network that is responsive to changes in the battlespace and one that provides the necessary feedback loop indicating the level of success from an IO attack. Battle damage data is imported from an external model and analyzed manually to determine the ability of a node to communicate. Nodes that are unable to communicate are set to “down” by the analyst.   If a logical link in an external model is effected by the change in status of a link or node, IWEG communicates that to them.  Sometimes, a node is the same as an object being modeled by another simulation with an Entity State PDU. When the ES PDU indicates the entity is dead, the system automatically sets the node to “down”. Finally, controllers have the capability to manually alter the states of links and nodes within the network based on the offensive IO plan developed by the players. This is done either directly through the DCE GUI or via a web interface.  Since the IWEG/DCE system shows only the current state of the network, links and nodes can be set to UP or DOWN by the control staff with no attribution as to how, why, or by whom the action occurred. However, when the network changes and routing is altered based on the IO plan, the intercept and exploitation also changes; the intelligence reporting changes; the player analysis changes; all resulting in positive feedback to the players.  3.0 How We Have IntegratedThe preceding diagram shows how the IWEG/DCE is typically integrated into an exercise architecture.  This is a generic representation but includes some key elements, particularly when operating in a mult-level security environment.The models on the left represent the main combat models in the exercise. Some examples are the Air Warfare Simulation (AWSIM), the Distributed Information Warfare Constructive Environment (DICE), and the Joint Conflict and Tactical Simulation (JCATS). Radiant Mercury (RM) is a multi-level security mechanism developed by SPAWAR. To support this integration, a rule set was developed that allows properly formatted Distributed Interactive Simulation (DIS) PDUs to flow through the RM guard, blocking all other traffic. While all DIS PDUs are allowed to flow from the low side to the high side, only a select few PDUs are allowed to pass the other direction.On the high side in this example are the IWEG/DCE, providing access through a web server to the control cell, and both local and remote sensor models. The sensor models, whether constructive or virtual (man-in-the-loop), are the vital link between the simulation environment and the player audience.  When a sensor model is not available, the IWEG/DCE web pages can be used to provide the network state and communications activity to intelligence scripters.   The combat models move and shoot and cause damage to the communications network nodes. The IWEG/DCE tracks this damage, altering the networks appropriately. The IWEG/DCE, in addition to determining the flow of simulated communications through the network, also generates communications events based on how the control staff has developed the scenario. Information Operations controllers inject effects of their campaign plan using their web access to the DCE database, further altering the communications networks. Sensor models detect, intercept and exploit communications and generate the appropriate reporting. Intelligence scripters can also view the network state and activity and generate reporting.  The player audience uses these reports to evaluate the current conditions in the battlespace and to assess mission effectiveness. What is shown in the diagram is the ground truth of the exercise. What the players use is the perception of that ground truth based on the ability of the sensor model to detect and exploit the environment.4.0 ArchitectureIWEG/DCE essentially has two primary components: DCE which contains the master network model, and IWEG which contains the MSEL injection capability and the DIS interface.  The system is largely JAVA based so is platform independent.  However, the SCI accredited version operates with Solaris.  The IWEG/DCE system is currently run on two mid-range Solaris machines. One machine hosts the DCE and a web-server. The second machine hosts the IWEG, the DIS interface, and a MSEL injector. They are connected through CORBA channels. 4.1 DCEThe DCE is the key element of our system and contains the core Network Model used in the exercise or experiment. 4.1.1 DatabaseA relational database provides the foundation of the Network Model. Data entry begins with the exercise MIDB. The MIDB data is imported in digital form once the exercise staff has processed and prepared it for the exercise. From that basic data, communications specialists can begin the process of laying out the Network Model. MIDB forms the base layer of the database. Any number of layers can be established and the layers are interconnected and interdependent. Layers usually define different classes of communications elements. For example, physical facilities and the cables or radio links might be on one layer. Another layer may be defined for cellular phone, another for email communications, etc. Communications nodes are identified and the appropriate equipment is installed. The nodes are then connected by various types of links, defined by the type of equipment they are being connected to. Notice that the communications network is developed independently from the individual players who will be using the network. Next, the users or players are identified and placed at different facilities within the gamespace. These users have access to the communications equipment installed at their facility, as well as any that they may carry with them. Now the operator determines, based on the MSELs and in coordination with the Exercise Staff, the key players and who each will be communicating with. These are called the Logical Links. (For example: Player A will be in communication during the exercise with Players B, C, and D. Player B will be in communication with Players A, C, F and G. And so on.) Finally, routes are calculated through the network based on the logical links and stored in the database. The routing is done with an optimal path graph algorithms with the ability to weight types of elements or individual elements in the network.  Most routes between two specific players will have primary and alternate routes predefined in the scenario. As changes in the dynamic environment alter the status of physical nodes that are part of a designated communications route, the route is automatically changed to a secondary or tertiary route as long as one is available. When no route between two players is available, based on the ground truth status of the communications network, the two players are considered unable to communicate.4.1.2 VisualizationIn order for the operator to see into the database, a set of mapping tools and GUIs are provided. Using the mapping tools, the operator can view the entire network, layer by layer. As shown in the example below, a single connection between two players may have dramatically different representations when viewed at different layers. Other map tools provide the ability to overlay many common map data files, such as CADRG maps and CIB imagery. 4.1.3 Operator InteractionsThe database GUIs and drop down menus on the map displays provide the operator the ability to manually change the functional status of Links and Nodes. The IWEG station was intended to be the point of inject for IO effects, although links and nodes can be taken up and down from the DCE station and from the web interface as well.  Using these tools the operator can also change the equipment a Player is currently using, move a Player from one Node to another, or modify the attributes of any link or node. Attributes may include location, equipment type, parent/child relationship, links to other nodes, etc.The operator also monitors the status of the health of communications related facility and associated desired mean points of impact (DMPIs) to keep the state of the network in synchronization with the bomb damage.  This is discussed further in section 5.2,  4.1.4 Automated Database UpdatesThere are cases where the database is automatically updated by events taking place elsewhere in the simulation. When the communication node is a mobile unit, its location is updated automatically as movement is detected in its Entity State PDU. When the “Destroyed” bit is detected in the ES PDU, the node status is also automatically changed. 4.2 IWEG4.2.1 Simulation InterfaceWe use a commercially available DIS interface package. To date, we have not yet implemented a High Level Architecture (HLA) interface. The interface is configured to monitor Entity State, Transmitter, Emissions, and Signal PDUs. In most exercises, a filter is defined to receive ES PDUs only from specified Site/App identifiers and sometimes additional filtering will look for an Entity Markings field for acceptable PDUs.Most of the transmitters contained in the Network Model are not represented by any other simulation in the exercise, as they are tied to fixed facilities or are antenna towers placed during the development of the Network Model. Therefore, our interface is also configured to send Entity State PDUs in addition to the Transmitter and Signal PDUs necessary to generate exploitable communications.4.2.2 MSEL InjectorAs early as Millennium Challenge 2002, we discovered a need to generate text messages representing communications taking place between players to supplement those being generated by OPFOR simulations. The initial tool has been expanded and has proven to be extremely useful to the intelligence community. It has evolved and is now both a GUI-based tool on the IWEG as well as a web-based tool that other controllers can access and use to input scripted conversations. These conversations are derived from the training requirements for the exercise or experiment and are crafted to implement specific MSELs. Conversations are made up of individual transmissions from one player to another, and are either time sequenced or can be manually “fired”.When the time arrives for a message to be sent, the proper Transmitter and Signal PDU sequences are sent from each individual RF-based transmitter along the entire path of the communications route. 4.3 Web ServicesA variety of functions have been made available to a wider set of participants by using web services. Each controller has a unique login, password, and set of capabilities that is maintained by the system administrator. Web services include: adding, deleting, or modifying links and nodes; changing the state of links and nodes; or moving players from node to node. The web services can also be used to: create a new conversation for the MSEL injector or to edit an existing conversation.One of the most used web services simply allows controllers who are not co-located with the system to view the current status of links, nodes and routes. This capability is most often used to evaluate the network to determine if a particular MSEL event could or should be reported and passed to the player audience. By evaluating the network prior to generating a report, intelligence reporting is synchronized with player actions and activities, maintaining coherency in the exercise.5.0 Runtime Operations (The ins and outs)5.1 PDU GenerationThe system generates Entity State, Transmitter, Signal, and IO Detonate PDUs under a variety of conditions. These conditions are described below.The IWEG/DCE generates a heartbeat Entity State PDU for each transmitter contained in its database. Because DCE represents the entire physical infrastructure underlying communications, it allows for communications to emanate from all sites that transmit into the environment which can include such intermediate sites as repeaters, cell towers, etc.The IWEG/DCE generates a heartbeat Transmitter PDU for each transmitter contained in its database (Tx On, Not Transmitting).When the DCE determines that a change in the network state has eliminated the ability of two players to communicate (e.g., the Logical Link has no available Physical Link to use), the IWEG will issue an IO Detonate to the appropriate simulation indicating this change of state.When the DCE determines that a change in the network state has restored the ability of two players to communicate, the IWEG will issue an IO Detonate to the appropriate simulation indicating this change of state.Communications events fired by the MSEL injector will generate a Transmitter PDU linked to the appropriate Entity State PDU for each transmitting node along the event path. These PDUs include transition PDUs indicating change of state: Tx On, Not Transmitting; Tx On, Transmitting; Tx Off; Tx On, Not Transmitting.Communications events fired by the MSEL injector will also generate one or more Signal PDUs containing the communications content.Incoming communications events fired by other simulations very often are being sent between “logical” nodes rather than physical nodes and are therefore not mapped to any physical infrastructure. The IWEG/DCE can be used to map the logical nodes to their physical counterparts and to create physical paths between the nodes for effective communications modeling. When a remote simulation generates a communication event using entities that have been mapped into the DCE database, the proper Transmitter and Signal PDU sequences will be generated for each segment of the physical path. Sensor simulations will receive both the remote simulation PDUs and those from IWEG/DCE. It is in the pre-event agreements developed during the planning phase that tell each sensor simulation which PDUs to use for reporting, usually determined by a filter on Site/Application of the sending simulation.Most models and simulations that generate high fidelity representations of communications, do so using a logical link between the communicating elements. A select few models actually rely on the ability of the elements to receive instructions over the logical link and the receipt (or non-receipt) of instructions will determine behavior. Since one of the primary goals of Information Operations is to influence the opponent’s behavior, these models are good candidates to support the IO training mission. One model with this attribute is DICE, managed through the Air Force Information Warfare Center in San Antonio, Texas. Over the past few years, a process has been developed by which the IWEG/DCE can track and monitor the communications capability of DICE elements. The DICE communications that take place in the logical link are mapped in the DCE to their physical counterparts. The physical communications are converted into Transmitter and Signal PDUs and are broadcast onto the LAN for other simulations to act upon. In tracking the status of the physical network, the IWEG/DCE is able to determine when a DICE Logical Link has been severed (the primary and all alternate communications paths are not functional due to lethal and/or non-lethal effects). When this condition exists, the IWEG/DCE will issue a specialized PDU to DICE including the Logical Link ID, and the changed status of that link. The PDU used is a modified Detonate PDU. We call it an IO Detonate PDU. The IO Detonate PDU is used to inform DICE that a Logical Link has a change in status. It may be disabled (such as when the jamming begins), or reactivated (when the jamming ends). Another way that the IWEG/DCE has been used is to modify the attributes of transmitters that other simulations are using during an exercise. During most exercises over the last several years, the IWEG/DCE has been operating at a higher classification level than the vast majority of the exercise. As such, additional or more detailed attribute information is available. In cases where higher fidelity data is desired in the Transmitter PDU, the IWEG/DCE will receive the PDUs from the low-side, modify the attributes, and rebroadcast the PDUs on the high-side. 5.2 Battle Damage AssessmentGround truth battle damage assessment (BDA) is a vital input for the IWEG/DCE system during an exercise. The IWEG/DCE requires near-real-time information on the physical damage inflicted upon the physical infrastructure in order to maintain a proper ground-truth model of the communications networks. As the physical infrastructure changes during the course of events in the exercise, a communications analyst reviews the ground truth BDA inputs to determine if a particular facility has lost or regained any or all of its ability to function as a communication node.For example, a facility may be an airfield. The airfield has many elements that the BDA model monitors for damage. These can include runways, revetments, fuel tanks and aircraft. It may also include the control tower, command and control center, comm center, microwave antenna masts, and even the telephone switching center that provides access from the base to the public switches.If the damage inflicted to the airfield is limited to the runways and aircraft, it may be deemed destroyed from the perspective of being a dangerous military threat, yet the ability of that facility to communicate or pass-through communications between other units has not been hindered. Likewise, if the comm center, antenna masts, and telephone switching center have been heavily damaged, its ability to communicate is lost though it still is a military threat.Therefore, the status maintained in the DCE database, describing a facility as UP or DOWN, must be understood as only relating to the ability of that facility tocommunicate with other units and has no direct correlation to the overall health of other aspects of the facility.The analyst will evaluate what has been reported damaged by the BDA model and make a determination for each facility. If the analyst determines the facility has lost its communications, he or she will set the facility to DOWN in the database using the GUI. This launches a series of background processes that try to reroute any communications that used that node in their routing. In some cases, communications between other units that are totally unrelated to the damaged unit are lost, simply because the only viable route they had passed through it. In other cases, communications paths are effectively rerouted and communications are maintained.BDA data is periodically imported in a batch download. We are evaluating the ability to fully automate this process using DIS standard PDUs that could pass directly over the DIS LAN, providing ground-truth BDA in real time to the DCE.5.3 Mobile UnitsThe IWEG/DCE has also been used to manage the communications between mobile units, and between mobile and stationary units. These radio communications have specific ranges and when the range between units exceeds the capability of the radio, the link is severed.   For cell phones, the communication is assumed to relay to the nearest cellular tower.  In order to effectively manage this process, the DIS interface is loaded with a list of entities to be tracked that is mapped to communication nodes in the DCE database. The list can be either the specific Entity ID or, since some simulations do not know in advance what the Entity ID will be for a particular vehicle, it can be derived from a specific tag loaded into the Marking Text field of the Entity State PDU. As the entity moves about the battlespace, its location data is automatically mapped to the DCE node location. Communication links between that object and other nodes are altered as it moves, and when it becomes apparent to the operator that the range values are excessive, he or she will disable the link using the GUI or a drop-down menu on the map display.An additional feature of our database structure allows us to change parent/child relationships between objects or nodes in our database. Using this feature, we can take a Person node, containing a cell phone or other portable communication device, and transfer him from his current parent node at his office and place him in the vehicle node in the parking lot. Another model will provide the movement of the vehicle and the IWEG/DCE will track his movement and his communications through the network based on the location of the vehicle. When he reaches his destination, we then re-parent him to the new location which automatically gives him access to the communications capabilities contained in that facility. This is a manual process to change the parent/child relationships that is MSEL driven. However, a well drafted scenario with detailed events can provide the training audience with a highly effective training event.5.4 MSEL InjectorThe MSEL injector was developed in order to provide the training audience with a realistic intelligence view of the battlespace. The common way to generate intelligence reporting was simply to draft messages and send them to the player audience based on a specified timeline in the MSEL process. While this is still necessary for much of the player stimulation, it sometimes caused confusion in the training audience when a report was generated, presumably based on a communications intercept, from a unit which the players had successfully destroyed earlier in their campaign. Here’s an example. The MSEL sequence for this event describes the following.0900: Unit A preparing to move from its garrison location.0930: Unit A begins its deployment to field location B, where they are to test their radar.1030: Unit A turns on its radar and tests for 3 minutes1040: Unit A moves to field location C to support advancing troops.Using the MSEL injector, communications events would be written to support this event rather than simply writing a generic report describing the entire sequence. The following is an example of these communications.0900:00 HQ to Unit A: Ready your unit for deployment.0900:10 Unit A to HQ: Roger sir.0928:00 Unit A to HQ: Sir, preparations are complete.0928:10 HQ to Unit A: Roger. Deploy to field location B and test your systems. Report when tests are complete.0928:20 Unit A to HQ: Roger Sir.// At 0930, the model responsible for Unit A begins its movement to field location B. At 1030 the unit arrives at its new coordinates and turns on its radar. The radar runs for three minutes and turns off.1035:00 Unit A to HQ: Sir, we have completed tests and all systems are operational. Any further orders?1035:10 HQ to Unit A: Good. Your orders are to deploy to field location C and provide support for Charlie Company’s advance.1035:20 Unit A to HQ: Roger Sir. Unit A out.// At 1040, the model responsible for Unit A begins its movement to field location C. Upon arrival at the location, Unit A again activates its systems.In this example, each of the communications between Unit A and the HQ were pre-scripted in the MSEL injector. At the appropriate time, the event fired. When an event is created in the MSEL injector, it is linked to a specific set of physical transmitters and links. These transmitters and links have attributes that are loaded into the Transmitter PDU. The text of the conversation is loaded into the Signal PDU and linked properly to the Transmitter PDU. It is possible for the routing to include multiple RF hops along the path from HQ to Unit A. When this happens, each segment of the path is transmitted sequentially, with the proper transmitter attributes for that segment, creating the necessary Transmitter and Signal PDU sequences for each segment. Each segment is independently exploitable by sensor models.Each segment is also vulnerable. Should any link or node of this route be disabled, either by jamming or physical damage, the communication will not continue down the remainder of the path. Models that are equipped to handle it will receive an administrative message from the IWEG/DCE informing it that the communications capability between HQ and Unit A has been severed. The proper response by that model might be to leave Unit A sitting at field location B awaiting orders from HQ. A controller must communicate with the OPFOR model controller for cases in which models are not equipped to handle this automatically.5.5 Controller ActionsWhile much of the functionality of the IWEG/DCE is automated, controller interaction is still required to maintain continuity with the exercise MSELs and to perform actions that cannot yet be fully automated. There is a very limited set of models that generate explicit communications between entities, and an even smaller set that rely on those communications for their behavior. Controllers play a vital role in the creation of proper behaviors that are consistent with the effects the players should expect to observe based on their IO campaign. An additional factor involves the very nature of IO and the fact that much of the techniques cannot be demonstrated in most exercise environments. However, in many cases we have been able to successfully represent the net effects of these techniques without divulging any of the techniques, simply by disabling the links or nodes or even specific pieces of equipment within a node.Here are a few examples. Suppose there is a requirement in the initial stage of the conflict to force the opponent from non-exploitable landline to exploitable microwave in order to provide greater intelligence collection and place the opponent in a more vulnerable state. The player staffs the target list and determines that bombing a particular bridge would not only restrict the opponents movement, but would also have the effect of taking out the fiber optic cable running under that bridge, forcing the HQ unit onto microwave. The ATO flies and the bombs drop. The ground truth BDA indicates that the bridge was destroyed and that information is fed to the DCE controller. The DCE controller disables that link, causing an automatic reroute of HQ communications onto its alternate microwave system. Now the communications events generated by the MSEL injector from the HQ unit are exploitable along the microwave routes. Sensor simulations begin reporting on the intercepts, providing the player audience with the necessary and timely stimulus they were expecting.Suppose now that there is a requirement to isolate the HQ unit from its upper echelon. The player staffs the target list and determines that it has the ability to disable the computerized switching center contained in the microwave hub. The plan is approved by the player commander and the timing is forwarded to the control cell. At the proper time, providing all systems are still go for the IO event, the DCE controller would set the node to DOWN in the database, effectively isolating the HQ unit from its upper echelon. Communications between the HQ unit and its upper echelon are now terminated and the sensor simulations stop reporting on those activities. This provides the player audience with the necessary and timely stimulus they were expecting.6.0 SummaryThe primary goals of the project were: 1) Develop a means to manage and maintain a ground truth view of the communications infrastructure of OPFOR; 2) Develop a means to convert the non-exploitable communications events being generated by some models into realistic Transmitter and Signal PDUs for exploitation by sensor simulations; and 3) Develop a means for Information Operations specialists to affect the communications environment without the need to operate in a highly classified environment.We succeeded in each of these areas. The IWEG/DCE provides a robust ground-truth model of communications networks that is responsive to changes in the battlespace caused by lethal and non-lethal effects. Communications events from models that only represent the logical connection between players can be converted into Transmitter and Signal PDU sequences, based on the current communications network configuration, creating exploitable communication events for sensor simulations. The web interface allows the effects of highly sensitive processes to be incorporated into the exercise securely.While there were obstacles to overcome, the payoff has been tremendous for the player audiences. Recent play of IWEG/DCE coupled with sensor simulations has yielded an increase in quality of intelligence for these exercises. The intelligence products received and the near-real-time response and feedback from the execution of an IO plan have been some of the best ever experienced in a training environment. Player and mentor feedback has indicated that the products received from the simulations were virtually indistinguishable from a real-world environment.Author Biography:  PATRICK GETCHELL is a Senior Systems Analyst with ARINC Engineering Services, LLC and provides technical and operational consulting and support to a variety of Air Force and Joint elements. His area of expertise is the integration of intelligence and information operations into the virtual battlespace. Mr. Getchell was Flight Examiner rated on the Rivet Joint while deployed overseas, and a Master Instructor at Goodfellow Air Force Base where he taught intelligence collection tactics, techniques and procedures. Since leaving active duty in 1989, his work has centered around the development and deployment of advanced training systems for the intelligence and information operations communities.