A Visualization Tool for DDMDanny CohenAndreas KemkesJuergen SchulzePerceptronics, Inc.21010 Erwin StreetWoodland Hills, CA 91367818-884-7470cohen@perceptronics.com, andreas@perceptronics.com, juergen@perceptronics.com Keywords:HLA, RTI, DDM, VRML, VisualizationABSTRACT: This paper describes a Visualization Tool that graphically represents the region layout in a federation. The tool provides federation designers with visual feedback on both the DM and DDM behavior during the course of a federation execution.HLA/RTI/DDM distributes attribute values of shared objects according to both static DM filters and dynamic DDM filters. Attribute values are delivered when both the DM filter matches (by static types), and the corresponding DDM filters match (by dynamic values, when the subscription and update regions intersect).For an increasing number of regions it becomes more and more difficult to understand why certain attributes are in scope (or out of scope) at another federate. The goal of the Visualization Tool is to assist with this understanding. Like a debugger, it only helps to find irregular behavior, but does not analyze the reasons for faults.IntroductionA federation designer who plans the DDM layout of a federation with many entities needs to make quite complicated decisions on the sizes and modification rates of the DDM regions, that are associated with object attributes, or subscribed to by federates.One of the difficulties that confront the designer is the visualization of which regions move in which direction, and whether or not they overlap. Even the clearest conceptual design is better understood in its behavior when observed in a graphical display of the actual region layout.The Visualization Tool addresses this need by providing the federation designer with a means to represent the region layout of a federation in a 3D display, with arrows indicating the delivery of attribute values. The outline of this paper is as follows. In section 2, we give a description of the Visualization Tool and its features. Section 3 shows how the tool can help a federation designer solve specific issues with the DDM design. In section 4, we discuss the limitations of the initial version, and the possible extensions in later versions. Section 5 presents examples for situations in which the Visualization Tool is useful.Description of the Visualization ToolThe operation of the Visualization Tool is based on information that is intercepted whenever regions are created or modified, when attributes are associated with them, or when federates register objects or subscribe to their attributes. The Visualization Tool knows therefore both about the static filters used with the DM services, and the dynamic DDM filters. Based on the retrieved information the Visualization Tool shows all (or selected) DDM regions. When an update region intersects with a subscription region and the DM filters match, an arrow will indicate that attribute value updates will be delivered from one federate to another.The RTI distributes information on the level of the federates, rather than the objects (entities). Hence, the Visualization Tool, which retrieves its information from the interface between the federates and the RTI, knows only federate-based distribution patterns. It is, for example, unable to determine why a particular entity knows about a remote object that was detected in a subscription region of another entity.The following subsections describe how the user selects what the Visualization Tool should display, and how the displayed items should be represented.Selecting what to displayConsider a federation consisting of five federates. Each of them has ten entities; some of them are land vehicles such as jeeps and trucks, others are aircraft. All of them have position attributes, but only the trucks and the aircraft have a load attribute.Each entity is surrounded by update regions and subscription regions. To get a clear picture of the situation at hand, the user first selects what regions he is interested in, and specifies what regions and what delivery-indicator arrows should be displayed, for example:All.Only the regions of selected federates.Only the regions that are associated with, or used for subscription selected attributes (e.g. the load attribute).Only the regions that lie in a part of the routing space.Only the arrows indicating network traffic between federates of opposing forces, but not the ones indicating traffic between compatriots. Selecting how to display the regionsThe user also controls the color and texture that indicate to which federate a region belongs, and whether it is an update or a subscription region. For example, the user can specify that regions of federate 1 are blue, and the ones of federate 2 are red. Similarly, update regions can be designated with a solid surface, and subscription regions with a checker-board pattern.If the routing space has more than three dimensions, the user can specify which dimensions should be used in the graphical display.VRML representationThe Visualization Tool transforms the above information on the selected regions and arrows dynamically into VRML data, so that they can be seen in any VRML browser. This enables the user to change the viewpoint and the viewing angle, as well as to zoom into any area of the routing space he wishes to observe.Figure 1: Update and subscription regions with an indicator arrowBy selecting a displayed VRML object (that is, for example, a DDM region, or a delivery-indicator arrow) with a mouse click, the user can retrieve additional information. By clicking on an update region, the user is informed which HLA object instances are associated with it; by clicking on a subscription region, he is informed to what object class the federate subscribed with this region. A click on an arrow lets the user know what attributes are communicated along the arrow.Figure 2: Information on the attributes associated with a regionRepresentation of detection rangesReal-world detection ranges have the shape of circles, or spheres, rather than the rectangular shape of DDM subscription regions. It is left to the federate to filter out data from entities that are detected by DDM, but are still outside the detection range.The Visualization Tool enables the federation designer to also represent the actual position, and detection ranges of particular entities in the VRML world. If the detection range of an entity leaves the DDM subscription region it uses, the entity might fail to detect relevant data. Such situations can be easily diagnosed with the Visualization Tool.Since the detection ranges of sensors are in general not part of the HLA, they will only be displayed if the user provides the corresponding information to the Visualization Tool. The necessary code is however minimal, and should be inserted whenever the sensing entity moves.Figure 3: Two aircraft with their DDM regions, and sensor detection rangesSpecific issues that can be addressed with the Visualization ToolThe purpose of the Visualization Tool is to help users visualize the operation of DDM in general, and to examine for example:That there are no false exclusions by DDM.Whether there are any false inclusions by the sensors. Whether regions are properly modified (e.g., detection ranges of entities always fall entirely into their DDM subscription region.)Whether the RTI traffic is reasonable (e.g., not too many region modifications.)The following subsections will explain how the Visualization Tool can be used to address such questions.False inclusions and false exclusionsBy definition, DDM is allowed to provide false inclusions in order to prevent false exclusions. It is the job of the various sensors to avoid false inclusions by not reporting about any objects that are out of their detection range, even if DDM reported them to the sensors.A user might observe with the Visualization Tool that an update and a subscription region intersect, but that a delivery-indicator arrow is missing.Since there are no false exclusions by DDM, this means that some filter did not match, which could be either due to the DM declarations, or due to other, non-displayed dimensions used by DDM.False inclusions by sensors are observed when an entity is inside the detection circle of a sensor, but no detection indication is displayed. This indicates a fault with the way the sensing federate modifies the subscription regions. We will discuss an example of such a situation in subsection 5.3.The Visualization Tool, like a debugger, does not analyze the reasons for such faults. It only helps users to identify irregular behavior and locate problematic situations.Tradeoff between frequent region modifications and unwanted dataThe key to an effective use of DDM is finding the golden path between the size of regions and the frequency in which they are modified. Too large regions cause false inclusions of updates (hence increased load on the network and on the receiving federates). Too small regions cause frequent region modifications (hence increased load on the network, and on both the sending and receiving federates).There is no analytic model for determining the optimal region size and the optimal region modification frequency. The Visualization Tool helps the user to intuitively gauge the tradeoff between frequent region modifications and unwanted data, and to estimate the optimal region size based on the graphical display.Possible ExtensionsOptimization of the Visualization ToolThe initial version of the Visualization Tool will be implemented as middleware that communicates the information to an additional federate. This causes additional network traffic, and the information to be slightly delayed. Subject to availability of DDM information as MOM data, a future version might access the MOM, thereby representing the actual state of the RTI.Additional data displayed by the Visualization ToolIn addition to the VRML representation of the moving DDM regions, other parameters may be displayed using bar graphs. This is useful for displaying various RTI statistics such as the total number or the rate of updates, the number or rate of region modifications, or the computing and network loads.These parameters may be displayed by their instantaneous values  (at the moment of displaying) and/or as histograms. Histograms may help understanding tradeoffs such as short-term load increase that is justified by a long-term load decrease (e.g., sending advisories causes increased sending activities, but reduces the incoming traffic later).All this information may help users to correlate inter-federate communication with the load on the system, and to choose the DDM parameters that have to be selected, such as region size and the frequency of region modification, in order to minimize their respective tradeoff.ExamplesIn this section, we show several examples of situations in which the Visualization Tool might help to find bugs. All examples include an aircraft that fails to be detected by another federate, although for very different reasons. An entity outside of its own update regionThe first example is an obvious bug in the federate’s code: the aircraft updates its position attribute with a region that is not modified often enough. This leads to a situation where the aircraft leaves its own update region, and enters a subscription region of another federate.The other federate fails however to detect the aircraft since the update region is lagging behind. Figure 4: An aircraft leaves its own update regionNon-matching DDM filterConsider a situation in which a user notices that an aircraft of one federate is not detected by another federate. With the help of the Visualization Tool the user verifies that the update region of the aircraft indeed overlaps a subscription region of the opposing federate. However, there is no arrow displayed between the two regions.By clicking on the subscription region, the user realizes that the sensing federate subscribes only to the load attribute with this subscription region, and that he therefore has no knowledge about the aircraft’s Position attributes.Figure 5: A DM filter prevents discoveryDetection range leaves the subscription regionA user notices that a simulated aircraft cockpit window from time to time fails to display approaching air traffic. With the help of the Visualization Tool, he realizes that the subscription region is only modified once the sensing airplane reaches the boundary of the region. Therefore, at times, a major part of the detection range is outside of the subscription region, explaining the failure to discover approaching air traffic that should have been detected.Figure 6: Badly chosen subscription regionSummaryIn summary, this visualization tool helps federation designers to arrange DDM regions, by dynamically visualizing the region layout and consequential overlaps, as well as other DDM related statistics.References[1]	Defense Modeling and Simulation Office: “High Level Architecture RTI Programmer's Guide, Version 1.3 Release 2”, December 1997[2]	Defense Modeling and Simulation Office: “High Level Architecture RTI Interface Specification, Version 1.3”, April 1998Author BiographiesDANNY COHEN is Chief Scientist at Perceptronics. Dr. Cohen started working on real-time interactive simulation in 1966 when he developed the world’s first visual flight simulator using a general-purpose computer. In 1968 he developed the world’s first radar landmass simulation system. He has also pioneered real-time applications over computer network, using interactive flight simulation over the ARPAnet in 1970, and later online packet voice (point to point and teleconferencing) and packet video.ANDREAS KEMKES is Director of Technology at Perceptronics. He is an expert in HLA and DDM. He received his M.S. in Computer Science from the Technical University at Munich. JUERGEN SCHULZE is a Senior Software Engineer at Perceptronics. Dr. Schulze studied Theoretical Physics at the University of Southern California, and at the University Fridericiana Karlsruhe, Germany.