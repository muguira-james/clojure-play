Engagement Resolution via Geo-Pairing: An Identification and Analysis of Potential Error SourcesLouis FordIcon Systems, Inc.3505 Lake Lynda Dr.Suite 119Orlando, FL  32817407-658-4999 HYPERLINK "mailto:lford@iconsystems.net" lford@iconsystems.netBradley C. SchrickerAT&T Government Solutions, Inc.11301 Corporate Blvd.Suite 110Orlando, FL 32817407-658-6908 HYPERLINK "mailto:bschricker@att.com" bschricker@att.comKeywords:Geo-pairing, testing, training, TES, OneTESS, engagement, NLOS, BLOSAbstract: The operational readiness of our Joint and Coalition forces depends on advanced weapon technologies operated by crews and support staff trained to use them effectively.  Commercial-off-the-shelf (COTS) products and current and future military technology, all integrated with a variety of tools, provides the One Tactical Engagement Simulation System (OneTESS) the ability to simulate the rigorous environments commonly associated with both Force-on-Force (FOF) and Force-on-Target (FOT) training and operational testing.  Through the history of Tactical Engagement Simulation (TES), implementing Non-Line-of-Sight (NLOS) and Beyond-Line-of-Sight (BLOS) engagements has stood as one of the most daunting challenges.  A concept called geo-pairing could help to solve the issues regarding this type of engagement.  Geo-pairing, though, introduces several potential sources of error that can affect its utility, including digitized terrain errors, position sensing errors, vehicle and weapon orientation errors, assumed initial velocity errors, earth model errors, and algorithmic errors.  Following a description of OneTESS at a high level and an explanation of geo-pairing, this paper addresses these potential sources of error by identifying and analyzing each one.  The descriptions include detailed explanations and examples that clearly illustrate the error propagation.  This paper finishes with summary and concluding remarks.IntroductionAs the threats to the United States and its allies develop more sophisticated and advanced methods of attack, more sophisticated training against such threats is the best possible method of prevention.  Most relevant to this paper is the genre of Tactical Engagement Simulation (TES).  Among the many challenges with developing a new TES System (TESS) is the handling of entity engagements classified as Non-Line-of-Sight (NLOS) and Beyond-Line-of-Sight (BLOS).  Elegant modeling of these types of engagements will require new technologies and methodologies, implementing a strategy called geo-pairing.  As with any simulation solution, geo-pairing must contend with a variety of potential error sources.  This paper, along with several papers anticipated to follow, describes OneTESS, geo-pairing, and the potential sources of error involved with geo-pairing solutions.  One Tactical Engagement System (OneTESS)OneTESS is the Army’s concept for the next-generation of TES, the name clearly reflecting the broader mission of OneTESS.  Live training for military purposes dates back millennia [1].  Hand-to-hand combat drills under highly constrained conditions and target practice likely have histories as long as that of warfare, itself.  With the introduction of the Multiple Integrated Laser Engagement System (MILES) in the 1970s, live, tactical training took a quantum leap forward.  For the first time, soldiers could conduct force-on-force training under safe and, at the same time, relatively unconstrained conditions, closely reflecting the conditions experienced during actual warfare.  The application of what was then state-of-the-art laser technology enabled this advance, but this technology now faces three significant disadvantages: Lasers cannot represent indirect fire, or NLOS/BLOS engagements without additional support (such as what is provided by Simulated Area Weapon Effects – Radio Frequency (SAWE-RF)Opaque and translucent obscurants that do not stop bullets, such as foliage and fog, can block laser beamsThe systems are nearing the end of their useful economic life, particularly with regards to logistics support issues, such as part replacement, though it is the Army’s intention to continue using MILES gear through a transition periodOneTESS will support Force-on-Force (FOF) and Force-on-Target (FOT) training exercises and the Brigade level and below in all Battlefield Operating Systems at Homestation, maneuver Combat Training Centers, and deployed sites.  As part of these goals, OneTESS will simulate a multitude of different engagements, proper doctrines, and weapon capabilities as well as stimulate detectors, sensors, monitors and countermeasures [2].  OneTESS will follow a complex migration path with initial fielding emphasizing appended components and interoperability with the currently fielded MILES equipment.  The fielded system will evolve into a standard for embedded use in FCS vehicles.  In addition, OneTESS will significantly support efforts to advance technologies in power generation, exercise management, and data storage and will push to improve distributed adjudication algorithms [3].Geo-PairingThe OneTESS requirements for NLOS and BLOS dictate the use of new technology in understanding the point of impact or detonation from a round in which the target is invisible to the shooter.  This new technique is known as Geometric Pairing or Geo-Pairing, for short.  To calculate the destination point, this technology must know the location of the shooter and target, the time at which the shooter pulled the trigger, the characteristics of the weapon and ammunition, and the orientation vector of the weapon.  Intuitively, this calculation appears straightforward, though a number of complicated questions exist:Is the timekeeping of all participants synchronized?What engagement geometry should be applied based on the type of engagement?How accurately are the position of the shooter and target knownHow accurately is the terrain between the shooter and the target known?Apart from the terrain elevation, how accurately must the earth itself be modeled?How much calculation is required to compute the flight of the projectile with acceptable accuracy?The following section describes some of these challenges associated with Geo-Pairing in greater detail in the form of error sources.Error SourcesAs with any computer system, errors are inherent in a geo-pairing algorithm that relies on a digital representation of inherently analog phenomena.  This is unavoidable, but through elegant design, developers can minimize the adverse effects.  The following subsections describe the error sources in greater detail, leaving potential solutions as a topic of discussion for later publications.Digitized Terrain ErrorsAny geo-pairing solution requires the use of digital terrain data.  While the elevation of any individual player could be obtained from other sources (altimeters or GPS systems), a digital representation of the terrain features is required for comparison with the fly-out models of munitions to determine the point of impact for a shot.The OneTESS program is currently planning on using Digital Terrain Elevation Data (DTED) from the National Imagery and Mapping Agency (NIMA).  DTED is available in 6 levels, numbered 0 to 5 with the higher numbers indicating higher resolution.  DTED Level 2 is considered the standard “high resolution elevation data source for all military activities and systems” [4].DTED Level 2 data coverage was increased greatly (from roughly 5% of the earth’s surface to about 80%) by the Shuttle Radar Topography Mission that flew aboard Endeavor (STS-99, February 2000).  The specifications required that the data collected be within 16m absolute vertical accuracy, 10m relative vertical accuracy, and 20m absolute horizontal circular accuracy for 90% of the data points collected (which totaled 12.3 Terabytes) [5].The issue of relative vertical accuracy affects the calculated range of a shot.  This error is most significant for lower range, lower trajectory shots.  For example, a +10m elevation error for an M203 firing at a 37-degree inclination results in about 7m of range error (depending on the exact fly-out algorithm and drag coefficient).  Under the same conditions, a MK-19 shot (about 3.5 times greater initial velocity) results in only 2m of range error.  The same comparison with a 15-degree inclination instead of the 37-degree inclination results in a range error of 23m for the M203 and 15 for the MK-19.The issue of absolute vertical accuracy also affects the range of a shot, but in a different manner.  In this case, the question arises whether a particular shot “cleared” an object in the terrain database.  Consider the case of an artillery weapon shooting just over the top of a large hill or mountain.  The shot could incorrectly be calculated to hit the obstacle if the digital terrain presents the height as greater than actual.  Conversely, the shot could incorrectly be calculated to clear the obstacle if the digital terrain presents the height as less than actual.  Since very few shots attempt to clear large obstacles by less than 16m, this error source is not considered a major contributor to the overall reliability of the geo-pairing process.Position Sensing ErrorsPosition sensing errors in geo-pairing occur when the main equipment used to track and record position within a battlespace – GPS – return inaccurate data.  The GPS evaluation kit that the OneTESS team has tested specifies that it has an accuracy of 2.0 meters when operating in the Differential GPS (DGPS) mode.  Considering the fact that positions are calculated through the use of data collected by satellites orbiting nearly 11,000 miles above the surface of the earth, this sounds extremely accurate.  However, this number represents an expectation under ideal operating conditions.  Even under those ideal operating conditions, position data off by 2 meters can often result in incorrect engagement resolutions, particularly when the target is a dismounted infantry, whose width and depth are usually far less than 2 meters.Two major erroneous results can occur as the result of inaccurate position data from the GPS system.  The first of those is that an electronic bullet impacts a position that is not occupied by any potential target – or, in the case of area weapons, has no potential target in the vicinity – that results in a hit.  The other is the reverse – an electronic bullet impacting with a position that is occupied by a potential target but resolving as a miss.  The following two subsections describe these two situations with more clarity.False HitsFalse hits occur when an electronic bullet impacts at a position that is not occupied by any potential target, but resolves as a hit because the GPS incorrectly provides position data for an entity indicating the opposite.  Such a scenario is illustrated in Figure 1.  In that representation, the shooter has fired its weapon due east.  The target is actually Northeast by a few degrees, as indicated by the solid outline of its icon.  However, due to the GPS providing erroneous data, the shooter registers a hit on the target, even though a real bullet would not have impacted with the target. EMBED PowerPoint.Slide.8  Figure 1. False Hit due to inaccurate position dataFalse MissesFalse misses occur when an electronic bullet impacts at a location that is occupied by a potential target, but resolves in a miss because the GPS incorrectly provides position data for an entity.  Figure 2 illustrates this scenario with a target that due east from the shooter.  The shooter aims correctly at the target, but resolves as a miss because the GPS indicates that the target’s location is a few degrees to the North. EMBED PowerPoint.Slide.8  Figure 2. False Miss due to inaccurate position dataOrientation ErrorsOneTESS will use magnetometers, inertial measurement units (IMUs), and GPS interferometry to determine weapon orientation.  Like the GPS, these instruments possess a small margin of error due to magnetic and electrical forces both around the earth and within the local vicinity of the OneTESS player.  The error that accrues can lead to incorrect engagement resolutions in much the same way that faulty GPS readings do.For a shooter to hit the designated target, both the azimuth and the elevation angles must be correct.  Azimuth is a delta angle along the X-Y plane of the shooting vehicle from its heading.  For instance, if a tank is heading due North and its turret is aiming to the east, then the azimuth is 90 degrees.  The elevation is a delta angle in the Z plane from the target’s horizontal plane.  A tank raising its turret to adjust for range stands as the prototypical example of a shooter changing its shooting elevation.  These two concepts are illustrated in Figure 3 and Figure 4. EMBED PowerPoint.Slide.8  Figure 3.  An example of azimuth EMBED PowerPoint.Slide.8  Figure 4.  An example of elevationInitial Velocity ErrorsInitial velocity errors tend to affect the range of an electronic bullet.  Just like with the previous two error sources, this one can cause both false hits and false misses depending on variables such as the location of the target and the magnitude and direction (positive or negative) of the error.From the simplest perspective, an error in the initial velocity will cause a projectile to travel a farther or shorter distance than intended.  A projectile whose velocity is modeled at too great of a value will fly farther than intended, while a project with an initial velocity value that is too small will impact at a shorter range that it is supposed to.  Figure 5 demonstrates this point.The figure illustrates projectile motion in a vacuum – drag forces caused by the air are not essential to demonstrate the error that comes from an incorrect initial velocity value.  The green, dotted line illustrates the distance that a projectile would travel in the X-axis if fired at an elevation of 30 degrees with an initial speed of 100 meters per second.  The red, dotted line illustrates the distance traveled with the same elevation if the projectile is fired with an initial velocity of only 90 meters per second.For the green, dotted line, the calculations are as follows, where V = velocity, t = time, and x = X-axis displacement:	V = 100 m/s	Vx = 100 m/s * cos (30˚) = 86.6 m/s	Vy = 100 m/s * sin (30˚) = 50 m/s	Vfinal (at top of arc) = 0 m/s	Vfinal = 0 m/s = 50 m/s – 9.8 m/s2 * (t)	t = 5.1 s	x = Vx * t (no acceleration in the X axis)	x = 86.6 m/s * 5.1 s * 2	x = 883.32 mMaking the same calculations for the red, dotted line yields the following results:	V = 90 m/s	Vx = 77.9 m/s	Vy = 45 m/s	Vfinal = 45 m/s – 9.8 m/s2 * (t)	t = 4.6 s	x = 77.9 m/s * 4.6 s * 2	x = 716.7 mWith an initial velocity that was in err by 10% (100 m/s to 90 m/s), the difference in displacement was 18.9 % (883.3 m to 716.7 m). EMBED PowerPoint.Slide.8  Figure 5.  Initial Velocity ErrorEarth Model ErrorsThe simplest possible model for the earth is to consider it flat, as we did for the calculations in section 4.4.  For some applications, like movement within a building, that model (which is akin to no model) would introduce no significant error.  At some range, however, the drop-off of the earth from flat along a tangent line at the point of departure becomes significant.  Figure 6, below, depicts the drop-off. EMBED PowerPoint.Slide.8  Figure 6.  Flat Earth Error Comparing a flat earth model with a spherical earth model, and taking the radius as the polar radius according to the geodetic reference system, 1980 [6]for ranges less than 1 km, the elevation error introduced by the flat earth model is less than 3 inches (0.078m).  The error, however, grows exponentially with range, so that at the maximum range of a MK-19 (2200m), the elevation error is about 15 inches.  Still, compared to the relative terrain elevation errors described in section 4.1 this is still small.At around 11.5km, the error introduced by a flat-earth model exceeds the error possible within the DTED-2 digital terrain, and at the 30km range of the M109A6 the error introduced by a flat-earth model is over 70m.  Clearly, a more accurate model is needed for artillery and other long-range weapons.OneTESS, in compliance with CTIA, will use both geocentric coordinate system (World Geodetic System Earth Centered Earth Fixed, WGS84 ECEF) and geodetic coordinate system using the WGS84 ellipsoid.  The conversion between the two systems, while not exact, provides centimeter accuracy for heights below 1000m, which is far more accurate than any anticipated altimeter or location sensing technology that OneTESS may employ.Algorithmic ErrorsOneTESS, like all tactical engagement systems, is concerned with external ballistics (those events between the time the round exits the muzzle and the time the round impacts an object), rather than internal ballistics (those events between the time the firing pin hits the primer and the time the round exits the muzzle).  For external ballistics, two main forces act on the round: gravity, which pulls the round toward the earth, and drag, which impedes the forward movement of the round.Neglecting both gravity and drag would result in a round path along a straight line at constant velocity.  Adding in gravity changes the path from a straight line to a parabolic curve.  Military mathematicians and modelers have realized for well over a century that in order to have a practically useful model of a round’s path drag must be considered.  Since the force of drag on a round is a function of many variables while gravity is nearly constant for anything other than munitions fired from space-based weapons, a more accurate ballistics algorithm is essentially a more accurate drag algorithm.There are two “sources” of ballistics algorithms today.  One is statistical curve-fitting (e.g. least squares) of data from the Ingalls tables.  These tables were developed by U.S. Army Colonel James Ingalls based on the mathematical work of a Russian Colonel Mayevski.  Even with the advent of digital computing power since Ingalls’ day, major ammunition manufacturers still use Ingalls’ tables, along with test firings of their rounds, to determine the published drag coefficients for their products.The second “source” of ballistics algorithms is to use that digital computing power to model the flight path of a round as a point mass or modified point mass.  The issue with the computer modeling of rounds is that drag is a non-uniform function of velocity (along with many other variables) and therefore the ballistics solutions become differential equations that must be solved through numerical integration techniques.  The step size for those numerical integrations has to be small to maintain accuracy, but a smaller step size means more computational iterations, and this can be an issue for the sort of computational resources that can be carried by the dismounted soldier (less than 2 pounds for the total OneTESS element as required by the OneTESS ORD).The following tables show the differences between three algorithms in terms of time of flight and range calculations for several shots.  These figures are for illustrative purposes only and do not reflect OneTESS design decisions in any way.  The “Zero-Drag” approximation represents the same calculations as appear in section 4.4.  The “First-Order” approximation represents an equation that allows for different drag in the vertical and horizontal planes, but does not vary drag as a function of velocity.  The “Numerical Integration” approximation integrates the drag function with a variable step-size Runge-Kutta method.  The point here is not the details of the various approaches, but the importance of a robust drag algorithm, especially for weapons with higher initial velocities.Time of Flight, 76 m/s exit velocity, Cd = 0.06Elev. AngleNumerical IntegrationFirst-order ApproximationZero-Drag Approximation37°8.1s8.6s9.3s15°3.7s3.9s4.0sRange, 76 m/s exit velocity, Cd = 0.06Elev. AngleNumerical IntegrationFirst-order ApproximationZero-Drag Approximation37°353m350m368m15°226m235m243mTime of Flight, 241 m/s exit velocity, Cd = 0.06Elev. AngleNumerical IntegrationFirst-order ApproximationZero-Drag Approximation37°16.1s24.0s29.6s15°8.5s11.4s12.7sRange, 241 m/s exit velocity, Cd = 0.06Elev. AngleNumerical IntegrationFirst-order ApproximationZero-Drag Approximation37°1033m1750m1825m15°877m1585m1676mAs can be seen in the tables, failing to account for drag as a function of velocity (typically mach number) can result in very large range and time of flight errors, even for weapons with relatively modest initial velocities like the MK-19.ConclusionsThis paper has examined six error sources in geo-pairing for tactical engagement systems, with the ongoing OneTESS development as the context.  While this is not an exhaustive list of the possible error sources, we believe that we have addressed several prominent sources herein.  As a result of this analysis, we provide the following conclusions and recommendations:Since most of the error sources described above can propagate into range errors, technologies that reduce that error component are preferred.  For example, a weapon pointing sensor that detects the elevation or inclination more accurately than the azimuth angle is preferred over a sensor that does the opposite, all other criteria being equal.  (Mention some of those criteria here?)Since DTED Level 2 data still can contain significant errors, even for the 90% of the data which meets the specified criteria, give consideration to using DTED Level 3, or possibly even Level 4, data where available.  Also, plan ahead for the possibility of varying resolution terrain data.Use as much of the computing resources as possible in calculating the ballistic trajectories.  First order approximations aren’t sufficiently accurate for tactical engagement resolution.Augment where possible.  That is, use the data available from the tactical fire control computers in weapon systems where possible.It is the authors’ belief that dealing with geo-pairing errors with these considerations in mind will minimize the effects of those errors.  Future planned publication efforts will address these suggestions and potential solutions in greater detail.References[1] 	Appian, “The Civil Wars”[2]	“One Tactical Engagement Simulation System (OneTESS),  HYPERLINK "http://www.peostri.army.mil/PRODUCTS/ONETESS/" http://www.peostri.army.mil/PRODUCTS/ONETESS/.[3]	“AT&T OneTESS System Concept Contract Data Requirements List,” AT&T Government Solutions, Inc., technical paper.[4] 	“Digital Terrain Elevation Data (DTED),”  HYPERLINK "http://www.globalsecurity.org/intell/systems/dted.htm" http://www.globalsecurity.org/intell/systems/dted.htm.[5] 	“Shuttle Radar Topography Mission (SRTM),”  HYPERLINK "http://www2.jpl.nasa.gov/srtm/datacoverage.html" http://www2.jpl.nasa.gov/srtm/datacoverage.html.[6] 	“Earth: Geodetic and Geophysical Data,”  HYPERLINK "http://ssd.jpl.nasa.gov/phys_props_earth.html" http://ssd.jpl.nasa.gov/phys_props_earth.html.Author BiographiesLouis Ford is a Project Engineer for Icon Systems, Inc., working on modeling and simulation technologies in the live domain.  He has worked on numerous simulation, space, and missile programs and is currently working on the OneTESS program and also serves as chairman of SISO’s IO-ISR Committee.  Mr. Ford received his Bachelor of Science degree in Industrial Engineering from the University of Central Florida in 1985 and a Master of Arts degree in Religion from Liberty Baptist Theological Seminary in 2000.  He is currently working towards a Master of Science degree in Computer Science from Rennselaer Polytechnic Institute, expecting to graduate in the Fall of 2006.Bradley C. Schricker is a Software Engineer with AT&T Government Solutions, Inc., currently working on the technology assessment team of the System Engineering IPT of the One Tactical Engagement Simulation System (OneTESS) project.  He has nearly seven years of experience in software engineering, focusing his efforts in the areas of distributed simulation, discrete event simulation, virtual environments, and behavior representation.  Mr. Schricker received his Bachelor of Science degree in Computer Science with a minor in Mathematics from Florida State University in 1998.  Mr. Schricker is currently pursuing a Master of Science Degree in Modeling and Simulation at the University of Central Florida and projects to graduate in Spring of 2008.