Requirements and Issues in Cyberwarfare SimulationMartin R. Stytz, Ph.D.Sheila B. Banks, Ph.D.Air Force Research LaboratoryCalculated InsightWright-Patterson AFB, OHOrlando, Fl  32828(937) 255-2811 x4380(407) 353-0566mstytz@worldnet.att.net, mstytz@acm.orgsbanks@calculated-insight.comKeywords:cyberwarfare, cyberdefense, distributed cybersimulation, distributed simulation, information assurance, High Level Architecture for cybersimulation, metrics, simulation system development environmentsAbstract:  In this paper we discuss the topic of cyberwarfare simulation, discuss the areas of cyberwarfare that we believe can benefit from distributed simulation, and present a framework to guide the development of cyberwarfare distributed simulation tools and techniques.  We discuss the aspects of cyberwarfare that should be modeled to achieve an effective simulation capability.  We also present a discussion of the requirements for a cyberwarfare simulation capability and discuss how these requirements affect the current HLA and distributed simulation in general.  The paper closes with a short presentation of our conclusions and recommendations for further research in cyberwarfare distributed simulation.1.	IntroductionCyberwarfare is the broadly defined term used to describe any type of hostile activity taken against computer systems, computer networks, and computerized databases with the objective of degrading or disabling the targeted system(s).  Cyberwarfare attacks make these systems unusable, degrade performance, may lead commanders to make poor decisions due to faulty data, reveal valuable secrets, and may leave behind code that could provide continuing back-door access or be activated on a predetermined event to take obstructive action.  The vulnerability of Department of Defense and commercial systems will continue to increase due to the ever increasing interconnection of systems and connection to the Internet.  As a result of these increased vulnerabilities and of the growing realization of the strategic and tactical advantage that can be gained by attacking or degrading systems, the Department of Defense and commercial sectors are striving to develop a variety of defensive cyberwarfare technologies.  The required cyberdefense technologies must provide defense against attack; enable attack assessment; provide rapid, autonomic response to attack; insure continued operation in the presence of attacks and degradation; and increase network resilience to attack.  Simulation, especially distributed simulation, is a key component in the development of cyberdefense capabilities because distributed simulation can provide an economical, standardized, scientific environment within which to develop and evaluate cyberwarfare defensive technologies.Cyberwarfare distributed simulation poses serious technical challenges for the distributed simulation community in a number of areas.  Cyberwarfare simulation is a dramatic departure from all existing simulation endeavors and potentially has a much higher profile for success and failure than other simulation activities.  Our opinions are based upon the observation that addressing the coming problems in cyberwarfare will consume ever greater resources and receive ever increasing attention by the press, industry, and government.  Because of the increased visibility and importance of cyberdefense and because the current techniques used to manage cyber threats will not scale, we can no longer afford to wait until after an attack to allocate resources and to develop defenses.  In response to these needs, the distributed simulation community must adapt some existing techniques to this new environment, develop new technologies and methodologies to deal with the unique aspects of cyberwarfare, and use these new and adapted simulation systems to develop and evaluate new operational concepts and technologies.  Cyberwarfare distributed simulation offers an alternative approach where the science, art, strategy, and tactics of cyberwarfare can be jointly developed and evaluated on a daily basis.The conduct of cyberwarfare distributed simulations would also be a dramatic departure from current practice for cyberwarriors.  Currently, cyberwarfare practitioners typically operate alone or in small groups and of necessity respond to threats in a reactionary, uncoordinated, and narrow manner with products that are of limited utility to the remainder of the cyberspace community.  As a result of the general urgency that accompanies cyberwarfare applications development and the ad hoc nature of the defensive solutions, the cyberdefense designers and implementers lack insight into the side effects, vulnerabilities, and effectiveness of their defensive systems.  While cyberwarfare simulation can not address all of the shortfalls in the current cyberdefense technology development process, cyberwarfare distributed simulation can serve to introduce rigor into the process.  Cyberwarfare distributed simulation can also provide insight into the operation of defensive tools and techniques, aid in the allocation of resources for research and development, and enable effective cooperation between larger, distributed development and research teams.  Finally, cyberdefense distributed simulations can provide insight into the form of future attacks on information systems.A cyberwarfare distributed simulation environment can offer a broad range of services and capabilities, such as evaluation of cyber science/information assurance environments and hosting experimentation to develop and evaluate cyber science theories.  A cyberwarfare simulation environment can be used to train personnel and to develop and evaluate the strategies and tactics used to assess and respond to cyberwarfare attacks.  A cyberwarfare simulation environment can be used to develop and evaluate the analytical tools, decision support tools, and intelligent agents that assist humans in responding to cyber attacks.  A cyberwarfare simulation environment can also be used to develop and evaluate tools used for cyber command and control and to train personnel in their use.  The cyberwarfare distributed simulation environment can also be used to evaluate implemented systems in order to determine their vulnerabilities and strengths and to devise information assurance strategies.  A cyberwarfare distributed simulation environment can also be used to simulate automated attacks, practice response coordination, and develop strategies and tactics.Given these potential advantages and our current cyberwarfare and cyberdefense weaknesses, the incentive for developing a cyberwarfare simulation capability is obvious.  Because of the extreme computational expense associated with cyberwarfare (as with simulation in general), we believe that distributed simulations based upon the DoD High Level Architecture (HLA) are the best venue for developing a useful and cost effective cyberwarfare simulation capability.  However, the simulation community must determine and develop the capabilities needed in the HLA to support cyberwarfare distributed simulation.  The preliminary identification and discussion of these requirements and their impact upon the HLA is the subject of this paper.In Section Two we present a brief background discussion for our work and a framework for analysis of cyberdefense operations.  Section Three contains a discussion of the needs of cyberwarfare technology in relation to distributed simulation and a discussion of the research topics that should be addressed.  Section Four presents our views concerning the impact that cyberdefense simulation will have on the High Level Architecture.  Section Five contains our conclusions and recommendations for further work.2.	Background Discussion and Framework for AnalysisIn this section, we present background information on the field of cyberwarfare as it relates to distributed simulation.  The background forms the foundation for the framework for analysis of cyberwarfare activity that we present later in this section and the needs and HLA impact of cyberwarfare that we present in subsequent sections.  We should note that cyberdefense encompasses a broad array of technologies [2, 4-27]; our discussion in this section is limited to the technological subset that we believe can most benefit from the use of distributed simulation technologies.  In our opinion, the areas of large-scale attack simulation, intrusion detection, intrusion tolerance, metrics development, common development environment evaluation, and cyber command and control systems development can benefit the most from the use of distributed simulation.  Therefore, before we present our framework for analysis, we will briefly discuss these topics and how we believe they will benefit from distributed simulation.2.1	Focus Areas for Cyberwarfare Distributed SimulationDistributed simulation can play a significant role in developing defensive systems against large-scale cyberattacks.  Improved large-scale systems are needed because the attacks against computer networks, computer systems, and computerized databases are increasing in their sophistication and breadth; therefore, single intrusion detection systems, single-layered defenses, and human-controlled responses are or will soon be unable to effectively manage a response to an attack.  To further compound the difficulty of cyberdefense, the increasing sophistication of attacks and attacking software permits attacks to be coordinated on an ever-increasing scale over ever-increasing periods of time.  As a result of the increasing sophistication, scope, and breadth of attacks, the need to develop distributed intrusion detection systems, automated and intelligent responses, and sophisticated command centers is becoming increasingly evident.  In this cyberdefense environment, the ability of intrusion detection systems to reliably and securely share detailed and insightful information about attacks is crucial.  However, one of the major hindrances to the development and deployment of large-scale intrusion detection systems is the difficulty and expense associated with testing and evaluation.  Therefore, distributed simulation can play a crucial role in cyberdefense system development because of its ability to simulate large-scale attacks at acceptable expense and thereby permit the inexpensive acquisition of the data needed to determine the robustness and effectiveness of the intrusion detection system.Distributed simulation can aid in the development of intrusion tolerant systems.  An intrusion tolerant system is an information system that continues to function correctly and provide intended user services in a timely manner even in the face of an information attack.  To operate successfully, an intrusion tolerant system must detect attacks that have successfully penetrated the outer layers of defenses and respond with actions that enable continued operation.  The response can range from confinement of suspect code and data to reconfiguration of hardware and software resources.  Distributed simulation has a role to play in this field because it supports the development of an environment that can supply a variety of intrusions under controlled conditions and can provide a realistic and standardized computational and network loading on the threatened system.  A distributed simulation environment can also support the evaluation of a defensive response from the point of view of external systems and can provide a standardized, high-fidelity representation of attacker strategies.  Distributed simulation can also be used to aid in the development of standardized user and operational models.  Finally, and probably the most important for the future, the development of intrusion tolerance techniques and tools for systems of systems, subnets, and wide area networks will be enabled by the use of distributed simulation.  Distributed simulation offers an economical means for testing and evaluating distributed intrusion tolerant technologies.Also within the area of intrusion tolerant systems, distributed simulation can provide the foundation for the development, testing, and evaluation of defensive layering technologies.  A layered defense strategy consists of a balance of avoidance, detection, and response techniques designed to improve security, performance, and functionality.  The techniques are selected based upon their capability for security protection as weighed against the financial, computational, and network costs incurred by their use.  The challenge is to make these mechanisms scalable, efficient, language- and host-independent, and extensible to resource usage.  Currently, defensive system layering is typically confined to a single computer.  Distributed simulation can provide the conditions needed to accurately emulate the computational and networking milieu and uncertainties of the real world and thereby improve a layered defense capability.Distributed simulation can make a significant contribution to the development of metrics for cyberwarfare systems. Metrics are standard measures that can be used to specify, record, and characterize a situation, compare it to similar past situations, and support current decision making. Without the development of metrics for the effective comparison and evaluation of defensive solutions and an increase in understanding of the field of cyberdefense, the field will continue its slow advancement of capabilities based solely upon trial and error.  Metrics can best be developed within a controlled environment and the elaboration of development metrics for cyberwarfare systems requires such a standardized, scientific environment.  It is by providing a controlled, scientific environment that encapsulates the key characteristics of the real-world environment that distributed simulation can make its greatest contribution.Distributed simulation can aid in the development of a cyberdefense system development environment in much the same manner as it supports the development of metrics by capturing and portraying the key characteristics of the real-world environment.  Few tools exist that support the design and assessment of cyberdefense technologies in systems and very few of these tools have a science-based foundation.  A formalized, broad-based approach to developing system-level cyberdefenses requires an environment for the designers and evaluators that aids them in their task and guides them through a design and evaluation methodology.  The environment must support the decision-maker and operator in evaluating the applicability of a defensive technology for a particular need.  We believe that the complexity of the task facing cyberdefense specialists can only be adequately addressed through the use of an integrated environment.  An integrated environment will allow designers, evaluators, and operators can collaborate in the design, development, and evaluation of a system.  The environment must support the use of metrics and analytical tools in design and evaluation efforts.  The environment must also aid the designer and analyst in the selection of tools, support access to requisite data and tools, initiate and monitor execution, and present and analyze results.  Distributed simulation can help to satisfy all of these needs.As in the development of metrics, distributed simulation’s role in the development of command and control tools lies in providing a controlled environment that accurately emulates real-world conditions.  Cyberdefense command and control requires situation awareness coupled with automatic, intelligent responses.  In determining the response to a cyberattack, situation awareness is crucial to the selection of an appropriate response.  Achieving cyberwarfare situation awareness requires combining information from a variety of sources to permit monitoring of system disruptions, determining the status of system functions, and assessing whether an attack is occurring and the type of attack.  When an attack is underway, situation awareness helps to estimate likely attacker objectives and intent and anticipated future attacker activity.  Because automated attacks happen too rapidly to permit humans to analyze the situation in-depth and to consider appropriate responses, automated and intelligent defenses that can adapt counter-measures to either block the attack or minimize its damage are required.  To help a decision-maker assess defensive options, we believe that an intelligent response system and decision aiding capability is also necessary.  The development of intelligent responses to cyberattacks has many aspects that must be considered.  Because a cyberattack may have attack thrusts that have not been previously encountered, intelligent response capabilities and tools must be developed to aid in quickly and accurately determining the nature of the attack and the exploited vulnerabilities.  Intelligent, autonomic response also requires comprehensive categorization of responses to enable the rapid selection of effective countermeasures.  Intelligent response requires the development of defenses that are closely coupled with local and distributed resources and development of strategies for orchestrating the operation of the set of reflexive defenses.  The intelligent response system then should be able to characterize the attack, the available defensive actions, their projected effectiveness, and the impact of the response upon the operation of the defended system.  By automatically managing the reaction to large classes of attacks, intelligent, autonomic responses give defending parties more time to consider the situation and devise effective countermeasures.  Development of an intelligent response capability requires controlled experimentation to evaluate component and system level characteristics, and it is in this area that distributed simulation can have its greatest impact.2.2	Framework for Cyberdefense System AnalysisGiven that the previously described capabilities are required, we now turn to a discussion of the environment in which they will operate.  The articulation of the requirements for cyberwarfare simulation requires a framework for analysis.  To provide this framework, we suggest using the phases of a cyberwarfare engagement:  1) determination if an attack is underway, 2) characterization of the attack, 3) counteract and neutralization of the attack, and 4) counterattack. Within the framework, each phase assists in understanding the defensive capabilities that are needed.  Within each phase, proper simulation of an attack and evaluation of defensive tools and techniques requires that the response of the complete system be portrayed, from disk drive to wide-area network.  Bandwidth consumption, CPU cycles consumed, data corruption, attacking software movement through the net at all levels, attacker activity, effectiveness of various defenses, adequacy of warning, damage to the affected system, and the human response (confidence, frustration, uncertainty, hesitation, etc.) must be modeled.  Proper modeling poses a number of challenges for distributed simulation and the HLA.The first phase of the analytical framework is continuous and ongoing and is the determination if one or more systems are being attacked.  To operate effectively in this phase, the cyberdefensive systems must allow humans and computer systems to differentiate between system failure, poor performance, and attack/intrusion. Indicators of attack include but are not limited to changes in workload characteristics as assessed instantaneously and over time, changes in data movement determined by characterization over time and instantaneously, and changes in user workload over time.  Additional indicators of intrusion include system performance (at all levels and in all components) and system command usage as characterized instantaneously and over time.  To aid in making an attack determination, humans need intelligent agents, information visualization, and data mining techniques that provide insight into these attack indicators.  Computer-driven assessments would be based on the raw data such as available bandwidth, CPU loading, process execution frequency, or other metrics.The second phase in the framework occurs after an attack is detected.  In this phase, called characterization of attack, the objectives, targets, and tactics of the attacker are estimated with the goal of using the resulting information in the next phase.  In this second phase, the human and computer systems should cooperate to determine what the attacker wants to accomplish, whether the attack/intrusion is occurring at the policy, strategy, or tactical levels, the scope of attack at each level, and the type of attack.  When the policy, strategic, and tactical levels are considered, the characterization must consider that the attack/intrusion can occur at any of these levels and that an attack can have implications at all three levels simultaneously.  Clearly, every attack/intrusion has implications for the target system.  The driving questions are the objectives and level of the information infrastructure that must be attacked in order to accomplish the attacker’s objectives.  There are a number of other attack characteristics that must be considered.  One consideration is whether the attack is occurring at a single information level or at multiple levels simultaneously, which can be gauged by determining the number of components of the system that are being attacked.  Additionally, the characterization must consider whether the attack is being conducted by a set of composite threats or if there is a single threat, which is the number of vectors (avenues) of attack.  The characterization must assess whether the attack is being executed through a virus or directly, or possibly some combination of both.  The characterization must also determine whether the attack is occurring at a single location or at multiple locations.  Another consideration is the mode of the attack; that is, whether the attack is carried through wireless or wired systems.  We expect that additional components of an attack characterization will be developed through the use of distributed simulations.The third phase in the framework is counteracting and neutralizing the attack/intrusion.  This step occurs after the attack is characterized and uses the characterization data as the basis for the response.  In this phase, the human and computer cyberdefense systems must determine and isolate contaminated processes, activities, data, and software.  The cyberdefense systems must also determine and block any suspect or contaminated information streams so that further attacks along the same vector can not take place.  A key component of the response is restoring the targeted system(s) to a usable state; thereby, minimizing the damage.  Therefore, checkpointing is an important component of preparing a system for an attack and in successfully responding to an attack.  The fourth, and final, phase in the framework is launching a counterattack, which consists of those proactive actions taken to prevent future attacks/intrusions.With the identification of the areas of cyberdefense that can benefit from distributed simulation and a framework for analysis, we can now turn to a discussion of the needs for cyberdefense simulation, research topics, and their impact upon the HLA.  These three topics are addressed in the next two sections.3.	Needs and Topics for ResearchIn this section we discuss the needs and research topics that must be addressed by the distributed simulation community for it to effectively support cyberwarfare tool and technology development.3.1	Cyberwarfare Simulation Needs	In determining the distributed simulation capabilities needed to support cyberwarfare and cyberdefense, we began by assembling a set of broad-based objectives for the distributed simulation environment.  The results of this objective analysis indicate that there are several crucial capabilities that are needed.  A key capability is that the distributed simulation environment must support experimentation on cyberdefense tools and technologies and should support the development and evaluation of strategies, tactics, and decision support systems.  The distributed simulation environment must provide the capability for the evaluation of potential threats and provide a realistic portrayal of friend and foe responses to different types of attacks.  The distributed simulation environment must provide a realistic model of network connectivity, wired and wireless, at all levels of network operation.  The distributed simulation environment must support the simulation of the computer hardware and software response to different types of attacks at both the individual system and aggregate levels.  The distributed simulation environment must provide a realistic portrayal of the activity of attacking software and of friendly and opponent command and control activity. The distributed simulation environment must be able to simulate the effect of the attack on the infrastructure supported by the attacked computers.  The simulation environment must provide distributed simulations at the appropriate level of detail, whether that level is the component, computer, subnet, or network level.  The environment should not constrain analysis by being limited in its ability to provide appropriately detailed simulations; the level of detail of the simulation should be determined based upon the needs of the tools to be developed and the needs of the users and systems to be protected.  In our view, to provide a realistic portrayal of the response of friend and foe systems to cyberwarfare activities and to enable cyberdefense decision-aiding, human behavior modeling of commanders, subordinates, and users is required.  Finally, there is a need for a common development environment to host development, enable analysis and evaluation and provide cyberdefense software development tools.  The common development environment would also comprise part of the standard simulation execution environment.3.2	Topics for ResearchBecause of the breadth of cyberwarfare issues that can be addressed by distributed simulation and the cyberwarfare distributed simulation needs that we outlined above, there are a number of research issues to be addressed.  A few of the topics that cyberwarfare tool development can address in a distributed simulation environment include strategic intrusion assessment tools, intrusion tolerant systems technologies, autonomic information assurance techniques, and the development of collaborative, mobile agents to support all aspects of information assurance and cyberdefense.  Distributed simulation can also assist in the development and assessment of cyber command and control and fault tolerant network technologies.  Additional areas of cyberwarfare research that distributed simulation can support include the development of automatic, collaborative, multilayer intrusion detection tools and technologies, automated attack modeling technologies, and collaborative automatic defensive response selection and management technologies.  Distributed simulation can aid in the development, testing, and evaluation of cyberwarfare situation awareness tools, attacker localization tools, and multilayer defense techniques.  Distributed simulation can also support the development of techniques for defensive course of action development and the development and evaluation of tools to support interaction between humans and information systems.  Distributed simulation can also contribute to the development of capabilities to aid in cyberwarfare situation assessment and in the development of sensors to detect a cyberattack.  Cyberwarfare distributed simulation can provide a standardized environment to assess tool efficacy, to support the development of strategies and tactics, to host experiments, and to train operators.  These experiments can be particularly useful for characterization of the appropriate technical response for given types of attacks in light of defensive policies and strategies.  Cyberwarfare distributed simulation can also be used to support experiments to define and characterize the different types of policy, strategic, and tactical cyberattacks, classes of objectives and targets, and the definition of attack characterization metrics.  We should note that cyberwarfare distributed simulation will also have a major role to play in the evaluation of attack characterization metrics.  Cyberwarfare distributed simulation can be used to help define the types of counterattacks and the level of automation needed to efficiently execute each type.  Because of the intricate nature of cyberwarfare attacks and the complex interplay between attack and defense, cyberwarfare distributed simulation can assist in the development and evaluation of cyberwarfare command and control capabilities.As we have indicated above, we believe that a common cyberwarfare systems development environment will be an important enabling technology for the development of cyberwarfare systems.  Therefore, an investment in developing a common environment now can yield great benefits.  An important first step in developing the environment is determining the high-level objects and components of the common environment and the information and control flows needed to achieve the common environment.  Some effort should be devoted to developing architectural, design, coding, and documentation standards for the common environment.  An architectural framework should be specified and the documentation should pro-actively insure interoperability between elements of the common environment.The complexities of cyberwarfare and the distributed nature of attack and defensive operations indicate that there is a need for the development of tools to aid humans and machines in dealing with attacks that are dispersed in space and time.  Cyberwarfare distributed simulation environments can aid in the development of intelligent agents that can detect, evaluate, and manage attacks.  Distributed cyberwarfare simulation can also support development of intelligent agents to assist in the evaluation of local and large-scale attacks and in evaluating the results of an attack.  Because experimentation will be an important component in the development of many of the desired cyberdefense capabilities, distributed simulation can aid in the development and evaluation of intelligent agents that assist in analysis of experimental and exercise data.  Cyberwarfare distributed simulation can provide the standardized experimentation environment needed to develop intelligent agents that aid in developing attacks and estimating the likelihood of success for an attack.  Finally, cyberwarfare distributed simulation provides a technological foundation for the development of intelligent agents that provide real-time control of an attack and that assist users in operating a cyberdefense.A final, very important need is to be able to portray human actors and human behaviors within the cyberattack and cyberdefense environments.  This need is especially important within four areas:  developing decision support tools, developing computer-generated actors (CGAs) that function within a cyberwarfare environment, assessing the impact of a cyberattack upon the humans associated with the targeted system, and assessing enemy intent.  To address the requirements of these four areas, human behavior models must be developed.  Decision support tools are needed because the cyberwarfare battlespace is new, complex, dispersed, and rapidly changing.  Cyberwarfare distributed simulation can support development of human behavior models for decision support tools that incorporate visualization tools, intelligent agents, and data mining tools that assist the user in understanding the state of a simulated cyberoperation or a real-world cyberoperation.  These behavior models are also needed in CGAs so that the effect of different types of attacks and different attack objectives can be assessed upon users, commanders, and information consumers as well as offensive and defensive cyberwarfare systems managers.  Human behavior models will also allow the simulation environment to realistically portray the effects of human decision making upon the outcome of a cyberattack.  Cyberwarfare distributed simulation can also play a role in the development of visualization tools, intelligent agents, and data mining tools that assist in determining enemy intent, in assessing potential countermeasures, and in monitoring countermeasure effectiveness.4.	Impact of Cyberwarfare on the High Level Architecture (HLA)To quickly achieve improved capabilities for cyberdefense, distributed simulation will be essential to the development and evaluation of a broad set of responses, strategies, and assessment tools.  Because the HLA is a standard and accepted approach to distributed simulation, the HLA will be a key component of cyberwarfare distributed simulation and will play a major role in the development of future cyberwarfare capabilities.  In this section we will concentrate on the general effects of cyberwarfare on the HLA.  While the issues we raise are general in nature and must be satisfied to some degree in all cyberwarfare distributed simulation environments, the importance and emphasis that must be given to each of the qualities we discuss below must be determined based upon the desired characteristics for the simulation environment and the data collection, evaluation, and analysis goals.  We should note that, in general, there will not be a need to implement software capable of perpetrating the malicious acts to be simulated.  However, there will always be a need to characterize the activity of the malicious software by its size, capabilities, effect on the target, level of attack, computational and networking burden and vulnerabilities to defensive measures.  Conversely, we do not anticipate that the defensive software must always be implemented.  In the simulation of the defensive software, it must be characterized by its resistance to different types of attack, the computational and networking burden that it imposes, and its capability for generating attack indications.  In this section, we briefly discuss the capabilities that we believe the HLA will require in order to effectively support cyberwarfare theory, strategy, tactics, and tools development.The overriding challenge facing the HLA is the need to support a broad new class of interactions.  Generally, the current HLA Federation Object Models (FOMs) and Simulation Object Models (SOMs) were developed to support either real-time, constructive, engineering, or analysis needs.  For cyberwarfare, the distributed simulation environment will need to simulate many aspects of the defensive and offensive systems, including the available network bandwidth, computational resources, and storage resources.  HLA support for cyberwarfare distributed simulation requires the use of aspects of each of these types of simulation object models.  To support the human or computer-generated actor assessment, evaluation, and command and control of the response to a cyberattack, real-time HLA-based interactions are needed.  Additionally, the movement of attacking software, transport of attack indications, and transport of offensive and defensive command and control directives must also receive real-time interaction support.  Because a cyberwarfare attack occurs at the system, sub-system, and individual component levels, engineering types of interactions must be supported.  An especially important need is support for the interchange of highly detailed engineering data at precise (or at least tightly constrained) timings.  Quite possibly, to properly model and simulate the manner in which command and control and situation assessment occurs, the engineering data will require real-time support as well as precise timing support.  The aspects of constructive simulation that are relevant encompass the topics of aggregate interaction, de-aggregation, and migration.  In cyberdefense simulation, the outcomes of interactions are generally deterministic; however, the success rate for a given attack upon a given type of system is generally stochastic.  Therefore, the need to simulate large numbers of real-world resources using limited computational and bandwidth simulation world resources introduces a number of the aspects of constructive simulation into the cyberwarfare simulation environment.  The most obvious parallel is the aggregation of large number of systems into a few representations and the need to aggregate and de-aggregate both attacker and defender systems dynamically.  Finally, the need to support analysis of the effectiveness of cyberdefense actions, tools, techniques, and situation awareness aids indicates that the HLA environment must support some aspects of the analytical federation simulation environment.  These aspects include detailed data collection, simulation execution replay, environment variable control, and gathering a wide range of high quality statistics.  We should note that there is little, if any, need for dead reckoning within a cyberwarfare simulation environment.  Also, the specification of resolution, accuracy, and accuracy condition called for in the HLA FOM and SOM have scant use and should probably be eliminated from FOMs and SOMs used for cyberwarfare distributed simulations. In addition to the general nature of the impact of cyberwarfare simulation on the HLA, there are some specific impacts upon the HLA and distributed simulation environments because of the capabilities that they must provide.  Of prime importance is the need for the HLA to be able to specify the quality of service provided by a simulated network.  This specification should be made in terms of both the upper and lower bounds for bandwidth, throughput, latency, and delay through network switches.  The quality of service specification should also define the maximum, minimum, and available computational capacity, change in available bandwidth due to specific types of attacks, and change in available computational power arising from different types of attacks.  Because constructive-like simulations will be used to simulate many aspects of the cyberwarfare environment, aggregation and de-aggregation criteria should be specified within the FOM.  Within the FOM, the conditions for migration of individual actors from host to host should also be specified.  In the real world, attack indications will encounter latencies when moving through the network from targeted systems to a command and control center; therefore, we believe that the HLA FOM should specify these delays.  Additionally, in the real world there will be some delay between the time when the attacking software arrives at a computer host and the time when its attack is effective.  This delay time should also be specified in the FOM and SOM and will have to address variations in operating systems, defensive software, and computational load.  We are also of the opinion that the HLA should also provide a standardized means for specifying attacking software activity, the types of vulnerabilities that the attacker can exploit, the length of time required for an attack upon a given vulnerability to be successful, and the impact of a successful attack upon the target system and network(s).  Finally, the HLA should be able to specify the effect of an attack upon a database.  This specification should include the type of database being attacked, the level of attack, the type of corruption(s) introduced into the database, the extent of the corruption, and the ease with which corrupted values can be detected.In our opinion, the HLA will be a major enabling technology for the development of a cyberwarfare applications common development environment and for the development of cyberwarfare metrics.  The common development environment that we envision will be comprised of many components and will serve as a platform for both development and evaluation of tools and techniques.  The HLA provides a standardized technology for the interchange of data between the components and for instantiating an environment that can support their scientific evaluation.  The evaluation process will require metrics, and the HLA has a role to play in this endeavor as well.  The HLA can provide a standardized, scientific environment with sufficient computational and networking complexity and scale needed to develop and evaluate cyberwarfare metrics for many uses in both the simulation and real-world.  In the simulation world, the HLA can support the development of metrics for the comparative evaluation of cyberdefense tools, strategies, and tactics.  In the real-world, the HLA can support development of metrics for intrusion detection, attack characterization, response evaluation, and situation awareness.  5.	Conclusions and Future WorkThe development of improved cyberdefense capabilities is gaining increasing importance and attention as the civilian, government, and military sectors become more reliant upon networking and computer technologies to conduct routine activities and manage crisis situations.  The importance of these information management systems makes them an inviting target to individuals and organizations, and we can expect that attacks and intrusion attempts will become more sophisticated with the passage of time.  Due to a variety of factors, the attacker has a decisive advantage and, conversely, defensive systems and personnel have been hampered in their ability to respond effectively to both local and wide-area attacks.  While a number of initiatives have been launched to attempt to reverse this situation, they are hampered by their inability to develop, evaluate, and analyze defensive systems due to the costs incurred when dedicating wide-area networks to the development of defensive systems and due to the lack of metrics and assessment tools for defensive operations.  In this paper we have advocated the use of distributed simulation for the development of improved cyberdefense capabilities.  The paper opened with an overview of the issues in cyberwarfare and a brief discussion of the needs of cyberwarfare in relation to distributed simulation.  We presented a discussion of our framework for analysis of cyberoperations and also presented a brief overview of the most pressing research topics in cyberwarfare distributed simulation.  Our presentation concluded with an analysis of the impact of cyberwarfare distributed simulation on the HLA and the modifications that we believe are required to the HLA to effectively support cyberwarfare distributed simulation.In our view, the work presented in this paper is the starting point for the development of a distributed simulation capability for cyberwarfare.  We believe that an important next step is the development of a comprehensive set of use cases for all aspects of cyberdefense and that they be documented in the Unified Modeling Language (UML) [1,3].  UML is a widely accepted, standardized, implementation independent methodology used for documenting the behaviors and composition of a system.  UML also provides a standardized methodology for the development and documentation of use cases for a system.  In a cyberwarfare environment, the UML-based use cases can be used to better evaluate the changes that should be made to the HLA to support cyberwarfare distributed simulation.  These same use cases can also guide the elaboration and specification of a common development and evaluation environment for cyberwarfare and cyberwarfare simulation.A final topic that we believe should be addressed is the development of a reference FOM for cyberwarfare simulation environments.  We believe that cyberwarfare simulation poses a new class of simulation challenges and is not easily addressed within the confines of the currently available reference FOMs.  The development of a cyberwarfare reference FOM would aid in evaluating these two assessments and would provide the required foundation for the development of cyberwarfare simulation environments.ReferencesAlbir, S.S. (1998) UML in a Nutshell. O'Reilly & Associates: Cambridge, MA.Ammann, P.; Jajodia, S.; McCollum, C.D.; and Blaustein, B.T. (1997) “Surviving Informationwarfare Attacks on Databases,” Proceedings of the IEEE Symposium on Security and Privacy, Oakland, CA, pp. 164-174.Booch, G.; Rumbaugh, J.; and Jacobson, I. (1999) The Unified Modeling Language User Guide.  Addison-Wesley: Reading, MA.Chapman, B.B. and Zwicky, E.D. (1995) Building Internet Firewalls.  O'Reilly & Associates: Cambridge, MA.Cheswick, W.R. and Bellovin, S.M. (1994) Firewalls and Internet Security, Addison-Wesley: New York. Chin, S.K.  (1999) “High Confidence Design for Security,” Communications of the ACM, vol. 42, no. 7, July, pp. 33-37.Denning, D.E. (1978) “An Intrusion Detection Model,” IEEE Transactions on Software Engineering, vol. SE-13, no. 2, February, pp. 222-232.Denning, D.E. (1999) Information Warfare and Security, Addison-Wesley: Reading, MA.Denning, D.E. and Denning, P.J. (1997) Internet Beseiged: Countering Cyberspace Scofflaws, ACM Press: New York.Diffie, W. and Hellman, M.E. (1976) “New Directions in Cryptography,” IEEE Transactions on Information Theory, vol. IT-22, no. 6, November, pp. 644-654.Durst, R.; Champion, T.; Witten, B.; Miller, E. and Spagnulo, L. (1999) “Testing and Evaluating Computer Intrusion Detection Systems,” Communications of the ACM, vol. 42, no. 7, July, pp. 53-61.Forrest, S.; Hofmeyr, S.A.; and Somayaji, A. (1997) “Computer Immunology,” Communications of the ACM, vol. 40, no. 10, October, pp. 88-96.Garfinkel, S. and Spafford, G. (1991) Practical Unix Security, O'Reilly & Associates: Sebastopol, CA. Goan, T. (1999) “Collecting and Appraising Intrusion Evidence,” Communications of the ACM, vol. 42, no. 7, July, pp. 46-52.Ghosh, A.K.; O'Connor, T.; and McGraw, C. (1998) “An Automated Approach for Identifying Potential Vulnerabilitiesw in Software,” Proceedings of the 1998 IEEE Symposium on Security and Privacy, Oakland, CA, 3-6 May, pp. 231-235.Ghosh, A.K. and Voas, J.M. (1999) “Innoculating Software for Survivability,” Communications of the ACM, vol. 42, no. 7, July, pp. 38-44.Jajodia, S.; McCollum, C.D.; And Ammann, P. (1999) “Trusted Recovery,” Communications of the ACM, vol. 42, no. 7, July, pp. 71-75.Merkle, R.C. (1978) “Secure Communications over an Insecure Channel,” Communications of the ACM, vol. 21, no. 4, April, pp. 294-299.Merkle, R.C. and Hellman, M.E. (1978) “Hiding Information and Signatures in Trapdoor Knapsacks,” IEEE Transactions on Information Theory, vol. IT-24, no. 5, September, pp. 525-530.Mukherjee, B.; Heberlein, L.T.; and Levitt, K.N. (1994) “Network Intrusion Detection,” IEEE Network, vol. 8, May-June, pp. 26-41.Pfleeger, C.P. (1998) Security in Computing, 2nd Ed.  Prentice Hall.Rivest, R.L.; Shamir, A.; and Adelman, L.A.  (1978) “A Method for Obtaining Digital Signatures and Public-Key Cryptosystems,” Communications of the ACM, vol. 21, no. 2, February, pp. 120-126.Schneier, B. (1996) Applied Cryptography, John Wiley & Sons: New YorkSchuba, C.L. and Spafford, E.H. (1997)  “A Reference Model for Firewall Technology,” Proceedings of the 13th IEEE Computer Security Applications Conference, December, pp. 133-145.Schuba, C.L.; Krsul, I.V.; Kuhn, M.G.; Spafford, E.H.; Sundaram, A.; and Zamboni, D. (1996) “Analysis of a Denial of Service Attack on TCP,” Proceedings of the IEEE Symposium on Security and Privacy, May, pp. 208-223.Stillerman, M.; Marceau, C.; and Stillerman, M. (1999) “Intrusion Detection for Distributed Applications,” Communications of the ACM, vol. 42, no. 7, July, pp. 62-69.Zabek, A.A.; Seidel, D.W.; and Feinerman, L.E. (1998) “Joint Warfighting Program Information Superiority Experiment Trailblazer,” The Fall Simulation Interoperability Workshop, Orlando, FL, 13-18 Sep., pp. 1290-1296.Author BiographiesMartin R. Stytz is a Chief Principal Research Scientist and Engineer in the Air Force Research Laboratory and is a retired Lieutenant Colonel in the U.S. Air Force.  He received a Bachelor of Science degree from the U.S. Air Force Academy in 1975, a Master of Arts degree from Central Missouri State University in 1979, a Master of Science degree from the University of Michigan in 1983.  Stytz received his Ph.D. in Computer Science and Engineering from the University of Michigan in 1989.  He is a member of the ACM, SIGGRAPH, SIGCHI, the IEEE, the IEEE Computer Society, AAAI, and the Society for Computer Simulation.  His research interests include virtual environments, distributed interactive simulation, modeling and simulation, cyberwarfare, software architecture, and computer-generated forces. Sheila B. Banks is the president of Calculated Insight.  Dr. Banks received her Bachelor of Science from the University of Miami, Coral Gables, FL in 1984 and a Bachelor of Science in Electrical Engineering from North Carolina State University, Raleigh, NC in 1986.  Also from North Carolina State University, Raleigh, NC, she received a Master of Science in Electrical and Computer Engineering in 1987 and her Doctor of Philosophy in Computer Engineering (Artificial Intelligence) from Clemson University, Clemson, SC in 1995.  Her research interests include artificial intelligence, human behavior and cognitive modeling, intelligent computer generated forces, associate and collaborative systems, distributed virtual environments, intelligent human computer interaction, and man-machine interfaces.PAGE  