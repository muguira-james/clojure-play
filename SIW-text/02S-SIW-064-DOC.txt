Applying Concepts of Simulation-Based Acquisition to System-of-SystemsDr. Judith S. DahmannSenior Principal ScientistThe MITRE Corporation  Scientific Advisor toDirector of InteroperabilityOSD AT&LAbstract: Simulation is a tool traditionally used in different aspects of the conceptualization, design, develoment and testing of individual military systems.  More recently, there has been a move to systematically apply simulation throughout the life cycle of a system acquisition and more importantly reuse the same simulation tools across the acquisition of multiple systems.  This approach, called 'simulation-based acquisition', has been applied to a number of different systems with demonstrable benefits of systematic use of simulations throughout the end-to-end development process.  Many of the challenges of acquisition in the Defense Department today stem from the advent of operational requirements for individual systems to work cooperatively with other systems in what has come to be known as systems-of-systems.  This paper reviews the key simulation-based acquisition concepts and how they might be applied to systems-of-systems, along with how some lessons learned in applying simulation in the acquisition of systems might benefit systems-of-systems developments.IntroductionThe purpose of this paper is to examine the potential for application of concepts of simulation-based acquisition to the issues of joint interoperable ‘systems of systems’ (SoS) development, engineering, and test.Simulation-based acquisition (SBA) is a strategy to apply simulation capabilities throughout the acquisition process of a given program and sharing these capabilities smartly across different programs.  The SBA strategy has been articulated in government and industry, and key government programs are increasingly adopting aspects of the strategy. While SBA has been largely oriented towards the development of individual systems, systems of systems interoperability has become a higher priority in the US DOD.  US war fighting doctrine increasingly calls for more effective joint and coalition operations (JV 2010 and 2020) requiring cooperative action by multiple systems.  Consequently, there is a growing need to ensure that the systems in the field today and the new systems in development are designed to work as part of a larger system of systems (SoS).   These SoS need to be integrated and tested routinely during development and especially prior to deployment, as well as each time new systems are added to the larger SoS.  SBA was conceived and has been implemented as part of the development and acquisition strategy centered on individual systems, from initial requirements definition, through design, integration, test, and modernization. With the advent of emphasis on interoperability, the question arises as to how this strategy could benefit SoS development process.  This paper reviews both the experience with key SBA concepts and their applicability to SoS interoperability requirements and trends. Key Concepts Behind SBAIn August 2000, a definition of SBA [2] was adopted by both industry (SBA Industry Steering Group) and government (DoD Acquisition Council), which includes the concise definition and goals listed below:Concise Definition of SBAAn acquisition process in which DoD and Industry are enabled by robust, collaborative use of simulation technology that is integrated across acquisition phases and programs.SBA GoalsSubstantially reduce the time, resources, and risk associated with the entire acquisition processIncrease the quality, military worth, and supportability of fielded systems while reducing total ownership costs throughout the total life cycleEnable Integrated Product and Process Development (IPPD) across the entire acquisition life cycleImplementation of the SBA strategy is based on a set of key concepts about the way the acquisition process would be supported by simulation to meet these goals.  As is summarized in the Executive Summary of the draft SBA Roadmap [1]:“SBA is both an approach to doing business and a process.  Its goal is to make consistent information about the life cycle of a product, and the processes associated with that life cycle readily available, in order that acquisition decisions are made at the most opportune time and with the fullest possible knowledge of potential outcomes and associated risk.  SBA accomplishes this by providing the means for immediate and continuous feedback to all process participants.  The primary requirement for a simulation based approach to acquisition is that of timely data availability and analysis of alternatives regarding cost, schedule, risk and system capability.  These factors are closely coupled to the potential development contractors’ digitally based design and manufacturing processes.  This information should be accessible by all authorized participants in the acquisition process and should possess assured consistency and integrity across all acquisition domains.”Figure 1 below displays this approach pictorially.Figure 1.  SBA Depicted [1]While the specifics of how this approach would be implemented vary among SBA proponents, there are several key concepts which can characterize the strategy:(i) Shared system or product description, a shared, definitive source of data describing the system which evolves as the system matures and serves as a common reference for multiple disciplines through system development life cycle(ii) Multiple concurrent views and assessments of the system based on shared system descriptive data allowing for consideration of more options, and their implications, at each stage of the development and acquisition process (iii)  Early and continuous use of simulation  in lieu of hardware prototyping and live test; by representing as many aspects of a system in simulation for as long as possible, reducing costs of development, since simulation is lower cost than hardware prototyping and live test and since the costs of system changes are lower the earlier in the development process they are identified(iv) Common tools employed at different stages of the acquisition process and reuse of tools (including simulations) which have been used by others, reducing cost and time and increasing credibility since each user doesn't have to do all the tool development for themselvesThe draft SBA Roadmap articulated these core components of an SBA implementation approach in the layout of required capabilities.  Figure 2 displays the approach as envisioned in the roadmap.  Figure 2.  Distributed product descriptions (DPDs), data interchange formats (DIFs), and tools in SBA Roadmap  [2]Core to the concepts is what the roadmap terms the Distributed Product Description (DPD) which represents the logical compilation of characteristics of the system under development.  These product data are used to support application of a variety of tools to address the range of dimensions of the system.  Implementation of the DPD and tool interfaces as envisioned by the Roadmap would support distributed access to data both within the distributed system acquisition team and with others outside this system specific activity.  Significant in this approach is that it moves beyond the use of specific simulation-based tools to address selected issues in the acquisition of a particular system to provide systemic support for ongoing application of these tools as an integral part of the development and acquisition process.  This is accomplished through the organization and management of system data into a common data resource, which can predictably and repeatedly be used with a variety of tools to address different issues at different stages of the process. In addition, the structured nature of the data can potentially identify implications of changes in one aspect of a system on other characteristics of the system.  Making needed data readily available reduces the cost of use of simulation and hence increases the likelihood that simulation-based tools will be employed wherever and whenever applicable.   This is in stark contrast to the more traditional situation in which the development of the needed data to conduct a simulation is done independently for each tool and can be the largest cost in the conduct of a simulation-based analysis.Examples of how these key SBA concepts have been articulated in approaches to SBA or in SBA implementations are shown in figures 3-6. These the Joint Strike Fighter (JSF) implementation, the plans for the Army Future Combat System, the Navy Leading Edge Advanced Prototyping System/Ships (LEAPS) Environment, and the summary assessment of the state of the practices from the 2001 NDIA DOD Conference on SBA.  In each of these, the four key concepts are represented in different forms.  Figure 3.  JSF collaborative environment components and relationships. [4]The approach taken by the Joint Strike Fighter (JSF) program (figure 3) [4] reflects and expands on the SBA concepts.  A distributed product description provides the data to define the characteristics of the JSF to support both the engineering and operational tools being applied to JSF development.  Additional data is needed for these tools and to accommodate this, the JSF environment identified and provides access to other data sets as well as authoritative data about other systems that the JSF will interact with.The Army Future Combat System (FCS) is planning a similar strategy as is shown in Figure 6 [10], with FCS specific data provided to support concurrent assessments of FCS technical and operational capabilities.  As with JSF, the FCS environment includes access to data on other systems (both friendly and enemy), scenarios, and environment, incorporated into a integrated data environment supported by a commercial tool suite.Figure 4.  Top level view of Future Combat System approach [10]Figure 5. Leading Edge Advanced Prototyping System/Ships (LEAPS) Environment [14]Figure 5 shows the approach to product data taken by the Navy LEAPS program [14] which focuses on ship design.  LEAPS is based on a structured database that incorporates the interrelationships among different aspects of ship structural characteristics.  This structured, common data source provides the basis for  application of a wide variety of assessment tools and for the integration of the results of multiple assessments on the product as a whole, in concert with the key concepts of SBA.Finally, as shown in figure 6, a more generalized view of the current situation is depicted based on the results of a 2001 workshop on SBA across the DOD [8].  This depiction also highlights the importance of a common data source for application of multiple tools.  It further delineates different roles of industry and government in the application of the data, with industry focused on the engineering of the system or product and the government focused on the integration and assessment of the performance of the system in an operational environment.  Common, shared data, is a key to the coordination of these two interrelated but different aspects of system development.Figure 3:  Notional Simulation Supported Advanced Systems Engineering Environment from S001 NDIA SBA Conference Summary Presentation [8]As can be seen from each of these examples, the general SBA concepts are clearly across the examples.  While most of the ideas are being generally promulgated across multiple implementations, the resulting products are not shared and as a consequence do not support cross program exchange of data or sharing of tools, the last of the four basic ideas behind SBA.    Unfortunately from an interoperability perspective, cross program sharing of data and tools is critical.Systems of Systems InteroperabilityIn the past four years, organizational and policy actions have been taken to put into place mechanisms to emphasize the importance of interoperability in the daily business of the Defense Department. Interoperability, as defined in Joint Chiefs of Staff (JCS) Pub 1-02 [15], is:The ability of systems, units or forces to provide services to and accept services from other systems, units, or forces and to use the services exchanged to enable them to operate effectively together.This definition has also been adopted by the North Atlantic Treaty Organization (NATO) for use by its member nations.  As the breadth of the definitions indicates, interoperability cuts across multiple aspects of military operations and support systems.  Often associated with information systems, or more broadly C4ISR systems, interoperability in fact extends across the battle management arena to encompass aspects of weapons and sensor systems, doctrine, future battle concepts and personnel. In fact, it is beginning to be widely accepted that in Defense we are operating today in an increasingly interdependent ‘system of systems’ environment.  Successful operations depend upon the ability of different systems, often developed and fielded by different organizations, operated by personnel from different organizations (often from different nations) including civilian emergency response teams to work together under stress.Recently two DoD instructions have been reissued.  These now make explicit the consideration of interoperability at each stage of the systems acquisition process.  In effect, they provide the mechanisms within the system acquisition process itself to ensure that as systems are conceived, developed, tested, and fielded, their ability to interoperate in a system of systems environment is addressed at each step along the way.CJCSI 3170.01A, “Requirements Generation System.”  This instruction requires all requirements documentation - regardless of acquisition category level – to conform to joint policy, technical architecture integrity, and interoperability standards.  In addition, Joint Forces Command is designated as the JCS Chairman’s advocate for joint warfare interoperability, and thus will play a critical review role in all systems requirements. [5]CJCSI 6212.01B, “Compatibility, Interoperability, Integration and C4 Supportability Certification of Command, Control, Communications, Computers and Weapon Systems.”  In final drafting, this instruction specifies three interoperability certifications to be accomplished for every C4I system and weapons system that interfaces with a C4I system.  Additionally, it provides the process and format for developing interoperability Key Performance Parameters and Information Exchange Requirements for system requirements documentation. [6] Based on these, interoperability is now a key performance parameter for all systems and the support for interoperability with and among C4I systems is an integral part of systems planning and development.  Defining interoperability tailored for each system and assessing this from requirements through testing is now part of the standard acquisition process.  In addition, the past year the DOD Acquisition Regulations (DOD 50001 and 2R) were updated and DODI 4630.5 and .8 are in revision.  The latter regulations address IT and NSS systems and institutionalize the Joint Integration and Interoperability (J I&I) process that is an important effort on the part of the Joint Forces Command to identify and address interoperability requirements of currently deployed forces.Finally, in September 2001, the DoD directed [18] that interoperability of currently fielded or legacy systems be given a new priority.  Building on, and accelerating, the JI&I process, legacy systems now need to be reviewed, threshold interoperability needs defined and addressed, to provide a baseline level of interoperability for the fielding of new systems.Applicability of Key SBA Concepts to SoS InteroperabilityAs programs begin to encounter these interoperability requirements, there will be a need to create some systematic ways to address the issues of interoperability.  There will be opportunities to apply structured methods and automated tools to define the interoperability requirements of SoS, to assess different options for achieving desired interoperability goals and to assess the viability of these options.   In examining the progress made to date in several efforts, there are some strong similarities to the SBA approach for individual system. Figures 6 and 7 show an example of an approach to addressing interoperability of SoS that displays some important parallels to the SBA approach to systems development and acquisition.  This approach has been developed through a set of activities supporting different DoD organizations to define the characteristics of their multi-system (SoS) environment.In this approach, the core of the capability is a shared description of the systems and they way they interact under specified conditions.  This is the ‘systems architecture’ and is the core of a C4ISR plan as required by CJCSI 6212.01B, “Compatibility, Interoperability, Integration and C4 Supportability Certification of Command, Control, Communications, Computers and Weapon Systems.”  The systems architecture is one of three (systems, operational, technical) dimensions of an integrated architecture as defined in the DOD C4ISR architecture framework [9].  The C4ISR Framework provides the specifications for describing an architecture, along with specified views of a system and its relationships to other systems from an operational and systems perspective. Typically individual users have complied with the framework specifications and generated the required views by either manual development of the needed pictorial presentations or they have adopted a particular tool for generation these views, creating a database of SoS characteristics in a form specific to that tool.  Figure 7.  Integrated C4ISR Architecture Management System (ICAMS) Based C4ISR Toolset Approach [12]Figure 8.  Application of ICAMS Approach to Future Army Architecture Development and Test [13]In the ICAMS approach, a tool independent representation of the architectures is created along with interfaces to the data to a suite of different commercial tools that can be used to generate architecture views or analyze the characteristics of the SoS represented in the architecture.  This architecture representation includes more information than is needed to present the required C4ISR architecture views, expanded to include the core of incformation representing the underlying systems in order to generate the required views.  It was developed based on experience cumulated over a number of application example. One notable product of these analyses is what has been called an ‘executable architecture’ which goes beyond static architecture, to represent the dynamics of the architecture in execution, using one of several modeling tools. This approach recognizes, as is the case with the development of individual systems, there is no one tool, which can be used to address the full range of issues associated with SoS.  It is not unusual for a user to begin development of a SoS architecture to select a tool to support the development activity and build a tool specific database for their architecture only to discover assessment needs not supported by the original tool.  They then begin the often-tedious process of building a ‘converter’ to translate the data from their original tool to the form needed by another tool. Some tools accommodate this by supporting a selected set of interfaces to other tools.   In the ICAMS approach, because the data is maintained in a tool independent form, the user can apply the tools appropriate to the problem without the overhead of data conversion for each tool.Analogous to the SBA approach to individual system development, the ICAMS approach uses a tool independent SOS description in the form of a tool independent architecture database as the mechanism to allow for multiple concurrent assessment of aspects of a SOS.  The database serves as a common reference for the SOS characteristics just as the system description in the form of a DPD does for a system development.   The ICAMS approach is not alone in this view of the integrated architecture as the core to a SSO development strategy.  Efforts within the Services and in initiatives addressing distributed systems across Services are both approaching their tasks from the view point of the integrated architecture and attempting to define the architectural characteristics in a way which supports a collaborative engineering process.  The approach being pursued by the Single Integrated Air Picture (SIAP) Systems Engineer (SE) [11] follows a similar strategy which is using the SIAP architecture as the integrating element in SIAP development. (Figure 8, below).  At the core of the SIAP SE approach is the development and evolution of an integrated architecture with a set of common metrics to be applied using different tools and different environments (simulated, HWIL and Live) to support a block improvement process. Since the single integrated air picture is a component of the larger theater missile defense SoS, information on the TMD architecture needs to be incorporated into the architecture for the SIAP. Previous work in this area by the Joint Missile Defense Organization (JTAMDO) was implemented in a tool-specific database.  Since different tools are needed to accomplish the SIAP goals, multiple conversions of the SIAP SOS data would be required apply different tools to the different aspects of the SIAP.   Rather than facing the need for repeated data conversions as a cost of use of added tools,  a preferred route is the maintenance of the architectural data in a tool independent data base, structured to support multiple and an expanding set of tools. Figure 8. Single Integrated Air Picture (SIAP) Systems Engineer (SE) Use of Architecture Database as and Integrating Element in SIAP SE Process [11]Similarly, the Navy’s Collaborative Engineering Environment (CEE) [7] is addressing the integrated development of systems of systems for the Navy using a similar approach.  As is shown in figure 7 below, the collaborative engineering component of the Navy CEE is designed around a tool-independent database that feeds a set of tools.  Like ICAMS this data base includes information which goes beyond that defined in the C4ISR architecture, based on accumulated experience and includes the data needed to support a dynamic representation of the execution of the architecture.  These tools are used to address the key life cycle issues of a system of systems in much the same way SBA described the product model as supporting life cycle development of a system.  An added feature of this approach is that it enables traceability across systems and across the life cycle, something that can be very important to complex SOS planning and management.This suggests that the key concepts behind SBA have potential value for simulation support to SoS.  Namely:(i) Shared system or product description, a shared, definitive source of data describing the system which evolves as the system matures and serves as a common reference formultiple disciplines through system development life cycleIn the case of SOS, ‘architectures’ (operational, systems, technical) are the analog to the shared system description in the form of a DPD or smart product model (ii) Multiple concurrent views and assessments of the system based on shared system descriptive data allowing for consideration  of more options, and their implications, at each stage of the development and acquisition process In the case of SoS, there is a comparable need for concurrent assessments of a range of aspects of the SoS, in this case supported by shared access to architecture description dataEarly and continuous use of simulation  in lieu of hardware prototyping ; by representing as many aspects of a system in simulation (and not in hardware) for as long as possible, reducing costs of development, since simulation is  lower cost than hardware prototyping and live test and since reworking is lower cost earlier in the development process. In the case of SoS, because there are typically a large number of systems, both friendly and hostile, involved in an architecture, use of simulation is especially critical.(Common tools employed at different stages of the acquisition process and reuse of tools (including simulations) which have been used by others, reducing coast and time and increasing credibility since each user doesn't have to do all the tool development for themselvesThe fact that SoS draw upon multiple systems to create the SoS capability, cross system sharing of data and tools is a necessary prerequisite to successA general view of this SoS structured approach is shown below in figure 10. FFigure 10. General View of Application of Key SBA Concepts to SoSA description of the architecture is maintained in a tool-independent form, allowing for application of multiple tools to assess different aspects of the architecture and updates of the architecture based on the results.  The data and results can be used to general key views of the SoS to support SoS development and test.Lessons Learned from Experience with SBA and Individual Systems for Structured SoS ApproachThe preceding sections reviewed the SBA approach to supporting systematic use of simulation throughout the life of an individual system development.  Through the development and evolution of a shared source of system descriptive data, a variety of simulation-based tools can be applied to address different aspects of the system throughout the life cycle, as simulation is applied to as may aspects of the systems as possible for as long as possible.  This allows for concurrent and continuous feedback to the development process, with a broader set of options being assessed at a lower cost earlier in the system life cycle.A comparable approach to simulation to support SoS development is suggested based on a few examples in which SoS development is supported by a structured approach to applying a range of tools to assess different aspects of SoS development and operations.  Like the SBA approach, this strategy depends on a tool-independent representation of the SoS in the form of accessible architecture description data.  This approach enables users to apply a range of tools to address the issues that arise over time, and to share data and tools across application areas.Given the parallels with the SBA approach, what lessons does the SBA experience with individual systems development and acquisition have to offer the SoS community? “First, the bad news ….”  Applications of SBA concepts to date have been limited and largely stove-piped, with each user implementing only those aspects of the concept of greatest immediate benefit to their own individual circumstances, with little attention to issues beyond those directly related to the individual system.  Simulation for SoS is likely to face similar circumstances.  First, individual systems can be expected to address the relationship of their system to only specific other systems.  There are examples of this appearing already  --  Joint Strike Fighter (JSF), Future Combat System (FCS), DD21.  Given the nature of the requirements and the funding of these efforts, this is understandable.    Second, in cases where the acquisition is of an SOS itself (eg MD), attention will naturally be on developing a set of tools to meet their particular SoS, with little impetus to have these be shared beyond this community.  Beyond this, if there is SoS attention it is likely to be only in response to crisis or only at high visibility points.  Examples of this include the creation of the Navy Distributed Engineering Plant, only after serious interoperability problems seemed to warrant attention to SoS integration and pre-deployment testing.  Likewise, the SIAP SE was formed to address multi-system target tracking only after a sufficient number of systems with a sufficient number of problems made the need critical.“But the good news …..”  On the other hand, SOS does have some advantages that could lead to better, more widespread systemic use of simulation as an integral part of SoS environments.  The heightened awareness of need for better SoS to address joint mission requirements has lead to creation of some important enablers.  First, there are formal SoS requirements for systems including regulations-- Key Performance Parameters for interoperability and C4ISPs.  These have been accompanied by specifications for both architectures and C4ISPs, including data specifications;  the lack of such specifications has been a big hurdle for development of product models for systems, an inhibitor of systematic use of simulation across systems, which may not be as high for SoS.  While these archetecture specification  are nor sufficient for dynamic representation, they provide a common starting point. Within Services heightened awareness of the need for management of SOS with specific integration responsibilities (C4ISR integration in AF, Chief engineer and Battle Force engineering in Navy follow-on from BG engineering, Army Central Technical Support Facility).  These have been focused on integration and test of component SoS and have incorporated primarily hardware based integration and test facilities, but increasingly recognize the importance of a simulation-based environment and broader, Joint system interactions. There is an emerging approach of SoS ‘database-centered’ approach to support SOS which offers an ideal venue for simulation support;  current strategies have tended to be tool-centric, but there is a growing recognition that  EMBED Word.Picture.8  Figure 11. Use of A Federation of System Representations To Address Interoperability Options And Resultsa more general approach is needed and serious examples have been implemented and are being applied.Challenges of SoS and the Potential Added Value of Simulation for SoSRealities of legacy systems along with policy direction to address interoperability issues of deployed systems means that there is near-term attention to the problem.  However, there exist limited ‘concepts of operations’ or specifications for new or particularly legacy system interoperation for many mission areas.  The approach outlined above, assumes that there is an architectural specification in place, which can be assessed using simulation based tools and updated based on the assessment results.  How do we progress under the circumstances with legacy systems, for instance, where we do not yet have a good understanding of basic interoperability needs, or the value of added system information exchanges on the outcome of the mission, the real objective of enhanced interoperability?  This is a particular issue for SoS because there is rarely a ‘clean start’.  New concepts are implemented through new ways of using existing systems.  New systems must work in concert with legacy systems to address new threats.Simulation environments offer an ideal opportunity to allow the diverse set of communities (operators, system developers, doctrine and training organizations) to work together to assess options.  In a sense, the essence of the SBA concept is to allow for a broader set of options to be addressed, in this case, simulation environments offer an excellent venue to assess options for ways the systems could interoperate and its effects on user outcomes.  In effect, the simulation environments could be used to evaluate the value-added of additional interoperability capabilities, providing feedback to the SoS architecture and providing a basis for determining what upgrades to existing systems, or new system features, bring value to the war fighter, before the added capabilities are developed.  This could be done in constructive simulations with lower fidelity representations to assess early concepts and trades, all the way through to detailed engineering representations federated to assess pre-deployment interoperability. Figure 11 provides an example based on work underway between the US and Sweden to example issues of interoperability among coalition forces [3].  In a very high level example for illustration purposes, suppose we  create a simulation federation of representations of sensors, exploitation systems, and a targeting system all in a common physical and electro-magnetic environment. The federation would implement each system as a federate, and all the information exchanges between the systems would be incorporated into the federation object model.  By varying the publish-subscribe characteristics of the federation, it would be possible to evaluate the effects of changing the way the systems were applied to the task, in particular the data sharing arrangements among the systems, on user outcomes.  The results could support decisions about what new capabilities are needed to achieve mission goals, including the value of added interoperability capabilities to current and prospective system. Incorporating this idea into the structured approach for supporting SoS thorough simulation emphasizes the role of simulation in establishing initial requirements and analyses of alternatives in defining the architecture itself. A revised depiction of the approach incorporating this is shown in figure 12, below.Figure 12. View Of Structured Approach To Simulation Support To SoSConclusion and Next StepsThis paper has demonstrated that key concepts underlying simulation-base acquisition apply to the development and management of systems of systems.  Integrated architectures play the role of the product description as a core integrating capability by supporting a range of different tools that can address different aspects of the SoS through the life cycle.  Simulation environments can be a particularly valuable tool in the assessment of different options in the development of the architecture and throughout the development process.  There are now several examples of this general strategy of creating tool-independent representations of the integrated architecture augmented by the information needed to apply tools including those to provide dynamic architecture execution and to create simulation environments to support architectural assessment and experimentation.   ReferencesAcquisition Council, “A Roadmap for Simulation Based Acquisition – Report of the Joint Simulation Based Acquisition Task Force”, Draft for Coordination, December 4, 1998.Barr, P.C., Bernstein, A.R., Hamrick, M. Nicholson, D., Pawlowski, T., Ring, S.: "Executable Architecture for the First Digitized Division," Proceedings of SPIE, Vol. 4037 Digitization of the Battlespace V and Battlefield Biomedical Technologies II, 26-27 April 2000.Bendz, J., Johannisson, P., Ohlund,G., Frank, A. Dahmann, J, Konwin, K., and R. Briggs, ”Coalition Interoperability through Standards-Based Collaborative Environments”, 2001 Fall Simulation Interoperability Workshop, September 2001.Coolahan J.E., Case, F.T. and R. J. Hartnett, “JSF Strike Warfare Collaborative Environment (SWCE),” 2000 Fall Simulation Interoperability Workshop, September 2000.CJCSI 3170.01A,  Requirements Generation SystemCJCSI 6212.01B, Compatibility, Interoperability, Integration and C4 Supportability Certification of Command, Control, Communications, Computers and Weapon SystemsCrisp, H.  ”A Family of Systems Collabortaive Engineering Environment”, Third International Symposium on Collaborative Technologies and Systems, January, 2002.Dahmann, J. ”Advanced System Engineering Environments:  Follow-on to NDIA Simulation-Based Acquisition Conference ’Enabling the 21st Century Aquisition Enterprise’”, 2001 NDIA Systems Engineering Conference, October 2001.Department of Defense, “Command, Control, Communications, Computer, Intelligence, Surveillance,and Reconnaissance (C4ISR) Architecture Framework Version 2.0,” The Department of Defense,  Washington, D.C., 1997 Eirich, P. L., Coolahan, J. E. and E. Purdy;  “A Collaborative Environment Architecture for Future Combat Systems (FCS) Modeling and Simulation” 2002 Spring Simulation Interoperability WorkshopGiaquinto, J. and J. Barto, ”Single Integrated Air Picture, System Engineering Task Force Analysis-People, Tools, Processes”, 2002 Spring Simulation Interoperability Workshop, March 2002Hamrick, M. and Pawlowski, T.: "Technical Approach for Multi-tier Simulation of Executable Architectures," MITRE Product 00W0000131, June, 2000.Hamrick, Mike and Tom Pawlowski, “Technical Approach for Multi-tier Simulation of Executable Architectures: The Underlying Technology for a Command Post Configuration Tool”, MITRE Product MP 00W0000131V00S000R00, June 2000.Hurwitz, M.  “Leading Edge Advanced Prototyping System/Ships (LEAPS) Environment” 2001 Fall Simulation Interoperability Workshop, September 2001Joint Doctrine Division, J-7, Joint Staff, "DOD Dictionary of Military and Associated Terms," Joint Publication 1-02 Navy DEP:  HYPERLINK http://www.nswc.navy.mil/dep www.nswc.navy.mil/depNDIA SBA Industry Steering Group “Simulation Based Acquisition Functional Description Document”, 23 September 1998.Wolfowitz, Paul,  ”Command and Control (C2) Legacy Interoperability Strategy and  Milestone Action Plan”, Memo, Deputy Secretary of Defence, 12 October 2001.Author BiographyDr. Judith Dahmann is a principal senior scientist at the MITRE Corporation and the Scientific Advisor to Dr. Garber, Director of Interoperability for the US Under Secretary of Defense for Acquisition, Technology and Logistics.  In this capacity, Dr. Dahmann provides technical review, assessment and recommendations on interoperability plans, issues and initiatives, including the application of emerging commercial technologies throughout the system acquisition cycle.   Dr. Dahmann is also participating in the technical development of a DOD enterprise infrastructure initiative to support creation of distributed system of system federations with simulation, hardware-in-the-loop and live systems to support integration and test throughout the life cycle. Prior to this, Dr. Dahmann was the Chief Scientist for the Defense Modeling and Simulation Office for the US Director of Defense Research and Engineering, a position she held from 1995 to April 2000.  In her role as Chief Scientist, Dr. Dahmann led the development of the High Level Architecture, a general-purpose software architecture for the development and interoperation of simulations, now an IEEE Standard (IEEE 1516).