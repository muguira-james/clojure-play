SIAP Experiments and Joint Distributed Engineering Plant FederationsJames NutaroDale FultonPhil HammondsNorthrop Grumman Information TechnologyJoint Interoperability Test CommandFort Huachuca, AZ 85613-7051{ HYPERLINK "mailto:nutaroj@fhu.disa.mil" nutaroj,fultond,hammondp}@fhu.disa.milABSTRACT:  This paper presents a study of federation induced errors on the measures of performance associated with an early architecture proposed to support the Single Integrated Air Picture (SIAP) pilot experiments.  The types of errors considered in this study include sampling rates that result from the use of tabulated data, extrapolation errors (i.e., dead reckoning), and mismatched latencies experienced on distinct network paths.  The intent of the study is to highlight the nature of errors that can occur in even relatively simple distributed simulation exercises, illustrate the use of semi-formal methods and models to study federation architectures, and to suggest design changes for the SIAP pilot event infrastructure.  1.  IntroductionSingle Integrated Air Picture (SIAP) experiments aim to characterize and improve twelve critical factors that derive from the basic physics (kinematics) of theater ballistic missiles, with respect to the sensors that are integrated into the actual weapons system and the many other sensors that communicate via Link-16.  Effects of multiple sensors, distribution, network latencies, fidelity of simulations, and general complexity issues degrade the ability of the overall Air Defense configurations to provide consistent and accurate “air pictures.”  These inherent effects in fielded systems are the objective of laboratory experiments in which we seek to characterize behavior under controlled conditions, with the ultimate goal of improving the integrated air picture.The Joint Interoperability Test Command (JITC) has implemented an interim configuration for performing SIAP experiments on various sensor and track correlation systems.  The interim configuration is driven by pre-recorded track information from the SIAP Common Reference Scenario (CRS) and uses Commercial-Off-The-Shelf (COTS) and Government-Off-The-Shelf (GOTS) extensively to implement JDEP Core and Extended Core functions.  The pilot event in Huntsville US AAMCOM SED is using the JDEP interim configuration to conduct SIAP experiments on the Patriot system, with the goal of addressing questions related to data registration and time synchronization.  This white paper examines the interim configuration in light of perceived and tentative requirements.  The analysis focuses specifically on the effects of disparities between the truth data and the data acted upon by the simulators, and on the effects of this disparity on the SIAP metric calculations.  The paper considers issues related to the underlying instrumentation as well as the kinematics of air and space tracks depicted in the reference scenario.  The goals of this effort are to provide a clear understanding of where the current JDEP Federation Object Model (FOM) stands in terms of the Patriot configuration and related SIAP analysis, and what enhancements may be effective in improving the results of future events with respect to the SIAP analysis objectives.  The Patriot JDEP pilot presents an excellent opportunity to understand the context for using simulators and Hardware-in-the-Loop (HWIL) in a federation, and to increase the accuracy, precision, and degree of certainty associated with future events.The analysis presented in this paper is incomplete in the sense that it does not address all the issues that concern federation designers.  However, the analysis does demonstrate the application of formal methods in modeling and simulation to federation design.  By way of the analysis conducted in this paper, we are able to anticipate the ability of a particular federation design to meet the SIAP objectives.  Moreover, we can experiment with new federation configurations prior to implementation, establish operational limits for a particular federation design, and suggest design changes to address problems.  This provides a basis for methodic engineering of federated simulation systems, as opposed to approaches that are ad hoc and rely heavily on trial-and-error experimentation with prototype implementations.2.  The JDEP Patriot Pilot Experiment ConceptThe objectives for the SIAP Patriot HWIL JDEP Pilot event are to  Evaluate the sensitivity of Patriot SIAP performance to host-to-host time synchronization biases, and  Evaluate the sensitivity of Patriot SIAP performance to data registration errors in the form of sensor position and alignment errors.These objectives will be accomplished by inserting a representation of a Patriot system that is capable of implementing time synchronization and data registration biases into a representative scenario and measuring the effects of the biases on the ability to build and maintain a Single Integrated Air Picture (SIAP) [SIAP 2001][SIAP 2003].  The Common Reference Scenario Driver (CRSD) drives the experiment.  The CRSD provides air tracks and space tracks to induce the required behavior in the Patriot system and its sensor simulator (FMS/D).  The event will create a baseline by initially running the scenario with the Patriot configured with no biases in data registration or time.  Biases will be systematically introduced to characterize the error sensitivity of the Patriot with respect to the SIAP attributes.  SIAP attributes will be computed from the experimental data.  The effects of the biases on the attributes will be analyzed based on comparisons and cumulative statistical results.A conceptual model of the Patriot pilot event is shown in figure 1.  The CRS, depicted as a track source, consists of discrete measurements of position, velocity, and acceleration (samples) for theater ballistic missiles and air breathing threats.  This track information is used to stimulate the Patriot sensor simulator, indicated by the radar, which provides input to the Patriot tracking and correlation algorithms, depicted by the Patriot.  The correlation algorithms attempt to match the sensor data with older, but accurate, reports from some other source, represented in the diagram by the remotely reported tracks block.  In the Patriot pilot event, the remotely reported tracks are a down-sampled image of the tracks provided by the track source.The initial Patriot event will specifically establish the effects of time synchronization errors and geodetic registration errors on three particular SIAP attributes.  These attributes are kinematic accuracy, track quality consistency, and error covariance consistency.  This white paper addresses the effects of simulation errors on the precision of the kinematic accuracy and error covariance consistency metrics.In the context of the Patriot pilot event, we can make several simplifying assumptions.  We can assume that:   One system is providing the air picture that is being evaluated (i.e., the Patriot system),   Kinematic accuracy is computed by comparing the Patriot air picture data to the track source data (i.e., the CRS data),   No more than two tracks are assigned by the Patriot for a particular object,   A fixed number of scoring times are used, and   We can determine exactly which tracks belong to which scenario objects.For the sake of brevity, we will assume that the track data was obtained by sampling a scalar time function.  Extending the error analysis to the two- or three-dimensional case requires changes to the detail, but not the substance, of what follows.  Moreover, we will restrict our analysis to a single track.  Denote this track r(t) and let a corresponding track generated by the Patriot be denoted by s(t).  Then kinematic accuracy as a function of time is given by1)  K(t) = L|r(t)-s(t)|,where L is some constant.  Similarly, error covariance consistency is defined to be2)  E(t) = M|r(t)-s(t)|2,where M is some constant.3.  Effects of Position Errors on the SIAP metricsIt is helpful to have symbolic representations of the system components and their interactions.  As in the previous section, we let r(t) denote the track information being provided by the track generator (i.e., the original source of the CRS data).  We assume that the function r(t) is known only at particular points t0, t1, t2, …, tn where the ti are not necessarily evenly spaced.  This will be the case if we use the raw CRS data or only some subset.  The radar and Patriot software can be represented by a function s(t) = H(r(t)), where H computes the track as it is perceived by the Patriot system (i.e., sensor system and Patriot HWIL).The system, viewed as a whole (i.e., the remote track simulator, Patriot radar simulator, tracking and correlation software), constructs an approximation of the position function, and possibly some of its derivatives.  This is done by the remote track generator and its associated communications network simulator to produce data that is synchronized with Link-16 time slots. It is also done for local data by the radar simulator in order to drive Patriot's internal tracking model(s), which require a higher update rate than the original tabular points provide.  Let e(t) denote the error introduced by extrapolation at into the signal r(t) as it traverses the simulation components (e.g., TIAC, the FMS/D’s HLA interface component, and the DLS).  Then the signal provided to the Patriot function H is r(t)+e(t) and so the resulting Patriot track is H(r(t)+e(t)).  Assuming that the SIAP attributes are calculated by comparing the computed track to the CRS track r(t), the term |x(t)-s(t)| in formula (1) and (2) should be replaced by3)  |r(t)+e(t)-H(r(t)+e(t))|.Two questions that we might ask about the effects of errors on our experiments are:1. How do perturbations in the input trajectory impact the model behavior (i.e., the function H)? 2. How sensitive are the SIAP attribute calculations to errors in the reference signal?The first question is difficult to answer.  If we assume that the system is stable (which is almost certainly the case), we can assume that small perturbations in the input trajectory result in small perturbations of the state and output trajectories.  However, since one aim of our experiments is to determine how small is small (i.e., what is the smallest perturbation that does not cause the air picture to break down), we must keep the simulation errors small relative to the experimental changes to the input signal and the expected change in value of the output signal.  For example, if we consider a shift of 1 meter in r(t) to be significant, we must ensure that e(t) << 1 meter.  Just how small is difficult to determine, but in general we will want to make e(t) as small as is reasonably possible, so as to ensure that our experiments are valid for a wide range of input trajectories.The second question can be answered with some degree of precisions since the SIAP attributes have explicit, and relatively straightforward, definitions [SIAP 2001].  The kinematic accuracy, KA, of an air picture is described by equation (1).  To simplify the analysis, we can consider a single track r(t) and the resulting air picture s(t) at some time t.  Let e(t) be the sum of the errors resulting from the uncertainty in the reference signal r(t) (i.e., the approximation errors) and the error in the model output due to the input signal error.  So we can write4)  KA(t) + KA(t) = L|r(t)-s(t)+e(t)| < L|r(t)-s(t)| + L|e(t)|.	Subtracting KA from both sides gives 5)  KA(t) < L|e(t)|,so the error in the kinematic accuracy calculation is linear in e(t).  We can expect small errors in the simulation to be reflected as small errors in the kinematic accuracy attribute.The error covariance consistency, is described by equation (2).  Taking e(t) as before we can write this as 6)  EC(t) + EC(t) = M(s(t)-r(t)+e(t))2.Simplifying gives7)  EC(t) + EC(t) = M(s(t)2+r(t)2+e(t)2-2(r(t)s(t)-r(t)e(t)+e(t)s(t))), and8)  EC(t) = M(s(t)2+r(t)2-2r(t)s(t)).Subtracting (8) from (7) gives 9) EC(t) = M(e(t)2-2e(t)(s(t)-r(t))).So the error is proportional the square of e(t).  In the multi-dimensional case, the error will be proportional to ||e(t)||2. The error model suggests that errors that are small with respect to the effects of interest are not likely to compromise the analysis objectives.  However, the squared growth of the error term in the error covariance metric suggests that even moderate errors can result in significant distortions of the analysis metrics.4.  Analysis of the Interim ConfigurationThe conceptual model shown in figure 1 has been realized by the interim configuration via the federated simulation shown in figure 2.  In this configuration, the CRS-D produces track information based on track data in the scenario file and filtered using a dead-reckoning error threshold criteria.  The data that is passed through the dead-reckoning filter is placed onto the network when the real-time system clock matches the time stamp associated with the data point.  After some network transport and translation delay, the data arrives at the FMS/D radar simulator and multi-component Link-16 simulator.  These components use a dead-reckoning algorithm to approximate the current or some future value of the track and then operate on that approximated value. EMBED Microsoft Word Picture Figure 2. Interim SIAP federation for Patriot.We will focus on three possible sources of error in the position and velocity tracks due to the interim federation design (i.e., contributions to e(t) by the federation design).  The first source of error arises from the need for state information at points other than those tabulated in the CRS and the inherent errors in the extrapolation technique used to generate approximations of non-tabular points (e.g., as occurs in the FMS/D HLA interface component and DLS components).  The second source of error occurs when tabulated data is discarded (e.g., as is done by the CRSD in order to limit bandwidth usage, or by the DLS to simulate Link-16 network throughput).  The third source of error is due the extended lengths of the extrapolation intervals, with respect to the actual intervals in the recorded data, due to unpredictable network transmission delays, computational loads on the component platforms, and disparities in the values of the component clocks.Table 1 lists potential sources of error in time (i.e., major components of the third source of error mentioned above), ranges of those errors as suggested by engineers involved in the design and implementation of the interim federation, and methods by which the errors could be more precisely characterized.  Table 1.  Time error sources in Patriot interim federation.Error SourceSignificanceCharacterization setupDR latency in updating10-60 millisecondsMeasure the time of output of the DR’d track, compare to scheduled (expected) DR output time.Time SynchronizationMicroseconds (drift, not absolute + relative time difference, if any between CRSD and TIAC)Measure the time error between CRSD creation of track (or last DR) and the time in TIAC used to obtain the delta between creation time and next whole second.Loading effects1-10 millisecondsVary the load and measure the delays from the expected whole second output to the actual whole second output.4.1 A TBM ExampleThe potential errors described in computation and timing, then, can be illustrated using a relevant example.  Given the possible timing errors in table 1, we study the approximation of a notional Al-Samoud theatre ballistic missile track by the interim federation.  Figure 3 depicts a notional Al-Samoud theatre ballistic missile track [Schmucker 2003].The errors introduced by the second order dead-reckoning scheme used by the TIAC, using an assumed network delay and sampling interval (i.e., CRSD update rate), can be computed using a discrete event model as shown in figure 4.The Al-Samoud track is a continuous function that is provided as an input to a sampling device (i.e., the CRSD).  The sampling device produces periodic output that is consumed by a dead-reckoning device (in the interim configuration this is the TIAC).The maximum observed position error in the dead reckoned trajectory, with respect to the source trajectory, as a function of sampling rate and sampler to dead-reckoning delay can be predicted, and is shown in figure 5.  It can be observed that the sampling frequency is a significant factor in determining the overall error.  Of particular interest is the observation that a low sampling frequency (even as low as 0.6 Hz) in conjunction with network delays in the hundreds of milliseconds produces position errors of less than a meter. The perturbed signal that is produced by the TIAC is then further down-sampled and delayed as it passes through the FMS/D and DLS-GTE arrangements.  These systems also introduce small, but uncontrollable, errors into the signal.  Ultimately, these perturbed, delayed signals are fed into the correlation device.  The perturbations, both in time and space, of the signals must be sufficiently small to ensure that their effect on the correlation device is small with respect to the experimental perturbations that are introduced for SIAP analysis.  Moreover, the down-sampling performed by the DLS and the delay differential between the FMS/D to correlator (local) and DLS to correlator (remote) paths may affect the correlation algorithm by forcing the use of excessively old data from either the radar or network source.  Extrapolation performed by the correlation algorithm (e.g., as called for in SLIRS) will then introduce further error into the pair of signals operated on by the correlation device.The effects of down-sampling and differential delays between the CRSD to FMS/D and CRSD to correlator via TIAC and the DLS-GTE arrangement were approximated using a simple model of the current interim configuration, shown in figure 6.  The CRSD model assumes a 10.0 Hz base sampling rate with outputs being sent to the TIAC using a 1 meter error threshold using a second-order dead-reckoning scheme.  The model uses a 20 millisecond CRSD to TIAC delay, a 20 millisecond CRSD to FMS/D delay, and no delay from the FMS/D to the correlator.  The rate at which the TIAC produces outputs is varied.  The TIAC uses a second order dead-reckoning scheme to extrapolate all TBM tracks to the whole second.  TIAC does not DR air tracks.  The FMS/D is assumed to use a second order dead-reckoning algorithm to extrapolate the incoming signal to the current system time.The DLS-GTE string receives delayed information from the TIAC and then down-samples the incoming messages prior to making them available to the GTE.  The TIAC to DLS delay is assumed to be 20 milliseconds.  The DLS generates outputs every 12 seconds.  The GTE delay is varied.  In order to illustrate the effects of the distributed simulation environment on the correlation software, let us assume that the software retains the most recent data point from the FMS/D and the most recent point from the DLS-GTE configuration.  Further assume that the correlation software extrapolates the older of the two points in order to time-align the data before computing the difference in position between the two reports.  A second-order dead-reckoning formula is used for this purpose.  The two stored tracks are compared when input is received from the DLS-GTE string (i.e., on receipt of a remote track report). Note that the DLS is known to introduce errors during coordinate conversion (i.e., converting meters to data-miles) and the FMS/D introduces unknown perturbations due to the radar simulator.  It is expected that such errors will be magnified if the correlator then extrapolates from the perturbed data, especially when there are significant errors introduced into the reported velocity and acceleration values.  The effects of such perturbations are not considered.Figure 7 depicts the maximum observed difference in position between the local and remote tracks as perceived by the correlation software as a function of the GTE delay and TIAC output frequency.  Figures 8 shows the difference in perceived position of the local and remote tracks as a function of time when the GTE delay is fixed at 100 milliseconds and the TIAC is operating at 1 Hz.5.  Minimizing Errors Associated With Approximated (Non-Tabular) Data PointsGiven a set of tabulated points, we can approximate the values of intermediate points via a process of extrapolation (e.g., ‘dead reckoning’) or by using interpolation (see, e.g., [Ralston 1978]).  Suppose that we use a dead-reckoning algorithm to predict some next position based on the last known position and, possibly, velocity and acceleration.  Letting h be the span over which we must extrapolate, the error in the extrapolation is proportional to hp+1, where p is the largest known derivative.  For example, if only position is known, then p = 0.  If position and velocity are known, then p = 1.  If position, velocity, and acceleration are known, then p = 2.  In this latter case (the best achievable using the dead-reckoning algorithms specified in the DIS standard), the error in the position will be proportional to h3.Since the entire trajectory is known beforehand, we should strongly consider an interpolation scheme, rather than extrapolating forward from some ‘last known’ data point (this notion being senseless since the entire trajectory is known.  The concept of a ‘last known’ point only makes sense when access to the trajectory is somehow restricted).  In general, interpolation formulae exhibit much smaller errors than extrapolation formulae given the same set of tabulated data points.  In particular, at the tabulated points, the error will be zero.  Using only position information, we can use linear interpolation to readily achieve errors similar to the first-order (i.e., velocity based) dead-reckoning scheme.  Interpolation schemes employing either more points or knowledge of higher order derivatives can better approximate the original function.6.  Controlling Delays and Sampling RatesFrom the abstract conceptual model depicted in figure 1 and the concrete realization depicted in figure 2, we can observe that the truth track source, remote track source, and radar are realized by digital simulations.  These systems have no intrinsic requirements to operate in real-time, although the present federation design imposes such a requirement (presumably to accommodate HWIL, or actual tactical systems in the near term).  These systems could actually be reconfigured to operate faster than real time, resulting in the configuration shown in figure 9. EMBED Microsoft Word Picture Figure 9.  Alternative SIAP test configuration.This configuration provides two advantages.  First, it eliminates the error sources described in table 1.  By using a simulation clock rather than a real-time clock in the left-most box, the simulation system becomes insensitive to communication latencies, uneven processing loads, and real-time clock synchronization errors.  The simulator need only operate at a rate sufficient for the FMS/D and link simulator real-time interfaces to provide timely information to the Patriot HWIL.  A second advantage is the ability to strictly control the DLS sampling interval, especially when experimental objectives require a rapid sampling rate or significant number of tracks.Notice that if the FMS/D generates simulated inputs for the Patriot in advance of those inputs being needed (i.e., faster than real time), we can be assured that the real-time deadlines can always be met.  Similarly, the link simulator can be expected to provide simulated data well ahead of its real-time deadline.This configuration places some new requirements on the CRS-D and FMS/D, and it will require significant changes to the link simulator, whose relatively complex configuration is strongly tied to the DIS protocol.The CRS-D will be required to provide all necessary data, including track information at high update rates, using an appropriate interpolation scheme where necessary.  Alternatively, a quantum-based filtering scheme could be employed to restrict communications to significant events.  The time-regulating CRS-D delivers this information as fast as possible to the time-constrained FMS/D and link simulators.  These systems process the track data as fast as possible, queuing the results for later delivery to the Patriot via the real-time interfaces.  In the event that the data load cannot be processed in real-time, the track signal generator can begin track generation early with respect to the Patriot.In an alternative configuration, the FMS/D or link simulator could have the responsibility for performing interpolation, where necessary, on the basic scenario data.  In this case, the simulator would request time stamp ordered data up to some point in the simulated future so as to have a sufficient number of data points to implement an appropriate interpolation scheme.  This approach might be preferred, since it preserves a distributed architecture, but utilizes the local simulator for executing parts of the scenario, rather than the scenario being driven from a single point. 7.  Conclusions and RecommendationsThe present FOM and Patriot configuration were designed to be an interim solution for JDEP to conduct SIAP experiments.  Application of COTS and GOTS has resulted in a workable, albeit temporary, configuration.  This white paper and the example presented demonstrate that the current approach should be analyzed with respect to known sources of errors and uncertainties that are introduced by simulations and by instrumentation.  By carefully addressing these errors and uncertainties in a conceptual framework beforehand, JDEP can establish the theoretical foundation for good systems engineering that will provide a clear understanding of the limits of the simulations, how the FOM should be designed, and what results should be expected from the pilot events.It is essential that federation design move away from ad hoc approaches.  Federation evolution by way of trial and error experimentation with prototype implementations is extremely risky.  The inevitable results are missed deadlines, uncertain or ineffective analysis, and unwieldy simulation tools.  Formal methods provide a necessary basis for rigorous engineering.  This white paper has demonstrated the use of formal methods to support the design of simulation systems, and federated simulations in particular.References[Ralston 1978] Ralston, Anthony, Philip Rabinowitz. A First Course in Numerical Analysis: Second Edition. Mineola: Dover Publications Inc. 1978.[SIAP 2001] SIAP SE TF. Technical Report 2001-001: Single Integrated Air Picture (SIAP) Attributes. Arlington, VA: SIAP SE TF. June 2001.[SIAP 2003] SIAP SE TF. Single Integrated Air Picture (SIAP) JDEP Federation PATRIOT HWIL Pilot Test Plan.  Arlington, VA: SIAP SE TF. July 2003[Schmucker 2003] Schmucker, Robert. “The Al Samoud”.  Report produced by Schmucker Technologie (Munich, Germany) for NTI by the Center for Nonproliferation Studies at the Monterey Institute of International Studies. 2003. PAGE iii PAGE iii PAGE iiiFigure 8.  Difference in position of local and remote track as a function of time for a 100-millisecond GTE delay and 1 Hz TIAC output rate.Figure 7.  Maximum distance between position of the Al-Samoud track reported locally and remotely to the correlation computer as a function of the GTE string delay and TIAC output frequency.Figure 6. Model of interim configuration for end-to-end error analysis.TIACHLAFigure 1.  Component view of the model used in the Patriot pilot event.Figure 4.  Block diagram representation of the CRSD-HLA-TIAC portion of the interim configuration.Fixed-ratesamplerCorrelation softwareGTEDelayDLSFixed-rate samplerFMSDDead reckoningDISDelayCRSDError calculatorDead reckoningTIACDelayFixed-ratesamplerHLACRSDDead reckoningDelayMissile trajectoryFigure 3.  Notional Al-Samoud trajectory.RadarPatriotRemotely reported tracksVariable-ratesampler EMBED Word.Picture.8  Missile trajectoryTrack sourceFigure 5.  Dead-reckoning error observed at the output of the TIAC as a function of sampling frequency and network/processing delay. EMBED Word.Picture.8  