USING AGENT TECHNOLOGY IN HLA SIMULATIONSJohn R. HummelDecision and Information Sciences DivisionArgonne National Laboratory9700 S. Cass Avenue/DIS-900Argonne, IL 60439-4832630-252-7189 (Voice), 630-252-5128 (Fax)hummelj@smtplink.dis.anl.govCharles H. SinexInformation Analysis GroupThe Johns Hopkins UniversityApplied Physics LaboratoryLaurel, MD 20723-6099240-228-5617 (Voice), 240-228-5910 (Fax) HYPERLINK mailto:C.Sinex@jhuapl.edu C.Sinex@jhuapl.eduL. Miranda MooreUSA Logistics Integration AgencyNew Cumberland, PA 17070717-770-7600 (Voice), 717-770-6702 (Fax)Miranda.Moore@hqda.army.milThe submitted manuscript has been created by the University of Chicago as Operator of Argonne National Laboratory (“Argonne”) under Contract No. W-31-109-ENG-38 with the U.S. Department of Energy.  The U.S. Government retains for itself, and others acting on its behalf, a paid-up, non-exclusive, irrevocable worldwide license in said article to reproduce, prepare derivative works, distribute copies to the public and display publicly, by or on behalf of the Government.KEYWORDS:HLA, Agents, Logistics, FOM Development ProcessABSTRACT: Agents are playing a powerful role in developing decision support tools. Agents can be developed to monitor specific events and alert users when these events exceed specified conditions.  The agents can then suggest to the user different courses of action to rectify or ameliorate the conditions behind the events.In this paper we discuss how agent technology can be utilized in High Level Architecture (HLA) simulations. We present different options that can be used to implement agents in HLA applications along with their implications.  We shall give examples of how agents can be applied in an HLA simulation from the effort to develop the Comprehensive Logistics and Warfighting System.Introduction Rapid and accurate decision making is critical to achieving success in any endeavor. On the modern battlefield, decision making is made more challenging by the rapid pace at which events occur and by the volume of information that can inundate the decision-maker. In the logistics community, which is switching to a “Just In Time” approach to logistics management, the issue of rapid decision making is of paramount importance. One way to improve matters is to use “software agents” to assist the decision making process. What are Agents and How do They Work?Software agents are decision support tools. Agents can be “tasked” to dynamically observe specific information flows and, using prescribed rules, advise the decision-maker if problems arise and present him or her with a set of courses of action (COA) on how to alleviate the problem.  This process is schematically represented in Figure 1.  In the example shown, the agent monitors a flow of information and compares the data against a set of constraints that define conditions for the data being considered “acceptable,” “marginal and flagged as a possible problem,” and “unacceptable.” When data are found to be unacceptable, the agent prepares a set of alternative courses of action (COA) that are reviewed by a user.  The user can select from one of the COAs or request that additional ones be prepared.In the example shown in Figure 1, the agent has been constructed to interact with a human user, but agents can also be implemented to act in an autonomous fashion using clearly defined rules. In the discussions to follow in this paper, we shall assume that the agents interact with human decision-makers in the simulation applications. In either manner of implementation, the agents can provide a valuable decision support function by reducing the information load on the decision maker and by bringing issues to the forefront only when they deserve the attention of the decision-maker. EMBED Visio.Drawing.5  Figure 1. A Schematic Representation of How an Agent Monitors an Information Flow and Prepares Alternative Courses of Action for Consideration by a Decision-Maker.Implementing Agents in HLA SimulationsWith the introduction of the High Level Architecture (HLA) as the framework for developing future distributed simulations, it is worthwhile to consider how agent technology can be used with the HLA.  Where and how agents are located in HLA applications will depend upon the purpose of the federation and the role the agent(s) plays in the federation. As with any federation, the role for the agent should be defined as a part of the overall Federation Development Process.There are three basic approaches that can be used to implement agent technology in HLA applications.  The first approach, shown in Figure 2 (a.), involves the agent and decision-maker functionality being included in the same federate.  The second approach, shown in Figure 2 (b.), involves the agent and decision-maker functionality being located in separate federates.  The third approach, shown in Figure 2 (c.), involves using a master agent that monitors conditions over the entire federation and then directs other agents in individual federates to come up with solutions to specific problems.In the first approach, shown in Figure 2 (a.), the agent and decision-maker (ADM) federate receives the data to analyze and formulate strategies via the HLA Run Time Infrastructure (RTI). These data could be received as updates from objects the ADM federate has subscribed to.  Once the ADM has formulated a decision, the format of the decision (e.g. a new or updated plan, operational orders, updated information, etc.) would be transmitted over the RTI.  Depending on the how the Federation Object Model (FOM) was constructed, this could be accomplished using either the object update or interaction services of the RTI.Under the second approach, shown in Figure 2 (b.), the data required by the agent federate to formulate strategies is received from the RTI. Once a decision has been made by the decision-maker federate, it would be sent out via the RTI. The difference between this and the previous approach is that the strategies proposed by the agent federate for resolving the problem must also be transmitted via the RTI to the decision-maker federate along with the responses from the decision-maker federate to the strategies (accept, reject all, reject and request a new strategy, rollback to a previous state, etc.) EMBED Visio.Drawing.5  (a.) Agent and Decision-Maker Included in the Same Federate EMBED Visio.Drawing.5  (b.) Agent and Decision-Maker Included in Separate Federates EMBED Visio.Drawing.5  (c.) Master Agent Directing Individual Agents and Decision-Makers in Separate Federates.Figure 2. Different Approaches for Implementing Agent Technology in HLA Applications.In the third approach, shown in Figure 2 (c.), a “Master” agent monitors the overall conditions of the federation.  Once the master agent detects problems in the federation, it can direct agents in other federates to solve the problem, or a specific portion of the problem, directly at the federate level.An Example of an Application Using AgentsThe Distributed Intelligent Agents for Logistics (DIAL)1 program uses agent technology to assist in the development of logistics plans.  DIAL was originally designed as a planning tool to assist in the development of logistics plans.  DIAL can also play out the plan in a federation environment and switch back to planning mode, if deviations warrant the creation of a new plan.  Other programs that are utilizing intelligent agent technology include the Advanced Logistics Program and the Global Command and Control System-Army.In the initial DIAL effort, five agent strategies, listed in Table 1, were developed to assist in refining the movement information in a time phased force deployment data (TPFDD) plan. In addition, the user can undo an agent strategy and return to a previous state. The DIAL agent used a Measure of Performance (MOP) expressed in terms of the difference between the available to load date (ALD) in the TPFDD to a projected available o load date (PALD). If the PALD was less than or equal to the ALD for a unit in the TPFDD, the movement plan was considered acceptable. If the PALD was greater than the ALD but less than the required delivery date (RDD) in the TPFDD, the movement plan was considered to be marginal.  If the PALD was greater than the ALD and greater than the RDD, the movement plan was considered unacceptable. The goal of the agent was to reduce the number of units with unacceptable PALDs to the lowest level.The first approach, Figure 2 (a.), is most representative of how DIAL will be used in HLA applications.  It would be extremely difficult to efficiently utilize the second approach with DIAL for two reasons. The first is that it would be difficult to efficiently design a FOM to carry the required information back and forth between the separate agent and decision making federates. The second reason is due to time management considerations.  Both of these issues are discussed below.In a federation, information between federates can be sent in objects that are published by one federate and subscribed to by other federates or via interactions between objects in the federation.  Because of the iterative nature of the planning process, the use of interactions back and forth between the agent and the decision making federate could be employed. However, the different DIAL strategies can involve the passing of different kinds (types and sizes) of data back and forth and as a result the structure of the interactions (i.e. number and size of the interaction parameters) could be variable.  This would effectively require the ability of the FOM to dynamically reconfigure itself during the course of a simulation.  This can be demonstrated with an example.Suppose the user wanted to try and find a replacement unit to replace one that is late.  A simple interaction, such as find_replacement_late_unit, could be sent from the decision maker federate to the agent federate containing the unit line number (ULN) and the unit type code (UTC) of the unit you want to find a replacement for. After the agent searched the list of available units, it could find from 0 to many units that could be used as a replacement. In order to send that information back to the decision maker federate, the structure of the interaction would have to be variable because you could not know in advance how many matches you might find.  One could send an interaction back with all of the ULNs included, with a flag indicating if a given unit was a possible match, but that would result in a great deal of unnecessary data being sent over the RTI.Table 1. Summary of Agent Strategies Implemented in the Distributed Intelligent Agents for Logistics Proof-of-Concept Effort.STRATEGYPURPOSEAccept Unit LatenessSets the ALD to the PALD and Adjusts the EAD1, LAD2, FAD3, and RDD4 in the TPFDD by the Difference in PALD and ALD.Change Unit G-DateChange the Date at Which Mobilized Units are Required to Report to Their Mobilization StationsAdd Transportation AssetsAdd Additional Transportation Assets to the Pools Used to Move UnitsReplace Units with Other UnitsSwap Units with Similar Units Based on the Unit Type CodesDelete Units from TPFDDPuts Units on Standby Status1EAD-Earliest Arrival Date   2LAD-Latest Arrival Date   3FAD-Feasible Arrival Date   4RDD-Required Delivery DateThe time management issues revolve around how replanning is accomplished. Figure 3 shows an example of how replanning is performed in the “real-world.” The Figure shows a notional MOP that is charted during the course of an operation (which could be real or performed in a virtual environment.) Bounds have been established defining the acceptable, marginal, and unacceptable levels of performance. An agent observing the MOP would initiate replanning as soon as the MOP crosses into the unacceptable range. This replanning would occur while the operation is ongoing and would take a finite amount of time. After the agent’s plan is approved and introduced, there would be a lag time while the impact of the new plan begins to take effect.  This shows the dual “time sense” of decision making in that time is advancing for both the actors in the operation taking place and those involved in making the replanning operation.In analysis applications, which DIAL is primarily designed to support, one typically runs the simulation and periodically pauses and checks on the state of the simulation.  One can perform the checks at preset time intervals or use agents to pause the simulation if certain criteria are met indicating that some degree of replanning may be required.  If the replanning is accomplished over the RTI, a problem such as that shown in Figure 4 can occur. At federation time tstop, the simulation state indicates that replanning is required.  The agent begins to formulate a new plan for the simulation time periods tstop to tend and sends the resulting plan to the decision-maker federate over the RTI. After a series of steps in which the federation time clock continues to advance, a new plan is finally agreed to and distributed to the other federates. The simulation time must then be rolled back to the time tstop in order to resume the analysis. While a federation could be constructed to operate in this fashion, it is not felt to be an efficient use of the HLA. A more efficient approach would be to have all of the agent and decision-maker activities occurring within a specific federate and occurring while the federation is in a paused state.Using Agents in CLAWSThe Comprehensive Logistics and Warfighting System (CLAWS)2 is intended to provide a dynamic, end-to-end simulation capability for logistics and warfighting. CLAWS will be created by integrating functionality from DIAL and the Warfighting Logistics and Technology Assessment Environment. CLAWS will include the ability to simulate the generation and movement of forces within the continental United States (CONUS), their strategic movement to the theater, their movement to their final area of operations, and their use in warfighting operations. (Future versions of CLAWS may consider the movement of the forces back to their CONUS home stations.) EMBED Visio.Drawing.5  Figure 3. A Notational Example of a Measure of Performance as a Function of Time and the Impact of Replanning. EMBED Visio.Drawing.5  Figure 4. The Time Events Associated With Replanning Using Agents That Operate Over the RTI.Agents will play an important role in CLAWS in monitoring conditions in the simulation, identifying potential problems, and developing solutions to them. The Master agent concept approach shown in Figure 2 (c.) is the implementation approach being considered for CLAWS.  The Master agent would most likely be located in a CLAWS federate that represents command and control functionality of the Joint Task Force commander directing the simulated operations. The Master agent would be given the rules and constraints to identify problems and the federate with the responsibility to solve the problem.  For example, in the CLAWS concept logistics links and nodes can be made vulnerable to attack or a disruption of activities (e.g. severe weather). Based on where the node or link is in the logistics chain, the Master agent would direct an agent in another CLAWS federate to come up with a solution to how to keep the logistics chain working in spite of the disruption in the chain.Concluding RemarksIntelligent agent technology can provide valuable decision support assistance to military commanders. The agents can monitor specific information flows and identify problems according to specified rule sets and constraints.  Then, the agent can prepare a set of recommendations for the commander to consider.The key to successfully implementing agents in HLA applications is in the design of the Federation Object Model. The agent(s), like any other federation participant, plays a specific role in the federation that must be thoroughly defined and understood. The sources of the information the agent uses to reason with must be available at the federation level and transmitted over the RTI in an appropriate manner (i.e. object updates or interactions between objects.) Likewise, the methods by with the agent transmits its results to the federation must also be efficiently designed. Finally, care must be given to assessing if the agent needs to perform its reasoning and preparation of recommendations across the federation or within a given federate.AcknowledgmentThis work is sponsored by the U. S. Department of Energy under contract number W-31-109-ENG-38.ReferencesL. M. Moore, R. B. Reyns, S. R. T. Kumara, and J. R. Hummel, “Distributed Intelligent Agents for Logistics (DIAL),” Fall ’97 Simulation Interoperability Workshop, 8 - 13 September 1997, Orlando, FL.J. R. Hummel and C. H. Sinex, “Dvelopment of a Comprehensive Logistics and Warfighting Simulation System,” Fall ’98 Simulation Interoperability Workshop, 14 - 18 September 1998, Orlando, FL.C. Sinex, D. Kerchner, K. Cox, S. Basile, W. Sellers, E. Hindman, S. Loftus, and J. Hummel, “WLTAE: An HLA Federation for Logistics and Warfighting Models,” Fall ’98 Simulation Interoperability Workshop, 14 - 18 September 1998, Orlando, FL.DR. JOHN R. HUMMEL is a Program Coordinator/Manager with the Decision and Information Sciences Division of the Argonne National Laboratory, Argonne, IL. He manages development efforts with the Dynamic Information Architecture System (DIAS), the Distributed Intelligent Agents for Logistics, and the Dynamic Environmental Effects Model (DEEM). Dr. Hummel is a member of the SISO Synthetic Natural Environment (SNE) and Logistics fora and a member of the SNE PRP.DR. CHARLES H. SINEX holds a Ph.D. in Nuclear Physics from Rice University.  He is currently a Program Manager with the Joint Warfare Analysis Department at The Johns Hopkins University Applied Physics Laboratory, Laurel, MD, and is managing the Warfighting Logistics Technology and Assessment Environment (WLTAE) project. Dr. Sinex is a member of the American Geophysical Union and the SISO Logistics working group.DR. L. MIRANDA MOORE is an Operations Research Analyst at the U.S. Army Logistics Integration Agency.  She recently completed an assignment at the U.S. Army War College as a Visiting Professor and Chair of Artificial Intelligence.  She is the LIA Program Manager for the DIAL and CLAWS projects.