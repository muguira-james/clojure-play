Shared Collaborative FrameworkGregory V. FunaroDynetics, Inc.1000 Explorer BoulevardHuntsville, Alabama 35806(256) 964-4402 HYPERLINK "mailto:Greg.Funaro@dynetics.com" Greg.Funaro@dynetics.com ABSTRACT: In today’s acquisition environment of highly complex systems, an environment is needed to ensure projects meet their performance, cost, and schedule goals, while mitigating risks. Communication and collaboration is an indispensable aspect for any project. Shared collaboration is the exchange of knowledge. It often occurs during project meetings and sometimes documented in meeting minutes. A Shared Collaboration Framework is envisioned as an environment that captures project information and provides access to this information to Project Managers, System Engineers and project stakeholders. This environment is envisioned as a framework that enables simulation based, spiral based or knowledge based acquisitions. In addition, information needs to be traceable. The goal of a Shared Collaboration Framework is to share information that is traceable to individuals, requirements, documents, decisions, and rationale; i.e. who, what, where, when and why.  IntroductionProjects are failing. They are failing to contain costs, meet schedules, and mitigate risks. They are failing because projects have become highly complex systems. The term complex system refers to a system of many parts, at many different scales, which are coupled in a nonlinear fashion. The study of complex systems is bringing new vitality to many areas of science where a more typical reductionist strategy has fallen short. There are at least four scientific areas that help understand complex systems as they apply to systems engineering: Systems Theory; which focuses on complexity and interdependence of relationships.Decision Theory; an interdisciplinary area of study concerned with how decision makers make decisions.Organizational Communication; the study of how people communicate within an organizational context and the influence of or interaction within the organization.Systems Engineering: the interdisciplinary approach for enabling the completion and deployment of successful systems. On highly complex systems engineering projects, project managers, system engineers and team stakeholders convert data to knowledge and evaluate that knowledge to make decisions and mitigate risks. The objective is to contain cost, maintain schedule and meet performance requirements. Any large project today will consist of established procedures, such as: ISO 9001 and Capability Maturity Models and Integration (CMMI); Technical Interchange Meetings (TIM); Preliminary Design Reviews (PDR); Critical Design Reviews (CDR); and Test Readiness Review (TRR). Projects will mitigate risks, document plans, establish requirements, perform design, develop components, monitor action items and perform tests. Despite these important elements, our current understanding of highly complex projects is limited. Shared collaboration or the exchange of knowledge is an indispensable aspect for any project. This is why projects have meetings and document plans, requirements, design, etc. But often, especially on long term projects that may span years and evolve, information becomes lost. A framework or environment is required to capture this knowledge and make it accessible to all project team stakeholders. A framework needs to be more than a static repository of information. Information should be easily available, in a format conducive for communication by communicators. It is communication that provides the medium for exchanging information. The discipline of systems engineering originated around the time of World War II and system complexity has been growing ever since. The ever growing list of project failures and the importance of containing cost, schedule and performance is evident as a growing number of directives issued by government agencies are issued to curtail these failures. There is no doubt that a framework is needed to enable project teams, working on highly complex systems, achieve success. And yet, despite the available information, academic studies, and conducted research devoted to frameworks, large complex systems still have difficulties achieving desired performance, cost and schedule goals. It is only recently that systems engineering has evolved to address the importance of communication and collaboration. The role of knowledge in highly complex systems was recently given a high priority to NASA. December 2005, the Government Accountability Office released a report to Congressional Requesters entitled “NASA: Implementing a Knowledge Based Acquisition Framework Could Lead to Better Investment Decisions and Project Outcomes,”   which identifies the need for NASA to establish critical decision points in any product development. Knowledge acquisition is also part of the DoD Directive 5000.1 which calls for sufficient knowledge to reduce the risk associated with program initiation, system demonstration, and full rate-production.However, knowledge is not enough. In A New Approach to System Safety and Engineering, Nancy G. Leveson  dedicated over twenty years investigating the fundamental inconsistencies between the techniques engineers were using and the new types of  systems on which they were being used in performing analysis of  accident models and assessing the risk associated with the systems being built.  Ms. Leveson expands the understanding of systems engineering by identifying the importance of organizational behavior in the development of complex systems. “Large-scale engineered systems are more than just a collection of technological artifacts: They are a reflection of the structure, management, procedures, and culture of the engineering organization that created them, and they are also, usually, a reflection of the society in which they were created.”  Ms. Leveson quotes Ralph Miles Jr., description of the basic concepts of system theory:Underlying every technology is at least one basic science, although the technology may be well developed long before the science emerges. Overlying every technical or civil system is a social system that provides purpose, goals, and decision criteria.As a final tragic example, the findings from the Columbia Accident Investigation Board identified “flawed practices embedded in NASA’s organizational system” resulting in poor decision making as an underlying cause for both the Challenger and Columbia accidents.The following section identifies a project model and the traceability between the elements of a project model. This section provides a foundation for the next section to discuss the role of decision making, collaboration and the role of shared knowledge. This is followed by a discussion on frameworks.  Finally a summary section identifies the key features of a shared collaborative framework.The Project ModelRamesh-Jarke in Toward Reference Models for Requirement Traceability  provides a project model for tracing requirements intended to ensure continued alignment between stakeholders and various system outputs of the system development process. It is based on focus groups and interviews conducted in 26 major software development organizations. It is easily extended to incorporate any project and is depicted in Figure 1. The model depicts several aspects of system engineering. At the top of the model, there is the making of a classic verification and validation “V” model for software development, shown in Figure 2.Also typical for complex systems, a hierarchical, system breakdown structure of the components and subcomponents can be envisioned for the components block. Not so obvious is a hierarchal organization chart located somewhere between the stakeholders and organization needs. Below the technological artifacts, i.e. components, design, requirements, compliance verification, etc. is a large decision block, consisting of risks or critical success factors; knowledge or assumptions; and stakeholders, who make the decisions, which affect the technological artifacts.  The decision block is a representation of a shared collaboration environment. It is here where communication between stakeholders occur and here where knowledge is required. Stakeholders make decisions based on assumptions, influenced by risks, which affect the technological artifacts.  Communication is a process, to exchange information and collaborate with stakeholders to refine and improve the technical artifacts. Decision MakingFrom the model shown in Figure 1, it is apparent that stakeholders make decisions that resolve issues or conflicts; select and evaluate alternatives; depend on assumptions and rationale; and affect technical artifacts. It is apparent that alternatives require an analysis of alternatives (AoA) to address the issues and conflicts. Fundamental to the decision making process is knowledge and risks. Knowledge is gained from evaluation of data, gained from models, simulation, inspection, or experience and may be explicit or implicit. The conversion of data to knowledge is not necessarily a simple translation.Risks should be specified for both planned and unplanned boundaries. An example might be a requirement that some component operates with -10° C to 50°C, and not be damaged in -20° C to 60°C. What is not covered is what the component should do beyond these temperature limits, i.e. how should it be designed during a failure.  Behavior during failure is a critical success factor often overlooked.For decision making events to be successful, information needs to be available to critical stakeholders throughout the organizational structure in a format or structure most relevant to each stakeholder.  Currently most engineering informational exchange is done through power point presentations. This was another serious flaw pointed out by the CAIB. In addition, Richard Feynman had expressed a concern about NASA presentations in his work on the Challenger accident in 1986: "Then we learned about 'bullets'--little black circles in front of phrases that were supposed to summarize things. There was one after another of these little ---dam bullets in our briefing books and on slides."  FrameworksFrameworks are the logical structure for classifying and organizing complex information. A framework is a containment structure, which arranges information into concepts and associated relationships, allowing for the extraction of information based on particular point of view. A discussion on frameworks usually starts with an elaboration of the Zachman framework. Zachman identified two important elements. 1) The interrogative element, which identifies a systems informational representation as who, what, where, why and how. 2) The role element, which classifies information in a representational form or view that has meaning to the stakeholder that needs the information.  The Ballard-Sowa framework is a theoretical work considered more general than the Zachman framework.  Of interest in the Ballard-Sowa framework is the generation of cross elements; such as process objects, history, purpose, reason, and participation. Other more familiar frameworks are the DoD Architectural Framework (DoDAF), with its operational, technical and system views. The Federal Enterprise Architectural Framework (FEAF) with its classification of business, data, applications, and technology architectures.  The Open Group Architectural Framework (TOGAF) and Practical Guide to FEAF provide guidance on how to create and manage architectural frameworks.Couple the science of frameworks with the various acquisition processes and project development cycles such as, Spiral Based or Risk Based Acquisition, Simulation Based Acquisition, or Knowledge Based Acquisition; Waterfall Models, Evolution Models, or Adaptive models and one easily becomes confused as to what to implement.Spiral Based Acquisition and Knowledge Based Acquisition are not really that different.  Consider a lifecycle consisting of concept definition (research), concept refinement (development), product development and demonstration (test and evaluation) and production. In a Knowledge Based lifecycle, Knowledge points are identified where critical assessments are made based on the available and completeness of technological artifacts. These are risk reduction activities usually occurring at PDR, CDR, and TRR. Add the ability for the customer to abort the project and one has a Spiral based approach. Although this is a simplification of the processes, the point is all projects should have events that review and mitigate risks, based on the knowledge, information and demonstrated capabilities of the technical artifacts. That is, shared collaboration including key organizational stakeholders should happen frequently, reviewing critical success factors, identifying information gained through models, simulation, inspection, experience, etc. SummaryIn highly, complex projects, the traceability of information, the stake holder’s access to information and the presentation of information depend on the stake holder that wants it, and when or why it is needed, within the context of the organization.  A repository of documents is insufficient for stakeholders to search for information.  A shared collaborative framework must replicate the communication process and be able to provide access to useful information quickly.  Much has been written on the subject, perhaps systems engineering is on the threshold of incorporating what it is beginning to understand.  References   http://en.wikipedia.org/wiki/Complex_system 	Report to Congressional Requesters, GAO-06-218, NASA Acquisition Policies;; Implementing a Knowledge-Based Acquisition Framework Could Lead To Better Investment Decisions and Project Outcomes”, December 2005 	Nancy G. Leveson, A New Approach To System SafetyEngineering, Aeronautics and Astronautics, Massachusetts Institute of Technology; June 2002. 	Ralph F. Miles Jr., editor, Systems Concepts: Lectures on Contemporary Approaches to Systems, pp. 1–12, John F. Wiley & Sons, New York, 1973. 	CAIB Report Chapter 8: History As A Cause: Columbia and Challenger” 	B. Ramesh, M Jarke; Toward Reference Models for Requirement Traceability; IEEE Transactions on Software Engineering Vol 27, No 1, January 2001. Richard P. Feynman, "What do you care what other people think?" (New York, 1988), pp. 126-127.Author BiographiesGREGORY V. FUNARO is Project Manager for Dynetics, Inc. He has over thirty years experience as a Systems Engineer and Project Manger.  He has worked on various petrochemical projects and NASA projects. InspectionKnowledgeRISKSgeneratejustifyidentifydriveSystem Objectivesdepend on depend on depend on generateOrganizational, Operational Strategic Needsaddresssupport / opposemakeinfluenceStakeholdersselect / evaluate identifydepend on based on resolveaffectverifycreate / definesatisfyPrototypeObjectsDesignTestSimulationCompliance Verification ProceduresComponentsRequirementsRationaleDECISIONSIssues or ConflictsAlternativesCritical Success FactorsAssumptionsArgumentsFigure  STYLEREF 1 \s 2 SEQ Figure \* ARABIC \s 1 2 Project Traceability ModelServiceSubsystem Integration Test PlanSystem Integration Test PlanAcceptance Test PlanSubSystem Integration Test DesignSystem Integration TestAcceptance TestModule and Unit Code and TestDetailed DesignSystem DesignSystem SpecificationRequirements SpecificationFigure  STYLEREF 1 \s 2 SEQ Figure \* ARABIC \s 1 2 "V Model" for Software Verification and Validation