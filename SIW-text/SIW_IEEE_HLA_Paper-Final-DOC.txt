The IEEE HLA Standards:The Evolution from U.S. DoD HLA V1.3Mr. Gary M. LightnerThe AEgis Technologies Group, Inc.12565 Research Parkway, Suite 390Orlando, Florida  32826407-380-5001Mlightner@AEgisTG.comMr. Robert LutzThe Johns Hopkins UniversityApplied Physics LaboratoryLaurel, MD240-228-7599robert.lutz@jhuapl.eduMr. Reed LittleSoftware Engineering InstituteCarnegie Mellon UniversityPittsburgh, PA 15213-3890412-268-5792little@sei.cmu.eduKeywords:IEEE, HLA, Standards, ArchitetureABSTRACT: The High Level Architecture (HLA) was developed by the U.S. DoD, under the guidance of the Defense Modeling and Simulation Office (DMSO), to provide a common architecture for distributed modeling and simulation throughout the Department.  The HLA consist up of three components, the HLA Rules, the HLA Object Model Template (OMT) and the HLA Interface Specification, that are defined in a family of three interrelated specifications that should be considered as a product set.  While started in the U.S. DoD to address the Department’s M&S requirements, the HLA is promulgating rapidly to the international defense community as well as to the US and international commercial industry.  In support of this adoption of the HLA and because the U.S. DoD is not interest the getting into the standards business, the U.S. DMSO nominated the HLA for IEEE standardization.  In this way the HLA specifications could be made better and tighter through a consensus process involving the broader M&S community.  In this paper we begin by providing a background on the decision to nominate the U.S. DoD HLA specifications for adoption as broader industry standards.  This is followed by a brief discussion of the process required for creating the IEEE versions of the HLA specifications.  We then walk through the improvements that have been made in the specifications as a result of this consensus-based process, essentially defining the differences between the new IEEE 1516 version of the HLA Specifications and the previous U.S. DoD HLA V1.3 specifications.IntroductionThe High Level Architecture (HLA) for distributed modeling and simulation (M&S) was designed and developed to facilitate reuse and interoperability of M&S assets.  Initially developed by the U.S. Department of Defense (DoD) under the guidance of the Defense Modeling and Simulation Office (DMSO), the HLA specifications define an integrated approach that provides a common framework for the interconnection of interacting simulations. The HLA consists of three major components, the HLA Rules, the HLA Object Model Template (OMT) and the HLA Interface Specification.  These components are defined in a family of three interrelated standards that should be considered as a product set.  While birthed and initially nurtured in the U.S. DoD to address the Departments’ M&S requirements, the HLA is now  promulgating to the international defense and commercial industry communities.  To support and facilitate this broader adoption of the HLA, the DMSO nominated the HLA for IEEE standardization. We begin this paper with a discussion on the background of the decision to nominate the U.S. DoD HLA specifications for adoption as broader industry standards.  We follow this with a brief discussion of the process required for creating the IEEE versions of the HLA specifications.  We then walk through the improvements that have been made in the specifications as a result of this consensus-based process, essentially defining the differences between the new IEEE 1516 version of the HLA Specifications and the previous U.S. DoD HLA version 1.3 (HLA V1.3) specifications.Decision to Move HLA to Commercial StandardsThe U.S. Under Secretary of Defense for Acquisition and Technology [USD(A&T)] published a master plan for the use of defense M&S applications in October 1995.  Developed by the U.S. DoD Executive Council for Modeling and Simulation (EXCIMS), this master plan was established to pursue the future vision of M&S in the Department.  The plan is based upon a set of six high-level M&S objectives, including specific actions and responsibilities for accomplishing those objectives [1].  The first major objective identified in the U.S. DoD M&S Master Plan calls for the establishment of a Common Technical Framework (CTF) for M&S as a means of facilitating interoperability and reuse.  A high level architecture for M&S was identified as the first and most prominent component of this CTF.  The requirements for such an architecture were based on the premise that the needs of all M&S users cannot be satisfied by any one simulation system. There was a need for an architecture that would support composing unified simulation environments from multiple interacting simulation systems.  In addition, this architecture needed to be widely applicable across the full range of DoD application areas and the specification of the architecture was not to prescribe a particular implementation approach. Based on the synthesis of industry inputs and previous DoD architecture efforts, the DMSO led Architecture Management Group (AMG) produced the initial definition of the HLA in March 1995.  Through a series of prototyping activities the initial definition was evolved to a baseline definition which was released in August 1996.  After their baseline release, the U.S. DoD HLA standards continued to mature and evolve with Release V1.3 occurring in February 1998.  The AMG developed the HLA with the goal of promoting and facilitating interoperability and reuse of Department M&S assets across a wide range of military simulation systems.  While pursuing these goals through the evolution of the U.S. DoD HLA standard, the process of establishing commercial versions of the standard was initiated.  From the early stages of the HLA development it became evident that the architecture would not be unique to defense related applications.  Rather it was clear that the HLA would support distributed simulation in and across many domains of application.  In addition it was clear that broadening the community of users evolving the HLA specifications would result in a set of HLA standards matured by public scrutiny and consensus.  This understanding coupled with the fact that the DoD was moving rapidly toward a policy of using and supporting commercial standards as opposed to developing DoD unique standards, convinced the AMG of the need to propose the U.S DoD HLA specifications as formal industry standards.  This decision was supported by the high level of interest in the HLA expressed by the commercial and international communities.  Not surprisingly there are numerous options for establishing industry standards for technologies like the HLA.  After a review of these options and interaction with the broader community, the AMG decided to pursue industry standards on several fronts as well as to work with the international community in support of its adoption of the HLA.  The decision was made to initially work with the Object Management Group (OMG) and the Institute of Electrical and Electronics Engineers, Inc. (IEEE) to bring forth industry standards for the HLA.  This paper is focused on the process of developing the IEEE HLA standards.IEEE Standardization  ProcessThe Simulation Interoperability Standards Committee (SISC) was selected as the sponsoring body for moving the U.S. DoD V1.3 specifications forward for IEEE Standardization.   The sponsoring agency works with the IEEE Standards Association (IEEE-SA) and the IEEE Computer Society Standards Activity Board.  The first order of business was to understand the IEEE Standards Development Process [2] (see Figures 1 & 2).  The first step required in the process is the submission of Project Authorization Requests (PAR) for each proposed specification development activity.  For the HLA, three PARs were drafted and submitted Figure 1:  IEEE Standards Development Process 1to the IEEE-SA.  Based on the submitted PARs, the IEEE-SA approved three IEEE specification development projects:P1516 HLA Framework and RulesP1516.1 HLA Interface SpecificationsP1516.2 HLA Object Model Template (OMT)Next the HLA Working Group was formed.  With the DoD HLA V1.3 specifications [3,4,5] serving as the starting point, this working group drafted the three interrelated IEEE HLA specifications.  Once completed, the draft specifications were recommended for movement to the balloting phase.  The SISC voted to move the drafts forward for balloting in March of 1999.  Balanced ballot groups were then formed in accordance with IEEE rules [6] and the draft specifications were balloted by the community for the first time.  Figure 2:  IEEE Standards Development Process 2The first ballot fell short of achieving the required 75% approval for any of the three draft specifications. So the next step was to form three Ballot Resolution Committees (BRC) who were charged with working to resolve all comments and concerns received as part of the balloting.  While a challenging and at times daunting task, the BRCs were able to resolve most of the comments and recommended the sponsoring group approve going to the second ballot (recirculation).  The SISC approved moving to the recirculation ballot in March of 2000.  At the time of this writing that second ballot was underway.  Based upon the interactions during the resolution activity, the BRCs were confident the specifications would pass the second ballot.  If this is the case, then the sponsoring group (SISC) will forward the specification packages to the IEEE-SA for review and approval.  At the time of this writing it was expected that this would occur in September 2000.A Consensus Building ApproachThis IEEE consensus-based standardization process has resulted in the development of a tighter, better specification of the HLA.  The effort has been extensive, with many people participating.  And while it seemed to be a long and arduous process at times, the broader M&S community has been well served by having gone through it.The three HLA balloting groups drew their members from the same community of users that will ultimately design and implement HLA federations using the IEEE 1516 specifications.  Because these individuals have a vested interest in how the specifications evolve, they spent a great deal of effort in reviewing each of the draft specifications throughout the drafting and balloting phases.  As a result of effort, a wide variety of technical issues relevant to the execution of distributed simulation applications in each reviewer’s domain of interest were received and addressed.  The amount of comments and suggestions submitted and addressed speaks to the comprehensive nature of this consensus building process (see Table 1).Table  SEQ Table \* ARABIC 1: Comments Addressed in Developing IEEE HLA SpecificationsHLA WG 1HLA WG 2HLA WG 3First BallotIEEE P1516371813224IEEE P1516.198165138448IEEE P1516.2787287264The BRCs have been very diligent in working to satisfy the expressed requirements and concerns of the HLA community through the incorporation of an appropriate set of modifications to the HLA specifications. This is evidenced by the high acceptance rate of balloter comments.  The resolution of these community needs and concerns (which for the most part have been raised through practical use of the HLA), has resulted in a tighter, more mature IEEE 1516 HLA specification product.  This same set of users has also exposed a number of errors and inconsistencies in the balloted drafts.   The specifications are “cleaner” and more usable as a result of correcting these errors and inconsistencies.  In addition, since the original HLA specifications were primarily developed by U.S. DoD organizations, the design of the architecture was (as would be expected) strongly influenced by defense-related issues and interests.  The IEEE standardization process has allowed a much wider community of potential users to directly contribute to the technical direction of the HLA, facilitating broader utilization of the architecture outside of the U.S. DoD.  In the sections that follow we outline the essential improvements made in going from the U.S. DoD V1.3 HLA specification to the IEEE 1516 series version of the specifications.   It is important to note that this paper presents only a summary of the changes made to the HLA Specifications and thus is by necessity quite terse in many areas of description.The Evolution of IEEE 1516: HLA Framework and RulesIn evolving from the U.S. DoD HLA V1.3 HLA Rules specification to the IEEE 1516 standard [7], there was vigorous and spirited discussion and debate.  This was expected given the nature of establishing rules for a community as broad as that working to define the HLA. While there were numerous technical issues raised as part of the Drafting and Balloting phases of the process, the exact wording of the ten rules themselves remained unchanged from the U.S. DoD V1.3 HLA specification.  With few exceptions, there was broad consensus that the Rules themselves were sound, valid and necessary.  The majority of the technical concerns that were raised had to do with insuring proper interpretation of the Rules and their accompanying rationale.   The accuracy of descriptive text, definitions of terms and acronyms and consistency and correctness in wording and terminology usage were all areas where improvements were realized.Definitions and AcronymsInsuring the capture of a complete and valid set of definitions and acronyms that support the specification is a critical activity.  The majority of the comments received on the Rules specification were related to the definition of terms.  This is not surprising and was a very welcome part of the process as it is critical that standards be supported by a well founded, consistent and agreed upon set of terms and definitions.  One of the improvements realized in IEEE 1516 was the evolution from an initial approach where the definitions and acronyms used in each individual specification were captured in that specification, to an approach where a common master set of definitions and acronyms used in any of the three interrelated specifications are reflected in all three documents.  The result of this changed approach is a tighter, more robust and consistent set of definitions and acronyms.Narrative Descriptions and RationaleThe evolution also resulted in improvements in the descriptive narrative and additional rationale that accompany each Rule.  First and foremost a Rationale Annex was created and all non-normative text and wording that served to help the reader better understand the reasoning behind a particular Rule yet which was not a direct amplification of the Rule itself, was moved to this annex.  This served to remove ambiguity and the possibility of confusion by insuring the narrative description in the normative part of the specification was indeed just that.   Any additional wording that helped clarify the rationale for the particular Rules is also now clearly understood as such by being in the annex.In addition to this improvement, changes to insure correctness, consistency and clarity were made to the descriptive narratives and rationale annex themselves.  For example there were numerous cases where the term RTI (Runtime Infrastructure) was being incorrectly used in places where the narrative and/or rationale needed instead to refer to the Interface Specification.  Such incorrect usage can introduce implementation aspects into the specification that clearly should not happen.  An example of improving consistency is the case where the terms simulation and federate were being used interchangeably throughout the specification.  Clearly this led to a lack of clarity and introduced room for confusion in interpreting the specification.  A complete scrub of the document was made to identify all usage of these terms and clean them up and insure consistent and correct usage.   Of course there were also cases where the narrative descriptions or rationale wording were just not as clear and concise as they could be in conveying the message intended.  Thus, based on comments and interactions during both the drafting and ballot resolution phases of the process, improvements were made to enhance the clarity and conciseness of the wording and better communicate the intent of the associated Rule. Format And StructureThe process of evolution also facilitated format and structural changes.  Numerous editorial changes were made to address formatting concerns and improve the structural nature of the document.  A more descriptive narrative was added to better introduce the document as well as IEEE prescribed up-front matter like an abstract, copyright information, disclaimers and participants in the process.  Finally, based on consensus across the three balloting groups, the discussion that was already in the OMT Specification relative to object-oriented concepts versus the HLA object model concepts, was included (after modifications based on balloting) in both of the other two specifications.  This will insure readers of the HLA specifications will be clear about the differences between these concepts and can better understand the information being defined in the HLA specifications.The Evolution of IEEE 1516.1: HLA Interface SpecificationSignificant improvements were realized in evolving the IEEE 1516.1 standard [8] even though the actual changes made were not extensive.  While not extensive, the changes made in some places were quite intricate, especially in the areas of interaction among the three HLA specifications.  U.S. DoD HLA V1.3 compliant federates will require modification to come into compliance with IEEE 1516.1, but the extent of the changes should not be significant.  The publish/subscribe, register/discover, update/reflect, and send/receive general HLA mechanisms are largely unchanged.  The changes induced by the IEEE standardization process can be thought of as being around the fringes.  The changes made as part of this evolution are described in the sub-sections that follow which are grouped by Interface Specification clause.Data Distribution ManagementProbably the part of existing federates that will have to be modified the most due to IEEE 1516.1 inspired changes is Data Distribution Management (DDM), if the federate does in fact use DDM.  The space and extent concepts were removed from the DDM mechanism.  They were overkill, extraneous, and overly complicated.  While these changes simplified DDM, no functionality was lost.  Additionally, regions and ranges now have designators in the narrative part of the specification and the three language specific APIs were changed in the DDM area to define abstract data types or classes for the DDM regions and ranges.  As a result, a joined federate will now communicate these values to the RTI via handles identifying RTI defined data structures.  Previously a joined federate used programming language primitive data type versions of these values to communicate to the RTI.  Finally, the programming language datatype of a bound was changed from float to integer and the upper bound of each dimension in a federation execution is now defined in the respective FOM Description Document (FDD).Programming Language Mappings ClauseA new major clause was added to the Interface Specification that maps the abstract view of the services in the narrative body of the specification (clauses 4-10) to the concrete view on the APIs (Annexes A-C).  This new clause describes the following mappings:narrative  designators -> handles/names in the APIsnarrative  services ->  methods in the APIsnarrative abstract data types ->  classes or data types in the APIs.This clause will help federate developers understand the details of the service narratives as they relate to the particular federate programming language and associated API. Management Object ModelThe Management Object Model (MOM) description was changed to use the standard OMT tables.  Since the MOM is part of an HLA object model, this seemed to be a better way to describe the MOM.  Additionally, the MOM now utilizes default types defined in the OMT specification.  This makes for a slightly simpler MOM since it needs fewer MOM specific data types.  In addition, the usage of DDM has been added to the MOM.  All attributes of instances of the class HLAmanager.HLAfederate and all interactions of the class HLAmanager.HLAfederate.HLAreport are now associated with the MOM defined Federate dimension.  Additionally, all interactions of the class HLAmanager.HLAfederate.HLAreport.HLAreport ServiceInvocation are associated with the MOM defined Federate and ServiceGroup dimensions.  This allows the joined federate subscribing to these classes to further sieve the resulting information. Given the existing connection between the Declaration Management (DM) and DDM mechanisms, federates need not be aware of DDM issues if all they do is subscribe to these MOM classes via DM services.Enhancements to the MOM error handling services were realized through the addition of a new interaction, HLAfederate.HLAreport.HLAMOMalert.  This interaction is sent by the RTI and reports when a MOM interaction without all the necessary parameters is sent by a joined federate, or when an interaction that imitates a joined federate's invocation of an RTI service is sent by a joined federate and all the service's pre-conditions are not met.Normally when either a save or restore is in progress, joined federates cannot send interactions.  However, in order to help solve federation execution save/restore problems, it was determined that it would be useful for a federation execution manager to perform certain MOM actions.  In support of this, the following MOM interactions may now be sent by a joined federate during save/restore as appropriate: HLAresignFederationExecution when either a save or restore is in progress, HLAfederateSaveBegun or HLAfederateSaveComplete when a save is in progress, and HLAfederateRestoreComplete when a restore is in progress.The HLAmanager.HLAfederate.HLAreport.HLAreport ServiceInvocation interaction was added to the MOM.  This interaction is sent by the RTI whenever an HLA service is invoked, either by a particular joined federate or by the RTI at a particular joined federate, and Service-Reporting is enabled for that particular joined federate.  This interaction allows federation execution managers to monitor RTI service invocations (and their arguments) throughout a federation execution on a joined federate-by-joined federate basis.  Service-Reporting is Enabled and Disabled by a multifaceted relationship between the following: the value of the HLAreportingState parameter of HLAmanager.HLAfederate.HLAadjust.HLA set ServiceReporting interactions and the Service Reporting Switch in the federation execution's FDD.  To keep from being embedded in an infinite loop of receiving interactions; a particular joined federate cannot subscribe to the HLAmanager.HLAfederate.HLAreport. HLAreportServiceInvocation interaction when Service-Reporting is enabled at that joined federate, and vice versa.Additional MOM changes were made to:  support federate compliance testing -  Currently, test tools (such as the Federate Compliance Testing Tools) that attempt to ascertain the order in which individual joined federates invoke RTI services have no way to reliably do so.  The problem is that the RTI's implementation of the MOM may be neither time regulating nor time constrained, and thus there is no guarantee on the order in which ReportServiceInvocation interactions are delivered.  So, a new parameter (HLAserialNumber) was added to the ReportServiceInvocation interaction.  Adding per-joined federate serial numbers to ReportServiceInvocation interactions is easy to implement by an RTI, and allows the stream of ReportServiceInvocation interactions received by a joined federate to be correctly sorted in the order in which the service invocation were made by the joined federate under examination.provide more joined federate info (e.g., HLAobjectInstancesDiscovered)support sync “deadlock” handling (e.g., HLAreportSynchronizationPoints & HLAreportSynchronizationPointStatus)Finally, the MOM introductory text and definitions were enhanced. While these MOM changes may look daunting, they are really evolutionary, as opposed to revolutionary.  The main changes a joined federate which currently uses the MOM will have are in respect to the data types of MOM related object class arguments and interaction class parameters.  Most of the changes described here are additions to the MOM.Time ManagementThe main change to the Time Management area (which may have an impact on current federates) was to add the time stamp argument to Receive Order (RO) messages.  This has two big benefits:  it allows joined federates interacting with or without Time Stamp Order (TSO) messages in the same federation execution to get the same data, and it provides a way for non-TSO joined federates to pass time values.Another change with possible impact to currently built federates is that joined federates might now get retracts for messages which they never received.  This was changed so RTIs do not have to retain sent messages for an indeterminate amount of time, thus reducing their space requirements.The last time related change which has impact on current federates is that now a federation must provide its own abstract data type (ADT) for time stamps and time durations.  This is to allow federations to define the programming language data types of the time-related entities to be whatever is sensible.  Also, a federation is required to provide certain methods (e.g., subtract, is equal to) for these federation defined ADTs because the RTI must reason on entities of these types.  The specification provides examples of these ADTs based on 64 bit signed integer for each of the three supported programming languages.Finally, the time related semantics were clarified for theFlush Queue Request service,event retraction,time advancement,mixed time federations and dynamic regulating/constrained enables/disables, andtime management related tables,and the following time related terms were changed to be more descriptive:Lower Bound Time Stamp (LBTS) -> Greatest Available Logical Time (GALT)Minimum Next Event Time (MNET) -> Least Incoming Time Stamp (LITS)Event - > MessageFederation time -> logical time.Ownership ManagementChanges were incorporated in the Ownership Management services to make the instance attribute release protocol more symmetrical with the instance attribute acquisition protocol.  The principal impact of this modification is to change the name of the Attribute Ownership Release Response service to Attribute Ownership Divestiture If Wanted.  Additionally, the Attribute Ownership Divestiture Notification † was modified to be a two step protocol with the following services:Request Divestiture Confirmation †Confirm DivestitureThis two step protocol allows the owning joined federate to control when instance attribute ownership is actually divested during a negotiated ownership transfer.Other improvements were realized by renaming several services to achieve added consistency and by adding a user-supplied tag argument to the following services to support transfer of “last valid value” and “internal state” information:Confirm DivestitureAttribute Ownership Acquisition Notification †Federation ManagementIn order to deal with situations where misbehaving or "dead" federates are impacting the completion of a save or a restore, new Federation Management services were added to allow a joined federate to determine the status of the save and restore actions.  The following four services were added:Query Federation Save StatusFederation Save Status Response †Query Federation Restore  StatusFederation Save Restore Response †These save and restore status requests are each two step protocols because they might require distributed knowledge.Other improvements were made in the Federation Management services as well.  Synchronization point state charts were added to enhance the description of the synchronization point mechanism. In order to give federation executions more information when there are problems during a federation execution, a failure reason argument was added to the Synchronization Point Registration and Restore services.  The semantics of timed saves (invocation of the Request Federation Save service with a timestamp argument) in mixed time federations (those with joined federates which aren't all time regulating and time constrained) were clarified. The concept of Federation Execution Data (FED) was changed to be FOM document designator (FDD).  Now, there is not a special FED file. Instead, a FOM is provided to the Create Federation Execution service.Declaration ManagementImprovements were also achieved in the Declaration Management services.  The semantics of object class attribute Publication/Subscription services were change from replacement to additive.  For example: consider the following two service invocations in U.S. DoD V1.3 with replacement semantics: Subscribe Object Class Attributes (object class A, attributes X & Y)Subscribe Object Class Attributes (object lass A, attributes X & Z)The resulting state would be a subscription to the X and Z attributes of object class A.  In the new 1516 version with additive semantics, the resulting state after the same two service invocations would be a subscription to the attributes X, Y, and Z of object class A. The publish actions work in an equivalent way.  The "un" services now provide the removal capability.  A joined federate may publish/subscribe at various point in its system and these areas need not be aware of what other parts of the system did.  Also, this is compatible with the DDM region semantics.  Finally, the DDM object class attribute subscription with regions service was also made additive.Object ManagementImprovements here include the fact that Object instance handles are now uniform and unique in a federation execution and all object instance names are federation execution-wide unique, whether they are execution or RTI provided.  Additionally, Transportation and Order types of Remove Object Instance † messages are based on the types of the HLAprivilegeToDeleteObject instance attribute of the object instance being deleted.Support ServicesSeveral significant enhancements have been achieved in the Support Services area.  In order to be compatible with the new OMT specification, all names are now case sensitive and in Unicode.  RTI and service actions are better explained for the advisory services.  The following new/different services were added/changed to support the new DDM mechanism:Get Dimension Upper BoundGet Dimension Handle SetGet/Set Range BoundsNew services had to be added to support the addition of DDM to MOM.  The federation and the RTI have to agree on the normalization functions for the two MOM DDM dimensions (Federate and ServiceGroup).  The best way to do this is for the RTI to provide the functions for use by joined federates', so the following services were added:Normalize Federate HandleNormalize Service GroupFinally, the following services were added to support federate initialization/shutdown and federate/RTI interaction:Initialize  RTI servicesFinalize RTI servicesEvoke (Multiple) Callback(s)Enable/Disable CallbacksAPIsThe following improvements were made to all three APIs:generally cleaned up - the composite files were rearranges and restructuredaddition of example time ADTs  (based on integer 64)modified for API/body exception/signature consistencyservice changes/additions/deletions as dictated by changes in body of the specificationaddition of  wide (2 byte character) strings for Unicode supportIn the Java API, all classes for which federates may hold instances now implement java.io.Serializable to support save/restore.The following changes were made in the C++ API:new header file organizationre-organized to separate platform/compiler/ RTI implementation specific elementsseparate files for individual classesuse of C++ standard classes addedadded opaque data types - provides type-safe interface to common data typeslarger use of templates.The IDL API was removed.Miscellaneous ImprovementsThe definition of the User-Supplied Tag entity was expanded to have a length and data buffer pointer.  This provides a general bag of bytes for the federation to use.  The User-Supplied Tag argument was added to the following services:Request Attribute Value UpdateProvide Attribute Value Update †The User-Supplied Tag delivery semantics for the Update Attribute Values/Reflect Attribute Values † mechanism were clarified.A new switch, Auto-Provide Switch, was added.  This switch indicates whether the RTI should automatically solicit an attribute value update from an instance attribute owning federate when that instance attribute becomes in-scope at another joined federate.  The initial setting for this switch comes from the Switches table in the FDD at federation execution creation time.  The switch is modifiable during a federation execution via the HLAmanager.HLAfederation.HLAadjust. HLAset Switches MOM interaction.Another new switch, Convey Region Designator Set Switch, was added.  This switch indicates whether the RTI should provide the optional Sent Region Designator set argument with invocations of Reflect Attribute Values † and Receive Interaction † services.  The initial setting for this switch also comes from the Switches Table in the FDD at federation execution creation time.  The switch is modifiable during a federation execution via the HLAmanager.HLA federation.HLAadjust.HLAsetSwitches MOM interaction.  The legal transportation types for a federation execution are now defined in Transportation Type Table in the FDD at federation execution creation time. A Rationale Annex was added to the specification.  This annex contains information that is not an official part of the standard but explains the thinking behind various parts of the specification.   In addition, a State Chart reference section was added to all services.  This section lists all state charts that are pertinent to each service.  And of course many editorial changes were made to improve the document; including a general clean up of terminology and text.The Evolution of IEEE 1516.2:  HLA Object Model Template (OMT)The evolution from the U.S. DoD HLA OMT V1.3 to the IEEE 1516.2 standard [9] saw the most significant changes being incorporated in the datatyping area.  Numerous users of the OMT expressed concern during the IEEE standardization process that support for datatype specification in the U.S. DoD HLA OMT V1.3 was too limited, and they offered many helpful suggestions as to how the situation could be improved.  These suggestions have manifested themselves in a series of new tables, which allow users to construct arbitrarily complex datatypes from members of other datatyping tables.  A short summary of these new tables is provided below [10].  Note that these tables replace the Attribute/Parameter Basetypes (Annex B) and the Enumerated and Complex Datatype Tables from U.S. DoD OMT V1.3. Basic Data Representation Table:  This table provides a means of describing the fundamental building blocks upon which all other datatypes are defined.  Encoding information is provided for each basic data representation.Simple Datatype Table:  This table provides a means of associating an essential set of information (name, units, resolution, accuracy, and semantics) with a basic data representation from the previous table.  Through this association, the level of definition necessary to directly utilize the datatype in describing HLA data elements is provided.Enumerated Datatype Table:  This table provides a means of describing data elements that can only assume a discrete, finite set of possible values.  Columns are provided to specify the name of the datatype, the list of possible enumerations (and associated values), the basic data representation associated with each enumerator value, and the overall meaning of the datatype.Array Datatype Table:  This table provides a means of describing indexed homogenous collections of datatypes.  Columns are provided to specify the name of the array datatype, the datatype of each individual array element, the total number of elements in the array, the array encoding, and the overall meaning of the datatype.Fixed Record Datatype Table:  This table provides a means of describing heterogenous collections of datatypes (i.e., complex data structures).  Columns are provided to specify the name of the datatype, the name, datatype, and meaning of each field in the structure, and the semantics and encoding for the entire fixed record.Variant Record Datatype Table:  This table provides a means of describing data items whose datatypes depend on the value of a discriminant.  Columns are provided to specify the name of the datatype, the name, enumerated datatype, and possible enumerator values for the discriminant, the name, datatype, and meaning of each alternative (one alternative per enumerator value), and the meaning and encoding used for the entire variant record.In addition to the datatyping tables, there have been several new tables added to IEEE 1516.2 to address a variety of user needs expressed throughout the standardization process.  A short summary of these new tables is provided below:Time Representation Table:  This table provides a means of defining the time representation abstract datatype (ADT) provided to the RTI when a federate joins a federation.  It also provides a means for identifying the ADT specified for lookahead values (note:  lookahead is used to increase the parallelization of federate processing).User-supplied Tag Table:  This table provides a means of describing the tags that may be supplied with certain HLA services.  The first column of this table indicates the HLA service categories for which tags can be provided.  The remaining columns are used to define the datatype of each tag, and to describe the use of the datatype for that tag.Synchronization Table:  This table provides a means of describing synchronization points.  Synchronization points are used to synchronize federate activities during a federation execution.   Columns are provided to indicate the label for each synchronization point, the datatype used for the user-supplied tag (if applicable), the capability of the federate which respect to each synchronization point (for SOMs only), and the usage or overall meaning of the synchronization point. Transportation Type Table:  This table provides a means of defining the mechanisms used for transporting data between federates.   Columns are provided to indicate the name and description of each transportation type.   Although two required transportation types are preexisting in the table (HLAreliable and (HLAbestEffort), other transportation types may be added to the table when an RTI is used that can support them.Switches Table:  This table provides a means of defining the initial setting of various RTI switches.  These switches control whether certain RTI capabilities should be enabled or disabled at the beginning of an HLA federation execution.  The first column of this table identifies the names of these switches, and the second column defines its initial setting.In order to provide support for IEEE 1516.1 modifications in the Data Distribution Management (DDM) area, the Routing Space Table defined in U.S. DoD OMT V1.3 has been replaced with a new Dimensions Table.  This table provides a means of associating a datatype, upper bound, and normalization function with each dimension, and a default range for the dimension when it has been left unspecified but is then used in an overlap calculation.  Minor changes have also been implemented in the Common Normalization Functions (IEEE 1516.2 Annex B) to remain consistent with IEEE 1516.1.Changes to the other existing OMT tables are relatively minor.  In the Object Model Identification Table, two new rows have been added to the table to support the identification of reference sources and any other information relevant to the reuse of the federate.  In both the Object Class Structure Table, and the Interaction Class Structure Table, the required root class has been made explicit in the table, and the optional reference to a continuation table that was previously supported in the last column of the table (in U.S. DoD OMT v1.3) has been removed.  In the Attribute Table and Parameter Table, several columns (e.g., “Cardinality”, “Units”, “Resolution”, “Accuracy”) have been removed, since this same information is now provided in the datatyping tables.  In addition (for these last two tables), a small number of terminology changes were incorporated, and two new columns were added to support the identification of transportation types and delivery order types for both object attributes and interactions.SUMMARYIn this paper we have provided a quick background on the decision to move the HLA towards industry standardization, specifically IEEE Standards.  We discussed the process used to evolve the U.S. DoD V1.3 versions of the HLA specification to the IEEE 1516 series versions of the HLA.  We then walked through the essential improvements that have been made as a result of a very focused consensus building process and discussed relevant changes between the IEEE 1516 version of the HLA Specifications and the previous U.S. DoD V1.3 HLA Specifications.  For more information, readers are referred to the DMSO HLA Home Page at  HYPERLINK http://hla.dmso.mil http://hla.dmso.mil and the Simulation Interoperability Standards Organization (SISO) web site at  HYPERLINK http://siso.sc.ist.ucf.edu/ http://siso.sc.ist.ucf.edu/.  Of course the reader may consult any of the reference materials highlighted in this article.REFERENCESUnder Secretary of Defense for Acquisition and Technology.  “Department of Defense Modeling and Simulation Master Plan, DoD 5000.59-P”, October 1995.Zimmerman P., Symington S., “The IEEE Standardization Process”, HLA Architecture Management Group (AMG) archives ( HYPERLINK "http://hla.dmso.mil/amg/meetings/31-35.html" http://hla.dmso.mil/amg/meetings/31-35.html), August 1999.U.S. Department of Defense (DoD).  “High Level Architecture Rules, Version 1.3”, February 1998.U.S. Department of Defense (DoD).  “High Level Architecture Interface Specification, Version 1.3”, February 1998.U.S. Department of Defense (DoD).  “High Level Architecture Object Model Template Specification, Version 1.3”, February 1998.The Institute of Electrical and Electronics Engineers, Inc.  “IEEE Standards Association Operations Manual”, May 1999.The Institute of Electrical and Electronics Engineers, Inc.  “IEEE P1516/D5: Draft Standard for Modeling and Simulation (M&S) High Level Architecture (HLA) – Framework and Rules”, March 2000.The Institute of Electrical and Electronics Engineers, Inc.  “IEEE P1516.1/D5: Draft Standard for Modeling and Simulation (M&S) High Level Architecture (HLA) – Federate Interface Specification”, March 2000.The Institute of Electrical and Electronics Engineers, Inc.  “IEEE P1516.2/D5: Draft Standard for Modeling and Simulation (M&S) High Level Architecture (HLA) – Object Model Template (OMT)”, March 2000.Lutz, Robert R., "Migrating the HLA Object Model Template to an IEEE Standard", Johns Hopkins APL Technical Digest, pp 337-347, July 2000.Author BiographiesGARY LIGHTNER (MIKE) is the Director of the Professional Training and Education Group at The AEgis Technologies Group, Inc.  In this role he establishes, communicates and fosters the vision, goals and agenda for providing comprehensive training and education offerings on simulation technologies and techniques and their application in achieving real world objectives.  In addition he is the Project Manager for the Defense Modeling and Simulation Office (DMSO) High Level Architecture (HLA) Integrated Training Program.  Mr. Lightner is on the Board of Directors of the Simulation Interoperability Standards Organization (SISO), Inc. and a member of SISO’s Standards Activity Committee.  He has served as the Drafting Group Chair and currently the Ballot Resolution Committee Chair for the development of the Draft IEEE 1516 HLA Framework and Rules specification. Mr. Lightner received his B.S. degree in Computer Science from the College of Engineering, Arizona State University and his M.S. degree in Computer Science from the Air Force Institute of Technology.ROBERT LUTZ is a Principal Scientist at the Johns Hopkins University Applied Physics Laboratory (APL).  He has over 19 years of experience in the design, implementation, and evaluation of computer modeling and simulation (M&S) systems.  He received his M.S. degree in Operations Research from the State University of New York at Stony Brook in 1980.  Since joining APL in 1992, Mr. Lutz has assumed leadership roles on several M&S programs, including the Naval Simulation System (NSS), Joint Warfare System (JWARS), and the Simulation Based Acquisition (SBA) initiative.  Currently, he is the technical editor for IEEE Standard P1516.2 (Object Model Template), and actively supports several other HLA-related projects for the U.S. Defense Modeling and Simulation Office. REED LITTLE is a Senior Member of the Technical Staff at the Software Engineering Institute, Carnegie Mellon University.  He is currently the editor and chief referee for the IEEE standardization of the High Level Architecture (HLA) Interface Specification.  In addition he investigates software architecture representation issues, especially the relationship to and support of software product lines.