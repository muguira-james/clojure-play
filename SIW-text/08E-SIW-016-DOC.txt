Geospatially Enabled Modeling and SimulationThomas StanzioneMÄK Technologies68 Moulton StreetCambridge, MA 02138(617) 876-8085 x109tstanzione@mak.comJ. David LashleeU.S. Army Topographic Engineering Center7701 Telegraph RoadAlexandria, VA  22315(703) 428-7133J.David.Lashlee@erdc.usace.army.milKeywords:Terrain Representation, Geographic Information System, Computer Generated Forces ABSTRACT: The US Army Topographic Engineering Center is using ESRI GIS technology to bring modeling and simulation (M&S) into the command and control (C2) domain. The GIS Enabled Modeling and Simulation (GEMS) project is developing a common geospatial database approach, using the ESRI components of the Commercial Joint Mapping Toolkit (CJMTK), to allow entity-based simulations to operate directly on GIS data. This re-engineering of the modeling and simulation terrain generation process links simulation and map-based visualization systems directly to the GIS environment, to support medium to high fidelity modeling and behaviors. Current work is expanding these capabilities to utilize CJMTK enterprise services for data and information that support both C2 and M&S applications. Actionable geospatial information is being used for higher level simulation behaviors. This technology is an enabler for mission planning, mission rehearsal, and predictive situation awareness, and supports true train as you fight capabilities.1. IntroductionCurrently, modeling and simulation (M&S) applications require specialized terrain data formats that are significantly different than those used for operational purposes.  As command and control systems move into the 21st century, they are increasing looking to embed simulation capability for training, course of action analysis, mission planning, and other “what if” scenarios. These simulation models need terrain representations, and this project is using existing, GIS-based terrain representations, such as those available in the Commercial Joint Mapping Toolkit (CJMTK), to satisfy the modeling and simulation requirements for embedded systems.Considerable time and effort is expended in converting, or compiling source data to generate M&S databases. Simulation tools typically require specialized formats optimized for visualization and simulation – such as CTDB, OpenFlight, OneSAF Terrain Format, etc.  Generating these databases requires an extensive process of identifying source data, reconciling coordinate systems and resolutions, converting formats, cleaning up disparities between datasets, and adding additional feature (e.g., textures).  There are a number of problems that arise from having specialized M&S terrain formats that are different from operational systems. The process of generating M&S databases is largely manual, time-consuming, and expensive – and much of the work is simply discarded upon completion (e.g., corrections to data discrepancies are not fed back into source datasets). The time delays involved limit the currency of data, and make it difficult or impossible to utilize simulation tools for time-critical applications such as mission planning, mission rehearsal, and predictive situational awareness. As simulation systems evolve, terrain formats may need to change, making it hard to maintain and convert older databases to the new formats. There is no interoperability of geospatial data between simulation systems and other military command and control or planning systems, forcing development of multiple geospatial systems to support all of the applications. Different geospatial datasets for multiple applications have to be correlated to ensure each system is using the appropriate data. Once built, multiple geospatial datasets are harder to maintain since each copy has to be maintained separately. This is especially a problem for simulation systems that may modify the terrain during execution (i.e. dynamic terrain), since there is no easy mechanism for getting these changes into the other geospatial datasets.A common geospatial database that can be used by different military systems can be used to alleviate the above problems.  The many resultant benefits include reuse and leveraging of geospatial content. Each year a great deal of effort is put into designing and building geospatial data for military applications.  For simulation systems, this effort is typically restricted to use within a specific simulation system.  Essentially, the content is “locked” to the specific simulation.  If the geospatial data could be provided in a common format, other applications could reuse this valuable intellectual property.  Another benefit of a common geospatial database is increased interoperability between systems. Since all applications would be working from the same geospatial dataset, interoperability is greatly improved. Mission planning could be performed on operational data that is also being used by simulations performing course of action analysis, leading to more meaningful results than is available today, due to the differences between operational and simulation geospatial data. Timely support for mission rehearsal would also be realized. Mission rehearsal requires access to the most recent tactical data. The ability to operate from current operational databases will enable mission rehearsal applicationsBy developing tools that are based on existing geospatial data systems, such as the Commercial Joint Mapping Toolkit, the cost and time to build geospatial datasets for multiple applications is reduced.  Having to learn a single geospatial data development system instead of multiple systems for the different applications would be much easier. Geospatial datasets could also be built incrementally, without having to stop and compile all the different runtime formats, improving datasets over time while still having useful data for specific operations. Since everyone would be essentially using the same geospatial data, correlation is practically guaranteed. The need to correlate multiple datasets would be eliminated. Also, management of the geospatial data would be much easier since it would be taking place in one geospatial system instead of many different tools.Finally, the benefit of having dynamic capabilities would vastly improve the static world of M&S terrain. A common geospatial data capability that could be accessed via a network would provide the ability for applications to make changes to the geospatial data and have those changes distributed during runtime. This would allow seamless dynamic terrain capabilities, either through effects of the simulation (bomb craters, rubble, etc.) or updates by operators (intelligence reports, instructor generated terrain changes, etc.).In the past, limitations in computer capabilities (notably processing speeds) required specialized run-time formats in order to achieve real-time performance for simulation and visualization. Advances in technology and practice now make it feasible to eliminate much, if not all, of this conversion process.  In particular, an increasing amount of source data is being managed online, via enterprise and federated Geographic Information Systems (GISs) – which typically provide considerable functionality for automatic format conversion (e.g., normalizing coordinate systems and resolutions across data layers).Much of the requirement for specialized M&S formats derives from the need to visualize scenes at 30+ frames per second.  Faster processor speeds, and specialized graphics cards, now make it feasible to simulate and visualize directly from geospatial datasets – without requirements for pre-conversion of data formats.  For example, today’s GIS tools – such as ESRI’s ArcGlobe – provide the capability to “fly through” networked terrain at speeds comparable to those achieved by traditional 3D visualization systems.MÄK Technologies, along with ESRI, has developed an initial GIS enabled terrain subsystem based on the common geospatial database approach, using the ESRI components of CJMTK. This work is being done for US Army Topographic Engineering Center (TEC) at Fort Belvoir. We were tasked to investigate how far we can go with entity-based simulations running directly on GIS data, in terms of fidelity and realism. MÄK Technologies has demonstrated that technology advances allow us to re-engineer the M&S terrain generation process – essentially linking simulation and visualization systems directly to the GIS environment, to support medium to high fidelity modeling and behaviors. Figure 1 illustrates a notional system concept for this new common geospatial database approach. As shown in Figure 1, simulation and visualization tools can be connected directly to the enterprise geospatial SHAPE  \* MERGEFORMAT Figure 1: Enterprise GIS Capabilities for M&S and C4ISRdatabases and services being developed to support operational users – providing direct access to current data, eliminating much of the manual processing currently required, and allowing use of the same GIS tools to manage and edit M&S terrain that are used to manage source datasets. In addition, using GIS data formats and systems sets the stage for significant enhancements to M&S practice, in particular, allowing simulations to modify terrain and disseminate the changes (“dynamic terrain”) and allowing simulation models to access GIS-based analytics such as those being developed as part of TEC’s Battlespace Terrain Reasoning and Awareness (BTRA) program.  Further, this approach will enable simulation results to be viewed not only on specialized viewers, but on GIS-based displays (such as CJMTK-based C4I systems). We believe this concept can also be extended to other application domains like mission planning and rehearsal, battle command, and embedded training. This paper discusses our current progress in the design and prototyping of this enterprise GIS-based terrain subsystem2. GIS and C4ISR SystemsIn the US military, the Commercial Joint Mapping Toolkit (CJMTK) provides the Mapping, Charting, Geodesy, and Imagery (MCG&I) functionality for C4ISR mission applications. The toolkit is being deployed to support both legacy mission applications and new systems being developed throughout the Department of Defense (DoD) Command, Control, and Intelligence (C2I) Community. CJMTK is a set of software components for the management, analysis, and visualization of map and map-related information. CJMTK is based on a single scalable open architecture, with open development environments, incorporating industry standards. The primary commercial component of the CJMTK is the ESRI GIS software called ArcGIS. The CJMTK can be viewed as the adoption of the ArcGIS platform (specifically, ArcGIS Engine) as the standard geospatial exploitation tool for DoD Command, Control, and Intelligence systems.CJMTK includes the ArcGIS Military Analyst extension, which maximizes the use of the standard suite of the NGA data products by allowing direct use and rendering of NGA's vector and raster products, line of sight (LOS) assessments, Military Grid Reference System (MGRS) conversion, and DTED analysis. ArcGIS Military Analyst also includes the Military Overlay Editor (MOLE), which supports MIL-STD 2525B and custom war fighting symbologies. CJMTK also provides enterprise GIS services that can support distributed, dynamic geospatial data and information. The capabilities in ArcGIS Server can be used to manage and distribute geospatial information to multiple simulation applications both before an exercise and as an exercise is running, for instance to increase the play box as the scenario unfolds. It can also provide remote geoprocessing capabilities for off loading terrain analysis functions from the simulation to the GIS system. This will allow operational terrain analysis functions that are written for GIS systems to be used directly by the simulation applications, eliminating the need for simulation developers to generate their own terrain analysis routines, and saving valuable simulation cycles for more advanced behaviors.Because of the close ties between CJMTK and ArcGIS, we selected ArcGIS as the GIS engine for the GEMS work. The terrain subsystem prototype that we have developed uses ArcObjects, which are the basic building blocks of ESRI’s ArcGIS software, to implement the application programmer’s interface (API) between the M&S models and the GIS terrain.3. Design of M&S API to GIS Terrain DataInitially, we mapped C4ISR datasets to M&S terrain requirements. C4ISR datasets contain the elevation and feature data needed for M&S models, but they are organized and stored differently. In ArcGIS the data can be stored in a number of different ways. Elevation data can be stored as raster datasets, with each pixel corresponding to an elevation value. It can also be stored in a triangulated irregular network (TIN) dataset, which includes elevation points and the triangularization information to connect them into a network. In the newest version of ArcGIS, they have included a terrain feature class, which stores a hierarchy of TINs for use at different map scales. Another alternative is to store the elevation data as part of a polygon Z feature class, which store 2D polygons with elevation values at each vertex. Feature data can also be stored in different ways. ESRI shapefiles, which are a vector data storage format for storing the location, shape, and attributes of geographic features, can be used to store each 2D feature type.  The multipatch feature class allows the storage of 3D features using planar three-dimensional rings and triangles, used in combination to model objects that occupy discrete area or volume in three-dimensional space. Multipatches may represent geometric objects like spheres and cubes, or real-world objects like buildings and trees. Features can also be stored in individual point, polyline, or polygon feature datasets.Some of the data types used in ArcGIS can be organized in personal, file, or network geodatabases. Organizational schemas can be defined so that datasets from different sources or areas of the world can be organized consistently. A personal geodatabase stores data in Microsoft Access, whereas a file geodatabase is stored as a folder of files. Geodatabases can contain feature classes, attribute tables, raster datasets, network datasets, topologies, and others datasets. They allow relationships between feature datasets to be stored, such as topologies of linear features. For our current geodatabase design, we are using a TIN for elevation data, multipatch datasets for 3D features, and individual point, polyline, and polygon feature datasets for 2D features. We are storing these datasets (except the TIN) in a file geodatabase, which we determined was faster to access than a personal geodatabase. For the enterprise GIS work, we are moving to a network geodatabase.We are utilizing a geodatabase schema based on the TGD operational terrain. This schema includes the feature layers that represent barriers, buildings, vegetation, obstructions, trees, water, roads, and railroads.For buildings, we are using the area and point building layers. For the point buildings, we are running a geoprocessing routine that converts them from point features to building footprints, using the length and width attributes. The converted point buildings are merged with the area buildings to create a combined layer.  This layer is extruded to 3D and stored as multipatch features. It turns out that multipatches are stored as compressed data, so they are uncompressed each time we access them. In order to improve performance, we added the bounding volume of each building to the TIN, with a reference to the higher fidelity multipatch feature. Now we only reference the multipatch feature if the intersection test intersects the TIN building representation. Because the TIN data structure does not support vertical polygons, we expand the base of each building by a few centimeters.For soil types, we are using the linear and area features to create a single unified soil type layer. This is being done as a geoprocessing step to improve performance at runtime. As part of this process, the linear features are expanded by their width attributes. We are utilizing the geoprocessing capabilities of ArcGIS to perform these steps. The Model Builder utility allows these geoprocessing models to be created quickly using the built in tools in ArcGIS. There is also the capability of creating new tools using Python or Visual Basic scripts.Figures 2 through 4 show the results of these geoprocessing steps.  Figure 2 shows an aerial view of the terrain. Figure 3 shows the original GIS data of this area, with point buildings and linear roads. Figure 4 shows the results of the geoprocessing steps to turn point buildings into area buildings and add the width to the roads. Figure 2: Aerial ViewOne other area of the design addressed the different coding schemes in use for identifying real world objects in geospatial datasets. NGA data and many legacy simulation systems use the Feature Attribute Coding Catalogue (FACC) [1], which is a comprehensive coding scheme for features, feature attributes, and attribute values. Newer simulation applications, like the OneSAF Objective System, use the Environmental Data Coding Specification (EDCS), which was developed under the SEDRIS program [2]. For this terrain subsystem, we wanted the API to be able to use either specification. We designed the API to have two parts, an ESRI specific interface, and glue code that is specific to each application. Within the glue code, we can provide a conversion from FACC toFigure 3: GIS Data before GeoprocessingFigure 4: GIS Data after GeoprocessingEDCS, or alternately we could store the appropriate EDCS codes along with the FACC codes in the GIS data as a result of the geoprocessing function. The glue code also takes care of how an application wants to use the terrain data. The ESRI interface code returns a list of intersected objects, and the glue code has the actual algorithm that uses the list for LOS, etc. For example, for the MÄK VR-Forces computer generated forces (CGF) system, the glue code maps the FACC to the eight soil types that are used in VR-Forces.3. Prototype of M&S API in CJMTKFigure 5 shows the terrain subsystem prototype we have developed. This prototype was used to determine performance implications of various design decisions, and to foster greater understanding of the project’s scope. The prototype consists of a VR-Forces simulation engine connected to a file geodatabase for feature data and a TIN layer for elevation data. The geodatabase has a point, polyline, and polygon feature datasets for vector features, and uses multipatches for 3D building representations. The TIN layer includes 3D feature footprints as well as direct links to attribute tables for soil type lookup and the multipatches for high fidelity LOS checks.ArcMap is used as the Graphical User Interface (GUI) to the simulation engine. We are utilizing the GIS-to-SIM toolbox that MÄK developed, which provides the underlying components to enable ArcGIS-based applications to connect to Distributed Interactive Simulation (DIS) and High Level Architecture (HLA) simulation data and visualize it in real time. GIS-to-SIM is provided as extensions for ArcMap, ArcGlobe, and ArcEngine, and is used in the prototype to display the simulated entities within the map view of ArcMap. It is also used to send control measures from the front end to the simulation engine. We also built a VR-Forces Toolbar using ArcObjects to provide simple control of the simulation engine from the map display.Within the VR-Forces simulation engine, MÄK developed the GEMS Application Programmer’s Interface (API), which is built as two components. The ESRI specific component, developed using ArcObjects, provides access to the geospatial data and packages up results of terrain queries for simulation applications. The simulation specific component provides the glue code to the application’s existing terrain APIs, providing backward compatibility for these applications. Thus they can more easily replace their existing terrain representations with the GEMS geospatial data and API, without having to change their calls to obtain the geospatial data.Figure 6 shows the GEMS terrain subsystem prototype user interface, running a scenario on an Azerbaijan geodatabase. The Table of Contents pane on the left side of the window shows the various GIS layers being used. The GIS-to-SIM Layers contain the entities being displayed from the simulation network, organized by force type. The Simulation Layers contain the GIS data in the geodatabase used by the simulation engine, which is also used by the front end for terrain analysis and line of sight checks. Figure 5: Terrain Subsystem PrototypeFigure 6: Terrain Subsystem Prototype User InterfaceThe toolbar circled in red is the GIS-to-SIM toolbar. GIS-to-SIM for ArcMap is an ArcMap extension that enables users to access the underlying functionality of the ArcObjects, connect to a HLA/DIS/TENA exercise, and visualize associated objects and interactions.  The functionality is presented as an ArcMap toolbar enabling a user to specify connection parameters, view details about Entity and Aggregate objects, visualize Entity and Aggregate objects as MIL-STD 2525B or user defined symbology, and view Fire and Detonate interactions as animated sequences.  Objects are managed as ArcMap layers, with the user having access to various automatic or manual mechanisms for specifying what is in each layer.  Using a consistent layer management paradigm enables the users to manipulate the dynamic data just as they would manage terrain data layers, enabling users to turn layers on or off and to access instance information using the ArcMap Identify tool.The toolbar circled in blue is the VR-Forces control toolbar, which is an additional toolbar in ArcMap that can control a VR-Forces backend directly. The toolbar is designed in much the same way as GIS-to-SIM, and in fact, connects to GIS-to-SIM to get its exercise connection. The toolbar allows the GEMS front end to load, execute, pause and rewind a scenario, and to control the simulation time.Figure 7: Performance Test ScenarioIn order to test the performance of the terrain subsystem prototype, we created a scenario in VR-Forces that consists of ten moving ground vehicles, three moving amphibious vehicles, one moving surface ship, four moving air vehicles, and sixteen non-moving target vehicles (see Figure 7). The performance characteristics were measured based upon horizontal and vertical intersection calls in the VR-Forces runtime terrain database (GDB) API and their equivalent call using ArcGIS. The vertical intersection call takes in a point and returns the intersection with the terrain that is closest to the elevation of the point. This call is the primary elevation call for ground vehicles. The horizontal intersection call performs line of sight intersection.The scenario was run and all calls to these functions were logged. This log was used to analyze the calls without the need of the VR-Forces infrastructure. In addition to the input parameters, QueryPerformanceCounter was used to determine the length of time spent in each call. The scenario was run for 60 seconds. Figure 8 shows the average times in microseconds for these calls using the initial ESRI geodatabase, the final ESRI geodatabase and the original GDB terrain. The main difference between the two geodatabases was the original geodatabase did not include building models in the TIN. As shown in Figure 8, we were able to obtain performance values that are very close to the original GDB performance, providing support for a few hundred entities per simulation engine, suitable for small to medium scenarios on a single workstation, while providing the benefits of improved interoperability between simulation and C4ISR systems.  Figure 8: Performance Test Results4. Other GIS CapabilitiesNow that the simulation engine is using GIS data, we can utilize other capabilities within the GIS environment to improve the simulations. As part of the GEMS project, we modified the VR-Forces path planning algorithm so that it utilizes the ESRI Network Analyst extension to perform the planning. Routes are now generated that find the closest points to get on and off the road network, and use the road network to find the shortest path between them. In order to create the road network for the Network Analyst to use, we created a new feature dataset, added the features from the linear road layer to it, and ran the Network Analyst Build Network tool on this feature dataset. Figure 9 shows the results of a road route generation using the road network in Network Analyst.We have also started to integrate terrain analysis products generated in the US Army Topographic Engineering Center Battlespace Terrain and Awareness (BTRA) program into the GEMS environment. BTRA uses the geoprocessing capabilities in CJMTK to generate standardized geospatial products grounded in military doctrine. One of the goals of the program is to “quickly and effectively translate the results of specialized and sophisticated analyses from the exclusive domain of terrain specialists into the operational and tactical lexicon of the field commander and the command staff” [3].  While these products are generated for operational use, they can be utilized within simulations to provide more realistic behaviors. Figure 10 shows a maneuver network generated by BTRA, which is a graph of all possible routes within an area of operations. Attributes attached to each edge of the network, such as width and base speed, are used by solvers that can generate routes based on a single cost, such as cover and concealment or time, or multiple cost constraints,  including vehicle class and unit formation. We have incorporated the BTRA maneuver network in GEMS and currently use a simple solver to find shortest path off and on road routes in VR-Forces, as shown in Figure 11. Figure 9: Route from Road NetworkWe have started a project under the US Army Simulation to C4I Interoperability (SIMCI) program to utilize the dynamic capabilities within the GIS environment. One area we are researching is to allow the extents of the geoprocessed data to be expanded during runtime. The approach is to use the ArcGIS Server to query for data outside of the geoprocessed area and run the geoprocessing models on the server, which would then provide the updated geospatial data when it was ready. The terrain subsystem will then access this additional data as the simulation needs it. Since ArcGIS Server allows distributed geoprocessing, very little change is needed to the existing geoprocessing model, but additional logic in the simulation is required to detect when a larger extent will be needed.  SHAPE  \* MERGEFORMAT Figure 10: BTRA Maneuver NetworkFigure 11: VR-Forces Route Generation using BTRA Maneuver NetworkAnother area we are examining is to be able to provide local changes to the geoprocessed data. Again, we are using the distributed geoprocessing capabilities of ArcGIS Server to make changes to the existing TIN and feature representations, and serve those changes back to the simulation engine. This requires some new geoprocessing models to be developed that can patch changes into the existing representation. These changes would come from simulations that have the capability to alter the terrain based on events such as detonations, or from the ArcMap user interface from an operator.We are also looking at using the terrain analysis capabilities provided by the ESRI products to provide additional geospatial information to the simulation. Again, using the distributed geoprocessing capabilities of ArcGIS Server, we can tap into the many analysis routines provided by the ESRI GIS. For example, we are currently using the Network Analyst extension to generate roads routes for the simulation. To make this more dynamic, we could update these routes based on changes in the geospatial data, such as when a bridge is destroyed or an enemy unit is blocking a particular road segment. Analyses that would take more time, such as finding mobility corridors or cover and concealment routes, could be off loaded to the ArcGIS Server and performed asynchronously from the simulation. This will require a mechanism in the simulation to start the analysis and determine when it was completed.5. ConclusionsCommercial GIS products, like those in CJMTK, provide a powerful set of features for tighter coupling of GIS and M&S systems, providing reductions in time and cost for geospatial data generation for M&S, increased currency of geospatial data for time critical applications, facilitating embedded training in C4ISR systems, and improved interoperability and data correlation between military applications. Our prototyping suggests and demonstrates the feasibility of using GIS terrain data in a modeling and simulation application. In the near future, we will continue to extend the terrain subsystem to use GIS data server technology, like the ESRI ArcServer capabilities, to provide terrain data access and replication remotely to M&S applications. This will provide the underlying capabilities for dynamic terrain. In the future, we envision using even more capabilities of the GIS environment to improve simulation behaviors, especially with the development of higher level behaviors that can take advantage of sophisticated terrain analysis capabilities.6. AcknowledgementThis material is based upon work supported by the U.S. Army Topographic Engineering Center, Fort Belvoir, VA, under Contract No. W9132V-06-C-0018 and W9132V-08-C-0015.7. References[1]	Digital Geographic Information Exchange Standard (DIGEST) Part 4, Edition 2.1, September 2000.[2]	 HYPERLINK "http://www.sedris.org/edcs.htm" http://www.sedris.org/edcs.htm[3]	M. Kleiner, et. al.: “Geospatial Battle Management Language: Bridging GIS, C2 and Simulations”, ESRI International User’s Conference, 2007.Author BiographiesTHOMAS STANZIONE is the Simulation Technology Manager at MÄK. Mr. Stanzione has more than twenty years of experience in modeling and simulation, particularly distributed simulations and computer generated force (CGF) applications, simulation software development, and system integration. At MÄK, Mr. Stanzione is currently the principal investigator on the SIMCI Geospatial Enabled M&S and C4ISR Interoperability project, and has served as principal investigator on the GIS-Enabled Modeling and Simulation project for US Army Topographic Engineering Center and the Smart Terrain Phase II SBIR project for the US Army Natick Soldier Systems Center. Mr. Stanzione holds a Bachelor of Science and Master of Science in Photographic Science from the Rochester Institute of Technology.DAVID LASHLEE is an Associate Technical Director at the U.S. Army Topographic Engineering Center (TEC).  He has twenty years experience building terrain databases in support of Army modeling, simulation, and mapping requirements.  Dr. Lashlee holds degrees in Geoscience, Geography, Physical Geography, and Earth Information Science and Technology.  He is currently working on a post-doctorate study through the United States Military Academy on the appropriate use of terrain data in Future Combat Systems Test, Evaluation, and Experimentation.  At TEC, Dr. Lashlee manages modeling and simulation, including the GIS-Enabled Modeling and Simulation projects.