HLA-OMT versus Traditional Data and Object Modeling– Chance or Shoehorn?Dr. Andreas TolkIndustrieanlagen-Betriebsgesellschaft m.b.H. (IABG)Einsteinstr. 20D-85521 Ottobrunn, Germany+49-89-6088 2381tolk@iabg.deKeywords:Data Modeling, Object Modeling, UML, C4I Data Models, IDEF1X, DII, SHADE, IRDSABSTRACT: The HLA Object Model Template (HLA-OMT) has been designed to define the syntax for information sharing within an HLA federation.  Using simple inheritance, classes and interaction hierarchies can be defined that are used as containers for the "payload" definition of the HLA protocol during the execution of the respective federation of systems.However, the interior representation of the data to be shared inside the federate is in hardly any case in the same form recommended by the HLA-OMT.  Many simulation systems have object models in the traditional sense of object oriented programming.  Most recent developments follow de facto standards like the object modeling technique (OMT) defined by Booch and Rumbaugh in their works on object oriented analyses and design of software systems.  The unified modeling language (UML) brought the different dialects of object oriented techniques closer together allowing the more or less standardized representation of object models.In addition, looking at C4I systems and the respective recommendations of the defense information infrastructure (DII) – especially the shared data environment (SHADE) –, relational data models and data modeling in general has to be taken into account increasingly.  When combining simulation systems and C4I systems in a federation for computer assisted exercises (CAX) or support to operations, these standards have to be converted to the HLA-OMT also.The question is therefore, whether the techniques applicable when using the HLA-OMT to distribute information between the federates are able to cope with the challenge to meet all respective interoperability and reusability requirements, or whether this will lead to "shoehorn" solutions being neither sufficient for the one nor the other side.The purpose of this paper is to describe some techniques allowing data exchange and data replication between object/data models using the RTI and the HLA-OMT and recommends further developments in form of additional layers for easier application adaption to be standardized in the near future.IntroductionThe High Level Architecture (HLA) was designed to become the new simulation interoperability standard for simulation systems of all application domains of the military M&S community.  It not only addressed simulation systems ranging from highly detailed single shot models to aggregated constructive simulation models on theater level, but furthermore wanted to be a platform for defense system integration into simulation federations, i.e., coupling weapon systems, combat information and C4I systems, simulators and simulation systems.  In addition, not only new simulation systems should be able to deal with the HLA, but migration tools and methods for legacy systems, especially DIS (distributed interactive simulation) and ALSP (aggregates level simulation protocol) systems were in the scope of the HLA developers as well.However, after the first enthusiastic workshops business went back to normality.  It became obvious that HLA is not a "glue" for all kinds of problems.  After being able to couple systems by a common standard on a technical level respective federations did show that new – and sometimes theoretically well known – problems arise: aggregation and de-aggregation between models of different granularity, semantic consistence of algorithms (i.e., a common understanding and implementation of the mission space), a common understanding of the shared information, etc.One problem that arose more often during the last simulation interoperability workshops have been the integration of legacy systems and the necessity to transfer the interior presentation of information into the schema defined by the HLA: the object model template (HLA-OMT).  Especially when looking over the edge of the HLA and M&S community it becomes quite clear that there are a lot of different standardization approaches in other communities as well which have to be taken into account when thinking about integrating such classes of potential federates using the HLA approach.Especially in the area of command and control systems a lot of work has been done to gain a common data understanding.  The joint common data base (JCDB) or the data model of the Army Tactical Command and Control Information System (ATCCIS) are meanwhile well known examples of common data models used to share information on the basis of an agreed standard, see, e.g., [1, 8] and [11].They are, however, relational data models, and a relational data model comprises more information than can be transferred using the HLA-OMT in the "original" understanding, e.g., it is not possible to transfer associations between objects.In addition, especially the new simulation models as well as new developed C4I systems and other information technique defense applications are using the object oriented paradigm.  Therefore, another form of information modeling – the object oriented approach using, e.g., the object modeling technique – has to be met also.  Again, the capacity to comprise information is higher than it is the case when using the HLA-OMT. Figure 1 depicts the increasing information content and abstraction level using these different methodologies.One alternative having been discussed more often during the recent interoperability workshops is to extend the HLA standard, i.e., to use a real object oriented template to model and transfer the information to be shared within a federation of the respective systems.  This, however, is not necessary.  Using the ideas of information resource dictionary systems and trading software for data allows to add respective layers to the RTI that mediates object models or relational data models into HLA-OMT.  The ideas necessary to implement this are described and an example that have been implemented is given in this paper.Figure 1: Information Content and Abstraction LevelThe main message is that it is not necessary to change the standard of the HLA to be able to share information between all these systems.  However, additional information have to be introduced and managed.  How this can be done is described in this paper. It has to be read at least in context with the former papers [7, 10] and [11].  The ideas themselves are not brand new.  They have been introduced into data management of NATO and Germany successfully by respective works, many of them conducted by Dr. Stefan Krusche et al. [13].  This paper is the logical step to bring this topic on the SISO table as a recommendation for further works.The different ApproachesIn this chapter the capacity to comprise and model information is described for the three model families defined before: the object model template of the RTI, relational data models as they are used within many C4I systems (and also in many constructive simulation systems) using, e.g., IDEF1X and the object oriented approach using the unified modeling language UML.2.1	The HLA-OMTThe HLA-OMT is defined by the IEEE P1516.2 draft document "Standard for Modeling and Simulation High Level Architecture – HLA Object Model Template".  In this document the purpose of the HLA-OMT is given as follows:"The purpose of the HLA is to facilitate interoperability among simulations and promote reuse of simulations and their components.  In support of these general goals, the HLA requires that federations and individual federates be described by an object model which identifies the data exchanged at runtime in order to achieve federation objectives.  The HLA OMT provides a template for documenting HLA-relevant information about classes of simulation or federation objects and their attributes and interactions.  This common template facilitates understanding and comparisons of different simulations and federations, and provides the format for a contract between members of a federation on the types of objects and interactions that will be supported across its multiple interoperating simulations."[4]In document [4] it is also already mentioned that the HLA-OMT is different from the object oriented view of the world.  As the first focuses on the shareable information between the modeling and simulation systems, the second wants to define the behavior of the objects within a model itself.  This leads to a narrower view of information within the HLA-OMT (which is not meant as a disadvantage).  The possibilities to model information are just less than in the relational and the object oriented world which may lead to easier to understand and implement solutions and definitions of common objects to be used overall the federation.To describe the information to be shared between the federates, four concepts are essential [4]:Object class structure tables record the namespace of all simulation/federation object classes and describe their class-subclass relationshipsInteraction class structure tables record the namespace of all simulation/federation interaction classes and describe their class-subclass relationshipsAttribute tables specify features of object attributes in a simulation/federationParameter tables specify features of interaction parameters in a simulation/federationThe main difference between object classes and interaction classes is, that instances of object classes are permanent whereas instances of interaction classes are just created for the process of information sharing and are automatically deleted after the messages have been transferred.  It can be said that object classes describe things whereas interaction classes describe events.  The template to describe the information to be shared, however, is in principle the same.Thus, it can be said that the structure to model the common information is a set of tables describing classes with subclasses and attributes/parameters describing the respective classes and subclasses.With this methodology it is possible to define concepts and properties defining the respective concepts.  It is furthermore possible to define a simple inheritance structure between classes and subclasses.However, it is not possible to define further relations like aggregation, association, qualifying relations, multiple inheritance, etc. If sharing of such information is necessary, respective additional common interpretation of additional data (e.g. names of related objects as attributes) or additional common software layers within the respective RTI/Federate ambassadors are needed.Example:There is not an explicit mechanism in HLA to represent the "has-a" relationship like it is necessary to define the relation between a person and an address.  To instantiate an address object and a person object and to create a public relationship (in the FOM and to be sent to other federates) it is necessary to create an attribute which is a list of ObjectNames.  The HLA specification provides a globally unique identifier for each object and this value can be used as a reference to the object – not a reference in terms of a programming language but a lookup key.  It is recommended to create a specific type that equates to a string but is explicitly states the value is a globally unique object reference.That this can be done have been shown by several federations, however, the idea of general reusability have to be sacrificed when choosing such a proprietary way.  Therefore, a way using a method that can evolve to a standard have to be found.2.2	Relational Data ModelsUsing relational data models allows the user to model more complex information.  The relational models not only define entities as concepts defined by their properties but allows the explicit definition of relations between concepts also.Therefore, a piece of information to be shared between the participating systems is not only defined by a table comprising a set of attributes but also by its relations to other tables/concepts/entities as well.  Using, e.g., the IDEF1X standard by introducing respective categories it is furthermore possible to implement the concept of inheritance.It is absolutely necessary to deal with this topic when trying to bring together the two worlds of modeling and simulation and C4I systems.  Most C4I systems use relational data models to define their information scope and to describe their domain of interest.  Examples for respective standards are given, e.g., in [3, 7, 8, 10] and [11].  From these and additional papers having been presented during the Fall Simulation Interoperability Workshop 1999 the conclusion was drawn, that the HLA – and explicitly the HLA-OMT – may not be mighty enough to cope with the challenge of coupling C4I systems and M&S systems efficiently.  At least the information modeling capabilities of relational data models should be included into the next generation of the HLA-OMT.  In addition, new services – like a transaction service – should be included into new versions in order to support data replication and relational data exchange via the RTI.However, using relational data models to describe the information to be shared, it is still not possible to describe the behavior of objects in different contexts which in many practical challenges is essential (see, e.g., potentially resulting problems described in [6]).In addition, using relations enables the federation builder to describe the concepts of aggregation, association, qualifying relations, multiple inheritance, etc., but all this is done using the same structure: the relation.  The semantic interpretation still has to be agreed within the federation leading to similar problems like have been described before.  In order to get a common understanding about the semantic meaning of a given relation, all federates have to agree to a respective interpretation.2.3	Object Oriented ModelsAs already mentioned in [4], although referred to as "Object Model Template (OMT)" – which reminds surprisingly well on the "Object Modeling Technique" well known in the community of object oriented software engineers –, FOMs and SOMs do not completely correspond to common definitions of object models in object-oriented analysis and design (OOAD) methodologies.In the OOAD literature, an object model is described as an abstraction of a system developed for the purpose of fully understanding the system.  To achieve this understanding, most object-oriented methodologies recommend defining several views of the “real-world” system, including complete descriptions of all static and dynamic relationships between objects and transformational (algorithmic) descriptions of the objects themselves.  Following, e.g., the methodology defined by Rumbaugh et al. in [2], at least three different views are necessary:the object view describing the object hierarchythe functional view describing the data flow and data manipulation within the system, andthe dynamic view describing the change of the system and its state over time.The Unified Modeling Language UML [5] brought  together the three "different" object oriented methodologies introduced by Booch, Jacobson, and Rumbaugh, all three working now together.  Not only a common notation but also the inclusion of use cases to define the systems’ behavior were included and fused.All this shows, that the static modeling of objects, attributes and there relations – the focus of the HLA-OMT and relational data models – seem to be just one facet of object oriented modeling.  Within this methodology the systems’ behavior is more in the middle of the analysts’ work.  In [6] it has been shown why this aspect is vital also for the HLA and distributed simulation community as well.However, it has been shown that it is possible to match at least the static part of the object models to relational data models as well as to an HLA-OMT presentation by adding additional software layers or by introducing a sort of meta data.  First hints how to do this can we already found in [2].  The general idea is know to mediate these views, to treat them as just different interpretations of common shared domain values, that can be translated into each other.  Why this can be done and how this is related to the HLA-OMT will be the topic of the following section.Trading Software for Data – Fusion and Federation SolutionsAs has been shown in the previous section, the information content may be described in different ways.  Currently, there seems to be a tremendous "technical gap" between federation builders using HLA-OMT, data modelers using, e.g., IDEF1X, and object modelers using, e.g., UML. However, to define, e.g., a company that is part of one simulation and that has to be shared with other federates, it is possible to define the necessary data in form of the HLA-OMT as well as in form of an entity-relationship model or in Form of an object oriented model.  All three presentations are just "application views" of a common object.  HLA-OMT, IDEF1X, and UML are just "languages" speaking differently about the same thing: the company.While many current works focus on the definition of a common object or data model to be used in all future models, the way proposed in this paper is, to let every application/federate within the federation decide on its own how to present the data, and only to use a common language to interchange the information about the common objects.  A first way how this can be done has been given in [10] and [11].  In this paper it will be shown, that although the information modeling grade of the different methodologies defined in section 2 is quite different also, it is possible to use the HLA-OMT to serve the needs of all three (and potential other candidates) by introducing the idea of including meta data to describe the information to be shared.Thus, the question is not whether it is possible to use the same object/data model, e.g., for C4I systems and combat simulation systems, but the question should be how to translate the models/languages of different applications of the same domain into a common reference model, i.e., a common shared data representation including the translation/mediation functionality.In general, there are two ways to deal with the problem that the complexity of the structure of the payload of a protocol – and we are talking about nothing else when sharing information about common objects between different federates – differs between the respective methodologies:By introducing several new software layers, the additional information being modeled within the more complex structure is not sent over the payload of the protocol (in case of the HLA: it is not modeled within the respective SOM/FOM), but a common interpretation is implemented in these software layers.Alternatively, meta data describing the additional information can be generated in a format that is easy enough to be transported by the defined payload.  The next section comprises an example that relations and associations can be modeled by meta data using the HLA-OMT.Figure 2 shows the problem of the resulting "technical gap" on the application layer, when trying to map proprietary models, HLA-OMT, relational data models and object models in the sense of OOAD onto each other.  Being not the one on the highest level, on the first glance, the HLA-OMT seems not mighty enough to close this gap.Figure 2: Additional Software or Meta DataIn addition to this technical aspects, the author of this paper is convinced, that it will not be possible to define one common object including syntactical and semantic consistent structures and definitions that will be used within all applications.  In the same sense it will not be possible to define common software layers freezing such a common understanding. Every application will have its own view of the data – and that is good.  Every algorithm needs the data to be presented in a way allowing him to work optimal, and different algorithms need different presentations.  Standardizing one presentation means neglecting all algorithms needing another presentation.Therefore, the way proposed by this paper is not to define a common model to fuse all applications together (fusion approach), but to treat every application equal, as equal federates within a federation (federation approach).  To be able to do so, it is necessary to describe the information need or information to be offered in a common way in a form that can be transferred via the RTI, i.e., by using the HLA-OMT.The following subsections will define the methodologies necessary to be able to do this by introducing the idea of using an information resource dictionary system, bring the comprised meta data into the form of the HLA-OMT, and use this to transfer the information about shared objects.  Thus, the HLA-OMT is no longer seen as the semantic bearer of the content, but is just a syntactic shell comprising information as well as information about the information, i.e., meta data.  By doing so, different views can be mediated and information being stored in form of a relational data model or an object model can be transferred also.3.1	Definition of Information Resource Dictionary Systems (IRDS)The main ideas of an IRDS are defined in the ISO IRDS standard [1].  The main purpose of an IRDS is to support data administration and data management:Data administration is an information intensive process involving a wide range of participants.  The information required is generated, managed, and used by a large number of participants.  Every authority delivering an application to participate in multiple federations – consuming and delivering data from and for the federation – has to be involved in this process of data management.  Therefore, it has to be a main purpose of the data administration activities to achieve an effective collaboration between all these participants in the process of establishing a common data standardization lifecycle to gain and preserve a common understanding of the shared data.An IRDS can be defined as a software system comprising and managing the information resource dictionary in which the information of all participating applications will be recorded.  Already in [10] it has been shown, how this idea can be extended in the way, that the IRDS can also be used to support the federate integration process by making the efforts of the data standardization community usable for the federation builders.  The purpose and tasks of data management is described in [10] also.Figure 3: Levels and Level Pairs of the IRDSThe IRDS framework defines four levels of information, which are shown in figure 3.  Each level in the framework has a sub-level that consists of the definition of the information contained in its respective sub-levels.  Therefore, the use of the ISO IRDS framework allows a gradual introduction of concepts and methodologies from the most abstract form down to most concrete and tangible application and implementation requirements.  Thus, the different methodologies of HLA-OMT data modeling, relational data modeling using ,e.g., IDEF1X, and object oriented modeling using UML are nothing more or less than different concepts within the IRDS on the respective level.The idea of level pairs should be described in a little bit more detail.  Each level pair consists of a type concept defined in the upper level and an instance concepts being contained in the lower level.  Table 1 illustrates the four levels defined by [1] and shows the possible level pairs.Table 1: Levels and Concepts of the IRDS FrameworkLevelIllustrative Level ConceptIRD Definition Schema LevelIRD Schema. IRD Table, IRD Column, IRD Object, IRD TemplateIRD Definition Level(Methodology)Entity Type, Attribute, Relationship, Table, Column, Constraint, Object, ParameterIRD Level(Model)Person-Name, Person-Sex, Person-ProfessionApplication Level(Data)Lara Croft, definitely female, Game AdventurerIn such an IRDS entity relationship model meta data such as entities, attributes, relationships ends, cardinalities of relationships can be stored as well as the classical and extended concepts of object oriented modeling techniques like classes, types, constructors, inheritance, specifications etc.  In the same way, the meta data of HLA-OMT can be contained.  On the highest level, the schemas are the objects about what the information have to be interchanged or shared.  Thus, on the highest level the concepts are identical.  The "technical gap" between the different methodologies vanish, they can be mediated into each other.Furthermore, the respective level pairs can be translated into HLA-OMT tables and therefore can be transmitted via the RTI to be interpreted respectively by the receiving federate.  Thus, the HLA-OMT not only comprises elements from the application level (as have been the original purpose of the design), but meta as well.  This will be described in the next subsection.3.2	Example for Using Meta Data within the HLA-OMTAs having been stated in several earlier publications (e.g., [10, 11]), the ATCCIS information model is a promising candidate for a common shared data reference model.  Therefore, the main ideas how to model the ATCCIS information objects with meta data will be shown in order to be able to use them not only in the context of federated solutions in the C4I systems world, but in the context of the HLA community also.From the definition level point of view, ATCCIS comprises objects and relations.  The objects can be seen as building a hierarchy, thus, HLA-OMT classes, sub-classes etc. can be derived.An instance of a relation connects two instances of objects.  Therefore, the only attributes of the relation class are pointers to the instances of the object classes.  The necessary meta class object comprises, e.g., object identifiers or object names.  In addition, a relation qualifier or category code maybe introduced also.In the same way, other meta data can be included by defining respective meta data classes.  By doing this, everything originally not intended to be part of the HLA-OMT – but being required by practical problems – can be introduced without having to extend the existing standard.However, it has to be kept in mind that this only closes the fundamental technical gap between the approaches to model data.  There are still enough challenges to face when coming to the details, e.g.The level of detail may differ tremendously between two applications.  The resulting problems of aggregation and de-aggregation still has to be resolved.  The use of an IRDS just introduces the framework to store the results in a reusable way.Different abstractions of the real world may be a problem too, as the information objects used within one application may have no clear counterpart in the other.  It will be necessary to break the information objects down to atomic information pieces leading again to aggregation problems.Different perceptions of reality will cause further problems.  If, e.g., explicit information is necessary to trigger a desired action within one model, and this information cannot be delivered by the counterpart due to the chosen form of representation of reality within this model, a coupling will not lead to the desired effects.	If, e.g., in a federation one model reduces the effectiveness of the artillery explicitly by suppressing the forward observers, the other model, however, uses an aggregated model in form of linear Lanchester equations to represent the artillery, both models will run into problems when being combined (see  [6]).In addition, beside the "technical gap" of the different communities there seems to be a "cultural gap" also.  This may become the real problem in the effort to gain common standards, as both communities only slowly begin to accept the other side as an adequate and valuable partner.  However, there seems to be a paradigm shift going on actually, i.e., both worlds are beginning to grow together.  At least, discussions and common workshops started.Anyway, the author is convinced that there are a lot of benefits when combining the efforts of all main methodologies like have been done by introducing the UML in the object oriented world.3.3	Some BenefitsFollowing the idea introduced in [10] and [11], it is possible to populate the IRDS with different data and or objects models and mediate them into each other using respective mediation services directly deriving from the standardization efforts.Thus, it is possible to describe a data model within the IRDS, harmonize it with the agreed shared data model to find the matching standardized data elements (SDE) and use the HLA-OMT to describe the respective SDE syntactically.  The other model has to be treated in the same way: As having been harmonized with SDEs also, the incoming SDE can be mediated into the object model of the application also.  Therefore, both applications can talk to each other using the HLA-OMT without having to agree to a common model or even a common methodology.All shared information can be translated into the view of the respective application, as not only the application level information is available, but also the meta-information describing its structure.  Furthermore, this methodology is open to future standards and extensions also.  E.g., it is no problem to define CORBA IRD definitions (which are nearly identical with respective object hierarchies), XML IRD definitions or other forms to structure information.  Figure 4 depicts these ideas.Figure 4: Data Mediation using IRDS LevelsIn other words: To achieve real interoperability and reusability of software components, e.g., simulation systems as federates within several federation, without the need to re-implement the interface for every single federation, it is necessary to gain a common understanding of the shared information first.  Thus, the definition of standardized data elements is necessary.  The efforts in standardizing the data can be used to populate a respective IRDS.  The content of this IRDS can be used to map federate data elements to SDEs.  This SDEs can be described in form of the HLA-OMT, no matter in which methodology the respective data or object model has been developed.Following this way spares time, effort and – therefore – money and guaranties reusability and interoperability of the managed applications of the domain, be it simulation systems or C4I systems.It should be stated clearly, that actual works trying to define, e.g., a consistent object model for the army to be used within future simulation systems, or works comparing the information content of C4I data bases with the information need of simulation systems are very valuable for the effort described in this paper.  The better and more complete the models the easier will it be to find good, reliable, and stable reference models that can serve as the needed common shared data models.  And, as long as the efficiency of respective algorithms doesn’t require another form of a data representation, these models can really serve as common data models for a specific type of domain applications.Application ExampleTo conclude the ideas presented in this paper, a short example about an implementation of this ideas going on in Germany actually will be described.  As it is planned by the contractors to give a more detailed presentation during the fall simulation  interoperability workshop 2000, only the main basics will be given.In Germany, simulation systems are seen as a potential candidate for decision support not only in the sense of after action analyses tools, but as online alternative courses of action analyses tools (see [9]).In an actual feasibility study on behalf of the German Ministry of Defense, the main German Army Combat Information System HEROS 2/1 and the main Computer Assisted Exercise Simulation System on division and corps level KORA/OA are coupled.HEROS 2/1 has been newly developed during the last months and has an object oriented data model using, e.g., an object oriented data base to store its objects.KORA/OA is an evolutionary developed and over time grown and modified system.  There are modules being programmed in C++, others are programmed in FORTRAN or C, some are implemented using ADA.  In addition, the interior communication is not overall harmonized by standard data methodologies, but shared memory, flat file systems, and other proprietary ways are used also.  It is not easy to define a data model for such a complex system.  To gain a consistent extern view of the data over all participating evolutionary implemented modules, the same methodology described in this paper could be used also, i.e., all internal data representations have been matched to a common external view.Anyhow, the data elements to be shared between HEROS 2/1 and KORA/OA could be described by using information elements of the information model ATCCIS [3, 10, 11].  The necessary relations were modeled by instances of the relation class mentioned earlier in subsection 3.2.  The information objects were modeled as instances of classes directly derived from ATCCIS objects.  For this purpose, it wasn’t even necessary to extend the ATCCIS generic hub to meet the information exchange needs.By doing so, KORA/OA and HEROS 2/1 are now able to share information by SDEs.  The FOM being used to do so is planned to be presented in fall 2000.  It comprises classes for all information elements of ATCCIS, i.e., objects and relations.SummaryThe question proposed by the title of this paper can be answered now: Using the HLA-OMT may be a shoehorn, when only the application level of the information resource dictionary framework is taken into account.  When just using the methodologies of the original HLA-OMT without additional meta data, the additionally needed algorithms comprising the part of the information that is modeled within the federate information view – but cannot be transferred using the HLA-OMT – has to be agreed and shared between the federates of a federation also.  If this is not done, it will lead to structural variances within the federation, or at least it can result in information losses that are not necessary.Therefore, a federation solution is proposed treating all applications and federates as equal participants within a federation, having the right to see and talk about the world as it is optimal for the application.  For the data administration of their command and control systems, NATO proposes a very similar way also (see, e.g., [12]).  The application level may differ in complexity, grade of abstraction and other things typical belonging to the data or object model of the federate.  For the information sharing, however, standardized data elements are used.Similarly, in this paper no common object or data model is proposed, not even a common modeling methodology.  Instead, the use of an information resource dictionary system and the standardization of  this IRDS is proposed as the most promising way.  Adding agreed and/or standardized layers to the RTI that mediate the modeled information using meta data that are transferred together with the application data in a standardized way really enables to use the RTI to integrate object oriented systems and relational data bases into one federation without loss of information during the information sharing process.Therefore, in the eye of the author the chance being given by having an agreed standard that is flexible enough to be adapted to different systems’ needs is worth the cost of some additional standardization efforts.  The HLA-OMT may not be the best solution and other solutions my offer a higher efficiency on the first glance, but HLA is there and is used.  The first wave of enthusiasm is over, we have been in the phase of criticism of expectations that have been to high, but now it is time to go back to business and use the HLA.  It can – and it should – be improved, but in the eye of the author it is not yet the time to demand radically new solutions negating the advantages of the HLA.The HLA-OMT should be seen as a way to structure the payload of the HLA protocol, a syntax to share information.  The logical and necessary next step is now to get a common semantic understanding.  This can be done by using a common shared data or object model as a reference model.  Many actual works, e.g., ATCCIS, JCDB, or the Common Object Model for the Army, help us in getting the necessary insights into the respective M&S challenges.  These works are very valuable facets within a future M&S IRDS.The introduction of a respective M&S IRDS can be interpreted is a sort of bringing in the – up to now missing – component to close the semantic gap between the conceptual model of mission space (CMMS) and the way how to model the respective domain concepts within the FOM/SOM in form of HLA-OMT tables by using appropriate data standards, therefore connecting and comprising all three main components of advanced distributed simulation.  Figure 5 shows the M&S IRDS and its place within the other standards.Figure 5: M&S IRDS and other standardsEstablishing the framework for such a management system, bringing the experts together, and making the insights available to the community should be one of the next efforts of SISO.  After having reached a common semantic understanding about the static data to be interchanged, the next step is to standardize the functional and dynamic views and behavior of the participating applications within a federation.It is therefore highly recommended to start with the definition and population of a SISO IRDS to gain the first objective on the way to syntactically and semantically consistent federations with real reusable federates.Finally, it should be pointed out that this is just a first necessary step towards real interoperability and real reusability of systems and components.  The topic of this paper is interoperability on data level.  In order to achieve general interoperability on system level, additional effort is necessary [6].In any case, however, to be able to gain interoperability on higher levels the interoperability on data level is the next to solve, unavoidable and necessary requirement without any alternative.  Without interoperability on data level, interoperability on higher levels will always be based just on proprietary solutions.  Therefore, to be involved in respective standardization activities must of high interest for the SISO community.AcknowledgementsThe author likes to thank Dr. Stefan Krusche for the common work at IABG.  Many of the ideas described in this paper came from his mind. Additionally, he likes to thank Miguel Salazar and Richard A. Briggs for their efforts in helping trying to model relations within the HLA-OMT.ReferencesFollowing books and articles are referenced in this paper:[1]	ISO Standard IS10027: "IS10027:1990 An Information Resource Dictionary System (IRDS) Framework", 1990 [2]	James Rumbaugh et al.: "Object-Oriented Modeling and Design", Prentice-Hall, Inc., New Jersey, 1991[3]	ATCCIS Working Paper 5-5 Draft 1.0: “ATCCIS Battlefield Generic Hub 3 Data Model Specification”, ATCCIS Permanent Working Group, SHAPE, Belgium, November 1996[4]	IEEE P1516.2 Draft: "Standard for Modeling and Simulation (M&S) High level Architecture (HLA) - HLA Object Model Template (OMT)", Version 1.3, 20 April 1998 [5]	G. Booch, I. Jacobson, J. Rumbaugh et al.: "Unified Modeling Language UML", Rational Software Corporation, Santa Clara, 1999;	[ HYPERLINK http://www.rational.com http://www.rational.com] [6]	Andreas Tolk: "Non-Monotonicities in HLA-Federations", Paper 99S-SIW-001, Proceedings of the Spring Simulation Interoperability Workshop, Orlando FL, March 1999 [7]	Michael R. Hieb, James Blalock: “Data Alignment between Army C4I Databases and Army Simulations”, Paper 99S-SIW-034, Proceedings of the Spring Simulation Interoperability Workshop, Orlando FL, March 1999 [8]	Donald H. Timian, Jonathan Glass, Michael R. Hieb, Michael J. Staver: “Using Standard Command, Control, Communications, Computers, and Intelligence (C4I) Components to Interface to Simulations”, Paper 99S-SIW-035, Proceedings of the Spring Simulation Interoperability Workshop, Orlando FL, March 1999[9]	Andreas Tolk: "Requirements for Simulation Systems when being used as Decision Support Systems", Paper 99F-SIW-002, Proceedings of the Fall Simulation Interoperability Workshop, Orlando FL, September 1999[10]	Stefan Krusche, Andreas Tolk: “A SHADE Approach for Coupling C4I systems and simulation systems”, Paper 99F-SIW-004, Proceedings of the Fall Simulation Interoperability Workshop, Orlando FL, September 1999[11]	Andreas Tolk: “Using ATCCIS as an Information Layer to couple CGF Federates and Closed Combat Simulations”, Paper 99F-SIW-008, Proceedings of the Fall Simulation Interoperability Workshop, Orlando FL, September 1999[12]	NATO Consultation, Command and Control Board (NC3B), Information Systems Sub-Committee (ISSC), NATO Data Administration Group (NDAG): "Feasibility Study for the NATO C3 Information Resource Dictionary System (NC3 IRDS)", AC/322(SC/5-WG/3)WP4, Brussels, September 1999[13]	Stefan Krusche et al.: The Data Mediation Forum; Web-Page  HYPERLINK http://www.dm-forum.org http://www.dm-forum.org Author’s BiographyANDREAS TOLK is Technical Advisor and Project Manager for C4IS Interoperability Solutions, Information Management, and Decision Support Systems within at the IABG, Ottobrunn, Germany. He gives lectures at the University of the Federal Armed Forces of Germany on the Use of Artificial Intelligence within Military Systems and on Object and Data Modeling and Information Management in Command and Control Systems.		2000 Spring Simulation Interoperability Workshop		Orlando, Florida, March 200000S-SIW-024