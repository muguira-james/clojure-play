Exploitation of an Automated Target Recognition Emulator in the Paint the Night Long Range Advanced Scout Sensor SimulationDonald TidrowKen StrittmatterRobert Deaso Maximo LorenzoU.S. Army CECOM Night Vision and Electronic Sensors DirectorateFt. Belvoir, VA  22060dtidrow@nvl.army.milMichael CarusoDavid SchellScience Applications International Corporation4001 N. Fairfax Drive, Suite 800Arlington, VA  22203703-704-1767mcaruso@cpmx.saic.comABSTRACT: The CECOM Night Vision and Electronic Sensors Directorate (NVESD) conducted two iterations of a Mounted Maneuver Battle Lab (MMBL) experiment in June and September 2000  to evaluate ATR functionaity applied to a second-generation IR sensor. This was done by using an existing Long Range Advanced Scout Surveillance System (LRAS3) simulator, which combined the Paint the Night (PTN) IR visual system with an ATR emulation plug-in.  The ATR emulator used a stochastic model to generate a predetermined false alarm rate in virtual locations likely to trigger false alarms in an actual supervised ATR system.  The experimentation effort was conducted to assess ATR performance requirements, taking probabilities of detection/identification, and false alarms into account. Technical goals of this effort include the development of effective user interfaces, filling in gaps in collected IR data, and the conduct of sensitivity analyses, using human-in-the-loop performance data to feed constructive models that represent ATR systems.IntroductionThe Long Range Advanced Scout Surveillance System (LRAS3) is a second Generation Forward Looking Infrared (FLIR) sensor developed for surveillance applications.  Developed as a man-portable stand-alone unit or vehicle mounted device, a scout soldier uses the sensor to search a Field Of Regard (FOR) for long periods of time. Eventually the scout becomes fatigued while performing this task. To assist the scout with this task we evaluated the benefits of adding an ATR subsystem to the LRAS3 sensor, performing experiments using a real time synthetically generated FLIR sensor view called Paint The Night (PTN) and a target cuer provided by Army Research Lab.The purpose of the experiment was two-fold: first determine the ATR performance level [i.e. Probability of Detection (Pd) and False Alarm Rate (FAR)] needed to help the Scout detect targets with a minimum of false alarms and secondly, determine an optimum update rate for the ATR overlays.  Experiments were conducted in a LRAS3 simulator at Ft. Knox while the PTN generated the real-time imagery at Ft. Belvoir Va. and sent it over a high-speed network in real-time using the High Level Architecture (HLA) to communicate between the two locations. Targets were placed in the FOR using ModSAF.  Experimental parameters included probability of detection, FAR, and update rate. This paper discusses the experimental design and test results.  EMBED Word.Picture.8  Figure 1: LRAS3 SimulatorATR Emulator FunctionalityThe basic ATR emulator algorithm used during the experiments is based on “Scale Insensitive Detection Algorithm” created at Army Research Laboratory. It provides a generally applicable algorithm that can be used on a wide variety of input imagery.The algorithm takes as input an image and its size, information about the current sensor operating parameters (field-of-view, azimuth, elevation) and range to center of the field of view.  Each image is processed to generate a list of potential target locations in the image, along with a confidence measure.  The confidence measure is produced by evaluating several “feature” measures at each pixel location in the input imagery.In the implementation used, eight different feature measures were used to score the potential targets in the image.  These were variants on four basic types: max/min gray level, target/background contrast, average gradient strength, and the local target variation.  Specifically, the measures used were:maximum gray level, in which each pixel being evaluated is compared to the maximum gray level in a target-sized region surrounding the pixelminimum gray level, in which each pixel being evaluated is compared to the minumum gray level in a target-sized region surrounding the pixelthe difference between the two previous measurestarget contrast with local background, in which the average gray level of a target-sized region surrounding each pixel is compared to the average gray level of a somewhat larger region surrounding each target regionaverage horizontal gradient strength, in which the average horizontal gradient of a target-sized region surrounding each pixel is compared to the average horizontal gradient of a somewhat larger region surrounding each target regionaverage vertical gradient strength, in which the average vertical gradient of a target-sized region surrounding each pixel is compared to the average vertical gradient of a somewhat larger region surrounding each target regionlocal variation, in which the variation of a target-sized region surrounding each pixel is compared to the variation of a somewhat larger region surrounding each target regionlocal variation using a different method of calculating each region’s variationThe final score for each pixel is a weighted sum of all the above measures, with the weights shown in the following table:FeatureWeightmax gray level0.301475min gray level0.1min/max difference0.2232contrast0.21848horiz. gradient0.52375vert. gradient1.0115Local variation0.77127alt. local variance 0.718442Table 1: Image Feature Weights in ATR Emulator3.  Integration of ATR into HLA Simulator EnvironmentThe testbed used for evaluating the benefits of an ATR is the existing LRAS3 simulator developed at the U.S. Army CECOM’s Night Vision and Electronic Sensors Directorate.  This simulator uses HLA for its internal communications architecture, and consists of the following federates:Device federate for interfacing to input hardware.Sensor Controller federate, providing current sensor position/orientation and state.Sensor Image Generator (SIG) federate, which generates the sensor view.Sensor Effects (Datacube) federate applies appropriate sensor effects and overlays, and sends digital video to the remote display via ATM connection.PSTGateway federate converts DIS entities from ModSAF to HLA objectsFar Target Locator determines range and calculates target position in milgrid or lat-long formatIn addition to the above federates, a video display module was implemented to receive the digital video stream from the sensor effects federate and generate video that fed into the LRAS3 simulator enclosure.The ATR algorithm described in section 2 is meant to simulate algorithms that would be implemented via specialized image processing hardware in fielded applications. As such, it could not run at the update rates necessary for processing images in real-time within the simulator.  Given this restriction, we chose to use the ATR algorithm to generate a list of potential false alarms in the field of regard (FOR) defined for each experiment run.  During  the actual operation of the simulator, the number of real targets and potential false alarms in the current field-of-view was determined at each update interval.  From this list, a list of potential targets was generated using the expected probability of detection (P(d)) for that experiment run.Figure 2: LRAS3 Simulator w/ATRThe ATR emulator was implemented as a plugin module for the SIG federate, and published a list of targets in the current field of view.  As a result of the need to preprocess imagery for false alarms, we had to restrict the operation of the simulator so that it was fixed in one location for each experiment run.  In addition, we restricted the azimuth and elevation of the sensor view to fall within the FOR used during the false alarm generation phase.  This was really not much of a restriction, as the intended operational use of an LRAS3 sensor is to set up in a concealed overwatch position and scan an expected avenue of approach for opposing forces.For each experiment run, the ATR module would first load in configuration information consisting of sensor location, azimuth and elevation limits for the FOR, probability of detection, false alarm rate (FAR), field of view, and update rate for the ATR.  Then the SIG would divide the FOR into sectors using the FOV, render an image for each sector, and pass that image along with the range to the center of the FOV.  The ATR emulator would generate a list of false alarms for that sector based on the ATR algorithm described in section (2) and the FAR.  This would continue until all sectors were processed, generally taking about 30 seconds (depending on the preset FOV).  During this time, the sensor controls would be frozen out so as not to allow corruption of the individual images; also no real targets were included in the imagery, as they would be handled by the ATR during run-time.  Once the FOR was processed, the controls would be unfrozen and the user would be allowed to start scanning the FOR for targets.  During this phase, using the update rate, the ATR module would determine what real vehicles and false alarms were present in the current FOV and select from them using a stochastic method incorporating the P(d) defined for the experiment run.  The locations of potential targets would then be sent to the overlay generator, which would display target gates around the target locations.Figure 3: Application of ATR emulation for 2nd Gen FLIR, as seen in LRAS3 simulator display4.  Use of Second-Gen FLIR ATR Emulation Capability in Virtual ExperimentsNVESD was funded to demonstrate the feasibility of an ATR technology upgrade to 2nd gen. FLIR sensors.  As a part of this effort, NVESD’s Paint the Night sensor simulator was adapted to conform to LRAS3 specifications in order to serve as a testbed for virtual experiments.  The LRAS3 is an advanced target acquisition sensor which will be used by HMMWV mounted reconnaissance units.  It includes a second-generation FLIR, high-definition TV camera, eye-safe laser rangefinder, GPS-based far target location, and is man-portable for dismounted operations.The purpose of the experiments is to provide insight into ATR performance parameters that will aid the scout in performing his mission.  The parameters of greatest interest are probablility of detection (P(d)), processor speed/update rate, and false alarm rate (FAR).  A spectrum of reasonable values for these parameters were selected for the experimental runs, with the update rate varying in increments from 0.5Hz to 15Hz, and P(d) and FAR as shown below.Figure 4: Parameter Space for P(d) and FARThe experiments were split into three phases.  Phase I looked at effect of varying the ATR update rate, with the intent  of determining the useful range of update rates.  For this phase, P(d) was fixed at 0.5 and the FAR at 0.031 (targets/square degree).  Phase II looked at varying P(d)  and FAR, with the intent of determining the minimum P(d) and maximum FAR that would be useful to the users.  Phase III was conducted with the same soldiers as Phase II, but without the ATR active, to provide a comparison point for the Phase II data.The schedule for the experiments was as follows:10 Jan- 30 May 2000 – Development of ATR module and datalogger, integration into LRAS3 simulator1-9 June 2000 – LRAS3 simulator delivered and integrated into Mounted Maneuver Battle Lab (MMBL) at Ft. Knox, KY12-16 June 2000 – Deomstration of LRAS3 simulator at MMBL, conducted of Phase I experiments25-29 Sept 2000 – Phase II experiments conducted2-6 Oct 2000 – Phase III baseline experiments conductedA set of scenarios were developed for use in the experiments.  Each scenario varied the number of targets, target types, and locations, and sensor location/field of regard.  A scenario example is shown in Figure 5.Figure 5: Example Scenario, showing target vehicles, FOR, and sensor locationThe procedure for all three phases of the experiments consisted of  the following steps:training test subjects on the Recognition of Combat Vehicles (ROC-V) IR vehicle signature familiarization trainertraining on the LRAS3 simulator itself by running through a training scenarioseveral actual search missions using different scenarios and parameters, logging data for each missionfollow-up questionnaire for phases I and II only.For Phase I, the missions were 10 minutes long, with different update rates for each scenario.  Phase II had 15 minute long missions, varying P(d) and FAR between scenarios.  The subjects in phase II were also used in phase III, each subject running through the same missions as in phase II, but without the ATR active.5.  Data Collection and Analysis Tools and TechniquesTo support the need to collect data on subject performance during the experiment runs, a special “datalogger” federate was developed that subscribes to all data being published by each federate in the simulation.  Whenever an HLA object changed state or an interaction occurred, the relevant data was captured and saved to a set of three log files.  The first file was used to capture sensor state when it changed, and saved in a format used by NVESD for collecting sensor performance data during field tests.  This allowed existing data analysis tools to be used in scoring the performance data.  It also collected position and orientation data on actual target vehicles present in the experiment run.  The second file stored data for each target designation event, occuring when the test subject “lased” on a suspected target to obtain target position data.  Each record in the file consisted of time of the event, the sensor azimuth and elevation, the target range, and additional data used in the scoring process.  The third file gathered data that really didn’t fit into the other two, such as the state of the sensor’s polarity (blackhot/whitehot), electronic zoom setting, and waveband, whenever any of these changed, along with a timestamp.  It also stored the probability of detection, field of regard parameters, and false alarm rate for the experiment run.At the end of each experiment run, the test subject would fill out a computerized questionnaire that gathered the views and opionions of the subject as to how well the ATR functioned, whether it helped or hindered his performance, and what could be improved on.  An example questionnaire with answers and comments is shown in Figure 6. EMBED Word.Picture.8  Figure 6: Sample QuestionnaireAfter all the experiments were completed, the log files were fed into a suite of scoring software that extracted the locations of real targets, converted their locations into the az/el space of the sensor, and compared their locations with the sensor az/el at lase events.  Also, the size of the vehicle in az/el space was calculated and used in the scoring software.  A hit was scored when a lase event az/el landed within a predetermined error boundary around each target, generally being four times the size of the vehicle in both azimuth and elevation.  A false alarm was scored when a lase az/el landed outside the error boundaries of all the vehicles.As a check to make sure that the scoring software was functioning correctly, lase events from several experiments were selected and the simulator state at the time of the event was determined.  The simulator was then manually set up with those conditions and visually checked to see if a vehicle was near the center of the field of view. In addition to the scoring software described above, all of the log file data and questionnaire answers were combined into an Access database for ease in performing data reduction other than the hit scoring already done.  Tables were built from the output of the scoring module, summarizing the subject performance on identifying targets, as shown in Figure 7. EMBED Word.Picture.8  Figure 7: Soldier ID Performance SummaryLessons LearnedThe LRAS3 ATR experiment reveals a number of lessons about the acceptable LRAS3 system performance from a human factors perspective. The experiment showed that 4 - 7 Hz represents the acceptable range of performance for ATR updates; experienced users found 4 Hz  acceptable and inexperienced users desired up to 7 Hz. Insights were achieved as to the impact of ATR probabilities of detection and false alarm rate. In general, the performance of soldiers in ATR versus non-ATR modes was similar. Data analysis is continuing to explore the implications of this observation. One possible conclusion is that the ATR doesn’t add any benefit in the scout mission because the scout has ample time to find the targets. Another possible conclusion is that false alarms may have hindered soldier performance in the ATR mode, Another possibility is that the order of tests may have affected the results, since ATR tests were conducted prior to base case tests and the soldiers may have learned vehicle positions in the first run.Another issue revealed during testing was the slew resolution of the LRAS3 simulator, which uses similar gyro hardware to control sight traverse. In general, it was difficult for soldiers to get their cross hairs directly on the targets in order to tag them as such. This complicated scoring and interpretation of results. The post-experiment analysis revealed high contrast between targets and background, enabling soldiers to detect virtually all the targets. This appears to be related to the simulated time of day (e.g. 4AM) which represented the highest target-background contrast in the diurnal cycle. It has been observed that implementation of a more robust atmospheric model in the real time graphics system would create a more realistic test environment.Additional experimentation is being performed at NVESD to assess ATR performance paramaters as applied to 2nd Gen IR sensor technology, using recorded imagery from real sensors.References:[1] Riggs, W. Unpublished Article to DMSO News, June 16, 2000[2] Stoudenmire, E. A II, Lorenzo, M. and Escobar, T. “The Remotely Locating of Simulator Display and Controls Through High Speed Video Transfer and HLA/RTI, SIW Paper 99F-SIW-124, September 1999[3] Lorenzo, Maximo; Riggs  B., Caruso M. and Schell D. “Integration of Engineering Level Sensor Federation into a Brigade Level C4ISR Experiment Using RTI V1.7” SIW Paper Number 00f-SIW-050, September 2000[4] Der, S. Dwan D., Chan, A. et al. “Scale Insensitive Detection Algorithm for FLIR Imagery” Army Research Laboratory Technical Report, Adelphi, MD, January 2001