Real-Time Emulation Of Collision-Based Channel AccessWilliam A. Josephson18 Martin RoadReading, Massachusetts 01867, USA1-781-942-1178josephsw@netzero.netKeywords:Real-time emulation, CSMA/CA, 802.11ABSTRACT Distributed emulation of collision-based multiple access of a single wireless channel can be done over a wire LAN.  The emulation has been demonstrated and reported in [1].  The purpose of this paper is to discuss the emulation in the context of models of radio communications within the DIS and HLA community.  Collision-based channel access is relevant to military wireless both for data and voice communications [4], situational awareness [5], packet reservation and control [6].  Furthermore, a move towards commercial communications equipment would make standards such as 802.11 relevant to military communications [7]. Summary and BacKGROUNDThis paper summarizes the emulation of 802.11 that has been performed on an Ethernet including the key mechanisms that make the emulation work and the numerical results that demonstrate the correctness.  The paper then goes on to compare and contrast the approach of the emulation with [2, 3].  The random-access emulation described in this paper has been implemented on seven PCs and its throughput has been shown to be consistent with a detailed simulation of 802.11.  The results of that demonstration have been reported in [1].  The simulation of radio-wave propagation is considered in this follow-on analysis.  Also, the ability to scale the model to a large number of participants is discussed.  The closest known approach to this emulation is called a macfilter; employed in wire-LAN testbeds, for example, reference [14].  The macfilter will drop received LAN frames whose source address is found on an internal list.  In the paper referenced, the motion of nodes was emulated by updating the macfilter at the appropriate times.  Two nodes were considered to be able to communicate at a given time if they were within radio-range of each other.   This emulation improves on the macfilter by including a more realistic throughput for the radio's media access control.As shown in Figure 1, the emulation will coexist with a network simulation that interconnects the platforms of the system test or training exercise.  Each platform of the system test or training exercise contains a copy of both the emulation and network simulation.  A platform’s network simulation maintains the position of all the system platforms and computes the propagation effect of its own transmission on the other network nodes.  Periodically the  EMBED Word.Picture.8  Figure 1.  Simulation Architecturesimulation communicates the propagation effects to the LAN card. ContentionSince the wire-LAN resolves all collisions of its frames, there must be some way for the emulation to produce contention on the CSMA/CA media. This is achieved by emulating each CSMA/CA frame as two LAN frames.  The first frame, the probe, allows each station to contend for the media to complete the transmission.  The second frame contains the remainder of the CSMA/CA frame's contents.  By modeling with two LAN frames, the collection of radio transmissions that may collide are restricted to those whose probes occur before any of their second LAN frames arrive. In Figure 2, two stations transmit a probe at nearly the same time on the LAN.  Both stations are aware that the two probes have appeared prior to the transmission of their trailing frame.  Because of this, the stations process the probes together as a potential collision.  In the figure, the stations identify the situation as a collision and then drop the frame.On the other hand, on a successful capture of the channel, the trailing frame (Part II in Figure 2) is sent at the appropriate time so that the transmission speed matches that of the emulated wireless LAN.  In this case the other probes are considered deferred.  Stations with deferred frames then withhold the second LAN frame; defer the proper inter-frame space and backoff prior to retransmission, which will include a new probe.Figure 2. Emulated CollisionThe probes carry a random seed, the contention number, to allow the emulators to consistently choose between collision and deferral for contending probes.  The random seed is used to generate a number that measures how close this probe’s transmission start is to a second probe’s.  If the two starts are determined by the random number to be within the same transmission slot, a collision occurs.  The saturation throughput tests of [15,16] were repeated and the results compare well to the original as shown in Figure 3.  The observed saturation throughput is consistently lower than Bianchi, and always by approximately the same amount.    The reason, it is thought, is that the existing emulation ignored probes received within the last fifty microseconds before its own intent to transmit a probe, in an attempt to address too- high a throughput observed in earlier versions of the emulation.In [1], none of the frames are correctly received after a collision, because path loss was not modeled and all receivers were assumed within line of sight.  It is quite possible that the coincidental transmissions are each correctly received by some receiver because of different amplitudes, delays, and Doppler spreads.  Therefore it is quite possible that more than one of the coincidental frames will have to be sent in their entirety over the LAN.   Existing DIS RADIO EmulationsThe Communications Effects Server (CES) [3] emulates radio communications within a separate processor integrated into the HLA exercise.  Radio frames are sent from the HLA entity's computer to the CES to determine degradation and time of receipt by the HLA entities.  TheFigure 3. Saturation Throughput TestsCES then sends the message and its computations to all the destinations.  Any delays due to channel contention are computed by the CES.  Figure 4 depicts emulated transmission. The Radio Communications Protocol (RCP) [2] is used in DIS to represent radio communications and tactical data links.  The Tactical Data Link Study Group of SISO has drafted a protocol, consistent with RCP, of interoperable, Distributive Interactive Simulation of Joint Tactical Information Distribution Systems (JTIDS), which includes emulation of the JTIDS media access [9].  JTIDS values have been added to the fixed fields of the RCP protocol data units (PDUs).  The variable-length fields code JTIDS functionality that is not covered by the fixed PDU fields, e.g., time-slot allocation mode.  Similarly, the random-access emulation can be incorporated into the RCP by representing the probe in a Signal PDU, possibly as shown in Figure 5 for emulation of 802.11 b.    The trailing frames would also be represented with Signal PDUs.The segmentation of an emulated frame into two or more DIS LAN frames is required to model in real-time the collision of very large frames with very small frames.  This observation is true when the DIS LAN speed is comparable to the radio transmit speed, specifically,DIS LAN SPEED <= M*RADIO TRANSMIT SPEED,M = MAX RADIO FRAME/MIN RADIO FRAME.Otherwise, the small frame will have been completely transmitted before the server is even aware that a contending large frame was present (or vice-versa).  The overall effect of not accounting for this would be fewer collisions and improved communication latency where mixed-size communications occurs, say large-file transfers alongside situational-awareness messages.  Therefore, in order to apply CES to realtime emulation, it is assumed that its transmission protocol would have to be modified to segment large, emulated frames. A recent demonstration extends the range for the “b” Figure 5. Emulation of 802.11b Frame Using RCP and 100 Base-T version to 4 miles using phased array antennas and previous work has extended the range with omnidirectional antennas and shifting the frequency range into the 5 Ghz band [10, 11].  Because of the existing model in [1] and because of these demonstrations, and the popularity of 802.11b, this version is used to illustrate the introduction of path loss into the random-access model.  It is not the intent to suggest 802.11b is the most promising or even promising for military applications.  The thought is that any attempt to simulate random-access radio in realtime will have to address similar issues.Figure 4.  Transmission Using CES. path lossThe decision is to not have a server model path loss, instead have the relevant transmitter and/or receiver(s) perform the computation.  The burden on any DIS processor is then limited to at most the neighboring transmitters (receivers).  This property is attractive when needing to support pathloss effects of a large number of transmitters and receivers.  Path-loss modeling at the receivers has the great advantage that propagation data, other than the current position of the transmitter and its characteristics, need not be embedded into the emulation frame, minimizing the emulation's impact on the LAN. On the other hand, with knowledge of path loss, the transmitter can know when it is possible to withhold a frame, saving a large amount of bandwidth on the LAN.  For example, consider colliding frames among radios collocated in a large, open, indoors environment such as an auditorium.  Here, no transmission will have advantage and no frame will be received correctly.  The transmitter determines output channel characteristics at each potential receiver from the active probes it has received and, optionally, any other known electromagnetic emissions. In order to retain the two bandwidth-savings, the architecture is chosen so that both the transmitter and receiver compute the path loss in a collision while the receiver is responsible in all other situations.  This introduces a moderate increase in the processing time for each DIS processor when it acts as a transmitter, as long as the spatial density of transceivers is not too large.  In very dense environments the transmitter's pathloss modeling would have to be curtailed or heuristics such as aggregation of receivers into cells be applied.  In this situation the receiver's model will drop frames that could not be received due to interference from colliding frames.There is some risk of deviation between the computations on each end, since the transmitter and receiver may have slightly different views of the exercise at the time.  For example the transmitter decides that the frame cannot exceed the receiver's energy threshold and drops the frame even though the receiver may have sent the received frame up to its Host Protocol Stack (see Figure 6).  The difference should represent a recent change in the channel that has not yet been observed by either the transmitter or receiver and should be made transient by the synchronization approach of the DIS. TRANSCEIVER architectureFigure 6 is a collaboration diagram for the proposed DIS transceiver software. It is annotated with the sequence of data flows in the event that a probe is received from the DIS LAN, immediately followed by a transmit request from one of the hosted entities. The DECODER function determines that the incoming signal is a valid 802.11 transmission, and that the simulated time of arrival, fixed by the probe's random seed, occurs before the LAN XMT thread's attempt to transmit a probe onto the DIS LAN. Therefore the collaboration diagram ends at step 10, before transmit of the requested frame's probe. The DECODER determines carrier-sense since the most frequently implemented profile of 802.11b requires that a valid 802.11 signal be present for physical carrier to be sensed. The DECODER function contains the bit error rate (BER) model for the transceiver's encoding.  It assumes a demodulated, narrowband signal as represented by the output of the DEMODULATOR-DESPREADER. It will distribute the bit errors according to the interleaving and coding scheme.  In the case of 11-Mbps 802.11b, the data is scrambled and coded to complementary code keying (CCK). DEMODULATOR-DESPREADER and LAN XMT code are shown accessing the pathloss database, which is considered to be an array of values indexed by DIS entity number, the source ID in the case of the received frame and the potential receivers IDs for a frame being transmitted. The PATHLOSS database allows the DEMODULATOR-DESPREADER function to estimate the average signal power after the despreading process. These two also collaborate to estimate the channel interference for other transmissions and other channel noise. To maintain the real-time aspect of the emulation, in most situations the radio channel will have to be simplified.  In modeling practice, it is often the case that channel response is assumed constant over the channel's bandwidth and the frame transmission is partitioned into segments of constant signal attenuation. Within each segment a Rician fading profile is assumed with parameter K dependent on the pathloss variables retrieved from the database (Step 3 in Figure 6). The number and depth of fades within each segment can be estimated, resulting in a multipath attenuation for the segment (ma in Step 4). This multipath attenuation is then used by the DECODER function in estimating the bit error rate over the segment. Reducing the size of the segments increases the model accuracy. However, the fidelity will always be limited by the fact that wideband channel response is frequency selective instead of frequency flat as assumed here.A very simple formula to approximate signal attenuation for direct-sequence spread spectrum is to measure a mitigation bandwidth factor Wm [13, 17] for a given modulation scheme. One of the modulations identified in [13] is quadrature phase shift keying (QPSK) which is used in 11 Mbps 802.11b to modulate the CCK-coded signal. Figure 6. Received Probe Captures Radio ChannelIn [13] the signal variance is argued to be proportional to the chip rate divided by the root mean square (RMS) delay spread where 1/Wm is the proportionality factor. Furthermore it is observed that the bit error rate curve resembles one for a Rician fading channel. The corresponding K factor is K = 2 Wm*(RMS delay spread).The signal is wideband for this theory of mitigation bandwidth, though the speed of the transceivers is assumed to be low.  Following mitigation bandwidth, for 802.11b, the DEMODULATOR-DESPREADER can provide the appropriate Rician parameters to the DECODER for BER estimate. Large network emulationThe number N of 802.11 nets, more formally called Basic Service Sets, that can be emulated in this way is roughlyN = DIS LAN SPEED / RADIO TRANSMIT SPEED.For example, roughly nine 802.11b nets can be modeled on a 100 Base T segment.  The gap between the probe and the trailer of one net's transmission can be filled with emulation frames of the coexisting nets. Even in a single 802.11 net, coincident transmissions may exceed the realtime aspect of the emulation.  When ten coincident frames of the same size occur on a 100 Base T segment, all ten transmissions cannot be completed in realtime.  The need to completely transmit all ten occurs if there is a receiver for each that is occluded from the other nine.  Outdoor radios in an urban environment with many tall buildings may exhibit this phenomenon.  In all likelihood, these transmitter-receiver pairs will have formed independent nets.  Therefore the limitation described here is equivalent to the maximum number of nets that can be emulated.To enable a large number of participants in an 802.11-service area, a large number of processors can be attached to the LAN.  However, more practically, each DIS processor can support multiple DIS entities.  This should not impact the emulation's LAN driver other than to keep track of which receivers are represented on its processor.  When two entities, simulated on the same processor, need to communicate over radio, their messages would traverse the LAN.  With this architecture in mind the intent is to integrate the random access emulation into the OneSAF system [8].  Each SAFsim processor is capable of supporting multiple entities and the radio communications between these entities.  ConclusionThis paper has described an approach to integrate random access emulation into a DIS exercise.  The enhancement of the emulation in [1] to include radio propagation effects will impact the performance and real-time aspect of the emulation as has been described.  The intent is to demonstrate this approach by integrating the emulation into the current version of the OneSAF system. references[1]	Josephson W.: “Wire-LAN Testing of Wireless Network-Centric Systems”, 6th World Multiconference on Systemics, Cybernetics and Informatics, July 14-18, 2002. http://www.william-josephson.com/WireLANTesting.pdf.[2]	Radio Communications Protocol, IEEE Standard for Distributed Interactive Simulations - Application Protocols, IEEE Std 1278.1 - 1995, Section 4.5.7.[3]	Dulmage J., Hoang T., McConnell J., Riehl M., Wessel J.: “Communications Effects Server - Realistic Communications Effects for Distributed Simulations”, Fall Simulation Interoperability Workshop 2000, 00F-SIW-069, September 2000.[4]	Deparment of Defense Interface Standard Digital Message Transfer Device Subsystems, MIL-STD-188-220C, May 2002.[5]	Kelsch G.: “A Comparison of Battlefield Carrier Sense Multiple Access (CSMA) Networks with Theoretical CSMA Network Analysis”, MilCom '99, October/November 1999.[6]	North R., Bryan D., Baker D.: “Wireless Networked Radios: Comparison of Military, Commercial, and R&D Protocols”, 2nd Annual UCSD Conference on Wireless Communications, San Diego, CA Feb. 28 - March 3, 1999.[7]	“Littoral Battlespace Becomes Smaller”, SIGNAL Magazine, September, 2001.[8]	OneSAF TestBed Baseline, Version 1.0, HYPERLINK "http://www.onesaf.org/"www.onesaf.org.[9]	Burroughs A., Sorroche J., Barrett N., Byers R., Butterfield R., Shanks G.: “Tactical Digital Information Link-Technical Advice and Lexicon for Enabling Simulation (TADIL-TALES)”[10]	Markoff J.: “Businesses, Big and Small, Bet on Wireless Internet Access,” NY Times, November 18, 2002.[11]	TNO Physics and Electronics Laboratory: “WLAN In The Military Environment,” HYPERLINK "http://www.tno.nl/instit/fel/ts/wlan_tranverter.html"www.tno.nl/instit/fel/ts/wlan_tranverter.html.[12]	Brockel K.H., Sheth C., Sudnikovich W.P., Pasirstein, J., Wood, R.; Huynh, A., Mack, A., Drucker, H.: “Communications Realism For Network Simulations,” Military Communications Conference, 1995, pp 484-490.[13]	Amoroso F.: “Use of DS/SS signaling to mitigate Rayleigh fading in a dense scatterer environment,” IEEE Personal Communications Magazine, 3(2), pages 52-61, 1996.[14]	Maltz D., Broch J., Johnson D.: “Experiences Designing and Building a Multi-Hop Wireless Ad Hoc Network Testbed”, CMU School of Computer Science Technical Report CMU-CS-99-116, 1999.[15]	Bianchi G., Fratta L., Oliveri M.: “Performance evaluation and enhancement of the CSMA/CA MAC protocol for 802.11 wireless LANs,” Personal, Indoor and Mobile Radio Communications, 1996. PIMRC'96., Seventh IEEE International Symposium on  , Volume: 2  , 1996, pp. 392  -396 vol.2.[16]	Bianchi G.: “IEEE 802.11-saturation throughput analysis,” IEEE Communications Letters, Volume: 2  Issue: 12  , Dec. 1998, pp. 318 –320.[17]Parsons J.D.: “The Mobile Radio Propagation Channel, John Wiley & Sons, 2000.William A. Josephson is a senior engineer at the XonTech Corporation.  His experience is in communications systems engineering, software development, integration, and applied research with emphasis on system performance, formal analysis, simulation, training, and secure systems.