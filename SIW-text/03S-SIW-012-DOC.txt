Extend HLA with Layered PriorityZhou ZhongZhao QinpingThe Key Laboratory of Virtual Reality Technologies,school of Computer Science and TechnologyXueYuan Road, HaiDian DistrictBeihang University Beijing 100083, P.R.China86-10-82317109-803, 86-10-82317644{zz, zhaoqp}@vrlab.buaa.edu.cnKeywords:HLA, RTI, layered priority, Qos, congestion control, region, AOIABSTRACT: High Level Architecture (HLA) needs some extensions to deal with large scale simulations, as has been brought forward by more researchers in the last few years than before. A practical congestion control and more efficient data distribution management (DDM) are two pivotal problems in large scale simulations. One fact is that HLA is lack of the depiction about the differences of demands for data by various receivers. This paper begins with some features of data distribution in real world. After analyzing the limitations of current HLA, an extension to HLA based on layered priority is presented. The layered priority describes the layer of detail from the view of apperception, and brings forth a practical category of publisher-subscriber Quality of Service (Qos).Building on the extended HLA, this paper then discusses congestion control for simulations. And a new hybrid approach of DDM is proposed, which integrates layer filtering with grids. The approach can further reduce both the number of irrelevant messages of the grid-based DDM and the times of region overlap calculating. Layered congestion control is also feasible  in this approach of data distribution.IntroductionThe High Level Architecture (HLA) has become the standard technical architecture for modeling and simulation. It was approved as IEEE 1516 standard for Distributed Interactive Simulation (DIS) in September of 2000 and has been widely applied in the community of DIS. HLA consists of three parts: framework and rules[1], federation interface specification[2] and object model template (OMT) [3]. HLA based simulations use runtime infrastructure (RTI) middleware that implements federation interface specification to support interconnecting simulation as well as to manage distributed federation execution. RTI plays a key role in the scalability and performance of the entire simulation.HLA 1516 interface specification has seven groups of services including federation management, declaration management, object management, ownership management, time management, data distribution management and support services[2]. Declaration management (DM) and data distribution management (DDM) constitute HLA interest filtering, which are the fundamental solutions to theatre-level exercises in HLA. DM uses a class-based filtering for the federates to give their requests for interest class attribute sets or interactions. However, the DM filtering is so coarse a filtering that the eventual effect is insufficient for a federate to express its interests in part of a large number of objects. The DDM is a fine grain filtering that can reduce much more irrelative data updates exchanged among federates. DDM allows the federates to selectively receive subscribed data from publishing federates based on the values. Till now commonly used DDM approaches have their distinct drawbacks and advantages, and it’s accepted to choose different approach for different simulation.*  This work is supported in part by the National 15th 863 plan of  P.R.China under grant number 2001AA115130.Many present HLA simulation applications demand high scalability and performance, as is a big challenge for RTI restricted to 1.3 draft or 1516 specification, especially in the demand for real-time performance. In fact, some leading researchers in the simulation community thought about several ways to make some extensions or modifications to HLA. Thom McLean of Georgia brings forward four issues in [4] about real-time extensions to HLA, the first of which is to extend RTI delivery specification to support Qos requests. Zhao, H. and N.D. Georganas present a HLA real-time extension using Qos of priorities based on the operating system and network infrastructure level [5]. [6] makes some modification on IF specification and FOM to exploit new network capabilities to enhance the efficiency of DDM filtering. [7] advances some problems about enhanced network transport and priority-based congestion management in Active Interest Filtering.In general views, Qos will be one of the principle solutions to reduce the heavy affect of scalability on simulation performance. Congestion control would become practical with Qos category present. And the DDM filtering may be more efficient. But what category we use to weigh various attributes or parameters? Fundamentally, it is owed to the difficulty to have a practical priority. This is a big problem before researchers. A layered priority is stated in this paper, and the extension to HLA based on it is summarized. After that, it is shown that how congestion control become effective with the extended HLA. In the end, after introducing the way integrating layered priority with region-based DDM filtering, a new hybrid approach of DDM is proposed, which makes layer filtering in grid-based strategy. This approach can reduce the number of irrelevant messages of the grid-based DDM and manage layered congestion control in data distribution.Extension to HLAAdvancing the state-of-the-art for large-scale distributed simulations requires that the RTI should be able to determine the Qos requirements prior to sending updates or interactions. The measurement of category is the key issue about Qos, but HLA 1516 standard has no aspect related to it. Some additional extension is required to import priority into HLA. Except for minimizing the modification, the issue of compatibility to existing standard is brought into consideration.[5] has started a discussion about placing a layered Qos on the DDM implementation and divides normal region into three regions of different level.Some Features of Data Distribution in Real WorldIn order to improve the performance of distributed simulation, we should investigate the features of data distribution in real world and try to take advantage of those fundamental and helpful  to actual operations.Here are some features of data distribution in real world that may be useful for simulation.Data from the Area Of Interest(AOI) varies with the value of subscriber’s attributes or parameters in the dimension.Interest management is the most important mechanism in HLA’s filtering irrelative data. Basically AOI is a depiction of the area the subscriber can detect data in and some publishers can influence on. Generally speaking, an entity can detect more information about other entities closer to the apperception center than there far from it. We can get the details of a tank in front of us, while we cannot tell the difference between two entities far enough from us even though one is tank and the other is a soldier. Only particular subscribers have the necessary to be aware of those details above normal such as the status of some components.Here is an issue in real world that may help our comprehension. When a soldier and an engineer both stand by a tank remaining the same small distance to it, they get different tank in their apprehends. If the soldier has no task or interactive means to investigate the construction of the tank, there’s few difference of information acquisition between the distance of one meter or twenty meter. But if the engineer need to repair the tank, he will look through many minor components. The fact is that such data as those related to specified component need particular subscriptions other than AOI. A soldier may care little about the detailed components, so he has no need to subscribe the component information, while an engineer may subscribe those all.HLA LimitationsHLA provides sufficient interoperability for high-level application development, but it also has some limitations owing to the lack of some definitions. Here are some ones below:AOI has been confined to only the scope of subscriber’s interest. In fact, the level of the interest is an important issue related to it.Associating each attribute or parameter individually with region sets achieves precise filtering at the expense of too much matching and more transport times. There may be a tradeoff between the efficiency and the matching, as has been taken into account in most implementations.The transportation of HLA includes two types: reliable and best effort, that isn’t flexible enough for distributed simulation to manipulate data transportation. Some related issues emerge:It is insufficient to depict the differences of delivery of different kinds of information in the distributed environment to receivers. As a matter of fact, some information is vital for some subscribers to work, while there’s also some that it is less important.The reliable packets may affect heavily the machine load and total network traffic in theatre-level exercises, so only those packets that contain absolutely prior data deserve reliable transportation type. It’s very dangerous and apt to be illegal used for HLA application developers to have this coarse category.Little can be done with limited network bandwidth and computer resources. It’s almost impossible to take the facility of congestion control for bad network condition or overload computation strictly restricted to HLA standard.Layered PriorityWith respect to manageable real-time response, the DIS system should accommodate some kind of priority complying with the rules of entity activities in real world. The priority is due to have the ability to specify:The subscriber wants data in what level of detail from publishersthe differences of demands for data transportOnly given objects have the priority to get specified attributes/parameters besides the restriction to AOI.Our approach is to define the priority based on layer, which describes some kind of interest resolution and other priority features. This classification is based on the interest depth in attributes/parameters, similar to the Layer of Detail in graphics in the definition style except there’s a critical priority above the classification. The layered priority is divided into five: LAYER_CRITICAL, LAYER_VISION, LAYER_ ABOUT, LAYER_COMPONENT and LAYER_INSIDE. The layered priority stands for more of interest layer than of the importance of the data to subscribers. Each layer name is given in the instance of commonly used realistic vision space to well illustrate the utility, but not restricted to the application. Interest resolution represents the depth of interest in objects, more than just vision resolution. Figure 1 is a one-layer example in one dimension, Specifically:LAYER_CRITICAL for reliable transportation -----The layered priority is actually based on four interest resolution layers. The additional critical priority is added for importance above normal data updates. In fact, HLA 1516 standard defines the transportation of reliable, as is for important data. This important data may be less than five percent of all the update packets in most of the time during a federation execution, but it really exists. For instance, one federation composes the terrain damage level into one of the FOM interaction, but this parameter is sent only once or not so frequently. So the interactions need to be treated above normal priority.Layers for best effort transportation ------The other four priorities stands for levels of interest resolution for best effort transportation. The object subscribing with a higher priority will request data with the priority and all those with lower priorities. LAYER_ABOUT is look on as the default priority.The relationship between the layered priority and interest resolution --------LAYER_CRITICAL: critical priority for those attributes or parameters that occur only once or once in a long time but important to federates in simulation; no relationship with interest resolution.LAYER_VISION: the lowest interest resolution; it depicts the area of detection, similar to the scope of entities’ visual reach. It has an area the same as regular AOI.LAYER_ ABOUT: regular interest resolution; it contains most commonly used attributes and parameters. It’s as one can recognize his surroundings clearly.LAYER_COMPONENT: detailed interest resolution; more than regular utilities. General objects have no interactive means with it. Only specified object in some applications can subscribe attributes or parameters with the priority. The relationship is similar to that between the engineer and tank components discussed above. If the components run out of their internal restrictions, it comes to another problem of aggregation and disaggregation.When a subscriber resides right at the point value of the publisher in the dimension, a particular LAYER_INSIDE is reached. This zero-distance interest resolution has exceeded what AOI can taken effect. It must be pointed out that the point value here may be range of a small region in real world, but its characteristics are completed different from a region’s. This inside priority is reserved for such extreme situations as subscribers without ownership require object internal attributes, as need high level manipulation such as scene changing.Figure 1: one example of layered priority (one dimension only)EXTEND, PACE for assistance –An extra EXTEND is defined to help get hidden region of LAYER_VISION from normal region. The fundamental requirement is that the middle of the dimension with layered priority is just the interest center of AOI. We prescribe here as range multiple, b/a in figure 1. The default value of EXTENT is 1 and 1 is also the lower definite bound. When the LAYER_ABOUT has the range of  EMBED Equation.3  , the corresponding range of LAYER_VISION will be  EMBED Equation.3  LAYER_COMPONENT represents an unconventional interest demand. Because the RTI care nothing about the meaning of dimensions, an extra PACE is defined to help make assistant coarse region match when particular subscription found. No need to make region match when PACE is set to zero. The region in LAYER_COMPONENT can be approximately looked on as update region.The result may go to the contrary to further define more layered priorities for real-time performance. LAYER_ABOUT represents a minor portion of that in LAYER_VISION and it’s always associated with a smaller region, so dividing more priorities in LAYER_ABOUT requires recalculation of priorities in high frequency. It’s not suitable for large-scale simulations.One HypothesisThe layered-priority extension intensifies one hypothesis in HLA.2.4.1 HLA Hypothesis of  EMBED Equation.3  HLA has one hidden hypothesis in DDM region modification. It’s the high level process of DDM region modification as Figure 2. EMBED Visio.Drawing.6  Figure 2: high level process of region modificationHere HLA neglects one variable of  EMBED Equation.3  ， EMBED Equation.3   is defined as below in Figure 3. EMBED Visio.Drawing.6  Figure 3:  EMBED Equation.3   definition EMBED Equation.3  ，and  EMBED Equation.3   EMBED Equation.3  ， EMBED Equation.3  when  EMBED Equation.3  ， EMBED Equation.3  If the subscriber modifies its region every 100m and the range of subscription region is 5km in the same dimension, then  EMBED Equation.3  ＝100/5000=2%. The neglect in this situation is appropriate.2.4.2 Intensified  EMBED Equation.3  In extended HLA,  EMBED Equation.3   of the subscription region is intensified in LAYER_ABOUT when EXTENT is set, while LAYER_COMPONENT and LAYER_INSIDE is for the situation of zero-distance.It does nothing to do with the update region because the layered priority is oriented to the subscriber.The extended HLA has  EMBED Equation.3   EMBED Equation.3  ×EXTEND in LAYER_ABOUT. When the interval of region update pace is dx, EXTEND set to 5 and the subscription region is 5km,  EMBED Equation.3  5*dx/5=dx. it means that  EMBED Equation.3   is less than one update pace in the dimension as can be accepted in normal applications.Summary the ModificationsThe layered priority defines levels of interest resolution. This extension of layered priority only needs to modify HLA Object Model Template (OMT), not related to framework and rules or interface specification. Only two tables need to be extended: attribute table and parameter table. The tables need to add three columns: layer, extend and pace.The priority-tuple is optional in OMT. If an attribute associates with no priority, the LAYER_ABOUT is associated by default. So the extended HLA maintains backward compatibility with standard HLA. An example of extended attribute table is as table 1.Table 1: the extended attribute tableAs reliable transportation embodies the feature of LAYER_CRITICAL, we won’t use explicit LAYER_CRITICAL.Most interactions bring about important events for simulation, so they always need reliable transportation. If the interaction class has the transportation type of HLAreliable or has not the layer relationship of interest and region, it’s no need to add layer related definition. While in some situations some real-time interactions exist, it may take effect as layers for object classes.The Category of Publisher-Subscriber QosFor real-time delivery assurances during high network traffic, the RTI should be able to determine Qos requirements prior to sending updates or interactions. The better mechanism would allow the RTI to determine a range of Qos requirements based upon publisher-subscriber (producer-consumer) pairs. This would allow the RTI to manage delivery requirements across individual links, optimizing network utilization[4]. [8] describes the channelization as a two-phase mapping problem due to limited multicast groups. The mapping includes mapping information flows to the multicast groups and users to multicast groups containing the flows of interest to a user. The two phases are not indifferent to each other, there exists transportation priorities between them. It’s in essence some category of publisher-subscriber Qos.Class attribute sets and interaction classes are associated with subscription regions in HLA DDM. Obviously it’s not practical in large-scale simulations for senders to delivery many packages about only one update according to arbitrary attribute set request. Breaking down an attribute set into several separate attribute sets and send them in separate channels or verifying the set with every subscription will increase the machine process and transport delay heavily. We can have a category to process the update and interaction to simplify the computation and layered priority is an appropriate one for Qos.In this section, we give a model that characterizes the category of publisher-subscriber Qos. The category of  publisher-subscriber Qos consists of:layers of published class or interactionlayers of sending updates or interactionslayers of subscribing for classes or interactionslayers of subscribing for object instancesFirstly, we give the Layer definition. It’s the layer value space.enum Layer { LAYER_CRITICAL=0, LAYER_VISION, LAYER_ ABOUT, LAYER_COMPONENT, LAYER_INSIDE }Interactions are simple for class-level subscriptions and being mostly of reliable transportation. They have only LAYER_CRITICAL layer, which is 0, in the situation. Here we discuss only about classes. We define i as the class handle, m, j, k as the size of attribute set and o an object instance handle. Usually m is the size of FOM defined complete class attribute set. The function layer(int ) is to get the layer of specified attribute handle.Let  EMBED Equation.3   be an m-sized attribute set of class with handle i, Let  EMBED Equation.3   be the layer of published class of handle i with m-sized attribute set.Let  EMBED Equation.3   be the layer of an update of class of handle i and j-sized attribute subset.Let  EMBED Equation.3   be the layer of subscribing for class of handle i with k-sized attribute subset.Let  EMBED Equation.3   be the layer of subscribing for object instance o of class of handle i with k-sized attribute subset.Basic Layer for Published Classes EMBED Equation.3   is the basic layer for published classes. We define it as: EMBED Equation.3   EMBED Equation.3  when   EMBED Equation.3   Publisher UpdateWhen the publisher sends an update or interaction, this action will be taken in a fixed layer. Contrary to other calculations, the layer of publisher update  EMBED Equation.3  is treated as the level of fundament. In this way, we can draw the conclusion that interest layers for this update will be from  EMBED Equation.3   to  EMBED Equation.3  . EMBED Equation.3  Subscriber Side EMBED Equation.3   is the layer for subscribing classes. EMBED Equation.3   EMBED Equation.3   when  EMBED Equation.3  The subscriber need update their interest for class attributes during zoom in/out and scene changing, and  EMBED Equation.3   will vary with new subscription. If correctly defined,  EMBED Equation.3   should be a subset of  EMBED Equation.3  , where  EMBED Equation.3   usually is the complete set. So  EMBED Equation.3   and  EMBED Equation.3  Let the update region be U. It’s a point when point update region is used.Let the subscription region be S.Let the “extend vision” region for LAYER_VISION be ES.Let the “about” region for LAYER_ABOUT be AS.In one dimension, when the S is  EMBED Equation.3  , the ES will be  EMBED Equation.3   EMBED Equation.3   and the AS be EMBED Equation.3    EMBED Equation.3  .We define  EMBED Equation.3   as the region overlap operator, and  EMBED Equation.3   for no overlap.The receiver calculate the layer for object instance o as EMBED Equation.3  Thus, by getting the category of publisher-subscriber Qos, we can derive from it the entity layer. Then update frequency regulation and congestion control in large-scale simulations become feasible.Priority-based Congestion ControlLarge-scale simulations suffer from huge network traffic and high machine load, but it seems there’s some difficulty in congestion control under the supporting networking technology. A few systems have profited from it via. advances either in the underlying network technologies or in the ability of simulations to exploit new networking capabilities. At least one research group in Litton-TASC Inc is actively pursuing priority-based congestion control[9], where a suite of enhanced network protocols and services are being designed and developed. Routing points in Active Networks are the primary sources of data loss during times of congestion when the aggregate traffic from multiple inbound links exceeds the capacity of a target outbound link for a period of time. Work has been done on the ability to preferentially discard lower priority packets in favor of delivering higher priority packets at these congestion points.It’s efficient to advance computer networking technologies, but new simulation priority exploitation may be more suitable for regular networking environments. Layered priority is conceptually flexible enough to implement multi-interest layer processing and be treated as the base category of congestion control. For example, it could be used to send update messages for entities further away on a less frequent basis. When faced with a choice of which packets to drop during heavy network congestion, the higher layered packets have more probability to survive.From the perspective of current network support, RTI will reply on multicast as a convenient and efficient way to deliver packets to interest groups. A few TCP will act as a compensation to delivery. Reliable multicast plays an important role but with less amount in total multicast traffic. Multicast in distributed simulation is special for its coexistence of best-effort and reliable multicast. At the same time, it needs to take both the sender driven and receiver driven congestion control mechanism, as can be thought of as one attempt for many to many congestion control. No success research yet has been done on congestion control in many to many multicast, but it is accepted that the objective of many to many congestion control is to control the total multicast network bandwidth not to exceed every receiver’s capacity and link path transfer ability. In sender driven congestion control over IP/Multicast, the sender won’t get the congestion status directly from the underlying network, but from the ACKs from multicast group receiver. The receiver will get the point need congestion control from local resource status such as accumulated queue and awkward system load.Sender driven multicast congestion control algorithm is similar to unicast’s round trip mechanism, in which the sender adjust its update rate according to ACKs from receivers as figure 4. While in the receiver driven multicast congestion control, the receiver adjusts receiving rate according to its status in figure 5, layered data required. Most Congestion control on reliable multicast adopts sender driven mechanisms, while receiver driven layered multicast [10] is predominant in multimedia applications. Receiver-driven layered multicast is similar to the ideas of layered priority in some aspects. EMBED Visio.Drawing.6  Figure 4: sender driven congestion control EMBED Visio.Drawing.6  Figure 5: receiver driven congestion controlDifferent from that of purely reliable multicast, congestion control can be applied firstly on best-effort multicast. Congestion control on best-effort multicast is mainly to lower the system load and alleviate network traffic. Best-effort multicast, which has no ACK and repair data, need no reliable guarantee. In fact the underlying network adaptor simply drops tail during traffic. The sender can lower update rate in valid layers, and the receiver can further drop reflected data in layers accordingly. EMBED Visio.Drawing.6  Figure 6: congestion control on best-effort multicastCompared with best-effort multicast, congestion control on reliable multicast is more difficult and got much focus all along. There are many algorithm such as TFRC, SRM, LRTC, RMTP, etc., but they haven’t made full use of multicast requirements for distributed simulation. We will made further exploration about congestion control algorithm on reliable multicast in distributed simulation.Layered DDM FilteringThe two basic types of DDM filtering are grid-based and region-based filtering. There’s also a StaticSpacePartitioned DDM strategy[12] which segments network traffic on a routing space basis implemented in RTI-NG, but it’s not a value-based filtering and won’t implement RTI DDM services. For length this section will firstly introduce combing layer with region-based filtering , then it describes the design of layered grid-based DDM filtering in more detail. We planned to present the complete and concrete design and part implementation in a following article.Both grid-based and region-based filtering use multicast as the underlying networking technology. The chief difference between the two approaches are two phases about mapping information flows to multicast groups and users to multicast groups, which has been described by [8] as the Channelization Problem. Either filtering provides results less than anticipated in practice, so few implementations are only strictly based on either. And some researches have took additional receive-filtering as an important compensation for further filtering[6,13].In region based filtering, the layer can be mapped onto channel directly. The channels may be virtual on high level, and Figure 7 is an example for sender-side mapping. Please refer to part 3 for symbol definitions.The publisher maintains 1+ EMBED Equation.3   channels for the class, in which 1 is for reliable and  EMBED Equation.3   channels for  EMBED Equation.3   LAYERs. Obviously  EMBED Equation.3   is no higher than  EMBED Equation.3  , and each update may only use the subscribed layers of from  EMBED Equation.3   to  EMBED Equation.3  . For example, an update with EMBED Equation.3   = 1 belonging to the class of  EMBED Equation.3   = 3 uses channels 1 to 3. If channel 2 has no subscribers for this layer, this update will omit it. And when it comes to channel 1, the HandleValuePairSet will be truncated and processed in this channel.  EMBED Visio.Drawing.6  Figure 7: layer to channel mapping and HandleValuePairSet truncationWhen these channels other than reliable one are merged to one channel, it’s the current HLA transportation of HLAreliable and HLAbestEffort.The receiver-side mapping is analogous the sender-side described above, but it’s simpler and only need to truncate the update for  EMBED Equation.3  .From the experiences with data distribution management in large-scale federations[14] and observations in the Synthetic Theater of War [11], theater-level exercises have so huge communications that it is nearly impossible to break away from grid-based filtering although grid-based filtering also has some practical problems. The two main problems of grid-based filtering is the wastage of multicast groups and low filtering efficiency. From part 3 we can see a better filtering may be attained to combine layer-based publisher-subscriber Qos with grid-based filtering.Figure 8: Demonstration of the layered grid-based DDMFigure 8 is a demonstration of a 2-dimension layered grid-based DDM. The outer border labeled with “LAYER_VISION” indicates the boundary of LAYER_VISION, while the inner indicates that of LAYER_ABOUT. The subscriber gets all the entity information in its subscription region, but there’s some difference between different layer. The subscriber will get required attributes, including position, velocity and direction, etc. , of those tank frequently inside the area of LAYER_ABOUT. When it comes to the region between the inner border and the outer, the subscriber may be only notified that there are several tanks at corresponding positions with less frequency. In the circumstance when a publisher gets no acknowledgement for its negotiation request in its update cell, it even has no need to send updates to the corresponding multicast group. EMBED Visio.Drawing.6  Figure 9: disable update EMBED Visio.Drawing.6  Figure 10: Channelization based on layerOur scheme for establishing multicast channels is to add a process of negotiation launched from the publisher to subscriber. The publisher will launch the process on some frequency and group-inside region modification invocation to the multicast group, M5 in figure 9 for publisher P1. When the publisher receives no layer acknowledges, it will disable update to the corresponding group. When the occasion comes that S2 acknowledges P1 with  EMBED Equation.3   be layer 2, P1 will add S2 with the layer 2 to the subscriberList and S2 also maintains a publisherList including P1 with the layer. Then P1 starts its update for multicast group M5. In figure 10, S1 and S2 will establish separately channels based on the publisherList value. When an update comes whose layer is not in accordance with the publisher-subscriber Qos requirements, it’ll be abandoned directly in lower levels.One of the advantages of layered grid-based DDM is that overlap calculation is peeled off from multicast communication. The channels only pass through data whose identifier is in the publisherList and whose layer satisfies the publisher-subscriber layer relationship, and the subscriber only need to process those updates from channels. The number of irrelevant message is cut in this way, and the channels even can operate congestion control based on publisher-subscriber Qos category. At the same time, the calculation of region overlap is distributed in the subscribers in the multicast group. It will change the traditional central overlap calculation and the filtering based on publisher-subscriber Qos category is in fact making a class level object (clustering) regions overlap calculation. All this will alleviate the publisher load. The overlap information being composed into layer segments which can be picked up from the acknowledgements will simplify the representation.The DDM filtering requires an update with all attributes on new subscribers. If attributes are included in an update only when their value changes, and the update containing the last change was sent before the entity entered the subscriber’s AOI, the subscriber would not receive the correct value of attributes. This is particularly important for attributes that are set when an entity is created and never changed afterward[6]. The publisher with layered Qos category may calculate the subscribers’ layers and send an update with corresponding attributes to the layers. When the publisher’s load and network traffic are moderate, the update’s layer priority might be improved to LAYER_CRITICAL.DiscussionDynamical multicast group allocation –Grid-based filtering requires a large number of multicast groups to cover a wide terrain. [15] presents a scheme that keeps track of simulated entities that are publishing and subscribing to each cell and allocates groups to cells where publisher/subscriber intersection occurs. But the result shows that when the number of federates increases more than six and the cell intersection exceeds 10%, the DDM message volume increases much higher than the fixed grid-based method. It needs further investigation into dynamical effective multicast group allocation of grid-based filtering in large-scale simulations.Further attempt? -It must be pointed out that in some awkward situations, especially in theater-level exercises such as STOW, the overhead reliable messaging is too high for the host to handle the load [14]. In fact, it has the potential feature of the layer relationship between interest and region. To import the layered priority into reliable transportation may be a further attempt then.ConclusionVRLab is investigating interest layered priority and treat it  as a new technology for optimizing the performance of large-scale simulations based on HLA. We are making researches emphasized on scalability and interest filtering for distributed simulations.In this paper, we describe an extension to HLA based on layered priority which is drawn from some features of data distribution in real world. The extension of layered priority guarantees backward compatible with HLA standard and requires nearly none modification to federate codes portability. It brings forth some encouraging benefits such as publisher-subscriber Qos and congestion control. The new mechanisms will help decrease the heavy machine load and high network traffic in large-scale simulations, as deserves some focuses. And a layered grid-based DDM filtering is briefly introduced, which enhances the filtering efficiency and separates the overlap calculation with data exchange. 6. ReferencesIEEE Std 1516-2000, IEEE Standard for Modeling and Simulation (M&S) High Level Architecture (HLA) – Framework and Rules. Sep2000.IEEE Std 1516.1-2000, Draft Standard for Modeling and Simulation (M&S) High Level Architecture (HLA) – Federation Interface Specification. Apr2000.IEEE Std 1516.2-2000, Draft Standard for Modeling and Simulation (M&S) High Level Architecture (HLA) – Object Model Template (OMT) Specification. Apr2000. Thom McLean, “Hard Real-Time Simulation using HLA”, College of Computing, Georgia Institute of Technology, in Proceedings of the Fall SIW, 2001, Paper 01F-SIW-093.Zhao, H. and N.D. Georganas, “HLA Real-Time Extension”, Proc 5th IEEE DS-RT’2001 Fifth IEEE International Workshop on Distributed Simulation and Real Time Applications, Cincinnati, Ohio, Aug 2001Mathew D.Dorsch, Victor J. Skowronski, “Modifying the RTI for Active Networks” , in Proceedings of the Spring SIW, 2001, Paper 01S-SIW-007.Zabele, S., T. Stanzione, J. Kurose, and D. Towsley, “ HYPERLINK "http://www.tascnets.com/newtascnets/Publications/Documents/wmc2000.doc" Improving Distributed Simulation Performance Using Active Networks”, Invited Paper, Proceedings of World Multi Conference 2000, January 23-27, 2000, San Diego, CA. Adler, M., Z. Ge, J. Kurose, D. Towsley, and S. Zabele, “ HYPERLINK "http://www.tascnets.com/newtascnets/Publications/Documents/channelization.pdf" Channelization Problems in Large Scale Data Dissemination”, Proceedings of 2001 IEEE Int. Conference on Network Protocols.Stephen Zabele, “Interest Management Using an Active Networks Approach” , in Proceedings of the Spring SIW, 2000, Paper 00S-SIW-030.S. McCanne, V. Jacobson, "Receiver-Driven Layered Multicast", Proceedings of ACM, SIGCOMM ’96, October 1996.Steven J. Rak, Marnie Salisbury, Robert S. MacDonald, “HLA/RTI Data Distribution Management in the Synthetic Theater of War”, in Proceedings of the Fall SIW, 1997, Paper 97F-SIW-119.Mark Hyett, Roger Wuerfel, “Implementation of the Data Distribution Management Services in the RTI-NG” , in Proceedings of the Spring SIW, 2002, Paper 02S-SIW-044.Douglas D.Wood, “Implementation of DDM in the MAK High Performance RTI”, in Proceedings of the Spring SIW, 2002, Paper 02S-SIW-056.Bill Helfinstine, Deborah Wilbert, Mark Torpey, Wayne Civinskas, “Experiences with Data Distribution Management in Large-Scale Federations”, in Proceedings of the Fall SIW, 2001, Paper 01F-SIW-032.Boukerche, A. Roy, and N. Thomas, “Dynamic grid-based multicast group assignment in data distribution management”, Proc 4th IEEE DS-RT’2000 Fourth IEEE International Workshop on Distributed Simulation and Real Time Applications, San Francisco, California , Aug 2000Author BiographiesZHOU ZHONG is a PhD student of The Key Laboratory of Virtual Reality Technologies, Ministry of Education, in Beijing, China. VRLab has developed DVENET, the most comprehensive distributed virtual environment network in China that supports distributed collaboration and antagonism exercises, under the support of National ‘863’ High-Tech Program of China since 1996. Over the past four years, he has performed research and software development in distributed simulation platform, including HLA Run Time Infrastructure-DVE_RTI and computer networks. His interests are in simulation and distributed systems.Dr. Zhao Qinping is a professor in the school of Computer Science and Technology, Beihang university, Beijing, China. He received his PhD in computer science from Nanjing university in 1986. His research interests include virtual reality and AI. EMBED Visio.Drawing.6  