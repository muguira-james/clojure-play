Reducing Bandwidth Requirements of Distributed SimulationsMatthew D. DorschThomas KostasVictor SkowronskiNorthrop Grumman Information Technology55 Walkers Brook DriveReading, MA 01867781-205-2111 HYPERLINK "mailto:mdorsch@northropgrumman.com" mdorsch@northropgrumman.com HYPERLINK "mailto:tkostas@northropgrumman.com" tkostas@northropgrumman.com HYPERLINK "mailto:vskowronski@northropgrumman.com" vskowronski@northropgrumman.comKeywords:Reliable Multicast Communications, Active Networks, Packet Filtering, Active Interest Filtering, ModSAF, Network Performance, High Level Architecture, Run-Time Infrastructure, OneSAF, Computer Generated Forces, CGFABSTRACT: This paper discusses two methods of improving the performance of distributed simulations by improving the efficiency of the underlying network: reliable multicast communications and dynamic interest management. Reliable multicast communications greatly reduces packet repetition within the network. Multicast-based dynamic interest management techniques remove excess traffic within a network therefore lowering processor usage at the nodes. Both techniques were implemented within the Federation Development Kit, which contains a source-available, HLA-compatible RTI developed at Georgia Tech. The resulting RTI was verified using both the OneSAF Testbed with the NAWC DIS to HLA Gateway and ModSAF version 5.1. Various measurements of federations using this RTI clearly demonstrate the effectiveness of these techniques.IntroductionThis paper describes and provides solutions for two scalability issues of distributed simulations. The first issue is that of using repeated unicast for reliable communications. At best, a simulation using repeated TCP Unicast communications has linear bandwidth growth as the number of federates increases, assuming only one source. If all federates are sending, this growth rate is on the order of N2; each federate would need to open sockets to all other federates. If a packet server is used, it would need to open sockets to all federates and still need to repeat packets. With the limitations on the number of file handles on some systems, the number of open sockets can be a problem. The Reliable Adaptive Multicast Protocol (RAMP) provides reliable network communication and creates a constant amount of traffic, assuming there is one source. If all federates are sending, RAMP provides linear bandwidth growth. Further, RAMP uses just one multicast group.The second issue addresses data dissemination. Studies of simulation traffic indicate that, given a subset of data transmitted across the network, only a small number of federates will have an interest in that data. Several different techniques have been developed to manage the distribution of the data. One implementation divides the simulation playbox into thousands or even millions of multicast groups. Unfortunately, current network interface cards limit the number of multicast groups that can be joined. Other mechanisms remove data only after it has traversed the network, flooding communications layers with more bandwidth than would normally be needed. Another flaw found in current mechanisms is related to the dynamics of a simulation. As an entity’s location changes, for example, so do the interests of the entity. As a resolution to the Interest Management issue, this paper reviews the current state of the Active Interest Filtering (AIF) technique.This paper provides a review of the Reliable Adaptive Multicast Protocol and Active Interest filtering. The paper outlines changes made to the AIF implementation and usage with respect to the RTI. Finally, the paper concludes with our testing progress with ModSAF and the OneSAF Testbed.RAMP and AIF ReviewThe Reliable Adaptive Multicast Protocol is reviewed in Section 2.1. A review of Active Interest Filtering is presented in Section 2.2. Reliable Adaptive Multicast ProtocolThe Reliable Adaptive Multicast Protocol [2] is a multipoint-to-multipoint reliable communications protocol. It uses a negative acknowledgement to signal that a packet was not received. For flow rate control, RAMP has a linear increase/exponential decrease mechanism similar to TCP communications. Each packet is sent once to the group, instead of once per federate.The Reliable Multicast Framework (RMF) is an implementation of RAMP. RMF uses a software wrapper around a standard multicast UDP group to meet the RAMP specification. If a receiver detects that a packet was lost, it will request retransmission of the packet by sending a NAK. Upon receiving a NAK, the sender will retransmit the missing packet. All control signals and retransmitted packets are sent using the same multicast UDP group.The RMF software chooses one receiver as flow control manager based on system load. The receiver that is processing the received packets at the slowest rate is chosen. The manager limits how often packets can be transmitted by senders. Senders will pause when they reach this limit, waiting for the manager to give permission to send again. The RMF package can choose a different receiver as control manager as system loads change.Active Interest FilteringActive Networks take advantage of processing capabilities within network hardware. A future goal is to develop active network nodes (such as routers) that can collaborate and share desired protocols and services as needed. As an example, a new or modified protocol can be implemented in a large system without needing to rebuild the network hardware. The protocol would simply be transmitted to the routers.Active Interest Filtering is an active service that provides Dynamic Interest Management (DIM). Each end host transmits its interests into the network. The AIF service in the adjacent active router installs the interest filters in the router’s firewall. As each packet enters the router from an upstream source, data in the payload of the packet is checked against the criteria of the interest filters. Packets that meet the criteria are allowed through. The remaining packets are removed from the network.If implemented improperly, this mechanism could be detrimental to the network. For instance, if interest filters were sent too often, the filters would compete with the data packets for bandwidth. For this reason, the filter control layer and the data layer are logically separated. Filter transmissions are therefore kept to a minimum. Figure 2.1 diagrams the two layers.Even if the number of filter packets is minimized, an excessive number of installed filters can delay the data packets. Techniques have been developed to alleviate this issue. First, the filters are configured into a decision tree. Instead of checking the filters using a linear algorithm, the decision tree uses a binary search algorithm. Our testing has shown that a Pentium II 266 MHz PC being used as a linux software router can perform 75 filter tests before degrading the performance of a 100 Mbps Ethernet link being flooded with 1KB packets. These 75 tests are done linearly, creating a decision tree with 75 levels. The router could theoretically check 275 filters before causing packets to be delayed or lost. Another solution is to use a Pairwise Nearest Neighbor algorithm to combine filters. This reduces the total number of filters to test.Additions to AIFOver the course of the past year, several issues arose with respect to our use of Active Interest Filtering for purposes of Interest Management. These sections describe the changes made in response to these issues.Filtering TechniqueOriginally, interest filters installed in the network compared the values of entity attributes against filters. Unfortunately, this violates the intent of the High Level Architecture (HLA) specification, because it requires that the Runtime Infrastructure (RTI) have knowledge of the data it is communicating.To avoid this violation, each entity is associated with a publication region. The RTI places the values of the publication region into the entity update packet. Interest filters are given the location of the region data within the packet. Packets are passed or dropped based on the overlap of the publication region and the interest filter. As an added benefit, interactions can be sent with a region and filtered as needed.This removes two requirements from the original implementation of AIF within the RTI. First, the FOM does not need to be changed to add dimension attributes. Second, the simulation does not need to maintain these attributes along with its internal entity attributes.For exact filtering, the simulation should use the point representing the entity’s position in the routing space as the publication region. This region would need to be modified before each entity update is sent, assuming the entity’s position within the routing space is changing. Declaration ManagementRecently, Northrop Grumman Information Technology partnered in the Joint Synthetic Battlespace (JSB) experiment. The JSB federation is a popular concept, enabling consistent comparisons of different sensor models and other similar benefits. The federation consists of standardized simulations that model the physics of real world entities and environments. By replacing one sensor federate with another sensor federate, advantages and disadvantages between the two simulated sensors can be identified.A federation of this type does not lend itself to Data Distribution Management (DDM) however. Each federate produces updates for different classes of entities. One federate might be a weather server, which has no interest in receiving data. Another federate might be the sensor model, which would only be interested in updates regarding the location of the sensor. In a federation such as this, Declaration Management (DM) is more useful than DDM.Active Interest Filtering can perform filtering on entity class as readily as it performs filtering based on DDM regions. The RTI was modified to place the class of the owning entity within each entity update packet. Interest filters added to the network include criteria for entity class. Due to the research level quality of the software, the RTI actually controls DM by creating a DDM region that has ranges with bounds from MIN_EXTENT to MAX_EXTENT. When the simulation calls a DM subscribe or unsubscribe service routine, the RTI simply performs the similar DDM request. This workaround will be resolved with the next version of the AFSP software. Recent TestingThe original Active Network testbed used ModSAF version 5.1 as the simulation application. However, this version of ModSAF was plagued with problems. The OneSAF Testbed with the NAWC DIS to HLA Gateway were executed with more success. Figure 4.1 shows the topology. There are 27 federates around the edge and 13 active routers. A 28th federate is attached to the middle router for control purposes. All links are 100Mb full duplex Ethernet. Original ModSAF TestbedTo test the scalability of Active Interest Filtering and RMF a testbed with 28 federates was designed and implemented using the University of Utah Emulab. ModSAF was the chosen application. The goal was to simulate 71 entities on each of 27 federates, totaling 1917 units. The 28th federate would be used to monitor the simulation and capture still images of the plan view display. Unfortunately, using ModSAF version 5.1 caused some issues. Entities could be loaded on only 26 of the 27 federates. The simulation was progressively slower as these entities were created. ModSAF was barely publishing entity updates, even though the scenario was not being executed yet. The ModSAF process was using over 800MB of memory, while our systems only had 512MB of physical RAM. When the last group of entities was loaded, ModSAF stopped ticking the RTI fast enough, and the federation would crash. Other issues included segmentation violations, which were forwarded to the appropriate parties. With respect to actually executing the scenario, instead of just loading the entities, only simulations with nine or fewer federates were successful. With more than nine federates, ModSAF would not tick the RTI fast enough, again causing the federation to crash.OneSAF TestbedAfter researching possible solutions to ModSAF issues, ModSAF was replaced by OneSAF Testbed on the simulation network. Previous work had shown that OneSAF and the NAWC Gateway could be used [8]. The gateway had already been modified to use Dynamic Interest Management. However, additional changes were still necessary.First, the gateway did not have a method to deleting local entities. This is a required function when using AIF, as some entities will not be updated for minutes at a time. Further, other entities will not be within an interest region when they are created, which causes issues with discovery. A method for performing local deletions was added to the gateway. Entities that require delayed discovery are now properly instantiated on remote federates. The other change was minor and is associated with DM. The gateway subscribed to all classes through DM. However, the only time the gateway needed to receive updates for a remote physical entity was when the entity was within the subscription region of a local entity. To fix this issue, the subscriptions to the Munition and Platform classes were moved to the dynamic region management routines.After spending two weeks working on the aforementioned issues and testing, the 28-federate simulation executed without issues. The combined memory utilization of OneSAF and the gateway was less than 450MB. The network benchmark results are in the next section.ResultsSection 5.1 describes the results seen with Active Interest Filtering performing DDM. Section 5.2 covers Declaration Management performed through AIF. Section 5.3 details bandwidth reductions gained by using Reliable Multicast. Active Interest FilteringFor this scenario, each entity subscribed to all platforms and munitions within an 8 Km square centered on the entity. Groups of entities were placed in the playbox such that adjacent groups in the playbox were simulated by adjacent federates in the topology. Each group was roughly 2 Km wide. The end result is that each federate receives updates from four adjacent federates: two on either side. Figure 5.1 shows both the measured traffic received per federate, as well as the expected traffic without Interest Management. Each federate shows a minimum of a 6.5:1 improvement compared to a simulation with no interest management. Assume a multiple multicast UDP group mechanism was used instead of AIF. Each federate would be assigned one group to which it would publish updates. Each federate would subscribe to the four groups of the adjacent federates. This mechanism would also produce the results in Figure 5.1. However, this mechanism has several disadvantages. First, an operator would need to spend time manually configuring the federates to publish and subscribe to the appropriate multicast groups. AIF would configure itself for optimum performance while entities were being created. Second, this mechanism uses multiple multicast groups. If there were a thousand federates and each federate needed to join 100 multicast groups, the network interface cards would receive data from all groups, not just the desired 100. The reason for this is that current network interface cards can only handle being a member of anywhere from four to thirty-two groups. Beyond that, the interface would receive all traffic. AIF uses just one group. Finally, this configuration would work only for this scenario, requiring the operator to spend time configuring multicast groups for the next scenario. AIF would immediately be functional and greatly beneficial for any simulation written to use Dynamic Interest Management. Simulations that only use DM to filter data would also see improvements in network efficiency.Declaration Management ResultsFigure 5.2 is the topology of the AIF enabled JSB federation. Four hosts run the four different pieces of the federation. One system is executing OneSAF Testbed with a DIS to HLA gateway. This federate only subscribes to weather data. The next federate is the Common Environment Server, which is responsible for the basic physics of visible, EM, and IR wave transmission through the environment. The CE Server receives all data from the other federates and transmits detection opportunities via the reliable channel to the Sensor federate. This federate compares the detection opportunities with its only interest, the location of the sensors. The final federate is the weather server. It subscribes to nothing. Figures 5.3 through 5.6 are images of the Packet Marking Visualizer. The PMV is used to display the effectiveness of the Active Interest Filtering. For test purposes, packets that do not meet the criteria of an interest filter are marked and passed downstream instead of being removed from the network. This allows performance measurements to be taken with respect to how many packets would have been received and how many packets would have been dropped. Further, when the marks in the packets are compared with the filters on the local host to see if the packet was wanted, the PMV can be used as a diagnostic to check if the AIF is working properly. The two primary colors of the PMV are green and blue, which indicate packets that were not wanted and not received, and packets that were wanted and received, respectively. Yellow indicates packet over-delivery: packets that were received but not wanted. While this is not a serious issue, it means that AIF is not running optimally. Finally, red indicates packets that were wanted but not received. This is a serious issue if it occurs for more than a few seconds, as the validity of the simulation may be lost.As can be seen in these figures, the federates are receiving only the data they want and nothing more. Only one modification was made to a federate to allow AIF to function properly. The weather server subscribes to no data. The current AIF system interprets this lack of interest as a broken connection, and allows all data packets through, instead of dropping all packets. As a workaround the weather federate was modified to subscribe to weather data. It still receives nothing, but gets AIF to work correctly. The interpretation that causes this issue will be corrected in a future version of the software. Beyond this workaround, the federation greatly benefited from AIF without any modifications. Reliable Multicast ResultsFigure 5.7 compares the measured bandwidth used by RAMP with the expected bandwidth used by a TCP Unicast based packet server. The bandwidth used by RAMP was measured by using ipchains to count the number and size of packets passing through the core router. The base bandwidth is the total amount of data transmitted by the gateway. The expected TCP Unicast bandwidth assumes a packet server running adjacent to the core router and is based on the base bandwidth. The traffic amounts listed in Figure 5.7 would be the bandwidth used by one outgoing link of the core router. The RMF has reduced the reliable traffic on this link by more than 80%. Refer to figure 4.1 for the network topology.ConclusionThis paper has covered the following points.A Reliable Multicast communications system improves scalability by removing the need to transmit reliable traffic once per federate. As the number of federates increases, Reliable Multicast systems improve in efficiency when compared to TCP Unicast systems. Tests using Reliable Multicast mechanisms required much less bandwidth than tests using TCP Unicast.Active Interest Filtering uses exact filtering to provide Dynamic Interest Management. A federate only receives the entity updates that are pertinent to the local simulation. All other update packets are dropped upstream. Tests using AIF used much less bandwidth than tests without Interest Management.Both the Reliable Adaptive Multicast Protocol and Active Interest Filtering technologies have been implemented and tested within an RTI. Within a 28 federate test, neither AIF nor RAMP has shown signs of scalability problems.Finally, the Reliable Multicast Framework and Active Interest Filtering can be used separately as well as in combination.ReferencesS. Zabele, M. Dorsch, M. Keaton, and R. Kennett, “Dynamic Interest Management for Optimal State Update Messaging”, Proceedings of the 2001 I/ITSEC, Orlando, Florida, December 2001.A. Koifman and S. Zabele, “RAMP: A Reliable, Adaptive Multicast Protocol”, Proceedings of InfoCom '96, San Francisco, CA, March 1996McLean, Thom and R. Fujimoto, “The Federated-simulation Development Kit: A Source-Available RTI”, Proceedings of the Spring 2001 Simulation Interoperability Workshop, Orlando, FL, March 2001.S. Kasera, S. Bhattacharyya, M. Keaton, D. Kiwior, J. Kurose, D. Towsley, S. Zabele, “Scalable Fair Reliable Multicast Using Active Services”, IEEE Network Magazine, Jan-Feb 2000Dorsch, Matthew and Skowronski, Victor, “Modifying the RTI for Active Networks”, Proceedings of the Spring 2001 Simulation Interoperability Workshop, Orlando, FL, March 2001.Van Hook, D., S. Rak, and J. Calvin, “Approaches to Relevance Filtering”, 94-11-144, Eleventh Workshop on Standards for the Interoperability of Distributed Simulations, September 26-30, 1994.Lepreau, Jay et al., “An Emulation Testbed for Networks and Distributed Systems”, Intel IXA University Workshop, June 2001.Dorsch, Matthew, “Achieving Scalability Within High Level Architecture Run Time Infrastructures”, Proceedings of the Fall 2001 Simulation Interoperability Workshop, Orlando, FL, September 2001.Author BiographiesMATTHEW D. DORSCH is a Member of the Technical Staff at Northrop Grumman Information Technology. Prior to joining Northrop Grumman Information Technology, he worked as a programmer/analyst and developed user interfaces. Matthew received a B.S. in Computer Science from Rensselaer Polytechnic Institute.DR. VICTOR J. SKOWRONSKI is a Senior Member of the Technical Staff at Northrop Grumman Information Technology, where he does work in simulation systems.  Prior to joining Northrop Grumman Information Technology in 1996, he did research in solid modeling at Rensselaer Polytechnic Institute, where he also earned a PhD in Computer Engineering. Victor earned a M.E. and a B.E. in Electrical Engineering from Stevens Institute of Technology. He is a licensed Professional Engineer in New York and Massachusetts.Dr. THOMAS KOSTAS received the BS in Computer Engineering and BA in Economics from Lehigh University in 1990.  He received the MS in Electrical Engineering in 1995 and PhD in Electrical Engineering in 2000 from Northwestern University.  He is currently a Principle Member of Technical Staff at Northrop Grumman Information Technology in Reading, MA with interests in networking and communications research.Figure 5.3 is of the PMV for the Vehicle Federate. Only weather updates are received.Figure 5.2 depicts the JSB federation topology. All links are 100 Mbps with full duplex. EMBED Word.Picture.8  Figure 4.1 diagrams the network topology.100 Mbps LinksActive RoutersSimulation DataFederatesFigure 2.1 is a flow diagram of filters, in blue, and simulation data, in red.FiltersAFSPFilter ManagerFirewallActive RouterFiltersFilters (Subscriptions)Filtered DataData EMBED MSPhotoEd.3  Simulation DataAFSPDistributed Simulation(OneSAF Testbed)NAWC DIS to HLA GatewayHLA Compliant RTIAN ModsFilter MgrFirewallSimulation HostFigure 5.4 shows the PMV for the Common Environment Server. All updates are received. EMBED MSPhotoEd.3  Figure 5.6 reveals the few sensor platform updates received by the Sensor Federate.Figure 5.5 indicates that the Weather Server is receiving no traffic. EMBED MSPhotoEd.3   EMBED MSPhotoEd.3  Figure 5.1 shows the number of updates received with and without Active Interest Filtering. EMBED Excel.Chart.8 \s Figure 5.7 shows the bandwidth used by RMF and the estimated bandwidth used by repeated TCP Unicast. EMBED Excel.Chart.8 \s 