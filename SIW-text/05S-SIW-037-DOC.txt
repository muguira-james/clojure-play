Space-based Sensor Integration with the Advanced Warfighting Simulation (AWARS) using HLAJoseph D. FannDynetics, Inc.1000 Explorer Blvd.Huntsville, Alabama  35806256.964.4544 HYPERLINK "mailto:joey.fann@dynetics.com" joey.fann@dynetics.comAndrew E. PhendCurt RuffingTeledyne Brown Engineering300 Sparkman DriveHuntsville, Alabama  35805256.726.1791, 256.726.1602 HYPERLINK "mailto:joey.fann@dynetics.com" andy.phend@tbe.com,  HYPERLINK "mailto:curt.ruffing@tbe.com" curt.ruffing@tbe.comSteve GlasgowUS Army TRADOC Analysis Center255 Sedgwick AvenueFort Leavenworth, Kansas 66027913.684.9271 HYPERLINK "mailto:steven.glasgow@us.army.mil" steven.glasgow@us.army.milJeff Franssen Army Space and Missile Defense Liaison National Simulation CenterFort Leavenworth, Kansas 913.684.8215 HYPERLINK "mailto:Jeff.Franssen@us.army.mil" \o "mailto:Jeff.Franssen@us.army.mil" Jeff.Franssen@us.army.mil	Keywords:Space-based sensor, AWARS, SAR, GMTI, DMSO, HLA, Federation, FOMABSTRACT:  During the September 2001 Space Force Management Analysis Review (FORMAL), the Army Vice Chief of Staff acknowledged deficiencies in representing advanced space-based capabilities within the modeling and simulation (M&S) environment.  In response to these findings a Focus Area Collaborative Team (FACT), led by the U.S. Army Space & Missile Defense Command (SMDC), began the process of identifying steps necessary to address the specific shortcomings for Joint Space M&S applications.  A resulting effort of the FACT was an Army Model Improvement Program with the objective to introduce space-based sensor functionality into the Advanced Warfighting Simulation (AWARS) currently being developed by the Army Training and Doctrine Command (TRADOC) Analysis Center (TRAC).  The purpose of this paper is to provide a detailed description of the technical effort to integrate space-based sensor functionality into the AWARS system.  The paper begins with a description of both the AWARS and space-based sensor simulation systems.  Focus is then placed on the new Space-based Sensor (SBS) federate designed and developed to improve intelligence, reconnaissance, and surveillance (ISR) modeling within the context of a distributed simulation environment.  Utilizing the battlefield state information provided by AWARS, the SBS federate provides the capability to implement scheduled sensor requests, respond to dynamic tasking, and generate Synthetic Aperture Radar (SAR) and Ground-Moving Target Indicator (GMTI) sensor collection reports.  The paper then provides an overview of the effort to link the SBS federate with AWARS utilizing the High Level Architecture (HLA).  Specific insight into the development of the HLA Federation Object Model (FOM) as well as the Run-Time Infrastructure (RTI) services implemented to accomplish interoperability will be provided.  Finally, the paper will present a summary of the integration activity to include technical lessons learned as well as the overall benefit to studies and analysis realized by representing advanced space-based capabilities within the distributed simulation domain.1. IntroductionThis paper presents recent development activities and a current status of an Army Space Modeling and Simulation (M&S) Focus Area Collaborative Team (FACT) Project to provide enhanced space-based sensor representation to the Advanced Warfighting Simulation (AWARS) system.  This Project is a combined effort between the Space and Missile Defense Command (SMDC) and the Training Doctrine Command (TRADOC) Analysis Center (TRAC).While many facets comprise the history and development of this project, this paper will focus on the process employed to design, develop, and implement the distributed simulation architecture required to integrate the newly developed Space-based Sensor (SBS) federate with the existing AWARS system.  The paper begins with a brief summary of the AWARS system, then moves on to an overview of the fundamental components of a typical space-based sensor system.  Discussion then turns to the specific design and implementation of the new SBS federate, which was developed to provide an improved intelligence, surveillance, and reconnaissance (ISR) modeling capability within AWARS.  Attention is then given to the activities performed to implement a High Level Architecture (HLA) interface to accomplish simulation interoperability between AWARS and the SBS federate.  Discussion continues to include the results of two integration events conducted by the AWARS and SBS development teams on-site at TRAC – Fort Leavenworth.  Finally, conclusions and lessons learned are presented.2. Advanced Warfighting Simulation OverviewThe Advanced Warfighting Simulation (AWARS) development initiative seeks to unify three existing Corps/Unit of Employment (UE) level simulations within the Advanced Concepts and Requirements (ACR) domain. AWARS provides the analytic community a single, operational-level simulation for scenario development and analysis that is also capable of driving experiments and demonstrations when coupled with external battle command systems. Structurally, AWARS provides a multi-sided, deterministic, discrete event simulation environment representing the full range of combined arms combat with Joint contribution appropriate for UE/Joint Task Force (JTF) studies and analysis. AWARS represents units at the company level, but implements a template mechanism that allows internal representation at the platoon and lower levels.  For special cases, such as special operations force (SOF) teams and unmanned aerial vehicles (UAV), AWARS is capable of representation down to the squad and entity levels.The AWARS architecture and functional representation is based on a top-down approach to battle command implementation by defining unit operation plans (OPLANs) through phases, tasks, and objectives which subsequently drive the command and control of subordinate units.  These subordinate units then refine the top level operational objectives by devising intermediate phases and tasks to meet specific goals based on physical assets, environmental, and threat considerations.  This refined phase/task information is reflected back to the supporting units by use of a vertical (lower to higher) communication structure.The AWARS development effort is utilizing a three (3) build approach.  Currently in Build 2, AWARS achieved Initial Operational Capability (IOC) during the Build 1 phase in May of 2002.  Demonstrated functionality during this initial build activity included: command, control, communications, computers, intelligence, surveillance, and reconnaissance (C4ISR) implementation; dismounted infantry operations; fixed-wing and rotary-wing operations; unit maneuver; line-of-site fires; and non-line-of-site fires. Build 2 activities are focused on utilizing AWARS within the context of distributed simulation applications and experiments to demonstrate its effectiveness as a versatile constructive simulation capable of representing a wide range of battlefield assets at varying levels of fidelity.  Recent simulation integration activities have combined AWARS with various external simulations including the Aggregate Level Communication Environment Server (ALCES), OneSAF Test Bed (OTB), and more recently the SBS federate as described in this paper.  Additionally, AWARS is scheduled to participate in the Omni-Fusion (OF) exercise in 2005.Build 3, encompassing the Final Operational Capability (FOC), is currently scheduled for completion in early FY 2007.  Enhanced functionality planned for this release includes improved C4ISR, engineer, logistics, atmospheric effects (e.g. smoke), and nuclear/ biological/chemical (NBC) representation. Additional Joint functionality, such as advanced naval and amphibious operations, will ensure that AWARS will continue to support a wide range of simulation-based training and analysis applications for the foreseeable future.3. Space-based Sensor OverviewPrior to a discussion of the development of the SBS federate, it is useful to provide a brief overview of the fundamental components and associated functionality of a space-based sensor system.  In general, any space-based sensor system will have four fundamental elements including: 1) a constellation of satellites designed to provide a desired degree of global coverage; 2) a radar sensor on each satellite in the constellation to provide surveillance; 3) a ground element providing telemetry, tracking, command and control of the satellite constellation, mission scheduling for the radars, and receipt and processing of the mission data collected; and 4) a communications architecture supporting the interfaces and data transmission requirements.  The following paragraphs briefly describe each of these components.A constellation of satellites may be configured in a number of ways, requiring a thorough evaluation of the orbital characteristics and assessment of the technical, economic and operational issues involved.  For any mission there are a number of factors to be examined when designing the constellation including altitude, orbit type, number of satellites required, spatial relationships between satellites, co-visibility requirements, and operational lifetime desired.  Typically, trade-offs must be made between these factors to achieve an optimal constellation configuration.   Space-based radar systems are generally described as comprising the following elements: the antenna, the transmitter, the receiver, the signal conditioner and processor, target detection and classification processing, and the system control (antenna and platform) functions.  Depending on the mission selected, the radar performance is defined in terms of the spatial and radiometric considerations necessary to resolve specific targets or scenes.The ground-based portion of a military space-based sensor system would likely consist of two or more elements including a Satellite Operations Center (SOC), and ground stations capable of receiving downlinks co-located with the data users.  The SOC typically retains control authority for the satellites in the constellation and is responsible for the health and sustainment (including radar scheduling) of the constellation.  The communications architecture for the space-based sensor would ordinarily accommodate telemetry, tracking, and command as well as data delivery functions.  4. Space-based Sensor Federate DevelopmentThe SBS federate development activity focused on the first two space-based sensor components as described in the previous section.  Specifically, development emphasis was placed on modeling the satellite constellation with the associated sensor applications.  The ground-based portion of the system is emulated through the use of user-defined configuration files (i.e. to define sensor collection requests) and the dynamic tasking capability provided by AWARS, which is discussed later in the paper.  The communication architecture is implemented via a combination of configuration files and a series of High Level Architecture (HLA) Interaction definitions.  The following sections provide an overview of the Constellation and Radar component representation as modeled by the SBS federate. 4.1 SBS ConstellationAn initial challenge when modeling a space-based sensor system was defining the configuration of the satellite constellation which provides the global surveillance coverage.  For the SBS federate implementation, a method was needed that allowed for the modeling of multiple satellite constellation configurations.  To provide maximum flexibility, the resulting SBS implementation provides the capability for the user to configure unique satellite groups.  Satellite groups are collections of satellites sharing common constellation and radar sensor characteristics, also configured by the user.  An entire satellite constellation consists of one or more satellite groups.  Ephemeris data for each satellite can be calculated using the input configuration of its satellite group.  The SBS federate calculates the satellite ephemeris data internally or by utilizing an external propagation routine.  The internal method of ephemeris data calculation allows the user to define the position of satellites in a satellite group by specifying the number of orbital planes, the number of satellites per plane, the inclination, the altitude, the starting phase of the group, and the starting Right Ascension of the Ascending Node (RAAN) of the group.  The internal ephemeris calculations will use this configuration to determine the initial position of the satellites at the beginning of the scenario.  All satellites in an orbital plane will be spaced out evenly throughout the plane based on the first satellite’s initial position.  The initial position of the first satellite will be defined by the starting phase and RAAN of the group.  The orbital positions of satellites in an internally defined satellite group will be orbiting the Earth in a circular orbit.If a more detailed constellation definition is needed or a different method of orbital propagation (e.g. elliptical) is desired, then the input configuration of the satellite group can be externally generated.  The SBS federate is equipped to allow for the input of external ephemeris data generated by external satellite propagation tools.  This capability allows the user to define virtually any constellation imaginable, limited only by the complexity of the external tools being used.  During development of the SBS federate, satellite ephemeris data was generated externally using the Satellite Tool Kit (STK) Standard, but any external satellite propagator could be used.  The SBS federate reads the formatted ephemeris data files generated from the propagation tools and uses the files to define the satellite positions in their orbit at any given time.The SBS federate input configuration allows the user to define a group consisting of any number of satellites in any number of orbital planes in any type of orbit.  The combination of satellite groups allows the user to define multiple constellation configurations, including constellations containing varying planes at different altitudes, and/or mixed constellations containing internally and externally generated data.  This design feature provides the user with maximum flexibility in defining the satellite constellations.For initial experimentation purposes, the SBS federate models a satellite constellation consisting of two separate satellite groups.  One group is a Low Earth Orbit (LEO) group of 21 satellites in 3 planes (near-continuous global coverage) at 1000 Km; and the second satellite group is a Medium Earth Orbit (MEO) group of 10 satellites in 2 planes at 10,000 Km.  The initial satellite position in both groups is located at 0 latitude, 0 longitude, and both groups have a starting inclination angle of 75 degrees.  In this design, it is assumed that the LEO satellite group will provide the majority of the Ground-Moving Target Indicator (GMTI) surveillance requests while the MEO satellite group will provide the majority of the Synthetic Aperture Radar (SAR) surveillance requests.4.2 SBS RadarFor this application, the SBS federate models both Synthetic Aperture Radar (SAR) and Ground-Moving Target Indicator (GMTI) radar sensors.  SAR is a radar mapping technique for generating high-resolution images of surface targets and the surrounding terrain, while GMTI is designed to detect and retain signals from moving ground targets.  The radar model used for SAR processing is based on a focused, pulsed, radar with non-coherent integration, typical of a space-based radar system.  Often a SAR image is collected by the sensor and then processed using sensor fusion algorithms at a sensor fusion node.  In the interest of future AWARS capability expansion, the sensor fusion node is implemented within the AWARS model itself, eliminating the requirement for the SBS federate to model SAR radar sensor exploitation.  Instead, the SBS performs the sensor collection and builds a representative truth image of the requested battlefield area.  This implementation does not require many of the typical sensor performance parameters that would define the radar, however certain performance parameters are needed to determine the time required to perform a SAR collect (needed for scheduling tasks).  These include the antenna aperture (resolution) and the frequency of the radar, both of which are configurable by the user.The SBS federate utilizes an effects-based modeling approach to implement the GMTI sensor modeling.  User inputs include a representative Radar Cross Section (RCS), a representative range, a representative Signal-to-Noise Ratio (SNR), a detection threshold, a dwell time, a probability of false alarm, and a minimum detection velocity (MDV).  The SBS federate retrieves the current location of the sensor in relation to the target and, based on the representative radar sensor parameters and radar range equation, performs an adjusted sensor collection.  Once collected, the data is processed and detections are computed based on target velocity in the direction of the satellite, representative MDV, target SNR, and the detection threshold.  In addition, false alarms are computed based on the detections and the probability of false alarm.  By allowing the user to configure representative radar sensor performance parameters, the SBS federate provides a flexible framework for the representation of a space-based GMTI sensor.5. Space-based Sensor ImplementationThe Space-based Sensor (SBS) federate was created utilizing a modular, object-oriented development approach.  By utilizing this approach, it is envisioned that the SBS will provide a flexible and expandable modeling environment to implement additional and/or higher fidelity simulation representation as the need arises.  The resulting design currently contains six major components including a Schedule Manager, Mission Scheduler, Collection Controller, Collection Processor, Event Handler, and HLA Interface (see Figure 5.1).  A simple GUI is also provided to configure SBS-specific setup files and scenario information.  The following paragraphs contain brief functional descriptions of each component including discussion of the interdependencies between components.The Schedule Manager component generates a list of sensor collection requests and Named Areas of Interest (NAIs) based on an external event file that is configured prior to simulation execution.  NAIs are also generated from the AWARS Scenario file.  The Schedule Manager is responsible for merging the sensor collection requests, as specified in the external event file, as well as any dynamic sensor collection requests, generated by AWARS during the scenario execution, into a list of collection requests.  Once all collection requests have been merged into the list, they are sent to the Mission Scheduler.The Mission Scheduler component utilizes satellite ephemeris data and the list of collection requests provided by the Schedule Manager to produce a surveillance mission schedule to be executed by the Collection Controller component.  Satellite orbital position data must be accessible to the Mission Scheduler to generate a complete mission schedule for each planning period.  The satellite constellation position data is either generated internally by the SBS federate, or is provided by an external satellite propagation model (see Section 4.1).The Collection Controller component models the constellation of satellites.  It is designed to execute the scenario schedule provided by the Mission Scheduler.  The Collection Controller executes the scenario mission schedule within the context of the of the battlefield state for the given simulation time.  Since the SBS federate does not model ground units, the Collection Controller must utilize the current battlefield state as provided by AWARS.  The Collection Controller can instantiate a local “copy” of the initial force laydown as specified by the AWARS Scenario file, or receive the force laydown from AWARS via the initial battlefield update.  The Collection Controller continues to receive battlefield updates from AWARS every sixty (60) seconds during the course of the simulation execution.  When an update is received, the existing internal data structure is updated with the changes.  The data produced from the collection of the mission schedule is stored and passed to the Collection Processor for further processing.The Collection Processor component performs all SAR/GMTI processing and provides the reporting function back to the AWARS model.  This includes determining all observables within the requested NAIs and GMTI platform detections. Once the processing of collection data is complete, the Collection Processor generates collection reports for transmission to the AWARS Command and Control (C2) centers.  The SBS Event Handler is the event driver for the internal federate implementation.  All components interact with the handler to send and receive status messages, and to keep in sync with the internal simulation time step.  All SBS components post events to the handler and react to messages from the handler.  Once a message is posted, it is placed in the Event Handler event queue.Figure 5.2   SBS Module Descriptions6. HLA Interface Module DesignWhile the requirements for the space-based sensor capability were being defined, the decision was made to develop the capability as a separate module from AWARS.  Given this design configuration, a distributed simulation architecture would be required to implement the interface between AWARS and the new SBS module.  The High Level Architecture (HLA) has been the standard DoD architecture for connecting distributed simulations for several years [1].  Two broad objectives of the HLA are to facilitate interoperability between heterogeneous models and simulations, and to promote the reuse of M&S components.  With regard to interoperability, the HLA object specification and standard service approach seemed ideal for integrating the established AWARS simulation system with the newly developed SBS module.  From a reuse perspective, it is envisioned that the effort to implement a standard simulation interface between the two federates will generate reuse opportunities in the future.Since its inception, AWARS has been designed to operate in a distributed simulation environment by utilizing the HLA.  At the time of the AWARS/SBS integration effort, the AWARS development team was using the 1.3 version of the HLA standard.  Based on this experience, it was decided that the AWARS/SBS integration would also be implemented using HLA version 1.3.  One of the initial steps when implementing an HLA interface is to define the Federation Object Model (FOM) which defines the simulation data to be exchanged between the individual federates.  For the AWARS/SBS integration task, this step was somewhat simplified by the fact that the federation in question contained only two simulations.  The resulting FOM was specified in accordance with the HLA Object Model Template (OMT) [2].  Another important step in implementing an HLA interface is to define the specific HLA Interface Specification services necessary to accomplish the simulation integration.  During the initial design phase, it was anticipated that Interface Specification [3] services would be selected from the Federation Management, Declaration Management, and Object Management service groups.  Utilizing the HLA Time Management services was considered, but was later determined to be unnecessary based on the subsequent federation design.6.1 FOM DevelopmentSeveral factors contributed to the AWARS/SBS FOM development process including the fact that the SBS is a new simulation development effort, and that this activity represented the first integration of space-based sensor representation within the AWARS model.  Since there was no known previous effort to build upon, the FOM object structure and associated data representation originated from a blank piece of paper.  The expected data exchange between the SBS federate and AWARS was initially specified in the SBS federate Software Design Specification (SDS) [4].  The SDS specified that AWARS would provide the object representation of the battlefield state.  The battlefield state would be updated every sixty (60) seconds and would only provide updates to the battlefield entity attribute values that changed between update cycles.  In addition to the preconfigured sensor collection requests provided to the SBS by the external event file, AWARS could dynamically issue sensor collection requests to the SBS federate.  These requests would be generated when there are no AWARS assets available to satisfy the collection requirements.  The resulting SBS federate has the capability to perform the necessary collections, both pre-configured and dynamic, and report the results back to AWARS during the execution of the simulation.6.1.1 Object SpecificationA major issue identified early in the development phase pertained to the level of object aggregation represented by the two simulations.  Although AWARS does provide representation down to the platform (i.e. entity) level, Unit and Sub-unit representations are also maintained.  The SBS requires representation at the platform level to determine the results of both Ground-Moving Target Indicator (GMTI) and Synthetic Aperture Radar (SAR) detections.  Due to the expected size of the battlefield representation provided by AWARS, there was some concern that providing object representation at the platform level would cause performance issues during battlefield state attribute update activities.  However, object representation at the Unit level would not provide an adequate level of object fidelity for the SBS analysis.The resulting object definition specifies the AWARS battlefield objects at the Sub-unit level (see Figure 6.1.1.1).  In addition to Sub-unit position data attributes, a list attribute is included to specify the type and number of platforms associated with each Sub-group instance.  Each platform attribute record (represented by an HLA Complex Datatype) includes an ID, Strength, and associated SAR and GMTI signature value.  This platform-level information (including the parent Sub-unit state information) is utilized by the SBS federate to perform the sensor collection analysis at the desired level.  Figure 6.1.1.1   FOM Object Specification6.1.2 Interaction SpecificationThe SBS federate is designed to provide sensor collection reports to AWARS over the course of a scenario execution.  As previously mentioned, SBS sensor collection requests can be configured in the external event file (read by the SBS federate before simulation execution), or received dynamically from AWARS during the course of a scenario execution.  To accomplish the request and reporting activities, unique HLA Interactions were defined and specified in the AWARS/SBS FOM (see Figure 6.1.2.1).A single request interaction allows AWARS to issue dynamic sensor collection requests.  Interaction parameters include Priority, Time, Scan Duration, Scan Type, and Named Area of Interest (NAI).  Upon receiving the interaction, the SBS federate creates a collection request, and based on available resources, attempts to schedule the request.  After the request has been scheduled, the SBS federate utilizes two (2) unique report interactions to provide the collection results to AWARS.  The SBS report structure is the same irregardless of whether the given collection request was specified in the SBS external event file or received as a sensor collection request from AWARS during the simulation execution.  The report interactions are, however, based on the type of report being sent (i.e. GMTI or SAR).For GMTI, the SBS federate provides report information at multiple levels of detail.  In addition to the total number of entities detected for the given sensor collection, the SBS federate further specifies the results by providing the number of platforms detected per Sub-unit.  This Sub-unit ID correlation maps directly to the battlefield state object structure maintained by AWARS; therefore giving more precise detail regarding the exact platforms detected by the SBS.  Similarly for SAR, the SBS federate provides platform level reporting within the context of the Sub-unit level aggregate.  However, platform detections are not reported as part of the SAR results.  As mentioned previously, determination of platform detections by the SAR sensor is performed by AWARS.Figure 6.1.2.1   FOM Interaction Specification6.2 Simulation Time ManagementAs with any distributed simulation application, simulation time management was an important design factor of the AWARS/SBS integration effort.  The HLA Interface Specification provides a robust set of Time Management services that provide the capability to integrate simulations with dissimilar internal simulation time management schemes.  However, depending on the federation design, participant federates, etc., not all HLA federations must implement Time Management services.  The choice is characterized by whether participating federates are or are not time-regulating, and whether they are or are not time-constrained.  For a Time-regulating federate, advance of logical time regulates the rest of the federation.  A Time-constrained federate’s simulation time advancement is constrained by the rest of the federation.  Federates that are both constrained and regulating are fully involved in simulation time management; their simulation time cannot run ahead of the rest of the federation, and the federation cannot run ahead of the federate simulation time.  For federates, the two choices are independent.  For the AWARS/SBS integration effort, it was quickly determined that a conservatively synchronized federation execution was not required.  Therefore, it was agreed upon by both the AWARS and SBS development teams that the HLA Time Management services would not be implemented.  The resulting federation design would allow each federate to maintain simulation time independently with no external coordination.  However, this approach did require that each federate internally pace to “wall-clock” time so that each federate would execute at the same time step.  As a result, both AWARS and the SBS federate assume a common simulation start time (read from an input file), and are individually responsible for maintaining internal simulation time.7. Initial Integration EventThroughout the project development cycle, close communication was maintained between the AWARS development team, located at TRAC, Ft Leavenworth, Kansas; and the SBS development team, located in Huntsville, Alabama.  The first direct integration event occurred on-site at TRAC the week of December 13-17, 2004.  The objective of the event was to perform initial setup and integration activities in preparation to begin testing of the AWARS/SBS simulation interface.While each team utilized different Run-Time Infrastructure (RTI) implementations during the development process, no problems were encountered when consolidating to a single RTI.  This was certainly due to the fact that the AWARS development team utilized the Virtual Technology Corporation (VTC) NG Pro Version 1 Series while the SBS development team utilized the Defense Modeling and Simulation Office (DMSO) NG Version 6 Series.  The two versions are known to be dynamically link compatible, and no issues were discovered from an RTI connection/utilization point-of-view.The initial integration activity produced several minor updates to the Federation Object Model (FOM); however the basic structure of the object and interaction specification remained unchanged.  This consistency was due to a persistent effort between the development teams to define and refine the object model early in the design phase.  While the process was somewhat simplified by the fact that there were only two participant simulations, the implementation of an adequate federation design and execution process was critical to the success of the integration effort.  An additional interaction (see Figure 6.1.2.1) added during the integration activity week included a federate status message which provided a somewhat generic transport allowing AWARS to cancel collection requests dynamically, and provided both federates the capability to alert the federation as to when certain execution phases were complete.  It was noted that the latter capability is normally addressed by the implementation of HLA Synchronization Points; however it was deemed more practical to implement an interaction for this federation application.Coordinating the start of simulation time was addressed during this integration activity.  The implemented approach required the SBS federate to read the scenario start time from an AWARS configuration input file.  The SBS federate utilized this time as a reference to model satellite constellation position, and to schedule sensor collection requests.  The coordination of the two simulations at scenario start time was critical as no coordinated time management services were utilized by the AWARS/SBS federation.  To ensure that both models started timed execution simultaneously, an HLA Interaction scheme (see previous paragraph) was implemented to synchronize the start of the execution phase. Integration testing focused on sending and receiving the interactions as defined by the AWARS/SBS FOM.  This included the sensor collection request interaction initiated by AWARS and the respective GMTI and/or SAR report interactions generated by the SBS federate.  During the test, the team discovered a data encoding issue that was immediately attributed to the fact that AWARS was executing under the Linux operating system, while the SBS federate had been developed on a Windows-based machine.  This issue was quickly resolved by updating the SBS interface to include the Linux encoding libraries utilized by AWARS.8. Second Integration EventThe second and final integration event occurred on-site at TRAC the week of February 1-4, 2005.  The objective of this follow-on event was to complete simulation integration activities focusing on the generation and receipt of HLA object attribute updates.  Specifically, the attribute update testing centered on the passing of Sub-unit and platform data from AWARS.  As discussed earlier, the AWARS/SBS FOM specifies the AWARS battlefield objects at the intermediate Sub-unit level.  In addition to Sub-unit state data attributes, a list attribute is included to specify the type and number of entity-level platforms associated with each Sub-group instance.  This strategy was chosen to allow the SBS federate to receive battlefield information at an adequate level of fidelity to generate SAR and GMTI reports.  Specifying the object information at the platform level would have provided a higher fidelity representation of the battlefield state, however the performance versus fidelity trade-off was determined to be of greater importance. The specified object representation implementation introduced the challenge of sending and receiving variable length lists as part of the object attribute updates.  While this is a somewhat untraditional approach with regard to object attribute specification, the versatility of the HLA does allow for this type of implementation.  The key to success here was to ensure that the object attribute receiver (i.e. the SBS federate) was able to interpret the variable length list correctly.  In the case of the AWARS/SBS implementation, a list platform counter was included as an object attribute to alert the SBS as to how many platform records would be included in the specific update.  The actual platform records were included in the AWARS/SBS FOM as Complex Datatypes.  Additionally, only those platform records that had changed since the previous update were included as part of the SubUnit platform list update.  It should be noted that for this implementation, the SBS does not provide satellite state information back to AWARS.With only minor updates, the testing of the object attribute updates was successful.  In addition to the attribute updates, the new interaction added to the AWARS/SBS FOM during the first integration event was also tested.  Testing of this interaction was successful in canceling previously generated collection requests, and in coordinating the various phases of the simulation execution including initialization and termination.At the conclusion of the second integration event, all object attributes and interactions defined by the AWARS/SBS FOM had been successfully tested.  The combined integration activities demonstrated the feasibility of linking an external Space-based Sensor federate with the AWARS model by utilizing the HLA as the simulation integration architecture. The resulting federation implementation provides AWARS a near-continuous satellite ISR system capable of producing near real-time SAR and GMTI detection data.9. ConclusionThe integration of the newly developed Space-based Sensor (SBS) federate with the Advanced Warfighting Simulation (AWARS) model has proven the success of a combined effort between the Space and Missile Defense Command (SMDC) and the Training Doctrine Command (TRADOC) Analysis Center (TRAC).  This project resulted in the development of a flexible and extensible space-based sensor simulation that provides the capability to dynamically model satellite constellations, associated sensors, and Command & Control (C2) functions.  This new functionality was implemented as a stand-alone federate, and was integrated with the AWARS model by utilizing an HLA distributed simulation environment.One of the keys to success for this integration effort was the implementation of a federation development process to ensure the timely specification of the HLA FOM and RTI services to facilitate interoperability.  Early and frequent communication between the respective development teams ensured that the external simulation data representation and interface were adequately defined and refined prior to on-site integration activities.  While the success of the recent integration events have confirmed the technical viability of the project objective to integrate SBS functionality within AWARS, further testing is needed to verify and confirm operational benefits.  With the recent emphasis on improving advanced intelligence, reconnaissance, and surveillance (ISR) modeling, every effort should be taken to utilize existing simulation applications and architectures to implement and perform advanced studies and analysis.  The AWARS/SBS integration activity has produced a reliable federation implementation upon which such advanced ISR applications can be built.10. AcknowledgementsThe authors would like to thank Terry Gach, Page Stanley, Robert Horton, Mike Hannon, Andy Rutland, Peter Shea, Justin Novak, and Steve Elliott for their contribution to the success of this effort.11. References[1] 	U.S. Department of Defense (DoD) Modeling & Simulation (M&S) Master Plan, 1995.[2] 	U.S. DoD High-Level Architecture Object Model Template Specification Version 1.3, 27 July 1998.[3] 	U.S. DoD High-Level Architecture Interface Specification Version 1.3, 20 April 1998.[4] 	Space-Based Radar Implementation in the Advanced Warfighting Simulation Software Design Specification (SDS), 4 May 2004.Author BiographiesJOSEPH D. FANN is a Principal Computer Analyst at Dynetics, Inc. with more than fourteen years experience in modeling and simulation.  He received a B.S. degree in Computer Science from Lipscomb University (Nashville, Tennessee) in 1988.  Mr. Fann has supported the Defense Modeling and Simulation Office (DMSO) in various projects related to the DoD High Level Architecture (HLA), and was an active participant in the Distributed Interactive Simulation (DIS) standards development process. ANDREW E. PHEND is a Programmer Analyst at Teledyne Brown Engineering in Huntsville, Alabama.  He received a B.S. degree in Computer Science from the University of Illinois Urbana-Champaign, College of Engineering in 1998.  His expertise is in combat simulation analysis and military systems modeling and simulation.  He is a member of the Military Operations Research Society (MORS).CURT RUFFING is an Analyst in the Modeling, Simulation, and Engineering Analysis (MSEA) group at Teledyne Brown Engineering. He graduated from the University of Maine with a BS in Engineering Physics and currently supports simulation development activities.STEVE GLASGOW is an Operations Research Analyst for the US Army’s TRADOC Analysis Center at Fort Leavenworth, Kansas.  He received a B.S. degree in Applied Math from Eastern Montana College (Billings, Montana) in 1986 and an M.S. degree in Operations Research from Kansas State University (Manhattan, Kansas) in 1998.  His expertise lies in the design, implementation, and testing of various combat functional areas including the design, modeling, and analysis of C4ISR methodologies (acquisition, collection management, fusion, data dissemination, etc) within aggregate level combat models.JEFF FRANSSEN is an Operations Research Systems Analyst for the Space and Missile Defense Future Warfare Center in Huntsville, Alabama.  He is a liaison to the National Simulation Center at Fort Leavenworth KS, providing consultation, recommendations, and planning to support the development of space and missile defense functionality in the Army's Training, Exercise, and Military Operations (TEMO) models and simulations.  As a reserve Naval Intelligence Officer at USSTRATCOM, he has considerable expertise and experience analyzing current operational/training issues associated with joint space and missile defense.