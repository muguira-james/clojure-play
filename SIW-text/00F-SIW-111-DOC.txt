AVCATT-A: Implementing A Reuse Strategy For Computer Generated Forces (CGF) DevelopmentMichael A. WhiteDavid B. CavittCraig A. PetersenBMH Associates, Inc.5425 Robin Hood Road, Suite 201Norfolk, Virginia 23513-2441. U.S.A.Keywords: Reuse, Software Development Process, AVCATT-A, CGFABSTRACT: Military use of modeling and simulation is here to stay. As training costs expand and the defense budget shrinks, leaders seek innovative methods to ensure the war-fighting proficiency of our armed forces. The Department of Defense (DoD) has mandated increased use of computer-based modeling and simulation to counter the expense of placing troops in the field. In an effort to reduce costs of developing new simulation systems, the Defense Modeling and Simulation Office (DMSO) has established a policy of maximizing reuse of existing applications. The policy’s intent is to avoid “reinventing the wheel” while integrating the latest techniques and procedures to develop modeling and simulation software.This paper presents the systems engineering process used to develop the Computer Generated Forces (CGF) components of the U.S. Army’s Aviation Combined Arms Tactical Trainer – Aviation Re-configurable Manned Module (AVCATT-A).  The paper addresses one approach to implementing the re-engineering process paradigm, a refinement of the traditional waterfall software development model, to facilitate integration with the training system’s manned module component.  The paper further discusses the derivation of required CGF capabilities: the analysis methodology to determine the completeness and suitability of specified requirements to support Army aviation collective training and to investigate the existing capabilities and limitations of legacy simulation software to meet program specifications.  Finally, the paper outlines the impact of software reuse and its effect on integration versus new software development.Emerging Army Aviation collective training methods require robust computer generated forces, hence cutting-edge modeling and simulation technologies.  As training systems needs are redefined, one of the principal factors driving system engineering is the reuse of existing simulations, while adopting up-to-date software development techniques and procedures.  This paper presents one development team’s implementation strategy for simulation systems reuse in systems engineering.IntroductionThe U.S. Army’s Aviation Combined Arms Tactical Trainer – Aviation Reconfigurable Manned Module (AVCATT-A) system is currently under development to provide Rotary Wing Aircraft (RWA) unit-level proficiency training. The goal is to create a realistic synthetic training environment composed of attack, reconnaissance, cargo, and utility aircraft platforms, Semi-Automated Forces (SAF) workstations, After Action Review (AAR) capability, a Battlemaster Control (BMC) console, and workstations for ground maneuver, Fire Support (FS), Close Air Support (CAS), logistics, battle command, and engineer role players. Enabling technologies will consist of virtual and constructive distributed simulation technologies [1].In January of 1994, the U.S. Department of Defense (DoD) released Directive 5000.59, the DoD Modeling and Simulation Master Plan [2,3]. Chapter Three of the Master Plan specifically addressed three items particularly relevant to the AVCATT-A program: 1) architectures, standards, and protocols, 2) interfaces with real-world C4I systems, and 3) representations of the environment and systems. The Master Plan concurred with previous recommendations that “architectural efforts to combine live, virtual, and constructive simulation be broadened” (Chapter 3, Section B.1) and architectural activities need to “promote the interoperability and reuse of models and simulations to support other functional areas”. The directive also says the DoD must establish a framework to support interoperability among differing models, simulations, and C4I systems while facilitating the reuse of Modeling and Simulation (M&S) components. The AVCATT-A program (hereafter referred to as AVCATT) has an aggressive development schedule and reuse of existing software implementations facilitates a rapid design and development environment. AVCATT is leveraging the successful use of Distributed Interactive Simulation (DIS) and High Level Architecture (HLA) technologies by reusing legacy simulation applications in addition to developing new virtual and constructive simulation components. AVCATT architecture also includes reuse of existing C4I systems such as the Army’s Airborne Target Handover System (ATHS) and the Army Battle Command System (ABCS). Establishing connectivity with existing (and familiar) C4I systems allows warfighters to “train like they fight.” Terrain and other environmental databases (such as meteorological and solar/lunar databases) are costly to develop and existing databases frequently lack sufficient commonality to enable reuse by different simulation systems. AVCATT is using common baseline data to establish interoperable terrain and environmental databases among manned module and CGF components. Military entities (for example an aircraft or an air defense artillery piece) can best be viewed as a system of systems.  The fire control computer for an AH-64 Apache helicopter shares many similarities with the fire control computer for, say, an F-16 Falcon fighter aircraft.  By developing common models for individual systems (i.e., radar, FLIR, radios, etc.) and then editing the parameters to more accurately represent a specific version, software developers can more efficiently develop a set of accurate system representations that immediately have reusability as an attribute.  An equally important benefit to the common model approach to system development is that common models support the concept of “fair fight” more easily than similar systems that were developed independent of each other.AVCATT reuse requirements and capabilities for rapid systems development necessitate the use of different techniques for developing system requirements, system engineering, and test and integration. The challenge is to determine a suitable development methodology resulting in a valid and credible Computer Generated Forces (CGF) component of AVCATT. The remainder of this paper presents the approach used by BMH to provide a concise and traceable development path between system requirements and the high level design of the AVCATT CGF component. The paper discusses the implementation strategy for simulation systems reuse in AVCATT-A systems engineering, it describes experiences in employing the re-engineering process paradigm, and reports relevant results of implementing the strategy to simulation software engineering managers.CGF Development Process and Reuse AssessmentsThe Defense Modeling and Simulation Office (DMSO) recently codified updated guidance in the form of a revised Verification, Validation and Accreditation (VV&A) Recommended Practices Guide (RPG).  Included in the revision was the addition of the re-engineering process paradigm (shown in Figure 1).  Describing its purpose, the DMSO VV&A RPG states “The re-engineering process paradigm is used when legacy simulations are being modified for use in a different application.  It is very similar to the waterfall paradigm except that it includes multiple entry points selected on the basis of what needs to be changed.” Specific activities associated with each phase of the re-engineering process model produce outputs (including system documentation) that enable system design and development as well as support process management. For AVCATT, BMH tailored development activities to focus on model and simulation reuse aspects of the AVCATT CGF (training) component. These activities are depicted in Figure 2. The colors (bi-colors) associated with each activity map to the relevant re-engineering process phase(s) in Figure 1. As shown, different activities progress concurrently and are intended to provide a sufficient and time-efficient methodology for AVCATT system design, development, and delivery. It is important to note that the figure shows activities performed to date, and as such does not include activities associated with system implementation (software coding). The U.S. Army’s Simulation Training and Instrumentation Command (STRICOM) generated the AVCATT-A System Requirements Document (SRD). Subject Matter Experts (SMEs) compared the collective training task list defined in the SRD for adequacy, completeness, and consistency. The system requirements are used to guide Knowledge Acquisition and Engineering (KA/E) activities and produce specifications and depictions of the real-world objects and object behaviors used in the CGF component of AVCATT. Those aspects of the real-world entities (e.g., helicopters, weapons and systems) and behaviors to be represented are captured as a set of validation criteria and identify the required model fidelity of each, given intended use. At the same time, initial reuse opportunities as they relate to common models (such as RWA flight dynamics) are identified. Given the specification of model and simulation requirements, assessments are made regarding the reuse potential of existing (legacy) simulation models and simulation infrastructure.Detailed model design (and the generation of the Software Design Document) is based on the results of the model and simulation reuse assessment and the explicit modeling requirements defined in the validation  / acceptability criteria. Note that Figure 2 shows use case (scenario) development and the derivation of validation criteria as activities associated with the Requirements and Integration & Test phases of the re-engineering process model. This is a consequence of validation criteria representing those aspects of the CGF that are directly testable and the scenarios providing representative workloads during the testing process. Various software tools were used to support these activities (e.g., relational databases, graphical drawing tools); the objective being to generate clear and concise documentation to: a) convey the most critical aspects of model requirements, b) provide sufficient information to design and implement the CGF, and c) provide traceability sufficient to support verification and validation activities [4]. Implementing the AVCATT-A Reuse Strategy As discussed in the previous section, the driving consideration for AVCATT CGF development is the requirement to maximize reuse of existing simulation systems.  As such, the reuse assessments focused on those aspects of existing simulations and models that could be changed to meet requirements (intended use).  The following paragraphs provide a more detailed look at the development team’s approach for AVCATT. For the sake of clarity, the discussions of requirements analysis and delta analysis (comparing the capabilities and limitations of different implementations) are addressed separately, although the actions primarily were accomplished in parallel. Requirements Analysis As evidenced in the old saw, “trust, but verify,” an extra set of eyes to ensure the adequacy of specified requirements may go a long way toward answering the question, “are we building the right thing?” For this reason, the CGF development team analyzed CGF requirements to determine the scope of development. A systematic approach was applied and consisted of the following steps:Review the Systems Requirements Document (SRD) and System Subsystem Specification (SSS)Decompose the AVCATT-A collective training tasks into sub-tasks and compare them with those listed in the SRD/SSS (in parallel with the SRD/SSS review)Describe to what extent the SRD/SSS physical systems and behavior requirements support the conduct of AVCATT-A collective training tasksIdentify CGF physical systems and behavioral capabilities not addressed in the SRD/SSS, that are needed to support AVCATT-A collective training tasksThese steps help determine the completeness and suitability of the specified requirements to support Army aviation collective training.  The rationale for this activity is to ensure requirements are adequate for the intended use of the system.  To accomplish this, the CGF development team reviewed the SRD and SSS, developed a detailed task list, decomposed each of the collective tasks AVCATT is required to support, and compared the task elements with the SRD/SSS requirements. The team used a relational database to enable the analysis. The database provides traceability back to the SSS and the SRD, an important capability for Verification and Validation (V&V) of the software representations. The resultant comparison provided a thorough assessment of SSS requirements as well as a good picture of the domain parameters to be addressed during subsequent development and VV&A activities.  Results of this activity determined that AVCATT requirements were, for the most part, adequate in scope and definition to support the intended use of Army aviation collective training.  The team’s consensus was that what may have been missing in the way of explicit requirements was sufficiently covered by broader requirement statements such as the “need to support a fair fight between CGF and manned modules” [5]. Physical Systems.  The next activity identified the physical system representations required for the CGF component. The following tasks provided a framework for analysis of physical systems.Develop “use case” scenario(s) incorporating friendly and opposing forces (OPFOR) CGF performing doctrinal missions that support AVCATT-A collective training tasks,Determine the physical systems required to support each collective training task (representations to meet scenario workload requirements) based on functional decomposition by knowledge engineers, Determine entity classes for the CGF listed in the SRD, and Determine a set of “common” physical systems by entity class.The physical systems required is based on the entity types specified in the SRD and the collective task functional decomposition.  Development team SMEs categorized entities by class.  Entity classes include rotary wing aircraft, fixed wing aircraft, air defense artillery, and ground vehicles. The collective task functional decomposition identified the capabilities for entity physical systems to support the collective tasks.   Functional decomposition by entity class identifies the set of physical systems common to the classes. Even though a physical system may only be associated with one class it is still considered “common” since it could be used as part of the representation for an entity of a different class. The physical systems are organized in the form of a hierarchical map, useful as a guide for more detailed reuse analysis of currently modeled physical systems and required enhancements, or to manage new model development.  Examples of common physical systems include Communications, Navigation and Identification – Friend or Foe (CNI), weapons, and sensors. Figure 3 depicts the “common” physical CGF rotary wing aircraft systems map. Once the team identified the scope of their analysis effort, they researched conceptual model documentation developed during previous CGF development efforts as well as current Army doctrinal publications to ensure a thorough treatment of each physical model.  The team prepared abbreviated conceptual models of each “common” physical system required for AVCATT.  Each model included a system description that specified the purpose of the model, a logical depiction, validation criteria, reuse assessment, proposed design and recommendations to support “fair fight” among CGF entities and the manned modules. The logical depictions, normally showing how systems operate in the real world, were hybridized to include modeling inputs and outputs specific to the AVCATT CGF models. The depictions provide a systems-oriented view useful for CGF design and development activities. The validation criteria support V&V activities and provide boundaries on model implementations. Software developers use the validation criteria and reuse assessment as the basis for design. Doctrinal Mission Behaviors. Mission behavior analysis coincided with physical systems analysis. Although a minimal list of behaviors was mandated by the SRD, a comparison between the collective tasks list and the tasks defined in U.S. Army Aircrew Training Manuals revealed additional mission behaviors to consider. The list of doctrinal mission behaviors was later compared to current behaviors in candidate legacy simulations. The results of this comparison provide the impetus for the decisions of whether to enhance or develop new mission behaviors for AVCATT. The following steps are performed as part of the mission behavior analysis activity: Determine the set of doctrinal mission behaviors by CGF entity type required to support AVCATT collective training tasks,  Decompose each CGF doctrinal mission behavior into its component tasks,Compare the set of CGF doctrinal mission behaviors required to support AVCATT collective training tasks to CGF behaviors listed in the SRD,  Identify and prioritize any CGF doctrinal mission behaviors required to support AVCATT collective training tasks that are not listed in the SRD,Determine the set of “common” CGF mission behavior tasks that are required to support AVCATT collective training tasks,Assign a priority to each “common” mission behavior task to serve as a basis for sequencing development, andSubmit results of the analysis in a doctrinal mission decomposition reportThroughout the process of analyzing mission behaviors, SMEs reviewed Army doctrinal publications, technical manuals (TMs), field manuals (FMs) and training circulars (TCs) to minimize bias and ensure technical and tactical accuracy.  A complete set of tasks was identified along with the entity class and type (e.g., RWA – AH-64A) that each task applied to. This activity formed the basis of the Delta Analysis report discussed in the next section. Delta AnalysisExisting simulation systems considered candidates for reuse in AVCATT are not sufficiently robust in every case to meet the system’s intended use. The Delta Analysis is the principle output of the reuse assessment. Succinctly, it provides a comparison of the capabilities and limitations among existing models and simulations considered as candidates for reuse. For AVCATT, this analysis activity actually proceeded concurrently with the requirements analysis. This was possible during the AVCATT CGF re-engineering process because the applications considered as possible baselines were already known. The delta analysis for the reuse candidates was conducted using the following steps: Identify existing physical and behavioral models in the candidate legacy simulations that can serve as a basis for AVCATT models, Identify AVCATT CGF models for which there is no physical or behavioral model in the candidate simulations, Document capabilities and limitations of existing models found in candidate legacy simulations,Consider the capabilities and limitations of reusing entire simulation applications for reuse in AVCATT including any supporting infrastructure (e.g., HLA(DIS interfaces), Determine enhancements to legacy models required to support AVCATT-A collective training tasksDevelop knowledge acquisition/knowledge engineering (KA/E) packages for common physical and behavioral models based on intended use for AVCATTDetermine priorities for modifications to existing models (reuse) and development of new models based on AVCATT collective training task prioritiesThe relational database created and used during the requirements analysis, and spreadsheets depicting the relationships between required physical systems and required mission behaviors supported the delta analysis activity.  Documentation describing the reuse potential (opportunity) provides a summary of the extent to which candidate legacy simulation systems can support the 53 Army aviation collective tasks specified in the AVCATT SRD.  Figure 4 shows a sample page from the delta analysis report. This particular example summarizes doctrinal mission behavior requirements for each required RWA type to be represented in AVCATT and the extent to which an existing simulation (in this case a Semi Automated Forces, or SAF, application) can satisfy the requirement.  Outputs of the delta analysis provide a basis for the reuse assessment and support simulation design activities. The delta analysis and model requirements (captured in the form of validation criteria) provide a basis for physical system and mission behavior model software design. For AVCATT, these simulation model designs are documented in the Software Design Documents (SDD), currently under development.Summary This paper has presented a methodology used to architect the CGF component of the AVCATT system. This methodology is one alternative to evolve a set of requirements into a re-engineered simulation system based on the reuse of legacy simulation systems. The methodology does provide a cost-effective means for assessing the opportunities provided by leveraging from existing or past model and simulation development efforts. It provides documentation that adequately captures system requirements, supports reuse assessments, and enables software design and development activities. The activities associated with each phase of the re-engineering process model provide a reasonable tradeoff in analysis efforts and the generation of system documentation required to implement the system. The methodology presented here provides complete traceability (using authoritative sources) for the entire development life cycle. The AVCATT-A CGF re-engineering effort is currently in the process of completing mission behavioral analysis and concurrently developing the software design based on the reuse of an existing legacy simulation system. Design reviews will be conducted before moving to the implementation activities. The results of AVCATT CGF development activities will be reported in future reports.Acknowledgements This work is sponsored by: U.S. Army Simulation, Training and Instrumentation Command (STRICOM), under contract number N61339-00-C-0002. The authors would like to acknowledge the engineering and design contributions of L-3 Communications Link Simulation and Training division.ReferencesU.S. Army Aviation Combined Arms Tactical Trainer and the Aviation Reconfigurable Manned Simulator (AVCATT-A) Operational Requirements Document. 26 February 1999 Revision.U.S. DoD Directive, Number 5000.59, January, 1994.U.S. DoD Modeling and Simulation (M&S) Master Plan, October, 1995. http://www.dmso.mil/docslib/mspolicy/msmp/1095msmp/.Harvey, E.P. 1998. Simulation System Verification and Validation: The Program Management Perspective. In Proc. 1998 Interservice / Industry Training, Simulation, and Education Conference. Harvey, E.P. 2000. AVCATT-A Fair Fight and CCTT Interoperability. In Proc. 2000 Fall Simulation Interoperability Workshop. 00S-SIW-Authors’ BiographiesMICHAEL A. WHITE is a Senior Systems Engineer with BMH Associates, Inc., Norfolk, Virginia, currently providing Knowledge Acquisition and Engineering (KA/E) support for the Army Aviation Combined Arms Tactical Trainer (AVCATT-A) program. Mr. White holds a B.S. in Professional Aeronautics and an MBA in Aviation from Embry-Riddle Aeronautical University.  David B. Cavitt is a research engineer with BMH Associates, Inc., Norfolk, Virginia, and is a Ph.D. candidate at Old Dominion University, Norfolk, Virginia. He received a BS degree in Computer Science at Old Dominion University. He has 12 years of experience in the use and development of simulations for military and engineering applications. His research interests include modeling and simulation, performance analysis, and distributed systems. Mr. Cavitt is a member of ACM and IEEE CS.Craig A. Petersen is a BMH Senior Systems Engineer currently performing Knowledge Acquisition and Engineering (KA/E) in support of the Army's Aviation Combined Arms Tactical Trainer (AVCATT) project.  Prior to that Mr. Petersen was involved with KA&E for the Navy's Air Management Node (AMN) upgrade to the Battle Force Tactical Training (BFTT) system. He is a former aviator with 15 years of tactical experience including tours as a weapons and tactics instructor, simulator instructor, close air support coordinator, and forward air controller.  				Figure 1. Re-engineering Process ParadigmLegacy Systemsof Linking Assess Feasibility ScenariosCase for CGF Develop Use Legacy ModelsLimitations of Capabilities and Assess RepresentationsPhysical Systems Required CGF Determine RepresentationsBehavioral Required CGF Figure 4. Delta Analysis Sample OutputFigure 3. AVCATT Common CGF Models For Rotary Wing Aircraft (RWA).Determine CriteriaAcceptability  EMBED Word.Picture.8  Validation / Derive Figure 2. Activities Performed To Support AVCATT Reuse-centric DevelopmentIntegration & TestImplementDesignConceptual ModelRequirementsComponents Simulation Model and Design New ComponentsReusable Enhancements to Design Reuse AssessmentsKA/E ActivitiesRepresentationsCommon Model Determine Training Tasksw/Collective SSS/SRD Compare 