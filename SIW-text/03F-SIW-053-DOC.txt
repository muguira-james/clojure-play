C4I Host ApplicationsGene Layman, Ph.D.Naval Research Laboratory HYPERLINK "mailto:layman@nrl.navy.mil" layman@nrl.navy.mil(202) 767-6873Jim WeatherlyNavy Modeling and Simulation Management Office HYPERLINK "mailto:Weatherly.Jim@HQ.NAVY.MIL" Weatherly.Jim@HQ.NAVY.MIL(703) 604-7807Key Words: C4I, Host Applications, Composability, Modeling and Simulation Software Development Kit (M&S SDK), Sharable M&S Software Components, Common Operational Environment (COE), Course-of-action (COA) Analysis, Training and Planning. Abstract: In-situ Development and C4I Host Applications are bold new concepts for the design of simulation-based C4I applications such as planning, training or course-of-action (COA) analysis. The provision of an architectural framework within the targeted environment and sharable modeling and simulation (M&S) software components that are common, but difficult to develop, permits the design of tactical C4I applications, without the requirement of becoming C4I system experts.The paper discusses the Host Application architecture and describes the sharable M&S software components. A variety of sharable M&S software components are available to generate training and planning scenarios, provide simulations links to internal C4I data bases and functions, manage the simulated data within the C4I system, manage variable time bases, display simulated data, integrate simulations with other applications and perform communication tasks.These technologies have been applied to a variety of application developments including four presented in this paper. The M&S software and development tools are being made available in the Modeling and Simulation Software Development Kit (M&S SDK). 1. Background Advances in computer and network technologies during the recent years have brought about increasingly more complex interactions among C4I, sensors, weapons, intelligence, etc. systems. This network of systems has been appropriately referred to as a “system of systems”. Attempts have been made to standardize the development across the individual systems within this amalgamation of systems. The Defense Information Infrastructure Common Operational Environment (DII COE) program has invested heavily in standard services and interfaces upon which a broad range of systems have been developed. More than a hundred systems use the DII COE (recently shortened to COE). The COE is projected to evolve and be renamed the Global Information Grid Enterprise Services (GES) as the next step in the evolution. Developers have historically achieved only modest successes integrating models and simulations in C4I system applications due to the lack of Modeling and Simulation (M&S) services within the COE. This is rapidly changing. The Navy Modeling and Simulation Management Office (NAVMSMO) initiated the C4I Embedded Simulation Infrastructure (ESI) Program in 2001 to develop M&S extensions to COE/GES to facilitate the integration of simulations within this “system of systems”. [1], [2], [3]Simulation based applications within a specific domain such as planning or training duplicate many functions, regardless of the specifics of those applications. Experience has shown that a large part (e.g., > 85%) of software development may be eliminated through proper use of common M&S software services. Three critical elements are necessary to compose simulation based C4I applications out of common components.   First is a careful selection and design of sharable software components that will satisfy diverse requirements.   Second is an architecture structure that is flexible, promotes reuse, and broad enough to accommodate a wide range of applications.     The third is a development environment that promotes the combined use of the COE/GES and the M&S Components.These elements are the basic requirements for composability. They have been carefully studied in the ESI program for three years and tested in the development of a half dozen applications. This paper discusses the three elements of the process and several applications that used this process in their development. 2. Sharable M&S Software Components: (The composable parts.)A standard set of sharable M&S software components have been developed for scenario based C4I applications within the ESI program. The program approach was to:  Build on the COE/GES foundation to avoid duplication of functions.  Focus on an important but manageable range of applications:  Scenario based C4I Applications such as planning, training and Course of Action (COA) Analysis have been selected.  Develop a few sharable M&S components to see what works such as scenario generation, links to tactical data bases, simulation data display, etc.  Apply the M&S Components to the development of a few applications: C4I Team Training System (CTTS), Weapons of Mass Destruction Defense (WMDD), Range Fusion System (RFS) and Embedded Training (ET) will be discussed.  Refine requirements and architecture concepts as we learn and expand the number and type of M&S components as knowledge is gained. We are in this phase.The initial M&S Services were developed specifically to support a class of applications that perform scenario based analysis. This class of applications includes operations planning, course of action (COA) analysis, training and any application that requires the generation, manipulation and analysis of dynamic scenarios. As the program evolves other class of applications will require that other types of services be defined and developed.Sharable M&S software components are similar to COE services in that they provide a standard set of services and interfaces. However they are different in that they are integrated into the applications in which they are used. The following sharable M&S components are being developed: The Virtual Track Manager (VTM) is an important software component for storing and manipulating simulated force scenarios. The VTM stores the time based scenarios in active memory as tracks and events. The VTM contains software methods for creating and manipulating the tracks. Unlike the other services, the VTM has no graphical user interface but interacts with other M&S components such as the Mission Editor, COP Capture, Plan Preview and Dynamic Run. Applications access the VTM through application program interfaces (i.e., Java methods).COP Capture is a function used to extract the C4I common operational picture (COP) and provide it to an application, for example, to initiate a course of action (COA) analysis. Several filters are available to limit track types, time period and geographical areas.The Mission Editor is used in planning and analysis applications to create and edit time based scenarios stored in the VTM. The Mission Editor has an intuitive users interface and contains tools that permits a user to rapidly create and modify scenario track and waypoint objects before and during runtime. The Time Line Display/Editor is an alternate method for displaying and editing a VTM scenario by plotting events along a timeline that is synchronized with the geo-display. The user can readily see the time-space relation by simultaneously viewing the Time Line Display and the geo-display while stepping through the scenario.The Scenario Preview capability is used to run and preview a scenario stored in the VTM during its development. It is used in conjunction with the Mission Editor and Time Line Editor. The scenario may be automatically time stepped or viewed in time slices by adjusting a slider. The scenario is displayed on the C4I map but not inserted into the Track Management System (TMS), therefore the system functions do not operate on the scenario during preview. The Dynamic Run function processes the VTM scenario and manages variable time bases during the application runtime. Several options are available that effect how the dynamic scenario is provided. The output can be inserted into the C4I Track Management System (TMS) or provided to the simulation to process, depending on the application’s requirements. For example the stored scenario could be the “ground truth” input which gets converted to a “perceived picture” by the simulation. The Dynamic Run function GUI is shown in Figure 1. Visualization Utilities is a library of standard display functions that can be used by applications. An example would be a means to display contamination clouds as an overlay on the geo-display. The purpose for Visualization Services is to provide standard means to display common M&S functions. The Simulation COP (SIM COP) capability provides an application with the means to display simulated data in the common operational picture map display format in a manner that protects the real world C4I data but allows all C4I segments to operate on the simulated data in the same manner as if it were real.Archive/Replay/Debrief services allow an application to archive real world tracks or simulated scenarios generated within an application and replay them within the system as simulated data. All C4I applications are active during replay and operate on the data the same as on real world C4I data. The Debrief component allows the user to animate the replay, import slides, screen captures, images etc. for briefing purposes, add pause and stop points, adjust playback speed and control the COP display parameters (e.g., center the map or zoom). The Event Manager is a service that alerts other software functions that something in the scenario has changed. An application registers for the types of events it wants to be notified.Figure 1Dynamic Run GUIThe High Level Architecture (HLA) Run Time Infrastructure (RTI) is being segmented as a service to provide interoperability between C4I and external simulations such as training systems. The C4I Ambassador is a client segment [4], [5] to the RTI that provides the link to the C4I tactical (e.g., TMS) and technical databases. The C4I Ambassador also provides an external simulation access to all  M&S Services.A “typical” application would incorporate the COP Capture, Mission Editor, Time Line Editor, VTM and Scenario Preview to develop a planning, analysis or training scenario. A “typical” application would then utilize the Dynamic Run and the SIM COP services to interface with the embedded simulations during runtime and the Archive/Replay/Debrief segment to capture and present the application’s resulting analysis. These M&S Services have been integrated into several applications. Many of the services provide the application developer with the choice of using and/or modifying the GUI provided or interfacing with the service through Java class methods. Requirements continue to evolve as new applications are developed. For example, additional M&S features have been defined to support distributed applications such as team planning. An architecture that included both embedded clients and an embedded server has been used in several applications. Unsurprisingly, it was discovered that many of the sharable M&S components were being integrated in a similar manner. This observation led to the development of the Host Application concept that bundles many of the components together in an application shell that the developer then can add the simulation and unique functions. 3. Host Applications: (Putting the parts together.)Computer models and system prototypes grow around some architecture. Many times these architectures merely “happen” without much thought of design consequences or of converting into the final system configuration. Prototypes have historically met with severe difficulties in conversion to C4I Mission Applications with many more failures than successes.A single architecture will never be satisfactory for all systems or applications. However the Host Application concept, shown in Figure 2, is an example of a successful architecture that satisfies a broad range of system requirements.  SHAPE  \* MERGEFORMAT Figure 2Host Application ArchitectureThe Host Application concept is based on two simple principles. The first is that common M&S Services can be developed to support a wide range of simulation based Mission Applications. The second is that many large complex applications can best be developed and maintained using small, limited scope embedded simulations rather than a single large simulation.Host Applications organize M&S services into shell programs to support a specific application domain. This approach isolates unique functions to a small percentage of the code, primarily within the embedded simulations. Using the M&S services described in the previous section, the application and embedded simulations can be more easily developed. Figure 2, on the previous page, illustrates the general top level architecture used for several applications including the C4I Team Training System (CTTS) [6] delivered to SPAWAR for inclusion in the next GCCS/M release and the Weapons of Mass Destruction Defense (WMDD) [8] delivered to DISA for evaluation. Figure 3 shows the Host Application GUI. Many applications will require more than one simulation. The C4I Host Application is a concept for incorporating multiple simulations within a single application. Not only does it provide for the effective reuse of sharable software components but it also provides guidance for the development of simulations that will be embedded within this architecture.The Host Application makes it possible to partition the simulation requirements down to several limited scope simulations. Very basic physical models can be constructed to rapidly develop and integrate into the desired system or application. A Host Application has the following characteristics:Contains a set of M&S services relevant to a particular C4I Mission. (e.g., Course of action analysis for WMD Defense) Hosts 1 or more simulations or processes that perform specific Mission analysis. (e.g., Down Wind Hazard Assessment, Sensor Location)Readily modifiable to host additional simulations of the same category. (e.g., NBC Sensor Fusion, Strike Planning)Provides interface standards for embedded simulations.Figure 3Host Application GUI used in the WMMD and CTTS ApplicationsThe architecture illustrates that simulations are integrated into applications as embedded servers. The embedded simulations and process interface with the application through embedded clients (i.e., Setup, Runtime and Output Clients). The Scenario Generation, Dynamic Run and Output Processes blocks contain the sharable M&S software components. The Host Application GUI, shown in Figure 3, has been used for two very different applications: the C4I Team Training System (CTTS) and the Weapons of Mass Destruction Defense (WMDD) Application.Other tabs in addition to those shown (Scenario, Tracks and Dynamic Run) are provided by the application. See Reference [6] for a more complete description of an application using this process.The next section discusses the third and final component of the development process formulated in the ESI Program.4. In-Situ Development: (Designing within the target environment.)In-Situ Development is an enterprising new M&S approach to model, prototype and develop new systems within the environment that they will operate. The goals of In-Situ Development are design efficiency, better user performance, low cost and safety of operations (i.e., do no harm) through standardization.The concept is simple. Develop the application in the COE/GES environment using sharable M&S components. The trick of course is the proper selection and development of M&S components and an architecture that manages complexity and reduces development workload. Those elements were discussed in the previous sections.The Modeling and Simulation Software Development Kit (M&S SDK) is being formulated to provide developers the methodology, software and development tools to support In-Situ development. The sharable M&S components found in the M&S SDK provide the developer of a mission application common methods to generate scenarios manage simulated data within operational systems, manage time, access data bases, display simulation results on operational displays and many other functions. Performed properly, In-Situ Development has the following advantages over a stand alone simulation or system development:In-Situ Development uses a common, proven development environment that includes the COE/GES and sharable M&S Components contained in the M&S SDK.Only new capabilities need to be modeled and/or developed. Existing capabilities are provided within the environment.System models and prototypes are more realistic and can be evaluated more accurately since they operate in the same environment as the target systemEfficient and rapid development is achieved through the widespread use of sharable M&S components whose designs have been authenticated through use in other applications.Interfaces are real and need not be simulated.Standards are much easier met since they are inherent within the implementation of the COE and M&S services.Model-to-system and prototype-to-system evolution is more readily achievable. The sharable components that make up the simulation can evolve into the system components with little or no rework.In-Situ Development promotes reuse by considering existing sharable capabilities early in the design. Reuse has proven to be effective in C4I. Reuse often fails when the initial design ignores what is available.In summary, the In-Situ Development Process uses an M&S supportable architecture (Host Application) and sharable (composable) M&S software components. 5. DevelopmentsA number of systems are being developed using the M&S components and development process described in this paper. Figure 4 is a summary of the reuse of the sharable M&S software components in these systems.The C4I Team Training System (CTTS) [6], [7] has been delivered to the Navy’s Global Command and Control Maritime (GCCS/M) Program Office for release with the new COE upgrade. The CTTS is a Host Application that has embedded the Cruise Missile Trainer (CMT) simulation plus provides a plug-in capability for several other simulations and processes planned for development.The Weapons of Mass Destruction Defense (WMDD) prototype application [8] has been delivered to the Defense Information Systems Agency (DISA) for evaluation. The WMDD has embedded the Hazard Prediction Assessment Capability (HPAC) simulation. The WMDD performs Situation Assessment and Course of Action Analysis against threatening and real chemical and biological attacks. SHAPE  \* MERGEFORMAT Figure 4M&S Component ReuseThe Range Fusion System (RFS) is a new COE compliant system [9] that integrates data from multiple training ranges and range systems to produce a common ground truth picture during military exercises. The initial delivery to the Naval Air System Command (NAVAIR) can provide a broadcast to operational COE compliant C4I systems and training commands.The purpose of the Embedded Training (ET) application [3], [4] is to provide capabilities to create and deliver operator level scripted training. It contains two segments, Author and Tutor, and was developed originally for the GCCS but can run in any COE compliant system including the Range Fusion System. It is estimated that cost savings of more than 70-80% were achieved in each of these system developments through the use of Host Applications and sharable M&S software components. 6. SummaryMany M&S components for developing simulation based applications within the COE/NCES environment have been produced in the Navy’s ESI Program and can be readily adapted to model, prototype and develop new systems and applications.These products have been used in a number of applications and are available for developers in the C4I Modeling and Simulation Software Development Kit (M&S SDK) and usable in all COE compliant C4I systems. The Navy Modeling and Simulation Management Office’s (NAVMSMO) sponsors the ESI Program. References[1] Layman, G., Daly, J., Robinson, D, Weatherly, J.: “Integrating Simulations into DII COE Compliant C4I Systems” Paper 02F-SIW-048 Simulation Interoperability Workshop, Fall 2002; Orlando, Florida.[2] Layman, G., Daly, J., Weatherly, J.: “C4I Embedded Simulations” Paper 01S-SIW-082 Simulation Interoperability Workshop, Spring 2001; Orlando, Florida.[3] Layman, G., Daly, J.: “C4I Tactical Applications Utilizing Embedded Simulations” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, California.[4] Layman, G. E., Daly, J., Furness, Z., Womble, J.:”C4I-Simulation Interoperability using the DII COE and HLA” Paper 01S-SIW-132, Simulation Interoperability Workshop, Spring 2001; Orlando, Florida.[5] 	Furness, Z., Isensee. E., Fitzpatrick, M.: “Realtime Initialization of Planning and Analysis Simulations Based on C4ISR System Data” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, California. [6] McGroder, D., Layman, G.: “The C4I Team Training System” Paper 03F-SIW-048 Simulation Interoperability Workshop, Fall 2003; Orlando, Florida.[7] Daly, J., Layman, G.: “C4I Simulation Based Embedded Team Training” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, California. [8] Layman, G., Weatherly, J.: “Weapons of Mass Destruction Defense – A C4I Host Application” Paper 03S-SIW-090 Simulation Interoperability Workshop, Spring 2003; Orlando, Florida.[9] “Range Fusion System (RFS) 4.0.0.0, Overview and Reference Manual” (DRAFT), NRL Code 5756 Document, Dated August 13, 2003.Authors BiographiesDr. Gene Layman is a Research Engineer at the Naval Research Laboratory and directs a Command and Control Development Team that has been active in GCCS and GCCS-Maritime developments since their conceptions. Earlier he managed the Radar Branch and the Guidance Branch at the Naval Surface Weapons Center. Before that, Dr. Layman was a Program Manager in the Missile and Ordinance Division at Texas Instruments, Inc. and a Circuit Designer at The Boeing Company on the Minuteman Program. He has led or participated in the design of over two-dozen military systems with more than half becoming fully operational.Jim Weatherly, OPNAV N6MT, is the Deputy Director of the Navy Modeling and Simulation Management Office (NAVMSMO), and the Director of the Department of Navy Modeling and Simulation Technical Support Group. This organization provides management, direction, and technical expertise to senior organizations for Modeling and Simulation use in Acquisition, Research, Engineering, Test & Evaluation, Training, and Force Assessments. He has performed as Head of the Engineering Support and Integrated Assessment Environment Division, Supervisory Electronics Engineer within the Warfare Systems Architecture and Engineering Directorate (WSA&E), and Head of the Test Facilities Section within the WSA&E Directorate. PAGE  ETRFSWMDD		Application/SystemSharable M&S   Component                                  OtherSystemsC4I COE / NCESRun TimeOutputSetupOutputProcesses SIM COP Archive Replay DebriefDynamic RunEmbeddedSimulations &ApplicationProcessesScenarioGeneration Mission Editor COP Capture VTM Plan Preview           CTTSVirtual Track Manager COP CaptureMission EditorTime Line Display/EditorScenario PreviewDynamic RunEvent managerSimulation COPArchiveReplayDebrief