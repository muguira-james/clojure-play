Achieving Rapid Interoperability For Both the M&S and B2B WorldsPaul L. GustavsonLawrence M. RootSteve GossSimVentions Inc.1025 Ficklen RoadFredericksburg, Virginia 22405703-621-4009 HYPERLINK "mailto:lroot@dv.synetics.com"  info@simventions.comKeywords:Adaptability, Interoperability, Compatibility, Reuse, Object Models, FOM, SOM, BOM, B2B, M&S, Mapping, Cost Reduction, Time Reduction, Patterns, Protocol Agents, XML, SOAPABSTRACT:  As the High Level Architecture (HLA) has matured, the need has arisen for a simulation (federate) to be capable of interoperating with more than one federation.  Since the Federation Object Model (FOM) identifies the characteristics of a federation, and each federation is represented by a FOM, federates need to be able to transition from one FOM to another quickly and easily.  Within the Business-to-Business (B2B) e-commerce domain, the need for businesses to interoperate (i.e., exchange and reflect information) within a given business community has become a significant priority as well.  The efforts being put forth by the commercial industry to achieve interoperability are very similar to the HLA experiences encountered within DoD’s M&S community.  As interoperability mechanisms are implemented and mature, the B2B domain will also discover the need for a given business to be able to communicate with more than one business community.    This paper addresses methods in achieving rapid interoperability to support these anticipated transition requirements.  Concepts of adaptability are specifically explored including an innovative approach for fulfilling adaptability through Object Model (OM) Mapping and Inspection.  OM Mapping and Inspection allows a federate (or business) to be able to participate in multiple federations (or business communities) without the need to continually modify, re-compile, and re-link code for each federation (or business community) it is to join.  The notion of adaptability applies to both the M&S and B2B domains, offering a given federate or business the capability to rapidly achieve interoperability and exchange information with different federations, or business communities.  This paper also explores how to push adaptability and interoperability to the next level by harnessing patterns of FOMs, represented by Base Object Models (BOMs), and by laying out the requirement for automated agents.  Automated agents, referred to as Protocol Agents within the paper, provide a dynamic translation service between federations or business communities at the request of an individual federate or business application.    1. IntroductionOver the past decade, technologists have become extremely proficient at modeling physical and behavioral objects in the synthetic world.  Constructive simulations such as EADsim, MODsim, and visual rendering systems such as Multigen-Paradigm’s Vega and many other tools and systems have brought qualified and cost-effective training and testing capabilities to the military community.  Modeling and simulation has not only had a phenomenal impact on today’s military infrastructure, but it is exploding in the commercial market as well.  The science and art of computer modeling is evident in many areas.  Simply look at some of the consumer games available like The Sims, Unreal, Half Life, or Quake III.  Even aspects of modeling have brought amazing effects and characters to films such as “Toy Story”, “Dinosaur”, “Star Wars: Episode I (Jar Jar Binks)”, and shorts like “Veggie Tales”, (see Figure 1-1).  The bottom line is that for each of these domains, including military testing and training, modeling has become an extremely cost effective, realistic and useful technology and will be used in greater extent in the future.Figure 1-1.  Veggie Tale’s Larry-BoyThe problem, however, is that individual models (often representing the same physical entity) are defined and described quite differently across the spectrum of computer systems, computer applications, and problem domains.  This was adequate for self-contained modeling where engineers only cared about the execution within one box and within one environment.  However, today, our desire is to meet the needs of interoperability and reuse.  These goals are reflected in the 1995 Chairman’s Program Assessment, which noted that the “lack of M&S interoperability is our largest shortfall”, and in the FY 1997 Defense Planning Guidance indicating the need to “restructure M&S activities for interoperability and reuse…”  In today’s world of mandated interoperability and reuse, these models need to be reflected and understood from one computer system, computer application, or problem domain to another (with minimal loss of fidelity).  Developers and engineers are tasked with the problem of identifying and re-describing these models so that they can be shared and understood.   1.1 The DoD SectorWithin the DoD Modeling and Simulation (M&S) community, we have been dealing with the issue of interoperability and reuse over the course of the last 15 years.  During this time, several interoperability and reuse initiatives and standards have been introduced including SimNet, Distributed Interactive Simulation (DIS), Aggregated Level Simulation Protocol (ALSP), and High Level Architecture (HLA).  In HLA, the most recent DoD modeling and simulation standard, we have defined an object-oriented schema known as the Object Model Template (OMT).  The OMT schema is used as a guide to document and define the types of objects, attributes, interactions and parameters that simulation systems could potentially create, exchange, and reflect during a concurrent execution.  These executions are often referred to as interoperability exercises.  The simulation systems involved in an interoperability exercise (possibly consisting of virtual, constructive, or live instrumented systems) are identified as federates, and the OMT-based document that identifies the type of data to be exchanged among federate participants is called a Federation Object Model (FOM). Via its OMT-based FOM, and its individual federate document called a Simulation Object Model (SOM), HLA has been successful in establishing the ability to define models such that simulations can interoperate and share model information among multiple players within a single federation.  However, federates today are faced with an additional expectation and requirement of being able to participate in a number of unique federations, not just one.  Since the FOM identifies the characteristics of a federation (the capabilities of all the players) and each federation is represented by a FOM, federates need to be able to rapidly transition from one FOM to another FOM with minimal impact and in minimal time.  To address this need, our paper builds on the Adaptable Federate concept originally presented at the Spring 2000 Simulation Interoperability Workshop (SIW) [1].  Focus is drawn on the process and practice of Object Model Mapping and Inspection to allow federates to quickly transition (adapt) and play in a greater number of federations.  We will also identify how the adaptable concept can be extended to support other domains and future aspects of interoperability.1.2 The Commercial SectorThere are also some important things taking place within the commercial sector regarding interoperability and reuse.  For instance, the business commerce community is currently pushing Business-to-Business (B2B) e-commerce interoperability, which is the exchange of data between businesses.  Players within the DoD, however, are seasoned in the area of interoperability and reuse having been through some of the issues the B2B domain is considering.  In fact, the original HLA vision, which dates back over five years and evolved from other standards such as DIS and ALSP, lends itself to the direction today’s business information technology market is heading.  Unfortunately, some of the key technologies regarding HLA are (or were) simply not practical for the business market; specifically the Runtime Infrastructure (RTI) mechanism used for transporting messages among disparate systems over a network.  Without getting into detail, the HLA’s RTI represents a network implementation mechanism that is fundamentally different from current transport technologies widely implemented and accepted including HTTP, DCOM, and CORBA.  Rather than exploring the RTI issues however, there are other lessons simulation engineers have experienced that correlate with the experiences business developers and information technologists are just now beginning to face (and will soon face).  The issue is figuring out how computer systems and computer applications at different businesses can exchange meaningful data with each other in a fashion that fosters interoperability and reuse.  Again, it is centered upon how data is represented, and defining a common schema that is used by various businesses which will allow these businesses to exchange and share information.  By definition, a schema is the metadata used to describe the format, content and structure of a data record or document [2].  Sounds a lot like OMT? Similarly, the B2B e-commerce interoperability effort will face the same challenge the HLA community is currently experiencing.  That is, the need for a business application to actively interoperate with a number of various business communities – not just one.  Sounds like a need to go between FOMs? The greater significance of the Adaptable Federate concept presented in this paper is that these ideas and principles can be applied to B2B e-commerce interoperability efforts as well as the DoD M&S problem domain.  This paper identifies forthcoming issues and potential solutions for interoperability that can positively affect both the modeling and simulation community and the e-commerce community.2. What Truly is Interoperability?By definition “Interoperability is the ability of software and hardware on multiple machines from multiple vendors to communicate [3].”  The key mission behind the High Level Architecture (HLA) movement was to provide an open standard that would allow all types of models and simulations including C4I systems to interoperate.  Other than predecessor standards such as DIS and ALSP, all other forms of interoperability have been exclusively proprietary and often unpublished.  The gaming world is specifically notorious for proprietary data exchange mechanisms regarding multiplayer gaming.  Even in the business community, the exchange of critical data between systems has largely been dependent upon selecting proprietary and vendor focused solutions.  The World Wide Web however has introduced commercial standards that allow data largely to be retrieved and viewed and is now paving the way for open, internet-based standards to facilitate information interchange – especially for business.  Two key Internet technologies include the eXtensible Markup Language (XML) and the Simple Object Access Protocol (SOAP).  In a short while, we will take a deeper look at SOAP, which is a relatively new standard for data interchange.  However, it is important for us understand the merit of XML since it is currently being applied to HLA and B2B in support of interoperability.    2.1 XML TechnologyXML is an extremely popular syntax description language for structuring and documenting data that can be shared across multiple platforms and languages.  XML was originally intended to allow mark-up extensions to be added to HTML.  HTML, of course, is the common syntax language for the World Wide Web.  However, because of XML's flexibility and applicability to a wide variety of markets, it has grown beyond its intention and touted as a key data interchange mechanism for the future of e-commerce [4].  What is important about XML is that despite its hype, it really is a significant integration technology piece.  In fact, XML plays an important role in shaping forthcoming HLA OMT-based documents.  Previously, OMT-based documents were constructed using Backus-Naur Format (BNF) syntax tags based on the Algol 60 programming language.  XML, however, provides greater accessibility and extensibility than BNF.It is important to understand the concept of an XML Standard document before we go on.  An XML Standard is an XML described document detailing the types of data that can be shared or exchanged.  In regards to interoperability, it forms the technical agreement for data interchange.  For instance, an OMT document such as a FOM can be considered an XML Standard.  The myth within the information technology (IT) world, however, is that a document defined by XML syntax can easily be exchanged (shared) and autonomously UNDERSTOOD among disparate systems.  This is not necessarily true.  XML does provide the necessary semantics for identifying data elements that can be shared and exchanged.  However, an application that attempts to digest information defined by an XML standard that was published by an external source won’t understand the data unless the application either directly complies to the same XML standard (that’s its language) or the application can adapt to the external source’s XML standard which is different than its own (language translation).  Therefore, in the context of XML (including HLA), there are two ways to achieve interoperability.  Either all federates or business applications comply with a commonly agreed upon XML standard (such as a FOM), or they must adapt.   2.2 Compliancy –vs.- AdaptabilityHistorically, within the HLA community, we have commonly focused on the direct compliancy aspect of interoperability and only recently have we begun to consider the concept of adaptability in order to achieve interoperability.  The adaptability notion is the key element regarding the Adaptable Federate concept mentioned earlier and described in the next section.  Similar interoperability issues will occur within the B2B e-commerce community that has been experienced in HLA.  By our mere experience, those of us in the HLA community are on the leading edge in applying interoperable solutions and can help shape and direct B2B e-commerce interoperability.  The whole point regarding XML is that there is a tie-in between our HLA efforts with where things are going in the B2B e-commerce world.  In HLA, the heart of interoperability is not about the RTI (the network transport); it's about federates communicating objects that are described in the same way.  The way shareable objects are described is dependent upon an XML Standard.  This is true for HLA and for the B2B e-commerce market.  The problems that the HLA community currently face and have faced are potentially forthcoming issues the B2B world faces.  Therefore, solutions that utilize and assimilate XML such as the Adaptable Federate concept are vital in the endeavor to achieve interoperability for HLA, B2B, and potentially other markets.3. The Adaptable FederateThe Adaptable Federate concept is really about a federate being able to quickly conform to the characteristics of a federation.  Whether it is HLA or e-commerce, the ability for an application to plug-in and exchange data among multiple types of online communities or federations is the striving need in attaining and maintaining interoperability.  In HLA, we want a federate to participate among many federations without the repetitive effort of having to modify, compile, and link a federate's code for every federation for which it is to participate.  A significant reduction of time, cost, and resources required to modify an application if it is able to adapt can occur through the Adaptable Federate concept.  3.1.  HLA Federation Participation ExampleLet us explore this concept in regards to HLA.  If a federate is expected to participate in a wide variety of federation executions and the objects defined in each FOM are quite different, then the application or system representing the federate must undergo change to comply.  For example, suppose a federate’s simulation code is written so that it can publish and subscribe (receive) entity information with positional data described using earth centered, geocentric coordinates (XYZ).  Assume that the FOM that prescribes the use of geocentric coordinates is identified as FOM X (as shown in Figure 3-1).  FOM X is what our simulation/model is initially compliant to, and it’s capable of interacting and participating with other federates that are FOM X compliant which form Federation X.  Suppose in the following month, a requirement exists for our federate to participate with Federation Y, which is represented by federates that comply with FOM Y.  In this case FOM Y prescribes the use of earth surfaced, geodetic coordinates (Lat, Long, Alt) for entity positional data.  In order to participate, changes to the federate’s simulation code must be made to allow the federate to publish and subscribe entity information described in geodetic coordinates as opposed to geocentric coordinates. Figure 3-1.  Typical Federate IntegrationThe second integration effort to comply with FOM Y requires code changes, re-compilation and re-linkage of the federate.  Once changes are made, the federate may no longer be able to plug-and-play with Federation X again unless either the modification process is repeated or the previous federate implementation was separately maintained and managed.  In the latter case, maintaining multiple instances of the same federate is not at all a desirable circumstance.The Adaptable Federate concept, however, provides a way for a federate to fulfill interoperability expectations and still maintain the internal object structure of the federate.  If a federate that is participating with Federation X is also expected to participate in Federation Y, the effort required for the federate to transition from FOM X to FOM Y will require less time than the direct compliance approach described above.  In this case, the federate takes advantage of its Simulation Object Model (SOM), which represents a federate’s intrinsic capabilities, to form a dynamic contract with a FOM (see Figure 3-2).  As shown in this illustration, the transition effort can realistically be accomplished in a matter of days (or even hours) rather than months.  3.2  The SOM is the KeyThe key in maintaining the integrity of the federate and providing this rapid transition is for the federate to be fully represented by its SOM.  The SOM identifies “who you are” as an application.  The SOM, in essence, is the resume of capabilities a federate is capable of providing and is described in an object-based model -- the Object Model Template (OMT) – just as the FOM.  Figure3-2.  Adaptable Federate IntegrationWithin HLA, the SOM is important for several reasons: SOMs can be used as a guide for the development of the FOM; SOMs provide the basis for the interface definition between a FOM and the federates within a specific federate execution; andOnce implemented, SOMs provide a way to tap into the federate without having to know (or the need to change) internal federate code.  These last two items are the heart of the Adaptable Federate concept.  When the SOM is treated as an interface to the federate, the SOM can then be used to identify mappings to a variety of FOMs (see Figure 3-3).  The mappings are possible because both the SOM and FOM are described in the same manner (OMT format based on XML) and, as such, provide an object-oriented hierarchy that is cross-linkable.  Once a SOM is defined for a federate, it should then be implemented within the federate code to provide the basis for an adaptation interface that we call an Adaptable Federate Link Module (AFLM).  Figure 3-3.  SOM-To-FOM Mapping3.3  The Adaptable Federate Link Module The AFLM can be represented as a Windows Dynamic Link Library (DLL), Java module, or some other translation and data shared mechanism.  The point is that within HLA, the AFLM provides the SOM-to-FOM-to-RTI mapping connection for the federate.  With the right tools and knowledge, the creation of an AFLM can be made quickly and easily, and allows HLA federates to  “plug-and-play” with a myriad of federations and various RTI implementations. Since the AFLM is separate from the federate, the modifications required to allow the federate to interact with the federation have become isolated.  After the initial SOM interface integration, the federate no longer needs to undergo change as it moves from federation to federation.  It only needs to establish and dynamically link to a new AFLM.  Since the federate will have an AFLM for each federation it is to join, the federate can easily change between federations simply by exchanging AFLMs or using multiple AFLMs simultaneously.  The testing, validation, verification, and configuration management effort typically required for the federate is minimized since no code modification had been made directly to the federate.  This savings reduces the time and effort required to configure, test and manage each AFLM.3.4  B2B SupportThe whole concept of the SOM lends itself extremely well to B2B e-commerce as well.  If an application can describe its capabilities in a XML Standard that serves as a resume of its capabilities, then, like the SOM with the AFLM approach for HLA, a mapping can be made between the application’s XML-based resume and a business community’s XML Standard.  The business community’s XML standard, again, is the commonly agreed upon data exchange document that defines the information that businesses want to share with each other.  The key practice used to breed an Adaptable Federate or an Adaptable Business Application is object model mapping and inspection.4. OM Mapping and InspectionConsider the many different ways a single object can be described.  It is quite natural for us to describe real world objects in different ways, but as cognitive beings, we have an inborn knack for understanding and relating to synonymous ideas even though they maybe described differently.  For example, if an individual mentions an automobile and another individual mentions a car, it is understood that they are talking about similar things.  Computers are different though.  They have to be “told” what it is and how each item relates.  This aspect is the principle of Object Model (OM) Mapping and Inspection.  OM Mapping and Inspection allows developers to create an adaptation interface for HLA federates or B2B e-commerce systems allowing the information interchange (AKA: interoperability) to persist despite differences in data exchange documents.  In HLA, the OMT (i.e. SOM and FOM) is formatted in a manner that provides a convenient method to map elements of one object model to another object model.  The same principle applies to XML Standards for B2B e-commerce.  The purpose of OM Mapping and Inspection is to identify the similarities and determine the syntactical differences between two object models (two XML Standards), and to determine the roles and responsibilities a federate (or business application) will have with the federation (or business environment).  This effort allows an adaptation interface to be created.  Within in HLA, an adaptation interface is as identified as an Adaptable Federate Link Module (ALFM) as shared previously.  The mapping information helps us identify the AFLM API interface and transition code necessary for a federate to plug-in and participate in a federation.  In order to help illustrate this concept, the process of mapping two object models (a SOM and a FOM) is described below using a tool developed by Synetics called OMSpector™ [5]. 4.1 Object / Interaction LinkingThe first key in creating an Object Modeling mapping in HLA is to link the similar objects and interactions between two different OMT object models.  For example, within OMSpector™ this involves displaying two object models such as a SOM and FOM in a side-by-side view that allows us to compare the classes / interactions and associated attributes / parameters (as illustrated in Figure 4-1).  Providing this type of visual display allows for rapid examination and linkage of similar object classes and attributes.4.2 Attribute / Parameter LinkingAfter completing the object/interaction linkage, the next step is to link a federate’s object attribute type (or an interaction parameter) with the similar object attribute type (or interaction parameter) that will be represented by the federation (see the bottom half of Figure 4-1).Figure 4-1.  Object Class / Attribute Mapping 4.3 Attribute/Parameter Element InspectionOnce the attributes (or parameters) between two objects (or interactions) defined by separate OMT-based documents models are linked, an automated inspection comparison of the attribute/parameter element information can be performed.  The inspection includes identifying object class attribute discrepancies.   In OMSpector™, for example, magnifying glass icons are placed to the right of the element names under the property column to mark any discrepancies found between the respective elements (see Figure 4-2).  This provides the user with a visual flag identifying differences between the federate (i.e. SOM) and the federation (i.e. FOM).  These discrepancies are important pieces of data marking aspects of translation that would be required to produce an Adaptable Federate.  By knowing this difference, translation code can at least be ear marked so that, in this case, the federate can understand and communicate with the federation.Figure 4-2. Attribute Parameter DisplayObject model comparison is the key to achieving a successful adaptation of the federate because it provides a way to examine the impact of the object model linkage.  It answers the question, “how can my federate participate in this federation?”  The information gained from the mapping and inspection allows us to: Identify the roles and 	responsibilities of the federate, and Identify the type of translation code necessary for the SOM-based federate to communicate with the FOM-based federation. 4.4 Identifying Federate ResponsibilitiesAssuming object models were originally created based on a set of well-defined objectives and requirements, the mapping helps solidify the agreement on the behavior of all federates and how applications will interact with each other during the execution [6].  Once mappings are completed and federate responsibilities are identified based on the publication and subscription roles of the federate, then the reusable interface for the Adaptable Federate Link Module (AFLM) can be defined.  The SOM, again, provides the basis for the AFLM interface.    4.5 Translation CodeAlso contained within the AFLM is the translation code necessary to allow the federate to communicate with the federation (the FOM).  FOM-based methods within the AFLM provide communication with the designated RTI (or other network unit).  Translation code generated for the AFLM provides effective federation integration.  The end-result is that a federate is able to “plug-and-play” with various federations and RTI implementations.  The AFLM is not limited to just HLA in the RTI.  Other network interfaces may also be used such as a DIS PDU interface, Microsoft’s Direct Play API (used for multiplayer gaming), or even using SOAP (described later).  Thus, this concept is useful for federates that need to play HLA one day and drop back to play DIS or DirectPlay another day.  Once an AFLM is created, it can be retrieved again later and reused by the federate without having to re-map since the interface based on the SOM has not changed.  The greatest benefit is that this approach allows the maintenance of only one instance of a federate.5. Object Model PatternsAs much as tools may be able to help an engineer map a FOM to a SOM, there is a large amount of manual effort initially required in analyzing and comparing all the elements of a SOM with the elements of a FOM.  Tools like OMSpector™ certainly help us visualize and walk through the effort, but the connection points still need to be made manually, and the translation code still needs to be selected and integrated manually for each new FOM.  The issue, however, is not with the tools, but with the way those of us in the modeling and simulation community regard a FOM or SOM.  We historically treat a FOM or SOM as a unique and separately managed and controlled document.  Even though the document reflects an object oriented exchange design, federate adherence (compliance or adaptation) is associated to the “FOM” as a whole.  However, if our mindset considered a FOM or SOM as a collection of patterns that could be repeated in other FOMs or SOMs then it would revolutionize the effort required in achieving interoperability.  Federates could learn to recognize and respond to a designated pattern that might be emanated from a number of different FOMs.  Therefore, rather than adapting to a FOM, the idea of adapting to patterns of a FOM is the path of least resistance for FOM to FOM migration. 5.1.  BOMsSo, what would constitute a “pattern” within a FOM?  Well the idea of object model patterns is really the concept behind the Base Object Model (BOM) movement within the Simulation Interoperability Standards Organization (SISO) [7].  By definition, a BOM is "a simulation component representing a single aspect of federation interplay.”  A BOM is distinguished by one or more object classes, interactions and associated attributes (in accordance with the OMT), and is augmented with additional Meta-Data.  What is important to understand about a BOM is that it is not simply a component relating to a small chunk of a FOM such as a data type, or object class.  A BOM really represents the essential elements needed to establish a specific type of dialogue between multiple systems, and therefore its scope is limited.  For example, a BOM might represent an “air-to-air engagement”, or a “radio transmission.”  These two examples identify the scope of exchange.  Clear understanding of the scope helps to identify the necessary items (object classes, interaction classes) needed to describe a “pattern”.   5.2. Component-based OM DevelopmentMany things can be done with BOMs, however the original intent is to use BOMs as a building block of FOMs and SOMs.  The idea is similar to the concept of reusable software components like Java Beans, ActiveX, or Visual Component Library (VCL) components.  Each of these type of software components have an interface associated to them that allow programmer’s to manipulate and use them in their application.  For programmers, it saves time and effort in being able to plug in a component that performs a specific type of functionality.  In the same way, BOMs can be conceivably used as reusable design components that help rapidly create new FOMs and SOMs or add to existing FOMs and SOMs.  The beauty of a FOM or SOM built wholly or partially with BOMs is that any mapping that is done with a pattern that represents a BOM can be leveraged and used again.  This reduces the effort required in adapting the federate to another FOM or SOM.  Thus, the Object Model Mapping and Inspection approach can be used to establish pattern (BOM) mapping within FOMs and SOMs.  Mapping efforts, which include the object class, interaction class and, complex data type while also respecting attribute and parameter linkages, can be minimized and shared among other players.  Issues such as defining translation code can be curtailed because an equivalent BOM mapping had been done previously for another FOM adaptation.  Therefore, not only is the use of BOMs a better way to build and to add to a FOM or SOM, but BOMs provide an easier and faster way to map, adapt and interoperate with a greater number of FOMs based on similar patterns.  6. B2B InitiativesAs suggested earlier, the concept of object modeling and mapping lends it self well within the B2B e-commerce market.  Business applications need to be able to exchange data with other business.  XML provides a key component in defining the technical agreement businesses will use to exchange their data.  The problems that the B2B market faces, however, are similar to the issues that we have faced within HLA.  Consider that there may be a specific business that desires to exchange data among multiple business communities.  The difficulty lies in the ability to have an application rapidly plug-and-play with a myriad of business communities each of which use somewhat different XML Standards.  6.1 SOAPAs alluded to earlier, one of the newer Internet standards used to support the exchange of information is the Simple Object Access Protocol (SOAP).  SOAP is designed to integrate applications and services over the Internet and make them more accessible to a broader range of users [8].  SOAP is actually the marriage of several technologies including HTTP and XML.  The Hyper Text Transfer Protocol (HTTP) is a well-known Internet standard used to request and receive messages over TCP/IP.  Most notably, it is used to request and retrieve HTML pages for web browsers, but, most recently, it is been used to transport SOAP payloads.  Contained inside a SOAP payload are instances of data based on an XML document and syntax.  SOAP provides the exchange mechanism used to share data among business applications.  Although the implementations are quite different, SOAP compares similarly to HLA’s RTI.  It provides an abstract transport mechanism for exchanging instances of data associated to an XML-based document.   Within HLA, the RTI only provides a means to pass the data among federates.  Similarly, a majority of the interoperability efforts that will exist in the B2B e-commerce market will depend upon SOAP as the mechanism for sharing its data.  Certainly a SOAP interface, or Microsoft’s DirectPlay or DMSO's RTI can be used to share information (no matter what the market), the key, however, has been and always will in understanding the data that’s being shared so that it may be properly reflected.  There are current initiatives to create XML standards that will facilitate B2B communication.  One tangible example is Microsoft’s BizTalk Framework, which adopts both XML and SOAP.  Other efforts are currently in the works by OASIS and collectively by GM, Ford and Daimler-Chrysler to support B2B exchange.  6.2 BizTalk  - HLA in Disguise?BizTalk is Microsoft’s framework for successful support of B2B applications.  The framework is designed to facilitate the exchange of “information between software applications and conduct business with trading partners and customers over the Internet [2].  BizTalk is interesting because it roughly parallels the efforts we have experienced with HLA, specifically in reference to the OMT (see Table 7-1). Table 7-1.  BizTalk’s Similarity to HLABizTalk TermsSimilar HLA TermsBizTalk Framework Compliant (BFC) ServerRuntime Interchange (RTI) ExecBusiness ApplicationFederateBusiness DocumentFOM / SOMSchemaOMTBizTalk DocumentInstantiated FOM DataLike the RTI, the BizTalk Framework Compliant (BFC) Server is represented by a set of services that provide message-processing functionality for an application based on an interface specification.  As described earlier, a business application is no different from the notion of a federate.  It emits (publishes) and consumes (subscribes) information defined by a Business Document.  The Business Document is a well-formed XML document containing business-transaction data like a FOM or SOM.  The well-formed Business Document is contingent upon a Schema.  In the introduction, we talked about the notion of schemas.  Again, a schema is the metadata used to describe the format, content and structure of a data record or document.  The OMT provides a schema for defining data that will be exchanged among federates.  The bottom line is that the schema identifies the elements or types of data that will go into the Business Document (or FOM/SOM).  Finally, the instantiated data defined by the Business Document that is passed within the body of a SOAP message is identified as a BizTalk Document.   7. Protocol Agents – The Future of Interoperability?Certainly, the knowledge and experience we have learned in HLA can prove beneficial to the B2B e-commerce market.  Furthermore, some common issues that both B2B and HLA will face can be tackled concurrently.  For example, two ways for an application to interoperate have been identified.  It can either comply with a specific FOM or Business Document, or it can learn to adapt to a FOM through the process of Object Model Mapping and Inspection.  We also explored the concept of recognizing and mapping “patterns” which provide the path of least resistance regarding adapting an application from one FOM or Business Document to another.There is another aspect of adaptation not yet mentioned, and that is the idea of having applications (federate agents) that exist within an environment that serve as “translators”.  The concept is no different from a language translator that aids a person visiting a country where the spoken language or dialect differs from his/her own.  Consider the Star Wars character C-3PO, a human cyborg, which served (or at least was supposed to serve) as a diplomatic protocol droid that could understand and translate over 6 million languages and dialects (see Figure 8-1).    INCLUDEPICTURE "http://www.iso.gmu.edu/~cleonard/c3p0/3po2.jpg" \* MERGEFORMATINET Figure 8-1.  C-3P0 Protocol DroidLike C-3P0, a federate that has already gone through the process of mapping between at least two different Object Models or multiple patterns (BOMs) could be used as a translator or Protocol Agent for other applications that receive a message that it might not quite understand.  The idea provides a viable alternative to the FOM-to-FOM mapping principle later described in the annex section of this paper.  The Protocol Agent concept, in fact, is extremely dynamic since it could conceivably support real-time and just-in-time translation and support a broad number of federations if it is using multiple AFLMs simultaneously.  Most notably, if the FOMs and SOMs used by federations and federates respectively were compositions of widely used BOM building blocks (these are next generation FOMs and SOMs), then “pattern” mapping would help to establish a wider crossbreed of federate Protocol Agents.  This can occur since a single BOM can be represented within a variety of diverse FOMs and SOMs.  The mapping of the BOM is meta-data that can be carried into each FOM or SOM it is included into.  As a result, that “pattern mapping” is reusable and helps to create a greater number of Protocol AgentsThe Protocol Agent concept also applies to B2B e-commerce.  Applications unable to understand the information contained within the payload of a SOAP (or RTI) message could potentially seek out a Protocol Agent that would be able to translate the data into a format that is compatible with the application’s intrinsic capability.  This approach could be used to help eliminate some of the pre-execution mapping efforts described earlier.  In fact, it is another level of adaptation adding an element of intelligent automation and autonomy required for interoperability.8. ConclusionThe adaptability concepts described within this paper provide an approach that effectively reduces the hurdles a federate encounters when attempting to comply with a federation.  This is achieved through process of Object Model Mapping and Inspection between a federate (SOM) and federation (FOM).  Even more advantageous is mapping the patterns (BOMs) represented within a SOM or FOM.  Based on the discrepancies identified from either of these types of mappings, translation code can be generated allowing a SOM-based federate to adapt to various FOM-based federations. The notion of cooperating businesses agreeing upon a Business Document is similar to the efforts the HLA community has experience in collaborating and creating Federation Object Models (FOMs).  The Object Modeling and Inspection method described for HLA can also support B2B e-commerce interoperability initiatives. Furthermore, the mapping concept provides a pathway to the next level of interoperability through the introduction of intelligent translation agents identified as Protocol Agents.  These Protocol Agents serve as active, real-time translators allowing a greater number of computer systems, computer software and problem domains to automatically and indiscreetly adapt and interoperate.Annex A.  Additional HLA OM Mapping BenefitsThe scope of this paper has primarily focused on ways in which HLA federates and B2B applications can adapt and interoperate (exchange data) among a domain of other systems despite differences in exchange documents.  There are additional capabilities and benefits of OM Mapping and Inspection beyond this paper’s primary initial focus that should also be recognized.  These capabilities are identified and described within this annex section. A.1 FOM-to-FOM mappingConsider the possibility of two different, pre-established federations that desire to interoperate with one another.  Rather than merging the two FOMs that represent each federation into a single FOM, and insisting that each federate comply with the new FOM, a Dual Federation Gateway could instead be established which provides the necessary interoperability between each federation.  This is accomplished by first performing a FOM-to-FOM mapping and generating the links and translation code necessary to create a Dual Federation Gateway.  As a result, existing Federations remain intact without comprise to the federates and yet they are still able to cooperate with other federations.  The concept of multiple federation executions may certainly be required in the future, and a FOM-to-FOM mapping provides a method of satisfying this requirement without impacting individual federates.A.2 SOM-to-SOM mappingAs a federate grows and expands, its SOM may require modification and change.  In order to facilitate the integration and evolution of the federate to a new or updated SOM, a mechanism is needed.  The concept of SOM-to-SOM mapping provides a way to support SOM changes within the federate.  Considering that this mapping identifies the areas of modification, specifically the differences that require translation, and the new features that require new updates, a SOM-to-SOM mapping helps in the maturation process of a federate by providing update support.A.3 Federation Execution AnalysisThe OM Mapping can also be used to identify a federate’s responsibilities and capabilities.  This information allows testers and analysts to assess the effectiveness and performance of the federate within the federation during the execution.  This helps achieve the goals identified in HLA.FEDEP Step 6 – “The federation is executed, outputs generated and analyzed, and feedback provided to the federation sponsor [6].”Measuring actual federate participation against the federate expectations identified in the map allows analysts to properly determine federation performance and feed verifiable data back to the federation sponsor. Resources[1] Gustavson, P., Bachman, J., “Object Model Mapping and Inspection: The Key to Adaptable Federates”, 00S-SIW-044, 2000 Spring Simulation Interoperability Workshop Papers, March 2000, http://www.sisostds.org/.[2] Microsoft, et al, “BizTalk Framework 2.0 Draft: Document and Message Specification”, Version 2.0 Draft, June 2000,  HYPERLINK "http://www.biztalk.org" http://www.biztalk.org.[3] Denis Howe, “Free On-line Dictionary of Computing”, Copyright 1993, www.dictionary.com.[4] World Wide Web Consortium, Extensible Markup Language (XML) 1.0, Feb 1998, http://www.w3c.org[5] Synetics, OMSuite™, www.omsuite.com.[6] Defense Modeling and Simulation Office, “HLA Federation Development and Execution Process (FEDEP) Model,” Version 1.4, June 1999, hla.dmso.mil.[7] Gustavson, P. & Hancock, J., “Base Object Models (BOMs): Reusable Component Objects for Federation Development,” 1998 Fall Simulation Interoperability Workshop Papers, Volume II (99F-SIW-034), September 1998, http://www.sisostds.org/.[8] DevelopMentor, et al, “SOAP: Simple Object Access Protocol (SOAP)”, Version 1.1, 2000, http://www.develop.com/SOAP.Author BiographiesPAUL GUSTAVSON has over eleven years of computer engineering experience supporting a wide variety of modeling and simulation, and software development efforts within the DoD community.  Paul has been one of the key software developer’s of OMSuiteTM, an HLA implementation tool suite that utilizes Use Cases, BOMs and OM Mapping, and is based on the HLA FEDEP and CAFDE architecture.  Paul is a member of the Simulation Interoperability Standards Organization (SISO) and currently serves as the chairman of the Base Object Model (BOM) Study Group and co-vice chair of the Federation Development Process (PROC) Group within SISO.  He has authored and presented numerous papers within the M&S community and is a contributing author of the “C++Builder 5 Developer’s Guide”.    LARRY ROOT has over sixteen years of experience in the areas of Software Engineering, System Engineering, Technical Management, and Financial Management.  Most of this experience has been in support of the Naval Surface Warfare Center Dahlgren Division (NSWCDD), but most recently, it has been in support of the commercial development of tool suites.  These tool suites, and their integrated development environments (IDEs), provide data visualization and large-scale modeling and simulation (M&S) support to M&S efforts using DoD’s newly defined High Level Architecture.  This work has offered the opportunity for Mr. Root to push the edge of technology within the world of modeling and simulation, allowing his experience and contributions to act as a unifier in bringing together various technologies within the commercial and DoD M&S communities. STEVE GOSS has over twenty-six years of military combat system experience with emphasis on modeling and simulation technologies, system engineering, system analysis, and test.  He has provided software engineering support in the development of OMSuite™, a collection of HLA tools used to support creation and maintenance of FOMs, SOMs and OM Mapping and Inspection.  He is also a member of the BOM Study Group within the Simulation Interoperability Standards Organization (SISO) and has published and presented several papers within the SISO community.  Steve also has provided software engineering support in the development of CoBRA, a coordinated battleforce replay and analysis environment.  This environment allows for the overlay, replay, visualization, and automated analysis of battleforce exercises from a battleforce perspective.  It is currently in use by such Department of Defense programs as the AEGIS Weapon System, the Gun Weapon System, and the Shipboard Gridlock and Auto-correlation System.