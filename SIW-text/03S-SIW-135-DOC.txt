Simulation to C4I Support Plan Development: Experience ReportRobert L. Wittman Jr.MITRE CORPORATION3504 Lake Lynda Drive, Orlando, FL 32817321-235-7601 HYPERLINK mailto:rwittman@mitre.org rwittman@mitre.orgHugh KelleyMITRE CORPORATION3504 Lake Lynda Drive, Orlando, FL 32817407-208-1320 x223 HYPERLINK "mailto:hkelley@mitre.org" hkelley@mitre.orgSheila CaneMITRE CORPORATION3504 Lake Lynda Drive, Orlando, FL 32817407-208-1320 x226 HYPERLINK "mailto:sheila@mitre.org" sheila@mitre.orgKeywords: OneSAF, Computer Generated Forces (CGF), Semi Automated Forces (SAF), Command, Control, Communication, and Computers, and Intelligence (C4I) Support Plan (C4ISP)ABSTRACT:  This paper explains the development process, contents, and initial conclusions contained within the OneSAF Objective System (OOS) and Common Training Instrumentation Architecture (CTIA) C4I Support Plans.  In order to support the Army's "Train as You Fight" mantra both OOS and CTIA have requirements to stimulate and be stimulated by the Army's real-world C4I systems including the Army Battle Command and Control System (ABCS) Version 7.0.  To effectively plan for this development both programs are undertaking efforts, in conjunction with the Training Aids Devices, Simulations, and Simulators(TADSS) System of System Architecture (TSOSA) program, to cooperatively develop C4I Support Plans.  These plans focus on identifying, highlighting, and planning for developmental and interface related dependencies and issues.  Because of the complexity and magnitude of the operational, system level, and technical interactions between the systems, the C4I Support Plan development team included active participants from the CTIA, OOS, TSOSA, and ABCS 7.0 System of System Engineering and Integration (SSE&I) programs.  The resulting OOS and CTIA C4I Support Plans abide by the DoD Architecture Framework which was used to guide the system engineering rigor in capturing the issues and dependencies associated with interfacing these simulation-based toolsets with ABCS Version 7.0.IntroductionThe Army Modernization Plan and the Training, Exercises, and Military Operations (TEMO) Management Plan, FY 2000-01 describes the Army’s vision for the application of Synthetic Training Environments (STE) as “seamless digital linkage of live, virtual, and constructive training environments capable of providing the complete combat environment for unit training.” This vision relies on robust interoperability between the Training Aids, Devices, Simulations and Simulators (TADSS) and the Command, Control, Communications, Computers and Intelligence, Surveillance, and Reconnaissance (C4ISR) systems operated by the training unit. [7] C4ISR-STE interoperability supports multi-echelon, combined arms training with simulated battlefield events that are nearly imperceptible from live opposing forces.  It allows commanders to train all battlefield operating systems simultaneously, in real-time, on the terrain of choice, across the full-spectrum of military operations.  The Program Executive Office for Simulations, Training and Instrumentation (PEO STRI) has the mission to provide Army forces with the training systems necessary to enable the Army’s vision for STE.To this end, the Program Manager Training Devices (PM TRADE) and PM One Semi-Automated Forces (OneSAF) in conjunction with the TADSS System of System Architecture (TSOSA) initiative sponsored the development of the OneSAF and Live Training Transformation-Objective Instrumentation System (LTT-OIS) C4I Support Plans to identify, document, and mitigate dependencies, issues, and risks associated with the interface of  PEO STRI products and the Army Battle Command System Version 7.0 (ABCS 7.0).This paper discusses the work, architectural products, and initial conclusions in developing the initial drafts of OneSAF and LTT-OIS C4I Support Plans with ABCS 7.0.  A collaborative team comprised of OneSAF, LTT-OIS, TSOSA, and ABCS 7.0 System of System Engineering and Integration (SSE&I) participants created the architectural products described in this paper leveraging OneSAF, LTT-OIS, and ABCS 7.0 architectural artifacts.Participating ProgramsOneSAF Objective System The One Semi-Automated Forces (OneSAF) Objective System (OOS) is the U.S. Army’s next generation, composable, entity based simulation system.  It is being developed to provide an integral simulation service to the Advanced Concepts and Requirements (ACR), Training, Exercises, and Military Operations (TEMO), and Research, Development, and Acquisition (RDA) domains.  With requirements ranging from closed-form analytical support to command level human in the loop training, OneSAF will be a High Level Architecture (HLA)/Distributed Interaction Simulation (DIS) compliant, entity level simulation providing a common-based solution for a broad range of user requirements.  [9]OneSAF requirements demand varying levels of interoperability with ABCS.  OneSAF development and fielding must keep pace with the sequential versions of ABCS for the next 10-20 years, culminating with the Future Combat System (FCS) C4I system. PM OneSAF must synchronize OneSAF design and production with ABCS architecture and development processes to field constructive simulations that can interoperate with ABCS. Live Training Transformation Objective Information System (LTT OIS) and the Common Training Instrumentation Architecture (CTIA)The LTT-OIS is being developed by PM TRADE to support Army force-on-force and live-fire unit training exercises and rehearsals.  It will be a state-of-the-art, automated data collection and analysis system that will control an exercise and provide feedback on training/rehearsal performance. LTT OIS will be an integrated system of computer software and hardware; workstations; databases; voice and video recording, production, and presentation equipment; interface devices; and communications systems composed to support individual unit training requirements. [1]Like OneSAF, LTT OIS requirements demand varying levels of interoperability with ABCS.  LTT OIS development and fielding must also keep pace with the sequential versions of ABCS. PM TRADE must synchronize LTT OIS design and production with ABCS architecture and development processes to field interoperable training support systems when and where they are needed and specifically to support Unit Set Fielding. LTT OIS products must also interoperate with FCS C4ISR systems to support training mixtures of legacy, interim and objective forces. [1]TADSS System of Systems Architecture (TSOSA)TSOSA is a PEO STRI Engineering initiative to develop a System of Systems Architecture and associated system engineering processes.  Through this process, TSOSA will identify common and unique components of training and testing systems to support the Army’s collective training strategy from the Legacy through the Interim to the Objective Force.  The long-term objectives of TSOSA are to incorporate PEO STRI products into the Army Knowledge Enterprise Architecture (AKEA), and to identify similarities in programs and products for potential technology transfer and reuse.  TSOSA is using the DoD Architecture Framework which provides a set of common engineering methods and descriptive models, to integrate PEO STRI programs into the Army Knowledge Enterprise (AKEA) and the Army Software Blocking Process. The TSOSA process also supports discovery of the commonality across PEO STRI test and training programs and their requirements for interaction with Army C4I systems.To get to a broad-scope System of Systems Architecture for test and training, it is important to look at a series of architectural products across specific PEO STRI programs and the associated C4I systems with which they interact. TSOSA teams were formed through collaboration with the CTIA, OneSAF and ABCS 7.0 programs to create architecture framework products published in C4I Support Plans (C4ISPs).PEO STRI plans to create Framework Products and C4ISPs for all its Software Block I systems.  When these products are complete, analysis of their components should point out commonalities as well as differences.  This will enable PEO STRI to identify components for re-use, make further acquisition decisions, and develop higher-level architectural products and requirements for integration into the AKEA.  The C4I Support PlanThe purpose of a C4I Support Plan is to identify and support resolution of issues and dependencies between systems required to interoperate with one another.  The focus is the support of operational requirements in terms of interoperability, supportability, and sufficiency.  Interoperability is defined within DOD Directive 5000.2, dated 4 Jan 2001 as “the ability of systems, units, or forces to provide data, information, materiel, and services to and accept the same from other systems, units, or forces, and to use the data, information, materiel, and services so exchanged to enable them to operate effectively together.”Supportability is defined as “the ability of existing or planned Information Technology (IT), including National Security Systems (NSS), systems and infrastructure components to aid, protect, complement, and sustain development or operation of the system being acquired.”[3]  Sufficiency is defined as “the extent to which the requirements are satisfied and the necessary support is available.”[3]Why Develop a C4I Support Plan Planning and developing paper-based architectural products takes time and money that some would argue could be better spent producing more C4I and simulation functionality.  So why would PEO STRI divert money from the code factory floor and pour it into the development of the architectural products comprising a C4I Support Plan?  The answer lies in the DoD’s desire to procure large complex systems that are required to leverage and use other existing DoD systems.  Interoperability is key to this objective. To ensure interoperability, engineers must understand both the syntax and semantics of the data produced and consumed by interoperating systems.  Architectural products like those found in a C4I Support Plan provide the fundamental artifacts for understanding large complex systems. From a top down acquisition management perspective the DoD until September 2002, mandated the development of specific architecture products as part of the DoD 5000.2-R Mandatory Acquisition Procedures for any system interfacing to a DoD real-world C4I system.  Although DoD 5000.2-R was rescinded in September 2002, replacement directives and guidance currently under development are expected to continue to mandate the development of interoperability architectures. The mandated architecture products that are part of the C4I Support Plan are described in the DoD C4I Framework and the Army Enterprise Architecture Guidance Document (AEAGD) Version 1.1.The C4ISP Development ProcessThe general process for development of the architecture products required by the LTT-OIS and OneSAF C4ISPs is described in the DODI 8800.XX, DOD Architecture Framework.  We used a method similar to that employed by the ABCS SSE&I Team to develop the ABCS 7.0 Architecture.   While developing architecture products is an iterative process, we followed the general process shown in Figure 1.Figure 1 C4I Support Plan Development ProcessFor each C4ISP, The AV-1 (Overview and Summary Information) and OV-1 (High-Level Operational Concept Description) were developed concurrently.  The OV-1 graphically depicts the achitecture’s scope, major functions, and relationships.  Since these C4ISPs document system-to-system relationships, the Operational Views necessarily contain some high-level system information.Within the scope specified by the OV-1, the OV-5s (Activity Models) were developed, followed by the OV-6cs (Operational Event/Trace Description).  The OV-6cs provided the information needed to determine the system-to-system requirements to be included in the SV-1 (System Interface Descriptions).Concurrent with SV-1 development, the OV-2s were developed formally from an abstraction of the OV-6cs.  While we had an idea of what the OV-2s would look like, we could not be sure we had all the nodes and need-lines until we went through the event trace.  The OV-6c information is also used to create the OV-3 (Operational Information Exchange Matrix).  Technical details, including (sub)system name and data detail, necessary to implement the SV-1 are appended to the Information Exchange Requirements (IERs) specified in the OV-3 to create the SV-6 (System Data Exchange Matrix).  Finally, the TV-1 (Technical Architecture Profile) was started concurrently with the SV-1.Sample C4ISP Architecture ProductsThis section provides a description and sample of each type of  product used by the LTT-OIS and OOS C4ISPs.  The products are shown in the order of their development as explained in the previous section.All Views (AVs) The AVs provide an overarching perspective of the system under study.  The two mandatory products are the Overview and Summary Information All View-1 (AV-1) and the Integrated Dictionary (AV-2).  The AV-1 provides a summary of the C4ISP effort including the responsible developers, an overview of C4ISP target systems, and the C4ISP development timeframe. The Integrated Dictionary (AV-2) defines those terms necessary for clear communication between the target system development and management organizationsOperational ViewsThe Operational Views (OV) show the operational context of the system under study.  In the context of a C4I Support Plan the sole purpose is to highlight the interactions between the target systems in this case OOS and ABCS 7.0.  The OV products developed include the High Level Operational Concept Description (OV-1), the Activity Matrix (OV-5), the Operational Event Trace (OV-6c), the Operational Node Connectivity Diagram (OV-2), and the Operational Node Information Exchange Matrix (OV-3).  An example and brief description of each product is shown below.High Level Operational Concept Description (OV-1)The Overview and Summary Information product (OV-1) provides the scope and purpose of the C4ISP. It provides a high level description of the interoperability concept for ABCS-equipped units training in facilities instrumented with TADSS products.  The OV-1 also establishes the functional boundaries for the rest of the OV and SV products, identifying the functions to plan, prepare and execute training exercises, the participants, and the types of data exchanged. For both the OneSAF and LTT OIS C4ISP efforts the OV-1 highlights the operational use and exchange of information between the target systems.  Figure 2 provides the draft ABCS 7.0/OOS OV-1.  It portrays the totality of functions performed and data exchanged between OneSAF and ABCS 7.0 to support OOS user requirements.Figure 2 Draft OV-1 OOS-ABCS 7.0 InteroperabilityActivity Matrix (OV-5)The Activity Model (OV-5) portrays a task decomposition of the OV-1 functions and their relationship to each other.  The decomposition is developed from detailed textual descriptions of the functions provided by various military training references and TADSS program documentation. For OOS the OneSAF lifecycle, as presented in the OOS Product Line Architecture Specification (PLAS) Volume 1, provides the process hierarchy for the activity matrix charts.   Figure 3 shows the highest level OOS Lifecycle using the OV-5 representation. The 2nd tier activities include the product line development, deployment, and maintenance phase, the simulation pre-event phase, the simulation event execution phase, and the simulation post-event phases.  Within the C4I Support Plan each phase was subsequently decomposed to delineate the specific phases where interactions occur between the OOS and ABCS 7.0.  SHAPE  \* MERGEFORMAT Figure 3 Draft OV-5 OOS Lifecycle PhasesOV-5s introduce and highlight the lifecycle phases where interactions occur between OOS and the ABCS 7.0. Although not shown leaf nodes that contained interactions were highlighted using a purple fill color.  Details for each exchange are provided within the Operational View Event Charts (OV-6c), the Operational Node Connectivity Charts (OV-2), and the Operational Node Information Exchange Matrix (OV-3). Operation Event Trace (OV-6c)Each task identified in an OV-5 is examined in detail using Event Trace Descriptions (OV-6c) to describe the sequence of activity and identify the specific interactions between TADSS systems, the ABCS systems of the training unit, and other exercise participants that require an ABCS interface.  The event planning phase depicted in Figure 4 identifies the major activities within the OOS planning process and the interactions, highlighted in red, between OOS and ABCS 7.0Figure 4 Draft OV-6c OOS/ABCS 7.0 Pre-Event: Event Planning PhaseThe OneSAF Event Planning, as described within section 6.1.5 of PLAS Volume 1 occurs prior to simulation execution, and depending on the complexity or uniqueness, may occur weeks to months prior to a simulation event.  Typical training use cases will use training objectives as inputs to this phase, while typical analysis use cases will require experiment objectives.  Measures of Effectiveness (MOEs) and Measures of Performance (MOPs) are developed and guide the selection of the military scenario and forces used in the event.  This military scenario is used to drive the simulation event.  It drives the entities, equipment, and units to be represented, the required environment conditions, and geographic locations.  The Wartime Mission, Mission Essential Task List, Operations Order (OPORD), and graphical overlays may be exchanged between the Scenario/Database Developer and the ACR/RDA/TEMO Units with ABCS as they jointly develop the Military Scenario.  A critical portion of the event-planning phase is the determination of modeled interactions required in the event.  These may include C4I interactions that must be simulated or stimulated by the synthetic force.  These requirements are captured as System Composition Requirements, and the specific synthetic force, synthetic environment, and data collection requirements are recorded within the Military Scenario Repository.Operational Node Connectivity Description (OV-2)The OV-6c interactions are consolidated under Operational Node Connectivity Descriptions (OV-2) that display those exercise participants having information exchange requirements (aka “need lines”) with other nodes.  Those need lines requiring an ABCS interface with a TADSS (highlighted in red) are the interfaces of primary interest for development of the C4ISP’s system views.  An OV-2 is developed for each function defined by the OV-1: pre-event, event execution, and post-event.Figure 5 shows the OOS pre-event phase as it contains the processes and tools for preparing for a simulation event in support of a specific training or analytical simulation event.  The OV-2 diagram created for the pre-event phase shows the information exchanges between the OneSAF Scenario/Database Developer and the ACR/RDA/TEMO units using ABCS 7.0. As shown in Figure 5 the Event Planning phase requires an interaction between OneSAF and ABCS 7.0 when military scenario planning information is exchanged between planning tools within OneSAF and ABCS 7.0.Figure 5 Draft OV-2 Draft OOS/ABCS 7.0 Pre-Event: Event Planning PhaseOperational Information Exchange Matrix (OV-3)The final OV product is the Operational Information Exchange Matrix (OV-3), created from the need lines connecting the nodes displayed in the OV-6cs. The information Exchange Requirements (IER)s developed for the C4ISPs possess the same information characterizations used by the ABCS SSE&I Team in the development of the ABCS 7.0 OV-3. Additionally, each IER has a number reference to maintain traceability back to the OV-6c. Finally, IERs between the TADSS systems and ABCS 7.0 are highlighted in red, continuing the convention started in the OV-6c and OV-2 products.  The partial OV-3 shown in Figure 6 describes the information exchange characteristics in a tabular format for each of the information exchanges (red lines) identified within the OV-6c diagrams (Figure 5). Figure 6 Draft OV-3 OOS/ABCS 7.0The columns in Figure 6 represent specific information about each interaction.  The extract shows the interaction between the ACR/RDA/TEMO Units with ABCS and the Scenario/Database Developer lanes in Figure 5.  The complete OV-3 describes all of the arrows in the OV-6c with interactions between OOS and ABCS 7.0 highlighted with red font and the non-interaction based information shown in black font.  The columns are explained below.The IER column provides a reference back to the specific OV-6cThe Operation Needline Designator column shows the name of the needline.The Information Characterization displays the general type of information traversing the needline.The Comment field refers to context of the C4ISP.The Producer Staff Element Node holds the node generating the information.The Producer Operational Process shows general process generating the information.The Consumer Staff Element Node names the receiving node.The Consumer Operational Process shows the general process using the information.System Views The systems view (SV) is a graphical and textual description of systems and interconnections used to satisfy operational needs.[4] The SVs show how specified TADSS components and ABCS systems link and interoperate.  Two SV products were developed for the C4ISPs the System Interface Diagrams (SV-1), and System Interface Exchange Matrix (SV-6). The SV diagrams were also guided by the OOS Lifecycle (pre-event, event execution, post-event) as presented within the OV-5. Also, a common color theme was used throughout the diagrams: The white boxes represent OneSAF System, the light blue boxes represent OneSAF components, the gray boxes represent TOCs (Tactical Operations Center), the green boxes represent ABCS 7.0 systems, the yellow boxes represent user input, the orange boxes represent standard non-ABCS/OneSAF devices, and the brown boxes represent undetermined systems.  The lines between boxes represent system interfaces.  The interfaces between OneSAF and C4I systems are highlighted in red.System Interface Diagrams (SV-1)The Systems Interface Description (SV-1) identifies the TADSS and ABCS 7.0 systems and system components and their interconnections between nodes.   Interactions within nodes are displayed for the ABCS components but not for the TADSS components due to their current stage of architecture development. This disparity in resolution will be corrected as the TADSS designs mature. The SV-1s are developed for each OV-6cs that contains at least one ABCS-TADSS interacion.  Figure 7 shows the Sample OOS Pre-Event SV-1.  It calls out the specific components: the Military Scenario Development Environment and Office Products used by OOS and ABCS 7.0 to exchange the pre-event information. Additionally, it highlights the data exchanges necessary for OneSAF to share Military Scenario Development Environment information with ABCS 7.0 systems.  Figure 7 Draft SV-1 OOS/ABCS 7.0 Pre-Event PhaseThe Systems Information Exchange Requirement Matrix (SV-6)The System Data Exchange Matrix (SV-6) is an extension of the OV-3 as shown in Figure 8. Additional characterizations include Source and Destination Systems, System Interface Connection, Information Type, and Message Description. TADSS-ABCS interoperability information is once again highlighted in red. Some information exchanges have characteristics yet to be determined and they are highlighted in orange.Figure 8 Draft SV-6 OOS Pre-Event: Event Planning PhaseThe information shown Figure 8 corresponds to the red arrows in Figure 7 (SV-1).  In addition, the Information Exchange Requirements (IER) number is carried over from the respective row in the OV-3 to retain traceability back to the OV-6c products.Technical ViewThe Technical View (TV) is the minimal set of rules governing the arrangement, interaction, and interdependence of system parts or elements.[4]  The Technical Architecture Profile (TV-1) describes the technical architecture that enables TADSS to interoperate with ABCS. We found that pertinent technical architecture areas necessary for interoperability fell into four categories:Military messaging: TADSS sends ABCS systems messages from simulated friendly units, and receives messages sent to simulated friendly units. ABCS internal standards: TADSS emulates data distribution between simulated and live command posts and platforms. ABCS Operating Environment: TADSS and ABCS must share a compatible operating environment.  ABCS Security Environment: Since ABCS operates as high as Secret System High, TADSS must have the capability to operate at the same level.C4ISP Issue Identification and Dependency SummaryWhile architecture products were being developed, dependencies between the systems were noted and documented in section 4 of the C4ISP as derived requirements.  Requirements shortfalls and proposed solutions were included in section 5.  These sections formally document, as well as raise visibility of interoperability issues and recommend solutions.  Several similar issues surfaced when comparing CTIA interfaces to ABCS with OneSAF interfaces to ABCS.  This is not surprising, since CTIA will include OneSAF for some of its training scenarios.  We expect this trend to continue across other PEO STRI programs that are required to interface to C2 systems.  By highlighting these similarities we believe the C4ISP process will help bring resolution to these long-standing issues.  The common technical issues/shortfalls observed and documented as a direct result of the C4ISP process can be grouped according to the lifecycle phases pre-event, event, and post-event as shown in the OV-5 within figure 3.  It is interesting to note that these findings span the interface requirements initially identified in Carr and Hieb’s Technical Reference Model under the categories of Exercise Control Interactions, Non Persistent Data, and Persistent Data [2].  Pre-Event Lifecycle Phase:  Within the pre-event lifecycle phase three specific initialization interoperability challenges were identified between TADSS and ABCS systems with respect to military scenario, environmental data, and specific unit and entity data representations.  First and foremost ABCS 7.0 plans for system initialization are still evolving and are beginning to support an initialization environment consisting of both TADSS and C4I devices.Secondly, OOS and ABCS systems have different representations of environmental data and are not formally working toward a coordinated solution.  While it is expected that the environment representations may not correlate perfectly due to the differing needs for representation the two should be as closely related as possible.Finally, specific unit and entity data, such as the Modified Table of Organization and Equipment (MTOE) should be coordinated, correlated and exchanged to support initialization.  At this time this type of coordination does not formally exist.Event Execution Lifecycle PhaseDuring the event lifecycle phase a number of challenges were identified, such as:ABCS 7.0 is not planning to have an integrated automated solution to handle checkpoint/restart or other simulation time synchronization issues such as stop, pause, or resume.  These functions are required in various training and analysis use cases.The ABCS 7.0 Joint Common Data Base (JCDB) is not planning support for segregating and identifying real data from training data.Currently the TADSS and C4I communities are independently investigating new technologies such as XML and SOAP.  These specific interfaces technologies need to be solidified and communicated between the TADSS and C4I communities.  Additionally, the TADSS and C4I communities will need to coordinate and agree on message sets and date versions (including database and standard message sets) to minimize translation requirements.Post-Event Lifecycle PhaseFinally, a single information dissemination challenge was identified during the analysis of the post event phase in terms of how specific AAR products would be distributed to ABCS 7.0 devices for in-the-field review.In concluding the issues section it should be noted that on several issues the recommended solution was more programmatic than technical, i.e., communication between the two communities on interface requirements is recommended before developing new technology solutions (which should be developed cooperatively). It is envisioned that the resolution of programmatic issues will result in the funding of interoperability focused efforts to ensure the C4ISP remains current, that consistent data interpretation mechanisms are employed, and finally that a team-oriented approach is embraced for solving the technical challenges. Potential Uses for C4ISP Products  Beyond providing a solid engineering base to identify, document, and discuss interoperability issues and dependencies, the architecture products provide a sound basis for rigorous interoperability engineering.  It is envisioned that the architecture products described in this paper provide a means to develop interoperable systems through: Systematic definition of common message types and specific message IDs to support stimulation between TADSS and C4I systems.Systematic definition of new or identification of existing Application Programmer Interfaces (APIs) and services to support interoperability requirements.  Consistent and accurate system documentation to serve as reference for educational and management purposes as well as input to future specifications.  Collaborative development of solutions to interoperability problems at the architecture and design levels, rather than at the interface control level.SummaryIn summary, the C4I Support Plans developed as part of this effort intend to provide a management level view of dependencies and issues associated with interoperability between TADSS and C4I systems.  The support plan uses DoD architecture products to highlight, understand, and resolve the dependencies and issues based on a rigorous systematic view of the interaction between the systems.    With that being said the value and investment in rigorous architectural level engineering and documentation does not substitute, but should be provided to and accelerate engineering level collaboration to implement and maintain robust interoperable systems.References[1]	Cane, Sheila; Kelley, Hugh; Kim, Anthony; Lastra, Adrian; Silberman, Ami; Stevens, David. (2002) C4I Support Plan Army Battle Command System, Version 7.0 and Live Training Transformation Product Line Common Training Instrumentation (LTT/CTIA) Architecture Draft Version .3. October 2002.[2]	Carr, Francis H. and Hieb, Michael R. “M&S Interoperability within the DII COE:  Building a Technical Requirements Specification”, Paper 00F-SIW-133, SIW Proceedings, Orlando, FL, Spring 2001. [3]	DoD Directive 5000.2-R, “Mandatory Procedures for Major Defense Acquisition Programs (MDAPS) and Major Automated Information System (MAIS) Acquisition Programs ”, June 2001.[4] 	DODI 8800.XX, DOD Architecture Framework, Vol I, Version 1.0,  1 October 2001[5]	Director for Information Systems Command, Control, Communications and Computers (DISC4). (1998) “Department of the Army Enterprise Architecture Guidance Document Version 1.1”. 23 December 1998.[6]	OneSAF Architecture & Integration Task Order, OneSAF Product Line Architecture Specification, 21 January 2003.[7]	TEMO Capstone Requirements Document, Section 1b, Annex A to, 23 Feb 2000[8]	Tolk, Andreas; Hieb, Michael. (2003) “Building & Integrating M&S Components into C4ISR Systems for Supporting Future Military Operations”, Western Multi-Conference 03.[9]	Wittman, Robert; Harrison, Cynthia; Williams, Karen. (2001)  “The OneSAF Objective System: Block A Development”, 02E-SIW-033, 2002.[10]	Wittman, Rob; Lastra, Adrian; Silberman, Ami; Stevens, David; Kim, Anthony; Cane, Sheila; & Kelley, Hugh. (2002) Army Battle Command System, Version 7.0 and One Semi Automated Force (OneSAF) Simulation C4I Support Plan, Draft Version .3. 16 December 2002.Author BiographiesROBERT L. WITTMAN JR. currently works for the MITRE Corporation supporting the OneSAF program.  He has been part of the U.S. DoD M&S community since 1990. He holds a B.S. in Computer Science from Washington State University, a M.S. in Software Engineering from the University of West Florida, and is working toward a Ph.D. in Industrial Engineering at the University of Central Florida. SHEILA CANE is a Lead Software Systems Engineer for the MITRE Corporation.  She holds a B.S. in Mathematics from Buffalo State College, a M.S. in Industrial Engineering from the State University of New York at Buffalo, and is currently pursuing a Doctorate of Business Administration in Information Technology Management at Nova Southeastern University.  Since 1990, she has worked in the C4I and the Modeling and Simulation communities on Army, Air Force, Joint and International Programs.  For the past 6 years, she has focused her interest on the interaction between M&S and C4I Systems.HUGH KELLEY currently works for the MITRE Corporation as the Project Leader for PEO STRI support and the Orlando Site Leader.  He has over 20 years experience in military operations research and M&S. He holds a B.S in Liberal Arts and Sciences from the U.S. Military Academy and a M.S. from the U.S. Navy Postgraduate School. NOTICEThis technical data was produced for the U.S. Governmentunder Contract No. DAAB07-01-C-N200, and issubject to the Rights in Technical Data—Noncommercial Items Clauseat DFARS 252.227-7013 (NOV 95) © 2003 The MITRE Corporation