Integrating Cardiac and Cardiovascular Simulations Using the HLASean Murphy, Dr. James Coolahan, Robert Lutz, Randy Saunders, Dr. Andrew FeldmanJohns Hopkins University Applied Physics Laboratory11100 Johns Hopkins RoadLaurel, MD  20723-6099240-228-5000 HYPERLINK "mailto:sean.murphy@jhuapl.edu" sean.murphy@jhuapl.edu,  HYPERLINK "mailto:james.coolahan@jhuapl.edu" james.coolahan@jhuapl.edu,  HYPERLINK "mailto:robert.lutz@jhuapl.edu" robert.lutz@jhuapl.edu,  HYPERLINK "mailto:randy.saunders@jhuapl.edu" randy.saunders@jhuapl.edu,  HYPERLINK "mailto:andrew.feldman@jhuapl.edu" andrew.feldman@jhuapl.eduDr. Ramakrishna MukkamalaHarvard University – Massachusetts Institute of Technology,Division of Health Sciences77 Massachusetts AvenueE25-519Cambridge, MA 02139617-253-7430 HYPERLINK "mailto:randy.saunders@jhuapl.edu" rmukkama@mit.eduKeywords:HLA, FEDEP, Cardiovascular System, MATLAB, Biomedicine, NASAABSTRACT: The National Space Biomedical Research Institute (NSBRI) is composed of a consortium of institutions working together to prevent or solve health problems related to long-duration space travel and prolonged exposure to microgravity.  The group's primary mission objective is to ensure safe and productive human exploration and development of space beyond Earth orbit.  In the medical literature, there are many references to physiological system models that can be applied toward the attainment of NSBRI goals.  Such models are generally standalone representations of individual human systems and/or subsystems, and vary widely in terms of resolution (from molecular level to full system representations), implementation approach (i.e., programming language, hardware platform, operating system, etc.), and physical location (where the technical expertise resides).   The NSBRI Integrated Human Function (IHF) research area seeks to develop an understanding of human function from a holistic (i.e., total organism) point of view.  Thus, one of the major challenges within this research area is to devise strategies and methods for linking together appropriate sets of individual physiological models into a framework for understanding the human as a total organism.  This paper reports on the first phase of a three-year effort to link multiple “best-of-breed” human system models together to simulate integrated human function.  The specific focus of this first year was on cardiac and cardiovascular systems.  The High Level Architecture (HLA) was used in this case to interconnect left and right ventricle models with a MATLAB-based cardiovascular model developed at MIT.  This paper follows our progression through the steps of the HLA FEDEP to produce this baseline runtime environment for space flight medical research.  This paper will also report on plans to extend this environment in subsequent years to integrate other human system models via the HLA.1. BackgroundThe National Space Biomedical Research Institute Established in 1997 through a National Aeronautics and Space Administration (NASA) competition, the National Space Biomedical Research Institute (NSBRI) is a consortium of twelve institutions working together to prevent or solve health problems related to long-duration space travel and prolonged exposure to microgravity.  The consortium institutions are:Baylor College of Medicine (consortium lead)Harvard Medical SchoolThe Johns Hopkins University (School of Medicine and Applied Physics Laboratory)Massachusetts Institute of TechnologyMorehouse School of MedicineRice UniversityTexas A&M UniversityBrookhaven National LaboratoryMount Sinai School of MedicineThe University of Arkansas for Medical SciencesThe University of Pennsylvania Health SystemThe University of Washington.The NSBRI’s primary mission objective is to ensure safe and productive human exploration and development of space beyond Earth orbit.  Its research is intended to lead to solutions or countermeasures to the harmful effects of microgravity and space radiation.  At the same time, NSBRI research is intended to lead to discoveries and products of clinical benefit to mankind on earth, enhancing treatments for conditions such as osteoporosis, muscle wasting, shift-related sleep disorders, and radiation-related conditions.  More information may be found on the NSBRI web site www.nsbri.org [1].The NSBRI has research teams focused in a dozen areas, predominantly in individual research associated with specific effects of the long-duration space flight on elements of the human body.  In 2000, the NSBRI established an Integrated Human Function (IHF) research area, which seeks to develop an understanding of the human body’s response to space flight from a holistic (i.e., total organism) point of view.  Thus, one of the major challenges within this research area is to devise strategies and methods for linking together appropriate sets of individual physiological models into a framework for understanding the human as a total organism.1.2 Space Biomedicine IssuesDuring long-duration space flight, the human body is subjected to various environmental insults such as microgravity, confined working conditions, and so on.  NASA has categorized the risks these challenges pose as to their functional area and their criticality, and has produced a Critical Path Roadmap [2] that shows this characterization.  Risk areas include:Bone lossCardiovascular alterationsHuman behavior and performanceImmunology, infection, and hematologyMuscle alterations and atrophyNeurovestibular adaptationRadiation effectsClinical capability.1.3 Physiological Modeling Just as military simulations have a hierarchy of aggregation levels often portrayed as a “pyramid” ranging from engineering to campaign simulations, physiological models have a hierarchy of aggregation.  The five levels of aggregation range from the molecular level to the whole body level, as shown in Figure 1.The NSBRI IHF area was intended to address both the “vertical” integration of models within systems and the  “horizontal” integration of models across systems.  It was recognized that creating a fully functional set of simulations that could address all space biomedical issues would take many years, particularly if all levels of the hierarchy were addressed.  Nevertheless, it was felt that it was important to initiate research in this area.Physiological modeling within individual systems of the body has been the realm of specialists narrowly focused on those research areas.  During the Skylab program in the 1970s, NASA made an attempt at developing a “whole-body algorithm,” discussed in [3], which connected several fairly high-level existing simulations of several subsystems.  Before being terminated, that effort noted the interoperability problems encountered, including the differences in structural detail among the models and the lack of correspondence in attributes that needed to be interchanged.The Project and Its PurposesThe project described herein is one of six that was accepted for inclusion in the initial round of research grants in the IHF area.  The long-term objective of the project is to demonstrate the ability to simulate integrated human function over time by providing a technical framework to permit simulations of different human physiological functions, executing in separate locations, to interact to produce synergistic results. The hypothesis is that interoperable simulations of human physiological functions applicable to the space flight environment executing interactively can produce integrated results that cannot be produced by these simulations executing independently.  To demonstrate the above capability, the three-year project elected to focus initially in a specific area of human physiology – cardiac and cardiovascular function.  Project goals include: linking high-fidelity electrical activation models of the heart with mechanical models of the pumping action (finite element models at the multi-cellular level that can require hours or more to simulate a single heartbeat), linking a medium-fidelity cardiac model to a cardiovascular system model, and, eventually, linking this combined model to skeletal muscle models.This paper describes that part of the first-year effort dealing specifically with the linkage of a medium-fidelity cardiac model to a cardiovascular system model.  To perform this linkage, the High Level Architecture (HLA) was chosen as the mechanism to achieve interoperability.  1.5  Why the HLA Was ChosenThe HLA is well documented in the Simulation Interoperability Standards Organization (SISO) community, and its benefits for linking military simulations have been described in many prior technical papers.  It was felt that similar benefits could be achieved for physiological simulations for the following reasons:Legacy simulations exist for physiological systems, and portions thereof, that might be adapted to work together in an interoperable fashion.Code for modeling individual physiological systems or functions could be reused across multiple simulations.The “pockets of knowledge” that exist in isolated research communities could be brought together for synergistic interaction and for sharing the results of their models.Intellectual property rights to the models themselves could be maintained, where that might be a consideration.An inexpensive performance increase might be achieved by parallel and distributed execution of some components.A process model that exists for the HLA to aid in the development of interoperable simulations could be tailored to uses in the physiological simulation community.HLA FEDEPThe HLA Federation Development and Execution Process (FEDEP) is a structured, generic systems engineering approach to the development of distributed systems.  The specific intent of the HLA FEDEP is to guide federation developers through the series of activities necessary to design and build HLA federations.  At it’s most abstract level, the HLA FEDEP is defined according to a set of six major steps or phases.  An illustration of the six-step HLA FEDEP is provided in Figure 2 [4].  Although the FEDEP was originally developed under the support of the US Department of Defense (DoD), the community of FEDEP users has broadened significantly over the past several years.  One of the primary reasons for the wide acceptance of the FEDEP is the fact that the process model does not negate or override existing business practices.  Rather, the FEDEP provides a common overarching process framework into which lower-level domain-specific management and/or engineering methodologies can be easily integrated.  The ability to tailor the process to the needs of individual domains is especially important within the medical community, as most medical research institutions and related organizations have well-established protocols for developing and using models and simulations in support of their studies.  One of the secondary goals of this project is to examine the general utility of the FEDEP for medical applications.CVVS Federation DevelopmentThe following six sections describe in detail the development of the Cardiovascular – Ventricular System (CVVS) Federation in context of the Federation Development and Execution Process.  Note that the steps of the FEDEP do not need to be performed in a strictly sequential manner.  Iterative spiral development approaches are common in the HLA user community and have been shown to be quite effective.Define Federation Objectives To begin the federation development and execution process, a fundamental set of objectives for the federation is determined.  The cardiovascular-ventricular system federation had objectives both as a demonstration of interoperable simulation capability and as a scientific tool.  First of all, although there have been many applications of the HLA in the military simulation community, there have been very few that were medically related (one being the HLA-based medical simulation described in [5]), and none in the area of biomedical research.  So the first objective was to demonstrate the applicability of interoperable simulation to the biomedical research field by building a working HLA-based biomedical simulation federation.  But this demonstration objective alone was not sufficient to satisfy the space biomedicine scientific intent of the NSBRI.  It was thus important that our federation also provide a suitable foundational framework for addressing questions pertinent to the NASA Critical Path Roadmap.  The prototype CVVS Federation described below was targeted toward the cardiovascular alterations risk area. The model allows for the analysis of the steady-state and dynamical responses of important cardiovascular variables (heart rate, blood pressure, …) following hypothetical perturbations of the system’s parameters, such as a change in the state of the heart’s electrical function. It can be used both to increase our understanding of the behavior of the cardiovascular system in a microgravity environment and, also, to suggest countermeasures, such as pharmaceuticals for those alterations that adversely impact the well-being and physical performance of space travelers.Several ground-based and space-based studies have suggested that both shifts in the spatial distribution of body fluids and the reduced muscle workloads associated with life in space can induce changes in important cardiovascular system parameters [6-8].  The most direct evidence for these changes is a condition known as “post-flight orthostatic intolerance” (PFOT), which is experienced by some astronauts following their return from space.  Following prolonged exposure to microgravity, the body is unable to adequately respond to a sudden drop in blood pressure associated with a gravitational challenge, such as a sudden change in posture from the supine to the standing position. Clinical experience indicates that while this condition appears to be fully reversible, its reversal still requires a prolonged reconditioning period.  This can adversely impact the effectiveness of astronauts on an interplanetary mission.  Several candidate physiologic mechanisms for PFOT in space travelers have been examined in the literature.  These include microgravity-induced reductions in the sensitivities of the short-term arterial baroreflexes (the cardiovascular regulatory system elements responsible for sensing and effecting compensatory responses to sudden drops in blood pressure), and the deconditioning/atrophy of the cardiac muscle itself (which reduces the force of ejection of blood from the heart muscle during a beat).  The NSBRI cardiovascular alterations team has expended considerable effort studying mechanisms of PFOT and has developed some candidate countermeasures that may permit space travelers to return to normal functioning immediately upon their return from a microgravity environment.Current NSBRI-funded PFOT investigations include both computer simulation studies [9] and also clinical bed-rest studies, which are being conducted at the Massachusetts Institute of Technology (MIT) and Brigham & Women’s Hospital in Boston, Massachusetts.  The simulation work is based on the CVSIM model, a cardiovascular simulator developed at MIT.  CVSIM was originally developed as a tool for teaching quantitative cardiovascular physiology and its structure and parameter values have been validated on clinical data. A revised, and more research-oriented version of the CVSIM simulator (RCVSIM) has been developed for use with MATLAB (Mathworks, Inc.) and is it now publicly available at www.physionet.org [10]. The physionet project and web site is funded by the National Institutes of Health, National Center for Research Resources. While the current incarnation of RCVSIM is capable of representing a wide variety of cardiovascular phenomena, it does not represent cardiac electrical-mechanical function in sufficient detail to adequately model the effects of the cardiac rhythm disturbances that might arise under prolonged exposure to microgravity.The potential for space travelers to develop life-threatening cardiac arrhythmias remains a major concern for NASA and the NSBRI. The integration of a suitable model of ventricular electrical-mechanical activity with RCVSIM thus became the initial focus for our Integrated Human Function model. Recent NSBRI-funded bed-rest studies have indicated that alterations in cardiac electrical activity may be associated with prolonged periods of inactivity [11]. Currently, there is little available data in the literature on the prevalence of asymptomatic arrhythmias in space.  In a clinical setting, arrhythmia symptoms typically involve periods of light-headedness, fainting spells, or even sudden death.  Note that while arrhythmias are essentially derangements in the normal sequence of electrical activation of the cardiac muscle, it is the loss of synchronicity of contraction of the muscle cells associated with the electrical derangement that poses the essential danger (due to the compromise of the pumping of the blood). To examine the connection between arrhythmias and reduced blood flow in silico, we used the CVVS Federation to simulate an irregularly beating heart and then analyzed both the hemodynamic and cardiovascular regulatory responses to the arrhythmia.  Develop Federation Conceptual Model The development of the federation conceptual model translates the portion of the real world to be modeled into a suitably abstract and computationally tractable representation.  The CVVS Federation models the human cardiovascular system using models of the cardiovascular system and the main pumps of the heart, the left and right ventricles.The RCVSIM model used to represent the cardiovascular system dynamics is described in detail in the User’s Guide on the physionet web site and in references [12-13].  Briefly, the model includes three major components.  The first is a lumped parameter model of the pulsatile heart and circulation.  The second is a short-term regulatory system model that includes baroreflex responses that adjust cardiovascular system parameters to match blood pressure set points, and also a direct coupling between respiration and heart rate (a coupling that can be easily verified by monitoring the changes in your pulse during expiration and inspiration).  The final system component is a model of normal physiologic perturbations to the cardiovascular system parameters, such as those arising from fluctuations in arterial resistance due to local regulation of resistance in tissue beds and the effects of higher brain center activity on fluctuations in heart rate.  The mathematical representation of the system is realized by the use of electrical circuit analogs of the various mechanical system components, with blood volume analogous to charge, current analogous to blood flow rate, and voltage analogous to pressure. The time evolution of the cardiovascular system variables (arterial blood pressure, left ventricular pressure, instantaneous heart rate,) is obtained via the solution of the set of coupled first-order differential equations for the circuits. The beating of the left and right ventricles is implemented as a time-varying capacitor.  In the RCVSIM model, the time-varying capacitance, which determines the stiffness or elastance (capacitance-1) of the ventricles, assumes a simple functional form representative of a normal heartbeat. It is this functional form that is altered during a cardiac arrhythmia. The short-term regulatory components of RCVSIM implement a feedback control loop involving arterial baroreceptors, whose role is to adjust the peak elastance of the heart muscle during a beat in response to an offset of the arterial blood pressure from a pressure set point.  In the CVVS Federation, we replaced the simple functional form of the elastance used by RCVSIM with values obtained from computations with a more detailed simulator of ventricular electrical-mechanical activity (see below). Our federation also includes a mechanism for incorporating the feedback of the peak elastance value set by the arterial baroreceptor reflex in RCVSIM into the computation of the mechanical activity of the ventricular model.In conventional approaches to modeling cardiac electrical activity, rapid simulation of cardiac electrical excitation is hampered by the fact that the system is represented by a very large set of nonlinear, coupled partial differential equations (PDEs) with very stiff kinetics.  Typically, the solutions of these equations at a single location in the muscle must be obtained using time steps on the order of 1 s.  On the other hand, interesting phenomena, such as a single beat, take on the order of 400 ms to complete.  For a fully three-dimensional representation of the ventricular muscle, these computations must be performed at roughly 50 million grid points.  Mechanical contractile activation of excited cells and the associated deformation of the muscle during the beat may be obtained using finite element (FE) methods.  Large deformation elasticity models of cardiac muscle with “active tension” have been developed by Hunter and colleagues at the University of Auckland in New Zealand [14] and McCulloch and colleagues at UCSD (one of our NSBRI collaborators) [15].  The mechanical models also require supercomputers to obtain solutions on reasonable real time scales.  It is estimated that simulating a single heart beat of data for a human heart using the standard PDE and FE approaches to represent cardiac electrical-mechanical function would take about one week of real time using a low-end supercomputer.  Since the interesting short-term regulatory responses of the cardiovascular system to hemodynamic perturbations (such as those produced by arrhythmias) occur on time scales on the order of tens of seconds, a mesoscale model (one that emphasizes a balance between computational speed and physiologic fidelity) is clearly required in order to realize the desired benefits and synergies of an integrated federation representing cardiac and cardiovascular function.The mesoscale model we used to simulate the electrical-mechanical activity is based on a hybrid cellular automata (HCA) approach for modeling cardiac electrical waves. The HCA approach provides reasonable physiological fidelity while allowing for computations of heartbeats on time scales suitable for interaction with a cardiovascular system model.  The physical basis for the HCA model has been established in numerous publications [16-18].  The HCA model represents the transitions between the resting and electrically active state of the cardiac muscle via a set of state transition rules.  The parameter values for those rules are determined by requiring that the major characteristics of the propagating waves in the HCA model correspond to those obtained from solutions of a PDE model of the tissue [19] or experimental measurements.  The qualitative correspondence between the traveling wave solutions in the HCA and PDE representations of excitable media (such as heart muscle) is quite remarkable [16-19]. Moreover, one author (A. Feldman) has demonstrated this approach to be sufficiently reliable quantitatively so as to permit medium fidelity simulations of arrhythmias in ventricular muscle [16-19].  In our ventricular model, both the left and right ventricles are represented by a 700 x 700 array of HCA elements representing the endocardial ventricular surfaces (propagation is thus two-dimensional).  The grid is arranged topologically into a cylinder with physical dimensions of 10 cm in length and 3.18 cm in diameter (characteristic values for human ventricular muscle).  The model executes with a 1 ms time step.  When a given HCA element transitions from the resting state to the active state, a local mechanical activation signal is induced that mimics the time-evolution of the intracellular Ca++ concentration responsible for the contraction of the muscle fibers.  In the model, each HCA element is assigned a local length-tension relationship representing the mechanical behavior of the cells.  This relation is parameterized so that it varies with the state of local mechanical activation, just as in real cardiac muscle.  The stiffness (instantaneous elastance) of the cylindrical ventricle is computed by first assuming a linear relationship between the ventricular capacitance and the pressure gradient across the vessel wall.  We then use Laplace’s Law (which relates the wall tension in a cylindrical vessel to the transmural pressure and the vessel radius) to compute the tensions in each of a set of concentric rings of tissue elements based on the states of mechanical activation of their constituent HCA elements.  This computational scheme is described in detail in E. Clancy, et al [20].  The values returned to RCVSIM at each time step are the instantaneous values of the right and left ventricular elastance (capacitance-1) and their time derivatives.  Feedback from the arterial baroreceptors in RCVSIM is implemented in the CVVS federation via modification of the parameters of the length-tension relationships for the HCA elements.  The values are updated on a beat-to-beat basis, not every time step.  We note that the version of RCVSIM that executes within our HLA federation has been specially configured to execute in 1 ms time step increments.  Thus, our model and RCVSIM are tightly coupled and involve data traffic between federates each and every time step.Design FederationThe third step of the FEDEP requires the selection of all of the federates that will compose the federation and the assignment of needed functionalities to each of these federates.  As shown in figure 3, the CVVS Federation is composed of three principal federates, the cardiovascular system (cvsystem) federate and the left and right ventricle federates, that simulate the functioning of a patient’s cardiovascular system, plus a federate simulating the monitoring of the patient’s cardiac electrical activity.  The cvsystem federate served as the master federate of the CVVS Federation, encompassing the RCVSIM software developed in MATLAB at MIT and the federate wrapper software that provided an HLA interface for the model.  The left ventricle model and its corresponding HLA interface software composed the left ventricle federate.  Similarly, the right ventricle model and its HLA interface software constituted the right ventricle federate.At the beginning of a single iteration of the CVVS Federation (representing 1 ms of simulation time), the cvsystem federate initiates its own internal set of computations while the left and right ventricle federates remain idle.  Once the intraventricular pressures for both the right and left ventricles have been computed, the cvsystem federate updates these attribute values and pauses.  The left and right ventricle federates receive this attribute update and, in parallel, compute the electrical-mechanical activity of each ventricle over a 1 ms time span. We note that generally the electrical and mechanical activity of the right and left ventricles are highly coupled, but for our present purposes it was sufficient to uncouple their activity.  When this computation is completed, updated compliance values and the time derivative of the compliance values are sent back over the RTI.  Once the cvsystem federate receives these new values, it completes its own internal set of calculations, which completes a single time step of the federation.    The ECG federate served a non-essential role in the CVVS Federation, computing the electrocardiogram of the simulated left and right ventricles.  The ECG represents one of the primary means for a doctor to monitor the heart unobtrusively and provides a method to quickly compare simulated results with actual physiologic data.  The ECG signal measures the electrical potential produced on the body surface by the electric dipole sources within the cardiac muscle. With every iteration of the CVVS Federation, the ventricle federates were capable of generating arrays of vectors representing the electric dipole sources at each of the 490,000 points composing the ventricular surfaces.  Each ventricle federate could also compute a radius for each of the 700 concentric rings constituting a ventricle (using the pressure values from the cvsystem federate) and could output this data as well.  The ECG federate used both the electrical sources and ring radii arrays to compute the simulated ECG at every time step.   To complete the design, the optimal selection of computer hardware and software to run the CVVS Federation was chosen.  Both ventricle federates demanded the most computational resources and were run on separate Dell 530 Precision workstations.  These systems contained dual 1.7 GHz Pentium 4 processors with 2 GB of 400 MHz RDRAM.  The system that ran the left ventricle federate used the symmetric multiprocessor aware version of Red Hat Linux 7.1.  The workstation that ran the right ventricle federate also used an operating system that supports symmetric multiprocessing, Windows 2000 with service pack 1 installed.  Originally, RTI 1.3NG v4 was used as the software backbone of the federation.  The RTI executive, the cvsystem federate, and the ECG federate (when used) all ran on the same Pentium III computer with 1.5 gigabytes of SDRAM running Red Hat Linux 7.1.  All computers were connected to a 100 Mb/s Ethernet local area network.Develop FederationIn this step, the Federation Object Model is developed, impediments to federate-to-federate interoperability are identified and resolved, and all required modifications and enhancements to the federates are implemented.  In the biomedical engineering field, where the application of HLA to distributed simulation is a novel methodology, the needed simulations lacked any type of HLA interface and, furthermore, were not coded with interoperability in mind.  Furthermore, RCVSIM, the core of the master cvsystem federate, had been developed in MATLAB, a situation that appears to be unique in the HLA community.  Thus, the major impediment to federate-federate interoperability was creating suitable interfaces for each of the legacy simulations enumerated in the previous step to allow them to interoperate in a federation.  The primary role of these wrappers was to facilitate proper data exchange between the federation and the legacy simulations.  Once this was accomplished, the modifications to the federation focused on enhancing federation performance to decrease the amount of time required to execute the federation.Legacy Simulation IntegrationTo incorporate the ventricle and cardiovascular system simulations into an HLA federation, software wrappers were developed to interface the legacy models to the RTI software.  The wrappers for all federates shared a similar C++ code base that consisted of three parts.  The first portion of the wrapper consisted of a main program control sequence that (1) initialized the federate and joined the federation, (2) ran the simulation loop to completion, (3) and then left the federation and shut down the federate.  During the initialization of the federate, the legacy model or the legacy model interface was instantiated as was the RTI and federate ambassador objects, the second and third major parts of the federate wrapper.  The RTI ambassador object contained a group of methods providing the needed callbacks for the RTI as described by the RTI 1.3-NG Programmer’s Guide.  The federate ambassador object served a more complex role providing methods for the federate interface to communicate with the RTI and also data structures to store both data being passed between the RTI and the legacy simulations and local flags to control federate behavior.The federate wrapper for the left ventricle model was created first due to the relative ease of its development and the fact that the ventricle model was available first.  Because of the modular design of the legacy ventricle simulator code, it was possible to incorporate the required portions of the original C code into the federate wrapper allowing the federate wrapper and ventricle simulator to be compiled together into a single executable, the ventricle federate.  At the beginning of its execution, the ventricle federate wrapper would not only join the federation and publish and subscribe relevant attributes and interactions, but it would also initialize the ventricle simulator.  During each iteration of the federation execution, the ventricle federate wrapper would call the C function of the ventricle model responsible for calculating the electrical and mechanical behavior over the next time step (one ms of time) of the simulation.  A pointer to the data internal to the legacy ventricle model relevant to the federation would then be passed out to the wrapper which would read out the data and store it into the appropriate data structures.  Because all of the C-functions and variables simulating the electrical-mechanical behavior of the ventricle were declared as static, the state of the ventricle model would not be lost with each iteration of the federation execution.  Virtually identical federate interfaces were used to convert the left and right ventricle simulators into the left and right ventricle federates.Unlike either of the two ventricle federates, it was impossible to integrate the RCVSIM code with the HLA interface wrapper to form a single executable due to the origins and nature of the cardiovascular system simulator.  As mentioned previously, RCVSIM was developed as a group of MATLAB scripts and functions executed within the MATLAB environment.  Version 1.2 of the MATLAB compiler, mcc, was used to both convert the MATLAB scripts and functions into C source code and also to compile and link this code with the needed MATLAB libraries to build an executable.  This RCVSIM executable ran outside the MATLAB environment at the Linux command prompt and offered greatly increased performance.  However, due to the complexity of the RCVSIM code, it was impossible to efficiently wrap the HLA software interface around the original MATLAB scripts.  Furthermore, it was found that mcc was not able to properly compile the HLA interface code and correctly link the needed RTI libraries.  Because of these two issues, it was decided that the cvsystem federate would be composed of two separate executables (RCVSIM and the HLA interface) running simultaneously that would communicate via a shared memory interface.  Thus, incorporating the RCVSIM cardiovascular system model developed at Harvard – MIT into the CVVS Federation became a two-step process as elaborated on below. The first phase of creating a suitable HLA interface for RCVSIM was to develop a method to allow the RCVSIM software and the ventricle simulators to meaningfully exchange data.  To accomplish this task, the appropriate data needed to be extracted from the stand-alone RCVSIM executable.  Inside the main simulation loop of RCVSIM, a new function call was placed where RCVSIM needed to output the data required by the ventricles every iteration.  This new function was realized in C and formed the basis for connecting RCVSIM to the outside world.  This C-interface function took as inputs all data needed by each ventricle and performed several critical tasks.  First, an internal MATLAB function, mxGetScalar, was used to convert the variables from a MATLAB defined data type to simple floats.  Next, the C-interface function would call the main function of the legacy ventricle models to simulate ventricle activity for a single iteration.  Finally, the C-interface function would call another MATLAB supplied function, mlfDoubleMatrix, and convert the values returned by each ventricle into the appropriate MATLAB-usable data type.  These values, the compliance and time rate of change of the compliance for each ventricle, would then be passed back to the original MATLAB script.  With the needed variables updated, RCVSIM would continue performing computations to finish the iteration of the cardiovascular system simulation.This C-interface function effectively coupled the original RCVSIM model to both the left and right ventricle models creating an integrated cardiovascular ventricular simulator without HLA.  Using the MATLAB compiler in conjunction with gcc, both models could be compiled and linked together to form a single, large executable that could be run, albeit slowly, on a single machine.  Not only did this first stage provide the foundation for completing the HLA interface, but it also helped to demonstrate that meaningful interoperation between these three legacy models (the two ventricle simulators and RCVSIM) was possible. The second and final step to creating an HLA wrapper for RCVSIM was to modify the C-interface function to allow it to interact properly with the federation.  After several attempts, it appeared that the older MATLAB compiler was incompatible with the RTI NG libraries that needed to be linked to the federate.  Additionally, a functional HLA interface/wrapper had already been developed and we did not want to drastically alter the original RCVSIM source code to integrate it into the federation.  Therefore, the C-interface function was changed so that instead of calling the left and right ventricle models directly, it would instead write the data needed by the ventricle federates to a shared memory location and set a flag.  An HLA interface wrapper, running as a separate executable, had already initialized this shared memory location.  As soon as the flag was set by RCVSIM and the C-interface function, the HLA interface wrapper would shuttle the data to the RTI to be delivered to the left and right ventricle federates and wait.  Once the appropriate attribute values had been updated by the ventricle federates via the RTI, the HLA interface wrapper would write this data to another shared memory location and set an input flag.  The C-interface function would read the needed data as soon as the input flag was set, convert it back into a MATLAB object, and then return the appropriate variable values to the main simulation loop of RCVSIM.  In this way, an effective and fast HLA interface was built for this MATLAB-based simulation.Federation InitializationThe cardiac pathologies of interest to be examined with the CVVS Federation occur on the time scale of tens of seconds.  To accomplish meaningful scientific investigations, the federation must be able simulate these time periods in a short enough period of real time to allow some degree of interactivity between adjacent simulation runs.  If the federation required several months to simulate three minutes of real time, the usefulness of the federation would be minimal.  The original RCVSIM ran faster than real time, simulating minutes of cardiovascular activity in seconds.  Since a system of differential equations governed the behavior of the cardiovascular system model, RCVSIM experienced a start-up transient that would be replaced by steady state behavior after tens of seconds of simulation.  Thus, data collected from RCVSIM executions were typically analyzed after 60 seconds of simulated time when the model achieved steady state.  However, once the left and right ventricle simulators were integrated with RCVSIM, this initialization time became much more significant due to the greater computational demands of the ventricle models.  Simulating one second of electromechanical activity of a single ventricle required 6-15 minutes of wall clock time.  A minute of simulation could require 10 hours to run.  If each run of the federation modeled two minutes of real time, half of every federation execution would be spent initializing the federation to the same state and point in time.To remove this inefficiency from the federation executions, a fast initialization scheme was developed to allow the federation to quickly achieve steady state.  During a run of the CVVS Federation simulating 60 seconds of wall clock time, all data that was generated by the ventricle federates and sent to the cvsystem federate was saved to binary initialization files.  Additionally, at the final time step, the left and right ventricle federates saved all of their internal state variables to files.  When an initialization flag is set in all of the federates, the right and left ventricles load their saved state variables from files and then wait.  This initializes both ventricle federates to the state they occupied at the 60-second time mark.  While the left and right ventricle federates wait, the cvsystem federate reads the pre-computed ventricle data directly from the stored initialization files.  This allows the cvsystem federate to bypass the time intensive left and right ventricle calculations and the RTI for the first 60 seconds of the simulation.  When the first 60 seconds of time have been simulated, the cvsystem federate stops reading the initialization files and begins interacting with the ventricle federates through the RTI.  Thus, the first minute of the simulation can occur almost instantaneously, cutting the average federation execution time in half.  Integrate and Test FederationIn step 5, all required linkages and interconnectivity between the federates are established and testing is performed to ensure that all interoperability requirements are met.  During the integration phase of the CVVS Federation, the “build a little, test a little” methodology was used to assemble the final federation.  Each federate was individually inserted into a federation mock up to verify that the federate was correctly exchanging data with the federation.  Next, on a single machine, the cvsystem federate was combined with the left ventricle federate in a two-federate, mini-federation to verify their proper interaction.  This process was repeated to verify the interaction between the right ventricle federate and the cvsystem federate.  The ECG federate was also tested in a federation with the cvsystem and left ventricle federates running on a single machine.  However, the ECG federate was not used during most federation executions due to both time constraints and performance issues discussed later.  Finally, each federate was relocated to the appropriate machine, recompiled, and then executed to test a three federate federation run over the local area network within the Applied Physics Laboratory.An initial distributed test run of the federation with the cvsystem and the left and right ventricle federates located on separate machines demonstrated that the federation execution was slightly slower than the three legacy models compiled together as a single executable.  The execution time saved by having the computationally demanding left and right ventricle federates operating in parallel on separate machines was being lost by either network or RTI latencies or both.  As a result, every effort was made to increase the federation performance by removing all unnecessary calls to the RTI, thus decreasing network traffic.  All reliance on HLA time management services was removed so that all of the federates were neither time-constrained nor regulating.  Instead, the federate timing was implicitly controlled by flags set by attribute value updates from other federates.  The arrival of the appropriate data needed by the federate would cause a loop that paused the federate’s execution to be exited so that computations could continue.  Additionally, the single interaction being sent by the cvsystem federate to the ventricle federates to initiate their computations each iteration was removed and tied implicitly to the arrival of the appropriate attribute value updates.  These changes resulted in only a very minor performance increase.  Finally, previously unused optimizations were enabled, allowing the Visual C compiler to build a faster right ventricle federate executable.  This last step resulted in a significant performance gain.  However, with the first two of these aforementioned alterations, it became possible to implement the CVVS Federation using the MÄK RTI version 1.3.5-ngc instead of the RTI NG.  The MÄK RTI, available freely for download from MÄK technologies, sacrifices complete implementation of all specified HLA services for raw speed, targeting the real time simulation community.  Although the CVVS Federation is far from being a real time application, increased simulation performance of the combined cardiovascular ventricular model was one of the first, immediate benefits we hoped to realize by distributing the simulations using the HLA.  To explore the performance of the CVVS Federation executions and to determine the best methods for optimizing the federation, a series of benchmarks were run under a variety of different setups.  The results are shown in tables 1 and 2.  All of the benchmarks show the time required to simulate 500 ms of cardiovascular ventricular activity.  Each benchmark was repeated at least twice with only a few seconds discrepancy between each trial.  When a federation execution was benchmarked, only the three primary federates, the cvsystem, left, and right ventricle federates were used.  Thus, the ECG federate was not used. Table 1 Benchmark DiscussionTable 1 shows the federation execution times found when different RTI’s were used to implement the CVVS Federation.  As a reference point, a 500 ms simulation was run using the legacy left and right ventricle simulators compiled with RCVSIM into a single executable.  The first bar (a) on the left in Table 1 shows that 6.17 minutes were required by the integrated legacy simulation to run on the same Linux-based dual Pentium 4 workstation that was used for the left ventricle federate.  Although the integrated legacy simulation was run on a dual processor machine, it was executed as a single thread and therefore could only utilize a single processor.  Bar (b) shows that 4.67 minutes were required by the CVVS Federation to complete the 500 ms execution when using the RTI NG.  Finally, bar (c) illustrates that the CVVS Federation, using the MÄK RTI 1.3.5-ngc, completed the execution in 3.9 minutes, finishing fastest.  Note, the federates used in (b) and (c) shared identical source code but had been recompiled to work with the appropriate RTI.The first observation to note from Table 1 is that both federation implementations (b) and (c) ran significantly faster (25% and 37% respectively) than the integrated legacy simulation running on a single workstation (a).  Thus, by distributing the simulation to multiple inexpensive computers using HLA, a significant performance improvement was realized.  Additionally, the MÄK RTI was chosen to replace the RTI NG in the CVVS Federation solely due to performance reasons.  It was of no consequence that the MÄK RTI did not implement the complete HLA specification because the CVVS Federation utilized only a subset of the available RTI services.  The largest computational bottleneck in the integrated cardiovascular ventricular simulation is the time intensive left and right ventricle simulations.  If we assume that the ventricles’ calculations performed every iteration required the vast majority of time, the greatest speed increase that could be achieved by running the ventricles in parallel as federates would be to halve the execution time to approximately 3 minutes.   Therefore, the distributed HLA federation was still a minute and a half to a little under a minute shy of achieving ideal performance, depending on which RTI was used.  This performance was most likely lost to factors that fall into one of two categories, network latencies or RTI overhead.  Network latencies result from the non-zero amount of time that it took data to traverse the network traveling between the RTI and the federates.  The RTI overhead quantifies the amount of time required by the RTI to complete all tasks needed to facilitate federate interoperation that do not occur in parallel with federate processing. To approximately quantify the network latencies and the RTI overhead in the case of the CVVS Federation, two federation executions were conducted without the right ventricle federate simulating 500 ms of time.  Both executions used the RTI NG.  The first FEDEX was run in a normal distributed fashion as described previously.  For the second execution, the left ventricle and cvsystem federates and the rtiexec were all run on the same dual Pentium 4 workstation running Red Hat Linux 7.1.  This non-distributed CVVS Federation ran exactly 60 seconds faster than the distributed version.  Thus, out of the 4.67 minutes execution (b) in Table 1, an entire minute or about 20% of the total federation execution time was lost to network latencies.  If we assume that the ideal federation execution would have required a little over three minutes, the RTI overhead for (b) was roughly 30 seconds or 10% of the total federation execution time.  If we assume that the network latencies are identical for different RTI implementations, these approximate calculations also show that the MÄK RTI suffered from almost no RTI overhead in our application.  Therefore, when using this RTI, we would have to reduce network latency to achieve faster federation executions.Although the amount of network latency and RTI overhead will vary for different simulations, it is safe to conclude that this distributed computing performance penalty will still be present.  Furthermore, this performance penalty is especially exacerbated by the highly coupled nature of the cvsystem and ventricular simulations, which is not an uncommon simulation trait in the biomedical arena.  The integrated legacy simulation executed 500 simulation steps in only 370 seconds, meaning that each iteration required approximately 0.74 seconds to complete (this estimate is an upper bound because the simulation initialization time was included in the 370 second measurement).  Since data flows through the network and RTI twice for each iteration, this performance penalty is incurred approximately once every third of a second.  As the time needed for actual simulation computation decreases, the time required by the RTI overhead and network latency becomes more substantial.  More generally, as the ratio of the time required to compute each simulation time step to the network and RTI latencies decrease, the performance enhancement offered by distributed computing decreases.  Compounding this situation is the vast number of time steps that must be complete during any CVVS Federation execution.  Since it appears that a large performance gap will continue to persist between microprocessors and network technologies, this issue will not be resolved in the near future.Table 2 Benchmark DiscussionThe heterogeneous computing environment used by the CVVS Federation made it possible to complete the two series of benchmarks shown in Table 2.  First, by comparing any pair of blue and red bars, it was possible to determine whether the Linux or Windows operating system (OS) offered higher performance for the CVVS Federation.  The left and right ventricle federates shared virtually identical source code.  However, the left ventricle federate was compiled using the egcs compiler and ran under Red Hat Linux 7.1 while the right ventricle federate ran on a Windows 2000 machine and was compiled using the Microsoft Visual C compiler (the pertinent hardware specifications of the two machines were identical).   In one case, the federation was run so that the right ventricle federate, in addition to its normal operation, produced a large ECG data array while the left ventricle federate did not.  The blue bars in Table 2 show this data.  The red bars show the federation execution times when the left ventricle federate and not the right ventricle federate produced the large ECG data arrays.  In each of the configurations described above, the size of the ECG array was varied from 0 x 0 elements up to 700 x 700 elements (approximately four megabytes of data), moving from left to right across Table 2.  Each element in the ECG arrays was a vector of two floats that represented the electric dipole source at a single node in the ventricle.  Since the ECG federate was not present, no federates consumed these large ECG data arrays to compute an electrocardiogram.  Thus, these large packets of data only traversed the network once per federation time step.  The first conclusion to be drawn from Table 2 is that both operating systems and the code that their respective compilers generate handle small amounts of network traffic equally well.  In fact, it is interesting to see that the transmission of a 100 x 100 x 2 x 4 byte (~80k) array did not impose a performance penalty on either federation execution.  However, once the size of the data being transmitted increased, the Linux OS offered up to 10% better performance.  Therefore, hardware compatibility permitting, Red Hat Linux was the OS of choice for optimizing CVVS Federation performance.Secondly, by noting the increasing execution times when moving from left to right in Table 2, it becomes apparent that, above a certain threshold, as the volume of data trafficking the RTI and the network increases, federation performance decreases.  Thus, one of the most significant optimizations to be made to improve federation performance was to decrease the amount of data handled by the RTI and the network.  In the CVVS Federation, the ECG federate required a significant amount of data at each time step and thus severely decreased the overall federation performance.  Because of this fact, the ECG federate was not incorporated into most federation executions.  To avoid this problem, both temporal and spatial ECG data subsampling approaches were proposed.  Since clinical ECG’s do not typically offer single millisecond resolution, it would be possible to transmit the needed ECG data every n time steps.  This would result in n-1 fast federation iterations for every slow federation step where ECG data is transmitted, resulting in a speed up proportional to n.  Since the ECG in essence averages the data it receives, it would be possible to spatially subsample the ECG data array.  Thus, a 700/n x 700/n x 2 array of floats could be transmitted for some integer n that divides evenly into 700.  Ultimately, combining both of these approaches would result in the least data transmitted and thus could allow more significant use of the ECG federate.  However, neither method has been implemented yet due to time constraints.3.6 Execute Federation and Prepare ResultsIn the final step of the Federation Development and Execution Process, the federation is executed, data is collected and analyzed, and the results are documented.  Some results of our initial simulation studies using the CVVS Federation are shown in Figures 4, 5 and 6.  Figure 4(a) shows the simulated ECG during normal rhythm and during a rapid ventricular arrhythmia that initiates spontaneously at 60 seconds.  For normal beats, the ventricles are paced (electrically excited) simultaneously over a large section of the cylindrical ventricle.  This results in nearly synchronous electrical activation of the HCA elements (all elements are excited within a 40 ms time window from the onset of pacing) and consequently the contraction of the muscle elements is nearly synchronous over the entire left and right ventricular muscle. This produces “normal” (for this model) contractile force and normal blood flow out of the ventricle during the ejection phase of the cardiac cycle. The arterial pressure tracing Pa obtained from RCVSIM is seen in red in Figure 4(b).  The systolic/diastolic blood pressure is roughly 120/80 mmHg, which is typical for a healthy adult.  On the other hand, following onset of the arrhythmic electrical activity, Pa drops precipitously.  The arrhythmic beats are initiated by electrically activating a small circular region of HCA elements near the ventricular apex at a rate of approximately 180 beats/minute, which is a dangerously high rate of activity. Moreover, since the waves of activity spread slowly over the ventricle, the contraction of the muscle fibers is highly asynchronous, which results in a dramatic reduction in the maximum pressure generated during the arrhythmic beat.  This is clearly seen in the blue tracing in Figure 4(b), which shows the left ventricular pressure tracing Pl recorded by RCVSIM.  During the arrhythmia, the maximum value of Pl is roughly 40 mmHg compared to approximately 125 mmHg during normal rhythm.  Since no blood can be pumped into the arteries through the aortic valve (represented as an ideal diode in the RCVSIM model) until Pl exceeds Pa, the arterial pressure decays for about 2 seconds until pulsatile activity continues at a dramatically reduced mean arterial blood pressure. Unless the arrhythmia is terminated or the cardiovascular regulatory compensatory mechanisms can restore adequate blood pressure, the individual with this arrhythmia will perish without immediate medical intervention (cardioversion using a defibrillator) or self-termination of the arrhythmia.Figure 5 shows an expanded view of the Pa waveform (Panel a) along with the tracings of two other important cardiovascular system variables: instantaneous heart rate (Panel b) and venous dead volume (Panel c).  The arrhythmia was spontaneously terminated by design after 100 arrhythmic beats.  Following the sudden drop in blood pressure, the arterial baroreflex sensing mechanisms in RCVSIM attempt to restore Pa to its set point value by increasing the heart rate and also by decreasing the venous dead volume. Since the heart muscle is beating spontaneously at a much higher rate than requested by the cardiovascular regulatory system (autonomic nervous system feedback), the request for an increased rate of normal coordinated beats is ignored by our ventricular model; consequently, it has no effect on the arterial blood pressure. (We note that during ventricular arrhythmias, normal beats initiated by the sinus node of the heart are frequently blocked [ineffective] due to the high probability that the tissue is refractory to excitation when they arrive at the His-Purkinje junctions).   On the other hand, the decrease in venous dead volume (the “floppiness” of the veins) does indeed result in an increase in the filling pressures to the right heart, which succeeds in slightly elevating the mean arterial blood pressure over time. This can be seen by the slight upward trend in the mean Pa in the 60-88 second range in Figure 5(a).  In response to the arrhythmia, the arterial baroreflex response also decreases the end-systolic compliance of the ventricles, Ced (peak elastance or stiffness), in an attempt to produce stronger contractile forces in the ventricular muscle.  The time course of Ced and the time course of the elastance generated by the left ventricle are both shown in Figure 6.  The dramatic drop in the peak elastance following the onset of the arrhythmia is clearly evident Figure 6(b).  It is also evident that the feedback of Ced values from the cvsystem federate to the ventricle federates is realized in our electrical-mechanical model. The peak elastance of the normal beats following termination of the arrhythmia is considerably higher than that in the period prior to the onset of the arrhythmia.  The arterial baroreflex response to the abrupt increase in Pa following cessation of the arrhythmia is also seen by the rapid decay of the peak elastance back to nominal values.  Figure 6(c) shows a close-up of the left ventricular elastance during the cardiac arrhythmia.  Despite the fact that the beats are weak due to the asynchrony of contraction over the muscle, the increased stiffness of the fibers (due to the modified length-tension relationships) results in stronger, albeit ineffective, beats.  Finally, we note that the actual drop in blood pressure seen during the simulation of the arrhythmia may exceed that expected clinically due to the fact that the heart-lung unit used in the RCVSIM model does not include components representing the atrial heart chambers. The atria act as pre-pumps that aid in ventricular filling and slightly increase the pumping of the heart, even during ventricular arrhythmias. We also note that hypoxia and ischemia may result during such an arrhythmia, which will trigger responses not accounted for in the model.  The simulation output shown in Figures 4 – 6 is meant to serve only as an illustration of how the models interact synergistically to produce results that reasonably reflect underlying cardiovascular physiology.  The validation of our CVVS Federation with clinical data is the subject of future studies.FEDEP Lessons Learned The FEDEP proved to be a highly effective process framework for the development of the CVVS federation, generally verifying its relevance to the medical domain.  However, based on our experience, there are a number of technical issues and tasks that are especially relevant to medical applications that are not explicitly treated in the FEDEP.  The following is offered as “lessons learned” for the use of the FEDEP in the medical community:  Because medical researchers tend to prefer to use familiar internally-developed modeling and simulation tools rather than reusing similar tools developed by external organizations, the specific federates that will participate in the federation will, in many cases, be identified upfront in Step 1.  Although this is certainly not unique to medical applications, the selection of federates is currently identified in the FEDEP as a Step 3 activity.If the federates are identified in Step 1, it is likely that the development of the conceptual model will be constrained by the capabilities of these federates.  This is different from the guidance provided in the FEDEP, which states that the conceptual model should be implementation independent.Because of the enormous computational requirements generally associated with human systems modeling, the issue of fidelity in the “Develop Federation Requirements” activity of Step 2 is especially important for medical applications.  If lower fidelity can be tolerated in the study, the use of mesoscale models may be a much more cost effective solution than the use of supercomputers or very large, complex computer networks.  In general, the medical community is not a frequent user of distributed simulation.  Instead, medical organizations tend to build standalone tools and applications based (in many cases) on non-standard modeling languages and commercial mathematical modeling tools (e.g., MATLAB, MATHEMATICA).  This introduces special challenges for how wrappers are designed and constructed for achieving HLA compliance.  It also introduces some socialization issues as to whether individual medical research centers/schools will be willing to change their business practices as necessary to cooperate on large multi-organizational distributed simulation efforts, and generally to accept deviations from established internal study methodologies.Medical organizations frequently use high-value computer assets to conduct their research.  Because these assets are high-value, they tend to use firewalls and other security measures to protect against unauthorized access.  The FEDEP currently says very little about the potential need to establish WAN connections through firewalls, but this is a critical obstacle to overcome if simulation assets are to be maintained at their respective centers of excellence. Next StepsIn the second year of the project, one objective will be to physically distribute the existing federation across multiple organizations.  This will involve developing practical networking solutions that can be put in place by research organizations that will satisfy network security concerns but will still allow federate interaction across a federation.  Next, it is intended to expand the federation to include skeletal muscle simulations.  The loci for integration of muscle models with the existing RCVSIM-Ventricular federation are the local vascular beds penetrating the muscle.  Here the single lumped arterial and venous resistances in the circulatory system model will be broken out into a parallel network of resistances similar to that in Reference [9].  In this case, the total arterial resistance realized in the models will reflect the influences of central nervous control and local chemosensors that adjust local blood flow to meet local metabolic demand.  It is envisioned that the completed model will be suitable for simulating and understanding cardiovascular responses to different exercise regimens under normal and abnormal conditions. This is important for NASA and the NSBRI, as reconditioning astronauts to normal gravity prior to their return from space is believed to be a potentially effective countermeasure to the effects of long duration exposure to microgravity.Summary This paper has described the novel application of the High Level Architecture and the FEDEP to the general field of biomedical research and, more specifically, the computational and quantitative cardiovascular and cardiac research arenas.  We have demonstrated that simulations developed and maintained in MATLAB can be successfully and effectively integrated into an HLA federation with only very minor modifications to the source code.  We have conducted federation benchmarks comparing RTI implementations, operating systems, and data traffic volumes, which allowed specific adjustments to be made to the CVVS Federation that significantly decreased federation execution times.  Most importantly, we have developed a federation of mesoscale models that allows the hemodynamic consequences of a severe arrhythmia to be simulated with both modest computational resources and time.  Overall, with the possible performance benefits shown in this paper as well as other advantages previously mentioned, HLA is poised to be a strong contender to meet the simulation needs of the biomedical community.References[1]	National Space Biomedical Research Institute web site,  HYPERLINK "http://www.nsbri.org" http://www.nsbri.org.[2]	NASA Critical Path Roadmap,  HYPERLINK "http://criticalpath.jsc.nasa.gov" http://criticalpath.jsc.nasa.gov.[3]	S. R. Srinivasan, J. I. Leonard, and R. J. White, “Mathematical Modeling of Physiological States,” Space Biology and Medicine, Volume III, Humans in Spaceflight, Book 2: Effects of Other Spaceflight Factors, pp. 559-594, American Institute of Aeronautics and Astronautics, Reston, VA, 1996.[4]	Defense Modeling and Simulation Office, “HLA Federation Development and Execution Process (FEDEP) Model, Version 1.5,” December 1999.[5]	M. D. Petty and P. S. Windyga, “A High Level Architecture-based Medical Simulation System,” Simulation 73: 5, 281-287, The Society for Computer Simulation International, November 1999.[6]	R. D. Hagan, “Plasma Volume Changes with Movement to Supine and Standing,” J. Appl. Physiol., 45(3), 414-418, 1978. [7]	C. S. Leach Huntoon, A. I. Grigoriev, Y. V. Natochin, “Fluid and Electrolyte Regulation in Spaceflight,” Science and Technology Series, 94, Univelt, 1998.[8]	J. M. Fritsch-Yelle, et al., “Spaceflight Alters Autonomic Regulation of Arterial Pressure in Humans,” J. Appl. Physiol. 77(4), 1776-1783, 1994.[9]	T. Heldt, E. B. Shim, R. D. Kamm, R. G. Mark, “Computational Models of Cardiovascular Function for Analysis of Post-Flight Orthostatic Intolerance,” Computers in Cardiology., 26, 213-216, 1999.[10]	Goldberger AL, Amaral LAN, Glass L, Hausdorff JM, Ivanov PCh, Mark RG, Mietus JE, Moody GB, Peng CK, Stanley HE. PhysioBank, PhysioToolkit, and Physionet: Components of a New Research Resource for Complex Physiologic Signals. Circulation 101(23):e215-e220 [Circulation Electronic Pages;  HYPERLINK "http://circ.ahajournals.org/cgi/content/full/101/23/e215" \t "other" http://circ.ahajournals.org/cgi/content/full/101/23/e215]; 2000 (June 13).[11]	R. J. Cohen, private communication. [12]	R. Mukkamala, “A Forward-Based Analysis of Cardiovascular System Identification Methods,” PhD Thesis, Massachusetts Institute of Technology, Cambridge, MA, 02139, June 2000. [13]	R. Mukkamala and R. J. Cohen, “A forward model-based validation of cardiovascular system identification.”  American Journal of Physiology, 2001, 281, H2714-H2730.[14]	P. J. Hunter, A. D. McCulloch, and H. E. D. J. ter Keurs, “Modeling the mechanical properties of cardiac muscle,” Progress in Biophysics and Molecular Biology. 69. 289-331, 1998.[15]	J. M. Guccione and A. D. McCulloch, “Mechanics of active contraction in cardiac muscle: Part I – Constitutive relations for fiber stress that describe deactivation,” Transactions of the ASME. 115. 72 – 81, 1993.[16]	Y. B. Chernyak, A. B. Feldman, and R. J. Cohen, “Correspondence Between Discrete and Continuous Models of Excitable Media: Trigger Waves,” Phys. Rev. E, 55(3), 3125-3233, 1997.[17]	A. B. Feldman, Y. B. Chernyak, and R. J. Cohen, “Wave Front Propagation in a Discrete Model of Excitable Media,” Phys. Rev. E, 57(6), 7025-7040, 1998.[18]	A. B. Feldman, Y. B. Chernyak, and R. J. Cohen, “Spiral Waves are Stable in a Discrete Element Model of Two-Dimensional Homogeneous Excitable Media,” Int’l. J. Bifurcation and Chaos in App. Sci. and Eng., 8(6), 1153-1161, 1998.[19]	A. B. Feldman, Y. B. Chernyak, and R. J. Cohen, “Cellular Automata Model of Cardiac Excitation Waves,” Herzschr. Elektrophys., 10, 92-104, 1999.[20]	E. Clancy, J. M. Smith, and R. J. Cohen, “A Simple Electrical-Mechanical Model of the Heart Applied to the Study of Electrical-Mechanical Alternans,” IEEE Trans. Biomed. Eng., 38(6), 551-559, 1991.Author BiographiesSEAN PATRICK MURPHY is a Biomedical Systems Engineer at the Johns Hopkins University Applied Physics Laboratory.  In 1999, he received degrees Magna Cum Laude in honors electrical engineering and mathematics at the University of Maryland College Park and is currently working on a M.S. degree in Applied Biomedical Engineering at the Johns Hopkins University.  DR. JAMES E. COOLAHAN is the Supervisor of the Modeling, Simulation and Decision Support Group at the Johns Hopkins University Applied Physics Laboratory, where he also served as the Assistant to the Director for Modeling and Simulation from 1996 to 2001.  In his 29 years at JHU/APL, his technical activities have included modeling and simulation, test and evaluation, and the development of oceanographic data acquisition systems.   Dr. Coolahan has served as the Associate Team Leader of the National Space Biomedical Research Institute’s Integrated Human Function team since its inception in 2000.  In SISO, he has been Vice-Chair of the SISO Test and Evaluation Forum, and also has been a member of the Research, Development and Engineering Forum Program Review Panel.  Dr. Coolahan holds B.S. and M.S. degrees in aerospace engineering from the University of Notre Dame and the Catholic University of America, respectively, and M.S. and Ph.D. degrees in computer science from the Johns Hopkins University and the University of Maryland, respectively.DR. ANDREW FELDMAN is a Senior Scientist in the Research and Technology Development Center at the Johns Hopkins University Applied Physics Laboratory.  Dr. Feldman’s current research interests are in the fields of quantitative cardiovascular electrophysiology, bioinformatics, mass spectrometry, and monitoring techniques for infectious diseases.  He is a former recipient of the National Research Service Award from the National Institutes of Health, National Heart, Lung and Blood Institute and a fellow of the North American Society of Pacing and Electrophysiology.  Dr. Feldman received his PhD in physics from Harvard University in 1997 and was a postdoctoral fellow at Harvard-MIT, Division of Health Sciences and Technology prior to joining APL in 2000.ROBERT LUTZ is a Principal Staff Engineer at the Johns Hopkins University Applied Physics Laboratory. He has over 20 years of experience in the design, implementation, and evaluation of computer modeling and simulation (M&S) systems for military customers.  He received his M.S. degree in Operations Research from the State University of New York at Stony Brook in 1980.  Since joining APL in 1992, Mr. Lutz has assumed leadership roles on several M&S programs, including the High Level Architecture (HLA), Naval Simulation System (NSS), and the Simulation Based Acquisition (SBA) initiative.  Currently, he is the technical manager for the DMSO-sponsored EnviroFed project, technical editor for IEEE Standard 1516.2 (Object Model Template), and chair of the SISO Federation Development Process (PROC) Forum.  He is also a frequent guest lecturer in The Johns Hopkins University Whiting School of Engineering.RANDY SAUNDERS is a Senior Staff Engineer at the Johns Hopkins University Applied Physics Laboratory.  He has over 20 years of experience in the design, implementation, and integration of high fidelity simulations for military and business customers.  He received his M.S. degrees in Engineering from Harvey Mudd College in 1980 and in Computer Science from the University of Southern California in 1985.  Mr. Saunders has been involved in distributed simulation standardization since the first DIS Workshop, both DIS and HLA standards committees, and as the initial Technical Area Director for the Real-Time Platform Reference Federation Object Model (RPR FOM).  He recently joined APL in 2001.Dr RamakrishnA Mukkamala is currently a research scientist at the Harvard-MIT Division of Health Sciences and Technology.  His research interests are in the fields of quantitative cardiovascular physiology and techniques for non-invasive monitoring of disease.  He is a major contributor to the physionet program sponsored by the National Institutes of Health, National Center for Research Resources.  Dr. Mukkamala received his PhD in electrical engineering from the Massachusetts Institute of Technology in 2000 and his undergraduate degree from Duke University in 1993.Figure  SEQ Figure \* ARABIC 1 – Levels of physiological modeling.Figure  SEQ Figure \* ARABIC 3 – Block diagram of CVVS Federation illustrating data flow.Left Ventricular End-Systolic Compliance(b) Left Ventricular Elastance(c) Left Ventricular Elastance During ArrhythmiaFigure 6 – Cardiovascular electrical-mechanical feedback.Arterial Pressure WaveformHeart Rate Response(c)	Venous Dead Volume Figure 5 – Short term regulatory response to arrhythmia.The National Aeronautics and Space Administration (NASA) supported this work through the NASA Cooperative Agreement #NCC9-58 with the National Space Biomedical Research Institute.Figure  SEQ Figure \* ARABIC 2 - HLA FEDEP.(a) Simulated Electrocardiogram(b) Arterial and Left Ventricular Pressure (RCVSIM)Figure 4 – Hemodynamic response to severe cardiac arrhythmia.Table 2 – More federation benchmarks.Table 1 – Federation benchmarks.