Application of a C4I Reference or Starter FOM to an Existing Simulation EnvironmentJohn D. RobertsVerlynda Dobbs, PhD.Atlantic Consulting Services (ACS), Inc.167 Avenue at the Commons, Suite 4, Shrewsbury, NJ 07702HYPERLINK "johnr@acsinc-nj.com"jroberts@acsinc-nj.com,  HYPERLINK "vdobbs@acsinc-nj.com" vdobbs@acsinc-nj.comKeywords:C4I, Communications Effects, FOM, RTI, TIMABSTRACT:  The U.S. Army Communications and Electronics Command (CECOM) is sponsoring work to develop an objective Modeling and Simulation (M&S) environment for command, control, communications, computers, and intelligence (C4I) systems using the High Level Architecture (HLA) as the underlying technology.  This type of environment is intended to support the evaluation of C4I systems in the research, development, and acquisition (RDA), advanced concepts requirements (ACR), and training, exercises, and military operations (TEMO) domains using virtual, constructive, and live simulations.  Initial results of this work have produced a prototype C4I Federation Object Model (FOM) focused on communications and the exchange of information among Command and Control (C2) systems in a tactical environment. The prototype C4I FOM represents the equipment, network architectures, and configurations that constitute the Army’s tactical environment.  It accounts for radios, networking equipment, protocols, C2 devices, host platforms, messaging, and communications effects. The intent of the FOM is to be generally applicable to interfacing real C4I systems to a distributed simulation environment.To demonstrate the usefulness and utility of the prototype C4I FOM, it is being applied to an existing simulation environment, the Tactical Internet Model (TIM) Suite as part of a transition effort to the HLA.  The TIM Suite is a high-fidelity real-time model of the Army’s Tactical Internet (TI) for echelons of brigade and below providing realistic digital communications to the simulation and training communities.  Originally developed using Distributed Interactive Simulation (DIS) protocol, the TIM Suite consists of a number of components exchanging entity state information and tactical messages. The TIM FOM requires only a subset of the prototype C4I FOM objects and interactions that are relevant to the exchange of information among the TIM Suite components.  In a number of areas, more detail has been added through the incorporation of subclasses and new interactions.  This paper describes the effort involved in applying the prototype C4I FOM to the TIM Suite environment.  The resulting TIM FOM is presented along with lessons learned, and a number of observations and recommendations regarding the use of the prototype C4I FOM as a reference, or “starter,” FOM.IntroductionThe U.S. Army Communications-Electronics Command (CECOM) is sponsoring research in the area of developing an objective Modeling and Simulation (M&S) environment for command, control, communications, computers, and intelligence (C4I) systems.  The High Level Architecture (HLA) is being investigated as the underlying technology to facilitate development of this environment.  The Army Enterprise Implementation Plan, Task 9 Action Plan, developed in 1994 specifies the use of Department of Defense (DoD)-compliant tools and methodologies(which today would include the HLA(to oversee the prioritization and integration of C4I models to facilitate trade-off analysis and validation of the Operational Architecture and the Technical Architecture and to support the efforts of the Architecture Control Committee. Toward this end, the Task 9 M&S Subgroup was formed to define a common environment to support evolving Army C4I M&S efforts. The objective M&S environment for C4I systems will support the evaluation of C4I systems in the research, development, and acquisition (RDA), advanced concepts requirements (ACR), and training, exercises, and military operations (TEMO) domains in a timely manner in virtual, constructive, and live simulations, as appropriate. The objective environment will provide flexibility, scalability, and cost-effectiveness, while promoting hardware and software reuse between organizations, and will provide interfaces to prototype/operational C4I systems. During Fiscal Year 1998 (FY98), a six-month Phase I Small Business Innovation Research (SBIR) contract was awarded to Atlantic Consulting Services (ACS), Inc., Shrewsbury NJ, to initiate development of a plan for transitioning the Army’s C4I M&S products and tools to an objective M&S environment. Phase I featured the use of the DoD-mandated HLA as the key enabling technology for the objective C4I M&S environment.  A survey of existing CECOM models and simulation systems was performed along with a requirements analysis for the TEMO and RDA domains to determine the applicability to the requirements of the objective environment, and the feasibility of transitioning them.  The primary result of Phase I was an initial prototype C4I Federation Object Model (FOM) based on the Army’s Tactical Internet (TI) for battalion and below. The TI is the foundation for the Army’s communications vision of the future (Force XXI).  In the TI, the Force XXI Battle Command Brigade and Below (FBCB2) system provides users with the capability to send and receive both Command and Control (C2) and Situation Awareness (SA) messages.The purpose of the prototype C4I FOM was to provide the first step in developing a more general-purpose, overarching FOM that could be applied to HLA federations involving the C4I domain.  The notion of a high-level FOM, generally applicable to a given problem area, has been classified as a Reference or “starter” FOM.  A secondary result of Phase I was the notion that use of the HLA appeared to be a viable approach to meeting the requirements of the Army’s objective C4I M&S architecture by providing a common underlying framework applicable to a wide range of M&S systems.In FY99, ACS was awarded the follow-on Phase II SBIR contract to continue this work.  Phase II was a two-year effort with the primary objective of demonstrating the feasibility of the prototype C4I FOM to facilitate development of an objective M&S environment for C4I systems and models.  In order to demonstrate use of the prototype C4I FOM, an existing Distributed Interactive Simulation (DIS)-based simulation developed at CECOM is being transitioned to the HLA.  The existing simulation environment, known as the Tactical Internet Model (TIM) Suite, provides a high-fidelity model of digital data communications within the Army’s TI that is in use by the DoD simulation and training community.  The purpose of this paper is therefore to describe the results of applying the prototype C4I FOM to the TIM Suite as a means of transitioning it to the HLA.   Section 2 provides background including a description of the C4I FOM and an overview of the process used for applying the FOM, the HLA Federation Development and Execution Process (FEDEP) model.  Section 3 describes the existing simulation environment being transitioned to the HLA and will serve as the focus of this paper.  Section 4 defines the process of applying the prototype C4I FOM to this environment in terms of developing the HLA federation through the FEDEP.  Section 5 identifies a number of observations and lessons learned resulting from the transition effort. Section 6 presents the conclusions and recommendations resulting from this effort.  Finally, section 7 defines the references used in preparing this paper.  BackgroundC4I FOM OverviewAs identified in section 1, the prototype C4I FOM was the starting point for transitioning the TIM Suite from DIS to HLA.  In the HLA world, the FOM specifies the type and format of the information to be exchanged among the federation components in terms of objects, attributes, interactions, and parameters.  It provides the guidelines for integrating the various components participating in the federation.  Development of the prototype C4I FOM was performed using object-oriented techniques to gather requirements, synthesize the results, and map this information into a HLA FOM representation.  An Object Oriented Analysis and Design (OOA&D) methodology was used to generate successive layers of increasing detail allowing for the capture of many of the details of the problem domain. The information is specified in a manner prescribed by the HLA Object Model Template (OMT).  Through this process certain key areas were identified for the FOM as they relate to the Army’s TI for battalion and below, including C4I Systems, Communications Device, Communications Network, Communications Effects, and Messages.  These areas formed the basis for deriving the object classes, attributes, and interactions of the FOM.  Further evolution of the initial prototype C4I FOM has occurred as part of the analysis of the TIM Suite software.  Tables 2.1 shows the object class structure for the prototype C4I FOM.At the heart of the prototype C4I FOM is the C4IDevice object class.  It is a base class representing all types of C4I devices.  The attributes defined at this level are considered common to all types of C4I devices.  Subclasses of C4IDevice include NetworkDevice, EndUserDevice, RadioDevice, and NavDevice.  The NetworkDevice class is intended to represent any type of network related component such as a gateway, router, hub, switch, or Asynchronous Transfer Mode (ATM).  EndUserDevice depicts a computer system running a user application.  A RadioDevice represents a device that uses radio frequency (RF) as the means of communication. The NavDevice class accounts for devices that provide navigation or Global Positioning System (GPS) data. Other class structures of interest include the CommLink class and the CommEffects class.  A CommLink represents the link between C4I devices such as a network or satellite link.  The CommEffects class hierarchy is associated with the CommLink class because a communications link can be affected by path loss, network delays, interference and jamming.Table 2.1 C4I FOM Object Class Structure TableClass1Class2Class3Class4Class5 HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_1.html" BaseEntity (S) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_2.html" PhysicalEntity (S) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_3.html" MilitaryEntity (S) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_4.html" MilitaryPlatformEntity (S) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_5.html" MilitaryLandPlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_10.html" MilitaryAirLandPlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_11.html" MilitaryAmphibiousPlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_12.html" MilitarySpacePlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_13.html" MilitarySeaSurfacePlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_14.html" MilitarySubmersiblePlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_15.html" MilitaryMultiDomainPlatform (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_8.html" MunitionEntity (PS)  HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_9.html" MilitaryLifeform (S) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_16.html" Soldier (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_17.html" MilitaryNonHuman (PS) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_6.html" AggregateEntity (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_7.html" EnvironmentEntity (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_18.html" Message (N) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_19.html" TextMessage (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_37.html" VoiceMessage (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_20.html" CommEffects (N) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_21.html" NetworkDelay (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_22.html" PathLoss (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_34.html" Jamming (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_35.html" Interference (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_23.html" C4IDevice (N) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_24.html" EndUserSystem (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_30.html" NetworkDevice (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_32.html" RadioDevice (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_41.html" NavDevice (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_25.html" CommNetwork (PS)     HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_26.html" IWEffects (N) HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_27.html" UnauthorizedAccess (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_28.html" DenialOfService (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_29.html" SpoofingAttack (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_42.html" Reconnaissance (PS)    HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_31.html" Fed_Status (PS)     HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_33.html" CommUser (PS)     HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_36.html" Protocol (PS)     HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_38.html" Modulation (PS)     HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_39.html" Antenna (PS)     HYPERLINK "E:\HLA\OMDT\omdt_13r3\FOMs\Phase II\CMSE1_0 Html\object_40.html" CommLink (PS)    The Message class is included to represent any type of voice or data message. It has an association with the C4IDevice class based on the ability of C4I devices to pass messages.  The CommUser class is intended to depict the actual user of C4I devices whether human or simulated. A portion of the Realtime Platform Reference (RPR) FOM was included to represent a host platform (i.e., ground vehicles, aircraft, ships, dismounted soldiers, and aggregated units). This includes the BaseEntity class hierarchy structure found in the prototype C4I FOM. Refer to [1] for more information regarding the RPR FOM. The Fed_Status is a high level class that can be used to publish and gather status about a particular federate for monitoring or logging purposes.  This can be customized to the needs of a particular federate through subclassing.  Further details regarding the structure and contents of the prototype C4I FOM can be found in [2][3].Table 2.2 shows the interaction classes that make up the prototype C4I FOM.  Featured here is the GenericMessage interaction that serves as a general-purpose way to send a message encapsulated within an interaction.  The FederateHeartbeat provides a mechanism to periodically send out a pulse from a federate to indicate it is functioning properly.  The CommEffectsInfo interaction is intended to provide a total communication degradation value caused by ambient factors.  The remaining three interactions provide a means to control the flow of messages by allowing federates to request to send, acknowledge requests, and respond to messages.  Table 2.2 C4I FOM Interaction Class TableInteraction1Interaction2GenericMessage (IR)FederateHeartbeat (IR)CommEffectsInfo (IR)TransmitDataRequest (IR)TransmitDataResponse (IR)MessageResponse (IR)HLA FEDEPThe approach for transitioning the TIM Suite to the HLA was based on the HLA FEDEP version 1.5.  The FEDEP is defined as a sequence of activities necessary to construct HLA federations. It has been influenced primarily by the experiences of the HLA proto-federations efforts and other HLA user organizations.  The FEDEP is meant as a baseline guide for federation developers that may be tailored or modified as appropriate to meet specific objectives. Figure 2.1 illustrates the six-step sequential process of the FEDEP.The first step involves defining the federation objectives.  This is where the federation user and development team define the set of objectives to be accomplished.  Step two involves developing the federation conceptual model that is a representation of the real world domain defined by the problem space.  The third step is where the federation is designed.  The participants in the federation (federates) are identified and the functionalities required are mapped to the federates.  Step four involves the actual development of the federation.  This is where the FOM is developed through negotiations among the various participants resulting in agreements for the type and format of the information to be exchanged among the federates.  Following this, step five includes integration and testing of the federation where all required implementation activities are performed and testing is conducted to ensure the appropriate level of interoperability.  Finally, step six is where the federation is executed and the outputs are captured for later analysis and presentation.  A more detailed description of the individual steps involved in the FEDEP can be found in [4].Figure 2.1 Six-Step HLA FEDEP ModelSimulation EnvironmentAs identified earlier, the simulation environment that has been the focus of the transition effort is the TIM Suite.  Originally developed in FY96 for the Army’s Task Force XXI training to model the Army’s TI, it provided an interface to the battalion and below C2 system, the Appliqué [5].  Since that time, the TI has evolved to a more robust network implementation and is now targeted for the Army’s First Digitized Division (FDD) scheduled for fielding in FY01.  Likewise, the Appliqué has been replaced by the FBCB2 system.  To keep pace, the TIM Suite has also evolved to accommodate the changes to the TI and provide an interface to FBCB2 as required to support the Simulation Testing, Operations Rehearsal Model (STORM) project. STORM is intended to provide a seamless, synthetic battlefield environment and is being used to prepare for the Initial Operational Test and Evaluation (IOT&E) of the FBCB2 system.  STORM will significantly reduce troop requirements and thus the cost of operational test as well as contribute to an environment that can provide benefit to the training community [6].The purpose of the TIM Suite environment is to simulate digital data communications for the DoD simulation and training community.  It realistically model’s communications within the Army’s TI for battalion and below. The TIM Suite provides a simulation interface to the FBCB2 system allowing the processing and transfer of C2 messages and SA information among the live players participating in these simulated environments.  The TIM Suite models the routing of messages through the network of components that make up the TI.  It is also responsible for computing message delays and losses in communications based on terrain effects, network traffic, and the characteristics of the radio devices.  Figure 3.1 shows the basic components that comprise the TIM Suite.Figure 3.1 TIM Suite ComponentsThe FBCB2 is the real world C2 system that the live players use to send and receive SA information and command-level messages.  The TIM Suite provides a realistic interface to the virtual world for the FBCB2 through the Client Interface Device (CID).  The CID models the operation of the real world Internet Controller (INC) device and is responsible for routing information to and from FBCB2 in the same manner as the real INC.  The environment can be configured to accommodate one or more FBCB2 nodes.  The Simulation Converter (SIMCON) component provides SA information for the simulated entities not associated with a real FBCB2 device.  It acts as a virtual FBCB2 server by generating actual formatted SA messages that can be received and processed by the real FBCB2 devices interconnected with this environment. The CECOM Integrated GPS Navigation Model (CIGNM) server provides a centralized high-fidelity navigation capability.  It models the Precision Lightweight GPS Receiver (PLGR) interface required by the FBCB2 systems to monitor their own location.  The CIGNM includes a client component, the NavClient, that is hosted on the CID, providing the PLGR interface to the FBCB2. The Communication Effects Server (CES) is responsible for providing realistic communications effects through computation of message signal degradation and other losses based on radio performance, terrain contour, and unit location.  In addition, it models the network accounting for channel access and message delivery delays due to network loading and routing [7].  The Livefeed component provides the capability to display the locations of live units on DIS-based simulations.  It receives real Joint Variable Message Format (JVMF) SA messages from the live side and converts them into DIS entity state (ES) Protocol Data Units (PDUs).  The C4I Jammer Analysis Model (CJAM) component models an RF jamming capability [8].  The Modular Semi-Automated Forces (ModSAF)/Janus component is a DIS-based entity level constructive simulation system capable of modeling certain behaviors of land, sea, and air units.  It is primarily used as the scenario driver for the simulation environment, filling out the battlefield with virtual entities.  Development of the TIM FederationFederation ObjectivesThe first part of the FEDEP is to identify the overall federation objectives.  This activity involves determining a clear understanding of the problem being addressed.  Once the problem is understood, a specific set of objectives is generated.  These objectives form the foundation for defining the federation requirements or goals based on the expectations of the customer or sponsor.  Because the TIM Suite already exists and is currently being used as part of the STORM project, identification of the federation objectives is relatively straightforward.  Following are the specific federation objectives for the TIM federation:Transition the TIM Suite from a DIS-based protocol to an HLA protocol.Maintain the existing functionality of the TIM Suite using the HLA as the information exchange mechanism.Demonstrate the feasibility and utility of the prototype C4I FOM by applying it to the TIM Suite.Federation Conceptual ModelDeveloping the conceptual model of the federation involves creating a representation of the real-world domain applicable to the federation problem space, definition of an appropriate scenario, and identifying the federation requirements.  The TIM Suite models the operation of the Army’s TI for brigade and below with respect to digital communications.  The TI is an integrated battlespace communications network providing a data transport infrastructure.  The term is appropriate due to functional similarities to the commercial Internet and because the communications infrastructure supporting the Tactical Internet is based on Internet technology. A key feature is the ability to exchange JVMF messages using the commercially based Internet Protocol (IP).  The idea is to create a single heterogeneous network enhanced by data haulers and advanced communications technologies using commercial off-the-shelf (COTS) and militarized commercial routers.  Figure 4.1 illustrates the TI concept.Figure 4.1 Army’s Tactical InternetThe TIM Suite models the real world TI and provides an interface to the virtual world for the FBCB2 system.  The FBCB2 is both a system and concept to be used with all battlefield operating systems including Combat, Combat Support, and Combat Service Support units performing missions across the operational continuum at the tactical level of war.  It is being used as a digitized Battle Command Information System providing on-the-move, real-time and near-real-time battle command information to support the soldier. FBCB2 is considered one of the key components of the Army Battle Command System (ABCS), allowing for seamless integration with the various other components of ABCS at the brigade and battalion level.  It is designed to support situational awareness (SA) down to the soldier/platform level across all the Battlefield Functional Areas (BFAs) and echelons.  The system also provides the means for brigade and battalion level commanders to command when away from their Tactical Operation Centers (TOCs), interoperating with subordinate commanders and leaders also equipped with FBCB2.  The FBCB2 is composed of a computer-based system that can display a variety of information relevant to the commanders as well as the individual solder.  This information includes a common picture of the battlefield overlaid with graphical depictions (known as icons) of friendly and enemy forces.  The software automatically integrates GPS data, military intelligence data, combat identification data, and platform data (e.g., status of fuel and ammunition).  Battlefield data is communicated to and received from users of FBCB2 via the TI. Connectivity is through a radio network comprised of both the Enhanced Position Location Reporting System (EPLRS) and the Single Channel Ground and Airborne Radio System (SINCGARS). By connecting these platforms through the TI, data needed for battlefield SA and C2 decision making can be made available to commanders at all levels of the Army's Battle Command System.Scenarios As part of the conceptual model development, a set of three scenarios was created to demonstrate the functionality of the TIM federation using the HLA protocol.  Each scenario was designed to address a certain set of capabilities provided by the TIM Suite.  The first scenario addressed the exchange of SA message within a platoon network.  A ModSAF scenario consisting of a tank platoon was created on the National Training Center (NTC) terrain database.  A real FBCB2 was assigned the role of one of the four platoon members (i.e., platoon leader, platoon sergeant, wingman 1, or wingman 2).  The other members are modeled by the SIMCON.  The platoon has been tasked with a move mission along a designated route.  As the units move in ModSAF, their locations can be tracked on the FBCB2 display to show consistency.Scenarios two and three expand on the first scenario by demonstrating the exchange of SA and C2 messages among the networks associated with a tank battalion.  Scenario two focuses on SA messages being exchanged among selected members of a battalion network.  A ModSAF scenario was created involving a complete tank battalion on the NTC terrain database.  A tank battalion consists of three companies, a battalion commander and executive officer (XO).  Each company consists of three tank platoons, a company commander and a company XO.  For this scenario, two real FBCB2 systems are being used, each associated with a member of a platoon in separate companies.  Both platoons are assigned move missions along separate designated routes.  The other members of the battalion are modeled by the SIMCON.  A portion of the scenario serves to demonstrate the functionality of the CES.  The two routes have been configured to include terrain blockage during a portion of the move mission.  The blockage is severe enough to cause an interruption in communications for a certain period of time.  The result will affect the display on both the FBCB2 systems.  On the first FBCB2, the movement of the second platoon will stop and the icons will go stale if the interruption occurs for a period longer than the specified friendly SA stale time on the FBCB2.  The second FBCB2 should show similar effects for the corresponding icons of the first platoon.Scenario three will focus on the exchange of C2 messages using exactly the same units and configuration as scenario two.  C2 messages will be manually sent from one FBCB2 to the other at various times during the move mission.  This will include sending messages during the period of terrain blockage as well as non-terrain blockage.  The results will be similar to those of the second scenario.Federation RequirementsA set of requirements for the exchange of information among the TIM Suite components was also identified as part of the conceptual model development process.  These requirements are basically the same as those for the existing TIM Suite components under the DIS protocol.  Following are the specific requirements for the TIM federation:Entity State Information produced by ModSAF and received by SIMCON, CIGNM, CES, and CJAMEntity State Information produced by the Livefeed and received by ModSAFSA Messages produced by the SIMCON and received by the CESSA Messages produced by the CES and received by the SIMCONSA Messages produced by the INC and received by the CESSA Messages produced by the CES and received by the INCC2 Messages produced by the INC and received by the CESC2 Messages produced by the CES and received by the INCApplication of Communication Effects by the CESRF Jamming Effects produced by CJAM and received by the CESNavigation Information produced by CIGNM and received by the NavClientNavigation Information produced by CIGNM and received by SIMCON.Federation DesignDesign of the federation involves identification, evaluation, and selection of all federation participants (i.e., the federates) including the allocation of functionality to those federates.  In addition, this step includes developing the plan for actually developing the federation.  In the case of the TIM Suite transition to the HLA, this step of the FEDEP process becomes basically trivial.  The purpose and functionality of the TIM Suite remains the same for the HLA as it was under DIS.  Each component will become an individual federate and model the same functions as in the existing TIM Suite environment.  Following are the federates to be included in the TIM federation:CID Federate – INC model interface to the FBCB2SIMCON Federate – SA message generation for units not associated with a real FBCB2 (i.e., models virtual FBCB2 systems)CIGNM Federate – GPS Model input for the FBCB2NavClient Federate – GPS Interface to FBCB2CES Federate – Communication effects modelLivefeed – SA Interface for Live UnitsCJAM – RF Jammer ModelModSAF Federate – Simulation driver.Federation DevelopmentFederation development involves two primary activities: generating the FOM and modifying the individual federates as required.  The FOM is created to support the data exchange requirements among the various federates involved in order to meet the federation objectives.  The FEDEP Model version 1.5 identifies five approaches for FOM development [4].  Development of the TIM federation implemented the fifth bulleted approach that states:“Begin with a FOM that provides a common frame of reference to a given user community.  Remove elements of the FOM that are not required for the application.  Modify and/or augment only if necessary.”The prototype C4I FOM identified in section 2.1 was used as the common frame of reference or “starter” FOM.  The first step in this process was to perform an analysis of the TIM Suite software components to identify the types of data and information exchange mechanisms used.  The majority of the software modules that make up the TIM Suite are implemented on PC-based platforms running the Linux operating system, with the exception of the CIGNM server and CJAM component that run under Windows NT and the FBCB2 that runs under Solaris x86.  Operation of the TIM Suite involves the exchange of various kinds of information including the actual message traffic found in the operational environment and simulation-specific data required for maintaining the state of the simulation environment and the status of the components. The existing software mechanisms used include DIS PDUs, and Unix Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) sockets.  Transition of the TIM Suite components to the HLA requires that all of this information be passed through one common interface mechanism:  the Runtime Infrastructure (RTI).Based on this analysis, the type of data exchanged among the TIM Suite components was grouped into three specific categories: entity state information, navigation or GPS information, and C2 and SA messages.  The corresponding software mechanism for exchanging each type of information was then identified. Table 4.1 shows the specific types of information exchanged among the TIM Suite components and the existing software exchange mechanisms used.  Information flow information for the CJAM is not included in the table because CJAM is a new component to the TIM Suite that is just coming on line and was developed with an HLA interface for both receiving entity state information and exchanging jamming information with the CES.The next step was to determine the corresponding HLA data exchange mechanisms to replace each of the existing mechanisms identified in table 4.1.  The HLA provides two basic methods of information exchange via the RTI: object attribute updates and interactions.  In general, attribute updates are used when the data is exchanged for objects whose state must be maintained by one of the federates (i.e., a persistent object).  Table 4.1 TIM Information Exchange MechanismsInformation TypeInformation FlowExchange MechanismEntity State InfoModSAF to SIMCONDIS ES PDUModSAF to CIGNMDIS ES PDUModSAF to CESDIS ES PDULivefeed to ModSAFDIS ES PDUGPS InfoCIGNM to NavClientSocketsCIGNM to SIMCONSocketsSA/C2 MessagesCIS to CESSocketsSIMCON to CESSocketsCES to CIDSocketsCES to SIMCONSocketsAn example of this case would involve a simulated entity, such as a tank, that has a location, appearance, movement characteristics, and a current status.  An interaction involves the passing of information among two or more federates (e.g., a message or heartbeat).  Use of interactions is analogous to passing messages, where the state of the information is not maintained as an object.  In the case of the TIM Suite, the exchange of information is primarily focused on the location and movement updates for simulated entities and messages being passed among C4I devices (i.e., radios, networking devices, C2 systems, and navigation devices).  Table 4.2 shows the TIM Suite information flows mapped to the HLA mechanisms used for transition.Table 4.2 Information Exchange Mapping to HLAInformation TypeInformation FlowHLA MechanismEntity State InfoModSAF to SIMCONAttr UpdateModSAF to CIGNMAttr UpdateModSAF to CESAttr UpdateModSAF to CJAMAttr UpdateLivefeed to ModSAFAttr UpdateGPS InfoCIGNM to NavClientInteractionCIGNM to SIMCONInteractionSA/C2 MessagesCIS to CESInteractionSIMCON to CESInteractionCES to CIDInteractionCES to SIMCONInteractionJamming DataCES to CJAMInteractionCJAM to CESInteractionAll persistent DIS entity state information (i.e., ES PDUs) was mapped to the HLA attribute update mechanism (i.e., Attr Update).  This included all PDUs from ModSAF and from the Livefeed.  The remainder of the information types were mapped to HLA interactions because they involve passing messages.  Once the HLA information exchange mechanisms were identified, the TIM FOM was developed using the prototype C4I FOM as the starting point.  A number of new object classes and interaction classes were added to specifically address certain requirements associated with the TIM Suite components and behaviors.  Table 4.3 presents the object class structure table for the TIM FOM.  The MilitaryLandPlatform class provides the host platforms.  Table 4.3 TIM FOM Object Class Structure TableClass1Class2Class3Class4Class5BaseEntity (S)PhysicalEntity(S)MilitaryEntity(S)MilitaryPlatformEntity(S)MilitaryLandPlatform (PS)C4Idevice (N)EndUserSystem(N)C2Device(PS)NetworkDevice(PS)NavDevice(PS)Message(N)TextMessage(PS)IWEffects(N)UnauthorizedAccess(PS)DenialOfService(PS)SpoofingAttack(PS)Reconnaissance(PS)Fed_Status(N)FedStatus_CIGNM(PS)Fed_Status_NavClient(PS)Fed_Status_Inc (PS)Fed_Status_SIMCON(PS)Fed_Status_Ces (PS)Fed_Status_Livefeed(PS)A C2Device class was added as a subclass to EndUserSystem to represent the FBCB2 systems and the NetworkDevice class models the INC.  The NavDevice class was added to provide to represent the modeling of the GPS feed to the FBCB2.  The TextMessage class is used to represent JVMF messages.  A number of subclasses to the Fed_Status class were added corresponding to the TIM Suite federates allowing each to maintain its own unique status information.  Table 4.4 shows the interaction class table for the TIM FOM.  Three subclass interactions specific to JVMF messages were added to the GenericMessage class.  These classes add parameters specific to the exchange of JVMF messages within the TIM Suite environment.  Three interactions are specified here for exchanging JVMF messages.  When the CES is turned off, the VmfMessage interaction is used to exchange JVMF messages directly between the SIMCON and CID.  In the case where the CES is processing each message, the VmfMessageToCes and VmfMessageFromCes interactions provide a way to control the flow of information.  The SIMCON and CID publish the VmfMessageToCes interaction and the CES subscribes to that interaction.  Conversely, the CES publishes the VmfMessageFromCes interaction and the SIMCON and CID subscribe to it.  The ModelNavSystem interaction provides a mechanism for the CIGNM to forward GPS data to the NavClient.  The TotalIncidentPowerReq and TotalIncidentPowerAck interactions are used by the CJAM federate to exchange jammer information with the CES.Table 4.4 TIM FOM Interaction Class TableInteraction1Interaction2GenericMessage (IR)VmfMessage (IR)VmfMessageToCes (IR)VmfMessageFromCes (IR)FederateHeartbeat (IR)ModelNavSystem (IR)TotalIncidentPowerReq (IR)TotalIncidentPowerAck (IR)Using the TIM FOM, each of the TIM federates was associated with the FOM classes it would be required to use for exchanging information with the other federates.  Table 4.5 provides the mapping from the individual federate to the applicable TIM FOM classes.  For each federate the corresponding object and interaction classes are identified.Table 4.5 Federate to FOM Class MappingFederateHLA Class TypeFOM ClassINCObjectsC2DeviceFed_Status_IncInteractionsVmfMessageVmfMessageToCesVmfMessageFromCesSIMCONObjectsMilitaryLandPlatformC2DeviceNavDeviceFed_Status_SimconInteractionsVmfMessageVmfMessageToCesVmfMessageFromCesCESObjectsFed_Status_CesInteractionsVmfMessageVmfMessageToCesVmfMessageFromCesTotalIncidentPowerReqTotalIncidentPowerAckLivefeedObjectsMilitaryLandPlatformFed_Status_LivefeedCIGNMObjectsPhysicalEntityNavDeviceFed_Status_CignmInteractionsModelNavSystemNavClientObjectsFed_Status_NavclientInteractionsModelNavSystemCJAMObjectsPhysicalEntityFed_Status_CJAMInteractionsTotalIncidentPowerReqTotalIncidentPowerAckThe TIM FOM was then used as the basis for determining the required modifications to the existing TIM Suite components for the transition process.  Updates to each TIM Suite component were required in order to establish an interface to the RTI.  Table 4.6 identifies modifications made to each of the components.  CJAM is not included in this table since it was a newly developed component with the HLA interface already in place.Table 4.6 Required Component ModificationsTIM ComponentModificationSIMCONPDU interface replaced with attribute updatesSA/C2 message interface replaced with interactionsGPS info request interface to CIGNM replaced with interactionsINCSA/C2 message interface replaced with interactionsCESPDU interface replace with attribute updatesSA/C2 message interface replaced with interactionsCIGNMPDU interface replaced with attribute updatesGPS interface Navclient replaced with interactionsGPS interface to SIMCON replaced with interactionsNavClientGPS interface CIGNM replaced with interactionsLivefeedPDU interface replaced with attribute updatesFederation Integration and TestingStep five of the FEDEP model calls for planning execution of the federation.  This involves establishing interconnectivity among the federates and testing the information flows prior to actual execution. The TIM Suite component federates were integrated with each other through the Defense Modeling and Simulation Office HLA RTI software version 1.3r6.  The TIM FOM provided the specification of the information exchange classes, attributes, interactions and parameters.  Figure 4.2 depicts the configuration of the TIM federation implemented as part of this effort.  Figure 4.2 TIM Federation ConfigurationTesting of the TIM federation was performed using the three sets of scenarios defined in section 4.2.  Each scenario provided the means to demonstrate the various aspects of information flow among the TIM Suite components including entity state information, SA and C2 message passing, GPS data requests and feeds, and the application of communications effects.  4.6 Execute Federation and Prepare ResultsThe final step in the FEDEP model has not taken place to date.  The TIM Suite is not currently scheduled to participate in an HLA federation.  Ongoing work with the STORM project continues to use the DIS protocol and therefore does not require the HLA interface at this time.  Several new start projects involving the TIM Suite do have an HLA requirement and will likely result in execution of the TIM federation at some point during FY01.  Observations and Lessons LearnedThe work performed in applying the prototype C4I FOM as part of the Phase II SBIR contract provided valuable insights regarding the utility of a Reference or “starter” FOM.  This section attempts to capture observations made and lessons learned as they apply to the notion of a Reference FOM for C4I.ObservationsThe FEDEP model proved useful in applying a “starter” FOM to an existing simulation environment.  It provided a structured approach for transitioning the federation.A “starter” FOM should be generally applicable to all facets of the domain.  This statement may seem obvious, but in practice this can be difficult to achieve.The object classes should be generic in nature, targeting basic domain concepts.  It is important not to get carried away with subclassing at this level.  Subclasses should only be specified when they will apply across the domain.There is a tendency to create too many attributes for these general classes.  Trying to accurately characterize the classes with attributes may result in certain classes becoming too specific.Data typing of the attributes can also be problematic.  Location attributes are a good example.  Selection of the proper units (i.e., geo-centric, lat/lon, MGRS, etc.) will likely be dictated by a specific application area and will probably not apply universally across the domain.  Using an agile-FOM approach is a potential solution to this problem.Specification of interaction classes should be limited to the highest (or base) level.  Creating even one level of interaction subclasses will probably be too specific (e.g., creating the VmfMessage interaction as a subclass to GenericMessage).  Issues for interaction parameters are basically the same as identified for object classes.Care should be taken when including object classes and/or interaction classes from another FOM.  Reuse of existing work is always a good thing; however, there can be unwanted baggage that comes along with these classes (i.e., enumerations and complex data types).When including an object class hierarchy from another FOM, not all subclasses may be applicable.  Including the BaseEntity object class hierarchy from the RPR FOM within the prototype C4I FOM resulted in this problem.  The EnvironmentEntity class and the MunitionEntity turned out not to be generally applicable to the domain (at least up to this point).Lessons LearnedBased on the set of observations presented there were two significant lessons learned resulting from this work. First, it became apparent that the prototype C4I FOM was too specific in a couple of areas.  The original FOM was the result of a review of the Army’s tactical communications for brigade and below.  This likely influenced the FOM to focus more on lower level ground maneuver operations.  It was probably not necessary to include all the various entities types as part of the BaseEntity hierarchy.  It may have been sufficient to limit the entity hierarchy to MilitaryEntity or PhysicalEntity.  It also may be the case that classes like Protocol and Modulation were not appropriate for this level as well.  In addition, a number of the classes were specified with too many attributes.  These classes included C4IDevice, CommNetwork, and Message.  Another valuable lesson learned was that the FOM did not address all facets of the C4I domain.  The classes and interactions included in the FOM are targeted toward the third and fourth C’s in C4I (i.e., communications and computers).  Although not originally within the scope of the SBIR effort, more attention should have been given to command and control (C2) and to intelligence.  To be truly useful as a Reference or “starter” FOM to the C4I community, the FOM should be expanded in these areas through further research and experimentation.Summary and ConclusionsThe Army has the need to develop an objective M&S environment for C4I systems to support interoperability and reuse of components.  The purpose of the effort described herein was to initiate work in this area through the development of standard approaches for data exchange among C4I systems and the M&S environment within the context of the HLA.  A prototype C4I FOM was developed and is currently being evolved based on existing military systems and architectural configurations associated with their operational environment.  Initial research during Phase I focused on the Army lower echelons involving C2 systems exchanging command level and SA messages.  Ongoing work as part of Phase II is attempting to expand the scope of the C4I FOM to consider other types of C4I systems, higher echelons and joint services.  Through this effort, CECOM hopes to initiate action within the community to develop an overarching Reference C4I FOM that will be embraced by SISO as a standard.Based on the work accomplished to date, the HLA appears to lend itself well to this problem by providing a common architectural framework for interfacing C4I systems with M&S environments.  Prototyping to demonstrate the initial version of the C4I FOM has provided certain insights regarding the viability and usefulness of a Reference or “starter” FOM for this domain.  Existing HLA-based products such as the HLA Gateway and the RPR FOM have been successfully applied to the prototyping effort for transitioning an existing DIS-based environment, the TIM Suite, to the HLA using a standardized approach.  Based on the design and operation of the TIM Suite environment, a TIM FOM was developed using the C4I FOM as a starting point.  The TIM FOM added a number object and interaction classes required to accommodate the specific information requirements of the application environment. References[1] RPR FOM version 0.6, Defense Modeling and Simulation Office, 1998.[2] W. Sudnikovich, J. Roberts, J. Lacetera:  “Implementation of a prototype C4I FOM,” Spring 1999 Simulation Interoperability Workshop, paper number 99S-SIW-061.[3] W. Sudnikovich, J. Roberts:  “Implementation of a prototype C4I FOM: Continued Progrss,” Fall 1999 Simulation Interoperability Workshop, paper number 99F-SIW-077.[4] High Level Architecture Federation Development and Execution (FEDEP) Model Version 1.5, December 8, 1999, Defense Modeling and Simulation Office.[5] Manoski, S., McConnell, J., Riehl, M., Sudnikovich, W., Tafoni, T., Vogel, J.: “The Tactical Internet Model (TIM) Provides Realistic Communications for Task Force XXI Training,” Simulation Interoperability Workshop, paper 97S-SIW-44.[6] J. Peace, E. Wood: “TIM Suite – A Federation for Live/Virtual Simulation of C4I Systems,” Fall 2000 Simulation Interoperability Workshop, paper number 00F-SIW-066.[7] J. Wessel, J. Dulmage, E. Guaranda, T. Hoang, P. Jacyk, J. McConnell, M. Riehl, J. Sytwu, J. Peace: “The Communications Effects Server (CES) Provides Realistic Communication Effects in Distributed Simulations,” Fall 2000 Simulation Interoperability Workshop, paper number 00F-SIW-069. [8] M. Berry, J.McGowan, J. Peace: “CJAM – Assessing the Force-Level Impact of Tactical ECM on C4I Systems through Distributed Simulation,” Fall 2000 Simulation Interoperability Workshop, paper number 00F-SIW-068.Author BiographiesJOHN D. ROBERTS is a Project Manager for Atlantic Consulting Services (ACS), Inc. He is currently involved in supporting the transition of various CECOM simulation systems from DIS to the HLA.  Prior to this, he spent six years as a Lead Developer with the MITRE Corporation working in the areas of distributed simulation and advanced C2 decision support for military planning.  Other technical experience includes work in the fields of Artificial Intelligence (AI), Expert System development, and customer service support.  Mr. Roberts holds a B. S. in Electrical Engineering from Widener University and a M. S. in Electrical Engineering from Fairleigh Dickinson University.VERLYNDA DOBBS is a Senior Associate for Atlantic Consulting Services (ACS), Inc.  She is currently involved in developing an HLA framework for Rational Rose and applying that framework to model the C4I FOM.  Prior to this, Dr. Dobbs provided support to various organizations within the U.S. Army Program Executive Office for Command, Control and Communications Systems, focusing on software reuse processes, product lines, software architectures, software reuse standards, object oriented technology, quality factors and metrics for reusability.  As a member of the Computer Science faculty of Wright State University, Dayton, Ohio, Dr. Dobbs taught courses in software engineering, distributed processing, operating systems and artificial intelligence, primarily at the graduate level.  She holds a Ph.D. in Computer Science from The Ohio State University, Columbus, Ohio.CIDCIDReusableProductsTesting DataUserFeedbackCESSIMCONModSAFFBCB2FBCB2…DISLivefeedCJAMCIGNMCESSIMCONModSAF/JanusTestedFederationFBCB2FBCB2ModifiedFederationsScenarioInstanceRTI RID FileFED fileFOMAllocatedFederatesFederationDevelopmentPlanTestEvaluationCriteriaFederationScenarioFederationConceptualModelFederationRequirementsFederationObjectivesStatementInitial PlanningDocumentsAvailableResourcesProgramObjectivesExecuteFederationAndPrepareResultsIntegrateAnd TestFederationDevelopFederationDesignFederationDevelopFederationConceptualModelDefineFederationObjectivesSINCGARSNetEPLRSNetRouterEPLRSNetSINCGARSNetDataHaulersMSE PacketNetworkOther ServicesStrategicTacticalInternetHost Computer(e.g., FBCB2)SINCGARSRTICIDCID…HLALivefeedCJAMCIGNM