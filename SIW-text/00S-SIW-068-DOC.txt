Multiple Casualty Sources in the Combat Trauma Patient Simulation (CTPS)Piotr S. Windyga, Ph.D.J. Peter Kinkaid, Ph.D.Bradley C. SchrickerKiran B. AnnaTim C. JohnsonInstitute for Simulation and Training (IST)University of Central Florida3280 Progress DriveOrlando FL 32826-0544pwindyga@ist.ucf.edu, pkinkaid@ ist.ucf.edu,  HYPERLINK mailto:bschrick@ist.ucf.edu bschrick@ist.ucf.edu, HYPERLINK mailto:kanna@ist.ucf.edu kanna@ist.ucf.edu,  HYPERLINK mailto:tjohnson@ist.ucf.edu tjohnson@ist.ucf.eduMikel D. Petty, PhD.Virginia Modeling, Analysis & Simulation CenterCollege of Engineering and TechnologyOld Dominion University7000 College Drive, Suffolk VA 23435mpetty@vmasc.odu.eduKeywords:Emergency scenarios, Medical training, High Level Architecture.ABSTRACT: The integration of different sources of medical casualties into the Combat Trauma Patient Simulation (CTPS) system is presented. CTPS is a distributed medical training tool, originally designed to provide an end-to-end simulation of the military medical treatment process for combat trauma injuries, from the time of occurrence through initial actions at the field hospital. The CTPS casualty generation mechanism was formerly based exclusively on using the MILESII/SAWE-ECC (Multiple Integrated Laser Engagement II/Simulation Area Weapons Effect-Electronic Casualty Card) system. With the inclusion of the Manual Casualty generator (ManCasual) and the CTPS Chemical Casualties System (C3S), CTPS has increased its military scope as well as demonstrated its potentialities as a generic system for the training and the analysis of both military and civilian casualty treatment in emergency situations. ManCasual is an interactive software that allows users to introduce casualties of any nature online to be released at the specified time, as well as the editing and later "executing" of log files containing casualty sequences. On the other hand, C3S relies on predetermined battlefield scenarios and chemical release footprints to introduce casualties of a chemical weapon nature. In order to cope with multiple and unsynchronized casualty sources, the casualty recording and patient allocation algorithm executed by the CTPS Executive, which is one of the members of the CTPS “federation”, was conveniently modified. As for the original CTPS system, all simulation components were integrated by means of extensive use of High Level Architecture (HLA). Also, the use of Computer Generated Forces software to generate major events such as large fires, acts of terrorism, riots and hazardous materials mitigation is discussed.1. IntroductionThe complexity and diversity of injury treatment in the battlefield establish a critical decision and acting environment for which well-trained personnel is required. The procedures applied must be carefully evaluated, and new ones have to be widely tested before being released. The treatment of massive civilian casualties, resulting from gas leaks and earthquakes for example, shows the same level of requirements. The medic’s level of expertise imposed by the nature of the different scenarios associated to these environments can only be reached if a sophisticated simulation-based training tool is available. Understanding the factors involved in the training process is essential to the design of such a tool. Prioritization, availability of resources, sequence of events and time constrains are only a few of the factors to be considered in designing a training exercise.In the complex problem of training tool design for injury treatment, several sub-problems can be identified that convey the design of independent simulations specialized in a particular aspect of the problem. For instance, the dynamic of casualty generation and the human response to treatments do not show a conspicuous interdependence. Moreover, isolating simulation aspects turns out to be the only way to cope with the complexity of the problem. How to put together a diversity of simulations becomes a fundamental issue when a distributed simulation is accorded. The High Level Architecture (HLA) represents an interesting option for providing the logical infrastructure for the communication, synchronization and resource sharing involved.In order to provide an emergency medical treatment training tool of wide scope, a variety of casualty sources should be embedded in the system. Since casualties can be grouped based on their similarity, it is advised to develop simulations specialized in the generation and handling of particular types of injuries or casualties. This approach allows for an easy upgrade of the system to handle new types of casualties.This paper reports how different casualty sources can be defined and integrated in a comprehensive training tool for injury treatments. First, a presentation of the training tool (CTPS) used as a basis for this study is provided. Then, the different sources of casualties are discussed and their integration method described. Finally, the results of the implementation of the method into a real training environment are evaluated.2. BackgroundCTPS (Combat Trauma Patient Simulation) is a training and analysis tool that provides an “end-to-end” simulation of the military casualty generation, handling and treatment from the time of occurrence through initial treatment at the field hospital. CTPS can be used to train medical caregivers to prioritize patients, diagnose conditions, select appropriate treatments, and perform the selected treatments. Also, different medical treatment plans, priorities, and staffing levels can be tested. [1].2.1 CTPS System architectureCTPS was built using existing commercial and military technology. Each one of the products is a simulator of a different stage or activity in the patient handling and treatment process. CTPS’s main components are [2]:MILESII/SAWE-ECC: The coupled Multiple Integrated Laser Engagement System II (MILESII) and the Simulation Area Weapons Effect (SAWE), both developed by Lockheed Martin Electro Optical Systems, use laser sources and sensors that transmit/receive encoded signals to simulate weapons engagements (“casualties”). The associated Electronic Casualty Card (ECC) allows the initial processing of the wound inflicted by the simulated weapon. In CTPS the MILESII/SAWE-ECC system determines provides the seed of a “patient”.ORCA: The Operational Requirements-based Casualty Assessment (ORCA) simulator, developed by the Army’s Crew Casualty Working Group (CCWG), simulates in great detail the effects on the human body of various types of insults, such as toxic gases and penetrations by bullets or shrapnel. In CTPS, ORCA provides physiological details (“state”) related to the casualties detected by MILESII/SAWE-ECC.JMSL: The Jackson Medical Simulation Library (JMSL) simulator is software developed by the Henry M. Jackson Foundation (HMJ) and Tekamah Corp. for emergency medical training. Patients are buffered in JMSL as they are generated by MILESII/SAWE-ECC, and their physiological state is simulated over time.HPS/PHS: HPS (Human Patient Simulator) and its lower fidelity version, the PHS (Pre-Hospital Simulator), both commercial products of Medical Education Technologies Inc. (METI), are instrumented human mannequins. The HPS is a sophisticated electromechanical device, driven by realistic models of human physiology, which simulates a variety of medical conditions and responds to the medical treatment procedures applied to it. HPS/PHSs are presently in use at numerous medical training facilities for nurses, emergency medical technicians and medics. The PHS is oriented towards emergency procedures. In CTPS, HPS/PHS allow users to apply medical treatment to patients.CTPS Executive: The CTPS Executive, software developed by the University of Central Florida’s Institute for Simulation and Training (IST), provides indispensable simulation control functions. The most important of these functions is the allocation of patients to simulators. It determines, as the simulation proceeds, which of the simulators should be simulating each patient. The allocation is based on the simulators’ capabilities and/or user inputs (not necessarily oriented to medical treatment). When convenient, the CTPS Executive initiates the transfer of the patient, via ownership transfer services, from one simulator to another. The decisions taken by the CTPS Executive are a function of the availability, capabilities, and computational load of all simulators. The CTPS Executive also performs simulation management, save/restore check pointing, and user intervention control.The CTPS system architecture is depicted in figure 2-1. EMBED Word.Picture.8  Figure 2.1: CTPS System architecture2.2 High Level Architecture (HLA)The High Level Architecture (HLA) is a standard framework that supports simulations composed of different simulation components. It was developed by the Defense Modeling and Simulation Office (DMSO) of the Department of Defense (DoD) to meet the needs of defense-related projects, but it is now increasingly being used in other application areas. HLA refers to the simulation system as a “federation”, where each simulation component is a “federate”. The HLA consists of three components [3]:Federation Rules: At the highest level, the HLA consists of a set of ten HLA rules which must be obeyed if a federate or federation is to be regarded as HLA compliant. The HLA rules are divided into two groups consisting of five rules for HLA federations and five rules for HLA federates.Interface Specification: The specification identifies how federates will interact with the federation and, ultimately, with one another. It provides service specification of the functional interfaces. The interface specification defines a standard for a Run-Time Infrastructure (RTI). The RTI is software that conforms to the specification but is not itself part of the specification.Object Model Template: The Object Model Template (OMT) provides a standard for documenting HLA Object Model information. The OMT defines the Federation Object Model (FOM), the Simulation/Federate Object Model (SOM), and the Management Object Model (MOM).2.3 CTPS component integrationNone of the integrated simulators were originally interoperable or even designed to be interoperable with the others. All CTPS simulation components are integrated into the overall system through the HLA, which provides the communication backbone. To instrument the integration, an interface module that communicates directly to the HLA RTI was implemented by IST for each simulator. By using HLA, each CTPS’s simulator component becomes a federate and CTPS becomes a federation. This module has four important functions within CTPS:monitoring the creation of patients during an executionreceiving updates on the patient’s variables from federatessending variables of the patient to federatestransferring ownership of patients’ variables among federatesThe RTI interface module not only allows CTPS federates to send and receive information to and from the rest of the federation, but it also performs message conversion, transforming federate-specific data into RTI messages and vice-versa. Due to the intrinsic differences between federates, some specificity was added to each RTI interface [2]. CTPS is the first implementation of a medical federation using HLA.2.4 Physiological Simulation CapacitiesCTPS simulates the following injuries, also referred to as scenarios in this paper:Bloodloss: A significant loss of blood at a specific part of the body, i.e., as a consequence of a land mine explosion.Anaphylaxis: A serious and rapid allergic reaction usually involving more than one part of the body, i.e., a snake bite.Pneumothorax: An entry of air into the pleural space through the chest wall as a consequence of a puncture in the chest capacity.As a patient’s simulation progresses, its state changes. A patient’s state represents a snapshot of the patient’s physiology. Each scenario can progress through eleven states, labeled Blood loss0…10, Anaphylaxis0…10, and Pneumothorax0…10 respectively. Two adjacent states are indicative of physiological change of one minute. In this model, a patient’s condition can be thought of as going through a series of progressively worsening states; i.e., a patient starts in a “healthy” state and then progressively goes to “ill” states as time passes with no medical intervention [2].2.5 Patient’s physiological condition simulationIn CTPS, either an HPS/PHS or JMSL simulates the patient’s physiological condition over the time.2.5.1 HPS/PHS patient simulationThe HPS/PHS is a script-controlled, model driven simulator. It contains a number of different interacting models, such as the cardiovascular, lung mechanism, and pulmonary gas exchange models. The interaction of these models helps simulate the reaction to a wide range of medical treatments and the interaction of different physiological subsystems. All these aspects are part of the state engine that generates the physiological and pharmacological responses of the simulated patient [10].It is reasonable that the remarkable simulation performance of METI’s HPS/PHS involves a large set of variables and parameters to be used in the embedded mathematical models. Many of these variables and parameters are used to define the physiological state of the patient being simulated. There are over 300 of these among the independent and derived magnitudes. The HPS/PHS uses these variables and parameters in a number of ways. For example, changing or setting them allows a particular patient or scenario to be created and tailored to the needs of a particular educational exercise. In addition to defining a patient, setting these variables and parameters can be used to simulate the effects of treatment on the patient. Further, the models used in the simulation interact via use of the variables and parameters. For example, the pulmonary gas exchange and lung mechanics models exchange data on gas flow rates and volumes. Additionally, these variables and parameters can be used to output, or read the state of a patient.A subset of 166 variables and parameters contains the minimum information required to instantiate a patient. Examples of some of these variables include diastolic blood pressure, cardiac output, and measured alveolar O2. Examples of some of these parameters include arterial temperature, breath sound, and chest wall capacity. These physiological variables and parameters can be changed or monitored via the HPS/PHS Internal Data Exchange Protocol (HIDEP). Control of these variables and parameters through HIDEP allows definition and control of a patient being simulated. Specifically, they can be set or read through commands to HIDEP. Thus, while not defined for this, HIDEP allows for functionality in terms of inputting and outputting the state of a patient as defined by the 166 variables and parameters [4].2.5.2 JMSL patient simulationThe JMSL simulation is based on a Finite State Machine (FSM) [5]. Figure 2.2 shows a simplified model of a chest injury. In this five-state FSM, circles represent the states of the patient and are labeled with letters and systolic blood pressures. Arrows represent actions taken by a care provider and dashed arrows represent inaction. In this example, if A is the initial state of the patient, performing a Needle Thoracentesis within five minutes transitions the patient to state B. The JMSL FSM has the capability to simulate all different casualty scenarios considered in CTPS (Blood loss, Anaphylaxis and Pneumothorax), each with eleven different states.Figure 2-2: Sample of the JMSL Finite  State MachineJMSL was implemented using client-server technology. A client interacts with JMSL using a message-passing scheme via TCP/IP. Once connected, a client logs in by identifying itself with a name. JMSL assigns a unique ID number to the client, sending it to the client in an acknowledgement message. The client will use this ID in future messages to identify itself. JMSL keeps track of all clients from an initialization file that it reads upon startup. A client’s main activities are to:Maintain a connection with the JMSL serverCreate and end specific simulation instancesCreate/delete a patient with specific casualty scenarioReceive patient vital signs and simulation clock timeThe JMSL server is unable to provide a specific state in which to start the HPS/PHS. This represents a limitation with respect to using JMSL in the overall simulation. The only patient information available to the client is vital signs and simulation clock time. Due to this limitation, and the lack of a rigorous mapping function from vital signs to state, the client is forced to update a patient state based solely on the simulation clock time of the simulation engine. When a patient is created on JMSL, its state is incremented by the client after each elapsed minute since the simulation start up. Once a patient’s casualty state reaches 10 (the last state) it is not incremented further, indicating the end of the scenario.2.5 Patient Transfer MechanismIn a CTPS simulation, each patient is simulated by different CTPS federates. More exactly, the patient’s attributes are simulated in different federates. The fact that some CTPS federates are capable of simulating the same patient attributes creates the need for patient transfers. A patient transfer means transferring the responsibility for simulating a particular patient attribute.Patient transfers respond to a particular situation at a specific instant of time during a CTPS execution. These situations are diverse and in most of the cases unpredictable. Nevertheless, well-defined rules govern patient transfers. There is a dynamic hierarchy of priorities behind any transfer. For example, an idle HPS/PHS has a higher priority than an idle JMSL. The following situations can result in a patient transfer:Manual intervention: The user or operator, via the CTPS Executive’s Graphical User Interface (GUI), can perform a manual patient transfer from/to JMSL to/from an HPS/PHS at any time, according to either an operational or training criteria.Preplanned allocation sequence: From the moment when a casualty is recorded, until the patient is initially allocated to JMSL, there is a characteristic patient flow that involves MILESII/SAWE-ECC, the ECC database Translator, and ORCA.Automatic matching: Some conditions establish that a federate is better suited to simulate a patient. For example, a patient that has been allocated to an HPS/PHS for too long should be transferred automatically to JMSL. The presence of this type of matching has to be continuously monitored by the CTPS Executive.A Federate giving up: Since each federate is a stand-alone application, it is capable of establishing on its own a terminal point of the simulation. For example, when a medic finishes treating a patient on a HPS/PHS the patient should be transferred elsewhere to make the resource available for the simulation of other patients.Before performing any patient transfer, two conditions have to be evaluated by the CTPS Executive. First, there are some resource limitations. For example, only one patient can be simulated in a HPS/PHS at a time. Second, there are the federates’ computational loads that restrict the allocation options in order to assure an acceptable level of performance. The CTPS Executive considers all criteria within a single algorithm in order to determine optimally when and where to transfer a patient.To perform a patient transfer, the ownership rights of the data representing the patient is passed from one federate to another, according to the HLA interface specifications. In order to prevent inter-federate binding, the transfer logic is centralized at one place, that is, the CTPS Executive. In consequence, federates always divest patient ownership to the CTPS Executive which in turn divests the patient to the designated federate. Thus, the patient’s transfer turns out to be a two-stage process in which the CTPS Executive temporarily assigns the patient to an internal object. The RTI accomplishes these transfers through a discrete sequence of requests/notifications from and to federates, implemented as system function calls. Figure 2-3 depicts a sample of the traffic of RTI messages that materializes a patient transfer between a HPS/PHS and JMSL.Figure 2-3: Sample of a RTI message traffic during patient a transfer3. MethodologyIn CTPS, the casualty generation mechanism was based exclusively on the use of the MILESII/SAWE-ECC system. Upon shooting the MILES II vest with the SAWE laser gun, ECC provides the injury type, and ORCA provides the injury condition (state) randomly based on the injury type. This single mechanism is very convenient for live exercises but does not allow running a predefined sequence of casualties. Moreover, the exclusive use of MILESII/SAWE-ECC does not allow CTPS to be used when casualties are of chemical weapon nature.In order to extend CTPS’s range of applications, new sources of casualties were added. Each one of these casualty generators is a stand alone federate, integrated into the CTPS federation exactly the same way the other federates are: through an RTI interface module.3.1 ManCasualManCasual (Manual Casualty generator), developed by IST, is a versatile federate designed to generate deterministic casualties with the desired scenario and state attributes associated with each one. Casualties are inserted in the CTPS simulation at the time specified by the user. This time ranges between 1 and 100 seconds. ManCasual has two operation modes as described below [2]:On-line mode: In this mode users introduce casualties one by one by filling out the form displayed on the screen (figure 3-1). This form allows users to enter the scenario type, the state of the casualty, and the time interval to wait before introducing the casualty in the CTPS simulation. The casualties’ scenarios, as well as the states corresponding to them, are those specified in CTPS. This mode allows a user or trainer to generate casualties in real time, either from a planned sequence or dynamically in reaction to the simulation and people’s reactions to it.Batch mode: In this mode, a text file is used to hold the casualty sequence. First, users create the batch file in text format containing a list of injury scenarios, states, and time intervals. This list need only be separated by spaces. No further formatting is necessary. Thus, the list may be generated on any application capable of text editing. The scenario consists of a member of a scenario enumerated type representing one of the three predefined scenarios. Consequently, the state must be a member of a state enumerated type. The time must be an integer from 1 to 100, representing seconds. This mode of saving a list of casualties allows for a potential of generating one, a series, or even a library of predefined scenarios for later use.3.2 C3SC3S (CTPS Chemical Casualty Simulation) is a simulation developed by Innovative Emergency Management Inc. (IEM) for generating chemical casualties for use in a CTPS simulation. Its multithreaded architecture provides a responsive user interface to the currently running simulation, and also allows new casualties to be inserted. C3S relies on predetermined battlefield scenarios and chemical release footprints. Thus, C3S allows the user to adjust few parameters [6].IEM has developed two realistic battlefield scenarios based on the experience of in-house subject matter experts. These battlefield scenarios are contained in the files scenerio1.bsf and scenerio2.bsf. The battlefield scenario file format is based on Extensible Markup Language.Figure 3-1: ManCasual user’s interfaceThe chemical agent footprints are stored in files separate from the battlefield scenario information. However, the plume footprint data was generated by IEM’s D2-Puff dispersion modeling software using the scenarios as input parameters. The relationship between the scenarios and the plume footprints is based on three military units, platoon, company, and battalion. The scenario file stores the set of footprint files applicable to a given scenario. For this version of C3S, both scenarios use the same set of footprint files. Currently, there are few user-adjustable parameters. The C3S user interface is depicted in figure 3-2. The simulation begins with the user choosing the scenario file from the Chose File button. Thus, it initializes the controls for plume footprint, chemical agent, military unit, and percentage of mass casualties. The range of percentages of mass casualties is a function of the scenario, military unit, and chemical agent. The range is not user adjustable, but the choice percentage is. Currently, only the chemical agent HD is supported. Figure 3-2: C3S user’s interface3.3 Generation of major events adapting Computer Generated Forces softwareThe mass casualty simulation involved using IST's Computer Generated Forces (CGF) program and the PHS to create a demonstration emergency management simulation which supports generation, support, and treatment of mass casualties. The original CGF program depicts battlefield scenarios; therefore modifications in the program were made, such as a tank being converted to an ambulance. The original CGF ran on a PC operating under Windows. It was ported to Windows NT and was interfaced with the PHS using HLA. The resulting system is referred to as MASS in this paper.Training for managing such major events as large fires, acts of terrorism, riot control and hazardous materials mitigation can be efficiently taught using a low cost PC-based simulation as part of a total training program. New managers in public safety agencies are typically not well practiced in overall management of major incidents. Most commonly, their duties in lower level positions have given them opportunity to serve as incident commander for only mid-sized incidents or components of large emergencies. Training for large scale emergencies is most commonly done using typical classroom instruction augmented by manual drills.3.4 Multiple-source casualty managementEach casualty source can either act as the only casualty generator or simultaneously without generating any resource conflict. Once a casualty is generated, by means of any casualty source, a patient is created and enters into the CTPS simulation. The patient is published via the RTI, and the CTPS Executive acquires it. All other federates recognize this patient and create their own internal representation for the patient.When a casualty is recorded by MILESII/SAWE, ECC assigns a scenario (type of injury). The CTPS Executive acquires the patient from ECC and gives it to ORCA. ORCA adds a state and physiological attributes to that scenario, thus completing the casualty description. After ORCA has assigned all patient physiological variables and parameters it divests the patient back to the CTPS Executive for allocation to other federates. JMSL can initiate the simulation of the patient, which can be treated through an HPS/PHS. When a casualty is generated by means of ManCasual or C3S, it does not need to pass through the ECC or ORCA federates as the casualty is already defined (scenario and state). Thus, the patient skips ORCA and is immediately ready for the CTPS Executive to acquire and send it to the HPS/PHS or the JMSL federate (according to availability of this last federate) where the physiological parameters and variables will be instantiated.When the full simulation of the patient has been initiated, users can manually transfer patients from one federate to another. Although all transfers are accepted by CTPS, due to the generic definition of the CTPS RTI interface, some of these transfers are meaningless. Others represent an important aspect of the simulation. For instance, transferring a patient from JMSL to ManCasual has no effect while transferring a patient from JMSL to ECC-DBT produces a re-initialization of the patient’s status. On the other hand, transferring a patient from an HPS/PHS to JMSL corresponds to a triage decision.4. Tests4.1 System set-upCTPS is a Windows NT application. It can be installed on as few as two PCs. This configuration is referred to as the economical installation. Better performance can be achieved by using more PCs and distributing the software among them. The whole software involved in a CTPS simulation cannot be distributed to more than eleven PCs. This configuration is referred to as the performance installation. Any number of PCs in-between is an option and is referred to as the customized installation.Other than the number of PCs, some aspects can influence performance, for example, the CPU model, the amount of RAM and the quality of network connections. The performance requirements of the simulation environment will establish the number and individual performance of the PCs used. Nevertheless, the difference in response time between the economical installation and the performance installation could be in the order of a few seconds [7].Although there is no set of rules for achieving an optimal software distribution when dealing with a customized installation, the following requirements must be met:At least one PC must have two serial ports availableAll PCs  must have network connectivityIt was decided to set up the customized installation depicted in figure 4-1. All PCs were connected together using an Ethernet local area network. The MILESII vest was connected to PC A (the PC loaded with ECC-DBT) via RS232. PC A was connected to PC B (the PC loaded with the ECC-RTI Interface) via null modem cable. The PHS was connected to PC D (the PC loaded with HPS/PHS-RTI) also via null modem cable. ManCasual was installed in PC C and C3s in PC D.4.2 ExperimentsGiven the system setup described in the previous section, patients were generated from all the different sources but MassCasualty, which was used in a separate experiment due to hardware resource limitations. The SAWE laser gun was activated dozen of times setting up all the types of scenarios (bloodloss, anaphylaxis and pneumotorax). ManCasual was activated in both modes, in-line and off-line. The batch file contained a score of entries corresponding to SAWE scenarios with delays ranging from 5 to 100 sec. C3S was activated using all footprint files corresponding to platoon, company and battalion. As soon as the first patient entered the system it was sent to a HPS for treatment. Later patients were sent either to JMSL or to a PHS, if one was connected. Inspection of the physiological attributes proved that the patients were transferred correctly. Manual patient transfer was tested extensively by transferring patients between an HPS, JMSL and a PHS, when available.Figure 4-1: CTPS system set upFor the MASS system a full scenario was encripted. The scenario is a mass casualty incident involving a large chlorine gas leak escaping from a derailed train. It is depicted in figure 4-2. The simulation contains two main components:An incident command component presented on a PC using a simple constructive simulation.A medical treatment component using the PHS providing for hands-on training by first response medical personnel.The scenario is realistic having been created by subject matter experts including a high ranking member of a local fire/rescue department and a nurse, experienced in emergency care with a master’s degree in instructional systems. The sense of the scenario can be seen from the radio and phone messages, some of which are shown for the 35-minute incident in table 4-1. There are enough casualties (about 30) to require triage. Five casualties are represented by the PHS in rapid sequence.TimeCallerStatement0700Female CallerHello? I just heard a loud boom over by the railroad tracks.  My Miss Kitty is real scared.0701DispatchOrange County 412, Check the tracks east of the intersection of OBT and Apopka Road.  A resident called about a "loud boom" from the area.0706DispatchDispatch to all responding units.  Deputy onscene of a multi train car derailment with a possible leaking gas car.  Deputy states that he is having trouble breathing.0708DispatchWindspeed is 7 mph from NE and steady0709E1Engine1 onscene.  Multiple train car derailment.  Possible leak from a pressurized rail car.  All responding units stage at Vulcan Rd west of 424.0710E1Engine1 to dispatch.  Strike a second alarm tactical response.  Plus 4 ALS rescues.  We have multiple patients down with a possible chlorine leak.  Establishing hot zone 600 ft around tanker.0713E1Establish command.  Rescue1 you are triage sector.0715E1Tower1 HazMat1 onscene.0716E1Request law enforcement for traffic control and possible evacuation.0721B1Batallion1 assuming command from Engine1.0721B1Engine4 Tower2 assist with decon.  Batallion2 take over EMS sector.0722B1Engine5 Engine6 Rescue4 Rescue5 Rescue6 Batallion3 HazMat2 onscene0723AC1AssistantChief1 assuming command. Batallion1 is operations chief.  Strike a third alarm; substitute 2 rescues for the 2 engines.0730EMS sectorEMS to command we have approx. 15 patients in treatment area.0735R2Transporting 1 ALS unstable patient to ORMC.Table 4.1: Partial Script for Mass Casualty Incident Audio5. Conclusions and future workWith the inclusion in CTPS of multiple casualty sources, CTPS received a major upgrade which allows it to be used in a diversity of training and analysis environments. This upgrade demanded the review of several CTPS’s design concepts, as well as improvements in algorithmic and implementation aspects, in particular the redesign of the CTPS Executive’s patient allocation algorithm. On the other hand, it showed that HLA has the capabilities to support sophisticated medical simulations. Moreover, with appropriate RTI interface modules, it can be used to integrate a rather disparate variety of simulation types within the medical field. The effort expended in developing a general HLA RTI interface for the CTPS system will reduce the effort required to integrate other medical and non-medical simulations into the CTPS system in the future.Figure 4-2: Chlorine leak starts after derailment. (Note train track and gas plume).Nevertheless, the current set of casualties that CTPS is capable of simulating does not reflect its intrinsic capabilities. The increasing interest in casualties of a chemical or biological nature, either in a civilian or military environment suggests a major upgrade of the CTPS casualty set. Of special interest are those related to biological agents, for example Anthrax and gases such as Sarin and VX.Additional work will improve CTPS performances. The current mass casualty simulation is a proof-of-concept demonstration; in fact the scenario is completely scripted. However, the software which drives it would support interactive real-time simulation and is also HLA compliant. The next logical step for this project is to develop a prototype system which is in fact real-time and interactive and which also provides a variety of user aids such as scenario creation, support for importing terrain databases, etc.ManCasual could be upgraded to provide features ranging from random generation of casualties and repetitive sequences to multiple modules of casualty generation acting independently or interrelated. This would allow trainers to easily design complicated/intense exercises. A sophisticated GUI should be added to depict/edit the sequence of casualties and their source.As for the growing interest in the use of CTPS for the training of massive casualties, an incident script editor/sequencer module should be added in order to implement those kinds of exercises. This module would contain geographical information in order to provide customized and more realistic exercises.Finally, C3S’s simulation components need to become more dynamic to make the use of footprint files easier. Also, future versions of the program should support multiple chemical agents as well as several biological agents.6. References[1]	Petty M., Windyga P.: “A High Level Architecture-based Medical Simulation System”, Special issue High Level Architecture, Simulation, 73(5), pp. 281-287, 1999.[2]	UCF Institute for Simulation and Training: “Combat Trauma Patient Simulator Phase III Final Report”, January 2000.[3]	McLeod Institute: “High Level Architecture: Introduction to the High Level Architecture”, January 1999.[4]	Tekamah: “Finite State Automata as a Model for Casualty Simulation”, 1997.[5]	Meurs W L, Good ML, Lampotang S: "Functional Anatomy of Full-Scale Patient Simulators", Journal of Clinical Monitoring, 13, pp. 317-324, 1997.[6]	Innovative Emergency Management, Inc: “C3S: CTPS Chemical Casualty Simulation User Guide Draft”, September 1999.[7]	UCF Institute for Simulation and Training: “CTPS v3.0 User’s Manual”, January 2000.Author BiographiesPIOTR WINDYGA is a Senior Computer Research Scientist at the Institute for Simulation & Training at the University of Central Florida. He is the principal investigator of the CTPS project. Dr. Windyga has conducted several projects related to the automatic interpretation of medical images, and developed software for high-level image understanding and 3D reconstruction.J. PETER KINCAID is a Principal Scientist and Professor at the Institute for Simulation & Training at the University of Central Florida and a specialist in Human Factors. He currently conducts research in human factors and training systems, and teaches courses in emergency management at UCF. Dr. Kincaid also runs the IST Emergency Services Training Lab.BRAD SCHRICKER is an Assistant Research Computer Scientist at the Institute for Simulation & Training at the University of Central Florida He has been involved with most of the development associated with the CTPS project. His research interests include simulation interoperability, HLA, and virtual reality.KIRAN ANNA is a Research Assistant at the Institute for Simulation & Training of the University of Central Florida. He is one of the software engineers of the CTPS project.TIM JOHNSON is a Research Assistant at the Institute for Simulation & Training of the University of Central Florida. His role in the CTPS project has been to provide support to the development and documentation of the project.MIKEL PETTY is Chief Scientist of the Virginia Modeling, Analysis and Simulation Center of Old Dominion University. Dr. Petty’s research interests are in distributed simulation interoperability; computer generated forces, and applied computational geometry.The Department of Defense’s Live Fire Test and Evaluation (LFT&E) office, under the direction of Mr. James F. O’Bryon, sponsored all phases of the CTPS project. METI Inc. partially funded the third phase. The CTPS project was supervised by STRICOM in the person of Ms. Beth Pettitt. EMBED WPDraw30.Drawing   EMBED WPDraw30.Drawing  