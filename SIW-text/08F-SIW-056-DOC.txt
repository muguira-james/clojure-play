Laser Designation in V-DISLance R. MarrouScience Applications International Corporation (SAIC)12901 Science DriveOrlando, FL 32826 USA(407) 243-3710 (phone) (407) 243-3586 (fax) HYPERLINK "mailto:lance.r.marrou@saic.com" lance.r.marrou@saic.com Mr. Pat Garrity, Ms. Cindi SlepowU.S. Army Program Executive Office for Simulation, Training, andInstrumentation (PEO STRI) 12350 Research ParkwayOrlando, FL. 32826 USA(407) 384-3663, (407) 384-5415 (phone)(407) 384-3611 (fax) HYPERLINK "mailto:pat.garrity@us.army.mil" pat.garrity@us.army.mil,  HYPERLINK "mailto:cindi.slepow@us.army.mil" cindi.slepow@us.army.milABSTRACT: Distributed Interactive Simulation (DIS) is an infrastructure that promotes interoperability amongst various training systems.  DIS provides a satisfactory solution for implementing laser designation, but does not completely support a solution for laser range finding, beaming, or laser pointing.  Additionally, the Designator PDU has fields within it that are nearly unusable.The U.S. Army Program Executive Office for Simulation, Training, and Instrumentation (PEO STRI) Project Manager Combined Arms Tactical Trainer (PM CATT) initiated the Synthetic Environment (SE) Core Architecture & Integration (A&I) program.  This contract is tasked with developing a virtual simulation architecture (VSA) with the goal of providing the warfighter with enhanced training by increasing interoperability between training systems, increasing the reuse of products developed for training systems, protecting the investments made in developing current virtual training simulations, and increasing the adaptability and extensibility of the virtual training simulations that are developed to enable the easy incorporation of new features.  A large segment of the PM CATT virtual domain programs uses DIS, so this standard is important in legacy, current, and future training systems. Establishing a single flavor of DIS that will be used by the training and simulation programs under PM CATT and then communicating the desired changes to the standards community at the Institute of Electrical and Electronics Engineers (IEEE) and the Simulation Interoperability Standards Organization (SISO) is one of the initiatives contributing to resolving the interoperability issues within the U.S. Army virtual domain. This paper details the SE Core VSA solution for laser designation as defined in VSA DIS (V-DIS).  We describe how an exemplary training system would evolve to meet this specification.  We provide a revised PDU structure that offers more capability and fixes the error with the linear acceleration without a velocity.  We offer additional enumerations that support laser range finding, beaming, and laser pointing.  We also suggest a method for localized dead reckoning of the target.IntroductionDistributed Interactive Simulation (DIS) is an infrastructure that promotes interoperability amongst various training systems, whether they belong to the same vendor or not.  It links multiple types of simulations from the constructive, live, and virtual domains, and across different types of networks.The U.S. Army Program Executive Office Simulation Training, and Instrumentation (PEO STRI) Synthetic Environment (SE) Core program is supporting the training of our warfighters by providing a common virtual environment (CVE) that links system and non-system simulations into a fully integrated and interoperable training capability. The Synthetic Environment (SE) Core concept includes the development of a virtual simulation architecture (VSA) responsible for providing the warfighter with enhanced training by increasing interoperability between training systems, increasing the reuse of products developed for those training systems, protecting the investments made in developing current virtual training simulations, and increasing the adaptability and extensibility of the virtual training simulations that are developed to enable the easy incorporation of new features.Through the development and application of the VSA framework, standards, and common products, SE Core is supporting the overarching objective that we "train the way we fight," training in a way that helps ensure mission performance in the contemporary operating environment (COE).  SE Core components will support virtual simulations at home station, Combat Training Centers (CTC), en route to and at deployed locations for training or wartime mission planning and rehearsals.  SE Core is applying an incremental building block approach to the identification and development of key capabilities that represent the highest contributors to the achievement of interoperability and ultimately fair fight in support of combined arms training.  The result of force structure changes combined with the reality of current operations has yielded an environment where the level at which the Army needs combined arms training is now at a much lower echelon (platoon and company level). In order to provide effective combined arms simulation training at this level, virtual training system interoperability and fair fight must be achieved. Some of the key SE Core capabilities that represent the highest contributors to the achievement of interoperability and ultimately fair fight in support of combined arms training include common communication protocols, common Semi Automated Forces (SAF), common environment, common databases, common visual models, common sensor models, and common digital communications. The SE Core mission is consistent with the overarching objective to provide the ability to train the effects of the full spectrum of the combined arms force even when only selected elements of the force are available for training.  This enables repetitive training in a realistic, stress-producing live virtual constructive-training environment (LVC-TE), easily tailored to meet mission-specific training and rehearsal needs for active and reserve components.A large segment of the Project Manager Combined Arms Tactical Trainer (PM CATT) virtual domain programs uses DIS  REF _Ref203302231 \r \h [5]; as such, the evolution of this standard is a key component to the improvement of interoperability in legacy, current, and future training systems. An example of this improvement is the simulation of laser designation.  This paper revises the existing usage of the Designator PDU  REF _Ref170636800 \r \h [3] and adds significant capabilities, based originally on the work by Frank Hill (et al) in PCR 130  REF _Ref203372453 \r \h [7].  This design work was done too late for incorporation into 1278.1-200X  REF _Ref188441213 \r \h [4].Designation FunctionsThe purpose of the Designator PDU has been expanded to include many non-weapons engagement scenarios.  Although a “designator” has a fairly specific, military application, this PDU is useful for other, similar functions (though for our purposes, these will be useful for military-based training).  These additional designation functions are laser range finding, beaming, and pointing.Additionally, in accordance with the draft specification for 1278.1-200X, we’ve clarified the notion of a “designated entity” as being either an entity or an object.  For this change, the Designated Entity ID field of the Designator PDU is now Designated Object ID and “Designator Spot with respect to Designated Entity” is now “Designator Spot with respect to Designated Object.”  This is a forward-looking design change that does not break backward compatibility because Object IDs are unique with respect to Entity IDs. Whenever a simulation application designates a target with a simulated laser designator or designates an entity or spot in the world for laser range finding, laser pointing, or laser beaming the simulation application issues the result in the Designator PDU. Simulation applications that simulate sensors that can detect laser use are made aware of the lasing activity.Designator PDU FieldsThe proposed Designator PDU is shown in  REF _Ref205631188 \h Table 3.1.Table  STYLEREF 1 \s 3. SEQ Table \* ARABIC \s 1 1 Designator PDUField Size(bits)Designator PDU Fields96PDU HeaderProtocol Version – 8-bit enumerationExercise ID – 8-bit unsigned integerPDU Type – 8-bit enumerationProtocol Family – 8-bit enumerationTimestamp – 32-bit unsigned integerLength – 16-bit unsigned integerPDU Status – 8-bit enumerationPadding – 8 bits unused48Designating Entity IDSite Number – 16-bit unsigned integerApplication Number – 16-bit unsigned integerEntity Number – 16-bit unsigned integer16Designator System Name16-bit enumeration48Designated Object IDSite Number – 16-bit unsigned integerApplication Number – 16-bit unsigned integerEntity/Object Number – 16-bit unsigned integer16Designator Code16-bit unsigned integer32Designator Power32-bit floating point32Designator Wavelength32-bit floating point96Designator Spot with respect to Designated Objectx-component – 32-bit floating pointy-component – 32-bit floating pointz-component – 32-bit floating point192Designator Spot Locationx-component – 64-bit floating pointy-component – 64-bit floating pointz-component – 64-bit floating point8Dead Reckoning Algorithm8-bit enumeration8Designator Coding System8-bit enumeration8Designator System Number8-bit unsigned integer8Laser Mode Type8-bit enumeration96Entity Linear Velocityx-component – 32-bit floating pointy-component – 32-bit floating pointz-component – 32-bit floating pointDesignator CodeThe Designator Code has been changed from an enumeration to an unsigned integer to allow usage of real-world designation codes.  This change has little impact except to clarify the field’s usage.  It doesn’t alter the transmission of the field and therefore, doesn’t affect backward compatibility.The Designator Code corresponds to the decimal representation of modified octal numbers used in real-world U.S./NATO designator systems.  Modified octal numbers are those numbers whose decimal representation contain the digits “1” through “8,” and exclude the digits “0” and “9.”  The Designator Code reflects the real-world laser code value (e.g. a real-world designator code of 1738 corresponds to a Designator Code of 1738).  The U.S./NATO designator code range is from 111 to 8888. Non-U.S./NATO designators may use a different designator code scheme (e.g., a Russian laser designator with a Designator Code of 1738 would not represent the same Pulse Repetition Frequency (PRF) code as a U.S./NATO laser designator that was set to 1738.)  A value of 0 is still valid as an unknown code.Designator System NameThe Code Name field has been renamed to Designator System Name to clarify its usage.  This field identifies the name or nomenclature of the designator system; it does not identify the code itself.  Calling it a Code Name is otherwise confusing.Designator Coding SystemA new 8-bit enumeration field was added to the Designator PDU (first 8-bits of the padding field) to indicate the Designator Coding System.  This field differentiates the coding systems, specifically Russian from the U.S./NATO systems (and possibly other systems as the enumeration develops).  In a mixed force environment, it becomes important to determine if a receiving simulation has the same coding system as the sender.  Both sender and receiver may have dialed in the same Designator Code (e.g. 114), but if one has Russian designator equipment lasing a spot and the other has U.S. or NATO designator, tracker, or seeker equipment, the U.S. or NATO receiver will not see the Russian-generated lased spot.  As noted above, this is because the same Designator Code in different Designator Coding Systems generates different pulse repetition frequencies (PRF).If the receiving simulation application does not have the same Designator Coding System, then it discards the PDU (unless it somehow possesses the capability to recognize other coding systems).The Designator Coding System enumeration is shown in the following table.Table  STYLEREF 1 \s 3. SEQ Table \* ARABIC \s 1 2 Designator Coding System EnumerationValueDescription0U.S./NATO1RussianDesignator System NumberA new 8-bit unsigned integer field was added to the Designator PDU (second 8-bits of the padding field, follows the Designator Coding System) to indicate a Designator System Number.  This field differentiates between possible multiple laser systems on the same entity.  When there is only one laser system for a Designating Entity ID, the Designator System Number is set to zero.  Otherwise, each laser designator system will be assigned a unique number to be included in this field. Once established for an exercise, the Designator System Number for each designator system will not be changed for that exercise, regardless of whether it is active or inactive.  Although the multiple systems may have different Designator System Names, it’s possible that they don’t and, therefore might not be readily distinguishable without this field.  It is recommended, but not required, that the Designator System Number be incremented sequentially (starting at 1) for each system in an entity.Laser Mode TypeA new 8-bit enumeration field was added to the Designator PDU (last 8-bits of the padding field) to indicate the Laser Mode Type.  This field identifies the mode of operation for the “designating” laser.Table  STYLEREF 1 \s 3. SEQ Table \* ARABIC \s 1 3 Laser Mode Type EnumerationValueDescription0Other1Ranging2Designating3Beaming4Laser PointingV-DIS has identified four laser modes to indicate the current operation being communicated in the Designator PDU.  Although this information could possibly be attributed by the defined system, it will simplify processing in a lower fidelity simulation that still requires higher fidelity visuals (e.g. laser pointer).The Laser Mode Type is set to Ranging (1) when the Designator PDU contains data related to laser range finding operations. The Laser Mode Type is set to Designating (2) or Other (0) (for backward compatibility) to indicate when the Designator PDU contains data related to laser designation. The Laser Mode Type is set to Beaming (3) when the Designator PDU contains data related to a simulated beaming operation where the laser beam is expected to be visible. The Laser Mode Type is set to Laser Pointing (4) when the Designator PDU contains data related to a simulated laser pointing operation where the lased point shows on the visual scene on the lased object.Dead ReckoningA dead reckoning algorithm cannot be implemented using linear acceleration without linear velocity.  The identification of Entity Linear Acceleration in the Designator PDU is therefore useless unless a mechanism is put into place to also supply the linear velocity.  Because none has yet been introduced, V-DIS recommends changing the Entity Linear Acceleration field to Entity Linear Velocity so that if a minimum of dead reckoning is required then a separate mechanism to supply velocity is not needed.  Despite how drastic this change sounds, it’s actually backward compatible because the existing data field for acceleration is unusable.  To actually support a higher fidelity dead reckoning algorithm, we’ll present a Linear Acceleration Attribute record in section  REF _Ref203371708 \r \h 5.Additionally, V-DIS clarifies dead reckoning of the spot on objects being lased.  If an object is specified as being tracked (designated or lased), then the dead reckoning is relative to the body coordinates of the tracked object using the Designator Spot with Respect to Designated Object field (e.g. DRM 9 FVB).  If no object is being tracked, then the dead reckoning algorithm is based on the Designator Spot Location (e.g. DRM 5 FVW).  This clarification allows dead reckoning of the lased spot on a moving entity using the body axis coordinate system.  Although V-DIS does not have a use case for this functionality (there’s not yet been a defined training value), it seems to be a relatively innocuous clarification.Attribute RecordsIncluding the work in PCR 130  REF _Ref203372453 \r \h [7], we have identified three Attribute records that extend the Designator PDU definition:Designator Angle VectorDesignator Beam OriginDesignator Linear AccelerationAttribute records are included in the Attribute PDU, a mechanism new to 1278.1-200X  REF _Ref188441213 \r \h [4].  One aspect of this usage is the advent of the PDU Status field (formerly 8-bits of padding in the PDU Header), which supports coupled or non-coupled PDUs.  Because the Designator PDU is a state (not transient) PDU, then the Attribute PDU that extends it need not be coupled (per the PDU Extension Rules).  However, we recommend that Attribute PDUs with the Designator Linear Acceleration Attribute Record be coupled to the Designator PDU because the dead reckoning information is obviously time critical.  The Designator Beam Origin and Designator Angle Vector are simply additional state information.Designator Angle VectorThe Designator Angle Vector Attribute record is used to indicate the angle that the laser beam is reflecting off the surface of the spot that is being lased.  The fields for this record are defined as follows:Attribute Record Type.  This 32-bit enumeration specifies the type of Attribute Record. Attribute Record Length.  This 16-bit unsigned integer specifies the total length of the Attribute record in octets. Designator System Number. This 8-bit unsigned integer indicates the designator system number and is identical to the Designator System Number contained in the associated Designator PDU. Designator Angle Vector.  This Euler Angles record indicates the angle between the laser beam and the surface that the laser spot is on. Table  STYLEREF 1 \s 5. SEQ Table \* ARABIC \s 1 1 Designator Angle VectorFieldDescriptionAttribute Record Type 32-bit enumerationAttribute Record Length 16-bit unsigned integerPadding8-bits unusedDesignator System Num.8-bit unsigned integerPadding32-bits unusedDesignator Angle Vectorx-component – 32-bit floaty-component – 32-bit floatz-component – 32-bit floatDesignator Beam OriginThe Designator Beam Origin Attribute record is used to precisely define the location of the origin of a designator laser beam in the sensor head of the equipment, whether carried by another entity or represented as a separate entity.  The fields for this record are defined as follows:Attribute Record Type.  This 32-bit enumeration specifies the type of Attribute Record. Attribute Record Length.  This 16-bit unsigned integer specifies the total length of the Attribute record in octets. Designator System Number. This 8-bit unsigned integer indicates the designator system number and is identical to the Designator System Number contained in the associated Designator PDU. Designator Beam Origin.  This Entity Coordinate Vector record consists of the relative location in x, y, and z components of the origin of the laser designator beam with respect to the entity with which it is associated.Table  STYLEREF 1 \s 5. SEQ Table \* ARABIC \s 1 2 Designator Beam OriginFieldDescriptionAttribute Record Type 32-bit enumerationAttribute Record Length 16-bit unsigned integerPadding8-bits unusedDesignator System Num.8-bit unsigned integerPadding32-bits unusedDesignator Beam Originx-component – 32-bit floaty-component – 32-bit floatz-component – 32-bit floatDesignator Linear AccelerationThe Designator Linear Acceleration Attribute record is used to indicate the linear acceleration of the lased spot relative to acceleration of the local body of the entity being lased.  The fields for this record are defined as follows:Attribute Record Type.  This 32-bit enumeration specifies the type of Attribute Record. Attribute Record Length.  This 16-bit unsigned integer specifies the total length of the Attribute record in octets. Designator System Number. This 8-bit unsigned integer indicates the designator system number and is identical to the Designator System Number contained in the associated Designator PDU. Designator Linear Acceleration.  This Linear Acceleration Vector record indicates the acceleration of the designator beam on the surface that the laser spot is on.Table  STYLEREF 1 \s 5. SEQ Table \* ARABIC \s 1 3 Designator Linear AccelerationFieldDescriptionAttribute Record Type 32-bit enumerationAttribute Record Length 16-bit unsigned integerPadding8-bits unusedDesignator System Num.8-bit unsigned integerPadding32-bits unusedDesignator Linear Accelerationx-component – 32-bit floaty-component – 32-bit floatz-component – 32-bit floatGround TruthThe location of the spot referenced in the Designator PDU must be ground truth data. If dead reckoning is required by the simulation application (or per exercise agreement), then the simulation application modeling the designated spot dead reckons the spot using the dead reckoning parameters published in the PDU (and possibly a coupled Attribute PDU) so that receivers of the Designator PDU can also dead reckon the movement of the spot.SummaryThe SE Core program is working to improve simulation interoperability across the PEO STRI virtual simulation programs.  We’ve presented a design intended to extend laser designation and related functions like laser range finding, beaming, and pointing.  Our work has leveraged significantly off the previous proposal (PCR 130), but we have also included several new capabilities, at least one of which has an immediate use case.ReferencesFaulk, Mark, Richard Fuchs, Jeffrey Todd Littlejohn, Brian Kemper. “A Product Line Approach for the Virtual Domain.” 06F-SIW-041, SISO Simulation Interoperability Workshop, Fall 2006.IEEE 1278.1-1995: “IEEE Standard for Distributed Interactive Simulation – Application protocols”.IEEE 1278.1a-1998: “IEEE Standard for Distributed Interactive Simulation – Application protocols”.IEEE 1278.1-200XD13: “IEEE Standard for Distributed Interactive Simulation – Application protocols”.  Draft 13, under review by DIS PDG.Marrou, Lance, Mark Faulk, Terry Tyson, and Brian Kemper. “Enhancing Virtual Simulation Systems Interoperability through V-DIS.”  07F-SIW-076, SISO Simulation Interoperability Workshop, Fall 2007.Marrou, Lance, Mark Faulk, Stephanie Encarnacion, and Brian Kemper. “Lifeforms in V-DIS.”  08S-SIW-071, SISO Simulation Interoperability Workshop, Spring 2008.Hill, Frank. “Designator PDU Clarification.” PCR 130E.Author BiographiesLANCE R. MARROU is a senior systems engineer at SAIC in Orlando, Fla.  He is currently a lead in the SE Core Architecture & Integration program, developing V-DIS.  Mr. Marrou received his master’s degree in computer science from the University of Central Florida.  He has been working with simulation and training systems since 1992 and has more than 20 years experience in software and system design.PAT GARRITY is an electronics engineer for the U.S. Army Program Executive Office for Simulation, Training, and Instrumentation on the SE Core program. Prior to his involvement with the SE-CORE program, he worked at U.S. Army Research, Development, and Engineering Command (RDECOM), Simulation & Training Technology Center (STTC) conducting R&D in the area of dismounted soldier  training and simulation where he was the Army’s Science & Technology Objective Manager for the Embedded Training for Dismounted Soldiers program.  He earned his B.S. in computer engineering from the University of South Florida and his M.S. in simulation systems from the University of Central Florida.CINDI SLEPOW is the lead systems engineer for the Aviation Combined Arms Tactical Trainer for the U.S. Army Program Executive Office for Simulation, Training, and Instrumentation.  Ms. Slepow received her bachelor's of engineering degree in mechanical engineering from the University of Florida and her master's degree in instructional systems from the University of Central Florida.  She has worked in simulation and training for 15 years, with over 10 years experience in rotary-winged simulation.