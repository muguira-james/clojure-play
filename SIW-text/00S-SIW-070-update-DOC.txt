Toward A Standard Rendering Equation For Intrinsic Earth Surface ClassificationWolfgang BaerComputer Science Dep. Code CSNaval Postgraduate School, Monterey CA 93943831-656-2209, Baer@cs.nps.navy.milWilliam M. CornetteNational Imagery & Mapping Agency14675 Lee Road, Chantilly, Virginia  20151703-808-3461, CornetteW@nima.milShelley Petroy Atmospheric & Environmental Research, Inc.840 Memorial Drive, Cambridge, MA  02139617-547-6207, spetroy@aer.comJessica SunshineScience Applications International Corporation (SAIC)4501 Daly Drive   Suite 400, Chantilly, VA 20151703-814-7759, jess@stillwater.saic.comMichael ShepardDept. of Geog./Earth Science, Bloomsburg UniversityBloomsburg, PA570-389-4568,  HYPERLINK mailto:Mshepard@planetx.bloomu.edu Mshepard@planetx.bloomu.eduEddie JacobsUS Army Night Vision Electronic Sensors DirectorateFt. Belvoir VA703-704-2588ejacobs@nvl.army.milKeywords:Terrain Classification, Remote Sensing, Spectral Signature Modeling, EO/IR ParametersABSTRACT: Previous presentations have outlined the overall goals and approach for the SISO Intrinsic Earth Surface Material Classifier System project currently underway within the Office of Naval Research/SBIR Program.  Recent work has focussed on two aspects of the project: 1) creating the Preliminary Surface Material Standards list and 2) deriving the baseline surface rendering equation needed to translate intrinsic material properties to measured observables.  This paper presents a review of the surface rendering equations, in the wavelength range from the VIS/NIR through the TIR region, used by computer simulation and remote sensing communities. We then examine the advantages and shortcomings of each candidate equation with respect to the following question - How does the candidate equation allow users to create simulated spectral information for a *natural* surface under sensor and environmental conditions typically occurring in low orbit satellite, aerial survey, remotely piloted vehicle, and ground based data sources? Along with the presentation of this equation are the definitions of the intrinsic material properties that act as input to the formula and serve as candidate intrinsic parameters for a standard objective earth surface model.  Lastly we discuss the problem of mapping the equations and parameters used in the remote sensing community, where earth surface measurements take place,  to those used in the computer simulation community, where a large market for realistic reproductions of earth surface images exists.1. BackgroundThe computer simulation community requires the capability to quickly and easily calculate realistic scenes that accurately represent the real world. In order to achieve this capability, a standard database of surface materials characterized by intrinsic physical properties is required.  This database will give simulation developers the ability to create realistic surfaces; complete with expected spectral responses at any wavelengths, observation geometries, and environmental conditions. The goal of our effort is to build the infrastructure for the construction of such an earth surface material database at 1meter resolution. Current databases are woefully inadequate to address the needs of metrically accurate simulation [1].  Vast amounts of source material are available in locally calibrated, project-specific databases and more data are being collected as additional multispectral and hyperspectral systems become operational.  But this material exists in myriad formats, degree of completeness, and levels of data quality and, as a result, almost none of these data are directly usable for enhancing physical realism in computer simulation applications.  Tools for extracting intrinsic properties of material from remotely acquired data are basically nonexistent and the suites of surface rendering tools currently available are limited in scope; in other words, they cover an abbreviated wavelength range or include only a limited set of material types.  The SISO Intrinsic Earth Surface Material Classifier System project [2] will develop the definition of a Standard Surface Material Code (SSMC) which will be used to map the world.  To a modeling and simulation program, such a code acts like a pointer to a list of intrinsic earth surface material parameter values that define the physical and radiometric properties of the surface over a broad wavelength range.  This information will reside in a surface materials standard list - RESOLVE (Radiometric Earth Surface Observables for Land Visualization Events), which includes materials based on the global abundance of naturally-occurring and man-mad materials, their significance (e.g. importance) to a user community, and availability of spectral data sources to support extraction of intrinsic surface properties.  To support additional modeling and testing goals, we will include "non-realistic" materials that are characterized by specific physical or spectral properties generally outside of nature.2. Objective of this PaperIn order to optimize a standard set of material classifications as well as to actually map the world from remote sensing data, the full radiometric sensing problem, graphically depicted in Figure 1, must be solved.Figure  SEQ Figure \* ARABIC 1: Components of the Radiometric Sensing Problem.This problem decomposes down into five distinct components, listed below:Illumination ModelAtmospheric Propagation ModelSurface Rendering ModelThermal Load ModelSensor Model In this paper, we address the properties by which surfaces can be classified and therefore concentrate on the surface rendering model. Such a model consists of a set of intrinsic physical surface parameters, a definition of input energy at the surface, and a set of relationships that are used to calculate the energy emitted from the surface. The basic relationships used to calculate the emitted energy from a surface will be called the “forward” surface rendering model. The “inverse” rendering model will also be required.  In the reverse model, the emitted energy and the input energies are known while the intrinsic surface parameters are calculated.  The inverse form of the surface rendering model will allow us to process remote sensing data into the intrinsic physical surface parameters used to classify 1 meter surface patches. Including the inverse rendering equation as part of the information list pointed to by the SSMC code fixes the mechanism by which the code was assigned.  In turn, including the forward model allows the consistent calculation of emitted energy surface energies from each 1meter patch under multiple viewing conditions and sensor configurations. It is our intent in this paper to review the currently available rendering models in the remote sensing and computer simulation communities and address the question of how the earth measurement results of one community can be transferred and utilized by the other. If we can successfully answer this question we expect to present a standard SISO rendering  equation in the future.  Review of Candidate Surface Rendering EquationsEquations used in remote sensing - The Hapke-Shepard ModelThe surface rendering model generally used by the remote sensing community is that derived from the Hapke [3] radiative transfer model  and the Shepard [4] specular reflectance model; for our purposes, we will refer to this combined model as the Hapke-Shepard model.  The equation(s) derived from this model makes several simplifying assumptions, which we have also adopted.  These assumptions are:The surface is relatively smooth with respect to the wavelength;The surface is in thermodynamic equilibrium, andThe surface is emitting at a uniform temperature.The Hapke-Shepard model was originally derived for barren (rocks and soils) natural surfaces.  At the meter scale, the assumptions listed above are valid for these surfaces.  Vegetation poses a more complex problem, and will be not be addressed specifically in this paper, however, we are actively exploring BRDF-based kernal techniques for modeling vegetated surfaces.Geometric and Radiometric NomenclatureWe begin by describing the geometric and radiometric nomenclature that will be used throughout this paper.Figure  SEQ Figure \* ARABIC 2: Geometric Nomenclature from Hapke[3].Where:i = incidence anglee = emission angle( = azimuthal angle between the planes of incidence and emissiong = phase angle (angle between incidence and emission angles) = cos eo = cos i = single scattering albedoJ = irradiance at the upper surface of the medium;  source is highly collimated  radiation; infinite distance from mediumI = radiance at the  detector = I(i,e,g)(Collimated light (irradiance) J from a source of radiation is incident on the upper surface of a scattering medium.  The normal to the surface is parallel to the z axis, and the incident light makes an angle i with the surface normal.  The light interacts with the medium, and some of the rays emerge from an element of A of the surface traveling toward the detector in a direction that makes an angle e with the surface normal.  The plane containing the incident ray and the surface normal is the plane of incidence, and that containing the emitted ray and the surface normal is the plane of emission.  The azimuthal angle between the planes of incidence and emission is (.  The angle between the directions to the source and the detector as seen from the surface is the phase angle g.  It is defined using the following relationship:cos g = cos i cos e + sin i sin e cos (       eq. 1The plane containing the incident and emitted rays is the scattering plane.  If the planes of emission and incidence coincide (( = 0 or 180o), their common plane is called the principal plane.   Occasionally, the scattering angle ( (the complement of the phase angle) may be used instead of g.The Hapke-Shepard EquationUsing these geometric and radiometric descriptions, the radiometric equation for the Hapke-Shepard model(s) is presented in Equation 2 below.Equation 2 describes the directional radiance emerging from a particulate surface that has been illuminated by a collimated light source.  It includes also the effect of thermal emission from that surface.  The I(i,e,g)(  defined by equation 2 is the radiance ( power per area perpendicular to the direction of travel per steradian in a wavelength band) that would be measured by an airborne or spaceborne sensor without the influence of atmospheric effects.  The first term on the right hand side of equation 2 describes the scattered radiance received by our hypothetical sensor, the second term describes the Shepard specular correction, and the third term describes the thermally emitted radiance. EMBED Equation.3  Eq. 2where:J	is the ground impinging incident solar irradianceis the single scattering albedo of the surface( 	is the albedo factor equal to sqrt(1- w)i	is the incidence angle     0 is cos ie	is the exitance angle       is the cos e.b0	is the amplitude of the opposition effect approximately equal to exp(-( /2)h	is the opposition effect width parameter; a compaction parameter (based on porosity and particle spacing)g	is the phase angle p(g)	 is the average particle angular scattering function:p(g) = (1 - (2)/((1 + 2(cos(g) + (2)3/2)( is the cosine asymmetry factor, ( = (cos((= -(cos g(( is the scattering angleH(x) described multiple scattering and is approximated for isotropic surfaces as: EMBED Equation.3  R	 is the Fresnel power reflection coefficientR=(1/2)[sin2(j - () / sin2(j+()+ tan2(j-()/tan2(j+()](	is defined by sin-1(sin(j)/n)n	is the real part of the index of refractionj	is equal to g/2 P(()	is the slope probability function; it describes the probability that a facet will be oriented such that the specular reflection from this facet contributes to the overall surface specular componentP(() = exp[s tan(()] sr-1s	is a smoothness parameterU((,T)is the Planck Function Intrinsic Parameters in the Hapke-Shepard ModelIn order to calculate the radiance using this theory the following "intrinsic" parameters describing the surface must be known.is the single scattering albedo of the surface; this is the dominant parameterh	is the opposition effect width parameter (a compaction or porosity parameter)( 	is the cosine asymmetry factor (describes the scattering from the surface)n	is the real part of the index of refraction of the surfaces 	is the Shepard smoothness parameter n	is the surface normal vectorThis list of five parameters and one vector represents the intrinsic values describing the surface itself. The other parameters in equation 2 are eitherderived and represented as functionsangles representing the view geometry orthe illumination or input energy load These parameters and radiometric equations represent the "best" theory from the remote sensing community we have been able to identify.  If the Hapke-Shepard model is to be used for defining the earth surface, each surface material code would be defined by explicit values given to these five parameters. By knowing the code assigned to each 1 meter ground patch and equation 2 above the radiant power from the patch can be calculated in a computer simulation.Unfortunately these equations and parameters are not used by the computer simulation community and would not match existing software or allow easy integration with existing modeling databases. It therefore does not represent an optimized set of parameters for intrinsic earth surface classification useful in graphic simulation. Finding the optimized set of parameters to describe a surface patch is one of the main tasks to be performed in our upcoming study.  In section 3.2 below the Equations used in graphic simulation will be presented in order to define the intrinsic parameters suggested by this very different approach to surface renderingEquations used in Graphic Simulation - The OpenGL Lighting ModelThe most popular real time rendering equation is the OpenGL [5] and the similar VRML [6] lighting model. Many computer graphics cards have accelerators specifically designed to implement this equation. It qualitatively captures all the major contributions to reflected light; emission, ambient illumination, diffuse reflectivity, and specular reflectivity. In color systems a triplet of parameters are needed to calculate the intensity (IR,G,B) with which each of the RGB monitor guns is set. These take on values from 0 to 255 and have units of color per pixel. Each RGB component is calculated using an extension of the Phong lighting model [7]. Mathematically, it is given by the following equation.  EMBED Equation.3  Eq. 3In Eq. 3, T(u,v) is the texture modulation as a function of the texture coordinates u,v. Ja, Jd, and Js are the normalized ambient, diffuse and specular light intensities respectively with values between 0 and 1. (a, (e, (d, and  (s are, respectively, the ambient, emissive, diffuse, and specular color intensities of a given scene object, and ( is the shininess. The vectors l, n, and s are as defined in Figure 4.EMBED PowerPoint.Show.8Figure 4: Geometric definitions associated with the OpenGL lighting model.Ignoring the texture modulation function, it can be seen that Eq. 3 qualitatively captures the geometric behavior of emission and reflection from a surface. Quantitatively, it departs from physical reality in several ways. These include:No Opposition or self shadow effectSingle lobe specular reflectionsNon-linear color intensity summationNon Physical zoom intensities These deficiencies can make mapping from physically based models difficult and are discussed later in section 4.  Despite these difficulties the OpenGL equation is a good first order approximation to surface rendering and one might take the approach that the earth surface should be mapped in terms of the parameters directly usable in this equation.Intrinsic Parameters in the OpenGL Lighting ModelIf the OpenGL lighting model were to be used for the definition of earth surface materials, each SSMC code would point to a list of explicit values for the following properties:(a 	ambient material RGB color (e / Ie	emissive material RGB color(d, 	diffuse material RGB color(s 	specular material RGB colorshininessNote that we have divided emissive RGB color by Ie the emissive (usually thermal) input energy intensity since  the parameter (e is simply defined as the emissive color and an intrinsic material property should be independent of the input. As in the Hapke-Shepard model, the surface normal must be estimated and recorded in the 1meter earth database for each earth surface patch but is not required for surface classification. The ambient, diffuse, and specular light intensities (Ia, Id, and Is) as well as the thermal input and the illumination and view vectors are not intrinsic to the surface itself. These parameters are supplied by one of the other models listed in Section 3 above or directly by simulation software at run time.The color components could be used as a means of defining the surface reflectivity. It requires a mapping from the perceptive to the physical scale through the definition of a standard observer (e.g. the human eye). Hence the use of apparent color to define intrinsic properties is possible. The advantage of using OpenGL color specification to define natural surfaces for a 1 meter earth surface model is that once such a map has been built the dominant software used by the simulation community could simply ingest these parameters and render scenes without modification. The disadvantage is that the remote sensing community does not measure the earth surface in perceptive color terms but rather in terms of physical parameters presented by the Hapke-Shepard model. Consequently, it would be difficult to build such a map from available measurements. We seek to bridge this gap in the following section.3.2.1 Self Shadowing Diffuse reflection direction has constant amplitude as a function of the cosine of the incidence angle (the pure Lambertian surface). Many soils, vegetation, and some paints exhibit the opposition or enhanced backscatter effect.  This means more light is scattered back in the direction of illumination than forward in the direction of the specular peak.The major cause of this effect is the self shadowing and obscuration as a function of large scale roughness. OpenGL can partially account for this effect by using a "texture" parameter. The texture simulates shadowing from a rough surface by introducing dark areas where shadows would occur.  However unlike real shadows, these textures do not change when the view angle to the surface changes. Hence one gets a cartoon like look similar to looking at a painting of a surface from the side.  To quantify the importance of the opposition effect we measured the reflected light intensity from eleven natural surfaces (Clean Asphalt Drive, Twist Texture Rug, Rosemary Bush Top, Garden dirt, Mica flecked flat stone, Flat Brown Sand stone, Composite Roof Shingle, Card board, New Cement Roadway, Worn Asphalt Road with oil, and Cut grass) illuminated by the sun at 450 elevation. Measurements were taken in the specular direction and the illumination direction. Only the cardboard and oily worn roadway showed a peak in the specular direction. The bush, grass and dirt showed a peak in the illumination direction that could not be properly rendered with the OpenGL equation.  The rest showed no peak. The OpenGL lighting model is a good approximation for flat manmade single facets but is not adequate for most natural surfaces. Such surfaces are composed of many macroscopic facets and cannot be broken into smaller pieces during the remote sensing measurement process.  At a minimum, additional geometric corrections must be added to accommodate the effects of macroscopic roughness.  	  	Mapping Physical Model Parameters into OpenGLIn order to connect remote sensing measurements with computer graphics simulators, OpenGL subroutine parameters must be mapped to radiometric parameters derived from more physically-based models of scene illumination and viewing.  Similar to the treatment given by Lorenzo et al., [8], we provide below, a discussion of the physical basis of the OpenGL equations and discuss the problems in mapping those to the Hapke-Shepard theory described in previous sections.4.1 Radiance to Color Intensity MappingA fundamental difference between the OpenGL and physically based modeling is that OpenGL uses apparent color intensity, not radiant power. OpenGL equations calculate the color intensity (normalized to the range 0 to 255 by a gamma correction-sensor response, not Hapke’s gamma) of a pixel projecting onto a surface. In physical modeling, the light intensity emanating from the surface is calculated in watts/cm2sr-1. Figure 5 shows the geometry relating the two approaches. 	Figure 5: Geometry of projected pixelThe pixel intensity Ip(e,i,g)(  (in watts per pixel) falling on a pixel of area (Ap) from a surface area (As) is related  to the physical radiance I(e,i,g)( ,calculated by the Hapke equation 2, by the  relationship: Ip(  = I(e,i,g)(( As( Srd(cos(e) = I(e,i,g)(( Ad(Ap /f2		Eq. 4.1-1Where:	As	Area of projected surface (cm2)		     R2( Ap /cos(e) (f2	Srd 	Angular area of sensor aperture		(steradians) equals Ad/R2	Ad	Sensor aperture (cm2) 		Ap	Pixel Area (cm2)	f	focal length of detector lens	Note the slant range R cancels and the area As from which radiation is emitted gets larger by 1/cos(e) as e approaches 90 degrees. We can also see one of the major non-physical aspects of the OpenGL formulation in eq. 4.1-1 when we consider what happens when we physically “zoom in” on a surface element. In a physical device using a zoom lens, the effective focal length gets larger and thus the intensity of radiation falling on a detector gets smaller. In a simulator, the color intensity stays constant.  If one zooms in close enough, the bright color of the surface element simply covers the whole screen.  In the physical world, one runs out of photons. The dependency of intensity on zoom is not physical in the OpenGL formulation.In practice, the pixel intensity is neither recorded at the detector element or calculated by an OpenGL simulator. What is recorded and needs to be calculated is the detector response as a voltage level of an apparent color intensity. A gamma correction is used to relate the pixel intensity to the color intensity as follows.IR,G,B = 0			                              Imin > Ip(IR,G,B = 255( [(Ip(  -Ip,min)/(Ip,sat - Ip,min )] (          Imin < Ip(<IsatIR,G,B = Isat 			                  Ip(>IsatEq. 4.1-2 Where:	Ip,min    Minimum detector intensity(watts)	Ip,sat     Detector saturation intensity(watts)  Detector/monitor response (gamma)In real systems, as shown in Figure 6, the gamma correction is applied at least twice. The first time it is applied when the measured detector response unit (Voltage level) is converted into an intensity measurement (watts).  Measurements are then recorded in watts per detector element. The second time it is applied when the recorded watts are reconverted to a pixel response (voltage level) which we call IR,G,B. In an ideal scene measurement and display system, the gamma functions cancel exactly. The monitor, or photograph, could be taken into the field and placed in front of the natural scene without any discernable difference.  Of course such ideal systems are not realizable but people along the data route make careful and mutually canceling adjustments in order to maintain the natural look of the scene and thus the overall system gamma value of unity is approximated. If the monitor gamma and brightness knob adjustments could be included, the mathematics in this section would be superfluous. Also shown in Figure 6 are two additional alternative data transfer paths from the remote sensing side to the simulation side. The upper path represents the direct measurement transfer of gray shade or color values. This method is used when ortho-photographs are draped over digital elevation models. Draped databases can generate realistic three dimensional scenes when viewed from  high altitude positions. The lower path represents the goal of our project. Here we decode surface radiance into intrinsic parameters describing the surface. Maps or geographic databases of these values are then transferred to the simulation community that can use an encoder module to reconstruct the scene. The advantage of our approach is that ground objective knowledge is preserved and scenes are no longer dependent on the measurement sensor view conditions.Figure 6: Real Sensor Measurement to Simulator System Block DiagramLinear Approximation to OpenGL EquationBoth OpenGL and the Hapke-Shepard physically based model divide the surface radiation problem into diffuse, specular, emissive, and (in OpenGL only) ambient terms. The non-linearity of the gamma transformations makes the term by term summation of the OpenGL physically incorrect.  Color levels do not added linearly. Nevertheless, if we accept some error, it can be done by linearizing the equation 4.1-2 as follows. We now chose an average pixel power value (Jp,av )and a deviation ((Jp ), write the difference and expand around the average:(Ip-Imin) (   =  (Ip,av-Imin +(Ip) ( ~ (Ip,av-Imin )( + ( Ip,av(-1 (Ip.The linearized form of equation 4.1-2 is then.IR,G,B = 255( (Ip,av- Ip,min) ( /(Ip,sat - Ip,min )(             + 255((( (Ip,av- Ip,min) (-1 (Ip)/(Ip,sat - Ip,min )(     eq. 4.1 -3The first term is the expansion point color offset while the second term is linear in (Ip.  If this second term is written as a product of equal power of gamma ,	255(( { (Ip,av- Ip,min) /(Ip,sat - Ip,min ) }(-1 {(Ip/(Ip,sat - Ip,min )}we can substitute the surface leaving radiance because the Ad(Ap /f2  term from equation 4.1-1 appears in both the numerator and denominator of equal powers. 255(( { (I(,av- I(,min) /(I(,sat - I(,min ) }(-1 {(I(/(I(,sat - I(,min )}Here we use ( to refer to the I(e,i,g)( of the Hapke-Shepard equation.  Expanding (I( in terms of the ambient, diffuse, and specular reflectivity ((a,(d,(s), the input irradiance values  (Ja ,Jd,Js) with units of watts/cm2, and the emissive radiance Je gives,	(I(  = (a (Ja+ (d (Jd+ (s (Js+ (Ie     eq. 4.1 -4If we substitute this radiance difference back into the equations above we get the linearized physical equivalent OpenGL equation.IR,G,B =   255( { (I(,av- I(,min) /(I(,sat - I(,min ) }(+ 255(( (I(,av- I(,min) /(I(,sat - I(,min ) }(-1{((a (Ja+ (d (Jd+ (s (Js+ (Ie )/(I(,sat - I(,min )}.              eq. 4.1 –5The (Ja (Jd (Js (Ie values are not absolute values, but rather are the difference from the expansion point. These values go positive and negative. We would like to get a positive value only.  If we offset the linear term by defining new ( variables,(Ja =(Ja - (I(,av- I(,min)/ 4((a(Jd =(Jd - (I(,av- I(,min)/ 4((d(Js =(Js - (I(,av- I(,min)/ 4((s(Ie =(Ie - (I(,av- I(,min)/ 4(Then when (Ja = (Jd = (Js = (Ie = 0 the IR,G,B of equation 4.1-5 becomes zero. Effectively this change of variables defines  the zero level of IR,G,B and eliminates the first term of equation 4.1-5. IR,G,B =    255(( {(I(,av- I(,min) /(I(,sat - I(,min ) }(-1{((a (Ja+(d (Jd + (s (Js+ (Ie )/(I(,sat - I(,min )}.              eq. 4.1 –6With this adjustments we can now formally identify OpenGL parameters with physical  parameters as follows,(a  =  255(({  (I(,av- I(,min) /( I(,sat - I(,min) }(-1  (a          Ja  =  [((Ja)/( I(,sat - I(,min)] 	(d max(l(n,0) =  255(( { (I(,av- I(,min) /( I(,sat - I(,min) }(-1   (d          Jd =  [((Jd)/( I(,sat - I(,min)] (s  max(s(n,0)(= 255(( { (I(,av- I(,min) /( I(,sat - I(,min) }(-1   (s          Js  =  [((Jd)/( I(,sat - I(,min)] (s  = 255(( (I(,av- I(,min) /(I(,sat - I(,min )}(-1 [((Ie)/( I(,sat - I(,min)] 	              eq. 4.1 -7By multiplying the left side terms and adding to get the OpenGL equation on the right we get eq. 4.1-6. This is a linear approximation of a physically correct definition of IR,G,B given in equation 4.1-2.  Note in each case the ( values are defined as the physically correct reflectivity functions connecting input irradiance and reflected radiance in the ambient, diffuse and specular terms.Now that we have term by term correspondence between  the OpenGL equation in physical quantities we can proceed with the rest of the mapping task. 4.2 Ambient Term MappingThere is no direct correspondence between the ambient OpenGL term and the Hapke-Shepard equation. It may be proper to let (a be given by an expression describing a hemispherical-directional (hd) reflectance term (e.g., eq. 10.19 of Hapke [3] for rhd).   This is because an object that is illuminated by sky-shine is hemispherically illuminated (minus the spot at which the sun is situated) and is viewed by a sensor such as AVIRIS or HYDICE in a directional fashion (in addition to the usual bidirectional viewing/illumination scenario of remotely sensed data during cloud-free conditions).  4.3 Specular Reflection MappingWe now consider specular reflection. The open GL shininess parameter is very closely related to the Shepard smoothness P(() = exp[-s(tan(()] sr-1 (eq 16 ref.  [4]). Numerical calculation shows that to within a few percent the following functions are equivalent.   [max(cos((),0)](   =   P(()   =    exp[-.34( tan(()]			eq. 4.3-1Hence we have a mapping between the Shepard specular term and the OpenGL equation (s  =  (s ([max(s(n,0)]( /[255(( {( I(,av- I(,min) /( I(,sat - I(,min) }(-1 ]= R  exp[-.34( tan(()] / 4( eq. 4.3-2 Hence the OpenGL parameter for a specular reflection coefficient, be given by (a  =  255(({ (I(,av- I(,min) /( I(,sat - I(,min) }(-1 (R / 4()                                eq. 4.3-3Note when gamma equals unity this is merely a scale change from the physical range 0 to 1 to the color range 0 to 255. The appearance of the cosine of the view zenith angle ( in the denominator is surprising. Such a term would increase the reflectance of a mirror surface when viewed at grazing angles. This is not realistic. We are also not happy that macro scale features are not included to decrease the specular term due to self shadowing in the Hapke-Shepard formulation. We expect an improvement to this theory will be forthcoming but such an extension is beyond the scope of the current paper.4.4 Diffuse Term MappingThe ambient reflection coefficients of OpenGL, d, should be given by the second term in eq. 4.1-3 where (d is identified from eq. 2 as,  EMBED Equation.3    eq. 4.4-1where B(g) is a term describing the opposition effect; p(g) is the phase function, g is phase angle,  is single-scattering albedo,  and 0 are the cosines of the viewing and illumination zenith angles, respectively, and H(x) is the H-function of Chandrasekar [9].Note that the term  EMBED Equation  in eq. 3 (second term of eq. 4.1-3) does not appear in the Hapke-Shepard formulation. This term converts the incident solar radiation measured in watts/sqcm, where the area is defined as perpendicular to the incoming ray, into the incident solar irradiance, where the area is measured in terms of sqcm of illuminated surface. As the incident angle decreases, the power density decreases by the cosine of the incident angle. Given this definition, the OpenGL diffuse term models a Lambertian surface. Such a surface looks like it has the same color and intensity independent of the view angle. Empirically this corresponds to the first order behavior of surfaces encountered in much of human experience. For this reason it is the basis of the graphics modeling community rendering approach.The Hapke-Shepard equations do not reduce to a Lambertian surface under any assumption of isotropy. This gives cause for concern. The history and derivation of this term [11] indicates assumptions regarding the particle spacing makes this theory more applicable for planetary regolith surface modeling than for 1 meter earth surface applications. As with the specular term, we expect an improvement to this theory will be forthcoming but such an extension is beyond the scope of the current paper.On the other hand the Hapke diffuse term addressed important characteristics of natural surfaces not found in the OpenGL model. The opposition effect is couched in terms of the definitions of (d (i.e., r(i,e,g)) presented as the function B(g) in eq. 4.1-1.  The backscatter or "hot spot" described by the opposition effect is not currently accounted for in OpenGL; the addition of this parameter will allow users to better model vegetation and other particulate surfaces.OpenGL also requires definition of the illumination (or lighting) terms, Ja, Js, and Jd: irradiance incident on scene objects due to ambient lighting, light that will be specularly reflected, and diffuse or skyshine irradiance, respectively.  These terms should be defined as follows:  Js and Jd are synonymous terms and are to be provided by standard bottom of atmosphere radiance values produced by a radiative transfer code such as MODTRAN.  Ja is also to be provided by MODTRAN and calculated as described by Schott [10].4.4 Infra Red MappingFor VNIR/SWIR scene simulation using the Hapke-Shepard theory, we first assume that the self-emission of radiance equates to the OpenGL parameter (e . This parameter is directly related to the thermal emission radiance by a level conversion factor of 255 as defined in equation 4.1-3.  Thus there is essentially no model in OpenGL for thermal emission. It simply provides a place to write the answer. The Hapke theory is not well known among IR workers. Surface temperature does come in through Planck emission function . Emission modeling in terms of temperature, conductivity, and heat absorption would be more useful. Again we feel the Hapke theory requires improvement or adaptation to more useful and familiar forms.  Standard Surface Rendering Equation  SummaryThough the Hapke-Shepard model claims to provide a rigorous physically based approach we have found deficiencies which limit its applicability to 1 meter scale earth surface modeling. Furthermore, it lacks the simplicity and intuitive appeal of the artistically based OpenGL model. Table 1 shows a direct comparison between the two models.Hapke-Shepard contains one illumination source that matches our application. There is one illumination source, the sun, generating both specular and diffuse light. The ambient term from the OpenGL model does not appear in Hapke-Shepard. A more rigorous treatment would suggest this term should be modeled by a full r(i,e,g) term integrated over all directions, however the simple OpenGL approximation should be adequate.The diffuse term differs markedly between the OpenGL and Hapke-Shepard treatment. The difference comes about from the way in which these equations are used.  In computer graphics, round surfaces are approximated by a series of smaller triangles.  Each triangle is given its own surface normal and is assumed to be macroscopically flat. If it is not flat enough, more triangles are added. The shininess parameter then defines the finish of the flat surface (mat, glossy, semigloss, etc) and describes its micro-detail. The highlight intensity of each of these triangles is well represented by the power of the angle between the primary reflected direction and the view angle. This effect is actually represented in the vector form is the OpenGL specular term. In the remote sensing community, surface divisions are seldom based on local geometry. One divides the earth surface into convenient resolution cells (1m2 in our case) within which many facet orientations are assumed to occur.  One does not make the resolution cells smaller to accommodate macroscopic roughness, as in computer graphics, but rather defines a probability function P(() that a facet is oriented in such a way as to reflect into the sensor. The assumption behind the Shepard specular term in eq. 2 is:that the facet is a perfect reflector and the scattering angle ( is the appropriate measure to parameterize the probability function.Neither of these assumptions are true in general. Consequently, mirror like objects (glass, still water, painted surfaces, oily roads) are not accurately represented.Table  STYLEREF 1 \s 5 SEQ Table \* ARABIC \s 1 1:Summary of Rendering Models OpenGL represents the specular behavior of surface finishes well but badly approximates macro roughness with a texture.  Hapke-Shepard describes macro roughness well but fails to consider the finish of most man-made and some natural surfaces. What is needed is a specular term that accommodates both effects. ConclusionStandardization of a surface rendering equation is one of several necessary steps required to provide a mechanism whereby sensor measurements of earth surface patches can be processed into a standard objective earth surface database.  By knowing the equation standards, simulation developers can regenerate sensor signatures used to initially build the world map and, perhaps more critical, can consistently calculate such signatures for other viewing times and conditions.We have presented what we believe to be the best and most accurate surface modeling theory available from the remote sensing community. By comparing this theory with its counterpart in the computer simulation community, we had hoped to build a mapping of terms and parameters. Such a mapping would then form the basis of data transfer from remote sensing to the computer simulation community. Instead, the examination of both approaches shows severe differences and limitations in ambient, diffuse, specular, and emissive terms. More work is therefore required to integrate these two bodies of work.  This paper is part of a series of SISO workshop submissions designed to build the infrastructure for an earth surface material database at 1meter resolution. We recognize the technical compromise inherent in all such efforts and encourage you to submit comments, contributions, and suggestions to any one of the authors.  References [1] Cornette, W.M., Anding, D.C., and Mertz, F.C., Land Data Base Requirements for Environmental  Effects Models for use in DIS, Proceedings of the 12’ DIS WorkShop, Orlando, Fl. 13-17 March ‘95, Position Paper 95-12-019[2] W.Baer, B.Cornette, P. Davis, J. Kellendofer, S. Petroy, J. Sunshine,(1999). Progress on Development of an Intrinsic Earth Surface Material Classifier Fall Simulation Interoperability Workshop, Workshop Paper 99F-SIW-113. [3] Hapke, B., (1993).  Theory of Reflectance and Emittance Spectroscopy.  Cambridge University Press, 455 p.[4] Shepard, M.K., R.E. Arvidson, and E.A.Guinness; (1993) Specular Scattering on a Terrestrial Playa and Implications for Planetary Surface Studies. JGR, vol. 98, no. E10, pgs. 18,707 - 18,718.[5] OpenGL Programming Guide, Addison-Wesley Publishing Company, 2nd Edition, 1997.[6] VRML Lighting model Is available on line at http://www.web3D.org/technicalinfo/specifications/vrml97/part1/concepts.html#4.14[7] Bui-Tuong, Phong, Illumination for Computer-generated Pictures, Comm. ACM, 18(6), June 1975.[8] Lorenzo, M., Jacobs, E., Moulton, R. Jr., and Liu, J., (1999).  Optimized mapping of radiometric quantities into OpenGL.  Proceedings of the SPIE: Modeling, Simulation, and Visualization for Real and Virtual Environments, Faust, N.L. and Kessinger, S. eds., vol. 3694, July, pp. 173-182.[9] Chandrasekar, S., (1960).  Radiative Transfer.  Dover Publications, New York.[10] Schott, J.R., (1997).  Remote Sensing: The Image Chain Approach.  Oxford University Press, Oxford. 394 p.[11] Hapke, Bruce, Bidirectional Reflectance Spectroscopy 1. Theory , Journal of Geophysical Research, Vol. 86, No B4, Pages 3039-3054, April 10,1981ACKNOWLEDGMENTThe authors gratefully acknowledge the support of the following agencies:Naval Research OfficeUS ARMY Texcom Experimentation Center, Fort Hood, TXTRADOC Analysis Command-Monterey, Naval Postgraduate School, Monterey, CA 93943In addition we would like to acknowledge Dr. Joseph Kellendorfer , EnviSense Corp. and Dr. William Farrand 3DI Corp For their excellent contribution in report “Intrinsic Earth Surface Material Classifier” Report N99-034.ABOUT THE AUTHORSWolfgang Baer is a Research Assistant Professor of Computer Science at the Naval Postgraduate School specializing in data capture, high speed algorithms, and parallel computers for real-time battlefield  application.W. Cornette is the Scientific Advisor for Defense Modeling and Simulation at the National Imagery and Mapping Agency.  He is also the Chief Scientist for the Department of Defense Modeling and Simulation Executive Agent for Terrain.Shelley Petroy is a Staff Scientist in the Science Application Studies Group at Atmospheric and Environmental Research, Inc., specializing in thermal infrared analysis of natural surfaces to support sensor design and global climate change modeling.Jessica Sunshine is a Senior Staff Scientist in the Advanced Technology Applications Division at SAIC, specializing in spectral analysis of planetary surfaces to support environmental, military, and planetary science.MICHAEL SHEPARD is an Assistant Professor of Geosciences at Bloomsburg University in Pennsylvania.  His research centers on electromagnetic wave scattering from terrestrial and planetary surfaces.EDDIE JACOBS is Project Leader for Sensor Simulation at the US Army Night Vision and Electronic Sensors Directorate with the primary responsibility for creating credible simulations to support sensor development.Thermal Load ModelSensorModelIllumination Model                              Atmospheric Propagation ModelSurface Rendering ModelJIiegSurface NormalA(Intrinsic surface property: Surface Rendering Modelpixel area: ApAsTERMAmbientDiffuseSpecularEmissiveEFFECTColor ofShadowedSurfaceColor ofIlluminatedSurfaceOpposition Effect orShadow HidingHighlightGlintLights orThermal  emissionOpenGl(a Ja(d Jd max(l(n,0)    NA(s Js[max(s((n,0]( (eHapke-Shepard	NAr(i,e,g)( Jdeq. 12 (1-B(g) )=>1r(i,e,g)( Jdeq. 12 (1-B(g)) =>B(g)Jd RP(()/4(Eq 2 third termeRfwattsCRT PixelMonitor GammaDetector PixelwattswattsOpenGLRenderingColor levelsIntrinsic SurfaceParameters (SSMC)Color levelsColor levels Gamma functionENCODERIntrinsic parametersTo Watts calculationDECODERWatts to intrinsic parameters conversionInverse Gamma Function