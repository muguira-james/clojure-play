Virtual Sensors in a Constructive and Live WorldDonald J. StonerRoger SmithTitan Systems Corp.12424 Research ParkwayOrlando, FL 32826 HYPERLINK "mailto:Phillip.May@GD-DecisionSystems.com" dstoner@titan.com HYPERLINK "mailto:rdsmith@titan.com" rdsmith@titan.comRichard L. PatchGeneral Dynamics Decision Systems12424 Research Parkway, Suite 390Orlando, FL 32826HYPERLINK "mailto:Richard.Patcht@GD-DecisionSystems.com"richard.patch@GD-DecisionSystems.comHYPERLINK "mailto:Richard.Patcht@GD-DecisionSystems.com"Richard.Patch@gd-decisionsystems.comKeywords:C4I, C4I-Simulation, IO-ISR, Constructive Simulation, HLAAbstract: Historically one of the areas lacking in military training simulators is attention to the military intelligence operators, the individuals manning the ground stations, and operating the sensor platforms.  This is a difficult area to simulate, and even more challenging to integrate with modern joint battle space simulators.  This paper discusses the current efforts of the Intelligence and Electronic Warfare Tactical Proficiency Trainer (IEWTPT) to model Iintelligence and Eelectronic warfare sensors and to integrate operator training into large-scale joint training simulations.The imagery and signals sensors in the IEWTPT program deliver information to operators in real intelligence ground stations.  The sensor models must replicate the protocol, format, and content of information provided to operators in a real combat environment.  This includes the presentation of three dimensional imagery, moving target indicator tracks, radar signatures, and spoken audio from radio transmissions.  This information originates from constructive simulations such as theunits in the JSIMS Land Component (formerly known as the Army’s Warfighter Simulation (WARSIM)), live units at the combat training centers (e.g. NTC, JRTC, CMTC), and virtual or entity level vehicles represented by JCATS andlegacy systems such as CBS/TACSIM and JCATS/TACSIM JANUS. To accomplish this, the IEWTPT system includes modules for disaggregation, enhancement, traffic generation, area of interest filtering, velocity filtering, frequency filtering, sensor processing, and efficient data transfer through the RTI.  The representation of the intelligence and electronic warfare sensors is divided into two distinct pieces: pre-filtering, and sensor modeling.  This is done to allow for the timely processing of large amounts of data, to ensure consistent representation among as many as 90 different ground stations and to reduce network traffic between them. This paper describes the elements of the IEWTPT system and software architecture that are relevant to the sensor modeling problem.  The dynamic filters that eliminate unnecessary objects and interactions are also described.  The paper focuses on the logic and method behind splitting the sensor models into two pieces in order to maintain consistency and to minimize network traffic through the RTI1.0  IntroductionIEWTPT uses simulated and live scenario data to stimulate and train IEW system operators.  These operators generate products for all-source intelligence personnel who generate intelligence reports for the battle commander.   IEWTPT is the bridge between live, virtual and constructive simulations, and the IEW operator (Ffigure 1).  It receives live player data from the Combat Training Centers (CTCs) or Homestation Instrumentation Training Systems (HITS).  The UAV IEW operator controls a simulated UAV, and the position data for this virtual UAV is fed to IEWTPT.  Finally, aggregate entity data and other simulation data is received from a constructive simulation like (e.g. WARSIM). [1]The IEWTPT system will stimulate the real world intelligence system operator stations through the Target Signature Arrays (TSA).  The TSAs will be either an embedded or a strap-on training system that connects the real world systems to the IEWTPT system.  The system will support collection on Signals Intelligence (SIGINT), which will includes Communications Intelligence (COMINT) and Electronics Intelligence (ELINT)), Imagery Intelligence (IMINT), Measurement and Signature Intelligence (MASINT), and Human Intelligence (HUMINT).The following is a list of Tthe nine TSAs that theto which the IEWTPT system will connect to:JSTARS Common Ground StationTactical UAV Ground Control StationGUARDRAIL Common Sensor (GRCS) Integrated Processing Facility (IPF)PROPHET (Ground, Control)Improved Remotely Monitored Battlefield Sensor System (I-REMBASS)Tactical Exploitation System (TES) and Division TES (DTES)Aerial Common Sensor (ACS)Airborne Reconnaissance-Multipurpose (ARL-M)Counterintelligence (CI) Human Intelligence (HUMINT) Automation Tool Set (CHATS)This paper discusses the techniques used for modeling virtual sensors in the Intelligence and Electronic Warfare Tactical Proficiency Trainer (IEWTPT).  Figure  SEQ Figure \* ARABIC 1 IEWTPT System ArchitectureThe Constructive SimulationThe constructive simulation that will drive the IEWTPT system is the Joint Simulation System (JSIMS), and more specifically its component simulations JSIMS Land Component, formerly known as the Warfighter Simulation (WARSIM), and the Joint Tactical Intelligence Model (JTIM), formerly known as the WARSIM Intelligence Module (WIM).  Figure  SEQ Figure \* ARABIC 2 Input types and JSIMS source data2.1 Inputs from the Constructive Simulation: Interactions and ObjectsThe JSIMS FOM contains massive amounts of information, objects, and interactions that the Constructive Simulation will use to run exercises.  The IEWTPT system will only focus on a fraction of these.  Specifically, the IEWTPT system is interested in JSIMS Land DA and JTIM published data.  These include objects identified as groups of equipment (FOM class org.land.equip_group), organized command structures and headquarters elements (org.land.unit), and fixed wing aircraft (platform.fwa). IEWTPT is also interested in many of the interaction classes.  Some of these include:  simulation orders for automated forces (event.message.sim_order), various intelligence reports (event.message.intrep_c110, event.message.ussid_tacrep), and other intelligence requests and messages (event.message.intreq_d101, event.message.ussid_tacelint, event.message.ussid_klieglight).  [2]2.2 Disaggregation: Breaking the constructive simulation equipment groups into entity level objects.Disaggregation is a key step in the transfer of data from JSIMS to IEWTPT.  The TSAs need entity level information and JSIMS provides aggregate level units.  Currently, JSIMS aggregates at the platoon level, and places the information in an equipment group object.  This is much more efficient for large-scale exercises, but it is not enough information for intelligence platforms.  When these aggregated equipment groups enter the IEWTPT system from JSIMS they are sent through a FOM normalizer, which converts objects and interactions from the JSIMS FOM into their equivalent object or interaction in the IEW FOM.  It is inside of the normalizer component that the equipment group objects are broken down into individual entities.  These individual entities are then published to the Internal Simulation Infrastructure (ISI) in the IEW FOM format. [2]Historically, disaggregation has been performed using two-dimensional templates for the placement of individual objects.  These templates have been defined by the simulation receiving the aggregate information rather than by the simulation controlling the aggregates.  This has resulted in multiple several different disaggregation patterns within a single federation.  It has also placed objects at new locations unknown to the simulation that controls them, which makes them difficult to target and destroy.  The JSIMS Land Component simulation has improved upon this situation by internally controlling and tracking the disaggregation patterns of its objects internally.  The patterns are included in the aggregate unit’s FOM object and can be used by multiple recipients of the object to disaggregate the unit in exactly the same pattern that is being used within the JSIMS Land Component simulation.Problems Encountered whenin Interactingion with the Constructive SimulationThere are several problems encountered when trying to connect the real- time intelligence platforms to the constructive simulation.  The first has to do with simulation timesimulation-time.  JSIMS is designed to operate on various time scales.  It can function at real timereal-time, half timehalf-time, double timedouble-time, etc….  This is an excellent feature for simulating large-scale exercises, but it poses problems for systems that operate only in real timereal-time.  Currently, IEWTPT is a real-time system and cannot accommodate any time rate variations.  It is certainly possible for IEWTPT to handle cases in which the constructive simulation runs at a rate faster than real timereal-time.  Objects and iInteractions could be queued and acted upon only when real timereal-time has caught up to simulation timesimulation-time.  This is certainly a feasible solution, but how can IEWTPT handle situations when the constructive simulation is running slower than real timereal-time?  The answer is that it cannot.  There is no feasible way for IEWTPT to run faster than the constructive simulation.   The second major problem in interfacing with JSIMS is that the constructive simulation currently does not maintain dead or destroyed objects in the virtual battlespace.  This negatively impacts several areas of intelligence simulation.  The primary one area that concerns IEWTPT is that it makes Battlefield Damage Assessment (BDA) almost impossible.  A TUAV cannot fly over an enemy outpost that has just been shelled and determine the level of BDA if all of the dead and destroyed objects are automatically removed by the constructive simulation.  IEWTPT is handling this situation by maintaining persistence of the dead objects and publishing them to the intelligence ground stations in a dead state.  Figure  SEQ Figure \* ARABIC 3 Software Components for JSIMS/JTIM Constructive Simulation Driver for IEWTPTConnecting to the Real World Training SystemsOne of the key functions of IEWTPT is its ability to connect to real world systems.  It allows soldiers to train on their actual intelligence systems by feeding the simulation data directly into the system through the TSAs.  The IEWTPT system also has the ability to accept feeds from the Homestation Instrumentation Training Systems (HITS) and from the instrumentation feeds at the Combat Training Centers (CTC).  These feeds will connect at the Gateway Workstation and all information will be translated into the IEW FOM.  At this point, the data will enter the Internal Simulation Infrastructure (ISI) and be handled the same as data coming in from the constructive simulation.3.1 The Interaction Between the Real World Training Area and the Simulated BattlefieldThe ability of IEWTPT to connect to the real world systems and the constructive simulation greatly expands the training environment for the soldier operators.  For example,:  oOn a rotation to NTC, a SIGINT operator would set up his systems and collect data on enemy OPFOR units operating in the field and those being simulated within JCATS or JANUS.  This is good training in equipment operation, but not when it comes to collecting on a target language or specific tip- offs.  By connecting to IEWTPT, the soldier can now collect on all real world operations going on as well as all of the data from the simulated battlefield environment.  The IEWTPT system will also potentially allow a soldier to collect information in various target languages and train on all of their Mission Essential Task List (METL). The Combat Training Center and the Homestation Instrumentation Training System The IEWTPT system will also be fielded to the Combat Training Centers (CTC) and the bases supporting future Homestation Instrumentation Training Systems (HITS).  The CTCs and HITS generate digital data about the status of live vehicles on a training range.  The CTC and HITS interfaces are another method in which IEWTPT can connect to the real world training environment.  This system allows real world systems and equipment to connect to the simulation and to feed their operational data directly into the simulation.  This allows the real world systems to interact with the constructive simulation.  Real world sensors can then collect intelligence on simulation entities and interactions just as they would on real world targets.Figure  SEQ Figure \* ARABIC 4 Filtering SequenceThe Filtering ProcessThe primary purpose of filtering is to reduce network traffic to a manageable level, and to ensure that the TSAs only receive entities and interactions that their sensors could potentially detect.  Systems likesuch as JSIMS Land Component have been specified to simulate 100,000 or more units.  This volume is far beyond what would be handled by a single intelligence ground station operator.  Therefore, IEWTPT has been speced by the governmentthe government has specified that IEWTPT should to handle up to 25,000 units.  Joining these two systems together requires that filters exist to identify the units that will be used within IEWTPT. 4.1  The Filter ManagerFilters are created and managed by the Filter Manager component, which is located on the Output GatewayOutput Workstation of the TCC (see Figure 3).  Filters exist in the IEW FOM in the form of an IEW Filter.  The Filter Manager also controls the Combined Area of Interest Filter, a pre-filter on the Gateway Workstation, that acts on raw JSIMS data.  TSAs are not given ownership of their filters, but can request changes to their filters at any time.  The Filter Manager verifies and approves these requests before updating the filter.  The majority of the actual filtering process takes place in the TSA Processors, which are located in the Intelligence Infrastructure on the Intelligence Workstation.  Figure  SEQ Figure \* ARABIC 5 Combined Area of Interest Filter4.2  The Combined Area Of Interest FilterThe Combined Area of Interest Filter is the summation of the coverage of all of the TSA filters.  It is placed on the Gateway Machine Workstation and is set up as a pre-filter to eliminate aggregated objects and interactions if theythat are outside of any possible sensor coverage.  It operates on a geography- only basis, meaning that it only filters objects and interactions on their geographic location only.  Objects and interactions coming into the IEWTPT system from JSIMS are run through this Combined Area of Interest Filter before they are published onto the Internal Simulation Infrastructure (ISI).  This greatly helps to greatly reduce the entity count on the ISI network by throwing out aggregated objects before they ever enter the system.  Figure  SEQ Figure \* ARABIC 6 Gridding OverviewFilter GriddingGridding is implemented in the IEWTPT system to speed up the filtering process and to reduce the processor usage of each TSA Processor.  The entire battlespace is broken up into a series of grids.  The size of these grid squares is variable and is determined and set by the TCC Operator prior to the start of the exercise start.  Determining the proper grid size will directly affect the efficiency of the system.  A grid size that is too large will allow too many entities to occupy one grid square, thus reducing the accuracy of the filtering and increasing the network traffic to each TSA.  A grid size that is too small could result in excessive processing to determine in which grid an entity residesis in, and this could bog down the ISI.Each entity is assigned to a grid square when it is first published onto the ISI.  The ISI then looks at the dead reckoning algorithm of the entity, determines when the entity will change grid squares, and sets up a timer to update the entity when it changes grids.  When the timer goes off, the entity’s grid location is updated, the next grid change is calculated, and a new timer is set.  Whenever an entity’s grid location is updated the Intelligence Infrastructure is notified and it processes the entity.  UBy using this process of updating the entity upon a grid change it allows the Intelligence Infrastructure to operate asynchronously on events rather than polling the ISI on a regular basis.  The TSA Processors also use gridding to convert the TSA’s filters into a series of grids covered.  Rather than going through the processor intensive calculations of whether an entity is inside of a given rectangle or circle each time an entity is updated, the TSA Processor can simply check to see if the entity’s grid is equal to the grid coverage of the filter.  The filter coverage only needs to be calculated once, and any comparison between an entity’s grid and a filter’s grid coverage becomes a trivial comparison.  This allows for a major reduction in processor usage by the TSA Processors.Figure  SEQ Figure \* ARABIC 7 TSA Filters and FootprintsThe TSA- Specific FiltersA TSA- sSpecific Ffilter is used as very basic model of a sensor’s capabilities.  It is not designed to model the sensor exactly;, only to cover the maximum and minimum ranges of a sensors detection capabilities.  The exact sensor detection capabilities will be referred to as its footprint, and a filter will be defined as the sum of all possible footprints for the sensor at the given time and location. Each TSA must have at least one filter to identify the data that in which it is interested in.  This filter can be of three types.  It can be a geographic filter, such as an IMINT sensor on a TUAV.  It can be a frequency filter, which filters on a frequency range as well as geographic boundaries.  This would represent SIGINT sensors.  It can also be a velocity filter, which filters on a velocity range as well as geographic boundaries.  This would represent Moving Target Indicators (MTI).  A TSA may have multiple filters attached to it.  For example, ACS, and TES can collect on multiple types of intelligence at one time using multiple sensors.  This can be represented in the TSA Processor.  Each filter type is created and assigned to a given TSA Processor.  The processor then compares any processed entities and interactions against all of the filters assigned to it.  If the entity or interaction passes any of the filters, the filter set for that object is set to true.  This indicates the object is potentially detectable by the TSA’s sensors, and the object is then sent to the TSA to allow for further detection processing.The main purpose of these TSA- specific filters is to ensure that the TSA receives only objects that are potentially detectable by its sensors.  The ultimate final detection modeling is performed at the TSA level.Dynamic FilteringA dDynamic filter is a special case of filtering.  Filters are, by default, static and do not move unless an update is requested by the TSA.  If this does not provide the functionality the TSA needs, or network traffic is excessive, the TSA can create a special dynamic filter.  This is a filter designed to move with the sensor platform with which it is associated with.  For example, a TUAV could create a dynamic filter that followed the aircraft around as flies through the virtual world.  The filter would follow the platform without any further updates required from the TSA.  One of the benefits of the dynamic filter is that it allows the TSA to create a filter that it doesn’t not need to worry about updating.  The TSA Processor does this automatically whenever the sensor platform changes grid squares.  This also decreases the total number of entities and interactions that a TSA has to deal with at any given time by significantly decreasing the size of the filter.  The biggest drawbacks to dynamic filtering are that it the TSA Processor algorithms requires significantly more processor usage time on the Intelligence Workstation by the TSA Processors, and it increases the number of creates and destroys on the RTI that of which the TSA must keep track of. EnhancementsOne of the major benefits of IEWTPT is that it enhances the data coming in from the constructive simulation.  This enhancement comes in many forms and will be described in greater detail in SISO Fall 2002 paper “Data Enrichment and Enhancement in Support of Interoperability between Combat and Intelligence Simulations”, by Lou Ford, and Dr. Roger Smith. [4]Figure  SEQ Figure \* ARABIC 8 Filter SetsFilter SetThe Ffilter sSet is the final result of all the previous filtering.  The filter set is an attribute that is contained in nearly every federate object, and, tells the Output Workstation which TSAs need to receive this object.  The Output Workstation can then determine on which federations to publish the object on.  The fFilter sSet is a series of bytes with each byte representing a specific TSA.  If a byte is set to “0”, then the object is not within the TSA’s detectable range.  If the byte is “1”, then the object is potentially detectable.  This fFilter sSet allows the system to specify an object’s detectability for up to ninety different TSAs (see Figure 87).  Any time there is a change to an object’s fFilter sSet, an update is published by the Intelligence Workstation.  The Output Workstation can then compare the old fFilter sSet with the new one and determine if it needs to create or delete an object from certain federations.Figure  SEQ Figure \* ARABIC 9 Multiple Sensor ModelingSensor Modeling The sensor modeling is the final stage in the processing of entities and interactions.  This takes place at the TSA level.  At this point in the system, the number of entities and interactions have been greatly reduced by the filtering.  This allows the TSA to concentrate on accurately modeling its sensors and processing the remaining objects.  The TSA will only receive entities and interactions that have passed all of the previous filters.5.1 Potentially Detectable TargetsA Potentially Detectable Target is any entity or interaction that has passed all of the filtering criteria of the Combined Area of Interest Filter, and the TSA Processor for the given TSA.  The entity’s or interaction’s fFilter sSet will have a “1” in the byte location for the given TSA.  This will indicate that it has passed all other filtering, and that it is within the detectable limits of the TSA’s sensors.  The entity or interaction is therefore labeled as a “Potentially Detectable Target”.  These are the targets are whaton which the sensor models will act on.  It is now up to the TSA to determine whether or not the sensor can truly detect the entity or interaction.  Footprints As mentioned in the fFiltering section, a footprint identifies the sensor’s exact geographic detection capabilities.  For example:, the footprint of a TUAV’s camera would be the field of view of the camera.  The footprint of an MTI would be the sweep path of its radar.  A footprint is what the TSA uses to make the final cut on whether or not a target is detected.  A footprint is not simply an overlay of coverage.  It also includes all of the modeling algorithms need to model the sensors.Detection ModelingThe TSA performs its dDetection mModeling by using the sensor footprint.  The footprint is where the actual location of the target is compared to the field of view of the sensor, rather than the previous grid comparison.  It is also where the final algorithms are run on the target parameters to determine if the sensor detects them.  Does the radio transmission fall within the range that is currently being scanned?  Is the power output of the radio strong enough to be detected at this range?  What is the signal- to- noise ratio?  Is the radar dish rotating fast enough to be picked up by the MTI?  These are all questions that are checked and answered at this stage.  From this final comparison, the TSA then decides which targets it willto display to the operator.  The operator then collects the intelligence on these targets, formulates their report, and sends the report through their intelligence chain just as they would on a real world training exercise or mission.ConclusionThe IEWTPT system has the ability to combine constructive simulations with the live training environment and provide the intelligence system operator with comprehensive training that has been previously unavailable.  References[1] May, Phillip. (March, 2002). “Management Overview of the Intelligence and Electronic Warfare Tactical Proficiency Trainer”. 2002 Spring Simulation Interoperability Workshop. Orlando, Florida.[2] Williams, Marcia. (March, 2002). “The Development of an Intelligence and Electronic Warfare FOM to Bridge Constructive, Virtual, and Live Simulations”. 2002 Spring Simulation Interoperability Workshop. Orlando, Florida.[3] JSIMS. “The Joint Simulation System Federation Object Model”. Version 7.1. November 2001.  HYPERLINK "http://www.jsims.mil/" http://www.jsims.mil/[4] Ford, Lou. (September, 2002). “Data Enrichment and Enhancement in Support of Interoperability between Combat and Intelligence Simulations”.  2002 Fall Simulation Interoperability Workshop. Orlando, Florida.Author BiographiesDONALD STONER is a Software Engineer for Titan Systems Corporation working on the Intelligence and Electronic Warfare Tactical Proficiency Trainer (IEWTPT) project. He has developed tools for visualizing simulation events and for networking multiple simulations.  He is a former member of Army Military Intelligence and Special Forces with experience in signals interception, reconnaissance and surveillance.  He is applying this experience by developing simulations designed to train intelligence system operators.RICHARD PATCH is a Senior Software Engineer for General Dynamics Decision Systems, Inc. assigned to the Intelligence and Electronic Warfare Tactical Proficiency Trainer (IEWTPT) project.  He has several years of experience in the military simulation industry including antenna/receiver modeling of On Board Systems (OBS) and Tactical Jamming Systems (TJS) equipment and several other SIGINT simulation systems.  His current tasks on IEWTPT include Filter Manager, Synthetic Natural Environment (SNE), and internal event messages of the TCC system.DR. ROGER SMITH is a Vice President of Technology for Titan Systems Corporation working on next-generation simulation applications and technologies.  His most current work has been on new concepts for simulating information operations and counter-terrorism as well as the development of several new intelligence simulations.  He is also the creator and instructor for a series of military simulation courses that have educated hundreds of simulation professionals. He is the Area Editor for Distributed Simulation for ACM Transactions on Modeling and Computer Simulation and is actively involved in promoting the expansion of the simulation profession.