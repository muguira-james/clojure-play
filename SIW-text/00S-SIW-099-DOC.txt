A Reference Object Model and Supporting Federate for the Ocean, Atmosphere and Space EnvironmentsRobert A. Reynolds, David K. Larson, Victor Skowronski, Steve O. OuztsLitton-TASCReading, MA HYPERLINK mailto:rareynolds@tasc.com rareynolds@tasc.comKeywords:synthetic environment, SNE, object model, FOM, SOM, ocean, atmosphere, space, HLA, RTI, simulationABSTRACT:  The Environment Federation project, sponsored by DMSO, has developed a Federation Object Model (FOM) for the Synthetic Natural Environment (SNE), including dynamic terrain, ocean, atmosphere and space components, leveraging previous efforts in the DARPA Synthetic Theater of War (STOW) program.  This paper presents and motivates the design of the Simulation Object Model (SOM) for the Environmental Data Server (EDS); the EDS is the Federate responsible for the atmosphere, ocean and space segments of the SNE implemented by the Federation.  The EDS SOM supports subscriptions to subsets of the SNE using both the Declaration Management (DM) and Data Distribution Management (DDM) services of the DMSO High Level Architecture (HLA).  It significantly improves on the first SOM developed for the EDS during the STOW program that was designed to allow the simulation to continue to support the DIS protocol.  As a result the original SOM did not take best advantage of HLA interest management servicesWe propose that the EDS SOM could serve as a reference object model for HLA federations including dynamic atmosphere, ocean and space environmental data. By coupling this reference OM with technology components from the Synthetic Environment Data Representation and Interchange Specification (SEDRIS), there is a natural progression from pre-simulation to run-time environmental data modeling, and an enhanced basis for addressing federate interoperability in the environmental domain.  Also described is the relationship between the SOM and the Global-98 Meteorologic and Oceanographic (METOC) database.  The set of environmental state variables selected for inclusion in the Global-98 database, based upon current environmental data requirements of simulations in the STOW Federation and Joint Simulation System (JSIMS), are directly reflected in the EDS SOM. This demonstrates the types of requirements of future users of the DMSO proposed Integrated Natural Environment Strategy (INES) capability.  In particular, it addresses the close potential relationships between INES-produced scenarios and runtime object models.Finally, the paper describes the design and features of a second Federate -- the "EDS Client" -- that was developed under this effort as a tool to remotely test and monitor the EDS, to provide four-dimensional visualization of the reflected environmental state, and to support "cascading" of the EDS with remote transport and diffusion models or higher resolution environment models.IntroductionThe Environment Federation project is a DMSO-sponsored effort which is examining the use of the SEDRIS Data Representation Model (DRM) and Environment Data Coding Specification (EDCS) from SEDRIS in a run-time simulation federation.  The hypothesis is that using the unambiguous syntax and semantics from SEDRIS to describe the run-time data exchanges will make individual environment federates more broadly re-usable in the DoD modeling and simulation community.  The project also serves as a useful demonstrator of the scope and nature of dynamic environment and terrain modeling capabilities that are available today. The FederatesFollowing is a brief description of each federate participating in the Environment Federation, as shown in Figure 1.The Environment Data Server (EDS) is the owner and distributor of the ocean, atmosphere, and space data within the federation.  Acting as a publisher of data, the EDS serves dynamically changing values for key environment data elements to the rest of the federation. Figure  SEQ Figure \* ARABIC 1:  Environment Federation CompositionIn this effort, the Global METOC 98 database is being used as the data source.JointSAF is an entity-level combat simulation capable of receiving and reacting to dynamic environment and terrain data.  JointSAF owns and models all of the simulated entities (e.g., tanks, aircraft, ships) in the federation.  These entities can cause changes to the terrain and can be affected by the dynamic terrain and environment. For example, increased liquid water content near the earth’s surface (aka fog) will reduce visibility and cause moving vehicles to slow down.  Similarly, the creation of craters or ditches in the terrain will hamper vehicle movement.The Dynamic Terrain Simulation is a suite of capabilities that when taken together provides a consistent, causally-correct representation of changes to the terrain and its features, to the rest of the federation.  The DTSim accepts incoming data about the environmental processes and the actions of simulated entities that may cause changes in the terrain (e.g., detonation of ordnance against a bridge).  It then computes the impact(s) of those events on the terrain and its features and publishes that data for use by other federates.ModStealth is a three-dimensional display tool that can accept dynamic terrain data, environment data, and data about simulated entities and render an appropriate 3-D visualization of the battlespace.  A ModStealth exhibits similar interests in terrain and environmental data as virtual simulators and thus is a useful low-cost surrogate for that class of federates.The subject of this paper is the EDS and its simulation object model (SOM), the relationship of this SOM to SEDRIS, and how this SOM supports intelligent routing of potentially large environmental data flows within an executing Federation.  The EDS Client, a second Federate developed under this effort as both a testing tool and as the foundation for building additional environmentally-aware Federates, is also described in this paper.STOW-97 Environmental FOMThe starting point for the Environment Federation development was the STOW-97 Federation [1].  In that Federation dynamic, spatially-varying atmospheric and oceanic data was distributed to JointSAF and ModStealth over a STOW-specific prototype of the High Level Architecture’s (HLA) Run-Time Infrastructure (RTI) known as RTI-s.  To preserve backward compatibility with the Distributed Interactive Simulation (DIS) protocols, the STOW FOM was designed to directly reflect the structure of the DIS Protocol Data Units (PDUs) used by the JointSAF and ModStealth simulations when running under DIS.  This “flat” FOM included only two classes to represent environmental processes and data: one reflecting the structure of the Environmental Process PDU and a second reflecting the structure of the Gridded Data PDU.  An Environmental Process Object (EPO), defined by the attributes illustrated schematically in Figure 2, comprises four distinct environmental representations:A set of atmospheric parameters used to model a spatially-uniform ambient atmosphereA set of atmospheric parameters reported at a surface location and used to model a spatially-varying atmosphere based on live data observationsA set of oceanic parameters for modeling a zoned shallow-water and deep-water ocean surface environment.  Within the shallow (deep) zone, the environment is spatially-uniform.A set of parameters that model the geometry of smoke plumes, vehicle dust, and/or munition effects.These objects share the characteristic that they have small state descriptions.Figure  SEQ Figure \* ARABIC 2: Environmental Process ObjectThe Gridded Data Object (GDO) class, with the attributes illustrated schematically in Figure 3, was developed under the STOW-97 program and subsequently introduced into the DIS 2.0.4 standard.  This class was designed to allow dynamic, spatially-varying atmospheric and oceanic data, represented as rectangular grids, to be distributed over a simulation network to client simulations.  JointSAF  and ModStealth were the first clients for gridded environmental data.  With a packet size constraint of approximately 1500 bytes under DIS, the GDO class design needed to support distribution of partitioned grids, with one partition assigned to each object. The GDO class supports environmental models with large state descriptions.STOW-97 FOM DeficienciesThe STOW-97 FOM was entirely adequate for the Advanced Concepts Technology Demonstration, providing a proof-of-principle that gridded, dynamic METOC data can be distributed, and even edited, at run-time.  However, this FOM suffers from several deficiencies that significantly affect its reuse potential.  These deficiencies are described below, first for the GDO class, then for the EPO class.GDO Class DeficienciesThe Environment Federation project reviewed the STOW-97 Gridded Data object class (PDU) and identified the deficiencies described in the subsections below.Incomplete StandardizationThe GDO class defines the enumerated attributes Field Number and Coordinate System. However the DIS 2.0.4 standard doesn’t define the enumerators for these attributes or the numeric values associated with the enumerators.  As a result the integer values to be used to identify the parameter and coordinate system of a GDO must be coordinated pre-exercise, on a per-exercise basis.  A Federate developed to reflect GDOs must support some form of run-time-configurable mapping between identifiers in the GDO and identifiers used internally by the Federate.Unnecessary ComplexityThe GDO class provides support for objects with an arbitrary number of independent coordinates (axes).  In practice, gridded environmental data is either 2D (e.g., surface-following grids) or 3D (volumetric grids). The GDO class also provides support for grids with an arbitrary number of dependent data values per gridpoint (i.e., grids of general vector fields). In practice essentially all environmental fields are scalar, with the exceptions being wind and current.  At present vertical wind and current components are rarely modeled, and it is argued that it is simpler to represent wind (current) as two scalar fields – the north and east components – than to explicitly include vector fields in the object class representation.  The GDO class further supports rotated grids, defined by three Euler angles representing three successive rotations from a reference orientation.  However, the reference orientation isn’t defined by the GDO class itself (nor by the current DIS standard) and must be coordinated pre-exercise on a per-exercise basis.  Finally, the GDO class explictly allows for the possiblity that the grid associated with a given object may be time-dependent; a boolean attribute indicates whether a subscribed Federate needs to reflect a new grid for a received object.  Either an agreement must be made pre-exercise that no time-dependent grids will be used, or the subscribing Federate must support this complex time-dependency in its implementation; to date (and to the author’s knowledge), time-dependent grid geometries have never been used.Figure  SEQ Figure \* ARABIC 3: Gridded Data ObjectInefficiencyWhen time-dependent geometries are not being used, all attributes of the GDO class with the exception of the dependent data array(s) are static properties of the object and do not need to be updated.  However, consistent with the DIS protocol, the STOW publishing Federate updates all attributes of each GDO object at each update, consuming network bandwidth and burdening subscribing Federates with unneeded data.Limited Use of HLA Interest ManagementAs a result of the dual-support requirement for DIS and HLA, neither the STOW FOM nor the STOW Federates take significant advantage of the interest management services of the HLA: the Data Declaration Management (DM) and Data Distribution Management (DDM) services.  If any STOW Federate requires a specific environmental state variable (e.g., gridded visibility), then all Federates received this data, regardless of whether that Federate requires this data. Despite the fact that  large grids are generally partitioned, without the use of DDM (i.e., geospatial filtering), gridded data objects must be created and updated for the full horizontal and vertical extent of the exercise playbox, regardless of where the entities that require this data are located.OpacityThe GDO class models an N-dimensional rectangular grid of M-vector data, versus a specific environmental phenomenon. In fact, the only attribute of the GDO class that is relevant to the natural environment is the State Variable Enumerator (see Fig 3).  This results in a FOM that is relatively “opaque” with respect to the types of environments that it is capable of modeling.  A Federate developer cannot determine from the STOW FOM whether, for example, this FOM supports clouds, or precipitation, or ocean currents.  Viewed as a Simulation Object Model (SOM) for the STOW publishing Federate (i.e., the TAOS Distributor [1]), the SOM doesn’t provide  information on what the Federate is capable of modeling.  Hence, the FOM/SOM does not provide the information required to determine whether or not the publishing Federate can be reused in other environmentally-aware Federations, or how to develop a new Federate to interoperate with the STOW publisher.AmbiguityIn summary, the GDO class is extremely flexible, in that it can be used to update/reflect a very large class of data types potentially useful to distributed simulation, but it is inherently ambiguous, in that it is not possible to determine from the object model what environmental phenomena a publishing Federate is capable of modeling.  It is also not possible to determine from the object model which specific gridded representations supported by the model (coordinate systems, rotations, dimensionalities, time-dependencies) are actually supported by a given Federate implementation.  A primary goal of the Environment Federation FOM development is to remove these ambiguities and to establish a SOM that directly reflects the modeling capabilities of the associated Federate.EPO Class DeficienciesThe Environment Federation project reviewed the STOW-97 Environmental Process object class (PDU) and identified the deficiencies described in the subsections below.Representation as UnionThe primary deficiency with the EPO class is that it combines multiple, independent environmental representations into a single class.  This organization defeats any attempt to use Declaration Management to subscribe to a subset of the specific representations modeled by the class.  A Federate interested only in surface weather observations will also receive objects conveying ocean surface conditions as well as all objects modeling smoke plumes or dust clouds; the discriminant attribute of each object received must be checked to see if that object is of interest to the Federate.Ephemeris Time ModelThe JointSAF and ModStealth ephemeris and illumination models are based on an EPO class attribute that encodes a calendar date and time, accurate to one second, in Universal Time Coordinated (UTC).  For historical reasons, this attribute is associated with the uniform atmosphere representation.  As a result, in an exercise using a gridded atmospheric model the EPO object class must also be published, with the uniform atmosphere variant selected, in order to support the ephemeris and illumination models.  Subscribing Federates must be configured or programmed to ignore the uniform atmospheric attributes, other than ephemeris time, in this case. Similarly, to support an exercise requirement for both an illumination model and a uniform ocean surface model, two EPOs must be updated and reflected independently – one conveying current ephemeris time and second conveying current ocean surface conditions.Ocean ModelThe JointSAF and ModStealth ocean model represents uniform surface conditions in a shallow water zone and a deep water zone.  Shallow water is defined at any location where water depth is less than 3 meters.  The model is intended for use over small geographic extents of coastline (e.g., a specific beach associated with a Marine Corps objective) or where the land-sea boundary is approximately linear over relatively large distances.  To support larger playboxes including peninsulas and islands, the representation quickly becomes inadequate.  One approach to extending the model is to interpret the shallow- and deep-water representations as observations of conditions made at an ocean surface location (by either a real or virtual observer).  Multiple objects could be “placed” and updated by a publisher to provide coverage of extended shallow- and deep-water areas.  A deficiency of the EPO class is that by combining shallow- and deep-water representations into a single object class, it is not possible to independently “place” shallow and deep water observers. Since the requirements for placing ocean surface observers are very different for shallow water, whose surface state is driven by local bathymetry, beach slope and angle, than it is for deep water, a better model would decouple the shallow and deep water environments.Development of the Environment Federation FOMFOM development begins with the identification of the Federates that will participate in the Federation and the development of a Simulation Object Model (SOM) for each Federate.  The SOM defines the objects that an individual Federate can publish and subscribe and the interactions it can send and receive.A shared characteristic of the STOW Federation and the Environment Federation is that the atmosphere, ocean (and space) environments are modeled by a single Federate, known as the TAOS Distributor in former and the Environment Data Server (EDS) in the latter. This Federate owns the state of the environment, and updates this state over time.  At present, no events occuring during the simulation result in any change to the state of the published environment; however, an exercise manager may act as “the hand of god” and make run-time changes to the published environment.The EDS is designed to read the state of the environment from a database built pre-exercise.  To ask what environmental phenomena the EDS can “model”, and which should be reflected in its SOM, is equivalent to asking what the EDS’ database contains.  The approach used in STOW, and reflected in the GDO class, is that the database could contain essentially any gridded environmental state variables.  The Environment Federation, with the goal to develop an unambiguous FOM, based the EDS SOM on the contents of a reference database: the Global-98 METOC database [2].The Global-98 database was chosen as the reference database because the environmental data contained by it represents the union of the requirements of two large, environmentally-aware simulation programs: the STOW program and the Joint Simulation System (JSIMS) program.  The contents of the database are well-defined and documented [3]. Table 1 lists the atmospheric state variables contained by the database along with a subset of their documented attributes.  Similar tables exist in [3] for the ocean-surface and ocean-volume environments.  While the Global-98 database doesn’t include data in support of the space environment, work done in 1998 and 1999 under the sponsorship of the Space Warfare Center [4] has extended the capabilities of the EDS to support space environmental modeling, and the EDS SOM reflects these additions.StateVariableDefinitionUnits  Data TypeRangeAccumulated PrecipitationPrecipitation rate integrated over the last model timestep and initialized uniformly to 0.0 at the start of a ScenariommReal0226.9Air TemperatureAmbient temperature of air at a pointdeg C Real-96.1547.88Cloud CoverThe areal fraction of the grid cell associated with a point that is covered by clouds, as seen from abovepctReal0100Cloud BaseHeight of cloud base above MSLmReal021,636Cloud TopHeight of cloud top above MSLmReal10025,337Cloud ThicknessDistance between cloud base and topmReal1006238Cloud TypePredominant cloud type over the grid cell associated with a pointnoneEnumTable 2-13Cloud PhaseLiquid/solid disposition of the cloud water contentnoneEnumTable 2-13Cloud Liquid Water ContentLiquid water content of a unit volumegm/m3Real00.41Cloud Average Drop DiameterAverage diameter of cloud water dropsmReal810Duct Height (Surface)Height above the geoid of the effective ceiling of a radar duct formed by  moisture trapped by  a low altitude temperature inversion mReal00Duct Intensity (Surface)A dimensionless, enumerated value indicating the strength of a surface radar duct.noneRealTable 2-13Duct Height(Evaporative)Height above the geoid of the effective ceiling of a radar duct formed by a rapid decrease in humidity just above the sea surface.mReal1919Duct Intensity(Evaporative)A dimensionless, enumerated value indicating the strength of an evaporative radar duct.noneRealTable 2-13Dewpoint DepressionThe positive difference in degrees between the air temperature and the dew pointdeg CReal0.052.4Extinction Coefficient(Visible Band)Coefficient of spatial attenuation of visible light as defined by Beer’s Law, and valid at a pointkm-1Real0.10.5Fog CoverThe areal fraction of the grid cell associated with a point that is covered by ground fog, as seen from abovepctReal0100Fog ThicknessHeight of top of fog bank relative to ground; fog base is assumed to be at ground levelmReal039Freezing HeightLowest height above MSL at which air temperature drops below freezingmReal06483Haze TypeSpecifies an atmospheric condition for which optical properties have been measured; as recognized by LOWTRANnoneEnumTable 2-13Lifted IndexAtmospheric stability index used as a predictor of thunderstormsnoneReal-14.655.0Precipitation RateRate of accumulation of precipitationmm/hrReal0.037.8Precipitation TypeType of precipitationnoneEnumTable 2-13Precipitation PhaseLiquid/solid disposition of the precipitable waternoneEnumTable 2-13Pressure (at MSL)Air pressure at the surface, extrapolated to mean sea level over landmbarReal928.81068.8Relative HumidityPercent of maximum absolute humidity at a pointpctReal0100Visibilityaka Meteorological Range -- a measure of visibility based on Beer’s Law and related to the Extinction Coefficient by Koschmeider’s RelationkmReal6.030.0Wind U ComponentComponent of wind vector resolved along local East, positive eastm/secReal-60.81111.44Wind V ComponentComponent of wind vector resolved along local North, positive northm/secReal-78.1379.72Table  SEQ Table \* ARABIC 1: STOW and JSIMS Atmospheric State Variable RequirementsThe object classes appropriate to modeling the data content of the Global-98 database emerge naturally when the state variables listed in Table 1 (for the atmospheric environment) are grouped on the basis of the phenomena that they describe.  Figure 4 illustrates some of these groupings for the atmospheric environment.  A class hierarchy was designed to break the ocean, atmosphere and space environments out into separate sub-hierarchies, and to further differentiate on the basis of the spatial dimensionality of the environmental data modeled by the class: 0D, 2D or 3D.  The full EDS SOM is shown in Figure 5 as a screen capture of the Object Model Development Tool’s (OMDT’s) Class Table View.Figure  SEQ Figure \* ARABIC 4: State Variable GroupingsAdvantages of the EDS SOMThe EDS SOM was designed to solve as many of the problems identified with the STOW FOM as possible, as described in the subsections below.Explicitly Modeled PhenomenaThe class hierarchy clearly identifies the data objects that the EDS is capable of modeling (when provided with a database with the same attribution as Global-98).  A Federate developer knows what he can (and can’t) expect from the EDS for dynamic environmental data.Simplified Grid RepresentationThe EDS SOM defines the Complex Data Types shown in Figure 6 (a screen capture from OMDT). Vector-valued grids are not supported.  Two types of dependent data are modeled: real and enumerated.  Horizontal axes are uniformly spaced while vertical axes support non-uniform spacing.  Use of these data types in defining class attributes greatly reduces the grid geometries that a subscribing Federate must anticipate receiving.  The SOM defines which grid representations are used for each modeled phenomenon.Standardized State Variables, Enumerations, and Coordinate Systems Where possible, the SEDRIS Data Representation Model and Data Coding Standard were used to define state variable names (and associated definitions via the SOM’s Lexicon), coordinate system identifiers, and enumerators for enumerated state variables such as Cloud Type, Precipitation Type and Sea State.  All identifiers, including their numeric values, are documented within the SOM, as required by the HLA.Use of Static AttributesThe grid geometry of all objects in the FOM is time-independent and enforced by using the value static in the SOM’s Attribute Table.  The EDS updates these values only once unless an update is requested by a late-joiner or a re-started Federate.Support for DM-Based Interest ManagementThe EDS Federate was re-engineered under the Environment Federation project to be fully HLA compliant and to support the latest DMSO release of the RTI: V1.3R6.  A subscribing Federate may indicated interest in a subset of the attributes of a given class, and the EDS will update only the attributes that at least one joined Federate has declared interest in.  As indicated in Figure 7, which shows a portion of the Attribute Table for the EDS SOM, Complex Data Types are used to represent individual state variables (e.g., Cloud Cover).  A Federate subscribing to these attributes will receive the dependent data for that state variable only.  For example, a Federate interested in only the geometric properties of a cloud layer may subscribe to the subset Cloud Cover, Cloud Base, Cloud Top and Cloud Type, while a Federate interested in cloud optical properties may subscribe to the subset Cloud Liquid Water Content, Cloud Average Drop Diameter and Cloud Thickness.  Each Federate receives updates to only the attributes (state variables) that it subscribes to.Support for DDM-Based Interest ManagementThe EDS Federate was also re-engineered to support the use of DDM, allowing subscribing Federates to declare interest in one or more spatial regions (rectangular cells defined on latitude-longitude-altitude coordinates) and to receive updates to gridded objects only within those regions.  The EDS Federate supports a configurable scheme for partitioning the full gridded environment along both the horizontal (lat/lon) and vertical axes.  Partitioning can be configured to meet the requirements of a particular exercise, for example, to support separate subscriptions to near-surface and upper-air weather.  An airborne GPS receiver model may subscribe to ionospheric electron density for its field-of-view, and update this subscription over time to reflect changes in aircraft position.Figure  SEQ Figure \* ARABIC 5: EDS Simulation Object ModelFigure  SEQ Figure \* ARABIC 6: Complex Data Types Used by EDS SOMFigure  SEQ Figure \* ARABIC 7: Portion of Attribute Table for EDS SOMUniform and Observed Atmosphere ModelsThe EDS SOM provides a distinct object classes for modeling uniform atmospheres and atmospheric observations (as well as for ephemeris time and the ocean surface – see below) solving the problems associated with the use of a union in the EPO class.Explicit Time ModelThe problems with the STOW model of ephemeris time are solved by modeling time separately from any other environmental process or data.  The EDS SOM also places the Historical Valid Time attribute of the GDO class into a separate class.  The EDS updates ephemeris and historical time independently of its updates to other object classes.Observed Ocean ModelThe EDS SOM explicitly models the ocean surface representations included by the EPO class as observed conditions associated with a specific ocean surface location.  Two classes of  “observer” objects are defined, one for shallow water (LittoralObserver) and one for deep water (OpenOceanObserver).  This model is still used to support the JointSAF and ModStealth zoned-uniform ocean surface model, but naturally extends to support multiple, independent, deep- and shallow-water observation points.The EDS FederateThe EDS Federate, a re-engineered version of the TAOS Distributor, is an application developed to run on the SGI IRIX6.5 platform.  It is integrated with the V1.3R6 release of the RTI. It provides both a command-line interface and a Graphical User Interface (GUI).  The main configuration interface for the EDS is shown in Figure 8.  This interface provides functions to:Select a database, and a scenario within this database, to be the source of gridded environmental data objects for the exercise.Select a subset of the object classes in the EDS SOM to be published during the exercise.  The GUI indicates whether or not all of the attributes of a class are supported by the selected database.Specify the coordinate systems and spatial grid geometries to be used for each environmental regime via the dialog shown in Figure 9. The user chooses whether or not DDM is to be supported, and if so how to partition the gridded environment.Specify the initial Ephemeris Time and Historical Time values, the simulation rate, and the environmental update interval via the dialog shown in Figure 10.Specify the location within the database to be used as the reference location for the Uniform Atmosphere publication (via a graphical interface not shown).Specify the locations within the database to be used as observation points for the LittoralObserver and OpenOceanObserver publications (via a graphical interface not shown).Figure  SEQ Figure \* ARABIC 8:  EDS Main Configuration InterfaceThe EDS Client FederateNot all of the environmental objects defined by the EDS SOM are subscribed to by JointSAF and ModStealth.  In particular, JointSAF and ModStealth do not currently support gridded ocean data or space data.  To support remote testing and troubleshooting of the EDS, a second Federate was developed under the project known simply as the EDS Client.  The EDS Client is able to subscribe to all of the classes published by the EDS, or to any subset of these classes. Additionally, the EDS Client provides functions to:Visualize the  client’s reflected environment in three-dimensions.  The visualizer can be used to dynamically track the most recent EDS update or it can be used to look at data received earlier in the exercise.Create a local database containing the reflected environmental data.Subscribe to selected attributes of classes in the EDS SOM to test DM-based interest management.Subscribe to gridded objects over selected geographical regions to test DDM-based interest management.Figure  SEQ Figure \* ARABIC 9: Spatial Grid Configuration InterfaceFigure  SEQ Figure \* ARABIC 10: Temporal Grid Configuration InterfaceIt is envisioned that the EDS Client application will serve as a reusable component for developing Federates that require environmental data but cannot afford a dedicated RTI interface, as well as for Federates that model higher-resolution environmental phenomena or that run transport and diffusion algorithms.  The latter category of Federates are themselves environmental data producers, and using the EDS Client as a building block one can imagine a chain of environmental models with low resolution, wide-area models providing input to higher-resolution, local-area models in a cascaded, distributed architecture.References[1]	D. A. Whitney: “TAOS: Dynamic METOC Environmental Simulation Services”, TASC Technical Report TR-07601-10, Final Technical Report to the STOW-97 program, 30 January 1998[2]	P. A. Birkel, et. al., “Breaching the M&S METOC Operational Barrier: The Worldwide Low-Resolution METOC Database”, Paper 99S-SIW-015, Proceedings of the Spring 1999 Simulation Interoperability Workshop, March 1999[3]  Reynolds, R. A. et al., “Global METOC Database    Attribution – Final Revision”, 1 October, 1998.[4]	R. A. Reynolds, et. al., “TAOS in Space”, Paper 99S-SIW-101, Proceedings of the Spring 1999 Simulation Interoperability Workshop, March 1999Author BiographiesROBERT A. REYNOLDS is a Principal Member of the Technical Staff at TASC and has been the system architect and lead developer for TAOS through the STOW-97/98 program, the PSM+ program, and the ongoing EnviroFed project.  His primary professional interests remain focused in the areas of software engineering, object-oriented modeling, visualization, distributed simulation and synthetic environments.  He has a BS degree in Physics from the Massachusetts Institute of Technology and an MS degree in Nuclear Engineering from Carnegie-Mellon University.DAVID K. LARSON is a member of the Technical Staff at TASC and  has provided development support for TAOS though the STOW 98 program, the PSM program and the ongoing Environment Federation project. His primary professional interests are in the areas of software engineering, visualization and object-oriented modeling. DR. VICTOR SKOWRONSKI is a Senior Member of the Technical Staff at TASC, where he investigates terrain representation for CGF systems.  Prior to joining TASC in 1996, he did research in solid modeling at Rensselaer Polytechnic Institute, where he also earned a PhD in Computer Engineering. Victor earned a M.E. and a B.E. in Electrical Engineering from Stevens Institute of Technology. He is a licensed Professional Engineer in New York and Massachusetts.STEVE O. OUZTS is a retired US Air Force Colonel and has over 25 years experience in meteorology, space operations, modeling and simulation, and remote sensing. He has a B.S. from Auburn University, an M.S. in Atmospheric Dynamics from the Naval Postgraduate School, and an M.B.A. from the University of Nebraska.  He has been the principal investigator and project manager for the DARPA-sponsored JSIMS Environmental Tailoring Services (JETS) project and the recent project manager on the Total Atmosphere Ocean Space (TAOS) Environmental Services contact.   Under that contract, he has become involved in the TAOS and Environment Federation efforts.   Specifically, the subset of the FOM that models the atmosphere and ocean environments Models of the space environment may eventually require introduction of additional vectors, e.g. magnetic fields. Follow-on funding for FY00 is in place to migrate the EDS Federate to Linux and possibly Windows-NT.PAGE  PAGE  1