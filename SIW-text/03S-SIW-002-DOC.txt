The Command, Control, and Communications (C3) Driver FederationDonald H. TimianNorthrop Grumman IT5502 Leesburg Pike, Suite 1200Falls Church, VA  22041(703) 695-3040 HYPERLINK "mailto:dtimian@northropgrumman.com" dtimian@northropgrumman.comMarty ArnwineScience Applications International Corporation3465-B Box Hill Corporate Center DriveAbingdon, MD  21009(410) 278-1495 HYPERLINK "mailto:arnwine@dtc.army.mil" arnwine@dtc.army.milThomas M. KelsoPEO-STRI12350 Research ParkwayOrlando FL 32826(407) 384-3863 HYPERLINK "mailto:thomas_kelso@peostri.army.mil" thomas_kelso@peostri.army.milRobert D. AaronArmy Test and Evaluation Command4501 Ford AvenueAlexandria, VA  22302(703) 681-2744 HYPERLINK "mailto:aaronrobert@atec.army.mil" aaronrobert@atec.army.milKeywords:ABCS, C4ISR, COE, M&S, M&S-to-C4ISR, Re-useABSTRACT:  In January of 2001, the Deputy Under Secretary of the Army for Operations Research (DUSA-OR), together with the Army’s Military Deputy for Acquisition and the Army’s Chief Information Officer (CIO), tasked the Army Test and Evaluation Command (ATEC) and the Simulation, Training, and Instrumentation Command (STRICOM; now Program Executive Office for Stimulation, Training, and Instrumentation or PEO-STRI) to develop a standard Army Command, Control, and Communications (C3) Driver to be used initially by the Army’s Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) system developers and testers and, eventually, the Army’s trainers also.  This paper provides:  1) an overview of the Army’s C3 Driver program (a tool that stimulates Army Command and Control (C2) systems and can “load” its digital communications systems), 2) a description of the C3 Driver federation approach, and 3) the “Road Ahead” for C3 Driver.1.	IntroductionTo help minimize costs, Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) systems need to be stimulated by simulations during their development, testing, and training (both individual and collective). [13]  Regrettably, because reuse, standardization, and interoperability were often not key design criteria when these stimulators were developed, most of these drivers only link a specific simulation to a specific C4ISR system.  Further, they typically handle only a small sub-set of the standard C2 messages or data the “target” – or stimulated – C4ISR system can accept and/or the simulation can pass. [14 & 15]In 1998, the Army Model and Simulation Office estimated that the Army spent just over ten million dollars to maintain limited interoperability between its suite of analytical and training simulations and its division-and-below Command and Control (C2) systems; specifically, the Army Battle Command System (ABCS).  Obviously this large annual outlay of funds, and limited interoperability achieved, raises the question, “Why can’t there be just one interface or driver?”The Command, Control, and Communication (C3) Driver is a program established by Senior Army Leadership in response to this question.  It is a federation of simulation, stimulation, data collection, data reduction, and analysis tools being developed by the Army Test and Evaluation Command (ATEC) and the Stimulation, Training, and Instrumentation Command (STRICOM; now Program Executive Office for Simulation, Training, and Instrumentation or PEO-STRI) to stimulate the Army’s C2 systems and “load” its digital communications systems (e.g., the Single Channel Ground and Airborne Radio System (SINCGARS), the Enhanced Position Location Reporting System (EPLRS), the MSE (Mobile Subscriber Equipment) system, etc.).This paper provides an overview of the C3 Driver effort and is organized as follows.  Section 2 will describe how the Army tests C4ISR systems.  Section 3 will provide an overview of the C3 Driver program and its management team.  Section 4 will discuss why the program elected to use a federation vs. a “one size fits all” approach.  Section 5 will describe the Phase I C3 Driver Federation.  Section 6 will briefly describe the three Training and Doctrine Command (TRADOC) standard scenarios C3 Driver is using.  In addition, Section 7 describes the “Road Ahead” for the C3 Driver with respect to supporting the Army Battle Command System (ABCS) version 7.x build.2.	BackgroundFigure 1.  Army C4ISR Software Testing and IntegrationAs shown in Figure 1, the Army currently tests its C4ISR systems at the Software Component, System, Integration, and System-of-System levels.  At the Software Component level the contractor developing the C4ISR system tests individual computer software components (e.g., the C4ISR system’s Graphical User Interface).  At the System level the contractor tests the complete system coupled with available Common Operating Environment (COE) foundation products [2] and/or Army Common C4I segments (e.g., Microsoft Word( coupled with the Windows 2000 Operating System().  At Fort Hood’s Central Test Support Facility, the latest COE and Army Common C4I Segments are integrated with the C4ISR system and tested.  Lastly, at the Systems-of-Systems level soldiers operate the fully integrated C4ISR system in a realistic Joint combat/full-up Operational Test (OT) environment.At each of these levels, as well as when the C4ISR system is integrated with the latest COE foundation products and Army Common C4I segments, simulation/stimulation along with data collection, reduction, and analysis tools are required.  During Software Component, System, and Integration testing a tailored, repeatable message generator (a.k.a., an automated Time Ordered Event List) and a common, validated scenario are required.  During OT, in order to immerse the C4ISR system(s) under test – along with the soldiers, staffs, and commanders operating them – in a realistic Joint combat environment (“Is it Live or Memorex?”), again a common, validated scenario and data collection, reduction, and analysis tools are required together with a “wrap around” synthetic environment and a set of embedded or federated message generators.3.	C3 Driver ProgramAs stated previously, in 1998 the Army spent just over ten million dollars to maintain a set of approximately 28 interfaces or drivers that linked various simulations to its division-and-below C2 systems.  In 2000 this informal survey was updated and 33 different drivers were identified.To eliminate unnecessary or duplicate interfaces, help save time in both developing and testing C4ISR systems, and – perhaps most importantly – save the Army money, in January of 2001 the Deputy Under Secretary of the Army for Operations Research (DUSA-OR), together with the Army’s Military Deputy for Acquisition and the Army’s Chief Information Officer (CIO), tasked ATEC and PEO-STRI to develop a standard Army Command, Control, and Communications (C3) Driver to stimulate the Army’s C2 systems and “load” its digital communications systems.  Because of the need to support ABCS 7.x development, ATEC and PEO-STRI were told to focus:First on developing a rapid prototype and a Brigade size standard scenario (Phase I; FY01).In FY02 migrate the prototype to support ABCS 7.x development; field the C3 Driver federation to both ABCS developers and the Army’s Developmental Testing Command (DTC); and provide a set of standard Division and Corps size scenarios (Phase II).Then, in FY03 and out (a.k.a., Phase III), continue to upgrade the C3 Driver to support future ABCS patches and drops (i.e., ABCS 7.x, ABCS 8.x, ABCS 9.x, etc.); when necessary update the standard scenarios; and integrate select C3 Driver components into the Army’s training simulations.In addition, the ATEC/PEO-STRI team was given the following guidance:“This is not a new start; use what’s out there.”“Footprint [threshold] - - No larger than two workstations [objective is only one workstation].”“No more than two operators [threshold] who don’t need a PhD in simulation [objective is only one operator].”Obviously, such a complicated set of tasks requires the “buy-in” and support of numerous commands and organizations throughout the Army.  And fortunately, because of the power of its vision, the C3 Driver program has enjoyed the participation and support of organizations such as:  the Program Executive Office for Command, Control, and Communications – Tactical (PEO-C3T); the Training and Doctrine Command’s Analysis Center (TRAC); the Army Model and Simulation Office (AMSO); the National Simulation Center (NSC); and the Simulaiton-to-C4I Interoperability (SIMCI) Overarching Integrated Product Team (OIPT).  However, in order to develop a tool that could be used by the Army’s C4ISR developers, testers, and trainers, the C3 Driver program cannot simply have the support of the PEO-C3T, TRAC, AMSO, etc.  It must have their active participation.To achieve this goal, the C3 Driver program elected to use a pair of annual Value Methodology Workshops to enable collaboration and collective decision making among the program’s various stake holders.  Via the systematic application of Value Engineering techniques – define the function of the item begin evaluated/developed and identify alternative ways (with their associated costs) to provide the required functionality – these workshops bring together a multidisciplinary set of 20 to 40 individuals to discuss in detail and identify specific solutions to a particular set of problems.  For example, the federation approach selected for the C3 Driver program, as well as the actual components of the Phase I federation, was the alternative identified during the program’s first Value Methodology Workshop.Figure 2.  Phase I C3 Driver Federation4.	One Size DOES NOT Fit AllAs discussed by Page, “The understandable push toward cost-effectiveness in the Government has produced an environment where decision makers are loath to ‘pay for the same thing twice.’” [10]  Yet, as discovered in the mid-90s by the Modular Reconfigurable C4I Initiative (MRCI) [5 & 9] and as described in the September 2000 report out of the Simulation Interoperability Standards Organization (SISO) C4I Study Group, a “one size fits all approach” – for linking C4ISR and M&S – is simply not feasible. [13]First, applicable standards (e.g., the High Level Architecture (HLA), the Joint Technical Architecture (JTA), the Defense Information Infrastructure Common Operating Environment (COE), etc.) in the C4ISR and M&S domains continue to evolve rapidly.  In order to be viable, a “one size fits all” driver would need to be synchronized – throughout its development – with both the evolving standards and the affected M&S and C4ISR systems.Secondly, the active interfaces at the boundary between the two domains have yet to implement a common data distribution process or a common data model.  In part, this is due to the different standards affecting how both domains format their data.  And while it is true that some success has been achieved by using the PEO-C3T’s Joint Common Database’s (JCDB’s) data model, it is currently unclear if the JCDB will be implemented in the Objective Force’s C4ISR system.5.	Phase I C3 Driver FederationAs shown in Figure 2, the Phase I (or ABCS v6.3.1) C3 Driver federation comprises StarGen (the C3 Driver’s Graphical User Interface) and 15 other components:  Starship, which together with the StarGen, controls and monitors the federation; three components that simulate/stimulate the C2 System(s) Under Test (SUTs) and/or load the communications SUTs; seven components that are responsible for data collection; and four components that make up the C3 Driver’s data reduction and analysis tools set.Via StarGen, the user can import an existing standard scenario or script file, as well as modify an existing script file.  In addition, by using its eXtensible Mark-up Language (XML) interface with Starship, StarGen can interact with (i.e., start, stop, and/or pause) each of the C3 Driver’s components, as well as monitor the “health” of each component and the SUT(s) during run time.The three stimulation components are:Remote Player Workstation (RPWS) – Allows the user to create, send, and respond to United States Message Text Format (USMTF) or Joint Variable Message Format (JVMF) messages to/from ABCS systems on the Upper (Division and Corps) and/or the Lower (Brigade and Below) Tactical Internets (TIs) via the Digitized Army USMTF/VMF Message Stimulator (DAUVS).  RPWS can also auto-generate message traffic to load the Upper and/or Lower TIs to stress communications systems.Command and Control Low Overhead Driver (C2LOD) – Executes the user-selected scenario and simulates user-specified roles by generating USMTF and JVMF messages for routing over the Upper and Lower TIs via DAUVS.  And, as with RPWS, C2LOD can also load the Upper and/or Lower TIs.DAUVS – For both RPWS and C2LOD, C3 Driver’s radio and/or Local Area Network (LAN) connection(s) to the Upper and Lower TIs.  DAUVS can also auto-generate message traffic to load the Upper and/or Lower TIs to stress communications systems.The seven data collection components are:Remotely Reconfigurable Intel-ligent Instrumentation to Control, Collect, Simulate, and Stimulate (RICS2) – Is the main interface to most of the federation’s data collection tools.  It connects directly to Starship and provides to the user the “health” of all of the data collection tools it controls, as well as allowing the user to start/stop any data collection tool it controls.Digital, Collection, Analysis, and Review System–System Specific Appliqué (DCARS-SSA) – Con-nects to the DCARS Data Collection Module (DCM) found on all ABCS systems.  It allows remote configuration and control of the DCM, as well as harvesting data from each ABCS SUT’s database.High Speed LAN Tap (HSLT) – Unobtrusively listens and collects message and packet data on 802.3 10/100 baseT Ethernet Networks.Wide Area Network Tap (WANTap) – Unobtrusively listens and collects message and packet data on the Lower TI (i.e., SINCGARS and EPLRS networks).PINGER – Pings a single Internet Protocol (IP) address or multiple IP addresses using a script file.The Traffic Generator (TGEN) – Can be used to stimulate Radio (serial) and LAN (Ethernet) networks with character string messages.The Variable Message Format Test Tool (VTT) – Allows the user to confirm that a JVMF message generated by an ABCS system is compliant with the JTA standard.The four data reduction and analysis components are:Ping Chart – Using data from one or more PINGERs, graphically displays network connectivity over time.Graphical Real Time Analysis Tool (Greta) – Graphically displays network traffic according to user-configurable views for a given period of time.Figure 3.  Brigade-Level Balkans ScenarioReal Time Aggregator (RTA) – Passes data collected by the HSLT and WANTap to the DPU.Data Processing Unit (DPU) – Receives HSLT or WANTap data (either directly or through the RTA) and converts them into a Microsoft Access( database or text files.6.	TRADOC Standard ScenariosAs described at [11], SMART is the Army’s initiative to more closely integrate the efforts of the requirements, acquisition, and training communities.  SMART fosters collaboration among the three communities by integrating modeling and simulation early in the acquisition process.Via its use of standard TRADOC scenarios – which were developed by the TRADOC Analysis Center (TRAC) – the C3 Driver program has in part fostered this collaboration by coupling the requirements and acquisition communities.  Specifically, the three scenarios TRAC is providing (one National Training Center (NTC) Brigade-level fight, one Balkan Brigade-level fight (See Figure 3), and one Caspian Sea Division/Corps-level fight) are the same scenarios that TRADOC uses to define requirements and develop advance concepts.These scenarios consist of detailed Red and Blue Orders of Battle (to include losses suffered by both sides prior to the start of the scenario), Red and Blue starting locations, the planned Red and Blue schemes of maneuver, and a script file or Time Ordered Event List that defines all of the USMTF and JVMF C2 messages generated during the fight.7.	“Road Ahead”Since the initial January 2001 C3 Driver tasking, the Army has established 1) a software-blocking policy; 2) a requirement for Intra-Army Interoperability Certification (IAIC)&; and 3) made the decision to end ABCS development once v7.0 has been baselined.  In turn, these three decisions forced a change in the C3 Driver’s original schedule (See Figure 4).Figure 4.  C3 Driver ProgramSpecifically, Phase I was stretched to allow time for IAIC testing (which was completed in early January 2003 when C3 Driver was fielded to all of PEO-C3T’s ABCS developers); Phase II’s timeline was modified to match ABCS 7.x’s development schedule; and Phase III was modified to include the maintenance of the ABCS v7.x variant and integration into the Army’s current and future simulations; e.g., the One Semi-Automated Force Objective System (OOS) and the Army Warfighter Simulation (AWARS).Development on Phase II began during the Summer of 2002 and in September a Phase II Beta version was used to support an early ABCS v7.0 Foundation Software Product Test.  The C3 Driver identified six deficiencies or “bugs” that would not have been found prior to the August 2003, ABCS v7.x Integration Testing.C3 Driver has and continues to make a difference.  It has found numerous “bugs” in ABCS 6.2, 6.3, and in ABCS 7.x Foundation Products.  Each of these problems was identified and fixed prior to the software being fielded to soldiers; saving the Army both time and money,8.	AcknowledgementsThe authors would like to thank Ms. Lilly Segui (from DTC’s Electronic Proving Ground) and her team (Mr. Joe Benischek and Mr. Grant Erickson from TEI, Mr. Don Champagne from Lockheed Martin, Mr. Malcolm (Mogie) Lee from NEWTECH, and Mr. Paul Works from TRAC-Leavenworth), as well as Mr. Scott Morris and Mr. Gerry Lopez (both also from the Electronic Proving Ground), who are the true geniuses behind ATEC’s C3 Driver program.  In addition, the authors would also like to thank Mr. Bill Dunn (from Alion Science and Technology), Mr. Henry E. Rose (from Computer Sciences Corporation), and Dr. Andreas Tolk (from Old Dominion University) for their feedback and assistance.9.	References [1]	Barr, Aaron, Kelso, Morris, and Timian, “The C3 Driver:  Combining the Best in Development, Testing, and Training for Army C4ISR Systems,” International Test and Evaluation Association Journal, June/July 2002. [2]	Defense Information Infrastructure Architecture Oversight Charter, Office of the Defense Information Systems Agency, http://diicoe.disa.mil/coe/aog_twg/aog/aog_page.html, 1997. [3]	Hieb, M.R. and Sprinkle, R.:  “Simulation Infrastructure for the DII COE Architecture: The Army Vision,” Paper 00F-SIW-035, 2000 Fall Simulation Interoperability Workshop, 2000. [4]	Hieb, M.R. and Blalock, J.:  “Data Alignment between Army C4I Databases and Army Simulations,” Paper 99S-SIW-034, 1999 Spring Simulation Interoperability Workshop, 1999. [5]	Hieb, M.R., Cosby, M., Griggs, L., McKenzie, F., Tiernan, T., and Zeswitz, S.:  “MRCI:  Transcending Barriers between Live Systems and Simulations,” Paper 97S-SIW-197, 1997 Spring Simulation Interoperability Workshop, 1997. [6]	Intra-Army Interoperability Certification,  HYPERLINK "http://www.army.mil/CIOG6/references/policy/docs/interop.txt" http://www.army.mil/CIOG6/references/policy/docs/interop.txt, 3 December 2000. [7]	Joint Technical Architecture, Version 4.0, Defense Information Systems Agency,  HYPERLINK "http://www-jta.itsi.disa.mil" http://www-jta.itsi.disa.mil, 17 July 2002. [8]	Lambert Management Group, Inc., “Value Methodology Reference Manual,” 2002. [9]	Lightner, M., Schanduaa, J., Cutts, D., and Zeswitz, S.:  “The High Level Architecture Command and Control Experiment – Lessons Learned in Designing an Extended Federation,” Paper 98S-SIW-93, 1998 Spring Simulation Interoperability Workshop, 1997.[10]	Page, E. H., “On Software and Systems Architecture – Toward an Architecture for SMART,” Simulation Technology Magazine,  HYPERLINK "http://www.sisostds.org/web letter/siso/Iss_73/" http://www.sisostds.org/web letter/siso/Iss_73/, January 2001[11]	Simulation and Modeling for Acquisition, Requirements, and Training, Army Model and Simulation Office,  HYPERLINK "http://www.amso. army.mil/smart/index2.htm" http://www.amso. army.mil/smart/index2.htm, 2003.[12]	Temin, T.R., “Signal Command Adds Network Duties,” Government Computer News, Volume 21, Number 10, 6 May 2002,  HYPERLINK "http://www.gcn.com/21_10/inbrief/ 18592-1.html" http://www.gcn.com/21_10/inbrief/ 18592-1.html, 2002.[13]	Timian, D.H., Hieb, M.R., Lacetera, J., Tolk, A., Whertman, C., and Brandt, K.:  “Report Out of the C4I Study Group,” Paper 00F-SIW-005, 2000 Fall Simulation Interoperability Workshop, 2000.[14]	Timian, D.H.; Hicks, M.W., and Hieb, M.R.:  “An Approach for Using DII COE Components to Link Simulations and C4I Systems:  A Case Study Using the CMP,” Paper 00F-SIW-011, 2000 Fall Simulation Interoperability Workshop, 2000.[15]	Timian, D.H., Hieb, M.R., Glass, J., and Staver, M.J.:  “Using Standard C4I Components to Interface to Simulations,” Paper 98F-SIW-035, 1999 Spring Simulation Interoperability Workshop, 1999.Author BiographiesDON TIMIAN is a Systems Analyst at Northrop Grumman Information Technology (IT). Prior to joining Northrop Grumman IT, Mr. Timian served over 20 years in the United States Army during which he helped develop several Modeling and Simulation-to-Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (M&S-to-C4ISR) interfaces that are currently supporting both the Army’s Development Testing and Operational Testing communities.  Mr. Timian has a Bachelor of Arts degree in Chemistry from the University of Arizona and a Master of Science degree in Operations Research from Kansas State University.THOMAS M. KELSO is Project Manager (PM) for the C3 Driver effort and is also the Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) Domain Manger at the U.S. Army Program Executive Office for Simulations, Training, and Instrumentation (PEO-STRI).  Mr. Kelso has a Bachelor of Science degree in Mechanical and Aerospace Engineering from the United States Military Academy at West Point and is a graduate of the Defense Systems Management College.MARTY ARNWINE is a Senior Analyst with Science Applications International Corporation (SAIC), and currently supports the Developmental      Test      Command      in     the identification, resourcing, and development of advanced technologies.  Prior to joining SAIC, Mr. Arnwine served more than 20 years in the planning, engineering, command and control, and logistics management of tactical to strategic level Army and Joint C4 systems.  A former Operations Research Systems Analyst with the Center for Army Analysis, Mr. Arnwine also supported the Army Staff with force requirements analysis in accordance with the Defense Planning Guidance.  Mr. Arnwine has a Bachelor of Science degree in Math Education and a Master of Science degree in Systems Engineering from the University of Arizona.ROBERT D. AARON is a Senior Analyst in the Technology Group at the Army Test and Evaluation Command (ATEC) Headquarters in Alexandria, Virginia.  He has a Bachelor of Science degree in Mechanical Engineering from the University of Maryland, a Master of Science degree in Management from the Naval Postgraduate School, and is currently pursuing a Doctorate in Management from the University of Maryland. ATEC as the System Developer and PEO-STRI as the Materiel Developer. The vision/intent being that a Non-Commissioned Officer or a senior Lieutenant/ junior Captain could use the C3 Driver to support a Battalion-level ABCS “Orders Drill” followed by a full-up, ABCS driven rehearsal (i.e., provide the wrap-around synthetic environment). Over a series of 18-month windows, all of the Army’s software will be “locked-down” and only one fully integrated software package will be fielded. [12] All Army tactical-through-operational C4ISR systems, before release to the field, must be tested to certify that the applicable standards and requirements for compatibility, interoperability, and integration have been met. [8] During the C3 Driver’s June 2002 interoperability test three software discrepancies were discovered in the ABCS 6.2 version of the Maneuver Control System (MCS) and three more were discovered in the Window 17 version of the Combat Service Support Control System (CSSCS).  Because of the C3 Driver Federation, all six of these software “bugs” were corrected prior to ABCS v6.3 being baselined.