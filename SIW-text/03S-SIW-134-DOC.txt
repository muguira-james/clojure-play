In-House Battlefield Emulation with Actual C4I SystemBo Ryu	         Gavin Holland	    Mohin Ahmed        Yongguang Zhang Network Analysis and Systems DepartmentHRL Laboratories, LLC.3011 Malibu Canyon Rd., Malibu CA 90265{ryu,gholland,mohin,ygz}@wins.hrl.comAbstractWe present an overview of a new approach to emulate a wireless battlefield network that allows live C4I system to be readily plugged for debugging, testing, and exercising without leaving a lab. It is motivated by the fact that current force-on-force simulation (FOFS) tools use pathologically simple communication models, making it nearly impossible to delineate the impact of new and sophisticated communication sub-systems on increased operational effectiveness. Our approach is based on three phases: (i) develop and demonstrate a baseline emulation platform called Wireless Network Emulator (WiNE); (ii) integrate WiNE with a FOFS tool; and (iii) extend the integrated system by developing hardware-in-the-loop channel simulator. This innovative hardware simulator will allow multiple simultaneous signals generated by radios (baseband or IF) to be impaired according to the channel characteristics calculated by WiNE, much the same way the real RF signals would be impaired in real environment. With this hardware-in-the-loop and real-time emulation capability, the fidelity and faithfulness of emulation dramatically increases. IntroductionThe future warfighting capabilities of the U.S. military will be based on a networked system of systems that will serve as a core building block in developing the overmatching combat power with agility, versatility, and lethality. This networked system of systems vision brings out the following unprecedented challenges, one of which being that it is increasingly difficult to measure or evaluate the operational effectiveness when various sub-system alternatives are used. As new and emerging individual sub-systems employ highly sophisticated technologies and complex software, assessing the impact of utilizing them as opposed to legacy sub-systems becomes a challenge as a battle plan is being prepared.  In particular, it is desirable to be able to quantitatively measure, with precision, the benefits of utilizing new and advanced equipment without long, tedious, and often costly field exercise. 	Our effort is aimed at developing and demonstrating high-fidelity, real-time, and in-house battlefield emulation tools that ultimately lead to precise battle damage assessment. A special emphasis will be made on enabling accurate assessment of the impact of employing different types of communication sub-systems on critical battle assessment such as the time it takes to win a war. Current Force-On-Force Simulators (FOFSs) use pathologically simple communication models, making it nearly impossible to delineate the impact of sophisticated communication sub-systems on increased operational effectiveness. 	The proposed system will be based on Wireless Network Emulator (WiNE) which offers unprecedented capabilities to war planners and operators in assessing critical battle damage trade-offs that arise from utilizing various combinations of emerging and legacy technologies prior to a military operation or exercise without losing the realism of battlefield (terrain, mobility, etc.) and sub-systems (radios, applications, mission planning, etc.). WiNE also provides capabilities to test a wide range of communication-related prototypes under realistic conditions, such as emerging defense mechanisms against large-scale network intrusions [9] or new ad hoc routing protocol in a dynamic wireless network.	The development of WiNE will consist of three phases. The first phase of WiNE will be a baseline emulation platform that combines the capabilities of a network of workstations (NOW) cluster, a low-latency high bandwidth programmable interconnect, and a highly optimized simulation engine with the purpose of providing "live" testing of wireless networking protocols and applications under realistic channel conditions. EMBED Word.Picture.8  Figure  SEQ Figure \* ARABIC 1: System architecture of the baseline WiNE		An overview of the proposed emulator (Phase 1) is shown in  REF _Ref34093970 \h Figure 1. On the left of the figure is the hardware architecture and on the right is a list of responsibilities for each component.  The server cluster is responsible for simulating the operation of the network interfaces and the channel conditions within the virtual world. It will seamlessly accommodate state-of-the-art RF propagation modeling and simulation engines developed under various government-sponsored programs. The node cluster is responsible for hosting the network applications and technologies under test.  Interconnecting the two is a low-latency, high-bandwidth control network fabric which carries information about data packets initiated by the node cluster that are destined for transmission on the virtual wireless network interfaces.  This information is encoded and transmitted in small descriptor packets to the server cluster.  The actual data packets are sent in parallel over the data network to the recipient virtual nodes.  The use of descriptor packets minimizes communication overhead, allowing more time for simulation of packet delivery outcomes.  These outcomes are enforced in parallel by the recipient virtual nodes upon receipt of a broadcast packet from the server cluster containing the outcome information.  If multiple simulation servers are used, another communication network is needed to carry simulation coordination traffic between peer servers.	The second phase of the development will focus on extending WiNE for the support of detailed battle damage assessment from the communication device perspective. The current state-of-the-art battle damage assessment tools either assume pathologically simplistic “On/Off” communication links, or greatly simplify them. Virtually all of them ignore the effect of the dynamics of wireless network characteristics as well as diverse performance range of communication devices, and therefore lack the capabilities for warfighting planners to readily estimate the impact of employing alternative communication devices on the key warfighting metrics such as planning overhead, associated costs, and the degree of decisiveness in winning a war. The resulting tools will enable the planners to quantitatively measure the effectiveness of employing advanced sub-systems such as high-band FCS radios in terms of the metrics that matter to them most. This will be achieved by dramatically expanding the library of communication sub-system modules to include both legacy and emerging military radio models, integrating FOFS with the emulator, and allowing planners to readily select alternative sub-system modules using an easy-to-use graphical user interface. 	The third phase will be to add the support for hardware-in-the-loop emulation to WiNE to fully eliminate the dependence on “simulated” communication device behaviors (e.g., layers 1 and 2). This effort will consist of (i) developing unified FPGA-based hardware system architecture and interface specification that enable actual RF military communication devices to be seamlessly connected; and (ii) revising WiNE architecture and design such that it provides the same high-fidelity channel characteristics as the software-driven WiNE without violating real-time constraint. The innovative hardware architecture will allow multiple simultaneous signals generated by radios (baseband or IF) to be impaired according to the channel characteristics calculated by WiNE, much the same way the real RF signals would be impaired in real environment. With this hardware-in-the-loop and real-time emulation capability, the fidelity and faithfulness of WiNE dramatically increases.Detailed Design Aproach The vision of networked system of systems for future warfighting is aimed at achieving the overmatching combat power with agility, versatility, and lethality. At the same time, the same vision requires unprecedented dependence on highly complex technologies. For instance, it is envisioned that future combat systems will require less soldiers and more machineries with intelligence and autonomous unmanned vehicles, both ground and air. The success of utilizing these sophisticated unmanned vehicles critically hinges upon its ability to transfer large volumes of data (e.g., live video feed or ATR) to, and simultaneously receive operational commands from, the command post as quickly and reliably as possible. Consequently, the impact of the communication quality between the unmanned vehicles and the command post, measured in reliability and delivery time, on the success of a mission or operation cannot be greater than ever. Unfortunately, the currently available FOFS and warfare gaming tools do not have the capability to allow war planners to assess the impact of employing different communication sub-systems as they usually assume perfect communication with near zero message delivery latency. As a result, it is extremely difficult to quantify the benefit of advanced communication systems on operational effectiveness when deployed in different scenarios. This may lead to discouraging or delaying the use of powerful new communication devices in real battlefield situations that have been proven effective during their development and testing period, greatly undermining their potential payoff in live combat situations. This undesirably slow pace of adoption of new technologies can be overcome if there exists an easy-to-use infrastructure that allows new, proven communication sub-systems to be evaluated as an integral part of force-on-force simulation tools.   EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 2: Illustration of the concept of Wireless Network Emulator (WiNE)		One of the fundamental requirements for evaluating the impact of different communication devices as part of FOFS is to provide high-fidelity physical world model. Wireless signals are heavily affected by the surroundings in which they travel (terrain and weather), the speed of the transmitting and/or receiving nodes (mobility), and the specifics of the devices such as carrier frequency, coding and modulation schemes, and MAC protocol (radio specification). Faithful modeling of these three components (terrain and weather, mobility, and radio specification) is critical to achieving desirable accuracy of the system.  REF _Ref32003774 \h  \* MERGEFORMAT Figure 2 illustrates how these three components are realized in the proposed WiNE system. The effects of terrain, weather, mobility, and radio specifications are captured by virtual world servers (see  REF _Ref34093970 \h Figure 1). Each live node is represented by a virtual node. Real applications reside in virtual nodes, generating actual data in the form of IP packets. Once developed and validated, this system will serve as a basis for integration with a FOFS, and will eventually be augmented with hardware-in-the-loop capability so that actual communication sub-systems and live applications can be directly plugged into the system as part of an expanded FOFS.	In order to minimize the development risk and maximize the payoff, we propose three sequential phases. The first phase will focus on development and demonstration of a baseline emulation platform that combines the capabilities of a network of workstations (NOW) cluster, a low-latency high bandwidth programmable interconnect, and a highly optimized simulation engine with the purpose of providing "live" testing of wireless networking protocols and applications under realistic channel conditions.  EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 3: Data and control packet flows of baseline WiNE	When operational, a data flow within WiNE will occur as follows. At the start of the emulation, the parallel simulation engine running on the virtual world server (VWS) cluster is loaded with the desired virtual-world (v-world) scenario, which includes information such as the initial locations of the nodes, the mobility patterns, terrain, and weather.  Subsequently, each virtual node (VN) is loaded with the applications and protocols under test and initialized within the initial v-world configuration prior to being put into motion.  Each packet generated by a VN for an interface that exists within the v-world is intercepted by a kernel packet filter that passes it to its local WiNE process, which in turn generates a small descriptor packet, containing information necessary to simulate the packet (e.g. src, dst, length), and routes it to the VWS cluster. In the meantime, the VN forwards the original packet to the intended VN recipient(s).  Upon receipt of the descriptor packet, the VWS cluster simulates delivery of the packet within the v-world and provides the outcome (e.g. number and placement of errors, delays, exceptions) to the VN recipient(s).  The outcome is then enforced by the packet filter on the buffered data packet (e.g. dropped, corrupted, delayed) prior to delivery to the upper layers.  This baseline WiNE system will be demonstrated and validated against the experimental data collected under ATO’s Future Combat Systems Communication FCS-C program. 	The second phase will focus on integrating WiNE with a selected FOFS and dramatically expanding the library of communication sub-system modules to include both legacy and emerging military radio models. The resulting integrated tool will allow war planners to readily select alternative communication sub-system modules using an easy-to-use graphical user interface, enabling the planners to quantitatively measure the effectiveness of employing advanced sub-systems such as high-band FCS radios in terms of the metrics that matter to them most. To this end, several changes need to be made on both the selected FOFS and the phase-I baseline WiNE. First, the FOFS must be modified to allow for war planners running the emulation to readily assign and change a communication module(s) to a node from the library inside its original GUI. Second, WiNE must be able to accept terrain, weather, topology, and mobility information passed down from the FOFS tool, and to translate their formats such that they can be seamlessly uploaded to the virtual world server(s). Third, once emulation commences upon, the FOFS must be able to display the output from WiNE instead of its own output, throughout the emulation. The output information provided by WiNE to the FOFS on-the-fly will include topology changes as dictated by the given mobility scenario, communication link qualities changes dictated by selected communication modules and their operational characteristics when employed under given terrain and weather conditions, and overall operational effectiveness metrics.  This interaction between the FOFS and WiNE is illustrated in  REF _Ref32026584 \h Figure 4. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 4: Interaction between FOFS and WiNE	The final phase of the proposed effort centers around two crucial enhancements to the integrated FOFS/WiNE system. One is to achieve plug-and-play feature that allows live communication sub-systems (e.g., military radios) to be directly connected to the emulation infrastructure. The other is to achieve true real-time emulation capability such that the final system achieves ultimate goal of providing as realistic warfighting environment as possible without leaving a building. The ability to support hardware-in-the-loop emulation in real time fully eliminates the dependence on “simulated” communication device behaviors (e.g., layers 1 and 2). Consequently, the resulting system will provide a highly faithful approximation to actual battlefield exercise/training except the physical channel modeling. While accurate modeling of a wireless channel is extremely challenging due to heavy computation requirement, several efforts within DARPA and academia are making remarkable progress on capturing the impact of terrain and foliage on wireless channel characteristics [10,11] with high precision, thanks to the availability of affordable high computing resources. Results generated from these programs will be used for our system wherever applicable. This effort will consist of (i) developing unified FPGA-based hardware system architecture and interface specification that enable actual military communication devices to be seamlessly connected; and (ii) revising WiNE architecture and design such that it provides the same high-fidelity channel characteristics as the software-driven WiNE without violating real-time constraint. The innovative hardware architecture will allow multiple simultaneous signals generated by radios (baseband or IF) to be impaired according to the channel characteristics calculated by WiNE, much the same way the real RF signals would be impaired in real environment. With this hardware-in-the-loop and real-time emulation capability, the fidelity and faithfulness of the integrated FOFS/WiNE system dramatically increases.  REF _Ref32036601 \h Figure 5 illustrates this concept. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 5: A block diagram of multi-input-multi-output hardware-in-the-loop system driven by integrated FOFS/WiNE system.		One of the key requirements for the proposed hardware-in-the-loop emulation system to work properly is to guarantee real-time scheduling of all events associated with emulation. To achieve real-time emulation, we adopt the following approach. In the area of quality of service (QoS), operating system schedulers that support calendars and other explicit time notions form a basis for controlling resources at a fine grain within a single computational node and between nodes in a cluster for co-scheduling.  Explicit time has been abstracted out of computing models for decades, but direct control of when computation happens is particularly important for clustering scheduling, and for delivering real-time guarantees; returning to explicit time abstractions appears overdue for high performance clustering, at least for middleware.  Even if an application lacks explicit real-time demands, fine control of resources is a feature useful to cluster schedulers, and is often elusive with strictly priority based network OS’s.  As performance of network and systems increase, costs of temporal mismatches will evidently grow in import.  To address this challenge, we are utilizing existing work on Linux time-based scheduling and extends time-based scheduling work in order to achieve QoS (real-time guarantee of events in particular) for both computation and for communication []. We will study, design, and prototype a combined middleware and OS runtime system that provides a useful generalization of client-server computing to WiNE which is based on a parallel-client server computing with QoS.  The focused goal of this effort is to design a system with QoS capable of supporting the most widely used model of computation in distributed computing – client-server-computing, with the logical extensions of parallelism of both client and server, together with QoS of scheduled computing and messaging.  The QoS offered should include time-, event-, and priority-type paradigms, for use in appropriate aspects of application and middleware requirements for delivering desired application behavior.  Furthermore, a global scheduling schema will be adopted to ensure synchronization of nodes in the parallel system. The research system to be studied and prototyped here will connect parallel clients and parallel servers with QoS guarantees, and will build on existing OS and middleware research.  Hard QoS will be supported within a single cluster. Related WorkThere are many "virtual environment" simulator/emulators that profess "real-time" characterization of wireless channels. Examples including NIST Net [1], Dummynet [2], ONE [3], Seawind [4], ns-2 emulator [5,7], etc. Most of these utilize device drivers or kernel modules to drop, delay, or corrupt packets according to some user-defined probability distribution. However, it is crucial to understand that they are only "real-time" from the perspective of end users, but certainly not from the perspective of the protocols, which is what we want to test under "real-time" conditions. To the extent of our knowledge, there is no scalable system that emulates high-fidelity mobile wireless networks in real time. HRL’s MobiEmu [8] is one of the pioneering approaches to provide flexible wireless network emulation, but without real-time guarantees and with lack of detailed physical channel modeling such as location-specific multi-path fading. Our approach is to utilize readily available clustering hardware and software tools as a foundation on which to build a highly optimized channel simulation infrastructure.  Key components of this infrastructure are customized device drivers and programmable network interface firmware which will provide low-latency message passing, accurate global synchronization, and parallel packet processing; a low-latency, high-fidelity channel simulator built on an embedded real-time operating system with a file-system customized specifically for synchronous access to pre-computed channel data.Concluding RemarksIt is extremely challenging, and yet critical, to develop easy-to-use, reliable, and scalable infrastructure to develop C4I system-pluggable wireless network emulation capabilities. Such a system will be essential for developing, debugging, training, and testing legacy and advanced C4I systems with considerably reduced development and operational risks.ReferencesM. Carson, “Application and protocol testing through network emulation,” NIST, Internetworking and Technologies Group,  HYPERLINK "http://snad.ncsl.nist.gov/itg/nistnet/" http://snad.ncsl.nist.gov/itg/nistnet/.L. Rizzo. “Dummynet: A simple approach to the evaluation of network protocols,” ACM Computer Communication Review, vol. 27, no. 1, pp. 31-41, Jan. 1997.M. Allman, A. Caldwell, and S. Ostermann. “ONE: The Ohio network emulator.” Technical Report TR-19972, School of Electrical Engineering and Computer Science, The Ohio University, Aug. 1997.M. Kojo et al., “Seawind: A wireless network emulator,” in Proc. of MMB’01, 2001.B. D. Noble, M. Satyanarayanan, G. T. Nguyen, and R. H. Katz, “Trace-based mobile network emulation,” in Proc. of ACM SIGCOMM’97, Cannes, France, Sept. 1997.J. T. Kaba and D. R. Raichle, “Testbed on a desktop:  Strategies and techniques to support multi-hop MANET routing protocol development,” in Proc. of MOBIHOC’01, pp. 164-172, 2001.K. Fall, “Network emulation in the Vint/NS simulator,” in Proc. ISCC'99, July 1999.Y. Zhang and W. Li, “An Integrated Environment for Testing Mobile Ad-Hoc Networks,” ACM MobiHoc, Lausanne, Switzerland, June 2002.Y. Zhang and W. Lee, “Intrusion Detection in Wireless Ad Hoc Networks,” ACM/IEEE MOBICOM, Boston, Massachusetts, Aug 2000.[10] REMCOM Inc., “New Approach to Wave Oriented Radio Propagation Modeling Based on Extended FDTD Methods,” DARPA SBIR Kickoff Meeting Slides, Oct. 2002.[11] B. Perlman and D. Palmer,  “Radio Wave Propagation Modeling and Simulation,” DARPA ATO FCS-C Program Reviews, 2002.[12] F. Carr and M Hieb, “M&S Interoperability within the DII COE: Building a Technical Requirements Specification,” Simulation Interoperability Workshop, Spring 2001.(2002. HRL Laboratories, LLC. All Rights Reserved.