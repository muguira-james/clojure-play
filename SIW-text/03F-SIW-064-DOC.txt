Conceptual Modeling of a Legacy Constructive Simulation: A Use CaseJames S. WeinerRaytheon Company670 Discovery DriveHuntsville, AL 35806-2802 USA256-542-4353james_s_weiner@raytheon.com P. D. Gutierrez, P.E.U.S. Army Space and Missile Defense CommandAttn: SMDC-RD-II-TP.O. Box 1500Huntsville, AL 35807-3801 USA256-955-2693paul.gutierrez@smdc.army.mil Keywords:EADTB, Conceptual Modeling, Legacy, Constructive, VV&A, DMSO RPGABSTRACT: The Extended Air Defense Testbed (EADTB), a core Missile Defense Agency (MDA) M&S tool, is a large-scale event-driven constructive simulation engine and model development environment focused on military applications, especially suitable for air and missile defense studies and analysis. EADTB is funded by MDA and managed by the U.S. Army Space and Missile Defense Command Office of Technical Integration and Interoperability. In 2002, a conceptual model was documented for EADTB. The DMSO VV&A Recommended Practices Guide (RPG) was consulted in this process, but was found to contain limited guidance for legacy tools, and none specific to constructive simulations. This paper will describe the authors’ experience in meeting the challenge of documenting a conceptual model for a constructive legacy simulation while adhering closely to the Scientific Paper approach recommended in the RPG. Suggestions for supplementary guidance are provided as lessons learned.IntroductionIn the spring of 2002, Raytheon, as prime contractor for the Extended Air Defense Testbed (EADTB), was directed by the U.S. Army Space and Missile Defense Command Office of Technical Integration and Interoperability (USASMDC-OTII) to provide documentation of the EADTB conceptual model. In researching the literature for conceptual modeling, the Defense Modeling and Simulation Office (DMSO) Verification, Validation, and Accreditation Recommended Practices Guide (VV&A RPG) was consulted, and the Scientific Paper approach selected as most appropriate. Unfortunately, little guidance was found that was specific to legacy constructive simulations such as EADTB. How the RPG was adapted for this case is the subject of this paper.EADTB DescriptionEADTB was originally developed in the early 1990s as a tool for simulating air and missile defense with an emphasis on battle management command, control, and communications. EADTB is a constructive, event-driven simulation comprising more than three million lines of mostly Ada code. In addition to its simulation engine, it comprises a complete environment for development and reuse of models, and has a full range of built-in visualization, data collection, and analysis capabilities. Various adjunct tools are provided to aid experiment preparation and analysis. EADTB also provides external interfaces for DIS and HLA distributed simulation, as well as the ability to link in legacy software processes.At the highest level, the modeling paradigm in EADTB’s conceptual model can be described very simply. All simulated entities are instances of specific system representations (SSRs), each of which includes a Platform component, one or more Thinker components, zero or more Sensor components, and zero or more Communications components. Entity behavior is partly governed by a user-selectable set of hardcoded algorithms associated with component functions. Simulated decision-making is controlled by a user-provided ruleset attached to each Thinker. All military systems of interest may be represented in this paradigm, with motion laws, signature generation, vulnerability, impairment, and carry/launch functions encapsulated in the Platform; the ability to sense the surrounding environment assigned to Sensors; detailed communications processing assigned to Communications (Comms) components; and higher-level communications, surveillance, battle management, and other decision-making functions assigned to Thinkers. The Environment function is responsible for simulating terrain, weather conditions, sea state, and other phenomena such as RF signal propagation (see Figure 2.1). EMBED PowerPoint.Slide.8  Figure 2. SEQ Figure \* ARABIC \s 1 1. Abstraction of Real WorldEADTB includes a relational database that stores all SSRs and their component datasets in Master and User libraries. (Master SSRs are notional, unclassified, read-only models whose distribution is controlled by the U.S. government. They are provided as good starting points for user SSR development, and are often useful in their original form.) During the preparation phase of an experiment, users may create new SSRs or modify existing models from either library to produce the appropriate set of representations for their needs. At this point, a gameboard consisting of a DTED-derived digital terrain model is selected, and instances of SSRs (known as Scenario Elements, or ScenEls) are deployed on or above it. Communications networks may be defined, along with command structures, target points, zones, and defended assets. The user may also choose from a wide variety of detailed internal datasets for collection before starting execution.The real-world processes simulated within EADTB, both physical (e.g., aerodynamic propagation, radar signal detection) and procedural (track management, message processing, weapon selection) are implemented as a set of generic, highly parameterized (data-driven) Ada algorithms. Because we recognize that users may differ in their purposes, many processes are simulated with multiple algorithms of varying detail. One example: an analyst studying the effectiveness of a proposed weapon selection scheme will likely not wish to spend her time providing the data needed for high-fidelity sensor modeling, so “functional” sensors that model the salient effects of radars or EO/IR sensors (whose performance is specifiable with a small number of input parameters) are provided in addition to higher-detail representations. EADTB also places no requirement for uniform degree of detail within scenarios—a particular Patriot battery of interest may be modeled in great detail, while others are represented in aggregated functional form.EADTB has a history of use in MDA, the U.S. Army, and NATO for studying missile defense BM/C2 issues. In 2002 it was selected by the Missile Defense National Team B (MDNTB) Communications IPT for a JDN/JRE network loading study, and was accredited for this purpose by the MDA Phase One Engineering Team (POET). It has also been accredited for BM/C2 studies by both the NATO Consultation, Command, and Control Agency (NC3A) and IABG, a prominent defense analysis firm supporting the German MOD. EADTB was chosen by the U.S. Army Test and Evaluation Command (ATEC) for the Patriot PAC-3 IOT&E Interoperability Demonstration. Formal accreditation for this event occurred in March 2002, and the Interoperability Demonstration took place the following month. EADTB was a key tool used in the BMDO/CA Joint Battle Management Architecture Analysis (JBMAA) over the past four years. In FY01, BMDO/SE selected EADTB for use in the Technical Performance Measurement (TPM) Program and it was also chosen for the NATO Feasibility Study.In addition to the credibility gained through use by MDA, Army, Navy, Air Force, and NATO analysts, EADTB has had a formal independent verification and validation (V&V) program since 1993. The VV&A process for EADTB is: (1) compliant with evolving guidance (multi-service and DoD) and state of practice, (2) tailored to the circumstances of the EADTB development process, simulation characteristics, and intended uses and, (3) pro-active in building the audit trail of evidence necessary and sufficient for confidence in EADTB results and outputs.In 1999, EADTB underwent a complete Formal System Test in which all of the more than 660 EADTB system requirements were independently verified.Documenting the Legacy Conceptual ModelIn approaching the task of documenting EADTB’s conceptual model, it was first necessary for us to have a clear understanding of what a conceptual model is, and what purposes it might serve. The most important resource for gaining this understanding was the DMSO VV&A Recommended Practices Guide (RPG) at  HYPERLINK "http://vva.dmso.mil/" http://vva.dmso.mil/. Unfortunately, no specific recommendations were given for developers of legacy simulations, and what was found seemed mostly to apply to single-system simulations rather than constructive simulation “toolkits” such as EADTB.Of all possible purposes for a retroactively-documented conceptual model, two stood out: to serve as a VV&A tool, and to serve prospective users as a fitness-for-use evaluation tool (which would include assessment as an HLA federate). In the case of EADTB, where a formal independent V&V program has long been in place, the first of these purposes was less immediately important, though certainly of value for future VV&A. Emphasis was therefore placed on providing a single document that would give combat developers, materiel developers, and operational commanders a relatively quick means to determine whether EADTB could meet their M&S needs. EADTB was developed in accordance with the traditional DoD-STD-2167 process, based on a System Specification flowed down to a number of Software Requirements Specifications (SRSs). With customer approval, it was found convenient to document algorithms in a series of Program Notebooks (PNBs), collectively known as the Algorithm PNBs. Sensor, Thinker, and Comms algorithms were assigned to separate PNBs, as were algorithms for Environment processing. Separate PNBs were reserved for coordinate transformations and common math algorithms. Platform algorithms were further parceled out in separate PNBs for motion laws (with separate entries for landbased systems, seabased systems, aircraft, ballistic missiles and associated objects, guided missiles, and satellites), signature generation, carry/launch, impairment, and damage assessment.Each of the Algorithm PNBs was assembled by different writers at different times, with varying level of detail and format.Our original approach to documenting EADTB’s conceptual model was to condense the content of these PNBs, using a uniform input-processing-output format. This would make clear to readers exactly what the modeling limitations were, and what the tradeoffs were between fidelity and (input) data requirements. The Scientific Paper format specified in [2] includes sections for identification, principal points of contact, conceptual model purpose and overview, general assumptions, basic entity/process elements, algorithm identification, development plans, and summary. This structure was adhered to for the most part. We chose to identify the following as the basic entity/process elements:SSRsPlatform componentsThinker componentsSensor componentsComms componentsScenario Elementsthe Environment modelScenariosExternal interfacesExperimentsThe Scientific Paper format also calls for each entity/process element section to include descriptions of states, tasks/actions/behaviors, relationships/interactions, events, and parameters/factors. Some difficulties were encountered with interpreting these requirements and providing what seemed to be a vast amount of detailed implementation-level information, however.  For example, investigation of the simulated events associated with a given component type revealed that many of these existed for bookkeeping convenience, or were otherwise software engineering artifacts that did not relate cleanly to the abstract conceptual model. Given the constraints in budget and schedule for producing our document, and the desire to avoid drowning readers in a sea of detail, we chose to forego some of these recommendations in favor of a breakdown by algorithms. Portions of the above material were included where it was thought to be relevant.Another problem in applying this format too strictly arises from the nature of EADTB as a model and scenario builder, rather than a fixed model or set of models. To take one example, relationships between military systems in the real world are mirrored in relationships between the ScenEls of a scenario, which are defined by the user during experiment preparation, rather than inherent in the software. As such, they properly belong to the conceptual model that the user builds with EADTB as opposed to EADTB’s conceptual model per se. These user conceptual models are at a higher level of abstraction than that of the toolkit.This distinction is important, and we did not just use it to cover over a mass of implementation details. As the document evolved, it became clear that that readers would not be well served if only EADTB’s built-in functionality was addressed. Something more was needed to demonstrate how users’ conceptual models could be implemented with our tool. The challenge was that an essentially infinite number of system models (SSRs) and scenarios can be created with EADTB, each the realization of a different user conceptual model. How could these be addressed in a single, slim (386-page) document?Obviously they could not, but the intended usage of EADTB could still be suggested by including detailed examples. Several sample studies were planned originally, but budgetary constraints limited us to just one. We chose a hypothetical, but still quite plausible ballistic missile defense architecture study: assess capacity requirements for the portion of the military communications network connecting theater and national battle management elements. The study was described in sufficiently generic terms to avoid classification issues. Several other departures were made from the Scientific Paper format. One was to include an appendix summarizing the studies in which EADTB has been used, including sponsor, point of contact, study purpose, and an overview of the SSRs involved. Other additions included the DMSO-accredited HLA simulation object model (SOM), a listing of acronyms, and explicit definitions of the coordinate reference frames employed by the tool. We felt that these would all aid the reader in gathering an understanding of EADTB and its potential value to her. Lessons LearnedSome of the experience we gained in documenting the EADTB conceptual model may be of value to others who are similarly engaged, especially those working with legacy constructive simulations.Simulations with extensible open-ended paradigms (“toolkits”) may not be adequately documented by describing only their underlying algorithms. Constructed models and scenarios have their own conceptual models at an abstraction level above the toolkit. Supplement with sample use cases that illustrate the full breadth of the tool.The DMSO RPG Scientific Paper format is a useful guide to documenting conceptual models, but supplementary material can add value for legacy simulations. These may include HLA SOM(s), a summary of studies employing the tool, and VV&A history. Other reader aids such as an acronyms list and coordinate frame definitions are also suggested.Tailor wisely. Consider the intended use of the conceptual model description when choosing which of the RPG-specified details to include. Incorporating lots of low-level implementation details may bog down the reader rather than aiding her understanding of your simulation. If too much of the documentation effort is spent including these details, more important information may be omitted.ConclusionsAlthough the EADTB developers have yet to receive specific feedback on the Conceptual Model Document from the user community, this resource has already proven to be of value to the program internally. System engineers and software developers have found it handy as a single-volume guide to capabilities that complements the more detailed (but often more obscure) legacy documentation.We hope that this brief description of our experience in creating the document may assist those who undertake such tasks in the future.AcknowledgmentsThe authors gratefully acknowledge the financial and technical contributions of a number of individuals from various organizations. First, we would like to thank COL Kevin Greaney, MDA/SES and Mr. George Moody Parsons of the USASMDC Office of Technical Integration and Interoperability whose financial support made this project possible. We also wish to thank Bonnie McDaniel, MDE; Karl Heuer, Brock Harris, SAIC; Kent White, Ken Courtney, SPARTA; Kevin Freeman, Jeff Grubbs, Mark Jackson, Jill Formaz, Mark Thompson,  Nell Owen, Raytheon; Robert Monnet, Terri Beeson, Alan Moore, Bob Hunter, Northrop Grumman; and Archie Morris, Kottman.References[1]	EADTB Program Notebook Entry 2-19-1-1-1: Conceptual Model Version 1.0, 20 Dec 2002.[2]	Defense Modeling and Simulation Office, “Conceptual Model Development and Validation,” 30 November 2000,  HYPERLINK "http://vva.dmso.mil/Special_Topics/Conceptual/default.htm" http://vva.dmso.mil/Special_Topics/Conceptual/default.htm.[3]	DMSO VV&A Recommended Practices Guide,  HYPERLINK "http://vva.dmso.mil/" http://vva.dmso.mil/.[4]	D. Pace: “Conceptual Model Development for C4ISR Simulations,” 5th International Command and Control Research and Technology Symposium, October 2000.