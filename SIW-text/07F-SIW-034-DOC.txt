A Pilot Implementation of the Core Manufacturing Simulation Data Information ModelY. Tina LeeSwee Leong Frank RiddickManufacturing Systems Integration DivisionNational Institute of Standards and TechnologyGaithersburg, MD 20899-8260 U.S.A.301-975-3550, 301-975-5426, 301-975-3892 HYPERLINK "mailto:leong@cme.nist.gov" leong@cme.nist.gov,  HYPERLINK "mailto:leet@cme.nist.gov" leet@cme.nist.gov,  HYPERLINK "mailto:riddick@cme.nist.gov" riddick@cme.nist.govMarcus JohanssonBjorn JohanssonDepartment of Product and Production DevelopmentChalmers University of TechnologyGothenburg, SE-412 96, SWEDEN HYPERLINK "mailto:johamarc@chalmers.se" johamarc@chalmers.se,  HYPERLINK "mailto:bjorn.johansson@chalmers.se" bjorn.johansson@chalmers.seKeywords: Data exchange, information model, interface standards, and manufacturing simulationABSTRACT: Interoperability between manufacturing software applications and simulation is currently extremely limited, and it has been recognized that there is a great need for methods to improve interoperability.  The Core Manufacturing Simulation Data (CMSD) Information Model (CMSDIM) was developed to provide neutral structures for the efficient exchange of manufacturing data in a simulation environment. The neutral interfaces will be used to support the integration of simulation software and other manufacturing applications such as shop floor control and management systems, production scheduling systems, enterprise resource planning (ERP), and manufacturing execution systems. This paper presents the concepts of the CMSDIM and a real world pilot implementation of the CMSDIM in a simulated automotive production environment. To demonstrate the implementation, a simulation of an automotive production facility has been developed based on input data structured according to the CMSDIM specification.  Extensions to the CMSDIM were created to support some custom data exchange requirement that were needed to complete the integration.1.0 IntroductionThe U.S. manufacturing industry continues to face challenges due to global competition, outsourcing, and consolidation. As manufacturing becomes more global in nature, companies are increasingly dependent upon the efficient and effective exchange of information with their partners.  Manufacturing systems are often costly to develop and operate. Simulation technology has been demonstrated to be an effective tool for improving the efficiency of manufacturing system design, operation, and maintenance.  Standard interfaces could help reduce the costs associated with simulation model construction and data exchange between simulation and other manufacturing software applications - thus making simulation technology more affordable and accessible to a wide range of potential industrial users. Interoperability between simulation and other manufacturing software applications is currently extremely limited.  Achieving interoperability involves addressing system integration, data translation, and model development issues. The simulation software used to model and predict the behavior of manufacturing systems does not use the same data formats as the systems used to design products, engineer production systems, and manage production operations. Neutral interface specifications that support quick and easy integration of commercial off-the-shelf software applications do not currently exist.Researchers at the National Institute of Standards and Technology (NIST) have been working on an interface standards development effort, titled “Core Manufacturing Simulation Data Information Model (CMSDIM),” to address the interoperability between simulation systems and other manufacturing applications. The CMSD effort is under the guidelines, policies, and procedures of the Simulation Interoperability Standards Organization (SISO) [1].The following sections present the purpose of the CMSD effort, provide an overview of the CMSDIM, and describe a pilot implementation of the CMSDIM based on a major automotive manufacturer’s paint shop simulation. 2.0 The CMSD EffortDue to the lack of interoperability between simulation systems and manufacturing software applications, the CMSD effort was organized. The CMSDIM defines a data specification for the efficient exchange of manufacturing data in a simulation environment [2,3]. The specification provides a neutral data format for integrating manufacturing software applications with simulation systems. The CMSDIM specification, when completed, will satisfy the following needs:Enable data exchange between simulation systems and other software applications Support the construction of manufacturing simulators Support the testing and evaluation of manufacturing softwareEnable greater manufacturing software application interoperabilityThe CMSDIM specification is presented in two different documents: (1) the information model defined using the Unified Modeling Language (UML) [4]; and (2) the information model defined using the eXtensible Modeling Language (XML) [5].The CMSDIM’s UML representation has been organized using packages. UML packages, depicted as file folders, are UML constructs that can be used to organize model elements into groups.  The CMSDIM consists of the following major UML packages:  Support package, Resource Information package, Production Planning package, Production Operations package, and Part and Inventory Information package.There are seventeen major categories of manufacturing information included in the CMSDIM. They are: organization, calendar, resource, skill definition, setup definition, operation definition, maintenance definition, part, bill of materials, inventory, process plan, work, schedule, revision, distribution definition, reference, and unit defaults.3.0 Collaboration with The AUTO INDUSTRY NIST is collaborating with a major automotive manufacturer and Chalmers University of Technology in Sweden to develop standard neutral interfaces to facilitate model development, data exchange, and integration between simulation systems and other manufacturing applications.  3.1 Motivation Simulation technology has been demonstrated to be an effective tool for reducing costs, improving quality, and shortening the time to market for manufactured goods in the manufacturing industry. However, the cost of developing, implementing, and using simulation technology is high. The costs of integrating simulation systems with other manufacturing applications are even higher. There is always a need to transfer, exchange and share data between simulation and other manufacturing applications. The development of reusable, neutral, standard interfaces would make integrating simulation and other manufacturing applications easier and could help reduce costs. To foster interoperability between simulation systems and other manufacturing applications, the CMSD effort started.  In this paper, a collaborative pilot implementation that demonstrates the feasibility of using the CMSDIM to integrate applications is discussed.Chalmers University, along with a major automotive manufacturer, are leading participants in the “Conceptual Plant Development – FACTS” project [6].  The objective of the project is to apply methods and tools that can increase the development effectiveness of a new or modified factory.  To accomplish the objective, it recognizes a need for the standardization of manufacturing data in a simulation environment. Since the objectives of the CMSD effort meet the requirement of the Conceptual Plant Development Project, the collaboration effort was discussed and eventually established.3.2 Simulation ModelIn general, a vehicle assembly facility contains several major processes including body assembly, paint shop, and final assembly. To carryout the pilot implementation, a simulation of an automotive production facility was developed. This production facility simulates an automotive manufacturer’s paint shop operations. The simulation was developed using Enterprise Dynamics (ED) [8] simulation software. The major manufacturing processes in the paint shop include control, sealing, hardening, finishing, washing, primer painting, repair, and quality control, see Figure 1. EMBED Visio.Drawing.6  Figure 1: A process flow chart of the paint shopFigure 2: Car bodies moving on conveyors in the paint shopThe simulation includes the car bodies that are carried on skids through the paint shop [7], see Figure 2.  The skids are moved on special conveyors and elevators.  Conveyors and elevators are modeled as reliable resources with no breakdown applied.  The lowest level of operation is modeled as tasks performed by a workstation.3.3 Data Exchange Concept The focus of this pilot implementation is the exchange of resource data. The original manufacturing resource data about the workstations for the paint shop was stored in a production database. Data about conveyors and elevators was manually gathered since it did not exist in a database. To simplify the implementation, relevant resource data has been manually extracted and stored in a Microsoft Excel file.  EMBED Visio.Drawing.6  Figure 3: Manufacturing data exchangeThe data exchange concept for manufacturing data exchange and for this implementation is depicted in Figure 3.  The figure shows how manufacturing input data are transferred from one manufacturing data store or simulation application to another simulation application based on the data structured according to the CMSDIM specification. The simulation application is a simulation model generated by any simulation system, such as Arena, Quest, ED, or ProModel. The manufacturing application data store can be databases (such as manufacturing production databases), spreadsheets, XML instance documents, etc.  The CMSDIM serves as a neutral data format. The CMSDIM-based XML data structures can be used as intermediate representation for exchanging and representing manufacturing data. Simulation systems’ import/export of manufacturing data are often transferred through their custom-built or proprietary data interfaces.  Custom-built translators that convert data between the import/export files and CDSDIM-based documents will facilitate the data exchange process. In this implementation, the manufacturing data in Excel files are mapped onto the ED model resources via the CMSDIM-based XML data structures. 4.0 Data Representation In this simulation, there are three types of resources, material handling equipment, workstations, and employees.  Material handling equipment may be a conveyor or an elevator.  Workstations are either automatic workstations or manual workstations. Although employee entities are modeled, only the number of employees is important.  Individual employee information, such as identifier, name, skill levels, and work shifts are not modeled.Information about each workstation’s cycle time is maintained and available, but cycle times for individual tasks at a workstation are not.  Disturbance or breakdown information is modeled for each resource, except no downtime is modeled for conveyors and elevators.4.1 Resource Data Represented in CMSDIMIn CMSDIM, a Resource may have attributes associated with it such as identifier, resource type, name, and description.  Attributes that define current status information or inherent characteristics of a resource may also be defined. Resource type may be machine, station, crane, employee, fixture, tool, or other.  An example of how a resource in the CMSDIM can be represented as an XML element is presented as below:<Resource identifier="1234"> <Name>lathe machine</Name> <Description>a turning machine </Description> <ResourceType>machine</ResourceType> <Reference <referenceIdentifier=”1234_manual”/> <Manufacturer>   <Value>XXX</Value> </Manufacturer> <WorkpieceCapacity> <Value>1</Value> </WorkpieceCapacity> <EfficiencyRating>   <Value>1.15</Value> </EfficiencyRating> <ControllerType>   <Value>Fanuc controller</Value> </ControllerType> <ResourceKey 	resourceIdentifier=”workstation_2”/> <Horsepower>   <Value>3.5</Value> </Horsepower></Resource>4.2 Manufacturing Data for Simulation InputRelevant manufacturing data was populated into Excel spreadsheets for this study.  Excel spreadsheets containing four different types of data that was used for simulation input were created: Conveyor and Elevator – The spreadsheets are used to maintain data for conveyors and elevators.  The speed of the conveyor was defined.  For elevators, two types of speeds, speed of a loaded elevator and speed of an empty elevator, are included.Staffing Plan – This spreadsheet is used to identify the number of employees assigned at each work shift for each manual workstation.  Up to five employees may be assigned to each manual workstation.Cycle Time – This spreadsheet is used to define a mean cycle time distribution function.  The cycle time for a particular process task at a particular workstation depends on the vehicle types, number of employees, and work shift.Disturbance – This spreadsheet is used to define mean–time-to-failure (MTTF) and mean-down-time (MDT) distribution functions.5.0 CMSDIM ExtensionsWhile performing Excel to ED data exchange using the CMSDIM, it was found that there were some discrepancies in the way some information was represented. Not all information in the Excel file can be mapped into the CMSDIM, and the CMSDIM’s information structure was sometimes hard to map onto data structures in ED.  For example, the CMSDIM’s resource structure does not support the conveyor and elevator types. Discrepancies were resolved by extending CMSDIM to include additional data classes/elements that are needed to support the Excel to ED data exchange.5.1 Material Handling EquipmentThe CMSDIM's current Resource structure does not support material handling equipment.  In the next CMSDIM release, resource types will be expanded to include most material handling equipment, such as conveyor, elevator, automated guided vehicle, power and free conveyor, monorail system, fork lift, and hand truck. Also, additional resource characteristics will be supported.  Examples of new characteristics are conveyor's length, orientation, pivot, and elevation. For this implementation, the CMSDIM is temporarily extended to enable data exchange for certain material handling equipment.  Thus conveyor and elevator are treated as resources in CMSDIM.  The speed element associated with a resource was extended to allow a description to be defined.  The speed rate and speed unit information that was already part of speed structure was not changed. 5.2 WorkstationThe level of staffing, cycle time, and disturbance information for each workstation are necessary to properly define the operation of the paint shop in the ED simulation. A staffing plan is used to identify required employee resources for each work shift for each workstation. Cycle time is the time taken to perform a task for a particular product in a workstation. Disturbance defines time duration when the workstation is down. This information could be defined using the CMSDIM's ProceessPlan, Schedule, and/or WorkItem structures. However, there is no single data element defined for them specifically. 5.2.1 Staffing PlanFor convenient purposes, a ShiftStaffingPlan structure is introduced.  ShiftStaffingPlan defines the number of operators or employees required for each work shift at a particular workstation.  It has an identifier and a set of ShiftStaffingPlanItem elements. ShiftStaffingPlanItem is defined by the work shift, the workstation, and the number of employees. 5.2.2 Cycle TimeCycle time of each workstation could be defined using the CMSDIM's ProcessPlan or WorkItem structures. Allowing cycle time to be defined directly as a part of a resource definition, makes the resource information less reusable. The paint shop simulation expects cycle time to be defined directly for each workstation. The current level of staffing is used as a parameter to determine cycle times. To reduce code and interface changes for this implementation, the CycleTime information can be added to a Resource definition. CycleTime is defined by the product, the number of operators used, and the cycle time duration. The cycle time duration is defined by the CMSDIM’s Duration structure and may include the time unit, the amount of time, and distribution. The distribution is defined by the distribution name and a set of distribution parameters, and a description.  Examples of distribution names and their associated parameters are the common distribution “normal” with the parameters of “mean” and “standard deviation” and the common distribution “exponential” with the parameter of “mean.”5.2.3 DisturbanceIn the CMSDIM, ResourceCharacteristic is an optional data element for describing certain characteristics of the resource. Currently there are sixteen types of resource characteristics that may be included in the Resource definition. Which characteristics are included into the CMSDIM requires a consensus from the CMSD standard development group and users. Mean-time-between-failure and mean-time-to-repair are included in the current version, but MTTF and MDT (that includes repair time and wait time) are not. For this implementation, since both MTTF and MDT are needed for this simulation, temporary support to allow them to be used as resource characteristics was added to the CMSDIM.  Both MTTF and MDT allow duration information (time unit on distribution specification) to be specified. 5.3 A resource element exampleBelow is an XML fragment that shows how cycle time can be defined for resources in the CMSDIM. The example defines the workstation, WM_GRAND1, with the cycle time data that are extracted from Tables 1 and 2 that list the normal distribution and associated mean and standard-deviation values at each of three workstations.<Resource identifier="WM_GRIND1"><Description>Finish_grinding</Description> <ResourceType>station</ResourceType> <CycleTime product="Body1" numberOfOp="1">    <Distribution>      <Name>Normal</Name>       <DistributionParameter>        <Name>mean</Name>         <Value>412.8</Value>       </DistributionParameter>      <DistributionParameter>        <Name>standardDeviation</Name>         <Value>17.0</Value>       </DistributionParameter>    </Distribution></CycleTime>+<CycleTime product="Body2" numberOfOp="1">+<CycleTime product="Body3" numberOfOp="1">+<CycleTime product="Body1" numberOfOp="2">+<CycleTime product="Body2" numberOfOp="2">+<CycleTime product="Body3" numberOfOp="2">+<MTTF unit="second">+<MDT unit="second"></Resource> Table 1: Cycle time with mean valuesTable 2: Cycle time with standard deviations 6.0 SIMULATION RUNTo facilitate this pilot implementation, import, export, and translator routines were developed to support data extraction from Excel and data conversion between Excel, XML, and ED.  Data import from Excel to ED through CMSDIM's neutral data interface can be done automatically. Figure 4 shows a paint shop simulation. When the simulation is executed, each resource is initialized with cycle time and disturbance information imported from CMSDIM-based XML instance documents. The performance of the paint shop is represented in the simulation output and can be compared against production goals. For example, one production goal for the paint shop is to achieve an average of 60 jobs per hour (JPH). If the simulation result shows less than 60 JPH, a potential solution is to add additional resources, such as increasing the number of employees for each task, to speed up the production. In fact, the most effective, efficient, and economic way to help achieve the production goals is to conduct simulations with various “what-if” scenarios.  SHAPE  \* MERGEFORMAT Figure 4: Paint shop simulation7.0 ConclusionThis paper presents an overview of the CMSD project and describes a pilot implementation of the CMSDIM based on a real-world production operation at a major automotive manufacturer. The pilot implementation demonstrated that with additional extensions, the CMSDIM could be a viable interface standard between simulation systems and manufacturing applications. Efforts are continuing to further extend the CMSDIM to include material handling systems, plant layout, cost estimation, supply chain. The ultimate goals of the CMSDIM is to foster the development and use of simulation in manufacturing operations, facilitate data exchange between simulation and other manufacturing software applications, enable and facilitate better testing and evaluation of manufacturing software, and increase manufacturing application interoperability.DISCLAIMER A number of software products are identified in con-text in this paper. This does not imply a recommendation or endorsement of the software products by the authors or NIST, nor does it imply that such software products are necessarily the best available for the purpose. References [1] Simulation Interoperability Standards Organization (SISO): SISO Policies and Procedures. Available via  HYPERLINK "http://www.sisostds.org/" http://www.sisostds.org/.[2] Simulation Interoperability StandardsOrganization (SISO) Core ManufacturingSimulation Data (CMSD) Product Development Group (PDG), “Core Manufacturing Simulation Data Information Model   (CMSDIM).” Available via HYPERLINK "http://discussions.sisostds.org/default.asp?action=9&boardid=2&read=39532&fid=24"http://discussions.sisostds.org/default.asp?action=9&boardid=2&read=39532&fid=24.[3] Leong, S.; Lee, Y. T.; and Riddick, F.: “A Core Manufacturing Simulation Information Model for Manufacturing Applications,” In Proceedings of Simulation Interoperability Workshop, Spring 2006, Orlando, FL.[4] URL Resource Center: Unified Modeling Language. Available via  HYPERLINK "http://www.rational.com/uml" http://www.rational.com/uml.[5] World Wide Web Consortium: XML. Available via  HYPERLINK "http://www.w3c.org/" http://www.w3c.org/.[6] Högskolan i Skövde: Brief Info on FACTS. Available via  HYPERLINK "http://www.his.se/templates/vanligwebbsida1.aspx?id=24558/" http://www.his.se/templates/vanligwebbsida1.aspx?id=24558/.[7] Johansson, M., and Zachrisson, R., 2006. Modeling automotive manufacturing process.  Master’s thesis.  Chalmers University of Technology, Gothenburg, Sweden. [8] Incontrol Enterprise Dynamics: Enterprise Dynamics simulation software.  Available via  HYPERLINK "http://www.incontrol.nl/" http://www.incontrol.nl/.Author BiographiesY. TINA LEE is a computer scientist in the Manufacturing Simulation and Modeling Group at NIST. She joined NIST in 1986. Her major responsibility in recent years has been to develop information models to support various manufacturing application areas. Previously she worked at the Contel Federal Systems and at the Sperry Corporation. She received her BS in Mathematics from Providence College and MS in Applied Science from the College of William and Mary. Her e-mail address is <leet@nist.gov>. SWEE LEONG is a senior manufacturing engineer in the Manufacturing Simulation and Modeling Group at the National Institute of Standards and Technology (NIST) Manufacturing System Integration Division since 1994. Previously he worked at Ford Motor Company, John Deere, and IBM. His research interests are in modeling and simulation activities for the manufacturing industries and engineering tools integration. Currently, Swee manages the Simulation Standards Consortium at NIST. He received a Bachelor and Master Degree in Industrial Engineering from Purdue University in West Lafayette, Indiana. He is a senior member of the Society of Manufacturing Engineers. His e-mail address is <leong@nist.gov>. FRANK RIDDICK is a computer scientist in the Manufacturing Simulation and Modeling Group in The National Institute of Standards and Technology (NIST) Manufacturing Systems Integration Division. He has participated in research and authored several papers relating to manufacturing simulation integration and product data modeling. He holds a Master's Degree in Mathematics from Purdue. His email address is <riddick@nist.gov>.MARCUS JOHANSSON is from Gothenburg in Sweden where he is employed as a project assistant at the Department of Product and Production Development at Chalmers University of Technology. He is currently a guest researcher in the Manufacturing Simulation and Modeling Group at the National Institute of Standards and Technology where he works with implementation and development of Core Manufacturing Simulation Data. He has a M.Sc. degree in the specialized discipline Automation and Mechatronics Engineering. His e-mail address is HYPERLINK "mailto:johamarc@chalmers.se"<johamarc@chalmers.se>.BJÖRN JOHANSSON is an assistant professor at Product and Production Development, Chalmers University of Technology. His research interest lies in the area of discrete event simulation for manufacturing industries. He is interested in the specifics of modular modeling methodology for effective and swift model-building, which is accompanied by software development, user interfaces, and input data architectures. His email address is  HYPERLINK "mailto:<Bjorn.Johansson@chalmers.se>" <Bjorn.Johansson@chalmers.se>.PAGE  