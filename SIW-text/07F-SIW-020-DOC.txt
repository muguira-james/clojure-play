Providing Distinct Domains for Multiple Joint Players in a Large Scale Battlespace Exercise using Distributed Interactive Simulation (DIS) FilteringSteve PadillaScientific Research CorporationUSAF Distributed Mission Operations Center (USAF DMOC)4500 Aberdeen Dr., SE, Building 942Kirtland Air Force Base, NM 87117505-846-9917, 505-853-1399 HYPERLINK "mailto:steve.padilla@kirtland.af.mil" steve.padilla@kirtland.af.mil Craig GoodyearLockheed Martin CorporationUSAF Distributed Mission Operations Center (USAF DMOC)4500 Aberdeen Dr., SE, Building 942Kirtland Air Force Base, NM 87117505-853-0404, 505-853-1536 HYPERLINK "mailto:craig.goodyear@kirtland.af.mil" craig.goodyear@kirtland.af.milKeywords:DIS, Filter, Battlespace, Exercise, Air Force, Joint, Training, PlanningABSTRACT: The USAF Distributed Mission Operations Center (DMOC) Virtual Flag 07-2 exercise consisted of approximately thirty seven thousand constructive ground and fifteen hundred constructive air entities to support 35 virtual simulation systems. Virtual simulations were representative of the Army, Navy and Air Force, providing training for a total of 645 participants. Typically a virtual simulator can support only a limited amount of entities which is relevant to the requirements posed by their day to day training. On the other hand there are some virtual simulators designed to operate in a high entity count environment which is imperative to their training. The Virtual Flag environment is designed to provide adequate training for the multitude of participants and their various requirements. The question becomes for the exercise planner, how do you tailor training around a specific virtual simulator’s technical limitations in a congested exercise while at the same time providing the highest fidelity training? What about those simulations which can handle a large amount of DIS traffic, how does the exercise planner provide that user with only the information necessary for their training needs so they are not overcome with data extraneous to their already considerable burden? The DMOC DIS Filter has been used at the facility since its creation there in 2001. The purpose of this paper is to overview the DMOC DIS Filter application and detail how features have evolved in order to answer these questions.1. IntroductionThe United States Air force Distributed Mission Operations Center (DMOC) is the home of Virtual Flag, a distributed large scale Battlespace exercise which is held three to four times a year. Virtual Flag (VF) is a joint exercise with Army, Navy and Air Force participation during every event and the Marines participating when availability allows.Throughout the history of the Virtual Flag exercise the entity count, to include both virtual and constructive simulations, has steadily increased in order to provide training to changing and consistent audiences as well as to provide higher fidelity as technological advances have allowed.The size of today’s Virtual Flag, the myriad of participants, their requirements and differing capabilities require creative thinking on the part of the exercise planner.The planner for an exercise such as Virtual Flag must take into account technical and training factors at an equal standing to achieve a successful event by using technology to provide the best training possible.Virtual Flag 07-2, held in March 2007, consisted of almost forty thousand virtual and constructive entities and featured a training audience greater than 600 including the United States Army, Navy and Air Force. With an audience of that size it goes without saying that the Virtual Flag environment lends itself to many different training opportunities and a network load that could challenge any number of simulations.The main consideration from a technical perspective in a large exercise is to not overwhelm the limitations that a virtual simulation may have from an entity count perspective so that it remains stable, therefore providing training for the longest amount of time possible. Virtual Flag is built to provide training to many participants meaning that portions of the exercise are tailored to individual systems. This is one of the considerations from a training perspective, to provide a high level of fidelity without bombarding the user with information they do not need.To meet these considerations, the DMOC has developed the DIS Filter application which can tailor a training experience for a particular simulation, picking and choosing from a forty thousand entity exercise and at the same time protect a simulation by maintaining a manageable load.2. DMOC DIS Filter HistoryThe current iteration of the DMOC’s DIS Filter application has been in use at the facility since 2001. However, there have been implementations of DIS PDU filtering and manipulation that have taken place at the Air Force facility since it was known as the Theatre Aerospace Command and Control Simulation Facility (TACCSF, 1990 - 1993). Specifically there have been development projects undertaken at the facility that have acted as predecessors to the current DIS Filter application.In addition, the DIS filter application has evolved over the years since it’s inception in order to satisfy ever expanding requirements and take advantage of improvement in computer hardware and operating systems. In the sections that follow are paragraphs detailing some of the systems and ideas which eventually led to the creation of the DMOC’s DIS filter as well as milestones and important upgrades to the application throughout its lifetime.2.1 UDP Network DevicesDuring the 1994 – 1995 timeframe the TACCSF facility participated in a distributed event known as the Synthetic Theatre of War – Europe (STOW-E) featuring participants from all four defense branches in the United States as well as US and UK forces in England and US Army forces in Germany.Connections to the distributed participants of this event were made using commercial T-1 lines and available Asynchronous Transfer Mode (ATM) networks. The STOW-E network was primarily a High Level Architecture (HLA) exercise but also featured DIS interface connections at sites including TACCSF. UDP network devices including various routers and switches were used to regulate both bandwidth and traffic to the interface at the TACCSF facility, programmed to key off of the DIS data header at the PDU level.2.2 MSIM GatewayThe Master Simulation (MSIM) Environment Generator (EG) was the primary EG in use at the TACCSF facility throughout the 1990s. The system worked with LAN-connected virtual simulation systems using a proprietary message format before the establishment of the DIS protocol. Once DIS was created, the TACCSF facility created the MSIM gateway to allow MSIM nodes to translate proprietary messages into their DIS equivalent. The MSIM gateway also featured system utilities to manipulate and filter data between the two formats.2.3 TACCSF Simulation ArchitectureAs the TACCSF facility invested in new system capabilities and began to host as well as participate regularly in larger distributed events with the backbone of the DIS protocol, the need arose for a way to interconnect devices with proprietary architectures. In the same manner as the MSIM gateway, the TACCSF Simulation Architecture was designed as a DIS gateway with the ability to be adapted to different proprietary interfaces, enabling a given system to be DIS compliant. Systems which were adapted to use this gateway included the Scenario Toolkit and Generation Environment (STAGE) and Air Warfare Simulation (AWSIM) Environment Generators.Like the MSIM gateway, the TACCSF Simulation Architecture gateway featured capabilities to transform and filter data between DIS and whatever proprietary system it was adapted for.2.3 DMOC DIS Filter IterationsReleased in 2001, the first iteration of the DMOC DIS Filter ran on the Silicon Graphics IRIX operating system. About a year after the initial release of the DMOC’s DIS Filter there were internal discussions debating the advantages and disadvantages of migrating to a different operating system in place of IRIX. The two candidates were Windows and Linux, with Linux coming out ahead based on overall flexibility and the easier migration method. The DMOC DIS Filter is still a Linux based application and there are no plans for another operating system migration.Over the years, different capabilities have been added and other modifications have been made as needed based on specific customer requirements.3. DMOC DIS Filter CapabilitiesThe DMOC DIS filter is a Linux application that is designed to run on a PC with at least two UDP broadcast network interfaces. The application passes data in either direction between those interfaces and is designed to only pass DIS protocol UDP packets.The DMOC’s DIS Filter features a multitude of filtering and transformation capabilities which have been developed based on the requirements of a large, distributed exercise. Following is an overview of those capabilities as they exist today.3.1 Route Creation and ConfigurationAt the heart of the DMOC DIS filter is the route. In terms of the DIS filter a route is defined as the path between two UDP broadcast DIS protocol networks which the DIS filter passes data. Up to sixteen routes can be defined for a given DIS filter, each configured to send data, filtered based on a number of criteria, in a specified direction between networks.3.2 Broadcast UDP to Broadcast UDPThe first step in configuring a route in the DIS Filter is to determine the UDP networks which comprise it. The IP address, UDP port and DIS exercise ID of each network are specified in this configuration.3.3 DIS PDU Type FilterOnce a route is configured at the network level the filtering specifications may be set. The first of these filters is the DIS PDU Type Filter. The DMOC DIS Filter does not accept all types of PDUs, but rather a subset of DIS PDUs used in Virtual Flag exercises. This subset of PDUs has expanded over the years as requirements emerge.Figure 3.1- DIS PDU Type Filter3.4 Site Application Entity Id FilterThe next Filter is logically ANDed in the DIS Filter’s logic with the DIS PDU Type Filter and is called the Site Application Entity Id Filter. If a given DIS PDU is allowed to pass as specified by the PDU Type Filter it is then tested by its Site, Application and Entity Id in a list as either allowed or denied as specified by the user. This filter does allow a wildcard character so that all PDUs from a given Site or Site and Application match may be specified without having to go into the full detail of including each Site or Entity Id. The default for this filter is to allow all Site, Application and Entity Ids.3.5 Entity State Enumeration FilterThe next two filters are logically ANDed with the previous filter but are logically ORed so that only one or the other may be used in a given route. Like the previous filter, the default is to allow all PDUs which have passed the previous filters to be passed through.The Entity State (ES) Enumeration Filter is used to Allow or Deny Entity State, Fire and Detonation PDUs based on their Entity Type enumeration. The user creates a list that is line delimited and contains enumerations in the 000-000-0000-000-000-000-000 format, with wildcards allowed in any of the seven portion of an Entity Type enumeration. This list is specified in the filter and then either allowed or denied as specified by the user.3.6 Entity State Range FilterBuilding off of the Entity Type enumeration filter, the user may allow or deny a list of Entity State PDUs based on their Entity Type enumeration within a spherical or cylindrical range about an entity or geographic region. Entities that exist within the given range specified are the only ones that will be passed using this filter. 3.7 DIS Header Version TransformationThere are some simulations that are only compatible with a specific version of DIS and do not process older or newer versions. The DMOC DIS filter has the capability of converting the version number in the header of PDUs in a given route so that they appear to be of a different version to meet the requirements of a simulation that expects a distinct version of DIS.3.8 Entity State Enumeration TransformationSome simulations, virtual and constructive do not have an internal model for the variety of Entity Type enumerations that may exist in an exercise. There are times that they support a model that is close and for that reason the Entity State (ES) Enumeration Transformation was created in the DIS Filter.The ES Enumeration Transformation reads a user-generated file that is line delimited. The first item on each line is the Enumeration (in 000-000-0000-000-000-000-000 form) to be converted, followed by a text description and then the Enumeration to be converted too, followed by a text description. The filter then converts each Entity State PDU to contain the second enumeration for every PDU containing the first.3.9 Data Link Signal Format Deny FilterThis filter denies any Raw Binary Data Signal PDU that is in either the TACCSF-J or SISO-J format. 3.10 Data Link Signal Format ConversionOne of the early specifications used to represent Link-16 in the DIS environment was the TACCSF-J Signal PDU format developed in the 1990s. As Link 16 fidelity requirements evolved, the DMOC supported development of the SISO-STD-002-2006 “SISO-J” format.This DMOC DIS Filter transformation converts between the two formats including the addition (SISO-J) or subtraction (TACCSF-J) of an accompanying Transmitter PDU. The VF Link-16 environment is primarily SISO-J, but features several simulations which utilize TACCSF-J.3.11 Transmitter/Signal SAE TransformationThis transformation changes the Site, Application and Entity IDs in Transmitter and Signal PDUs on a given route as specified by the user.3.12 Entity State Heartbeat SpecificationThe VF exercise plan calls for an entity state heartbeat of 5 seconds for air based and 55 seconds for ground and sea based entities.There are some simulations which do not feature to capability to change their heartbeat value by the user, leading to this DIS Filter feature. It will change the Entity State PDU heartbeat of a specified simulation to a user selectable value. This transformation utilizes the Dead Reckoning algorithm specified in the ES PDU to accurately model the entity which it is transforming.3.13 Auto Subscribe for DIS AudioThe Auto Subscribe function of the DMOC DIS Filter enables a site to dynamically allow only those Encoded Audio Signal PDUs containing DIS Voice to which their radios are currently tuned.By monitoring the Transmitter PDUs of an end site, this function only sends the DIS voice on the frequencies to which the end site is listening, providing a very useful feature in the Virtual Flag environment where many different frequencies in use that may overwhelm a DIS voice application.3.14 Transmitter/Signal Frequency FilterThe Transmitter/Signal Frequency Filter denies or allows Transmitter and Signal PDUs over a given route based on the frequency value in the PDU.3.15 IFF Mode IV ConversionThe DMOC DIS Filter provides the capability of converting between primary and alternate Mode IV IFF. This function is used primarily for simulations that can not alter their modes as a user-definable function.3.16 Display GUIThe main display GUI of the DMOC DIS Filter also features useful tools to monitor DIS traffic traveling throughout a given route. The first is the monitor window that allows a user to display the packets passed through a given route and at the individual PDU level those sent, received and rejected over a route. The next allows the user to search for PDUs from a specific Site Application and Entity Id (with wildcards allowed) being passed through the filter, providing the user with the specific route, if it was passed, the PDU type and the Entity Type enumeration for Entity State PDUs.4. DMOC DIS Filter MethodologiesAfter examining the capabilities provided by the DMOC DIS Filter, it is possible to apply them in various combinations at the route level to provide a solution to the issues presented in this paper and encountered in an exercise the size of Virtual Flag.The first step is to identify the needs of a particular platform at the operational requirements level. This step allows the user to determine the types of information to provide from the exercise and compare those requirements against the functionality of the DIS Filter. In addition, the user must take into account the technical capabilities of a given system and the limitations that may exist when sending a large amount of network traffic. Technical limitations like these often lead to necessary compromises. To offer the highest level of fidelity possible, operational considerations may be provided the highest priority.The following sections take a look at a sampling of typical platform types that are regular participants in Virtual Flag. 4.1 Attack PlatformsAttack platforms, like all platforms examined in this section, require voice communications on all relevant frequencies. In terms of entity interactions, the requirements include entity state, IFF and data link data from Command and Control platforms with which the attack aircraft simulation interacts. Also needed are entity state, fire, detonation and radar emission data from threat ground target systems (tanks, trucks, etc.) and relevant threat surface-to-air missile and air flyer systems. Relevance may be based on range from the attack aircraft simulation. Lastly, blue air system entity state, data link and IFF data may be provided as necessary based on range or required interactions. The following paragraph lists the necessary interactions for a generic attack platform along with the relevant DIS filter capabilities used to provide those interactions.Constructive threat air entities for sensors, visuals and engagements:Build a range and Entity ID filter around the system’s real-life platform capabilities while taking into account technical limitations of the simulator, passing entity state, fire, detonation and emission PDUsConstructive threat ground surface-to-air entities for sensors:Build a range and Entity ID filter based on real-life platform capabilities of the systemConstructive threat ground targets for firing engagements, important for visualsBuild a range and Entity ID filter based on real life platform capabilities of the systemConstructive friendly air entities for sensors, visuals and correlation of voice and data link communicationsBuild a range and Entity ID filter based on real life platform capabilities while taking into account technical limitations of simulator, passing entity state, fire, detonation, IFF and emission PDUsCommand and Control (C2) platform entities for sensors, visuals and correlation of voice and data link communicationsBuild an Entity ID filter allowing all relevant C2 entity state and IFF PDUs Voice communications from relevant frequenciesBuild a voice route allowing Transmitter, Signal and Receive voice only (no data link) using the auto-subscribe featureData Link messages from C2 platforms and systems with which the simulation works such as wingmenBuild an Entity ID filter for relevant entities allowing Signal and Transmitter PDUs based on the SISO-J frequency (1131MHz)4.2 Bomber PlatformsLike the attack platform, bomber platforms start off with the requirement to receive all relevant voice communications. In terms of entity interactions, the requirements include entity state, IFF and data link data from those Command and Control platforms with which the bomber simulation interacts. Also needed are entity state, fire, detonation and entity emission data from threat ground target systems (tanks, trucks, etc.) and relevant threat surface-to-air missile and fighters based on range from the bomber. Last, blue air systems, entity state, data links and IFF as necessary based on range or if there are constructive systems with which the bomber interacts. The following paragraph lists the necessary interactions for a generic bomber platform along with the relevant DIS filter capabilities used to provide those interactions.Constructive threat air entities for sensors, visuals and engagementsBuild a Range around system plus Site App Entity Id filter based on real life platform capabilities while taking into account technical limitations of simulator, passing entity state, fire, detonation and entity emission PDUsConstructive threat ground surface-to-air missile entities for sensorsBuild a Range around system plus Site App Entity Id filter based on real life platform capabilities of systemConstructive threat ground targets for firing engagements, important for visualsBuild a Range around system or geographic based range about targeted systems plus Site App Entity Id filter based on real life platform capabilities of systemThis filter may not be necessary; it depends on the fidelity of the SIM. The Bomber may only target a geographic location and not confirm visual of the targetConstructive Blue air entity range for sensors, visuals and correlation of voice and data link communicationsRange in NM around system plus Site App Entity Id filter based on real life platform capabilities while taking into account technical limitations of simulator, passing entity state, fire, detonation, IFF and entity emission PDUsC2 (Command and Control) platform entities for sensors, visuals and correlation of voice and data link communicationsRelevant C2 entity state and IFF PDUs allowed using Site App Entity Id filterVoice communications from relevant frequenciesVoice route allowing Transmitter, Signal and Receive voice only (no data link signal PDUs allowed) with auto subscribe functionality turned onData Link messages from C2 platforms and systems which the SIM works with such as wingmenSignal and Transmitter PDUs passed on SISO-J frequency (1131MHz) from relevant systems using Site App Entity Id filter4.3 Command and Control PlatformsCommand and Control (C2) Platforms vary in terms of requirements based on their respective functionalities in the filed. For the most part though, C2 systems require most frequencies for voice communications and all data links that exist on an exercise network. Air Radar systems including the AWACS system require all air traffic to be passed to them but do not require any ground traffic. On the other hand the JSTARS simulation is a ground radar system and therefore requires all land entities while not requiring those in the air.  Another type of C2 platform is known as an electronic warfare (EW) collector and based on the capabilities and requirements may or may not receive entity state PDUs, along with electromagnetic emission PDUs of selected air and ground systems that feature emitter systems.Because of the differences in C2 systems there are a lot of options and many different ways to provide for their requirements using a DIS filter. Below are the ways to provide the relevant data and also the system to which the filter applies.Constructive Threat air entity range for sensors, possible engagements and visualAll Threat air entity state PDUs by Site App Entity ID Filter for Air Radar systems, possibly fire and detonation PDUs if system is determined to be a targetAll Threat air electromagnetic emission PDUs for EW collector systemConstructive Threat ground systems for sensorsAll or range in NM about system or geographic area plus Site App Entity Id filter to identify threat ground system entity state PDUs based on real life platform capabilities of system if technical limitations exist for ground radar systems.Constructive Threat ground surface to air systems for sensorsAll or range in NM about system or geographic area plus Site App Entity Id filter to identify threat ground radar system’s entity state and electromagnetic emission PDUs for EW collector systems. Entity state, fire and detonation PDUs if any C2 system is determined to be a target of ground systems with radars. Constructive Blue air entity range for sensors, visuals and correlation of voice and data link communicationsRange in NM around system plus Site App Entity Id filter based on real life platform capabilities while taking into account technical limitations of simulator, passing entity state, fire, detonation, IFF and entity emission PDUsC2 (Command and Control) platform entities for sensors, visuals and correlation of voice and data link communicationsOften, C2 platforms must communicate with one another and require information to identify those systems, requiring the entity state and IFF PDUs from other C2 platforms using the Site App Entity Id filterVoice communications from relevant frequenciesVoice route allowing Transmitter, Signal and Receive voice only (no data link signal PDUs allowed) with auto subscribe functionality turned onData Link messages from all platformsSignal and Transmitter PDUs passed on SISO-J frequency (1131MHz) that exist on the exercise network4.4 Fighter PlatformsFighter platforms can be quite complex in their setup because of the multitude of capabilities they present. Many fighter virtual simulators feature very high fidelity systems and thus require a very specialized data set. Another side to offering a high fidelity simulation is complex visuals and engagement logic that can become overwhelmed in a distributed exercise featuring thousands of entities.Because of the fidelity of fighter simulators, the capabilities of the DMOC DIS Filter are utilized to their utmost in providing a creative solution for their inclusion in Virtual Flag. Balancing the need to stimulate their internal systems and providing fidelity without overwhelming the systems is the driving force behind this creativity.The following section lists the data sent and which filter is necessary to provide data to a fighter SIM in a Virtual Flag exercise.  Constructive Threat air entity range for sensors, visuals and engagementsRange in NM around system plus Site App Entity Id filter based on real life platform capabilities while taking into account technical limitations of simulator, passing entity state, fire, detonation and entity emission PDUsConstructive Threat ground surface to air systems for sensorsRange in NM around system plus Site App Entity Id filter based on real life platform capabilities of systemConstructive Blue air entity range for sensors, visuals and correlation of voice and data link communicationsRange in NM around system plus Site App Entity Id filter based on real life platform capabilities while taking into account technical limitations of simulator, passing entity state, fire, detonation, IFF and entity emission PDUsC2 (Command and Control) platform entities for sensors, visuals and correlation of voice and data link communicationsRelevant C2 entity state and IFF PDUs allowed using Site App Entity Id filterVoice communications from relevant frequenciesVoice route allowing Transmitter, Signal and Receive voice only (no data link signal PDUs allowed) with autosubscribe functionality turned onData Link messages from C2 platforms and systems which the SIM works with such as wingmenSignal and Transmitter PDUs passed on SISO-J frequency (1131MHz) from relevant systems using Site App Entity Id filter4.5 White ForceAn important component of the Virtual Flag exercise is the White Force. The White Force’s purpose in Virtual Flag is to add a dynamic element to the exercise. The White Force accomplishes this by operating within the blue air constructive scenario to add extra capabilities and make scenario changes to provide better training.Typically, all blue air constructive forces in Virtual Flag are generated by the Scenario Toolkit and Generation Environment (STAGE) constructive simulation. The STAGE-generated blue air scenario normally consists of nearly fifteen hundred scripted entities modified and controlled dynamically by more than twenty Air Force personnel. White Force operators have DIS voice access and use the capabilities of STAGE to perform various actions. For example, if an Army tactical unit is participating in an exercise and calling in a threat ground target for an attack platform that is not represented by a virtual simulation, a White Force constructive entity can be deployed for support. In another example, if there is a two-ship flight of virtual fighters and a given mission calls for a four-ship, two White Force fighters can be assigned to support that mission.The types of data sent required for White Force operation is summarized as follows.All Constructive Threat air and surface to air entity state, fire, detonate, IFF and electromagnetic emission PDUs for sensors, visuals and engagementsThreat air filtered by Site App Entity Id and PDU type filtersSome Constructive Threat ground systems for sensors, visuals and engagementsRange in NM about geographic area plus Site App Entity Id filter of relevant threat ground systemsAll blue air, virtual and constructive provided by Site App Entity Id FilterVoice communications from all frequencies included in exerciseVoice route allowing Transmitter, Signal and Receive voice only (no data link signal PDUs allowed) to all White Force Operator stations5. ConclusionIn any large scale DIS based event, the exercise planner has many considerations in regard to providing the best training to each participant in form of content. Because of modern network appliances, it is possible to support large exercises from an infrastructure standpoint. However, from a simulation technical capability and training requirements viewpoint, it usually does not make sense to send the large amounts of DIS data that comprise an exercise to each of the participating virtual simulations.From the strictly technical side, a simulator may not be able to process all the interactions from a large DIS exercise: They likely cannot display the large number of platforms due to individual fidelity and hardware limitations. From the training side, there are interactions in a large-scale distributed joint exercise that are simply not applicable to all participants. Furthermore, specially designed pieces of the events may be tailored to only a few participants.With these reasons in mind, the USAF DMOC deemed it necessary to build upon previous experience in distributed exercises and network appliances to create a standalone DIS Filter application. The capabilities of the DMOC DIS filter were initially designed and have been refined over the years to address the issues presented by technical limitations and training requirements.Using the capabilities of the DIS Filter, it is possible to support the highest level of training with almost any number of simulations while remaining within the confines of numerous technical limitations. The methodologies discussed in this document outline typical platforms that have participated in Virtual Flag exercises, providing the basis for exercise planning that considers each training system. These methodologies have some similarities among various platform types, leading to the conclusion that the DMOC DIS filter can be applied to any number of other DIS-based systems. 6. References[1]	A. Lockheed Martin Information & Technology Services, DMOC Program: “Software Users Manual for the Distributed Interactive Simulation (DIS) Filter and DIS Filter Manager”, March 2003.[2]	A. Dwight Drager: “DMOC History” DMOC University Training Slides, May 2005.[3]	A. Joe Sorroche: “Bandwidth Reduction Techniques Used in DIS Exercises” SISO 04E-SIW-025, 2005.[4]	A. Joe Sorroche: “Bandwidth Reduction Techniques: An Update” SISO 05F-SIW-105,, 2005.Author BiographiesSTEVE PADILLA is a Systems Engineer at the United States Air Force Distributed Mission Operations Center at Kirtland Air Force Base in New Mexico. He has written specifications for several DMOC systems including the DMOC DIS Filter and worked as the technical lead for several Virtual Flag events. He holds a Bachelor of Science degree in Electrical Engineering from the New Mexico Institute of Mining and Technology.CRAIG GOODYEAR has ten years of professional experience as a Software Engineer; including four years in the Modeling and Simulation field.  He currently works as a Senior Software Engineer for Lockheed Martin at the Distributed Mission Operations Center (DMOC).  He develops UDP software routing applications, as well as DIS-based debrief and emulation tools.  His primary area of expertise is in computer networking and distributed simulation.  He holds a Bachelor of Science in Computer and Information Science degree from Lamar UniversityFigure 4.1 – Synthetic Battlespace, Red and Blue Constructive plus Virtuals; whom should see what?