An XML-Based Approach to Actor State Migration for Computer Generated ActorsMartin R. Stytz, Ph.D.Sheila B. Banks, Ph.D.Air Force Research LaboratoryCalculated InsightWright-Patterson AFB, OHOrlando, Fl  32828(937) 255-2811 x4380(407) 353-0566mstytz@worldnet.att.net, mstytz@acm.orgsbanks@calculated-insight.comKeywords:actor migration, XML, computer generated actors, actor state transmission, actor state representation, entity migrationAbstract:  Robust computer-generated actor (CGA) migration for military distributed virtual environments (DVEs) requires transmission of all of the information needed to reconstitute the CGA at the recipient host.  An impediment to robust computer-generated actor (CGA) migration is the difficulty encountered when transmitting CGA state from one computer host to another host.  There are a number of reasons for the difficulty, including the bandwidth required by the process, the need for timely migration, and the challenges encountered in reconstituting the CGA using the transmitted actor state.  The work we report here was undertaken to address the CGA actor state transmission issue by developing an interoperable and open format that can be used to transmit the complete state of a CGA between the hosts in a distributed simulation.  The foundation for our approach to transmitting the CGA state is the use of the Extensible Markup Language (XML).  Our actor state transmission representation can express information in a format-independent, system independent, and reasoning-system independent manner.  Below, we discuss our approach to developing the actor state transmission format and our current specification of the format.  The paper concludes with a short summary of the current status of the project and our suggestions for future work.1.  IntroductionComplex military distributed virtual environments (DVEs) require computer generated actors (CGAs) that exhibit realistic, human-like behaviors.  Because fidelity and realistic behavior coupled with reasonable cost of CGAs are of paramount importance, actor migration is viewed as one means of maintaining realism because it minimizes interaction latency, conserves computational resources, and yet provides expensive computational services on demand.  Actor migration is the ability to change the host computer for a CGA during the execution of a simulation without a noticeable disruption to the CGA’s performance, reasoning, or other activities.  To migrate a CGA, information concerning the CGA’s state must be transmitted.  In prior work [15], we discussed many of the issues associated with migration and described the three basic classes of migration.  The three classes of actor migration are differentiated by the starting and ending type of control for the actor.  In the first class of migration, an actor moves from one host in a computer-controlled situation to another host in a computer-controlled situation (CGA-CGA).  In the second class of migration, an actor moves from a computer-controlled situation to a human-controlled situation (CGA-HCA).  In the third class of migration, the actor moves from a human-controlled situation to a computer-controlled situation (HCA-CGA).To help organize the data transportation process and to provide a framework for discussion, we suggest that the data be transported in data structures called suitcases, similar to those proposed by Bharat [1].  Four types of suitcases are required to support the three types of migration.  The four suitcases are called the actor state, reasoning system, situation awareness, and mission suitcases [15].  The issue we address in this paper is the transmission of the actor state within the actor state suitcase for a CGA for all three types of migration.  For an aircraft CGA, the actor state suitcase holds the entity type, force ID, location, velocity, acceleration, altitude, orientation, call-sign, dead-reckoning algorithm, camouflage scheme, and formation information.  Other required actor state information includes current damage, aerodynamics model(s), weapons, and fuel load.  Additional required actor state information includes on-board sensors, on-board sensors power settings, on-board sensors status, frequency, sweep, centerline, modes, airframe radar-cross section model, airframe infrared model, flight/mission commander or lead, terrain model, coordinate system, and radio frequency assignments.  Also, the CGA's skill level(s), current fidelity level, the values for the actor’s combat psychology model, and High Level Architecture (HLA) subscriptions and publications for the actor must be transmitted.Our work was conducted within the context of the Air Force's Distributed Mission Training (DMT) program; therefore, our results in this paper are heavily oriented toward the needs of aircraft CGA migration and the transmission of aircraft CGA state within the Distributed Mission Training Integrated Threat Environment (DMTITE) [16].  To achieve the DMTITE performance objectives, all threats must appear at required levels of fidelity XE "fidelity"  for all the actors operating in the simulation environment and they must interact with human-operated and computer-controlled actors in a realistic fashion.  Achieving this goal XE "goal"  is not possible with available simulation technology for two reasons.  First, each primary aircraft simulator training system developer has created their own threat system and made their own modeling decisions to support a specific user for a few select predetermined conditions.  Second, due to developers’ decisions and proprietary concerns threat activity can not be coordinated.  However, threat system interaction XE "interaction"  must be coordinated.  The Distributed Mission Training Integrated Threat Environment  Project was undertaken to develop an effective solution to these two issues.  In the course of addressing these issues, we were led to an investigation of actor migration.To successfully address the issues raised above, DMTITE must provide a distributed threat environment composed of surface threats, air threats and jamming systems operating as computer generated actors XE "CGA"  within a distributed simulation environment XE "distributed virtual environment" .  The goal XE "goal"  for the operation of a DMTITE computer-generated actor XE "actor"  is for it to accurately mimic the observable behaviors of its counterpart.  The CGA achieves this goal by perceiving the environment, maintaining a model of the environment and tactical situation, planning actions, reacting to situations, monitoring its action(s), and communicating with other actors (both human and computer-controlled).  CGAs that exhibit believable human-like behaviors.  Within DMTITE, the run-time challenges for a CGA arise from the need to compute human-like behaviors and reactions to a complex dynamic environment at a human-scale rate of time.  Clearly, the DMTITE CGA’s behavior XE "behavior"  must be realistic and accurate enough so that other CGAs and human participants react to its behaviors as though the DMTITE CGA were human-controlled.  Interaction latency and hence migration are important aspects of addressing these objectives.To migrate a CGA, its state must be transmitted from the source to recipient computer host.  The objective for the work reported here was the definition of a meta-language that permits the representation of actor state in the actor state suitcase in a way that is CGA system independent and that captures and faithfully transmits the actor state between a source and recipient CGA host.  To insure that the transmission format was implementation independent, we defined the actor state suitcase transmission format using the Extensible Markup Language (XML).  We chose XML because it is a data format and type independent language that is expressive enough to represent diverse data, databases, and relationships.  XML is a meta-language that permits the user/designer to define the components of the language (syntax, data types, vocabulary, and operators) needed to achieve a required capability.  The definition is portrayed within a Document Type Definition (DTD).  Using XML, we developed a CGA state transmission representation that can be used to reconstitute a CGA at a recipient host.  XML provides the flexibility needed to transmit all of the components of the actor state in a robust and flexible manner.In the next section, we present an introduction to CGA migration and to XML.  Section Three contains a description of our requirements for the actor state transmission representation.  Section Four contains the definition of the actor state transmission representation.  Section Five contains an example of the use of the transmission representation.  Section Six contains our conclusions and recommendations for further research.BackgroundIn this section we present a brief discussion of CGA migration, the rationale for the use of XML, and briefly introduce the XML language and its syntax.2.1	CGA MigrationAs discussed by Bharat [1], an agent, from a distributed computational perspective is a computation in progress that can move from network node to network node, perform a computation at a node, and move on to another node at its own discretion.  A suitcase is a data structure holding data that accompanies the agent from node to node.  The suitcase contains long-term memory for the agent, the tasks to perform (the mission), and parameters for the tasks.  An agent’s arrival briefing is the information that it receives at a recipient node concerning the state and status of the node.  For example, the arrival briefing can contain information concerning the site’s status, availability of resources, available models, local and long-haul latencies, and other system-specific information.When migrating an aircraft CGA from computer to computer, all of the information needed to continue uninterrupted execution of its mission must be transmitted.  Therefore, information related to actor state, entity type, force ID, location, velocity, acceleration, altitude, orientation, call-sign, dead-reckoning algorithm, camouflage scheme, and formation information must be transmitted.  Other required information includes the actor's current damage, aerodynamics model(s), weapons, available fuel and knowledge base.  Additionally, because the aircraft CGA must continue execution of its mission and its current operations without interruption at the recipient host, the type of reasoning performed by the CGA and the knowledge available to the CGA are required at the receiving host.  In the circumstance when transfer of control is required from a CGA to a manned system or vice-versa, data relating to terrain model resolution, data displayed in the cockpit, and evaluation of wingman/lead aircraft ability must be transmitted.  The CGA position, terrain model, coordinate system, fuel, weapons load, sensor status, infrared signature, radar signature, and mission, must be communicated for all types of migration.  Depending upon the type of migration performed, information concerning the state of the reasoning system, current knowledge, required skill level, required fidelity level, active knowledge bases, and latency requirements may also need to be transmitted.  Because some types of migration require the rapid establishment of situation awareness by the recipient; therefore, anticipation of transfer, and latency and accuracy of the transfer must be considered.  When the information for the CGA arrives at the recipient host, the recipient must organize the information and use it to initialize and execute the newly arrived CGA.  Upon initialization, the migrating CGA should receive an arrival briefing from the recipient host.  The arrival briefing should contain information on the other entities at the recipient, host IP address, the available resources, the supported High Level Architecture (HLA) subscriptions, and local resources.  In addition, an arrival briefing should be given by the CGA to the host.  The briefing from the CGA to the host should contain the desired subscriptions, necessary publications, latency requirements, and location of data log files.  2.2	Rationale for Using XMLIn the development of the actor state transmission format, the most important decision to be made outside of the format itself was the selection of the technology to be used to express the format.  For our purposes, XML was an ideal choice for the base language for the format.  XML is a general-purpose, meta-markup language for documents containing structured information.  XML also supports the definition of customized markup components [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].  The customized markup components, called tags, are documented within a Document Type Definition (DTD).  The DTD describes a vocabulary and syntax for use within a document to be transmitted.  In our case, the document is an individual CGA’s state.Several factors supported our decision to use XML.  First, XML is a flexible approach to formatting.  The XML capability to define and use custom tags and the minimal requirements imposed by the language gave us great confidence that we would be able to express the transmission format robustly within the boundaries of the language.  Second, XML is widely used and is standardized; therefore, the basic components of the language are stable and well understood.  Third, XML is precise, it has a well defined set of rules for describing a document and for ordering the contents of a document but does not specify semantics.  As a result, XML provides the basis for developing a common data format that is robust in the face of data corruption, self-describing in terms of tag meaning, and extensible to accommodate unforeseen data requirements. Fourth, because XML supports the definition of custom tag-sets and custom document structures that are completely contained within the document, an XML-based specification for actor state can be automatically searched and categorized by computer programs instead of manually.  Finally, XML supports the creation and use of multi-part, distributed documents and supports interchange of data between applications.  These two capabilities further support transmission and reconstitution of the CGA state information.  Using XML, we developed a CGA state transmission representation that can be used to reconstitute a CGA at a recipient host.  XML provides the flexibility needed to transmit all of the components of the actor state in a robust and flexible manner.2.3	Introduction to XMLAn XML-based transmission representation has three parts, the XML document, the Document Type Definition, and the XML Stylesheet.  The stylesheet only addresses appearance issues, so we will not discuss it further.  An XML-based document has a standard format and pre-defined tags.  An XML document consists of one or more elements, marked as shown in Figure 1.<Start>Element text to be transmitted</Start>Figure 1:  XML Document Element FormatAn element consists of two tags, an opening tag ( < > ) and a closing tag ( </ > ), with the name of the tag appearing between the < and the >.  The nesting of the tags within the XML document must correspond to the nesting specified within the DTD.  An XML document always begins with the XML language declaration in the following format, <?xml version=”1.0” standalone=”no”?>.  The declaration specifies the version of XML used and whether or not an external DTD is required.  This particular specification indicates that an external DTD is needed by a parser to understand the structure of the document; alternately, saying yes means that a DTD is embedded within the XML document.  The second line defines the root element of the document (DMTITE:RuleBased) and the location of the DTD.  The remainder of the document contains tags defined in the DTD and the corresponding data to be transmitted.The Document Type Definition (DTD) specifies how the elements (contents) of a document must relate to each other.  Each element is defined using a <!ELEMENT> declaration in the following format: <!ELEMENT elementname rule >.  There are a number of keywords that can be used to define the rule, including the keywords ANY and #PCDATA.  The ANY keyword indicates that any character data or keyword can appear within the element.  The keyword #PCDATA indicates that only general character data can appear within the element.  To indicate that multiple elements must appear in a specific sequence, commas are used to separate the instances.  Parentheses are used to group declarations.  Within a declaration, one of three operators can be used to specify the number of occurrences of an element.  The ? operator indicates that the element must appear once or not at all.  The + operator indicates that the element must appear at least once.  The * operator indicates that the element can appear any number of times or not at all.  Within the DTD, attributes can be defined for any element.  An attribute is defined using the <!ATTLIST> declaration, which has the form <!ATTLIST target_element attribute_name attribute_type default>.  Data types include character data (CDATA) and enumerated data, as well as the keywords #REQUIRED, #IMPLIED, and #FIXED.  Using these components as a basis in conjunction with a set of topic-specific keywords, a document type can be defined.  XML has additional capabilities that we have not described here but are discussed in a variety of resources [2,3,4,5,6,7, 8,9,10,11,12,13,14]. 3.	Actor State Transmission Format RequirementsTo guide us in the development of the actor state transmission representation, we formulated a set of requirements for the functionality desired for the actor state transmission format.  The transmission representation had to be CGA application/system independent.  The transmission representation had to support composability so that re-assembly of the actor state could be accomplished using resources such as dynamics models and sensor models distributed across the Internet. Finally, the actor state transmission representation had to be able to permit the definition of extensions to the transmission representation without corrupting the baseline transmission representation.  We present our solution to these requirements in the next section.4.	Actor State Transmission FormatXML is a document-oriented language; therefore, the complete actor state for a CGA can be expressed as one or more documents using XML.  Our approach to the design of the format was to proceed from the most general information concerning an actor to the most specific.  The outline for the actor state transmission is presented in Figure 2.  The XML-based actor state transmission format document type definition (DTD) is contained in Figure 3, which spans several pages.  Selected examples of the XML tags that we defined are presented in Figure 4.  These tags are used to describe the actor state in the transmission representation.< ACTOR_STATE_MIGRATION >< actor_name>< actor_type >< position >< velocity >< orientation >< decision_making_system >< skill_level >< / ACTOR_STATE_MIGRATION >Figure 2:  Outline of the XML-Based Actor State Transmission Format<?XML version=”1.0” encoding=”UTF-8”?><!DOCTYPE ACTOR_STATE_MIGRATION SYSTEM [<!ELEMENT	ACTOR_STATE_MIGRATION	actor_name, actor_type, category, model, nationality, alliance, domain, position, velocity, acceleration, orientation, positional_accuracy, dead_reckoning_algorithm, remaining_fuel, log_file_URL, number_of_entity_guises, actor_guise_URL, current_actor_guise, actor_coordinate_system, actor_coordinate_system_translation_method, call_sign, entity_id, infrared_signature_URL, RCS_URL, leader, wingman, initial_subscriptions, bomb_number_of_damage_levels, bomb_number_of_damage_levels_URL, current_bomb_damage_level, cluster_bomb_number_of_damage_levels, cluster_bomb_number_of_damage_levels_URL, current_cluster_bomb_damage_level, missile/rocket_number_of_damage_levels, missile/rocket_number_of_damage_levels_URL, current_missile/rocket_damage_level, actor_initialization_parameters_file_URL, number_of_terrain_models, terrain_model_definition_file_URL*, current_terrain_model, number_of_dynamics_models, (dynamics_model_name, dynamics_model_URL, dynamics_model_coordinate_system, dynamics_model_parameters_URL)*, current_dynamics_model, number_of_sensor_models, (sensor_model_name, sensor_model_URL, sensor_model_coordinate_system, sensor_model_parameters_URL)*, current_sensor_model, number_of_knowledge_bases, (knowledge_base_id, knowledge_base_file_URL)*, maximum_number_of_radio_frequencies, radio_frequency_content+, current_radio_frequency, radio_operational_status, long_term_decision_engine_name, long_term_decision_engine_URL, long_term_number_of_knowledge_bases_used, long_term_knowledge_base_file_URL*, mid_term_decision_engine_name, mid_term_decision_engine_URL, mid_term_number_of_knowledge_bases_used, mid_term_knowledge_base_file_URL*, critical_decision_engine_name, critical_decision_engine_URL, critical_number_of_knowledge_bases_used, critical_knowledge_base_file_URL*, arbitration_engine_name, arbitration_engine_URL, arbitration_number_of_knowledge_bases_used, arbitration_knowledge_base_file_URL*, skill_level, skill_level_file_URL, combat_psychology_file_URL, GPS_capable, (number_of_GPS_satellites, (GPS_satellite_id, GPS_satellite_position, GPS_satellite_ephemeris_URL, GPS_satellite_time)*)? ><!ELEMENT	actor_name	(#PCDATA)><!ELEMENT	actor_type	(#PCDATA)><!ELEMENT	category	(#PCDATA)><!ELEMENT	model	(#PCDATA)><!ELEMENT	nationality	(#PCDATA)><!ELEMENT	alliance	(#PCDATA)><!ELEMENT	domain	(#PCDATA)><!ELEMENT	position	(#PCDATA)><!ELEMENT	velocity	(#PCDATA)><!ELEMENT	acceleration	(#PCDATA)><!ELEMENT	orientation	(#PCDATA)><!ELEMENT	positional_accuracy	(#PCDATA)><!ELEMENT	dead_reckoning_algorithm	(#PCDATA)><!ELEMENT	remaining_fuel	(#PCDATA)><!ELEMENT	log_file_URL	(#PCDATA)><!ELEMENT	number_of_entity_guises	(#PCDATA)><!ELEMENT	actor_guise_URL	(#PCDATA)><!ATTLIST	actor_guise_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	current_actor_guise	(#PCDATA)><!ELEMENT	actor_coordinate_system	(#PCDATA)><!ELEMENT	actor_coordinate_system_translation_method	(#PCDATA)><!ELEMENT	call_sign	(#PCDATA)><!ELEMENT	entity_id	(#PCDATA)><!ELEMENT	infrared_signature_URL	(#PCDATA)><!ATTLIST	infrared_signature_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	RCS_URL			(#PCDATA)><!ATTLIST	RCS_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	leader	(#PCDATA)><!ELEMENT	wingman	(#PCDATA)><!ELEMENT	initial_subscriptions	(#PCDATA)><!ELEMENT	bomb_number_of_damage_levels	(#PCDATA)><!ELEMENT	bomb_number_of_damage_levels_URL	(#PCDATA)><!ELEMENT	current_bomb_damage_level	(#PCDATA)><!ELEMENT	cluster_bomb_number_of_damage_levels	(#PCDATA)><!ELEMENT	cluster_bomb_number_of_damage_levels_URL	(#PCDATA)><!ELEMENT	current_cluster_bomb_damage_level	(#PCDATA)><!ELEMENT	missile/rocket_number_of_damage_levels	(#PCDATA)><!ELEMENT	missile/rocket_number_of_damage_levels_URL	(#PCDATA)><!ELEMENT	current_missile/rocket_damage_level	(#PCDATA)><!ELEMENT	actor_initialization_parameters_file_URL	(#PCDATA)><!ATTLIST	actor_initialization_parameters_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	number_of_terrain_models	(#PCDATA)><!ELEMENT	terrain_model_URL	(#PCDATA)><!ATTLIST	terrain_model_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	current_terrain_model	(#PCDATA)><!ELEMENT	number_of_dynamics_models	(#PCDATA)><!ELEMENT	dynamics_model_name	(#PCDATA)><!ELEMENT	dynamics_model_URL	(#PCDATA)><!ATTLIST	dynamics_model_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	dynamics_model_coordinate_system	(#PCDATA)><!ELEMENT	dynamics_model_parameters_URL	(#PCDATA)><!ATTLIST	dynamics_model_parameters_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	current_dynamics_model	(#PCDATA)><!ELEMENT	number_of_sensor_models	(#PCDATA)><!ELEMENT	sensor_model_name	(#PCDATA)><!ELEMENT	sensor_model_URL	(#PCDATA)><!ATTLIST	sensor_model_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	sensor_model_coordinate_system	(#PCDATA)><!ELEMENT	sensor_model_parameters_URL	(#PCDATA)><!ATTLIST	sensor_model_parameters_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	current_sensor_model	(#PCDATA)><!ELEMENT	number_of_knowledge_bases	(#PCDATA)><!ELEMENT	knowledge_base_id	(#PCDATA)><!ELEMENT	knowledge_base_file_URL	(#PCDATA)><!ATTLIST	knowledge_base_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	maximum_number_of_radio_frequencies	(#PCDATA)><!ELEMENT	radio_frequency_content+ (name+, frequency)	>	<!ELEMENT	name	(#PCDATA)>	<!ELEMENT	frequency	(#PCDATA)><!ELEMENT	current_radio_frequency	(#PCDATA)><!ELEMENT	radio_operational_status	(#PCDATA)><!ELEMENT	long_term_decision_engine_name 	(#PCDATA)><!ELEMENT	long_term_decision_engine_URL	(#PCDATA)><!ATTLIST	long_term_decision_engine_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	long_term_number_of_knowledge_bases_used	(#PCDATA)><!ELEMENT	long_term_knowledge_base_file_URL	(#PCDATA)><!ATTLIST	long_term_knowledge_base_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	mid_term_decision_engine_name 	(#PCDATA)><!ELEMENT	mid_term_decision_engine_URL	(#PCDATA)><!ATTLIST	mid_term_decision_engine_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	mid_term_number_of_knowledge_bases_used	(#PCDATA)><!ELEMENT	mid_term_knowledge_base_file_URL	(#PCDATA)><!ATTLIST	mid_term_knowledge_base_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	critical_decision_engine_name 	(#PCDATA)><!ELEMENT	critical_decision_engine_URL	(#PCDATA)><!ATTLIST	critical_decision_engine_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	critical_number_of_knowledge_bases_used	(#PCDATA)><!ELEMENT	critical_knowledge_base_file_URL	(#PCDATA)><!ATTLIST	critical_knowledge_base_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	arbitration_engine_name 	(#PCDATA)><!ELEMENT	arbitration_engine_URL	(#PCDATA)><!ATTLIST	arbitration_engine_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	arbitration_engine_number_of_knowledge_bases_used	(#PCDATA)><!ELEMENT	arbitration_knowledge_base_file_URL	(#PCDATA)><!ATTLIST	arbitration_knowledge_base_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	skill_level 	(#PCDATA)><!ELEMENT	skill_level_file_URL	(#PCDATA)><!ATTLIST	skill_level_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	combat_psychology_file_URL	(#PCDATA)><!ATTLIST	combat_psychology_file_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	GPS_capable	(#PCDATA)><!ELEMENT	number_of_GPS_satellites	(#PCDATA)><!ELEMENT	GPS_satellite_id	(#PCDATA)><!ELEMENT	GPS_satellite_position	(#PCDATA)><!ELEMENT	GPS_satellite_ephemeris_URL	(#PCDATA)><!ATTLIST	GPS_satellite_ephemeris_URL	xlink:form	CDATA	#FIXED	“simple”	href		CDATA	#REQUIRED><!ELEMENT	GPS_satellite_time	(#PCDATA)>]></ACTOR_STATE_MIGRATION>Figure 3:  Actor State Transmission Representation Format Document Type DefinitionTagMeaningdomainLand, sea, air, or spacepositionLocation of the actor in the HLA coordinate system, x,y,z order, comma delimited, in metersvelocityVelocity of the actor in the HLA coordinate system, x,y,z order, comma delimited, in meters/secondaccelerationAcceleration of the actor in the HLA coordinate system, x,y,z order, comma delimited, in meters/second/secondpositional_accuracyAccuracy required before transmitting a position updateleaderFlight lead for the CGAwingmanWingman (if any) for the CGAremaining_fuelTotal fuel remaining for the actor, in poundsinfrared_signature_URLLocation of the infrared model used by the actorRCS_URLLocation of the radar cross section model used by the actorlog_file_URLLocation of the actor activity log file used by the actoractor_coordinate_systemCoordinate system used by the actoractor_coordinate_system_translation_methodMethod used by the actor to translate coordinate system values from the HLA to its own internal coordinate system:=Assignment operator==Equivalency test>Greater than<Less than>=Greater than or equal to<=Less than or equal toNoneNo entryANYAny value is acceptableinitial_subscriptionsHLA entity subscriptions required by the actornumber_of_terrain_modelsTotal number of terrain models required by the actorterrain_model_definition_file_URLURL of each terrain modelcurrent_terrain_modelTerrain model currently in usenumber_of_dynamics_modelsTotal number of dynamics models required by the actorcurrent_dynamics_modelDynamics model currently in usenumber_of_sensor_modelsTotal number of sensor models required by the actorcurrent_sensor_modelSensor model currently in usenumber_of_knowledge_basesTotal number of knowledge bases required by the actormaximum_number_of_radio_frequenciesTotal number of radio frequencies available to the actorradio_operational_statusWhether the radio is operational or notlong_term_decision_engine_nameName given to the long term decision engine used by the actorlong_term_decision_engine_URLLocation of the long term decision engine on the internetmid_term_decision_engine_nameName given to the mid term decision engine used by the actormid_term_decision_engine_URLLocation of the mid term decision engine on the internetcritical_decision_engine_nameName given to the critical decision engine used by the actorcritical_decision_engine_URLLocation of the critical decision engine on the internetarbitration_engine_nameName given to the arbitration engine used by the actorarbitration_engine_URLLocation of the arbitration engine on the internetskill_levelSkill level assigned to the actorcombat_psychology_file_URLLocation on the internet of the combat psychology model used by the actorGPS_capableWhether the actor has a GPS positional capabilityFigure 4:  Selected Actor State Transmission XML Tags/Meanings5.	Example Use of the Transmission FormatOur example of the use of the actor state transmission format is presented in Figure 5.  The example does not present the complete contents of the actor state suitcase, but does illustrate how the proposed transmission format would be used.  Note that we do not use all of the tags available within the actor state transmission representation; selective use of the tags is permitted within XML.   <?xml version=”1.0” standalone=”no”?><?DOCTYPE ACTOR_STATE_MIGRATION SYSTEM  “Actor_State_Migration.dtd”><ACTOR_STATE_MIGRATION><actor_name>Eagle 1 </actor_name><actor_type>aircraft </actor_type><model>F-15</model><domain>air</domain><velocity>0.0,0.0,0.0</velocity><acceleration>0.0,0.0,0.0</acceleration><positional_accuracy>1,1,1</positional_accuracy><remaining_fuel>4500</remaining_fuel><log_file_URL>http://www.logs.mil/eagle1</log_file_URL><call_sign>Eagle 1</call_sign></ACTOR_STATE_MIGRATION >Figure 5:  Example Actor State Representation in the XML-Based Actor State Transmission Format6.	Conclusions and Future WorkIn this paper we described a CGA actor state transmission format for use in migrating actor from host to host within a HLA distributed simulation.  We presented the complete representation that we developed; however, the format is strongly oriented toward supporting aircraft CGAs because of the setting for the work that led to the format.  We also presented a brief example that illustrates how the format can be used to represent an actor's state.  However, our work on developing the format is not complete.  Our next task is to examine the format and determine how the representation should be expanded to support actors in all domains.  We also plan to evaluate the transmission format using a variety of actors and CGA applications.  Finally, we hope that the transmission format that we described can serve as the basis for a transmission format standard defined in the HLA documentation.  Therefore, we encourage comments on this format and hope that others will implement, test, and extend the format as well.  Another area to be investigated is the stylesheet(s) used to display the actor state to humans.  We plan to address stylesheet and display issues in future work.ReferencesBharat, K. & Cardelli, L. (1995) “Migratory Applications,” Proceedings of the ACM Symposium on User Interface Software and Technology, Pittsburgh, PA, Nov. 14-17, pp. 133-142.Copenkus, A. & Hoodbhoy, F. (1999) Applied XML:  A Toolkit for Programmers. John Wiley and Sons: New York, NY.DuCharme, B. (1998)  XML:  The Annotated Specification. Prentice Hall: New York, NY.Garingo, G. & Augins, J.S. (1999) “XML to Facilitate Interoperability Between Repositories,” The Spring Simulation Interoperability Workshop, Orlando, FL, 14-19 March, pp. 1106-1111.Harold, E.R. (1999) XML Bible.  IDG Books Worldwide: Foster City, CA.Harold, E.R. (1999) XML: Extensible Markup Language. IDG Books Worldwide: Foster City, CA.Lacy, L.W. & Tuttle, C. (1998) “Interchanging Simulation Data Using XML,” The 1998 Fall Simulation Interoperability Workshop, Orlando, FL., 13-18 Sep., pp.1110-1119.Leventhal, M.; Lewis, D.; & Fuchs, A. (1998)  Designing XML Internet Applications.  Prentice Hall: New York, NY.McGrath, S. (1998) XML By Example:  Building E-Commerce Applications. Prentice Hall: New York, NY.Miller, G.J. & Filipelli, L.J. (1999) “An XML Representation of HLA Object Models,” The Spring Simulation Interoperability Workshop, Orlando, FL, 14-19 March, pp. 565-570.Megginson, D. (1998) Structuring XML Documents. Prentice Hall: New York, NY.Simpson, J.E. Just XML. (1998) Prentice Hall: New York, NY.St. Laurent, S.; St. Laurent, S.; & St. Laurent, S. (1999)  XML:  A Primer. 2nd edition.  IDG Books Worldwide: Foster City, CA.St. Laurent, S.; St. Laurent, S.; & Biggar, R.J. (1999) Inside XML DTDs: Scientific and Technical.  McGraw Hill: New York, NY.Stytz, M.R. & Banks, S.B. (1999) “Robust Computer Generated Actor Migration,” Proceedings of the 1999 Fall Simulation Interoperability Workshop, Orlando, Florida, 15-20 September, pp. 695-703.Stytz, M.R.; Banks, S.B.; Hutson, L.J.; and Santos, E. (1998) “An Architecture to Support Large Numbers of Computer-Generated Actors for Distributed Virtual Environments,” Presence: Teleoperators and Virtual Environment, vol. 7, no. 6, December, pp. 588-616, MIT Press.Author BiographiesMartin R. Stytz is a Chief Principal Research Scientist and Engineer in the Air Force Research Laboratory and is a retired Lieutenant Colonel in the U.S. Air Force.  He received a Bachelor of Science degree from the U.S. Air Force Academy in 1975, a Master of Arts degree from Central Missouri State University in 1979, a Master of Science degree from the University of Michigan in 1983.  Stytz received his Ph.D. in Computer Science and Engineering from the University of Michigan in 1989.  He is a member of the ACM, SIGGRAPH, SIGCHI, the IEEE, the IEEE Computer Society, AAAI, and the Society for Computer Simulation.  His research interests include virtual environments, distributed interactive simulation, modeling and simulation, software architecture, intelligent agents, cyberwarfare, and computer-generated forces. Sheila B. Banks is the president of Calculated Insight.  Dr. Banks received her Bachelor of Science from the University of Miami, Coral Gables, FL in 1984 and a Bachelor of Science in Electrical Engineering from North Carolina State University, Raleigh, NC in 1986.  Also from North Carolina State University, Raleigh, NC, she received a Master of Science in Electrical and Computer Engineering in 1987 and her Doctor of Philosophy in Computer Engineering (Artificial Intelligence) from Clemson University, Clemson, SC in 1995.  Her research interests include artificial intelligence, intelligent computer generated forces, associate and collaborative systems, distributed virtual environments, intelligent human computer interaction, and man-machine interfaces.PAGE  