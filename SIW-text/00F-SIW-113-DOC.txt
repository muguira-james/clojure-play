The Integrated Systems Testbed (ISTB): Lessons Learned from the 1999 Prototype Demonstration ActivitiesLee S. MardenRaytheon Company50 Apple Hill Dr.Tewksbury, MA 01876978-858-9487Lee_Marden@raytheon.com Richard J. BolanderAllison KuzejaRegina DuBordRobert FontaineRaytheon Company50 Apple Hill Dr.Tewksbury, MA 01876Keywords:HLA, Systems of Systems, Collaborative Environments, Virtual Prototyping, COTS/GOTS Integration ABSTRACT: The 1999 Integrated Systems Testbed (ISTB) Independent Research and Development (IR&D) program established the foundation for a Raytheon Company distributed simulation testbed and supporting infrastructure.  Modeling and Simulation (M&S) experts from the various Raytheon business segments worked together to support the IR&D program objectives.  The primary goal of the program is to design, develop, and demonstrate a distributed testbed architecture, an executable framework, ancillary tools, process and services.  The ISTB will provide an environment for any business unit within Raytheon to prototype and demonstrate new system requirements or to evaluate performance of existing systems.  The ISTB will also provide the facility and infrastructure to demonstrate new combinations of systems (systems of systems) through modeling and simulation. The 1999 program served as a catalyst for combining the legacy M&S capabilities while serving as a demonstration of the benefits that can be achieved through multi-business segment collaboration.  Two major program milestones, Demonstration #1, August 1999, and Demonstration #2, December 1999, were conducted to show proof of the collaboration and current testbed capabilities.This paper will focus on the lessons learned in planning, designing, developing, integrating, and testing activities of the ISTB 1999 Demonstration activities.  We will discuss special considerations for configuring the HLA Run Time Infrastructure (RTI) for use over a large country-wide WAN, creating a FOM based on disparate legacy federations, and making multi-business segment legacy simulations inter-operate.1. OverviewThe 1999 Integrated Systems Testbed (ISTB) Independent Research and Development (IR&D) program established the foundation for a Raytheon Company distributed simulation testbed.  Modeling and simulation (M&S) experts from the various Raytheon segments worked together to support the IR&D program objectives.  The primary goal of the program is to design, develop, and demonstrate a testbed architecture and infrastructure. The program served as a catalyst for combining the M&S legacy capabilities while serving as a demonstration of the benefits that can be achieved through multi-segment collaboration.The ISTB architecture will support flexibility and growth by establishing standard procedures and interface services that facilitate inter-operability between the ISTB nodes.  This architecture will support design, construction, execution, and analysis for distributed systems simulations.The multi-year IR&D plans include the establishment of standards for models of each element of a defense system to communicate via the government standard, High Level Architecture (HLA), with other elements.  The ISTB Team will participate in defining standard interface definitions by which models can communicate.  This standard, called the Raytheon Reference Federation Object Model (Raytheon RFOM), will identify the key elements of a system and the data flow among these elements.Two major program milestones, Demonstration #1, August 1999, and Demonstration #2, December 1999, were conducted to show proof of collaboration and current testbed capabilities.  This paper will focus on the lessons learned during the planning, design, development, integration, and testing phases of the demonstration activities.  Special considerations for configuring the HLA Run Time Infrastructure (RTI) for use over a large country-wide Wide Area Network (WAN), creating a Federation Object Model (FOM) based on disparate legacy federations, and making multi-business segment legacy simulations inter-operate, will be discussed.1.1 Introduction of the ISTB GoalsAcquisition costs and system interoperability demands have made distributed modeling and simulation a major component of many defense programs. However, simulations used to represent concepts and prototypes are often point solutions and are not designed to be scalable.  The ISTB approach is to provide a Raytheon-specific High Level Architecture (HLA) based common technical framework for distributed simulations, which includes:DMSO compliant policies, procedures, and standard interfacesStandardized control and monitoring, data collection and analysis, data visualization, and virtual repositoriesA Raytheon Reference FOM(s)Middle-ware components not available as Commercial-Off-The-Shelf  (COTS) or Government-Off-The-Shelf  (GOTS) The approach also attempts to identify and integrate existing HLA expertise within Raytheon, identify and modify existing legacy system simulations for integration into the testbed, develop and demonstrate a WAN-based HLA Infrastructure, and finally, productize a standing infrastructure to promote reuse and interoperability as a Raytheon Company asset for distributed modeling and simulation.2. Demonstration ComponentsThe 1999 Integrated Systems Testbed (ISTB) demonstrations were designed with the two goals of conducting a program review for the ISTB management and demonstrating the current ISTB infrastructure, tools and components through a live exercise run within the context of the current HLA Runtime Infrastructure (RTI).  The following sections provide an overview of the components that were showcased during the demonstrations.2.1 Participating Organizations and ContributionsThe ISTB team was a made up of various modeling and simulation organizations distributed geographically throughout the company, as depicted in Figure 1.Figure 1. ISTB ParticipantsTo demonstrate ISTB’s ability to promote interoperability between the organizations it was important to show the near seamless integration of legacy simulations (both existing HLA Federates and Distributed Interactive Simulations (DIS)), COTS and GOTS components and newly built ISTB HLA prototype federates.  Prototypes were built only in cases where an existing COTS/GOTS product was unavailable or deemed immature for use.The following is a list of participating sites and the components that each site was able to integrate into the testbed:Huntsville, AL – Government sponsored legacy simulation, Extended Air Defense Testbed (EADTB), which provided the threat environment by simulating both tactical ballistic and cruise missiles.Plano, TX – a variant of the ‘Tiger’ family of reconfigurable manned simulators.  For the demonstration, one Tiger AH-64A Apache man-in-the-loop helicopter simulator patrolled the area with three other AH-64C Apache helicopters generated by ModSAF.Tewksbury, MA – various HLA federates from the Theater Missile Defense Testbed (TMDTB) legacy HLA federation, including generic sensors, launchers, and missile entities, as well as various visualization & data analysis prototypes.Bedford, MA – a new concept sensor federate created specifically for a prototypical user of the ISTB infrastructure.St. Petersburg, FL – a legacy HLA federate used to simulate Command and Control (C2) communications between the sensor net and the friendly interceptor.Tucson, AZ – The Interactive Theater Air Defense Simulation (ITADS), which generated the Standard Missile interceptor used to engage the threats and provided a legacy in-house visualization federate and various middleware component prototypes.Where applicable, the STRICOM HLA Gateway was employed to achieve interoperability between the legacy DIS simulations and the ISTB HLA Federation.2.2 Network ConfigurationFigure 2 depicts the wide area network configuration for the ISTB demonstration activities.   The goal was to utilize existing company assets wherever possible.  To that extent, the ISTB was designed to operate over the newly created company wide intranet, ORION.  ORION, One Raytheon Integrated On demand Network, is a shared resource, with a broad range of uses including email, file sharing, and backups. Using the company Intranet meant not having to lease, setup and configure a specific network for the ISTB.  This convenience was not without its own unique heartaches.  Since ORION did not yet extend to some of the participating sites, leased T1 lines were utilized to facilitate connectivity.  The current plan is to continue migration to the ORION infrastructure for future ISTB activities.  A working group has been established to join the ORION organization in defining a process for dedicating bandwidth using virtual networks over the shared backbone to enhance future distributed simulation activities.Figure 2. ISTB Network Configuration2.3 Raytheon Reference FOMThe Raytheon Reference FOM, or Raytheon RFOM, is a product of the FOM Working Group’s efforts to create a Reference FOM for the entire ISTB community.  Inputs from around the community, especially sites with native HLA implementations, helped define it and provided additional entity level representations, weapons track data information, weapon and target information.  The ISTB community reviewed the RFOM for content and completeness.At the heart of the Raytheon RFOM is the Real-Time Platform Level Reference FOM (RPR FOM).  This is to ensure that legacy entity-level based simulations (especially those still using DIS somewhere in their simulation) can participate in federation executions. A series of object classes dealing with tracking data and missile data were added to the base RPR FOM.  Tracking events and weapons fire interactions were added to the list of events (or “interactions” in FOM terminology) into the original RPR FOM.  A version of the Raytheon RFOM was successfully used in a subsequent ISTB federation.In addition to the RFOM in OMDT format, the ISTB FOM Working Group also produced an Interoperability Guide and a Rationale Document to extend the information contained within the FOM and to provide rationale justifications as to why data items were represented in a particular fashion.2.4 Data Collection/ReductionThe MÄK Data Logger, one of a suite of COTS distributed simulation tools available from MÄK Technologies, Inc. performed the data collection. A prototype companion data reduction tool was created specifically for the demonstration that extracted pre-selected data from the MÄK log file and imported it into Matlab, a product of The MathWorks, Inc., for analysis.2.5 Situational Awareness DisplaysThis section highlights visualization tools used in the demonstrations.  Each site used a different visualization tool set based on available hardware, and the audiences' familiarity.  The visualization tools or federates are broken down into three basic types: PlanView, GlobalView and Stealth View.  Some of these tools are owned and maintained by Raytheon, while others are COTS products that required reconfiguration for use in the specific exercise. The tools are capable of subscribing to base objects and interactions as defined in the FOM, and displaying them appropriately.  What is actually displayed by these tools is user configurable.  Prior to running a scenario, the user must define the geographic area (terrain patch) to be displayed.  The user also has the ability to map icons and/or 3D visual models to objects and interactions defined in the FOM.2.5.1 Plan View DisplayThe most common type of display is the Plan View Display, which provides a 2D top-down view of the battlespace and usually provides a map representing the virtual geographic area of interest.  Entities and interactions are displayed as simple icons on the map.  The general type of entity is usually apparent (i.e., a truck should never be confused with a jet), but multiple entity types may map to the same representation.  “Enemy” objects can be easily distinguishable from “Friendly” ones by color.  Detailed information (i.e., type, velocity, height above terrain, radar cross-section, etc.) about any particular entity or group of entities is available to the user on request.  Many of the simulation federates (EADTB, ModSAF) used in the ISTB can also be used as Plan View displays.  The following were used in the ISTB exercises:MÄK Technologies PlanView DisplayExtended Air Defense Testbed (EADTB)ModSAF (Modular Semi-Automated Forces)2.5.2 Stealth View DisplayThe typical Stealth View Display provides a 3D virtual world representation of a virtual battlefield complete with entities.  This type of display is generally the most realistic and accurate looking.  Entities, terrain and feature data are represented using three dimensional models which can be as true to their real world equivalent as the current hardware/software environments will allow while still being able to maintain interactive viewing rates.The Stealth displays provide the capability of moving and positioning the viewpoint anywhere in the virtual environment for a particular exercise.  In addition, the viewpoint can be dynamically updated with reference to a particular object or set of objects.  This is often referred to as “attaching the view to an entity”.  The user can also display detailed information (i.e., type, velocity, height above terrain, radar cross-section, etc.) about an entity or group of entities.The following is a list of Stealth View visualization tools that were used in the ISTB exercises:MÄK Technologies Stealth DisplayRaytheon Tucson Wargaming Lab S/AVI Pro2.5.3 Global View DisplayThe typical Global View Display is capable of viewing a simulation exercise from a “global” perspective, involving a three dimensional image of the earth with a realistic looking texture map.  Most Global View displays have zoom capabilities to allow the user to adjust the displayed theater of interest.  As with the Plan View and Stealth Displays, detailed information about any particular entity or group of entities is available to the user on demand.The following is a list of Global View visualization tools that were used in the ISTB exercises:Raytheon Advanced Modeling and Simulation Technology Section (AMASTS) GlobalView DisplayRaytheon Tucson Wargaming Lab Vis Display2.6 Presentation PlanningThe presentation portion of the demonstration consisted of a collaborative endeavor between the Bedford, Orlando, Plano, Huntsville and Tucson sites.  The goal was for each site to see the viewgraphs being briefed and hear the current speaker.  As the source of commentary switched from site to site, so would control of the joint presentation.  Some sites would have video capabilities that would be used to show the presenter while briefing.  In order to properly choreograph the presentation into a seamless flow of control, a presentation timeline was created and rehearsed.  Table 1. Presentation Timeline is an example of the timeline used to coordinate handoff between the various sites and the presenters. Table 1. Presentation TimelineSlideSlideTopicBriefed ByLocationDur.ClockStartClockEnd111:4512:0029IntroductionSmithBedford0:1512:0012:151011InfrastructureJonesTucson0:0312:1512:181214RFOMDoePlano0:0412:1812:22……………………3. Design/Development Lessons LearnedDuring the design and development of the federation, the DMSO Federation Execution Planners Workbook (FEPW) was used to document the federation configuration.  This included the network topology (routers, encoders/decoders) and IP addresses for all of the federate host nodes as well as for the presentation machines.  Although this can be a daunting task, having all of the pertinent federation specific information in one location proved to be very beneficial.The majority of development for the demonstration took the form of component prototypes used to fill the gaps between COTS & GOTS tools that did not yet exist.3.1 Prototype DevelopmentDuring development the team identified components that were not available off the shelf (COTS/GOTS) and decided which ISTB specific prototypes to create.  The goals of the prototyping exercise were to validate the ISTB concepts and provide sample federates for potential reuse within the corporation.  The following sections discuss issues associated with prototyping the ISTB tool federates.3.1.1 Simulation Control StationA Simulation Control Station (SimStation) prototype was developed to allow the various sites to monitor the demonstration exercise.  The monitor was developed in Java for machine independence and was specifically created to allow for multiple concurrent copies to be used simultaneously.  The monitor displayed federation information, as well as specific information about each federate and the various entities, which that federate, was generating.  At the time, commercial products were not yet available to provide this capability.3.1.2 Realtime MonitorThe Realtime Monitor (RTM) prototype was designed to collect information (simulation data) from the RTI and forward it to both the SimStation for monitoring and to a Matlab engine for realtime display plotting and analysis. It is a small HLA federate using a client/server model for communication, and with Matlab, is capable of plotting graphs in real time of given attributes for given entities.  Figure 3 shows sample output of the RTM Matlab graphical engine.Figure 3. Realtime Monitor Sample OutputAs a consequence of developing the RTM prototype several insights were gained.  First, it is difficult to develop a generic tool that can work with any FOM.  A generic application needs to allow the user to find an entity of interest by displaying known entity information.  This is easy to do when working with the RPR-FOM where information such as the object id, marking text, etc. are available for display, but impossible if object attributes are unknown.  Our prototype was created to allow for graphing of future entities that do not yet exist in the virtual battlespace.  Once an entity was identified, then the user needed to identify the specific object attribute(s) to graph.  Again, this would be difficult with a non-standard FOM.  Second, we allowed the user to pick from standard entity information (position, velocity, and acceleration), however another potential problem is that the FOM information contained in the .fed file does not have all of the data representation information required.  In order to graph the data, the tool needed access to the data type information.  Unfortunately, the FOM as specified in the .fed file does not contain data type information.  For this reason, the team explored the possibility of extracting the information from other sources, such as the Object Model Template (.omt) and the OMDT native file format (.omd).  Unfortunately, the OMDT file format is proprietary and not accessible.  The Object Model Template was not used due to time constraints.  Due to the complexity involved in dealing with the FOM, the RTM was built specifically for attributes contained in the RPR-FOM or its derivatives.3.1.3 Data Collection/Reduction/Analysis PrototypeThe MÄK Technologies, Inc. Logger, performed data collection for the demonstration.  The logger operates as a federate that subscribes to all data described in the FOM.  In a large WAN-based exercise, such as the ISTB demonstration, subscribing to all of the federation information means sending large quantities of data to the data logger for no reason other than for logging.  In order to operate correctly and not get bogged down, the data logger needs to operate in a central location on the network, on a high-end workstation.  Future data collection activities will include methods to distribute data collection to local sites and methods to automatically generate accurate time history merged logs from those local files.3.2 Issues Associated with the DMSO RTI 1.3v6During the development of the SimStation and the RTM, the DMSO RTI 1.3v6 exhibited unusual behavior with regard to its support of the Management Object Model (MOM). Occasionally, the RTI prematurely signaled the removal of an active federate (Manager.Federate) from the federation, which caused the SimStation to see a false resignation. The federate instance was never re-discovered.  At other times, the RTI removed active federate IDs from Manager.Federation.FederatesInFederation, which caused the SimStation to falsely believe that one or more federates had been removed from the fedex process. It is not known at this time whether subsequent updates to FederatesInFederation contain the lost federate's ID. 3.3 Collaboration IssuesDuring the decision making process regarding the exchange of data between federates, verbal agreements and discussions (particularly with regard to interface design) should be followed up with summary notes in writing and distributed to all interested parties.  This will ensure everyone has a clear understanding of pertinent issues and decisions.  This became crystal clear while discussing changes to the FOM.  Since the Object Model specification, including the OMDT tool, does not require certain information be present, it is easy make incorrect assumptions regarding bit representations, coordinate frames, byte ordering, etc.  Any type of assumption with regard to the FOM usually ends up as an integration issue, with redesign/re-write consequences.4. Integration/Testing4.1 ORION Network IssuesIn a large organization it is sometimes difficult to get all of the participants to agree.  The ISTB program was but one of many within the company using the corporate IT resources.  ORION management was receptive to our requests, but were not always able to follow through.  Demands on a corporate resource, such as the company-wide Intranet backbone, can be slow to respond to a particular program’s needs.The ISTB will not be a reality without cooperation from the ORION group and the people providing the company wide IT network backbone.  In the future, a major goal for the ISTB will be to work with the ORION team members to continue to evolve ORION and the local networks to continue to support distributed simulation activities.  This includes less reliance on dedicated T1 links, extending ORION to currently unsupported sites, developing dedicated channels or virtual networks for program dedicated usage, and increasing network monitoring capabilities.  The continued goal of the ISTB is to explore how ORION might be configured to allow ISTB related programs to use the network without interference from other ISTB programs and other corporate network traffic.  Such a mechanism would mean the creation of a virtual network or dedicated channel over the corporate backbone network dedicated to the ISTB or other program activities.  Due to time constraints in 1999, exploration of these dedicated channels did not occur. 4.2 RTI Configuration IssuesEach of the sites contributed different federates to the exercise. The distributed nature of the ISTB made the configuration of the RTI a challenging task. On a Local Area Network (LAN), the default RTI configuration works as is, but over a Wide Area Network (WAN), modification must be made. Unfortunately, the knowledge base needed to design the configuration did not readily exist. Based upon prior experience, configuration of the RTI for our WAN required input from online sources and the individuals at the RTI help desk.  Our goal was to configure our HLA components (the RTI, reliable distributors, and federates) into a single federation spanning the continental US.Configuring the RTI was essentially a task of determining the values of six RID file parameters. Each parameter controls a different aspect of how the RTI connects the federation components.multicast_ttl : The maximum number of routers a multicast packet can be sent through before it is no longer transmitted. This value defaults to 32. auto_reldistr_config: The automatic reliable distributor configuration flag. This value defaults to 1. This flag has the ability to override the values of "reldistr_on" and "auto_discover_on." reldistr_on :  Toggles the reliable distributor stream on/off. This value defaults to 0, where 0 is off and 1 is on. auto_discover_on : Toggles automatic discovery on/off. This value defaults to 0.discov_string : The discovery string that serves as an ID tag for the federation component using the RID file.reldistr_forced_discoveries : This parameter consists of three parts which tell the federation component how and where to find other federation components. Through educated guesses, trial and error, and input from the RTI help desk, the necessary RID file configurations were eventually discovered for all of the federation components. In order to ensure that the RTI did not try to route communications in non-deterministic ways, we set "multicast_ttl" to 0. Since multicast packets were not an option across the WAN, we did not allow their use so that we knew what communication ports were being used and could insure connections were made appropriately. We had to do the same thing for "auto_reldistr_config." The RTI automatically configures itself by use of multicast packets finding all federation components. Since we knew we could not do that, a setting of 0 was the only option. The remaining three parameters had to be tailored for each type of component. The reliable distributors are the backbone of the federation connectivity. As could be expected,  "reldistr_on" was set to 1 for them. Essentially, this setting is what makes them a reliable distributor. Since the RTI was not able to automatically find the federation components, they had to advertise themselves to one another and actively attempt to communicate. Setting "auto_discover_on" to 1 tells the components they must try. The "discov_string" is their advertisement of who they are, and the "reldistr_forced_discoveries" specify who they are looking for and where to look for them. For our federation, each of the reliable distributors had to force discovery on all the others. The reliable distributor in Tewksbury had the job of including the RTI, so it forced discovery on the RTI as well. The RTI itself reciprocated by forcing discovery on the Tewksbury reliable distributor. Finally, all of the federates simply forced discovery on their local reliable distributors and utilized the same discovery string. Using these settings, we were able to integrate federates from all over the US into one federation.4.3 Additional RTI Configuration IssuesUnlike previous attempts, based on the configuration established above, this RTI configuration was more stable and more reliable.  This was due in no small part to the efforts of the team working with the RTI Support staff to configure the RTI in a manner that would work with our network configuration.  This RTI configuration was more stable, but not without issues.  Our efforts to understand the current version of the RTI are only applicable to RTI1.3v6 and v7.  The latest version of the RTI, RTI1.3NG, is configured differently from the previous version, which implies a new learning curve to understand how this version works over a WAN.  Understanding the latest version of the RTI and how to configure it over the WAN is a current goal.  The WAN configurations mentioned above are fraught with places for human error and required hard coding of IP network addresses that meant it was not easy to change from exercise run to run.  Methods need to be developed that will automate this process as much as possible.Unfortunately, the HLA community has not tested the RTI under LAN configurations as intricate as our demonstration configuration.  It is difficult for the RTI support personnel to support a network configuration that they can not duplicate at their location.  For this reason, it is quite time consuming to debug alternate RTI configurations and address the various problems that were encountered with the RTI.  The RTI has problems with federates trying to join an exercise when the exercise is running and network bandwidth is at a premium.  When the federates were all communicating during a run, we had no luck in getting a crashed federate back up and running.  New federates which tried to join an existing exercise consistently timed out or crashed when trying to communicate and negotiate with the RTI to join.  Mechanisms need to be built into the ISTB infrastructure that allow federates to enter a paused state, thereby reducing network traffic, while a crashed or new federate is brought online. The RTI had problems when multiple federates tried to join a federation at the same time.  If multiple federates tried to communicate with the RTI when joining a federation simultaneously, the local federate hung or generated an exception and crashed. Joining of multiple federates required a second or two between federates joining and each new federate should be given adequate time to startup and initialize.  This produced an extremely long startup time.  The demonstration had 19 federates, with a nominal startup time of between 30-40 minutes.  Frequently, as later federates were joining, a previously joined federate would crash, and required to be restarted.  Work must be done with the RTI support team to correct these issues.  4.4 Terrain Database IssuesOne of the major problems during the ISTB demonstration was the issue of database correlation.  Terrain database correlation continues to be a problem in HLA as it was with DIS exercises.  Methods to distribute synthetic environment databases have yet to be perfected, and until such time, federation designers will continually be challenged to provide correlated databases to each federate to insure a fair fight.  Inconsistency between the man-in-the-loop Tiger helicopter federate and the other visualization federates manifested itself from time to time, as the helicopter would fly under the terrain.Additional work in standardizing terrain database formats to promote interchange, or success in the distribution of synthetic environment information must be implemented to alleviate this problem. 4.5 Low Level Network Monitoring IssuesMÄK hlaNetdump and similar network monitoring tools were used to investigate the data being passed between federates.  These tools are extremely useful when determining who is sending what to whom.  Time was spent developing special monitoring tools to decode the ISTB specific data attributes and interactions that were unique to the demonstration federation.  These enhanced monitoring tools gave the engineer more insight into the data being sent out on the network.4.6 Network Time IssuesTime synchronization between distributed platforms was required for multiple purposes including post exercise analysis of local data files collected and synchronized among the distributed computers.  Time stamped data in the HLA stream is stamped consistently across all federates.  Some UNIX boxes were setup to run xntp, which is based on the NTP (Network Time Protocol).  Some of the PCs were running a program from Dimension4, which uses a simple NTP or SNTP.  All of the machines were synchronized to a known time source on the network.  In the future, all of the machines on the ISTB network, taking part in an exercise, should employ NTP or its equivalent and be synchronized to a hardware generated time source, such as a GPS clock. 4.6 Coordinate System IssuesData collected during the run and during post processing is currently in the native format of the data stream being passed between federates.  For the RPR-FOM derivative federations, that data is not necessarily in a format, or more specifically, in a coordinate frame that is meaningful to the analyst.  More work must be done to the current tool suite and to the infrastructure in general, to account for this fact and allow the user to perform complex coordinate frame conversion and/or data conversions to aid the analyst in his study.5. The Presentation5.1 Audio/Sound System IssuesThe theater audio system was not suitable for communication between the theater audience/local presenters and the remote audience/presenters.  Future joint collaborative presentations should include the necessary hardware required to adequately connect the sound system (phone or computer) with the theater audio systems.  Hardware exists that is specifically designed to be used by radio stations and theaters to connect the phone system with an external sound system.  These systems include the necessary ports for both audio-in and audio-out and most include anti-feedback mechanisms.  This is a must for any future collaborative presentations among various remote locations.  5.2 Desktop Video Teleconferencing (VTC) IssuesIn previous experiments, not all of the participants used the same VTC software, on the same platform.  This made the VTC portion of the demonstration difficult.  We attempted to resolve this by requiring everyone to use the same software running on an NT platform.  We also requested that each site obtain the necessary hardware for Audio (Mic & Speakers) and Video (Camera) capabilities.  We chose Netmeeting initially since it was free and supported by Microsoft.  Unfortunately, Netmeeting does not support multiparty conferencing, so we investigated other free alternatives.  We found that Ivisit, another freeware VTC program, did support multiparty conferencing.  Ivisit worked, but had some issues.  Bedford multiparty video did not work correctly.  We believe this was due to an issue with the operating system.  The audio streams were not consistent.  For many sites the audio was too choppy, or non-existent.  Another issue with Ivisit was that it did not have any shared application support.  The Shared Application feature was the technique that we had planned on using to share the PowerPoint presentation among the sites.  We decided to use Netmeeting for the App Sharing and Ivisit for the Video and investigate an alternate audio technique.  We tried to use SpeakFreely, a public domain Internet phone program.  It looked promising, but we ran out of time before we could get it to work with all of the sites.  Due to time constraints we opted to use the phone system via a teleconference call, for our distributed audio.  Trying to get three or four different mechanisms to work together for a distributed presentation turned out to be very difficult.  In the future, the should investigate a single source solution for all of the VTC requirements and attempt to use that solution instead of a hybrid of components that were not meant to work together.  There might not exist a public domain or freeware solution to this problem and the ISTB might need to investigate using a commercial product, such as CUSEEME, from WhitePine software that appears to have all of the capabilities required.VTC capabilities were only fully utilized during the demonstrations, which was unfortunate.  Future ISTB meetings should investigate using the desktop VTC capabilities to enhance the teleconferences.  The ability to collaborate on a document or presentation with each participant collaborating on the modifications would be more efficient than the methods we used.Multi-line teleconference phone lines were used for integration, dry runs and during the demonstration for coordination of each of those events.  Over a long period of time, this was very expensive.  Again, a working desktop VTC system to each of the remote sites would have reduced or eliminated the phone costs.5.3 Visualization Issues during Simulation ExecutionVisualization tools tax the network bandwidth by requiring an additional burden on data distribution.  Programs such as Stealth, PlanView, and GlobalView require all entity data be distributed to it for the tool to create an accurate, ‘truth’ picture of the virtual battlespace.  This is a limitation of the current set of COTS tools.  Some visualization tools used in the demo, such as ITADS Vis, were tailored to not subscribe to every entity.  Instead, opting to subscribe only to entities of interest.  While this did reduce the network traffic to that node, it reduced its functionality to only view those specifically requested entities.  Future tools should be developed to allow the user to filter what is subscribed to based on some established criteria.  This would allow the tool to be used in a more general manner and not be required to subscribe to all data items simulated. 5.4 Realtime Data Monitoring IssuesThe Matlab Engine was used as the Realtime Monitor graphing mechanism.  This worked well, but needs to be made more robust.  One drawback is that the graphing program that interfaces to the Matlab Engine must be running on the PC with the Matlab software.  A socket interface was implemented toward the end of development in the Realtime Data Monitor prototype.  This mechanism should continue to evolve to allow the Matlab server to operate on any platform type (UNIX, NT), and the simulation federate client to also operate on any platform type.  This would allow the ISTB infrastructure to support the capability for any federate to have access to the Matlab graphing engine.  Then anytime a federate wishes to graph something it can use the infrastructure connection to Matlab for producing the graph and use Matlab’s ability to analyze data after the run. Additional investigation needs to continue in this area.  Currently this capability does not yet exist within the COTS or GOTS communities.5.5 Data Collection IssuesThe MÄK data logger was acceptable for a small demo, but will present bandwidth problems in a larger geographically distributed federation.  The logger collected all data, which required it to be run from a central site.  Problems with the logger occurred when we tried to run it from a remote site.  All of the HLA traffic had to go to the remote site along the small network pipe.  If future demos have the luxury of a central location or hub where all of the networks connect, then a central logger/collector might be sufficient.  The ISTB should investigate local loggers/collectors that only collect data at the remote site and intelligently merge the data back in after the exercise to form a central cohesive picture of the simulation exercise.5.6 FOM Related IssuesThese lessons learned apply to the creation of the demonstration FOM.  The FOM was built from the merger of the RPR-FOM and the SOMs of the components required to run the TMDTB, ITADS, C2, and HLA Gateway Federates.5.6.1 Universal Naming/ID IssuesAny data that is collected needs to be presented in a meaningful manner to the user.  HLA uses a terse, cryptic mechanism to distinguish data being sent between federates in a federation.  This mechanism is sufficient for the HLA RTI, but is not intuitive to an analyst and would be very painful to use.  Simulated entities and their associated data must be tagged in a meaningful manner so the analyst has a clue as to what data are generated by what source and what that data represents.  Since the demonstration FOM was based on the RPR-FOM, this was handled by the use of the various RPR-FOM data attributes and parameters that contain description name information.  These data items are holdovers from the DIS domain.  They were sufficient in DIS to establish entity naming, type and uniqueness and data item uniqueness to that simulation entity.  Not all of the federates in the demonstration used these attributes.  Some of these attributes are at the BaseEntity Object Class level, but this is not enough.  Additional data attributes at the PhysicalEntity and MilitaryEntity Object Class level are required to fully qualify simulated entities and their data.  Without being fully qualified, some of the simulated entities for the demonstration were not handled correctly by the commercial data collector, reduction tools and even the in-house prototypes that were developed for the ISTB.  This needs to be addressed in the future as it is imperative that the that will be used by the ISTB user to interpret data need some kind of mechanism to distinguish simulation entities from one another. For the future, it will be important to design a standard methodology for identifying simulated entities and to develop tools that use this design to aid the user in dealing with simulated entity data.  The major issue with this scheme is whether or not commercial tools will be capable of using this new scheme or if the standard RPR-FOM mechanisms will be required.5.6.2 RPR-FOM vs. Raytheon RFOM IssuesThis section will discuss RPR-FOM related issues dealing with the fact that some federates were RPR-FOM friendly and others were not.  Current COTS tools for visualization, data collection, etc. rely on RPR-FOM attributes as a defacto standard.  Future work on the Raytheon Reference FOM must take this into account.  Commercial and government HLA tools that were not designed by Raytheon may not be able to interpret a non-standardized FOM.  The RPR-FOM is not only the most widely publicized FOM, but also the most highly contested.  As the ISTB continues to move toward the newly created Raytheon Reference FOM, this will continue to be an issue that needs to be addressed. Some issues that were found revolved around the data that was being passed at the Base Entity Object Class Level.  Some ISTB federates created objects that were sub-classed to the Base Entity Object Class, even though these objects were not truth entities in the virtual battlespace. Unfortunately, the COTS tools used for visualization saw these BaseEntity objects and thought they were true simulation entities.  This meant that these new objects were visible in the situational awareness displays.  To account for this anomaly, two mechanisms were employed.  For the PlanView display, a filter mechanism was used to filter out these unwanted BaseEntity objects and thus no entity icon was displayed for these objects.  Conversely, for the Stealth display, a dummy 3D model of a sphere was created, that was mapped to the new object and used to indicate the target track location for the object.  Both options are viable and useful depending on the exercise requirements.  Visualizing these new BaseEntity objects could be a very useful tool, so continuing to have the information as a BaseEntity Object might be beneficial.5.6.3 Message Passing vs. Track Data Representation IssuesThe legacy TMDTB federates and the legacy ITADS/CEC federates used two different mechanisms to represent target track information.  The TMDTB federates used interactions to pass information amongst themselves that represented the target threat data needed for intercept.  These discreet messages, some passed at periodic intervals, represented one method of message passing that most closely represented the tactical message passing mechanisms.  Information is gathered, packed into a message, sent to the receiver, unpacked and the data examined.  This method however, has the drawback that all of the message data must be transmitted within each message, even if only a fraction of the data has been modified or is of interest.  ITADS & CEC however chose to transmit track information through the use of the Object Class hierarchy.  These federates created a BaseEntity Object with the track information and the other ITADS/CEC specific information in the subclasses.  Unfortunately, to the COTS tools, BaseEntity objects appear to be real simulated entities, and are therefore displayed as entities in the virtual battlefield.  As the Raytheon RFOM evolves, these two mechanisms will continue to be debated as to which is correct.  No single answer or solution might be readily available.  However, this issue effects nearly all aspects of the ISTB infrastructure, and as such a single method for track representation might need to be chosen in order for the ISTB to continue.5.6.4 Legacy DIS Gateway IssuesThese lessons learned apply to the setup and use of STRICOM HLA Gateway.  The HLA Gateway is a GOTS product that acts as a bridge between an HLA federation and a DIS simulation.Some HLA traffic was not being passed through the gateway into the DIS space.  The tool is not very robust and debugging this issue was difficult.  Unfortunately, the STRICOM HLA Gateway was the only one identified as available for use in the ISTB.  The developer, STRICOM, was willing to work with us on the current deficiencies to make it more generic and ISTB friendly.The Gateway is RPR-FOM based and can only handle RPR-FOM derivative federations.  This limitation is not a large concern as the current versions of the Raytheon RFOM are presently RRP-FOM based.  However, as new versions of the RPR-FOM standard are released, updated versions of the Gateway must also be available.The Gateway is not FOM agile.  The current version of the gateway has no mechanism for the user to extend the mapping between the HLA Federation and the DIS exercise.  This would be beneficial in the future.6. ConclusionsThe ISTB Demonstration was a limited success.  Many of the goals and objectives of the demonstration were completed, while some where not.Preparation for the demonstration began months in advance.  Unfortunately, a few days before the demonstration, the Intranet network connection to Orlando was modified outside of the ISTB control.  The modifications to the network no longer allowed for a video connection to Orlando.  This brought our attention to two important points.  First, for the ISTB to continue on its successful path, ties to ORION and the various local IT network support personnel need to be in place.  Second, sites not fully integrated into ORION will be subject to continued network problems outside of the ISTB and ORION control.  If sites intend to become full time ISTB participants, they will have to be migrated to ORION as soon as possible. Certain events outside of the control of the ISTB personnel had a profound affect on the presentation and exercise run. During the two-hour demonstration timeframe, loss of the phone line connection to Plano, Texas and the loss of the T1 connection to Tucson occurred due to storm activity across the country.  This interfered with the presentation portion of the demonstration and did not allow us to perform a live distributed exercise.  On the off chance that we did have a catastrophic network problem, we did have a log file for local replay and were able to show the local audiences what they would have seen live via the log file playback. For future demonstrations of this caliber, long haul over wide area networks with infinite possibilities of problems, it would be best to not limit the exercise to a single two-hour window.  Multiple vignettes over multiple days, with a built in buffer at the end to re-run vignettes that did not go as anticipated would be better.  This lesson was never more obvious than during the demonstration while waiting for AT&T to re-establish the network connection to the west. Future ISTB program activities or other program activities that rely on communications mechanisms, that could have similar failures, should consider this.The ISTB demonstration was able to accomplish many objectives in spite of the network problems.  The current state of the program and its goals were made known to a larger Raytheon modeling and simulation community and the current ISTB capabilities were shown in a limited capacity.  The demonstration was sufficient to promote HLA concepts and technologies in the context of the Integrated Systems Testbed.  Its limited success allowed us to start to work with other groups outside the current ISTB team and establish a true company wide "Systems of Systems" integrated distributed simulation testbed.Author BiographiesLEE S. MARDEN is a principal software engineer with the Advanced Modeling & Simulation Technology Section in the Advanced Engineering Technology Department of the C3I division of Raytheon and is currently the Infrastructure IPT Lead Engineer for the Integrated Systems Testbed.  He has worked for Raytheon for over ten years and in Advanced Distributed Simulation for over five years.RICHARD J. BOLANDER is a senior principal systems engineer with the Weapons Systems Design Laboratory in the Air and Missile Defense Systems segment of Raytheon Electronic Systems and is Project Manager for the Integrated Systems Test Bed.  He has worked for Raytheon for eleven years in the design of software for tactical systems.ALLISON KUZEJA is the section manager for the Advanced Modeling and Simulation Technology Section at Raytheon.  She has been with Raytheon for thirteen years, five of those years have been spent in the distributed simulation arena. ROBERT FONTAINE is a senior software engineer with the Advanced Modeling and Simulation Technology Section at Raytheon.  He has been with Raytheon for twenty years.REGINA DUBORD is a senior software engineer with the Advanced Modeling and Simulation Technology Section at Raytheon.  She has been with Raytheon for four years in the Modeling & Simulation arena.  The term “Stealth” is used to define a generic 3D virtual world viewer and should not be interpreted to necessarily mean the product by MÄK Technologies. EMBED PowerPoint.Slide.8  