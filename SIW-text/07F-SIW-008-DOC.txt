Design and Implementation of an Urban EnvironmentConvoy BehaviorMichael J. LongtinLockheed Martin Simulation, Training, & SupportAdvanced Simulation Center12506 Lake Underhill RoadOrlando, FL 32825407-306-6496michael.longtin@lmco.comKeywords:Export CGF, behavior, convoy, movementABSTRACT: Vehicle movement has always posed an interesting challenge for CGF developers, particularly within dense urban environments.  The problem of moving across a rural countryside is vastly different from negotiating crowded city streets.  Each problem has a unique set of requirements, goals and criteria.Cross-country movement is much more of a true path-planning problem that attempts to answer the question, "How should I navigate around these obstacles and terrain features in order to achieve my goal?"  Such a problem is a good candidate for the ubiquitous A* algorithm, a brute-force "consider every possible path" approach that is often mademore efficient by employing various optimization techniques.However, movement planning within dense urban environments is a much different problem.  Each vehicle is typically confined to a narrow path from which straying would have detrimental consequences such as collisions with nearby buildings, pedestrians, or other vehicles.  In addition, an understanding of other vehicles' movement patterns isrequired in order to avoid deadlock situations.  Movement in urban environments is much more than a path planning problem.Yet surprisingly, until recently, cross-country movement and urban movement in Export CGF were governed by a common behavioral model.  Because this model was originally designed to be a unit-level cross-country planner, it did not perform particularly well in dense urban environments.  Vehicles would sometimes stray from their assigned routes in order to negotiate sharp turns without slowing down.  If the convoy formation spacing was too tight, vehicles would often get confused trying to avoid each other, as every vehicle is considered an obstacle so that they don't collide with each other.It was clear that solving the urban movement problem was going to require a fresh approach.  Thus, a new urban movement model was developed from the ground up.  This paper walks through the development of this new urban movement model from initial design considerations through implementation and results.1.  IntroductionThe requirements of simulation software are often driven by current world events.  Although software developers generally strive to design solutions that will satisfy future requirements as well as current ones, it's not always clear what they might be. Additionally, implementation of software that satisfies future requirements may be cost-prohibitive and not feasible due to budget constraints.  The result is that developers continually have to change and upgrade simulation models in order to accommodate constantly shifting requirements.  A good example of this phenomenon is the "Road March" behavioral model in the Export CGF simulation application.  This behavioral model defines how a unit travels along a user-specified route in column formation.The road march behavior was initially developed during Desert Shield and Desert Storm.  Most of the terrain databases being used at that time represented the deserts of Saudi Arabia, Kuwait, and Iraq.  Thus, terrain databases were rather simplistic.  The reasons behind this are twofold.  Firstly, terrain database technology at the time wasn't sophisticated enough to represent dense urban areas and detailed terrain skin.  Secondly, there wasn't a big interest in urban warfare, as most of the battles took place in the open desert.Consequently, the initial implementation of the road march behavior, while probably sufficient for convoy movement in the open desert, fell far short when applied to today's much more complex, feature-dense, urban terrain databases.It should be noted that the model described in this paper is not a route planning algorithm.  Rather, it's a behavioral model that defines how a platoon or company (or larger organization) travels down a route in column formation.  The input route is either explicitly created by the user or is the result of Export CGF's road route generator, which is pre-existing functionality that is orthogonal to the behavioral model described herein. Deficiencies of the Previous ImplementationPrior to revamping the road march behavior, it and the cross-country movement behavior were driven by a single behavioral model.  The primary difference between the two behaviors is that the road march behavior instructs the vehicles to travel in the column formation whereas the cross-country movement behavior allows more formations such as wedge, vee, and echelon left.The cross-country movement behavior was designed to fulfill a very basic requirement: to drive a platoon or company along a user-specified route (or to a user-specified point), planning around large obstacles such as rivers, lakes, and otherwise non-traversable areas.  The two primary problems that the cross-country model attempted to solve were:1.  Planning around major obstacles, and2.  Maintaining the user-specified formation.Under the constraints of the cross-country model, it wasn’t important if the vehicles diverged from their assigned routes by a few meters.  This actually occurred quite frequently as vehicles took sharp turns at high rates of speed.  The model didn't instruct the vehicles to slow down at sharp bends because that wasn't a requirement.In addition, the road march behavior had no concept of "march order."  Each vehicle had two primary constraints:1.  Follow its assigned route, and2.  Avoid small obstacles such as buildings and other          vehicles.The vehicles did not understand that they were part of a group and that they each had an assigned place in the march order.  Rather, they independently sought to satisfy their two primary requirements with total disregard for other vehicles that were trying to do the same.This led to anomalies such as two or more vehicles driving side by side, possibly straying meters from their assigned routes, in an effort to achieve their goals while trying to avoid each other.  A model that is aware of march order would have one vehicle slow down and wait for the other to pass until the desired march order is achieved.It is quite apparent that, while such effects are not detrimental in a cross-country movement scenario, they can have a devastating impact in scenarios that require movement along narrow streets in congested urban scenarios.  In such scenarios, there's generally not enough room for vehicles to stray from their path for any reason.  Doing so would quickly result in collisions with nearby buildings and vehicles.  This would often lead to vehicles backing up in an attempt to resolve their collisions.  Simultaneously, other vehicles within the unit must attempt to avoid those that are resolving collisions, resulting in more collisions.  This would typically rapidly deteriorate into mass chaos, a clearly unacceptable result, as seen in Figure 2-1.Figure 2-1.  Original road march behavior3.  A New ApproachThere are two fundamental flaws with applying the cross-country movement solution to the urban convoy problem:The cross-country movement model does all of its planning in two spatial dimensions (and one temporal dimension).  This allows for the possibility for vehicles to stray from their assigned routes, andThere is no concept of collaboration or “march order.”  Thus, vehicles do not stop and wait for others to pass in order to maintain their assigned position within the march order.  Rather, each vehicle independently and simultaneously (and quite selfishly) attempts to achieve its goals.It was clear that a fundamentally new approach was needed in order to improve the existing road march behavior.Research investigating how other simulation systems overcame the problem of movement within an urban environment revealed an interesting approach taken by two projects: The Intelligent Traffic Module (ITM) and JSAF's Culture Sim [1] [2].These programs perform their planning in a two-dimensional coordinate system (one spatial dimension and one temporal dimension), rather than a two-spatial-dimensional space.  This approach guarantees that vehicles will not stray from their assigned routes because the single spatial dimension describes a vehicle's position in terms of the distance from the beginning of its route.  Therefore, by definition, a vehicle is always on its route.  We will refer to this coordinate system as normalized route coordinates (NRC).4.  Behavior CharacteristicsThis section describes some of the more interesting behavioral characteristics of the convoy movement model.4.1 Disabled VehiclesAll vehicles are guaranteed to remain on their assigned routes with two exceptions:If a vehicle in the convoy suffers a mobility kill, causing it to stop in the roadway, the vehicles behind it will be blocked.  In this case, the trailing vehicles determine whether there exist unobstructed "skirt paths" around the disabled vehicle to the left or right.  If so, the trailing vehicles will stray from the assigned route temporarily in order to circumvent the disabled vehicle.Likewise, if a vehicle that is circumventing a disabled vehicle itself becomes disabled, trailing vehicles will determine whether skirt paths to the left or right exist and circumvent it.  If no skirt path exists, the entire convoy will halt until the obstruction is cleared.4.2 Vehicle Speeds and SpacingIn addition to the route itself, the convoy movement model accepts "vehicle spacing" and speed as input parameters.  They specify the desired spacing between vehicles and the speed at which the vehicles will travel under normal circumstances, respectively.  There are four instances where a vehicle's actual speed may vary from the user-specified speed:Circumventing disabled vehiclesWhen a vehicle is circumventing a disabled vehicle, its speed is reduced to a predefined user-specified value known as the "careful speed."  This is intended to model the real-world phenomenon of vehicles traveling at lower speeds while negotiating obstacles.Negotiating sharp turnsIn the same way, vehicle speeds are reduced to the "careful speed" at sharp turns in the input route.  The reduced speed is in effect when a vehicle is approaching the sharp turn and within a predefined user-specified distance from it.  Once the vehicle has passed the sharp turn, it resumes traveling at the assigned speed.The threshold which defines the point at which a turn becomes "sharp" is predefined in a data file that is read at initialization.Catching upIn many instances, it is possible for a vehicle to fall behind and thus have a need to speed up in order to maintain the user-specified spacing.  This can happen, for example, when vehicles toward the front of the convoy are negotiating disabled vehicles or sharp turns.  The speeds of all vehicles behind the vehicle traveling at the "careful speed" are also limited to that speed so that the vehicle spacing may be maintained.  Once the lead vehicle passes the anomaly that necessitates the reduced speed, it will resume travel at the normal speed while every vehicle behind it will still be traveling at the reduced speed (presumably due to negotiating the same obstacle or turn).  This increases the gap between the lead and trailing vehicles.Thus, the facility to enable a vehicle to travel faster than its assigned speed in order to "catch up" to the vehicle in front of it was implemented.Holding upThe astute reader may notice that the aforementioned gap increase has an additive effect, where the gap between the first and last vehicles in the convoy is the result of multiplying the gap increase between the first vehicle and the vehicle behind it by the total number of vehicles between the first and last vehicles.  Furthermore, this gap increase happens each time vehicles are required to travel at the reduced speed and is additive.  Thus, it is quite possible for the distance between the first and last vehicles to grow to be very large over time, unless it is somehow bounded.In order to prevent such an effect, the concept of "holding up" was introduced into the model.  If the linear distance along the route between the first and last vehicle exceeds a certain threshold (which is based on the total number of vehicles in the convoy), the lead vehicle will "hold up," or travel at a reduced speed in order to allow the trailing vehicles to catch up.  The reader may realize that because of the implementation of the catch-up algorithm, all trailing vehicles will catch up eventually, if given enough time.  The implementation of the "holding up" algorithm greatly reduces the time required to return to the desired spacing, resulting in a much more reasonable, "orderly" behavior, as shown inFigure 4-1.Figure 4-1.  Convoy in a dense urban area4.3 Multiple Convoys on a Single RouteIt is quite possible for the user to assign two or more separate convoys to travel along the same route.  This raises some interesting cases with non-obvious resolutions:Convoys traveling along the same route in the same direction at different speedsConvoys traveling along the same route in opposite directionsIntertwined convoys traveling along the same route in the same direction at the same speedAfter considering resolutions for each of these conditions, it was determined that a single resolution was the most suitable in all three cases.The resolution algorithm declares that one and only one of the convoys involved in the conflict will continue to move normally.  All others will stop.  When the sole moving convoy has resolved its way out of the conflict, the resolution algorithm is applied to the remaining convoys involved, until one more is removed from the conflict.  This process repeats until all conflicts have been resolved.The obvious dilemma is determining which convoy will continue normal movement.  A simple heuristic rule is used to determine this.  All except the fastest moving convoy will stop while the fastest continues normally, driving around stopped vehicles as necessary.This rule generally yields an obvious solution unless multiple convoys are traveling at the same speed and that speed is the fastest among all convoys.  In this case, one of the convoys is selected to move while all others stop.  It doesn't matter which convoy is selected because they are moving at the same speed.  Thus, there's no chance that the conflict will arise again after normal movement resumes.5.   ImplementationThis section describes some of the more interesting implementation details of the convoy movement behavior.5.1  March Order DeterminationThere are many possible criteria that can be used to determine the order in which members of the convoy will travel.  Which are applied may depend on the circumstances.  For example, if traveling through a hostile area, perhaps the units with the most firepower or armor will be first in the order.  Or perhaps the vehicles with the most sophisticated sensors are chosen to go first.The convoy movement behavior was designed to accommodate any number of order determination criteria.  The only requirement is that the order assignment process must be deterministic.  That is, the order must not change as the algorithm is applied repeatedly, even if the number of mobile vehicles in the convoy decreases.  This ensures that the order will not change as the result of recomputing it, as is done when a vehicle or vehicles are disabled.Changing the march order is as simple as rewriting a single function.  Alternatively, multiple variations of the march order function could be written and made selectable on the user interface.5.2  The Main LoopThe main loop updates the position of the lead vehicle and then computes, in march order, the positions of all trailing vehicles based on the lead vehicle's position, applying the aforementioned rules and heuristics.  All positions and distances are computed in normalized coordinates such that a value of zero represents the beginning of the route and a value of one represents the end of the route.  Likewise, a distance of one represents the length of the entire route.  Every time the main loop is executed, the following occurs:The time, in seconds, since the main loop was last executed is computed.  This is referred to as dt.The current speed of the lead vehicle is computed.  This speed is the user-specified speed unless the vehicle is determined to be moving carefully, in which case the "careful" speed is assigned.  The vehicle moves carefully when it is circumnavigating disabled vehicles that are blocking the route, or when negotiating sharp bends in the route.If the distance between the lead and last      vehicle exceeds (look it up), the lead vehicle's speed will be limited to the "holding up" speed.The normalized "advance distance" (that is, the distance that the vehicle should move forward) for the lead vehicle is computed based on its current speed and dt.  This distance is referred to as dadv.dadv is added to the lead vehicle's position.The speed of the next vehicle is computed in the same way that the speed of the lead vehicle is computed.  For trailing vehicles, however, an additional rule is applied.  If the spacing between it and the vehicle immediately in front of it exceeds a predetermined value (specified in a data file), the catch-up velocity is assigned as the vehicle's current velocity.The position of the next vehicle is advanced by its dadv.  However, it is bounded such that it can never be closer than the assigned inter-vehicle spacing from the vehicle immediately in front of it.  Thus, when a vehicle switches to the careful speed, all trailing vehicles also automatically switch to that speed.Steps 5 and 6 are repeated successively for each vehicle in the convoy.The main loop ends when the last vehicle reaches its position, defined as the position of the first vehicle offset by the assigned inter-vehicle spacing multiplied by the number of movement-capable vehicles remaining in the convoy.6.  ResultsThe new convoy movement behavior has proven to be a big improvement over the pre-existing road march behavior in Export CGF.  Many tests were executed specifically designed to stress the new model’s performance in areas where the previous model was deficient:Large UnitsThe original behavior had difficulty with company-sized units (those with 14 or more vehicles).  Particularly, the vehicles would often be too preoccupied with avoiding each other such that they would stop for no apparent reason, drive off the route in an attempt to avoid moving vehicles in front of them.  These anomalies are absent from the new behavior because the vehicles are intelligent enough to not avoid other vehicles in the same unit.Tight SpacingMany different terrain databases were tested, especially those with densely populated areas such as Tikrit, Galveston, and Baghdad.  Routes which twist and turn at sharp angles throughout the city were created for the sole purpose of attempting to “break” the new behavioral model.  In all cases, the vehicles had no difficulty navigating the city streets.When the same tests were run with the old behavior, there was an 80% failure rate due to vehicles missing waypoints as the result of attempting to make 90-degree turns at speeds that were too high.Negotiating ObstaclesOften times, when under attack, vehicles within the convoy sustain mobility damage.  In order to determine how well the behavior resolves disabled vehicles, many tests were conducted where vehicles within the convoy were intentionally damaged.  It was found that vehicles successfully maneuvered around the disabled vehicles, driving at a reduced speed while doing so.  Consequently, the vehicle spacing in front of the disabled vehicle was greater than that behind it, as expected.  In cases where there were multiple disabled vehicles, the difference in spacing was multiplied by the number of disabled vehicles.  Because of the “holding up” rule, however, the differences in inter-vehicle spacing were automatically resolved.When the same test was run with the old behavior, it failed miserably.  Mass chaos resulted as vehicles stacked up behind the disabled vehicle, crashing into each other.  It quickly deteriorated into a situation where each vehicle attempted to resolve the collisions simultaneously, each backing up into each other, causing further chaos.Road BlockageFinally, tests were performed to determine how the new behavior resolves situations where the route becomes completely blocked.  This can happen, for instance, if a vehicle in the convoy sustains a mobility kill at a location where skirt paths do not exist.  In these cases, the behavior appropriately determined that there was no available path and went into a halt state and waited for the obstruction to be cleared.  When the obstruction was cleared, the convoy resumed normal movement.When the same test was conducted with the old behavior, the vehicles didn’t realize there was a complete blockage and continually attempted to resolve it.  When the blockage was removed, the some of the vehicles ungracefully attempted to resume movement while others gave up completely.In general, the convoy movement behavior exhibits a much more organized and orderly behavior where the vehicles remain on the road.  The convoy as a whole also behaves more like a cohesive unit rather than a series of individual vehicles each trying to attain their respective goals, as seen in Figure 6-2.Figure 6-2.  New convoy movement behaviorThanks to its simplistic design, the convoy behavior was implemented well within the proposed budget while meeting customer requirements.7.  Future EnhancementsAlthough the current implementation of the convoy behavior in Export CGF satisfies the customer’s requirements, it could be improved.For example, there’s currently no arbitration mechanism for intersections, where vehicles currently pass through each other.  In order to correct this, a “traffic cop” model that has knowledge of all the convoys approaching each intersection would need to be developed.  This knowledge would enable the model to determine which convoys to halt and when it is appropriate to resume movement.Another desirable feature would be to add the concept of lanes to the model.  Currently, all routes are comprised of a single lane and are unidirectional.  Incorporating these features would add a new level of realism to the model.9. References[1] B. Kornman, M. Longtin: “Driving Without       Looking:  Storing Behavioral Information In the       Terrain Model,” Proceedings of the 10th       Conference on Computer Generated Forces, May       15-17, 2001 in Norfolk, VA.  Pages 519-528.[2]	Speicher, D., (2004). Simulating Urban Traffic in       Support of the Joint Urban Operations Experiment.       Proceedings of the 2004 Interservice/Industry       Training, Simulation, and Education Conference.Michael Longtin is a Staff Software Engineer at Lockheed Martin Simulation, Training and Support (LM STS).  With over a decade of SAF programming experience, Michael is the Export CGF domain expert.  Michael has contributed to numerous projects involving terrain reasoning, route planning, movement, and many behaviors.  He has developed several CTDB compilers that are capable of consuming various source formats, including SEDRIS, OpenFlight, and S1000.  He has also done lots of work in the field of route planning, having developed the concealed route planner in Export CGF, and making significant enhancements to the high-level cross-country route planner as well as the road network route planner in Export CGF.  He holds a Master’s Degree in Electrical Engineering from the University of Maine.