Creating Interchangeable Human Models Usingthe SEDRIS DRM and H-AnimWarren MacchiArteon Corporation12733 Lower River BlvdOrlando, FL 32828407-207-0123wmacchi@arteon.comEdward Sims, PhDVcom3D, Inc.3452 Lake Lynda Drive, Suite 260Orlando, FL 32817407-737-7309EdS@vcom3d.com HYPERLINK mailto:pbarry@dmso.mil pbarry@dmso.mil HYPERLINK mailto:pbarry@dmso.mil Keywords:Human Representation, Human Model, H-Anim, SEDRISABSTRACT: We present our work in developing a mapping between the Human Animation Working Group H-Anim 1.0 specification and the SEDRIS Release 3.1 Data Representation Model (DRM) and Environmental Data Coding Specification (EDCS). In addition, we present demonstration applications and sample SEDRIS Transmittal Format files illustrating instances of the mapping. Accurate representations of human figures and behaviors are becoming necessary elements in realistic simulations of humans and their interaction with synthetic environments. The development of realistic human models and motion is especially demanding and expensive, but little work has been done to address the reuse of these models and motions across diverse simulation projects and platforms. This presentation is intended to stimulate research and cooperation in this vital area.Introduction Individual human characters with realistic appearance and behaviors are becoming increasingly important elements in Modeling and Simulation. The development of realistic and convincing human models requires the expenditure of significant resources. However, little attention has been given to developing standards for reuse and interchange of these human models.Recently, the Defense Modeling and Simulation Office (DMSO) established the Human and Organizational Behavior Modeling Special Interest Area  REF _Ref13224064 \r  \* MERGEFORMAT [1]. The emphasis of this initiative is to provide generic models of human capabilities, limitations, and performance. Our interest is closely allied, but is more specifically related to the physical and visual manifestation of individual human behavior within a three-dimensional synthetic environment. In this paper, we explore mechanisms for re-use and interchange of the physical characteristics, geometry, and activity of human models. In particular we will consider the roles and relationships of the Humanoid Animation (H-Anim) specification being developed by the Humanoid Animation Working Group  REF _Ref13219970 \r  \* MERGEFORMAT [4], and the Synthetic Environment Data Representation and Interchange Specification (SEDRIS)  REF _Ref13288727 \r \h [3] as potential standards for interchange of human models. We will compare and contrast the application of the specifications to human model representation, describe our work in developing a mapping between the respective data models, and demonstrate applications that leverage the two specifications to embed realistic, reusable human models into synthetic environments.We selected these two specifications based on their robustness, the level of activity of their participating organizations, and their status of standardization. The Humanoid Animation Working Group includes over 200 participants from industry, government, and academic institutions, and is regularly used for interchange among these participants. Similarly, the SEDRIS program is being sponsored by STRICOM, DMSO, DARPA, and Executive Agents for Terrain, Ocean, Air, and Space, with a large international community of commercial and public organizations with more than forty associates and partners. SEDRIS has been successfully used in the interchange of large environmental databases in programs such as WARSIM, CCTT, UK CATT, UK DERA, STOW, and JSF  REF _Ref13288727 \r \h [3]. Both specifications have been submitted to the ISO/IEC standards body, subcommittee 24, as candidates for standardization. As this paper will demonstrate, there is little overlap between the specifications, and the two can effectively be used together. This paper is organized as follows. An introduction to H-Anim and SEDRIS is presented in Sections  REF _Ref13200862 \r \h 2 and  REF _Ref13200867 \r \h 3. Section  REF _Ref13200889 \r \h 4 discusses some of the issues that arise when interchanging environmental data sets. Section  REF _Ref12879471 \r \h 5 describes the actual mapping between the two systems. Section  REF _Ref13286392 \r \h 6 demonstrates the tools that were used to test the mapping and conversion process. Section  REF _Ref12879475 \r \h 7 demonstrates sample human models and applications. Finally, Section  REF _Ref12879477 \w  \* MERGEFORMAT 8 concludes the paper with a summary and recommendations for further work to be addressed in this area.H-AnimThe Humanoid Animation (H-Anim) Working Group (www.h-anim.org) was formed in 1997, with the goal of establishing a standard way of representing humanoids, such that they may be interchanged among modeling, authoring, and run-time applications. (The term “humanoid” was adopted to indicate that the standard is broad enough to encompass other human-like creatures or robots.) Version 1.0 of the H-Anim specification was released in that same year. This specification presented a data model for Humanoids expressed in the Virtual Reality Modeling Language (VRML) developed by the Web3D Consortium (www.web3d.org).H-Anim 1.0The initial H-Anim specification, version 1.0, defines a Humanoid node consisting of Segments connected by articulated Joints. Interchangeability is standardized by specifying:a standard hierarchy and naming convention for the joints and segments,a standard way of describing the geometry and appearance of each segment,a standard interface for controlling the articulation of the joints, anda standard default posture for the humanoid.The H-Anim specification defines a hierarchy of 89 joints, with 89 corresponding segments. A simplified, 18 joint/segment hierarchy is shown in  REF _Ref13289430 \h Figure 1, using the convention that a colon (:) separates each joint/segment pair.A compliant H-Anim model does not need to have all of 89 of the specified joint/segment pairs, which include 5 lumbar vertebrae, 12 thoracic vertebrae, and 7 cervical vertebrae, as well as 19 joints in each hand. However, any joint or segment that is included must use the prescribed naming convention, and no additional joints or segments may be added within the prescribed hierarchy. (The specification does allow, however, for “leaf” nodes to be added, to represent articles of clothing, jewelry, tools, etc.) In this way, it is assured that animations and other run-time controls developed for one model may be applied to another, at least for all of the shared joints of the two models.Figure  SEQ Figure \* ARABIC 1: Subset of an H-Anim hierarchy.A Segment node is defined by:a segment Name,a Mass,a Center of Mass,a Bounding Box Center and Size, andsome Children nodes, typically VRML Shape nodes (or groups of Shape nodes), which may include such geometries as boxes, spheres, and indexed face sets. A Joint node is defined by:a joint Name,a Rotation and Translation,a Scale and Scale Orientation,a Center (of Rotation),Upper and Lower Limits (of Rotation), andsome Children nodes, typically only the corresponding Segment node.A Humanoid node stores Metadata about the Humanoid Model, as well as references to the Segment and Joint nodes of the model. Figure  SEQ Figure \* ARABIC 2: H-Anim default posture.The Default Posture for an H-Anim model, as shown in  REF _Ref13289452 \h Figure 2 is:StandingArms at sideFingers downThumbs at 45 deg.Eyes Ahead and OpenEyebrows Neutral Mouth ClosedEyebrows neutralThe Default Posture is important because it describes the orientation of each joint when all rotations are set to (0,0,0). There is also a convention that the humanoids are “modeled in place”; that is, the location of each vertex of each segment is referenced to the origin of the model, which is at ground level, between the model’s two feet.Advanced H-Anim ConceptsH-Anim 1.0 provides adequate interoperability for segmented Humanoids of similar proportions and with an identical hierarchy of segments and joints. However, several limitations were found in practical applications and are being addressed by versions 1.1 and 2001 of the specification. Some of the limitations include:Animations defined by joint rotations alone do not transfer accurately between humanoids of different proportions.More realistic human models are not composed of only rigid segments, but have deformable skin.The VRML language, although appropriate for Web-based visual representation of 3D environments, is not commonly used in other Modeling and Simulation applications, and does not represent many non-visual attributes. The difficulty of reusing an animation developed for one human model with another model of differing proportions can be readily demonstrated by considering two models that are otherwise similar, except that one the shoulder are set farther apart on the second model. If we create an animation for the first model wherein the two hands are brought together in front of the chest, and then apply the same joint rotations to the second model, then we will find that there is a gap between the two hands on the second model. Assuming that the “intent” of the animation was to clap the two hands together, then the animation has not properly been transferred to the second model.H-Anim 1.1 addresses the issue of transferring such animations by providing support for inverse kinematics, a method commonly used for human animation. As the name implies, inverse kinematics a method, or collection of methods, for computing joint angles that satisfy a number of constraints on the placement and/or orientation of end effectors, such as the hands. Given a required position and orientation of the hand, for example, an inverse kinematics algorithm might compute a “best” rotation of the wrist, joint, and shoulder that achieves that position and orientation. In this context, the “best” configuration might be defined by minimizing the combined stress of the joints, or by optimizing other appropriate measures. H-Anim 1.1 supports inverse kinematics by defining a way to interchange the position of end effectors, called “sites”, and by providing limits for joint rotations. In addition, mass, center of mass, and moments of inertia may be defined for each segment, to support more advanced human body dynamics.H-Anim 1.1 and H-Anim 2001 also support animation of models composed of seamless meshes, as opposed to rigid segments. Displacers, defined in H-Anim 1.1, define local, parameterized deformations, such as might be used to simulate raising an eyebrow or bulging a muscle. H-Anim 2001 adds the ability to define a totally seamless skin and the manner in which it is deformed by each joint rotation. Finally, the H-Anim specification is being revised to include additional encodings. In particular, the H-Anim specification will be adapted to include encoding in the Extensible 3D (X3D) standard  REF _Ref13276187 \r \h [5], being developed as a successor to VRML. Limitations of H-AnimAlthough H-Anim provides a robust specification for animating the visible appearance of the human body, it is limited in many respects by the fact that it is expressed in the VRML language, which is oriented toward Web-based visual representation. VRML does not specify many non-visual aspects of modeling that are of interest to the broader range of Modeling and Simulation applications. For example, thermal characteristics, vulnerability, and other features are not supported. X3D extends the range of representation, but does not approach the expressive power of SEDRIS, which has been developed to meet these more demanding needs. SEDRISThe SEDRIS Project was initiated in 1994 by STRICOM (www.stricom.army.mil) and DARPA (www.darpa.mil), and is currently funded by DMSO (www.dmso.mil). SEDRIS addresses the complex task of environmental representation and interchange in multiple domains (land, sea, air, and space) using robust and open technologies. As such, SEDRIS supports the Department of Defense Modeling and Simulation Vision that “to allow maximum utility and flexibility, these modeling and simulation environments will be constructed from affordable, reusable components interoperating through an open systems architecture”  REF _Ref12872405 \w [1]. In order to address the needs of the many communities involved, the SEDRIS Project includes in its research and development activities members from government, industry, and academia.SEDRIS ComponentsSEDRIS is composed of five technology components that address: 1) the unambiguous representation of environmental data, and 2) the robust interchange of environmental data sets. The representation of environmental data is achieved through the use of the Data Representation Model (DRM), the Environmental Data Coding Specification (EDCS), and the Spatial Reference Model (SRM). The SEDRIS API and the SEDRIS Transmittal Format (STF) facilitate the interchange of environmental data sets  REF _Ref12872733 \w [3].The DRM is used to describe and articulate environmental data clearly and unambiguously. The DRM consists of about 300 object classes that are used to describe the data elements that make up an environment, along with the logical relationships between those elements in a hierarchical structure.The DRM utilizes the concept of polymorphism to allow the representation of environmental “things” in the structure most appropriate for the application domain. For example, for a GIS application, a road may be represented by a connected set of linear elements (features). However, for a 3D Visualization system, the road can be represented with a set of polygons with associated image textures that provide visual detail. The DRM allows these two representations to coexist in a common hierarchy and provides means to “associate” these two alternate representations of the road.An important notion when dealing with the DRM is that the DRM does not describe how a house, an airplane, or a human should be represented (i.e. there are no object classes named as such), but rather it provides the means for making their representation possible and to further “classify” that representation using EDCS codes.As an example of a DRM instance,  REF _Ref12870772 \h Figure 3 shows the SEDRIS Transmittal Browser (one of the SEDRIS core tools) displaying the hierarchy of a house model represented using the DRM. Notice the object class Model has the name “house”, which is stored as a field (also called an attribute) of the Model object. The SEDRIS Transmittal Browser knows that certain objects have a “name” field, and so it displays it besides the object class name. Also notice, at the bottom of the figure, the object of class Classification Data, which has a field of EDCS Classification Code. The model named “house” is, in this case, classified as a “building.”Figure  SEQ Figure \* ARABIC 3: A section of a DRM instance.The EDCS provides answers to three types of questions: what something is, what are its characteristics, and what units are used to measure those characteristics. The EDCS unifies the characterization of environmental "things" regardless of the means by which such "things" are represented. This allows a clear separation between the DRM and EDCS, where EDCS can act as the dictionary to the language and complement the grammar (the DRM). As a result, the EDCS can be utilized as an independent component any time the semantics of identification and characteristics of environmental data are called for, not only in the context of other SEDRIS technologies.The last three SEDRIS technology components (SRM, SEDRIS API, and STF) complement the DRM and EDCS in the representation and exchange of environmental data. The SRM captures and unifies several spatial reference frames used to represent the location of objects in the environment, and to convert locations from one spatial reference frame into another. The SEDRIS API is the means by which an application creates and consumes environmental data through a software library and interface specification. The SEDRIS API uses an ANSI C binding for maximum portability (both Unix and Win32 systems are supported). Through the SEDRIS API, applications produce and consume environmental data stored in STF files, which are platform neutral.In this project, we use the DRM as of SEDRIS Release 3.1 to map the data elements from H-Anim 1.0 to the DRM data elements, and use the EDCS to classify and attribute the data elements in the DRM. In addition, we use the SEDRIS API to produce STF files following the proposed mapping.Interchange IssuesA necessary condition for the interoperability of environmental data between heterogeneous systems is a successful interchange mechanism for that data. To achieve this interchange, at least three requirements need to be satisfied:The data must be represented using an agreed upon mechanism,The data must be transmitted using an agreed upon transmittal mechanism, andThe data must contain all the elements expected by the systems, and be organized in such a way that the systems are able to “parse” that organization.Requirements 1 and 2 (representation and interchange) are clearly satisfied by using SEDRIS, but requirement 3 needs some further analysis. Since SEDRIS does not specify how, say, all houses or human models should be represented, every producer of such models is free to choose their preferred content and organization of such.For example, in the visual realm, a human model could be represented by a bag of polygons, a set of polygonal meshes hierarchically connected through transform nodes, or a combination of component models representing each part of the human body. While each of these possible organizations represents the same “thing” (a human model), the applications accessing the data may only be able to handle just one of those representations. This situation arises due to the complexity of writing software applications that can “understand” the variety of data organizations that the DRM can represent.The purpose of this paper is then to provide a solution to requirement 3 when exchanging human models with animated parts. We address both the content and the representation issues by specifying a DRM instance diagram that can be used by producers of human models to populate their SEDRIS transmittal file content. The SEDRIS project is currently working on solutions to the general content specification problem, and although a solution is not yet available, much progress has been made. Once a formal content specification mechanism is provided, the mapping presented in this paper will be specified in this more rigorous format.H-Anim to SEDRIS MappingIn this section we describe in detail the mapping of H-Anim data elements into the SEDRIS DRM. Since the data model for H-Anim can be considered a subset of the DRM, the goals of the mapping task were:To develop an unambiguous mapping without loss of information from H-Anim to the DRM.To develop a representative DRM hierarchy that maps unambiguously to H-Anim, so that DRM instances matching this representative hierarchy can be successfully mapped to H-Anim.To test the mapping by implementing a conversion application that can convert VRML data files in H-Anim form to and from STF files, and verify the converted data sets.As previously discussed, the flexibility of the DRM allows for multiple representations of the same “thing.” Hence, since H-Anim is a strict specification for representing human beings using VRML, we created the mapping by starting from H-Anim constructs and finding the matching DRM object classes and hierarchies to represent them. The following sections describe the relationships between these objects and the actual mapping between H-Anim structures and the DRM.Due to the size of the mapping document, the complete mapping cannot be described in this paper. More information on this project and the complete mapping with sample data sets in H-Anim and SEDRIS STF formats are available from the project’s web site  REF _Ref16564545 \w \h [6]  REF _Ref13219970 \w \h [4].RelationshipsH-Anim is currently expressed in VRML97 syntax, so many of its geometry data structures have direct mappings into the DRM geometry classes. However, H-Anim uses the notion of “prototypes” (expressed with the PROTO VRML97 syntax), which allows it to group related concepts and data structures into more complex ones. For example, Segments and Joints cannot be expressed using a particular class of the DRM, but they rather necessitate the creation of a DRM hierarchy coupled with the use of the EDCS to express them.For example, the H-Anim Joint node is typically implemented with a VRML Transform node, which is a grouping node that also contains transformation information. In the DRM, we can use a Union Of Geometry object with an LSR Transformation object as a component to express the Transform implementation of the H-Anim Joint node. However, an LSR Transformation object does not store the actual transformation data, and so it needs additional DRM objects that contain that information, such as a Local 4x4 object or a set of LSR Transformation Steps.Finally, most fields in the prototypes being defined in H-Anim are declared as “exposedFields”, so that they can be accessed and manipulated for animation. In the DRM, we use the Control Link classes to implement the same concept. In addition, there are upper and lower limits that can be specified for the H-Anim transformation components, which makes the corresponding DRM hierarchy more complex.It is important to note that the verbosity of the mapping from H-Anim structures to the DRM is due to the flexibility and power of expression of the DRM. The DRM is meant to cover the whole range of environmental data from land, ocean, atmosphere, and space, while at the same time embracing a multitude of representations for the same entities in each field. The fact that a successful mapping from H-Anim to the DRM is possible only attests to the representational flexibility of the DRM.MappingThis section describes the mapping of the H-Anim 1.0 nodes into the SEDRIS Release 3.1 DRM. In order to simplify the writing, the discussion that follows refers to H-Anim nodes and fields simply as “nodes” and “fields.” All fields are in italics, as in the bboxCenter field. The SEDRIS DRM objects are referred to simply as “objects,” and their fields are also italicized. Whenever it is not clear by the context, we will refer to the fields as “H-Anim fields” or “DRM fields” as appropriate. We will describe each of the H-Anim 1.0 node types (Humanoid, Joint, and Segment) individually.The Humanoid node is the top-level node for a human model, and so we use a Model object to represent it. The Humanoid name field is stored in the Model object fields. A Classification Data object with a value of ECC_HUMAN is used to classify this model as a humanoid. The Humanoid info fields are stored in Point Of Contact, Description, and Access objects. To store the bboxCenter and bboxSize fields, we first need to add geometry objects to the hierarchy, since Models can also store feature hierarchies (which are 2D). A Geometry Model object with a Union Of Geometry Hierarchy object is then added to the Model, and a Bounding Volume object is added below this hierarchy. Finally, an Interface Template object under the Model contains the references to the all the modifiable joints in the humanoid. The hierarchy at this point is shown in  REF _Ref13327684 \h Figure 4.Figure  SEQ Figure \* ARABIC 4: The Humanoid node mapping.The Joint node is used to define the relationship of each body segment to its immediate parent. A Union Of Geometry object represents the top level of a Joint node, with the translation, rotation, and scale fields represented by an LSR Transformation object. The name field is stored in a Property Value object with an EDCS attribute code of EAC_NAME. The LSR Transformation object contains a list of transformation steps that define the transformation. If a center field is present in the Joint node, then two Translation Step objects translate the node to the origin center and then back to its original center after the rotation and scaling has been applied. A Rotation Control Link is used in the Rotation objects to provide for control of the Joint rotations.  REF _Ref13326842 \h Figure 5 illustrates the Joint node mapping.Figure  SEQ Figure \* ARABIC 5: The Joint node mapping.The body segments are stored in Segment nodes. These nodes contain the geometry that represents a particular body part, such as a thigh or a forearm. Since many geometry nodes can be children of a Segment node, we use a Union Of Geometry object to represent it. Similarly to the Humanoid node, a Bounding Volume object stores the bboxCenter and bboxSize fields. The name of the Segment is stored in a Property Value object. A Center Of Mass object stores the centerOfMass field. The mapping for the Joint node is shown in  REF _Ref13327694 \h Figure 6.Figure  SEQ Figure \* ARABIC 6: The Segment node mapping.Finally, the VRML Shape nodes in the Segment nodes are mapped to the corresponding DRM objects. VRML defines several types of geometry nodes, such as Box, Cone, Cylinder, IndexedFaceSet, Sphere, and others. A description of all the possible geometry nodes and their mapping to DRM objects is beyond the scope of this paper. ToolsThis section describes the software tools used and developed to support this project.H-Anim to SEDRIS STF ConverterArteon Corporation developed a general VRML97 to SEDRIS STF Converter with H-Anim support. This converter is a command-line driven application that can be used in a batched environment to process multiple files. The files produced are compatible with SEDRIS Release 3.1.The converter command-line options can specify the properties and configuration of the STF file. For example, the converter can be directed to generate Rotation objects with Control Links even if some Joint nodes don’t contain rotation fields. In addition, there are options for producing a log file of progress through the reading of the VRML file to aid in the debugging of parsing problems.SEDRIS STF To VRML/X3D/H-Anim ConverterVcom3D has developed a converter from SEDRIS Transmittal Format to VRML, Extensible 3D (X3D), and H-Anim. Initially, this project addressed only conversion to VRML. However, a number of commonly used SEDRIS geometry objects could not be properly mapped to the standard VRML node types. As an example, VRML does not support the rendering priority level (or “layering”) of co-planar geometries; nor does it support “multi-texturing”: the combination of two or more images applied to the same geometry. To address these limitations, we used the extensibility features of X3D, the successor specification to VRML97. As the name implies, X3D is extensible and allows new node types to be added to the standard VRML97 profile. Vcom3D has developed new node types that allow additional SEDRIS geometry objects to be expressed in X3D. These nodes include Layer Group, Multi-Texture, Multi-Texture Coordinate, Multiple State Objects, and others. By adding these new node types, we have created a Web-based language that is sufficiently powerful to represent such synthetic environments as CCTT and MOBA.  Several optimizations may optionally be applied as part of the conversion process. For example, collecting adjacent polygons that share the same material and appearance attributes into a VRML/X3D “IndexedFaceSet” greatly improves rendering speed.Vcom3D has also developed an X3D Viewer and Simulation Engine that renders all standard VRML97 nodes, plus the new node types identified in the previous section. This viewer also includes a Humanoid Animation Engine that implements advanced behaviors for H-Anim models. This Animation Engine uses the X3D “Script Node” capability. A Script Node allows complex behaviors to be developed in ECMA Script, Java, or C++. Among other behaviors simulated in this manner, Vcom3D has developed a Humanoid Animation Engine that interprets high-level commands, such as “Walk”, “Speak”, and “Gesture” and converts these to real-time animations of H-Anim Joints, Segments, and Seamless Meshes.A longer-term project for Vcom3D is to integrate the SEDRIS converter into the X3D Viewer, so that SEDRIS files, as well as VRML and X3D files can be displayed without a separate conversion process.H-Anim Authoring ToolsVcom3D has developed a suite of Authoring Tools for H-Anim models. These tools present an integrated Graphical User Interface, shown in  REF _Ref13289389 \h Figure 7, which allows the author to develop complex human animations including action, gesture, facial expression, gaze orientation, and speech with lip-synching. The primary user interface includes time-line tracks for each of the above animation types, shown in the upper third of the figure; a selectable Web page preview / script view, shown in the lower left; and a 3-D animation preview, shown in the lower right. Pop-up windows, including the facial expression and posture windows shown in the figure, support individual operations. Vcom3D’s current animation libraries include over 2000 actions and gestures, 50 expressions, and 14 visemes (the visual counterpart to phonemes) that can be applied to any of 10 segmented and 12 seamless H-Anim models. The resulting behaviors may be embedded in Web pages that may in turn be published as Advanced Distributed (ADL) Learning SCORM-conformant courses.Figure  SEQ Figure \* ARABIC 7: H-Anim authoring tool.ResultsA combination of H-Anim and SEDRIS data sets were used to test the conversion process. In general, the conversion from H-Anim to SEDRIS was successful in cases where simple geometry organizations were used to specify the Segment nodes. This was expected since the converter does not handle all the VRML Geometry nodes.The conversion from SEDRIS to H-Anim was also successful in cases where the DRM objects used could be mapped to X3D nodes. In the cases where no mapping was available, the X3D nodes were extended to handle them on a case-by-case basis.More information on this project and the complete mapping with sample data sets are available from the project’s web site  REF _Ref16564545 \w \h [6]  REF _Ref13219970 \w \h [4]. H-Anim and MOBAAs a first example of using H-Anim and SEDRIS together, we will describe a course, developed to Advanced Distance Learning (ADL) Shareable Content Object Reference Model (SCORM) standards, that embeds an H-Anim soldier model into an S-1000 Military Operations in Built-up Areas (MOBA) terrain, represented in SEDRIS Transmittal Format (STF).The MOBA terrain and the soldier model were converted to X3D format using Vcom3D’s SEDRIS-to-VRML/X3D/H-Anim converter. The soldier shown in  REF _Ref13329600 \h Figure 8 and an armored personnel carrier were placed into the MOBA environment, as shown in  REF _Ref13289924 \h Figure 9.Figure  SEQ Figure \* ARABIC 8: H-Anim Model with 57 Articulated Joints.Using the H-Anim Authoring Tool, we were successful in animating both characters loaded directly in H-Anim format, and characters converted from SEDRIS STF files.Figure  SEQ Figure \* ARABIC 9: H-Anim character in the MOBA database.Other Data SetsOther characters being converted to SEDRIS STF files are shown in  REF _Ref13329634 \h Figure 10. Each of the H-Anim characters has a seamless mesh skin controlled by 57 joints with over 100 degrees of freedom.Figure  SEQ Figure \* ARABIC 10: Examples of other interchangeable characters.ConclusionsThis paper presents a mapping from the H-Anim 1.0 specification to the SEDRIS Release 3.1 DRM and EDCS specifications. Several tools and data sets are used to demonstrate the feasibility of this mapping and the benefits of interchangeable humanoid models. A training example was demonstrated which integrates a SEDRIS-based synthetic environment with H-Anim models.Our results indicate that successful interchange of human models is possible and desirable in the quest for reducing the costs of environmental data set reuse. In addition, the dynamic characteristics of the models are preserved so that real-time systems can exchange these models without loss of information.Future work in this area should deal with H-Anim 1.1, which contains several new node types and fields that allow for attachment sites and displacer nodes to control groups of vertices. Furthermore, SEDRIS and other programs are working in the development of content specification standards that could be used to specify the contents and requirements of H-Anim-based humanoid models in the DRM, providing a more formal framework for their specification.AcknowledgementsThanks to the SEDRIS team for answering questions and for providing us with great tools and software.The Vcom3D SEDRIS-to-VRML/X3D converter and X3D Viewer/Simulation Engine were developed in part under funding from STRICOM contract N61339-00-C-0006. The Vcom3D H-Anim Authoring Tool was developed in part under funding from NSF Grant 9901855. ReferencesE. Bjorkman and P. Blemberg, Review of the Defense Modeling and Simulation Office Human Behavior Program, SISO Conference, 2001. Department of Defense Modeling and Simulation (M&S) Master Plan, Under Secretary of Defense for Acquisition and Technology, Washington, D.C., October 1995.SEDRIS web site, http://www.sedris.org.Humanoid Animation Working Group: “Specification for a Standard Humanoid, version 1.1”, available at http://www.h-anim.org.X3D Specification, Web3D Consortium, 2002. Available at http://www.web3d.org.H-Anim to SEDRIS STF Project web site, http://www.arteon.com/se_hanim.asp.Author BiographiesWARREN MACCHI is the President and Chief Technology Officer of Arteon Corporation, an Orlando, FL corporation that specializes in environmental and geographical information data analysis, conversion, and modeling services. He has been involved with the SEDRIS program for almost five years and with simulation and environmental data technologies for over 10 years. He has developed numerous tools used to visualize, convert, and manipulate environmental databases and geographical information. Warren holds a B.S. and M.S. in Computer Science from the University of Central Florida.EDWARD SIMS, PhD, is CTO and co-founder of Vcom3D, an Orlando-based company that develops interactive visualizations for Web-based learning. Dr. Sims holds a B.S. in Mathematics from the College of William and Mary and the M.S and Ph.D. degrees in Systems Engineering from Rensselaer Polytechnic Institute. He has been awarded four patents in the area of real-time visual simulation.