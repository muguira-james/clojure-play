Enterprise UDP Firewall Traversal Using SIPScott Holben(678) 524-0910 HYPERLINK "mailto:scott.holben@lmco.com" sholben@bellsouth.netKeywords:SIP, UDP, NAT, Firewall, ALG, SBC, SOA, Sensitive Information, Export ControlABSTRACT: DIS, HLA and TENA all lack UDP (User Datagram Protocol) NAT (Network Address Translation) firewall traversal services.  Similarly, tunneling IPv6 unicast traffic inside UDP packets across IPv4 NAT firewalls with Teredo and establishing IPsec (Internet Protocol Security) tunnels across enterprise network boundaries with IKEv2 (Internet Key Exchange version 2) will rely on a general purpose enterprise NAT UDP firewall traversal mechanism.  Commercial SIP [1] (Session Initiation Protocol) NAT (Network Address Translation) firewall technology is ready to solve the difficult enterprise UDP unicast NAT traversal firewall problem.  This technology is ready to be integrated into a general purpose trans-enterprise SOA (Service Oriented Architecture) to yield a standardized means for DIS, HLA, TENA, IPsec, Teredo and quite possibly NSA Type I encryption to safely reach back to access protected sensitive enterprise resources.1. IntroductionEnterprise firewall practices commonly employ NAT, sometimes augmented with a firewall control proxy, ALG (Application Layer Gateway) or even an SBC (Session Border Controller) to protect intellectual property and export controlled data. Unfortunately, NAT firewall architectures are not standardized. This point has posed problems for some traditional Web client-server applications. However, it has created even greater challenges for developers of P2P (Peer-to-Peer) applications that must co-exist with legacy NAT firewalls, especially when the requests originate from outside an enterprise. This is because most enterprise firewalls block packets originating from this direction. Because of the security risks associated with a stateless protocol such as UDP, large enterprises have Corporate IT Security policies limiting UDP traversal services to those essential for enterprise operation: e.g., DNS (Domain Name Service; UDP port 53) using application layer gateways, IKE (Internet Key Exchange; UDP port 500) using dedicated switches, and possibly NTP (Network Time Protocol; UDP port 123) using encrypted packets with external trusted host(s). A corollary to this statement is that UDP-based DIS, HLA and TENA environments have operated within the confines of flat networks without firewall demarcation points separating multiple enterprises.  While most operating systems and applications can’t be trusted, flat networks work well when business partnering relationships are established.  However, flat networks create problems for environments requiring considerable intellectual property or export controlled data to persist and be shared across multiple contracts.  B2B environments such as the Internet support firewall traversal services. The distributed M&S DIS, HLA and TENA standards all lack explicit UDP unicast firewall traversal services. Similarly, UDP is used by IETF Teredo standard to provide unicast IPv6 tunnels across IPv4 networks using NAT, unlike 6to4 which breaks when it encounters NAT devices. However, Teredo is not useful across enterprise boundaries if enterprises essentially block all UDP firewall traffic. If real-time distributed M&S is to become truly successful in a JCIDS (Joint Capabilities Integration and Development System) environment for use with coalition partners, the provisioning of UDP firewall services by the simulation environment can no longer be ignoredFive years of investigation indicates that SIP-enabled firewalls can solve the UDP enterprise firewall problem.  Enterprise firewalls associate state from the SIP dialog [2, 3] to specific UDP packets, thereby allowing UDP packets to safely traverse an enterprise boundary for VoIP (Voice over Internet Protocol) applications provided adequate precautions are taken.  The SIP dialog creates a stateful firewall binding for streams of UDP packets. This same technology can be applied to DIS, HLA and TENA to facilitate legitimate outgoing or incoming UDP or TCP packets to traverse enterprise NAT firewalls.  The new generation of VoIP NAT firewalls was explicitly designed to support P2P application protocols such as SIP.  (With SIP’s core P2P behaviors, the task of developing an open RTI becomes possible.) Unlike the conclusions reached by earlier SISO Web RTI tiger team efforts, SIP-enabled firewall products introduce an insignificant firewall traversal delay for UDP streams, typically ranging from tens of microseconds to under a half a millisecond.  Existing SIP firewall products provide UDP, TCP and TLS transport services for the SIP signaling channel that opens dynamic pinholes across firewalls for ephemeral UDP or TCP ports.  In the near-term future, enterprise IT organizations are adopting VoIP enabled firewalls to support VoIP connectivity. This fact alone is enough to merit the development of a distributed M&S SOA environment using SIP. This paper will: 1) discuss the use and value of firewalls by enterprises, 2) explain core concepts enabling Internet Protocol communication, 3) describe firewall roles and technologies, 4) define and contrast ALG and SBC NAT firewall devices, 5) describe four addressing mechanisms for safely accessing firewall protected resources, 6) classify four legacy NAT firewall types, 7) identify primary market pressures forcing signaling protocols to traverse NAT firewalls with examples of realizable open standards and 8) briefly discuss the integration of  SIP into classified PL-1 through PL-5 information systems. (Future papers will discuss SIP PL-1 through PL-5 connectivity in more detail.)1.1 Why Enterprises Use FirewallsThe value of an internal enterprise network is  determined by many variables but two important variables are the number of people using the network daily to perform their roles and the number of services provided by the network.  Enterprises prosper depending on the number of customers and business partners using the networks routinely. As the number of service types provided by an enterprise network grows, so does the customer base. As network utilization grows, so does the need for creating and instituting firewall policies.      There are four core reasons for instituting firewalls within enterprises: 1) to assure the privacy of sensitive information such as intellectual property, competition sensitive information, third party proprietary information and export controlled data; 2) to help protect the availability of network server resources and the integrity of the data contained within the network by minimizing the impact of denial of service attacks, worms, viruses and Trojan horse programs; 3) to minimize public relations fiascos due to altered public resources; 4) to support audits that validate compliance to policies and track compromises to develop and maintain the trust to do business. The damages or compromises to an enterprise's network are inflicted by war, spies performing industrial or even international espionage, saboteurs, joy riders, black hatters or even disgruntled internal employees.1.2 Core Concepts Enabling Internet Protocol CommunicationBefore delving into firewalls technology one must  understand how client and server or P2P endpoints communicate with one another within IP (Internet Protocol) networks. Two IP address are required so client-server or P2P applications can route information back and forth using either IPv4 or IPv6 addresses.  An IPv4 address is 32 bits in length and an IPv6 address is a 128 bits number in length.  IP addresses alone are not sufficient to enable generalized communication between communicating computers. A transport protocol, often implemented by the OS (Operating System), is required to provide a generalized service with an optimized characteristic.  For example UDP is a connectionless transport protocol without flow control that is not bidirectional and is optimized for speed and providing multicast services making it a strong candidate for providing hard real-time services. TCP is a unicast connection oriented transport protocol with flow control that is typically bidirectional and is optimized for reliability. Both UDP and TCP transport protocol stacks are implemented by most operating systems. A remote IP address, transport protocol and a remote port number are required so the local endpoint OS can facilitate its application process or thread to send data to the correct process or thread on a remote endpoint.   A session for communication is comprised of a protocol, source IP address and port and a destination IP address and port. Connection oriented protocol packets have a traceability to a particular session while connectionless protocol packets do not. Enterprises tend to trust connection oriented protocols, because connection oriented packets have traceability to an individual’s authenticated session that is logged by an accounting process. This is not typically the case for connectionless protocols by themselves. However, with the advent of SIP technology, a stateful dialog provides a session context for general purpose UDP packet streams.1.3 What is a Firewall?Firewalls are intermediary choke points placed between endpoints (i.e., clients, servers and P2P user agents) to separate networks having different levels of trust. Firewalls protect enterprise network resources and are specifically designed to implement network protection policies that can be a function of an overall enterprise operation protection level code (e.g., Alpha, Bravo, Charlie or Delta). Honey pots and intrusion detection equipment often supplement firewalls by entering into the decision making process for determining the current enterprise firewall operation code and planning for future firewall counter countermeasures. Firewalls establish demarcation points separating different network realms or domains that use different security processes or instantiations of processes.  Firewalls are middle box packet filters placed between networks. Firewalls may forward packets onward either with or without modification, reject or discard packets as defined by the firewall's policy. Most enterprise firewalls are configured to discard packets that are not associated with a legitimate session for a legitimate service. A comprehensive firewall can easily enforce AAA (Authentication, Authorization and Accounting) rules on a per service session basis.  Accounting records are used by firewall auditing processes to ensure compliance to policies. Client applications and scanners are used to validate that firewalls are configured according to the associated information protection policies. A firewall can also provide encryption services such as encrypted VPN (Virtual Private Network) tunnels to other trusted networks or hosts to ensure privacy that complements AAA processes. Network firewall security controls impact all seven layers of the ISO communication model. Commercial firewall products tend to emphasize protection for ISO layers two through five (i.e., link, network, transport and session layers).  The physical-layer of security is the responsibility of enterprise personnel. No physical security equates to no trusted security.  Link-layer security is often used to implement filtering rules for trusted Ethernet addresses to establish communication or link-layer encryption, e.g., WEP, for 802.11 networks. Network-layer security allows filtering rules based upon network protocols (e.g., IPv4, IPv6, IPsec, ICMP, IGMP, etc.) and source/destination IP addresses. Transport-layer security allows filtering rules for certain transport protocols (e.g., UDP, TCP and SCTP) and port numbers.  Session-layer security allows AAA services associated with a session to be logged, established, denied or rejected. Over the years, enterprises have adopted the practice of using one, two and three tier firewalls.  The first tier is the screening router comprised of the ISO physical, link and network layers.  The screening router usually applies stateless packet filtering rules to minimize the impact of denial of service attacks with light weight filtering that does not consume as many computing resources as stateful packet filtering.  Screening routers are often sufficient protection for enterprises when a contractual partnering relationship is in place as the vehicle to establish mutual trust between enterprises sharing a flat private network.  However, these forms of trust can require years to establish and the associated networks becomes awkward to manage as it grows in size with server access controls to ensure export controlled information is not compromised.  The second tier is the actual firewall comprised of the ISO link, network, transport and the session.   Most enterprises require the firewall to support SPI (Stateful Packet Inspection). Stateful firewalls afford more security than stateless firewalls because they incorporate specific bindings with timeouts limiting the scope of sessions traversing the firewall. Screening routers and firewalls are often combined to provide an overall firewall solution within dedicated B2B exchanges.  This allows persistent sensitive information to reside at each enterprise node. Once physically connected to an exchange, session-level trust can be established in a few hours (the time required by people to establish accounts) to support transaction level exchanges that often take only a fraction of a second to complete.  The third tier is the SBC (Session Border Controller), comprised of the ISO session, presentation and, sometimes, the application layers.  Enterprises use the SBC to ensure that users or applications are not exposed to inappropriate information or information for which they do not have a need-to-know. SBC devices are becoming more common within enterprises for filtering content on the Internet before the content reaches Web browsers. There is a vigorous debate within the IETF (Internet Engineering Task Force) as to whether application level security is required.  This author's position is that until operating systems and applications are trusted, it is appropriate for ISO application level security to enforce business policies for enterprises and weapon system contract stipulations defined by government customers. Many firewalls institute policy allowing communication pathways to be established for requests originating from within an enterprise and blocking all requests originating from outside the enterprise.  By explicitly blocking all outgoing enterprise service ports, except for those that are explicitly allowed by firewall equipment, the task of discovering active Trojan applications becomes easier.  ALG and SBC devices can serve this purpose. Both these devices are stateful and both can log transactions for outgoing and incoming requests addresses specified by URLs (Uniform Resource Locators).Each enterprise has its own business rules to determine if one, two, or a combined one-two or three tier firewalls with centrally controlled management are required to guard its networks when connected to external networks. The greater the number of firewall tiers the better the defense, but the operational support costs also grow proportionately.  Significant enterprises typically implement three tier firewalls when connecting their intranets to the Internet.Enterprises also have business rules specifying authentication requirements for access to a network or a specific service on a protected network. Respectable large enterprises typically require two factor authentication before permitting carte blanche network access. Two-factor authentication usually involves "what you have" and "what you know". What you have may be an employee badge allowing entrance to an enterprise computing area, or a computer loaded with VPN software and a SecurID™ card with a portion of an identification number valid for a limited time period. What you know may be your system account username and password to log into a computer. Many enterprises require at least single factor authentication to access sensitive internal services from an external location, e.g., https access from the Internet. Two-factor authentication is harder to defeat than single-factor authentication. Three- factor authentication is the most difficult to defeat.  This more stringent form of authentication authenticates "what you are" plus "what you have" and "what you know". What you are may constitute your fingerprint, retinal scan or even your genetic makeup.1.4 Network Address Translators (NAT), Application Layer Gateways (ALG) and Session Border Controllers (SBC)Most enterprises tend to use the IP addresses specified by RFC (Request for Comments) 1918 inside their internal private networks.  RFC 1918 was published in February of 1996, roughly 18 months after Cisco released the first commercially available NAT firewall.   This IPv4 IETF best current practice documents the address spaces that by default are not publicly routable on the Internet.  The three documented groups of private IPv4 address spaces are: 10.x.x.x, 172.16.x.x and 192.168.x.x.  Most of today's personal NAT home firewalls use these private address spaces.  The advantage of using such private addresses is that if the private network is accidentally connected to the public Internet it is likely the private network will not be visible to the Internet, thus minimizing the chances of a compromise to the private network. Another reason to use private IP addresses within enterprise intranets and extranets is to maintain the privacy of the internal network configurations.  This is good OPSEC (OPeration SECurity) policy and practice.   When computers within private networks use RFC 1918 address spaces, NAT devices or multi-homed proxy devices must be used to connect the networks. NAT devices are relatively simple to implement but unfortunately NAT packet operations break numerous protocols (e.g., DNS, FTP, IKE, IPsec-AH).  For this reason an ALG or an SBC and ALG are often integrated into a NAT to safely extend the NAT firewall behavior. By adding these devices, protocol services that would be broken by rudimentary NAT operations on a protected network can now reach resources on a public network. The NAT device allows multiple devices using a private address space to share one or more public IP addresses. A NAT device is configured with a set of one or more externally routable IP addresses on external interfaces and a private internal address on a private internal interface. NAT devices can also change the port numbers of a session between endpoints segregated by the NAT device. This is called NAPT (Network Address and Port Translation). Unfortunately, the acronym NAT is frequently used incorrectly to mean NAPT in firewall literature. NAPT is also called IP Masquerading by the Linux community. NAPT devices allow the conservation of IPv4 addresses unlike true NAT. The NAPT mechanism can be tightly integrated with firewalls filtering mechanisms to provide security.    A binding is state that defines firewall behavior.  A mapping is state that defines NAPT behavior. Firewall NAPT devices often maintain binding and mapping state information for each session within a translation table to enable communication between endpoints located on opposite sides of the NAT.  In general, the binding is identified by the UDP or TCP protocol, the internal IP address and port and the external IP address and port on the other side of the NAT device.  Dynamic bindings effectively open temporary firewall pinholes for communication and are maintained by a firewall timer.  If no packets using a binding are received by the NAT firewall within a certain period of time, the NAT binding is removed by the timer, thus closing the pinhole.  For distributed M&S objects with 30+ second updates, this could be problematic unless the firewall timers can be tweaked. The servers outside an enterprise can only see the publicly routable NAT IP addresses. Similarly, the clients outside the NAT device can see the publicly routable NAT IP addresses and not the private server addresses protected by a NAT device. The NAPT functionality of performing both IP address and port translations by itself is not considered a firewall filtering behavior although the state associated with a NAPT is often coupled with firewall behavior. It is considered firewall behavior to allow requests for external services to originate from inside a private network but deny requests originating from an external public address to complete, or to apply other policy-based access control rules with an ACL (Access Control List). Reverse proxy and reverse SBC functionality, often built into NAT firewall devices, are explicitly designed to allow outside requests or calls satisfying ACL and authentication rules to be completed inside.NAT devices are brittle in the sense that they break numerous networking protocols. Rudimentary NAT devices are only aware of protocols, IP addresses and the port numbers defined within the headers of packets at the ISO network and transport layers. It is not uncommon for NAT devices to break: 1) communication channels to communicating endpoints using higher level protocols containing IP addresses and port numbers within UDP or TCP packet payloads and 2) protocols trying to establish new but legitimate communication channels originating from outside the NAT firewall. Both situations occur in active mode FTP (File Transfer Protocol), typically used for file transfer within enterprises and between enterprises.  Active mode FTP servers are easy to protect with a NAT firewall.  This is not the case for protecting active mode FTP clients behind a NAT device.  Active mode FTP client requests are sent to the server on TCP port 21. Shortly after this control channel is established, a data channel is established by the public server from TCP port 20 to the port specified by the client.  Most firewalls block requests originating from external untrusted sources.  Hence, either an FTP ALG (a more OPSEC secure trusted firewall control proxy) or an FTP SBC must be used to control the opening of a random ephemeral destination port number specified by the client, the dynamic pinhole.  This random port is used to ferry data between the protected client and the outside server.  If neither an ALG nor an SBC is employed, active mode FTP can not be used between the protected client and the public server because of the significant security risk of statically opening TCP ports 1024 through 65536. (If these ports are statically opened  the ephemeral port specified by a protected client can function properly.)  The problem of getting an FTP client to open a TCP session via the outside server is somewhat similar to what VoIP protocols have for opening UDP data streams for the media/application channel. It is simple for a NAT firewall to protect private passive mode FTP clients connecting to public passive mode FTP servers. Passive mode FTP servers are more difficult to protect. In passive mode FTP, the server chooses a random destination TCP port between 1024 and 65535 and informs the client of the port number from the port 21 connection.  This allows the client to use its egress firewall’s behaviors to establish a data channel to the server.   Either an FTP ALG or an FTP SBC must be used again or the server must be hardened and moved into a firewall DMZ (DeMilitarization Zone) because too many ports must be opened to the enterprise network.  Hard-to-protect servers and not fully trusted clients typically operate in a DMZ.  The ALG and SBC are used extensively by NAT devices supporting VoIP P2P signaling protocols.  An ALG interfaces only to the signaling channel, but the ALG’s signaling proxy server also acts as a master for the NAT firewall that dynamically opens and closes media/application channel pinholes.  An SBC interfaces directly to both the signaling channel and the associated media/application channels of a signaling control protocol.    Unlike the ALG, the SBC can operate on the bodies of higher level protocols.  SBCs perform "deep packet inspection" and repair packet headers of poorly designed user agents to allow higher level protocols to operate properly across NAT devices or to completely block packets from mal-intentioned user agents trying to use compromising techniques such as stack smashing.  Unlike ALGs, SBCs have more state than ALGs. SBCs can censor message body content at the ISO presentation and application levels. Unlike ALGs,  Because SBCs are more complex than firewall control proxies, SBCs also tend to be less stable than ALGs because they can not adjust to protocol and content changes that are transparent to the proxy server within the ALG.  A stateful SIP firewall control proxy or ALG has one dialog per SIP session that is used for routing.  A SIP SBC does not route like a proxy, though it is frequently adjacent to SIP proxy servers. An SBC has two dialogs per SIP session.   Using SIP RFC 3261 terminology [1], a SIP SBC is called a B2BUA (Back-to-Back User Agent) in which each of the two user agents have their own dialog.  One dialog is used for communication termination; the other is used for communication regeneration.  SIP B2BUA technology is used to build gateways for PSTN, H.323 and MEGACO networks, but B2BUA gateways are not nearly as scalable as the softswitch and media gateway architecture. ALG devices tend to be more transparent to communicating endpoints traversing this middle box than SBCs [4]. Firewall control proxies, however, are completely transparent unlike either the ALG or SBC. By definition, a true firewall control proxy can not alter the content of SIP bodies while ALG and SBC devices may do so. Consequently, ALGs and SBCs have better operational security characteristics than firewall control proxies.In general, the SIP specification allows user agent signaling and media channel origination and termination points to be different.  This poses a denial of service security risk, especially if this capability is exercised at enterprise boundaries. As part of a sound enterprise security policy, all SIP requests leaving an enterprise must as a minimum be authenticated.  Because a Trojan UA (User Agent) is not likely to know user names and passwords, this helps minimize the possibility that a Trojan SIP UA can open firewall ports allowing the establishment of an external attack against a significant internal enterprise server [5] or the release of sensitive information by the Trojan UA within the media channel. The external DOS (Denial of Service) risk can be further reduced by using an SBC to enforce the signaling and media addresses of the internal destination resource to be the same. The vast majority of SIP user agents have both signaling and media channels co-located at the same endpoint. However, conference servers and softswitches tend to segregate signaling and media channels to different device IP addresses. At the cost of additional delay in the media channel, the SBC may inspect the channel for sensitive content such as documents containing proprietary information. When a TCP transport mechanism is used for signaling, the SIP hop-by-hop encryption mechanism is TLS (Transport Layer Security). TLS security is built into HTTPS and SIPS (SIP Secure) protocols. The UDP hop-by-hop encryption mechanism is currently under development by the IETF and is called DTLS (Datagram TLS). TLS by itself has no inherent problems traversing NAT firewalls. As a hop-by-hop mechanism TLS only allows authentication and encryption services for adjacent devices.    Because TLS is used to encrypt the entire SIP message, and SIP headers and bodies may contain private network address information, ALG and SBC devices must break the protocol because the behaviors of these two devices are not explicitly defined by the SIP standard, RFC 3261 [1]. Since TLS encoded packets must be decoded, inspected and reconstituted by both the ALG and SBC NAT devices, trust must be established for keys to be shared by adjacent parties on both sides of the ALG or SBC NAT device, analogous to trust established between two SIP proxy servers using TLS. For this to occur, the ALG or SBC devices must be configured with the passwords of the adjacent devices that these NAT devices are segregating to provide security services.  Hence, outgoing packets can still be cleansed of private address data to maintain OPSEC without effectively compromising the SDP (Session Description Protocol) payload protected by an RFC 2617 digest authentication mechanism (e.g., “auth-int” quality of protection) or the TLS encryption of the SIP body.The SIP end-to-end encryption mechanism supported by true SIP proxy servers is S/MIME (Secure Multipurpose Internet Mail Extensions).  S/MIME operations work for both UDP and TCP transport protocols unlike the SIP hop-by-hop encryption mechanisms. To accommodate S/MIME encryption services, there is a requirement for an inner protected header and an outer cleartext header used and modified by SIP proxy servers for routing purposes. Thus, for end-to-end encryption, the common SIP headers (i.e., To, From, Call-ID, CSeq, Contact, Via, Route, Record-Route) must always remain in cleartext form for SIP proxy servers to perform their roles. When end-to-end encryption is used between enterprises, OPSEC becomes an issue because private network information remains in the encrypted SIP headers. ALG and SBC devices always break the end-to-end encryption mechanism because of their inherent middleman behaviors.  True firewall control proxies do not break end-to-end encryption or TLS encryption, but these devices do not support NAT. Firewall control proxies’ exhibit poor OPSEC qualities because they can not modify SDP data containing private network information.In addition to potentially breaking session-level end-to-end encryption mechanisms, NAT devices also break network-level end-to-end encryption mechanisms. For example, NAT destroys the security provided by the IPsec AH (Authentication Header) because it changes packet IP addresses and ports. Changing these values destroys the authentication hash which requires the original values of these fields at the packet destination.1.5 Accessing Resources across ALG and SBC DevicesResources on the Internet are identified by their addresses using public URLs (Uniform Resource Locator), URIs (Uniform Resource Identifier) or AORs (Address of Record). ALG and SBC devices understand the semantics of these addresses and the context in which they are appropriately used. (RFC 3986 is the general standard for defining the generic syntax for Internet addresses. [6]) This section provides an OPSEC-NAT model developed by the author to provide a better understanding of the roles of URLs, URIs and AORs. A fourth addressing mechanism relevant to NAT firewall traversal is also described.   On the Internet or on an exchange, a URL is not guaranteed to be routable across enterprises unless it has a fully public IP address or FQDN (Fully Qualified Domain Name). A URL specifies a unique endpoint from either the public or private network perspective. It has a numerical IP address or an internal FQDN address and may specify a transport protocol or port number, e.g., sip:bob@20.40.60.80:5061;transport=tls or sip:bob@20.40.60.80:5060.  URLs with private IP addresses or internal FQDN host names should always remain inside an enterprise network in order to supply strong OPSEC for the internal network. Barring ACLs, on the Internet or an exchange, a URI is guaranteed to be routable across enterprises boundaries to an authoritative SIP proxy server. A URI points to zero or more URL addresses. Unlike URL addresses, URI addresses do not contain numerical IP addresses. URIs use only external public FQDN addresses and imply specific transport(s) and port number(s) that are be resolved with DNS SIP SRV (SeRVice) records or by having the transport and/or port numbers specified explicitly or implicitly, e.g., sip:bob@acme.com or sip:bob@acme.com:5060. The external FQDN address is resolved with a IPv4 DNS "A" or a IPv6 "AAAA" (Address) record lookup. A URI is considered a public address and may be shared with external entities. The most common example of a URI is the typical email address, e.g., bob@acme.com.  An AOR points to zero or more URL or URI addresses. An AOR does not specify an IP address, transport protocol or a port number, e.g., im:bob@acme.com to represent any instance message service protocol.   An AOR can be resolved into URI and URL addresses with a DNS NAPTR (Naming Authority Pointer) record lookup. For the previous AOR example, the opaque “im” (instant message) scheme can be resolved into one or more instant message schemes, e.g., “sip” for SIMPLE or “xmpp” for jabber.  Hence, after a DNS NAPTR lookup the im:bob@acme.com AOR may yield both the sip:bob@acme.com;method=MESSAGE and xmpp:bob@acme.com URI addresses.An AOR is essentially an account in a location database for an authoritative domain that may be used for multiple services (email, HTTP, SIP, instant messaging, etc.). For SIP, the account is almost always provisioned with the following: AOR id, account/user name, password (albeit sometimes blank) and a realm (the domain). Some administrators use the convention of making the AOR and the account name the same. The AOR is associated with a list of zero or more URL or URI addresses. The AOR is established either statically by the administrator or dynamically with one or more SIP user agents successfully completing REGISTER transactions with the domain’s SIP registration server. The AOR associations are stored in the location database. This enterprise location database is used by SIP proxy servers for routing and by SIP redirect servers for sending improved directions to requesting user agents for their final destination address. SIP proxy AOR content is very dynamic because of its dynamic registration capability. In contrast, public DNS AORs change very infrequently, on the order of months or years, often when HTTPS Web server page updates are made by the holder of the AOR and reflected into a DNS database. The most common example of a public AOR is the regular telephone number, referred to as an E.164 by the ITU (International Telecommunications Union). DNS NAPTR records are used by the ENUM (E.164 NUMbers) RFC 3761 [7] standard as the means to map E.164 telephone numbers such as those used in NAN (North American Number) scheme to routable IP addresses. In the US, the Department of Commerce's NTIA (National Telecommunication and Information Administration), the FCC (Federal Communications Commission) and the Department of State's International Communications and Information Policy expressed their support for ENUM Forum's (http://www.enumf.org) consideration to select at least one Tier 1 provider [8].  This will allow DNS tables to store E.164 AORs to translate the standard addressing mechanisms from the public telephone network to IP telephone endpoints. This same DNS AOR technology can be used to connect distributed M&S resources across enterprise firewalls,Unless completely public servers are used, URL information should be kept private within enterprises.  When external access is required, OPSEC is maximized when only URI and AOR addresses are used to access internal resources and a reverse ALG or reverse SBC services are provided to permit outside requests to be forwarded to a protected NAT firewall resource.  Before describing a new fourth addressing mechanism, more  of AOR is in order.  Often, neither an AOR nor URI map to a unique UA endpoint.  Consider an email account or regular telephone number:  any mail user agent can access email from a given email server account provided the client is configured properly with information about the email account, i.e., server name, protocol, username and password.  Also, multiple email clients on different computers can operate in tandem for the same email account.  Similarly, a VoIP AOR, the telephone number, can be associated with more than one device.  When there is more than one SIP UA associated with an AOR, an enterprise's domain SIP proxy server routing the requests can either sequentially ring each endpoint, or fork the call to ring all the endpoints at once.  The SIP forking proxy behavior establishes the session, the call, to the first VoIP endpoint, effectively lifting the handset off the hook.  The answering of the call by the first UA causes the forking proxy to send SIP CANCEL requests to the remaining user agents to stop them from ringing.There are situations (e.g., a blind call transfer, decentralized conferencing and presence) requiring a UA to construct and distribute a URI which can be used by anyone on the Internet, on an exchange or within an intranet to route a call to a specific UA and prevent any forking proxy behaviors from occurring. The GRUU (Globally Routable User Agent URI) [9] fulfills this need of providing an address with the specificity of a URL but the opaqueness of a URI to maximize OPSEC while also preventing SIP proxy server forking behaviors. The GRUU binds an AOR to an instance ID. This instance ID, often specified by a registering UA, is called a media feature tag and is actually a text URN (Uniform Resource Name). The AOR and URN is unique for each user agent; each pairing is associated with a single unique GRUU, often created by the SIP registrar. It is possible for a UA to have more than one GRUU address provided there is a URN for each AOR registered by the client, e.g., a secretary's telephone servicing multiple managers. Unfortunately, this fourth addressing mechanism requires extensions to SIP to incorporate the new behaviors not defined by the core RFC 3261 SIP specification into user agents, registrars and proxy servers.  The GRUU is a very useful addressing mechanism allowing very specific resource instances to be accessed across a NAT firewall with a specialized URI without revealing private network details.1.6 Classifying NAT Firewall TypesThere are two dominant IETF means for classifying NAT firewalls.  The first approach has reached RFC status within the IETF MIDCOM (Middle Box Communications) Workgroup, but it does not differentiate between firewall and NAT behaviors and is empirically incomplete [10].  The second approach being defined by the IETF BEHAVE (Behavior Engineering for Hindrance Avoidance) Workgroup explicitly delineates between NAT and firewall behaviors but is still in draft status [10].  The approach to classifying NAT firewalls in this paper is a hybrid of the two, based primarily on RFC 3489 [17]. It clearly identifies significant shortfalls RFC 3489 does not address, based on empirical evidence identified by BEHAVE Workgroup members.RFC 3489 is called STUN (Simple Traversal of UDP through NAT). STUN defines four NAT firewall types in order of least restrictive to most restrictive: full cone, restricted cone,  port  restricted cone and symmetric. Most large enterprises, either knowingly or unknowingly, have adopted the most restrictive symmetric NAT firewall to protect sensitive information. According to recent data from Jasomi, a SIP SBC vendor, about 6% of the UDP NAT devices on the Internet are symmetric NAT firewalls. According to IETF test findings the vast majority of the primary mode of home firewalls (e.g., DLink, Linksys, Netgear and SMC) are either full cone, restricted cone or port restricted cone NAT devices [11]. For the first three NAT firewall types, the NAT mappings established are independent of the external IP address of the remote endpoint. The symmetric NAT mapping is dependent on the external IP address of the remote endpoint. It is very interesting to note that most TCP NAT firewalls are symmetric while the same firewalls supporting UDP services do not support the same NAT type [12]. Also, NAT firewall types may vary for the same hardware depending on the version of firmware loaded or the configuration of the firewall. Finally, to complete the NAT firewall overview, a full cone NAT allows sessions to originate from outside the network while the last three NAT types do not, unless they have reverse proxy, ALG or SBC capabilities. Similarly, the full cone NAT is likely not to support stateful packet inspection while the last three do.A full cone NAT is also called a port forwarding NAT by the Linux community. In the full cone NAT, a static NAT mapping between an internal host IP address and port number is established between the NAT device's external address and external port. Similarly, a static binding without a session expiration timer is also established for the specific static NAT mapping. Any external IP address with any external source port can reach the same endpoint protected by the full cone NAT by sending packets to the same NAT external IP address and port number. A restricted NAT operates similarly to a full cone NAT but only accepts packets from the same destination IP address of the original outgoing request packet that established the dynamic NAT binding for the session. An external IP address and port pair is opened only when the internal host sends a packet to a specific destination IP address. Note that the firewall binding is IP address dependent, but the NAT mapping is IP address independent. Unlike port forwarding, bindings for this NAT type have expiration timers that are reset for outgoing traffic, incoming traffic or bidirectional traffic depending on the NAT firewall design.A port restricted NAT operates as a restricted NAT with the additional constraint that the returning packet must have the same returning port number that the egressing firewall request was originally sent from. Note that the firewall binding is IP address dependent but the NAT mapping is IP address independent. Bindings for this NAT type have expiration timers that are reset for outgoing traffic, incoming traffic or bidirectional traffic depending on the NAT firewall design.A symmetric NAT has a NAT mapping that is a function of the external address of the endpoint.  In the case of the symmetric NAT, unlike the previous three NAT types, several internal hosts can share the same external address and port when communicating to different remote hosts.  There exists a specific NAT mapping of an internal IP address and port to the public IP address and port that is dependent on the public destination IP address. There are really two flavors of symmetric NAT devices: loose symmetric and strict symmetric.  The binding of the loose symmetric NAT depends on the external address. The strict symmetric NAT depends on the external address plus the port.  Bindings for the symmetric NAT have expiration timers that are reset for outgoing traffic, incoming traffic or bidirectional traffic depending on the NAT firewall design.Identifying NAT firewall types is more complicated than merely pigeonholing what appear to be static and deterministic firewall behaviors. There are other important observed NAT firewall behaviors that are not defined by the four or five NAT types defined above.  The first additional behavior is the hairpin. A NAT supporting a hairpin allows two endpoints on the internal side of the NAT that know only each other's external IP address and port to communicate. Direct communication between points internal to the same enterprise is obviously desirable but not all NAT devices support hairpins for the signaling and media channels for VoIP P2P applications.  A second additional behavior is port preservation. Some NAT devices preserve the source port NAT number on both the internal and external NAT interfaces to match the port number of the internal requesting device when assigning a mapping to an external IP address and port. This behavior is not desired because it produces non-causal firewall behavior. When two or more endpoints protected by a NAT device with port preservation behaviors try to use the same internal port number, the NAT device can operate in one of two ways.  It may select a different port number for the second device and performs NAPT (Network Address and Port Translation) or it may permit the second endpoint to trump usage of the NAT port previously allocated to the first or earlier device [11,12]. Because the NAT firewall may exhibit different RFC 3489 behaviors for different devices requesting use of the same port , the firewall is deemed nondeterministic in the sense that a NAT probe with a single IP address can not properly classify the firewall behavior.  Test documented by Cullen Jennings indicate that many consumer NAT firewalls first exhibited port restricted behaviors, then symmetric behaviors, when port preservation behaviors exist [11]. It appears that full cone NAT firewalls with static bindings and strict symmetric NAT firewalls do not exhibit port preservation behaviors. In summary, port preservation tends to create nondeterministic NAT firewall secondary and tertiary behaviors.1.7 Signaling Protocols and NAT TraversalSignaling protocol applications for VoIP and streaming video applications built from open standards-based technology (e.g., SIP, H.323, MEGACO and RTSP and the media channels controlled by those protocols) have a difficult time functioning in a network environment with a single NAT device. This scenario is common to broadband VoIP service providers providing telephone gateway services to residential clients, real-time B2C (business-to-consumer). VoIP signaling protocols and the associated media channels have an extremely difficult time operating in an environment when two or more legacy NAT devices separate two parties in different enterprises who wish to communicate with each other when both enterprises are protected by NAT firewalls.  This scenario will become very common for exchanges supporting real-time B2B (business-to-business) communication applications. Many of the NAT firewall traversal problems faced by these newer signaling protocols are common to those previously experienced by active mode FTP clients protected by NAT firewalls.  Since NAT firewall categorizations are not fully matured, NAT firewall types can not be completely standardized.  Thus, the application developer can not even begin to explicitly query NAT firewalls as to their type. This means the signaling protocol application developer will either: 1) make assumptions about the network, 2) accept the worst possible symmetric NAT case for all communication or 3) provide a means to probe the network to discover the NAT firewall topology to efficiently establish a real-time communication pathway for a given signaling protocol.  Most service providers can not make assumptions about their network.  It is a waste of resources for service providers to support all NAT firewalls with common comprehensive symmetric NAT firewall traversal processes when only 6% of the Internet is using symmetric NAT devices.  Because of economics and differing firewall objectives for different customer markets, a one size fits all signaling protocol traversal is currently not achievable.  Currently, there are a number of approaches to solve this problem, with each approach having its own disadvantages and advantages.One market desires solutions with the end user being in control of the NAT firewall traversal process at the endpoint itself (e.g., residential telecom).  NAT probe and detection protocols are used to discover the local NAT type.  This “modify the client” approach [5] by adding more complex behaviors to the client was cleverly named UNSAFe (Unilateral Self Address Fixing) and is documented in RFC 3424[13].  General Notes about NAT Detection Protocols for SIPCan work with cascaded NAT devicesTend to be application protocol neutralDoes not work with SIP when there is an internal SIP proxy server that the client is configured to useAdditional client behaviors are required and additional servers must be deployedThe SIP client must adjust the SDP  IP address and port numbers to those of the external interface of the NATWhen only one endpoint is behind NAT firewalls no signaling or media relays are required for outgoing calls The protected UA must initiate the media channel stream firstSymmetric RTP/media is used to solve the application channel firewall traversal problem, but SIP early media can not be received [14]For restricted cone, port restricted cone and symmetric NAT firewalls signaling relays are required to initiate calls from the outside SIP user agents and the external SIP proxy servers should support RFC 3581 [15] for the SIP proxy to act as the signaling relay for symmetric NAT firewalls.  The external registrar should support RFC 3581. Technically, RFC 3581 is a “modify the protocol” approach for NAT traversal. When both endpoints are behind NAT firewalls, a media relay is required:The signaling relay (often a SIP proxy server for SIP) should support RFC 3605 [16] to drive the media relay for the RTCP associated with the RTP in the media channel functions properly. The media relay is slaved to the signaling relay.  A client initiating a call behind a restricted cone, port restricted cone or symmetric NAT will not receive SIP early media if an active binding with the media relay did not already exist.IETF NAT Detection ProtocolsSTUN (Simple Traversal of UDP through NAT) [17]DisadvantagesAssumes NAT allows outgoing UDP trafficSuitable for home use but not enterprise useRequires a STUN server with two IP addresses on the public networkIf the STUN server built into an enterprise NAT firewall is associated with client’s that do not supporting STUN, there is a potential OPSEC security riskDoes not support inbound UDP packets to traverse symmetric NAT firewallsCan't determine if both endpoints are behind the same NATSTUN solutions do not support hairpins because hairpin packet loop-back is the responsibility of the NAT deviceAdvantagesNo packet relay neededWorks for all outbound  UDP NAT firewall typesCan determine when the client is not behind a firewall, behind a firewall without NAT behavior or a symmetric NAT firewall Advantages or DisadvantagesCan work for cascaded NAT firewalls provide none are symmetricIs able to determine NAT firewall binding time, but is unreliableTURN (Traversal Using Relay NAT) [18]DisadvantagesRequires packet relays for signaling and media channels Can't determine if both endpoints are behind the same NATTURN solutions do not support hairpins because hairpin packet loop-back is the responsibility of the NAT deviceHas complexity, latency, reliability, security, scalability problems AdvantagesWorks for symmetric NAT firewalls for both UDP and TCPCan also allocate ports for RTCP that is associated with RTPICE (Interactive Connectivity Establishment) [19]DisadvantagesRequires an SDP extension Requires the client to support a set of very complex behaviorsHairpins are not supportedAdvantagesWhen available, ICE makes use of STUN, TURN, RSIP and MIDCOM protocolsSIP endpoints are prevented from establishing sessions unless connectivity can be completely establishedChooses a minimum latency path for the media channelWorks with SIP, H.323 and RTSP, but is an overkill for RTSPA second market requires the enterprise firewall manager to be in control of the NAT firewall traversal process (e.g., enterprise operations). The “modify the NAT firewall” approach attempts to be as transparent as possible to endpoints without sacrificing OPSEC. The protocol in use creates NAT firewall mappings and bindings as necessary. This objective is frequently met by tightly integrating an ALG and NAT. The “modify the servers” approach may also be applied. This approach uses an SBC and was nicknamed the SINN (Server Involvement in NAT Navigation) by IETF members [5]. The use of ALG and SBC devices is recommended for clean slate, well-controlled networks such as a dedicated collaborative B2B exchange.Core SIP ALG and SBC Firewall ResponsibilitiesCheck the signaling ACL  rules and the packets for mal-intensionsRewrite the URLs within the headers (i.e., Via, From, Contact, Record Route, Route, and potentially the Call-ID fields) to URIs and change the IP address and ports with the SDP bodies to publicForward the signaling to the correct proxy or clientOpen media/application pinholes for the streams in the firewallSupport the call by passing or relaying the signaling and media data through the pinholesClose the pinholes once the call terminates or binding timers expireNear-end NAT Traversal allows VoIP traffic to cross a local legacy NAT firewall supplemented with the proper SIP behaviors or a new VoIP capable firewall completely replacing the legacy firewall. Numerous near-end SIP NAT traversal COTS solutions exists with Ingate being one notable solution.A forward and reverse firewall control proxy solves the local outgoing and incoming NAT traversal problemA forward and reverse ALG solves the local outgoing and incoming NAT traversal problemFar-end NAT Traversal allows VoIP traffic to cross remote legacy NAT firewalls by acting as a signaling relay or both a signaling and media relay. Numerous far-end NAT traversal COTS products currently exist. An SBC can be used to solve the far-end NAT traversal problem by placing the SBC in a DMZ for the SBC to mimic the behaviors of both signaling and media relaysA SIP ALG firewall control proxy server should support RFC 3581 for this SIP proxy to act as the signaling relay for symmetric NAT firewalls at the far endBecause solutions for the first two markets caused confusion for many VoIP architects, the IETF defined three profiles for SIP user agents [20]:Primary profile – must support STUN, TURN and RFC 3605Consumer profile – must supports STUN and RFC 3605Minimal profile – may support symmetric RTPA third market puts applications at either the client or server end in control of the NAT firewall traversal process (e.g., an emerging enterprise market that will be more cost effective and secure).  This places both the firewall manager and application developer in charge. One approach to is to “modify the NAT and the server;” MIDCOM uses this approach.   With MIDCOM, a common application-independent NAT control protocol is used by different application proxy server types to create and destroy firewall bindings.   The application firewall control proxy server(s) then modifies the packets as regular ALG devices would.  This abstraction disaggregates the ALG, leading to greater scalability, and minimizes the need for developing a greater body of software for each ALG protocol.  MIDCOM is a long-term view that is a hybrid solution of an ALG and a SINN [5].  Unfortunately, the MIDCOM standardization process is a work in progress. A second approach is to “modify the NAT and the client.” There are a few protocols with similarities to MIDCOM but the client application must also be explicitly modified to communicate to a NAT middle box device: SOCKS and RSIP.   Unfortunately, both of these protocols are not widely enough accepted to make them ubiquitous.A third approach is to “modify the NAT, server and the client.” UPnP (Universal Plug and Play, see http://www.upnp.org/) took this approach.UPnP (Universal Plug and Play)DisadvantagesSecurity is problematicNot an enterprise solutionReally for a Microsoft environmentCurrently fails for cascaded NAT firewall devises thus tends to work about half the timeAdvantagesSupported by many home NAT vendors1.8 Integrating SIP into Classified PL-1 through PL-5 Information SystemsThe following discussion focuses on the use of SIP VoIP services within environments with PL (Protection Levels) security controls as specified by the policy documents controlling U.S. classified information, i.e., the NISPOM, JAFAN 6/3 and DCID 6/3.  As the need for real-time VoIP systems operating in environments with higher PL numbers grow, so will the need for the distributed M&S community to leverage the substantial investments that next generation NCO-W (Network Centric Operation – Warfare) programs are making for the warfighter. NAT firewalls provide adequate access controls to protect sensitive information but not classified data.  Only controlled interfaces can be used to access networks at two different levels of trust involving classified data.  Unclassified-to-classified connectivity effectively requires trusted EAL7 (Evaluation Assurance Level, ISO/IEC 15408) certified equipment plus accredited computing processes.  In the U.S., commercial TLS and IPsec encryption can be applied to protect the transfer of unclassified export controlled data sufficiently.  Similarly, only NSA Type I encryption is trusted for transferring classified information. SIP components such as hardphones are straightforward to integrate into a PL-1 environment that may become accredited for classified operation. Hardphones typically can not be sanitized; therefore, physical destruction is the only means for sanitization. The number and type of SIP services rendered in a PL-1 environment can be very encompassing. SIP hardphones should not be integrated into a PL-2 environment because todays wired COTS products typically do not authenticate users, since they are effectively configured to be logged on always by default. However, softphones do support user authentication either through an operating system session login or logging into the SIP application itself. Because of security concerns, the number and type of SIP VoIP services (e.g., call transfer, call forward,…) rendered in a PL-2 environment will be a subset of what could be rendered in a PL-1 environment.The author is unaware of any currently accredited SIP PL-3, PL-4 and PL-5 systems. This will not always be the case because the warfighter’s need for synchronous real-time collaboration when interfacing to real C4ISR systems.  Hence, it is important to identify approaches to achieving PL-3 or higher modes of operation. There is precedence for building a PL-3 controlled interface hub and spoke service architecture using HTTPS. Though more complex, a similar SIPS controlled interface appears to be possible based on the similarities between the SIPS and HTTPS protocols. Also, legacy PL-2 LANs could be integrated into a future PL-3 controlled interface hub and spoke arrangement with static NSA type I tunnels operating at the same classification level for different contracts, provided a SIPS hub and spoke controlled interface is built. PL-2 softphones, effectively operating in an aggregated PL-3 environment, will likely require a separate authentication mechanism apart from the OS authentication mechanism to reliably trust the authentication of end users. The services rendered by the softphone will also be a subset of what could be rendered in a PL-2 environment.The integration of SIP into PL-3, PL-4 and PL-5 controlled interfaces will be complex and this should lead to numerous future explorations. Hence, further discussions about PL-4 and PL-5 connectivity will be postponed to future papers. 2. ConclusionNAT firewalls break end-to-end encrypted connectivity by requiring the network to be smart. This is contrary to "the dumb network and the smart endpoint paradigm” that minimizes network dependencies.  One of the main reasons NAT devices exist is to mitigate the difficulty of designing and the cost of fielding secure operating systems with a set of trusted applications for endpoints within enterprises. Consequently, enterprises build protected networks, called "walled gardens," which are protected by expensive firewalls from external networks containing endpoints that share a common level of trust. These endpoints abide by common policies and share sufficiently similar network security processes.  Until secure and trusted operating systems and applications exist (every endpoint is in essence a trusted firewall or a controlled interface), true end-to-end connectivity is only an aspiration and NAT firewalls must remain in operation. It is also difficult to trust applications when the scope and responsibility of those applications are moving targets.  Applications can begin to be trusted only when their nature and scope can be constrained.  In a nutshell, this means the development of new software such as that which is of interest to the distributed M&S community with quick turnaround times should be designed in a PL-1 or PL-2 environment. Connectivity of newly developed software into a PL-3, PL-4 or PL-5 system will have to be accomplished through controlled interfaces with adequate ratings. The services rendered across these controlled interfaces will be severely restricted and thus limit the effective core services that can be offered in a MSL (Multiple Security Level) or MLS (Multi-Level Security) environment. With auditors checking compliance for the protection of sensitive information (e.g., intellectual property, export controlled data and contract information protection levels), application level security will remain a fact of life.  Session level security for some protocols has required the ALG to place more intelligence into the network. Similarly, application-level security is also requiring the SBC to place an even a greater level of intelligence into the network. Thus, when the IETF designs Web protocols, it should always do so by explicitly defining the behaviors of NAT firewalls as natural first class elements within a network instead of waiting for the IPv6 end-to-end connectivity aspiration. It is important to eliminate as much intelligence as possible from the network to minimize overall system complexity but laws, contract requirements and enterprise policies that must be enforced “today” are going to change very little to accommodate the truly dumb network. It is imperitiveimperative for any DoD service oriented architecture to adequately address NAT firewall traversal issues and government information assurance protection levels.  In this paper, SIP was examined for use in a B2B exchange that must support the protection of sensitive information (e.g., intellectual property, export controlled data). SIP was also examined for its suitability within classified PL-1 through PL-3 environments.  The author believes the use of SIP within PL-3 and PL-5 environments is inevitable due to anticipated warfighter C4ISR system needs.   Although SIP is not currently a total solution, it is a far better candidate as a core protocol than any other protocol that's been proposed to date to solve issues that inevitably arise in a collaborative exchange involving multiple governments, industry and academia. Finally, previous SISO papers about SIP technology provide strong evidence for SIP to become a mainstream open standards-based protocol for distributed M&S applications, potentially bridging the gap between DIS and HLA technologies with an existing Internet Standard that is heavily supported by the International Telecom Industry.3. References[1] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M. and Schooler, E., Network Working Group, Request for Comments: 3261, “SIP: Session Initiation Protocol,”  HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3261/" http://www.potaroo.net/ietf/idref/rfc3261/.  The Internet Society, June 2002.[2] L. Scott Holben, Robert W. Johnson and Margaret S. Herald, “Converging Software Architecture with Next Generation Distributed Technologies,” 04F-SIW-032, SISO, September 2004[3] Trevor Pearce, Scott Holben, Claude Van Ham, “Implementing Object Ownership Transfer Using SIP Services,” 05S-SIW-135, SISO, April 2005[4] Willis, D., IETF List Server for SIP: “[Sip] Back-to-Back User Agent Ttransparency Top 10 list”,  HYPERLINK "http://www.atm.tut.fi/list-archive/sip/msg06707.html" http://www.atm.tut.fi/list-archive/sip/msg06707.html. The Internet Society, December 2002[5] Rosenberg, J., Network Working Group, Internet Draft: “Considerations for Selection of Techniques for NAT Traversal,”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-iab-nat-traversal-considerations/" http://www.potaroo.net/ietf/idref/draft-iab-nat-traversal-considerations/ (Work In Progress). The Internet Society, February 2005.[6] Berners-Lee, T., Fielding, R., Masinter, L., Network Working Group, Request for Comments: 3986, “Uniform Resource Identifier (URI): Generic Syntax,” HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3986/"http://www.potaroo.net/ietf/idref/rfc3986/ The Internet Society, January 2005. [7] Faltstrom, P., Mealling, M., Network Working Group, Request for Comments: 3761, “The E.164 to Uniform Resource Identifiers (URI) Dynamic Delegation Discovery System (DDDS) Application (ENUM),”  HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3761/" http://www.potaroo.net/ietf/idref/rfc3761/ The Internet Society, April 2004.[8] Ensslin, C., de Silva, R., National Telecommunications & Information Administration: HYPERLINK "http://www.ntia.doc.gov/ntiahome/press/2003/enum_08132003.htm" http://www.ntia.doc.gov/ntiahome/press/2003/enum_08132003.htm. The US Department of Commerce News, August 2003[9] Rosenberg, J., SIP Internet Draft: “Obtaining and Using Globally Routable User Agent (UA) URIs (GRUU) in the Session Initiation Protocol (SIP),”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-ietf-sip-gruu/" http://www.potaroo.net/ietf/idref/draft-ietf-sip-gruu/ (Work In Progress). The Internet Society, February 2005.[10] Audet, F., Jennings, C., BEHAVE Internet Draft: “NAT/Firewall Behavioral Requirements”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-ietf-behave-nat-udp/" http://www.potaroo.net/ietf/idref/draft-ietf-behave-nat-udp/  (Work In Progress). The Internet Society, April 2005.[11] Jennings, C., MIDCOM Workgroup Internet Draft: “NAT Classification Results using STUN,”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-jennings-midcom-stun-results/" http://www.potaroo.net/ietf/idref/draft-jennings-midcom-stun-results/ (Work In Progress). The Internet Society, October 2004.[12] Huston, G., Volume 7, Number 3, “Anatomy: A Look Inside Network Address Translators,”  HYPERLINK "http://www.cisco.com/application/pdf/en/us/guest/about/about/c644/ccmigration_09186a008030319b.pdf" http://www.cisco.com/application/pdf/en/us/guest/about/about/c644/ccmigration_09186a008030319b.pdf. The Internet Protocol Journal, September 2004.[13] Daigle, L., Network Working Group, Request for Comments: 3424, “IAB Considerations for UNilateral Self-Address Fixing (UNSAF) Across Network Address Translation,” HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3424/"http://www.potaroo.net/ietf/idref/rfc3424/ The Internet Society, November 2002.[14] Wing, D. BEHAVE Working Group, Internet Draft: “A Definition of Symmetric RTP and Symmetric RTCP,”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-wing-behave-symmetric-rtprtcp/" http://www.potaroo.net/ietf/idref/draft-wing-behave-symmetric-rtprtcp/ (Work In Progress). The Internet Society, May 2005.[15] Rosenberg, J., Schulzrinne, H., Network Working Group, Request for Comments: 3581, “An Extension to the Session Initiation Protocol (SIP) for Symmetric Response Routing,”  HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3581/" http://www.potaroo.net/ietf/idref/rfc3581/. The Internet Society, August 2003. [16] Huitema, C., Network Working Group, Request for Comments: 3605, “Real Time Control Protocol (RTCP) attribute in Session Description Protocol (SDP),”  HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3605/" http://www.potaroo.net/ietf/idref/rfc3605/. The Internet Society, October 2003.[17] Rosenberg, J., Weinberger, J., Huitema, C., Mahy, R., Network Working Group, Request for Comments: 3489, “STUN - Simple Traversal of User Datagram Protocol (UDP) Through Network Address Translators (NATs),”  HYPERLINK "http://www.potaroo.net/ietf/idref/rfc3489/" http://www.potaroo.net/ietf/idref/rfc3489/. The Internet Society, March 2003.[18] Rosenberg, J., Mahy, R., Huitema, C., MIDCOM Working Group, Internet Draft: “Traversal UsingRelay NAT (TURN),”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-rosenberg-midcom-turn/" http://www.potaroo.net/ietf/idref/draft-rosenberg-midcom-turn/ (Work In Progress). The Internet Society, February 2005.[19] Rosenberg, J., MMUSIC Working Group, Internet Draft: “Interactive Connectivity Establishment (ICE): A Methodology for Network Address Translator (NAT) Traversal for Multimedia Session Establishment Protocols,”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-ietf-mmusic-ice/" http://www.potaroo.net/ietf/idref/draft-ietf-mmusic-ice/ (Work In Progress). The Internet Society, February 2005.[20] Boulton, C., Rosenberg, J., SIPPING Working Group, Internet Draft: “Best Current Practices for NAT Traversal for SIP”  HYPERLINK "http://www.potaroo.net/ietf/idref/draft-ietf-sipping-nat-scenarios/" http://www.potaroo.net/ietf/idref/draft-ietf-sipping-nat-scenarios/ (Work In Progress). The Internet Society, October 2004.[21] Orrblad, J., Master of Science Thesis: “Alternatives to MIKEY/SRTP to secure VoIP,”  HYPERLINK "http://www.minisip.org/publications/Thesis_Orrblad_050330.pdf" http://www.minisip.org/publications/Thesis_Orrblad_050330.pdf. Telecommunication System Laboratory KTH Microelectronics and Information Technology, March 2005.Author BiographiesL. SCOTT HOLBEN is a NCO-W Operations Research Analyst that is leading the Security Workgroup for the Air Force Materiel Command’s Integrated Collaborative Environment (AF-ICE).PAGE  PAGE  8