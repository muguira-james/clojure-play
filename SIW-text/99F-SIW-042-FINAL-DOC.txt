The STOW World Wide Terrain Data BaseDr. Dale D. MillerKent CaubleTimothy MillerAnnette JanettLockheed Martin Information SystemsAdvanced Simulation Center3605 132nd Ave. SE, Suite 400Bellevue, WA 98006ddmiller@lads.is.lmco.com,  HYPERLINK mailto:kcauble@lads.is.lmco.com kcauble@lads.is.lmco.com,  HYPERLINK mailto:tmiller@lads.is.lmco.com tmiller@lads.is.lmco.com, ajanett@lads.is.lmco.comDr. Dave McKeownTerraSim, Inc.4620 Henry Street, Third FloorPittsburgh, PA 15213 HYPERLINK mailto:dmm@terrasim.com dmm@terrasim.comGlenn GoodmanTRW/BDMUS Army Topographic Engineering Center 7701 Telegraph RoadAlexandria, VA  22315-3864ggoodman@tec.army.milKeywords:SE, SNE, Terrain, Environment, Data Base, InteroperabilityABSTRACT: The DARPA Synthetic Theater of War program has invested in the development of an infrastructure for the automated production of low resolution integrated terrain data bases anywhere in the world. This software infrastructure (described previously [SIW-99S-016]) maximizes the portion of the data base generation activity which can be common across the modeling and simulation domain. These data bases are being actively used by the STOW, JSIMS and JWARS programs. In this paper, the data bases themselves are described. Two types of data bases are produced: both utilize triangulated irregular networks (TIN) for the terrain surface, and the first type has only land, bathymetry and coastline features. The second type contains integrated roads, railroads, rivers, foreshore, built-up areas, sand dunes, cropland, snow fields, and other vegetation and physiographic features. The data bases are produced entirely within the geodetic coordinate system using a collection of commercial and government tools, including ARC/INFO, TerraTools®, S1000, and the SEDRIS Write API. Transformation to other coordinate systems (e.g., the STOW Global Coordinate System (GCS)) is performed as a post-process. The polygon attribute table (PAT) and its integration into the JointSAF CTDB are discussed. Timing and sizing data are given. Finally, the data model used to convert these data bases to SEDRIS Transmittal Format (STF) is described and the actual STF transmittals are characterized. These STF files are used for sharing the data sets with the JSIMS program.IntroductionThe recent hostilities in Kosovo have once again demonstrated the woeful inadequacy of processes for generating terrain data bases in new areas of the world. The US Army desired a Kosovo terrain data base for its Combined Arms Tactical Trainer (CCTT); six months and two million dollars later, the data base was completed just as the hostilities ended.Central to our goal of building terrain data bases better, faster, and cheaper, is the new paradigm promulgated by the National Imagery and Mapping Agency’s (NIMA) Geospatial Information Infrastructure (GII) Integrated Product Team (IPT). They envision the global production of medium resolution (analogous to 1:100,000 to 1:250,000 cartographic products), high accuracy feature and elevation data sets called Foundation Data (Feature Foundation Data (FFD), DTED Level 2, and other products). Then, in response to operational requirements, these data sets can be intensified with high resolution data sets, called Mission Specific Data Sets (MSDS). Key to the paradigm of intensification vs. replacement is the geometric and attribution accuracy of the FFD. Without this, inconsistencies would result when the medium and high resolution data sets are merged together.We envision a day in which the same paradigm will hold for 3-D integrated terrain data bases for modeling and simulation (M&S) applications. A medium density world-wide terrain data base should be developed which can be locally intensified with high density data as needed to meet emerging operational requirements. The data base must support a variety of simulation systems and the intensification process must be efficient and automated. Of course, the realization of this vision is dependent on the success of NIMA’s GII, for the FFD and MSDS products would serve as the source data for production of the global terrain data base and the locally intensified regions, respectively. Some preliminary experiments in the direct compilation of highly detailed NIMA MSDS data, leveraging feature attribution to automatically generate object model geometry and placement, was successfully demonstrated in conjunction with the STOW Advanced Concept Technology Demonstration (ACTD) in October, 1997 [1].As a first step in realizing this vision, the DARPA Synthetic Theater of WAR (STOW) program, in coorperation with the Joint Simulation System (JSIMS) and Joint Warfare System (JWARS), developed a process for the fully automated production of low resolution terrain data bases. In addition to the requirements for automation and wide-area production, a fundamental precept was that these data bases must be usable by a variety of simulation systems. In fact, the resulting World Wide Terrain Data Base (WWTDB) is currently being used by the STOW Joint Experiment J9901 (a real time virtual simulation), JSIMS Build 2 (an aggregate level simulation with optimistic time management), and JWARS (a constructive, analytical simulation).Birkel [2] described five problem areas and proposed solutions for the automated production of large area terrain data bases usable by any simulation system. This paper will review these problem areas and proposed solutions. However, our primary focus will be on the description of this WWTDB data set and the Geographic Information System (GIS) and 3-D geometry processing used to create it. Processes were developed for automated production of two styles for a large area terrain data base:An integrated terrain and bathymetric surface with simple attribution (terrain or bathymetry) and a coastline integrated into the Triangulated Irregular Network (TIN).A full-featured data base containing roads, railroads, rivers, foreshore, built-up areas, sand dunes, cropland, snow fields, and other vegetation and physiographic features, integrated polygonally into the TIN and represented as attributed semantic abstractions for synthetic forces (SF) reasoning.In both cases the abstract (2-D) feature geometry is represented using ShapeFiles, and the attribution is encoded both in the ShapeFiles and in a Polygon Attribute Table (PAT). Data base production units are megatiles of the Geotile Reference System (GTRS), which measure a nominal 15 X 15 degrees (larger at polar latitudes). Available formats include S1000 geodetic, S1000 Global Coordinate System (GCS), ShapeFile, SEDRIS Transmittal Format (STF), and the JointSAF and OpenScene ModStealth run time formats, CTDB and GDE, respectively.Problem Areas and Proposed SolutionsThe five problem areas and proposed solutions presented in [2] are summarized below.Staged Production. Terrain database generation requires the fusion of multiple data sources, each used at different stages of the production process and each of which is updated at different rates. An appropriate strategy is staged production, where intermediate repositories of relatively-permanent data are retained for re-use as a baseline for future, more timely updates.Geographic Tiling. The conjunction of requirements for large-area coverage, manageable database production processes, and frequent localized updates necessitates a world-wide decomposition of the earth’s extent into a standard collection of sub-units whose interactions along well-defined boundaries can be easily managed. These units, which we call geotiles, provide manageable quanta of production, distribution, and update. The Geotile Reference System (GTRS) is documented further in [2].Geodetic Spatial Reference Frames. Essentially all critical source data is spatially referenced using the geodetic coordinate system, whereas M&S applications use a wide variety of spatial reference frames (e.g., variants of Transverse Mercator). A strong case can be made that database generation and transmission to individual federates should occur in geodetics. This, however, raises some interesting interoperability and performance issues.Common Data Model. M&S applications currently use a wide variety of run-time “native” data models for representing terrain data. This multiplicity of native terrain data models hinders not only interoperability at run-time (e.g., via a shared FOM), but at pre-exercise initialization time as well. Whereas traditionally the terrain database generation process has been customized to the specific single-application native data model, such a strategy fails in the multi-federate case. We require a common data model that can be easily understood and expressed using standard syntax and semantics. The Synthetic Environment Data Representation and Interchange Specification (SEDRIS) project (see  HYPERLINK http://www.sedris.org http://www.sedris.org) has defined a Data Coding Standard which can be leveraged to achieve this goal [3].Avoiding Paging Units. M&S applications execute within limited physical memory environments; as a result most subdivide terrain databases into smaller physical units which can be moved between secondary memory (i.e., a file system) and primary memory (i.e., RAM) on demand. These paging units are typically on the order of the size of a file system block (4-16 Kbytes), and a typical database consists of tens of thousands to millions of these units. Current terrain representation strategies require that the terrain “skin” be cleanly sliced along the boundaries of these paging units. This potentially induces additional polygons that both increase database size and reduce performance. Traditional database generation solutions require that the integrated database explicitly include these paging unit boundaries into the generated terrain “skin”. This solution becomes unmanageable when multiple federates with inconsistent paging unit boundaries need to be accommodated by a single terrain database. Avoiding paging units is a key piece of the solution.Process FlowThe high level process flow for generation of a megatile WWTDB integrated data base is shown in Figure 1. In the upper left are shown global GIS repositories of vector feature data (VMAP0 and FAO Soils). These are imported into ARC/INFO, transformed to the JSIMS Terrain Common Data Model (TCDM) (see [4]), merged and deconflicted to produce a global fused data set in the JSIMS TCDM. From these, features for integration into the TIN are derived and stored in the ShapeFile format. At the lower left are global repositories containing a DEM integrated from terrestrial and bathymetric source and deconflicted from the VMAP0 coastline, as well as the 3-D profiles of the geotile boundaries, used to ensure continuity of the TIN across geotile boundaries. The TerraTools® geometry engine transforms the DEM and feature data into a TIN with integrated features. TerraTools uses the S1000 Write API to generate an S1000 format data base in a geodetic frame of reference. This data base, together with the ShapeFile feature data, is suitable for transmittal to applications operating in geodetics. Alternatively, the S1000 data base may be converted to SEDRIS Transmittal Format (STF) before interchange. This is the form being used for transmittal to JSIMS.For the STOW federates, a separate application then transforms this geodetic data base to the Global Coordinate System (GCS) and clips to tiling units of the local GCS system. This application generates a second S1000 data base. The legacy JointSAF and OpenScene ModStealth compilers then reformat this data into Compact Terrain Data Base (CTDB) and Graphics Data Engine (GDE) run time formats.With the exception of the generation of the global repositories of GIS data, all processes are fully automated and controlled by scripts.Source Data Used for WWTDBA variety of low resolution source data, each of global extents, are used to generate a WWTDB data set. Each is described below.GTOPO30GTOPO30 (Figure 2) is a USGS digital elevation model (DEM) derived from DTED and a variety of other sources for the world’s land masses. It is sampled at a 30 arc second spacing and contains void data for the ocean areas.Figure  SEQ Figure \* ARABIC 2: GTOPO30ETOPO5ETOPO5 (Figure 3) is a 5 minute regular geodetic DEM Bathymetry of the earth’s surface (terrain and bathymetry) compiled by the National Geophysical Data Center (NGDC). Bathymetric data was derived from the Digital Figure  SEQ Figure \* ARABIC 3:  ETOPO5Bathymetric Data Base – 5 (DBDB5) compiled by the U.S. Naval Oceanographic Office.VMAP Level 0VMAP0 is a NIMA product digitized from 1:1,000,000 scale Operational Navigational Charts (ONC) (Figure 4). It includes major roads and rails, hydrological systems, utility networks, airports, elevation, coastlines, international boundaries, populated places, and a variety of other features.Figure  SEQ Figure \* ARABIC 4: ONC, the cartographic source for VMAP0FAO SoilsFAO Soils (Figure 5) were developed by the United Nations Food and Agriculture Organization from from 1:5M cartographic source from the American Geographic Society. The product contains 133 soil units, based on the Universal Soil Taxonomy System. It has been processed by the US Army Waterways Experiment Station (WES) to Figure  SEQ Figure \* ARABIC 5: FAO Soilsassign a Unified Soils Classification System (USCS) soil type (STP) attribute.GLCCDBThe Global Land Cover Characteristics Data Base (Figure 6) was developed by the US Geological Survey (USGS) Earth Resource Observation System (EROS) Data Center, the University of Nebraska at Lincoln, and the Joint Research Centre of the European Commission from 1 Km. Advanced Very High Resolution Radiometer (AVHRR). It includes multiple ecosystem classifications including Olsen’s Global Ecosystems [5].Figure  SEQ Figure \* ARABIC 6: Global Land Cover Characteristics Data BaseData Fusion in the GIS and Tranformation to the JSIMS Terrain Common Data ModelDEM Data FusionA 30 arc second DEM of the earth was synthesized from GTOPO30 and ETOPO5. Since consistency of the DEM with the coastline feature is necessary to ensure a reasonable shoreline region in the TIN, a deconfliction step was required. First, the ETOPO5 was resampled to a consistent 30 arc second grid. Then, from VMAP0, an ocean areal feature and a terrain areal feature were derived (which together form a complete cover of the earth). These features were used as masks to combine the two data sources into a single DEM. To ensure a reasonable slope of the terrain in the foreshore and backshore regions, the DEM was clamped to a maximum elevation of –10 m. in the ocean regions, and a minimum elevation of +10 m. on the terrain (while these values may seem extreme, the resulting terrain slope is still small because of the large sampling interval in the DEM).Feature Data FusionNo attempt was made to deconflict the thematic layers of VMAP0. Since these are derived from a common cartographic source, inconsistencies such as roads passing through ocean regions are relatively rare.GLCC, WES STP and FAO FusionThe raster USGS GLCC and WES STP data sets were incorporated into the FAO Soils 1:5,000,000-scale areal features through a raster clumping process. This process applies the predominate Olsen’s Ecosystem Code and WES USCS STP raster cell types to the appropriate FAO soils areal feature mapping unit.Assigning Geodetic Widths to Roads and RiversFeatures such as roads and linear rivers are represented as linear features in the GIS but must be expanded to their actual width in the 3-D geometry (according to either a width attribute in the source data or a default value). This was problematic, because the TerraTools ITIN software natively operates in geodetic coordinates without requiring transformation to a Cartesian system. However, a linear feature of constant Euclidian width has significantly varying geodetic widths as a function of latitude and azimuth. The GIS system was used to calculate these geodetic widths on a segment by segment bases, as shown in Figure 7.Figure  SEQ Figure \* ARABIC 7: To achieve a uniform Euclidian width of linear features, geodetic width is precomputed on a per-segment basis as a function of latitude and azimuth.Generation of Surface ArealsKey to the JSIMS TCDM is the notion of a complete, non-overlapping coverage of areal features (a combination of soils and land cover), each attributed with a trafficability index to be used for mobility modeling (see Figure 8). For WWTDB, there were two principal sources of these areal features: VMAP0 and the fused GLCC, WES STP, and FAO Soils. Only the latter provides a complete cover of the earth; VMAP0 contains void regions corresponding to the “white areas on the map”. However, VMAP0 areal features, when present, are more accurate and have higher resolution than the complete cover of GLCC et al. Thus the VMAP0 features were given priority, and the GLCC / WES / STP / FAO was used to fill in the void regions.Figure  SEQ Figure \* ARABIC 8: Surface Areals coverage of the 21 X 20 degree terrain data base used by JWARSBased upon the feature type and attribute values (particularly the values of Soil Type, Bottom Material Composition, Vegetation Characteristics), three Surface Trafficability Group values were assigned: STGJ (JSIMS), STGS (SIMNET), and STGC (CCTT).Organization and OutputThe feature data was organized into the coverages defined by the JSIMS TCDM. They were then written to ShapeFiles for interchange with other applications.Generation of the 3-D Geometry with Integrated FeaturesConstruction of a geodetic, integrated TINThe generation of integrated geometry for the WWTDB was handled by TerraTools, TerraSim's geospatial simulation database construction system. TerraTools is a self-contained database generation and visualization toolset, with extensive cartographic source data import and database format export support, including the ability to interoperate with S1000. It provides a comprehensive set of integrated terrain generation tools, coupled with rapid, automated, and high-fidelity database construction algorithms. Figure 9 provides a block diagram overview of the TerraTools system.Figure  SEQ Figure \* ARABIC 9: TerraTools® block diagramTerraTools supports a wide variety of geospatial simulation tasks, including A&E site planning, visualization for training and simulation, and sensor modeling and evaluation. To support these disparate tasks, TerraTools is based on a general project flow graph model; users represent a database construction project as a series of processing nodes, using connections between nodes to create processing chains. Instead of manipulating geometry manually to produce an integrated terrain skin, a TerraTools user works with nodes in the project flow graph, performing a variety of geometric operations automatically, preserving topology and maintaining fidelity to the source data.Batch mode processing allows the TerraTools database generation engine to be driven from a Tcl script. This mode complements the TerraTools GUI, allowing users to generate processing templates with the GUI and apply them with batch mode in automated fashion. For large database projects such as the WWTDB, a prototype project representing the canonical set of processing to be performed on each geotile is designed in the GUI and then applied repeatedly in batch mode on multiple database tiles. The prototype project graph for the WWTDB is depicted in Figure 10; the remainder of this section discusses this project graph, its application to the WWTDB, and issues in exporting to S1000.In this project, feature data (surface areals, geotile edges, coastlines, rivers, roads, and railroads) is imported into TerraTools from ArcView ShapeFile format. The DEM is imported from an ARC/INFO GRIDASCII file. Using Add Elevations and Set Elevations nodes, every imported ShapeFile obtains its elevation data from the DEM, with two exceptions. The first exception is the geotile boundary Figure  SEQ Figure \* ARABIC 10: TerraTools project graph for WWTDBfile, which contains its own explicit elevations. This file defines the elevation profile along the edges of the geotile: a match between geotiles is ensured by simply supplying matching geotile boundary files. The other exception is the coastline: imported 2D data defaults to a elevation of zero in TerraTools, which is the desired elevation for the coastline.The geometry to be integrated into the TIN goes through a processing path specific to its type and is assembled by the Combine Features node at the top center of the flow graph. The coastline needs no further processing, so it goes directly into the Combine Features node. For the other linear feature data, we first set their elevations from the DEM and conform them to the DEM, and then apply a script which sets the feature name and width for the polygonized feature: the feature name is the S1000 PAT Identifer (PAT ID), and the width is set from the appropriate SEDRIS Attribute Code (SAC) in the ShapeFile.Next, each feature type is polygonized, using the wide variety of feature model generation tools available in TerraTools. Rivers and streams use a simple low polygon count model; roads use a more complex model which ensures trafficability and produces a modified road network for use in compiling a CTDB database; railroads use the same model as roads, with the exception that a modified road network is not produced because the railroads won't be driven. Surface areals are used in two ways: first, their boundaries are extracted, conformed to the DEM, and combined with the other features to be integrated; second, the polygons are given attributes so that they can be used later to mark triangles in the TIN with the surface material's PAT ID.All of these features are deconflicted in the Combine Features node. The order in which input nodes are attached to this node defines the priority of each feature type. Intersecting the features while deconflicting them can result in occasional very small geometry, so we pass the features through a Snap Features node which collapses short edges, eliminating many potential sliver polygons. Next, the features are clipped against the geotile minimum bounding rectangle (MBR) (polygonizing linear features may cause them to extend outside the MBR). Cell edge data is combined as a last step to ensure that the cell edge elevations are dominant, and it is exempted from the Snap Features processing due to the potential for a mismatch along a geotile boundary.The features are now integrated into a TIN which simply consists of 4 vertices at the corners of the minimum bounding rectangle of the database. The Create Simple ITIN node adds additional points to fill out the budget for the geotile. Surface areals are then used to mark triangles in the TIN which are not part of an integrated feature with the appropriate PAT ID. The TIN is converted into a Tiled Scene Graph (TSG), the native TerraTools database paging/visualization format. Finally, the TSG is exported to an S1000 assembly, with S1000 attributes mapped from a TerraSim Appearance (TSA) file using the polygon feature names, which are PAT IDs. The output consists of this Assembly and a ShapeFile containing the modified road centerlines.This project was then applied to every geotile automatically, using the batch mode facilities of TerraTools. To export this data to S1000, TerraTools employed the S1000 Write API, a convenient alternative to an older method of exporting to S1000 which involved the production of numerous and voluminous ASCII files.S1000 Write APIS1000 has traditionally been an interactive data base generation system (DBGS), requiring significant user interaction for editing features and the terrain surface. For full automation of the terrain database generation process, such an interactive tool becomes unnecessary. However, because the S1000 formats are mature (holding both geometric and feature data) with a mature API for data extraction, and because both JointSAF and ModStealth compilers natively consume S1000 data, the S1000 format was retained for this project. While a “read” API has existed for a number of years for an application program to access S1000 data, there has been no “write” API for an application program to create an S1000 data base (called an S1000 Assembly). Such a “write” API was developed to support the active creation and population of an S1000 assembly by other applications such as TerraTools. For the WWTDB, each megatile (comprised of 225 geotiles) becomes its own S1000 Assembly. The S1000 API supports population of a megatile Assembly through multiple executions of the TerraTools application; with each execution a geotile is populated.Also, certain functionality of S1000 as a DBGS was required, such as importing road and river networks and attributing polygons. S1000 was converted to run in batch mode to support the fully automated execution of these capabilities.The resulting geodetic S1000 data base may be shared directly with others via its API or may be converted to SEDRIS Transmittal Format (STF) before interchange.Application Specific Transformation to GCS and ClippingAnother application, informally known as the “Clipper”, accesses the geodetic S1000 data base, transforms it to GCS, clips to the tiling unit boundaries used by the STOW GCS applications (8 km squares), and creates an S1000 data base in GCS. This data base is used as the source for the JointSAF and OpenScene ModStealth compilers. This Clipper application is sufficiently general to support other tiling unit sizes or other coordinate systems (e.g., it can clip to geodetic paging units and write out the resultant geodetic data base).Seaming into Other Terrain Data BasesIn general, different terrain data bases cannot be combined to form a data base of their combined extents without regeneration of the terrain geometry at least along the lines of abutment to ensure terrain surface continuity at this boundary. JSIMS terrain data bases, for example, are assembled by combining medium resolution geotiles developed by the WARSIM program with low resolution geotiles developed by WWTDB. This was accomplished by regeneration of the terrain surface for WWTDB geotiles on the boundary of the WARSIM data base using the 3-D geotile boundaries from WARSIM, thus ensuring terrain surface (but not feature) continuity. Figure 11 shows the WWTDB contribution to the JSIMS Build 2 data base; the central region shown in white represents the WARSIM medium resolution region (not shown).Figure  SEQ Figure \* ARABIC 11: WWTDB portion of the JSIMS Build 2 terrain data baseCompilation to JointSAF and OpenScene ModStealthCompilers as well as the STOW SF and visualization systems were extended to become GTRS aware. Figure 12 shows the JointSAF Plan View Display, and Figure 13 shows a view from the OpenScene ModStealth at an altitude of 5 km. and a viewing range of 100 km.Figure  SEQ Figure \* ARABIC 12: JointSAF Plan View Display of the 21 X 20 degree terrain data base produced for JWARSFigure  SEQ Figure \* ARABIC 13: Out-the-window view using OpenScene ModStealthTiming and StatisticsTable 1 show the computation time (running on a 2 processor Silicon Graphics Infinite Reality) and size in K bytes for an average full featured geotile. Table 1: Sizing and timing for producing a geotile with featuresConversion from S1000 to SEDRISS1000 Read APIThe S1000 Read API provides a generic mechanism to obtain a handle to a data type, and then obtain each individual data element using a get_next function. We use the S1000 Read API to access the WWTDB data. A few of the S1000 API functions used to retrieve polygon data are shown in Figure 14.SEDRISSynthetic Environment Data Representation & Interchange Specification (SEDRIS) was created to facilitate the transmission and reuse of environmental data among heterogeneous systems through a standard data representation model and interchange mechanism.Discussions of SEDRIS encompass many papers and we will not attempt to provide details here. Detailed information can be found on the SEDRIS web site at http://www.sedris.org. We will refer the interested reader to several published papers on SEDRIS, starting with technical details described by Horan [6]. Until recently SEDRIS had not defined a file format. Instead, data producers created applications that used the data producer's API to access data, and then present the data to a consumer using the SEDRIS API. The conversion of the data was performed in memory. These applications are known as SEDRIS native-read implementations.The recently defined SEDRIS Transmittal Format (STF) is a standard file format providing a platform independent means for interchanging SEDRIS transmittals, Carswell [7]. More recent still is the SEDRIS Write API (currently in beta test). The Write API allows data producers directly to write data into STF. Data consumer applications are guaranteed that they may read from an STF using the SEDRIS Level 0 Read API.Creation of an STF can be performed using either a data producer's native-read implementation with a complex in-memory conversion, or the SEDRIS Write API (Beta Release). Our STF generation application used the SEDRIS Write API to produce STF.Data RepresentationDefinition of a data representation mapping from the source format to SEDRIS is essential for producing any SEDRIS based application. The SEDRIS Data Representation Model (SDRM) focuses on relationships between the varied types of data found in the Synthetic Environment. In addition to the data representation model, SEDRIS also provides methods to identify the things found in the physical environment. The SEDRIS Data Coding Standard (SDCS) as described by Birkel [3] provides the mechanism by which we can specify the things a data representation model represents.First we defined the data representation as found in the currently released SEDRIS S1000 native-read implementation. This data model served as a baseline. The single most important change was incorporation of the geodetic coordinate system, and as part of this, support for very large data sets. The data model mapping was developed to support terrain databases with or without paging units since the WWTDB database is not stored with paging units. For the WWTDB the smallest geometrically divided unit in which we could group data was a geotile (from 1x1 degree to 1x30 degree in size). The SEDRIS Aggregate Geometry Subclass called Perimeter Related Geometry provided the geometric grouping within geotiles.The WWTDB incorporated a well defined process by which things are defined. Attribution of things in the data set followed the SDCS. Within the geotile, we decided to take advantage of the rich classification of things and group the polygon data depending on polygon classification. Thus, in this data representation model, the Classification Related Geometry is key.The resulting high-level data model mapped to SEDRIS for WWTDB is shown in Figure 15. (This diagram is a modified Rumbaugh Object Model Template (OMT) notation described within SEDRIS reference documentation.)Figure 15: Data Model RepresentationImplementationSEDRIS Data Model Version 2.0 was used for the implementation. Software development was based on SEDRIS Internal Release 2.00.2 and the corresponding Beta release of the SEDRIS Write API. The S1000 Read API version 6.5 was used to access WWTDB.Within the Data Model Representation described above, note the Perimeter Related Geometry organization, and the use of Geometry Classification Data. Spatial organization of the data was handled via the Perimeter Related Geometry. The polygonal data were grouped based on SEDRIS Classification Codes (SCC). For example, all tree polygons were grouped within a Classification Related Geometry.Mapping between S1000 API functionality and SEDRIS had to be performed at the polygon level; Table 2 shows some of the details associated with polyon mapping. SEDRIS requires Polygon and Vertex objects to represent polygonal data. Further, components are added to either the Polygon or Vertex to provide the necessary attribute data. The table indicates for each polygon type the S1000 API call used to retrieve the polygon data, and the SEDRIS objects required to represent the polygon data.Table 2: Polygon Mapping PolygonDescriptionS1000 API CallSEDRIS Component to PolygonSEDRIS Component to VertexTexturedget poly texture uv()Image Mapping FunctionTexture CoordinatesVertex Coloredget poly vtx colors()NAInline Color (Primitive Color (Ambient Color (RGB Color), Diffuse Color (RGB Color)), Translucency)Face Shadedget poly face normal()Reference VectorNACurve Shadedget poly vtx normals()Rendering PropertyReference VectorBackface Enabledattribute: show backfaceRendering PropertyNAValue Shadedattribute: value shadedRendering PropertyNAFace Coloredattribute: face coloredInline Color (Primitive Color (Ambient Color (RGB Color), Diffuse Color (RGB Color)), Translucency)NAPriorityattribute: prior typeRendering PriorityNAThe implementation traversed S1000 data using the S1000 API, converted data into the required SEDRIS objects and using the Beta SEDRIS Write-API, the STF was written.The actual process is simple. However, one should also consider some of the drawbacks, including: lack of a Level 1 Write API (all data must be coded for every object); bloat in data size (8X or more) over original source data; lack of facilities for very large database creation consisting of multiple STFs (to be added in the next SEDRIS release).In fact, during STF generation, it was suggested we sub-divide into smaller STF files, and the software was modified to output geotile STFs. Each WWTDB megatile may be represented by up to 225 geotile STF files.Future WorkSome enhancements to the process are being made immediately to reduce slivers in the TIN and anomalies at the coastline. A global repository of fused vector and raster data later will be produced later this year using the WARSIM Terrain Data Fusion System (TDFS) with suitable extensions. Some of the next major steps in this evolution include:Extension of the system to incorporate all VMAP0 features currently in the JSIMS TCDMInference bridge and overpass instances from appropriate intersections among transportation and hydrography features.Use the Synthetic Environment Evaluation and Inspection Tool from (SEE-IT) from the Institute for Defense Analyses [8] for validation and verification of the internal data base consistency.Extension of the process to medium scale VMAP1 feature source and DTED elevation data. Because of the higher resolution of these sources, the problem of polygon proliferation by clipping to tiling units as a postprocess must be addressed.Extension of the process to utilize FFD and MSDS to realize this vision of a global framework of integrated M&S terrain data bases with intensification on demand, thereby “solving the data base problem”.AcknowledgmentsThe authors thank Rae Dehncke, DARPA program manager for his vision and support, and Nancy Gardner, Contracting Officer’s Representative at the US Army Topographic Engineering Center. Special thanks go to Paul Birkel of the MITRE Corporation, for his far-ranging vision as well as diligence and hard work well beyond the call of duty. Finally, we thank the WARSIM program for their support of the “seaming” development and the JSIMS and JWARS programs for their open-mindedness to use data sets produced by others.References[1]	D. McKeown, et al., "The Az Zubayr Experiment: From Framework Data to Synthetic Environment" Proc. Simulation Interoperability Workshop, Paper 98S-SIW-222, March, 1998. [2]	P. Birkel et al., "Pushing the Envelope Toward a Common Process for the Generation of Terrain Data Bases across Federations", Proc. Simulation Interoperability Workshop, Paper 99S-SIW-016, March, 1999.[3]	P. Birkel, "SEDRIS Data Coding Standard (SDCS)", Proc. Simulation Interoperability Workshop, Paper 99S-SIW-011, March, 1999.[4]	P. Birkel et al., "The Terrain Common Data Model (TCDM): A Joint Effort of JSIMS, STOW, and JWARS", Proc. 8th Computer Generated Forces and Behavioral Representation, Paper 8TH-CGF-004, May, 1999.[5]	J. S. Olson, "Global ecosystem framework-definitions", USGS EROS Data Center Internal Report, Sioux Falls, SD, 37 p., 1994.[6]	B. Horan et al., "SEDRIS Past, Present, and Future – Technically Speaking", Proc. Simulation Interoperability Workshop, Paper 99S-SIW-057, March, 1999.[7]	J. Carswell et al., "The SEDRIS Transmittal Format", Proc. Simulation Interoperability Workshop, Paper 99S-SIW-058, March, 1999.[8]	 R. Richbourg, "Automating Error Detection and Correction in Synthetic Environments”, Proc. Simulation Interoperability Workshop, Paper 98F-SIW-087, Sept. 1998.Author BiographiesDR. DALE D. MILLER is the manager of Advanced Technology Development for the Advanced Simulation Center group of Lockheed Martin Information Systems. He currently leads the projects Dynamic Terrain and Objects in a Virtual World and the Terrain Database Generation & Technology for Synthetic Environments both sponsored by DARPA and USATEC. Additionally, Dr. Miller is managing the terrain database and terrain data fusion development for the WARSIM Program. Dr. Miller received his Ph.D. in Mathematics from the University of Washington in 1976. Since then he has contributed to the areas of DIS and its successor, HLA, real-time computer graphics, computer image generator design, adaptive filtering, image processing, feature extraction, machine vision, and optical character recognition.TIMOTHY MILLER is a geologist and GIS developer with Lockheed Martin Information Systems Advanced Simulation Center. He led the GIS activities for the STOW Worldwide Terrain Data Base (WWTDB) and currently leads the GIS software development for the JSIMS Terrain Data Fusion System. In TDB construction, he has been involved with the synthesis of available digital data sources and developing new data sets for accurate representation of real world phenomena. He was also the key developer in techniques for data transfer in and out of S1000 through S1000 API tools, ARC/INFO AMLs, and the S1000 Polygon Attribute Table (PAT). Tim currently works as a full time employee of Lockheed Martin remotely from his home in Montana.KENT S. CAUBLE is a senior systems engineer at Lockheed Martin Information Systems Advanced Simulation Center. He led the development of the automated production processes for the WWTDB and compiled the STOW runtime databases. Previously, he led the production activities for the STOW Southwest Asia terrain data base. Prior to his involvement in data base generation technologies, Mr. Cauble was an image generator systems engineer responsible for developing new features, systems, and support systems as well as performing image generator system configuration analysis and integration planning.Annette Janett is a senior software engineer with Lockheed Martin Information Systems Advanced Simulation Center. She previously led in the development of the OpenScene visual system, the STOW Dynamic Terrain and Objects, and Dynamic Virtual Worlds programs, and STOW SE integration with virtual simulation. Ms. Janett provided the expertise and development experience necessary to create the S1000 to SEDRIS Transmittal tools for WWTDB.DR. DAVE McKEOWN is president of TerraSim, Inc. TerraSim was founded in 1996 by four members of the Digital Mapping Laboratory at Carnegie Mellon University, Pittsburgh, PA. The founders have a combined 60 years of professional experience in advanced research and development in automation for cartographic feature extraction, photogrammetry, remote sensing, and simulation database construction. TerraSim's geospatial data visualization product, TerraTools(R), provides rapid database construction, refinement, and validation, with fully integrated cartographic features. Using integrated TIN technology (ITIN) for surface representation, TerraTools is capable of producing highly efficient 3-D bathymetric, terrain, and urban environment visualizations from a variety standard cartographic source data. TerraTools has been used to generate a number of exercise databases including Camp LeJeune (JCOS), Az Zubayr (STOW), as well as several detailed urban/MOUT databases, Schenley Park and Ft. Benning, for the DARPA Video Surveillance and Monitoring (VSAM) program. ShapeFiles are an open format for the encoding and exchange of 2-D and 3-D vector data, developed by ESRI. The US Army’s Warfighter Simulation (WARSIM) component of JSIMS developed a ShapeFile to STF converter to aid the interchange of this feature data.Figure 14: S1000 API Functions EMBED Visio.Drawing.5   EMBED Word.Document.8 \s Figure  SEQ Figure \* ARABIC 1: Process flow for the production of a full-featured WWTDB data set EMBED Word.Picture.8   s1k_get_next_db_poly  s1k_get_poly_attr  s1k_get_poly_face_normal  s1k_get_poly_texture_uv  s1k_get_poly_vtx_colors  s1k_get_poly_vtx_normals  s1k_init_poly_handle 