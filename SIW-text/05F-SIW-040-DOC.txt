The Use of a Knowledge Meta Meta Model (KM3) when Building Conceptual Models of the Mission SpaceBirger AnderssonMarianela García LozanoVahid MojtahedFOI, Swedish Defence Research Agency164 90 StockholmSweden+46 8 5550{3133, 3705}{birger.andersson, garcia, vahid.mojtahed}@foi.seKeywords CMMS, Conceptual Modeling, Knowledge Meta Meta Model, KM3ABSTRACT Conceptual Models of the Mission Space (CMMS) was put forward as a component of a vision for a future technical framework for modeling and simulation by the US Department of Defense in 1995. In 2001, a project was initiated at the Swedish Defense Research Agency (FOI), with the purpose of studying and developing a CMMS framework and assessing the feasibility of the concept.The FOI project found the original CMMS concept complex and partly under-specified. For instance, a structure for knowledge management that could deal with concepts of different levels of abstraction, and both static and dynamic data was missing. Therefore an activity centered Knowledge Meta Meta Model (KM3) was suggested, designed and developed by FOI specifically to enable construction of conceptual models according to the CMMS vision. Presented in this paper is the KM3, its features and the rational behind its design. Its importance and relation to other parts of the CMMS concept is also discussed. The theoretical results of the work so far with the KM3, indicates that it is a promising approach but that it needs further development.BackgroundConceptual Models of the Mission Space (CMMS) was put forward as a component of a vision for a future technical framework for Modeling and Simulation (M&S) established by the US Department of Defense (US DoD) in their MSMP - M&S Master Plan in 1995.  The main purpose of the CMMS concept was to facilitate and support development, reuse and interoperability between simulation models. DMSO – the US Defense Modeling and Simulation Organization, defines CMMS as being “The first abstractions of the real world that serve as a frame of reference for simulation development by capturing the basic information about important entities involved in any mission and their key actions and interactions” [1].CMMS are simulation and implementation independent models. They are models of real world processes, entities, environmental factors, associated relationships and interactions constituting a particular set of missions, operations or tasks. The models strive to be as generic and applicable to as many scenarios as possible without any loss of critical knowledge. These views are consistent with the views on conceptual modeling put forward in [2] where a conceptual model is considered to be “... the most fundamental model of an enterprise. A model of an enterprise as seen from the object perspective, including static structural aspects as well as dynamics and rules” The CMMS process is not just about the models themselves, but also includes a methodological framework for developing the models.One benefit of the CMMS is that they act as a common description for all stakeholders of what is to be simulated, and thus serves as a bridge between the military experts and the developers. The military experts own the mission processes and are an authoritative source when validating the content of the conceptual models. CMMS also serves as a platform for communication among stakeholders working with the simulation models.The FOI CMMS ProjectThe use of modeling and simulation in the Swedish Defense is increasing and, as a consequence, so are the concerns on how to secure, validate and maintain knowledge and how to keep efforts in doing so at a minimum. In this context, the original CMMS concept was considered as a promising approach, and to see to which extent and under which circumstances it could be of interest for the Swedish Defense, the Department of Systems Modeling at the Swedish Defense Research Agency (FOI) carried out a study in 2001-2002. The main emphasis was on the aspects of reuse, interoperability and maintenance of conceptual models, as well as on the applicability and relevance for the Swedish Defense. The result of the study indicated that CMMS was an interesting concept but that it still was in an ambiguous, vague and partly unfinished state. An additional analysis, now called the FOI CMMS project, was initiated in order to further develop the concept and implement a framework that could support it. This work is still in progress.The FOI CMMS modeling process follows roughly the original high level CMMS process, which starts in a knowledge acquisition (KA) phase, and ends in a knowledge engineering (KE) phase. The FOI CMMS process runs from a knowledge acquisition (KA) phase, via knowledge representation (KR) and modeling (KM), to a knowledge use (KU) phase [3]. The general flow of information in the FOI CMMS process is that partially structured information is gathered from some sources. For example, it could be interviews from witnesses of an event. The information is further structured according to an ontology (world view). That is, if the event is a combat scene or a terrorist attack, the reports from the witnesses are interpreted in terms of the ontology. A number of ontologies may be applicable for interpreting the same event, but ideally one is chosen, resulting in a common understanding of the event. The interpreted information is then subsequently transformed into a common format and stored as a reusable model. This common format is, in the FOI CMMS project, described by a Knowledge Meta Meta Model (KM3). Anything functionally equivalent to the KM3 was not specified in the original CMMS concept, but it was considered a necessity in the FOI CMMS process. The intention when producing the KM3 was not to construct a grand “unified model description language” applicable to the whole CMMS process. It rather represents one possibility to capture system structures and behavior in an object-oriented and rule based way. The purpose of this paper is to overview the main features of the KM3 and present some design choices done when constructing it. The Knowledge Meta Meta Model(KM3)The KM3 can formally be seen as a model specification, consisting of object-oriented concepts, primarily aimed at capturing different dependencies in and between activities. In practice this means that the KM3 is a specification for the creation of generic and reusable conceptual models of objects and processes of (military) interest. In other words, KM3 is a tool for structuring knowledge about objects and processes as conceptual models. The main objective with KM3 is to produce generic templates of knowledge based on types of instances. KM3 is mainly used as a specification for the construction of models, which in turn are used to model knowledge at an instance level. KM3 is, in this respect, a model for how to make models.Design ChoicesA simulation model expressed in the KM3 format should be minimally independent of which ontology was chosen as an interpretation of an event. Minimally, but not completely, since the KM3 has some ontological commitment resulting from being, for instance, object oriented, which implies that the ontologies used must recognize objects as part of their world view. More on quality of conceptual modeling and ontological commitment can be found in [4, 5].KM3 is used as a means for capturing knowledge. Within the KM3, knowledge is defined to be the ability of an object to recognize alternative solution strategies for a problem to be a) applicable in a situation, b) select among them, and c) execute it. To understand all the effects and consequences of the performance of a strategy is considered to have deep knowledge about a situation. To see several applicable strategies in a situation, without being able to fully grasp their consequences are considered to having broad knowledge about the situation. Ideally, all objects should be defined having as broad and as deep knowledge as possible. This means that an object ideally should have a number of solution strategies available when confronted with a problem, and should also be able to fully understand the consequences of applying them.The implication of this knowledge view is that it should be possible to define an object with its relations to other types of objects to the extent and level of detail that is needed for the modeling purpose. It should also be possible to add new information to the model as it becomes available, change available information as it is reassessed, and delete information as it becomes obsolete.DemandsA number of demands were put on the KM3 that influenced its design. It should be a) activity centric, b) it was necessary to be able to capture the static and the dynamics aspects of objects in the same model, c) the models should be reusable, and it should be d) possible to model uncertainty of activity execution. Items a), b) and c) are further explained below, whereas item d) can be commented on directly. Uncertainty in execution of activities is in the current version of the KM3, not fully covered. It is modeled as an attribute of the rules which act as the start and stop conditions of an activity. For instance, we can express that the chance of an activity to start is 0.85 (on a scale from 0 to 1) and, when started, the chance of it stopping is 0.34. Clearly more modeling power than this is needed and part of the current research is devoted to it.2.2.1 Activity CentricA common notion is that a process is a partially ordered set of activities with a well-defined goal [6]. The activities are indivisible units of work that are combined to form processes. KM3 is primarily focused on the description of activities. The reason for this is to make the abstraction level more generic and increase the reusability of the models. A process, where the ordering of activities is significant, is considered less reusable than the modeled activities by themselves. Also, a characteristic of military operations is that they normally can be seen as combinations of activities rather than monolithic processes. The generic activities are combined to form descriptions of processes. For example, the process of driving a car from point A to point B under different weather conditions would result in a large number of process descriptions, whereas an activity centered description of the same process would result in a smaller number of models on a more generic level, where some minor part would be focusing on the differences between the processes.Activities in KM3 are modeled as objects. To model the execution of an activity in KM3, all other objects that are influenced by the activity execution should be modeled as well. This includes other activity objects that may be seen as parts of a main activity. Every activity is modeled as a named set of state and rule descriptions. States are attributes of the activity object and rules are conditions for changing the attribute values. When a condition is true, values of the activity attributes changes and also attributes of other objects may be affected. In this way, the dynamics of an entire model is captured through rules of execution of activities.2.2.2 Static and Dynamic DescriptionsA static description of an object is an enumeration of its attributes and the domains from which the attributes can take their values. For example, a Person object can be described by giving it a name and filling the values for the attributes Length and Age. The permissible values are constrained by the domain definitions from which the attributes can take their values. This snapshot description is often sufficient when reasoning about the object. However, to be able to express how an object evolves, it is necessary to include dynamical descriptions of the object. In KM3 this is done by the inclusion of rules into the object descriptions. The rules determine how the states of objects changes as the objects evolve. Dynamic rules do not say anything about, e.g. the range of an attribute’s values. They say which attribute value can legally precede another attribute value. Often the rules are formulated as being either obligations, recommendations, or prohibitions. An obligation means that an object state must follow another; a recommendation means that a state may follow another, and a prohibition means that a state must not follow another.The static and dynamic views of an object are complementary. A Person object has the attributes Name, Length, and Age taking values from defined domains. This is the static view. It also has a rule, which says that by each passing of a year, its Age attribute should be incremented with 1. This is the dynamic view. Any modeling tool, including the KM3, should have the possibility to model both static and dynamic views of an object. In KM3 this is done through the modeling constructs attributes and rules.2.2.3 EncapsulationSimilar to classic object orientation, the KM3 uses encapsulation to package and protect model elements. Being the fundamental elements, activity objects encapsulate the entity objects that are associated with the activities. The only part of the entities that are visible to the activity is the current state of the entity. No part of an activity is visible to an entity. The state of an encapsulated entity becomes automatically part of the state of the activity. The main benefit of adopting this view on encapsulation of model elements, together with focusing on activities, is that it results in modularization of the model, which increases its reusability.The ModelThe KM3 consists of four main components; 1) Model element, 2) Attribute, 3) State, and 4) Rules. Model element is analogous to the class concept in object orientation, i.e., it can be thought of as a grouping of similar object with similar properties. Attribute is analogous to multivalued attributes. State is analogous to a single valued attribute, and finally, rules are analogous to operations and are used to control activities and state changes. Following is a presentation of the concepts and their relations. The presentation is on a high level without going deep into the details. A detailed analysis can be found in [7].2.3.1 Model ElementModel element is the foundational construct of the KM3. Through this construct, the objects that are part of activities as well as the activity object themselves are modeled. Every model element is recursively decomposable and may be specialized through object oriented inheritance or aggregation. Common for all model elements is that they can be associated with attributes and states.  Model elements can be of four different types: EntityType, RoleInAction, RoleInOrganizationType, and ActionType.Figure 1 is read by starting from the ActionType construct (bottom right, in the figure). This corresponds to first finding a verb in a sentence. After this the other entities related to the activity are determined. This corresponds to finding the nouns and other word classes. If a required element is missing, information about it must be gathered, described and integrated into the model before finishing the modeling of the activity.Deciding on which entities should be associated to the verb is governed by the RoleInActionType. Action role types can be grammatical constructs such as subject or object, or named roles e.g., "the vehicle" or "the wounded". Every action role is associated with an entity type that in effect classifies the role as to be played by an entity type described by a noun.The difference between RoleInAction and RoleInOrganizationType is that different Types can play different roles in different contexts. A RoleInOrganizationType is characterized by rights (obligations, recommendations and prohibitions) of a position in a military organization. An RoleInAction defines the actors within a specific activity. In other words, it is possible to define similar names for concepts but their meaning is never the same. The rights associated with an organizational role are a role in an activity.It is important to realize that there is a difference in the level of abstraction between activity roles and the other model elements. A role in an activity denotes which type of entity it is played by. Activities associated with activity roles are not explicitly expressed in the model but are derived by the association.When the activity roles has been fully determined, the pre- and post-conditions as well as states of the activity is specified. The definition of entity types are done independently of definitions of activities and each entity type can be associated with one or several different activities.2.3.2 AttributeAn attribute describes an optional, measurable characteristic of a model element. Through a measurement the model element is classified according to some unit of measure. An attribute is always associated with at least one model element but there is a possibility that an attribute can be shared among several model elements. An attribute is always associated with one of the following classification names: Interval, MultiInterval, Value, or MultiValue. Interval means that only an interval is a valid value for the attribute. Multi-interval means that several intervals simultaneously are valid values for the attribute. Value means that only one point value is valid for the attribute. Multivalue means that many values are valid for the attribute simultaneously.Value domains establish the extension of the attribute given its classification. A value domain is defined by values giving the upper and lower bounds of its applicability. If the upper value is 'null', then the value domain is a distinct value. Otherwise it is an interval. Every value in a value domain is associated with a data type. This design is for e.g., enabling the automatic conversions of units of measure. For example, the attribute 'length' measured in the unit centimeter is associated with the model element 'person'. The attribute should be classified as a Value, since we only want a person to be of one length at a time. Our value domain will thus be defined through a pair of values where the lower end is, say, 0 and the upper end is 250. All values are of data type Integer. In this example we have created an attribute that can be described by a number (at least 0, at most 250) and a unit (centimeter). The attribute can take exactly one value at a time.2.3.3 StateA state is the set of values of a non-optional attribute of an Activity Role model element. The values of the non-optional attributes comprise the state of the model element. If an Attribute is associated with a model element (an Attribute being optional), then the state of the attribute is part of the state of the model element. Every state is associated with an activity Role model element and is analogously associated with a type.As values of states changes, one state replaces another. All value changes are taking place in Roles participating in Activities. Permissible state changes will take place according to the rules that constrain all possible state changes. A valid state of a Role is a state in which all values are in compliance with a state definition. That is, all optional and non-optional attributes of a Role must have values that are permissible in a state definition.2.3.4 RulesThe dynamics of model elements in KM3 are captured by rules. Through the specification of rules, all changes of model elements are described. A rule specifies the conditions under which an activity starts and ends. The shape of a rule is a pair, where the first element represents an activity role, and the second element represents an atomic formula. An atomic formula is a statement about the state or attributes of a role. Every rule can be classified as being a state-formula, an attribute-formula, or a belief-formula. Beliefs do not necessarily need to be objectively true to trigger an activity, but rather reflect the subjective views of a person.From atomic formulas more complex formulas can be constructed by connecting them conjunctively or disjunctively. A disjunctive formula is created by connecting conjunctive atomic formulas by means of OR-connections (a.k.a. disjunctive normal form, DNF). A conjunctive formula is created by connecting atomic disjunctive formulas by means of AND-connections (a.k.a. conjunctive normal form, CNF).Criteria are created from atomic rules. A criterion determines the start and stop conditions for activities, which in turn results in state changes of the activity, and possibly also in other model elements. In other words, the state changes are the effects from some activity criterion becoming true.Example of a KM3 structureAfter this overview of the main KM3 concepts we exemplify its use as an analytical tool in a hypothetical scenario. This is an example of a (simplified, for brevity reasons) structure where concepts from the KM3 have been used to analyze a situation report.  The work has been done manually.This small example is a very simplified snippet of a larger scenario designed to test various types of modeling difficulties. It is not the main intended use of the KM3 as has been explained and will also be elaborated upon in a future technical report planned for publishing by the end of this year. The structure is lightly commented to make it easier for the reader to follow.2.4.1 ScenarioThe scene for this scenario is Kosovo where NATO’s and other nation’s forces are involved in a joint Peace Support Operation (PSO). The situation in this hypothetical scenario is that a patrol from the Swedish peace keeping force has discovered a break-in in a weapons depot and filed a report into the information system. An intelligence officer receives the report and starts a further investigation.----------------------------------------------------------------------------------------------------------------------------------------Part of the original scenario text:… An officer at the Intelligence department receives the information automatically due to the predefined subscriptions for his role. The officer creates a main information element to be used as a point of reference when the errand is explored further. To find more information regarding the case, the officer searches the GIS-system with a special interest for the area around village Y. He finds a weapons depot close to it. The information in the GIS concerning the weapons depot is interlinked with additional information. This information concerns a particular individual, Major C. S. He has connections with organized crime in Country X where he has lived. He is the leader of the military unit responsible for the weapons depot. …----------------------------------------------------------------------------------------------------------------------------------------Analysis of the text using the KM3:/* the entity type Intelligence department is a part of the Swedish defence*/ET : Intelligence departmentElementComposition :: part of : < Intelligence department, Swedish defence>/* the entity type NBI is a part of the Information and communications system*/ET : NBIElementComposition :: part of : <NBI, Information and communication system>/* the entity type GIS  is a part of the NBI*/ET : GISElementComposition :: part of : <GIS, NBI>/* An ActionType related to another action type (occurring After)*/AT : Searching ET : GIS for additional informationTime : May 2002, AFTER  AT : Main information element creationRoleInAction : <searcher, subscriber>RoleInOrganizationType : <subscriber, ET : Subscribing officer>/* Start and Stop criteria for the action */Criterion : (prob 1, isStartCriterion T,	[ET : Main information element AND ET : relevant information]	ActionState : searching for additional informationCriterion : (prob 1, isStartCriterion F,	[ET : Main information element AND ET : relevant additional : T] OR [ET : Main information 		element AND ET : relevant additional : F]	ActionState : search for additional information has occurred/* Effect of the action. A  “case file” is updated. Additional EntityTypes with connections are discovered */ET : Main information element		State : Updated with additional informationET : Weapons depot		Attribute : Close to ET : Village Y		Attribute : Responsible commander is ET : Major C. S.ET : Major C. S.		Attribute : Connection to organized crime, Organization	Attribute : Lives in Kosovo, Year			StartValue : 1995			StopValue : Now		Attribute : Lived in Country X, Year			StartValue : Before 1995			StopValue : 1995Attribute : Leader of a military unit responsible for guarding ET : Weapons depot, Military unit----------------------------------------------------------------------------------------------------------------------------------------Conclusions and Future ResearchWe have in this paper presented the vision Conceptual Models of Mission Space (CMMS) and the Swedish Defense’s interest in this vision. As part of the CMMS process we have identified the need for a common structure for describing conceptual models. We have designed one such structure, called Knowledge Meta Meta model (KM3), to take this role. A number of demands were put on the KM3; the models produced using it should be activity centric, able to capture the static and the dynamics of objects in the same model, be reusable, and it should be possible to model uncertainty of activity execution. We have presented the main features of the KM3, and discussed how the demands influenced its design.Future research involves a validation of the CMMS process starting from an only partially structured information input, and ending in an information structure ready for use in the construction of a simulation model. The validation is expected to improve the CMMS process, and also the KM3. At this point we already know that we need to be able to model uncertainty and risk in a more elaborate way than we do today. We also need to clearly determine the exact relations between the different parts of the CMMS process and its artifacts, and also the uses of them. For instance, in this paper we have used the KM3 as an analysis tool which is not its main intended function.Another area for future research is how to be able to determine the right level of abstraction when modeling. Clearly different stakeholders put different demands on models of the same event. For instance, a commander’s view of an event is very different from that of an infantry soldier and their different views result in different simulation models. A third area of future research concerns the storing and maintaining of simulation models. This also includes work on languages for querying the model store. References[1] Conceptual Models of the Mission Space. DMSO, rev.0.2.1, 1997. HYPERLINK "http://www.dmso.mil/briefs/msdocs/policy/msmp.pdf"www.dmso.mil/briefs/msdocs/policy/msmp.pdf. 2002-09-03[2] Boman, M., Bubenko, J., Johannesson, P., Wangler, B. Conceptual Modelling. Prentice Hall, ISBN:0-13-514879-0. 1997[3] García Lozano, M., Mojtahed, V., A Process for Developing Conceptual Models of the Mission Space (CMMS) – From Knowledge Acquisition to Knowledge Use. Report ID 05F-SIW-038. Presented at SISO 2005 FALL SIW Workshop. Orlando, Fla., 2005.[4] Lindland, O. I., Sindre, G., Sölvberg, A. Understanding Quality in Conceptual Modeling. IEEE Software, Vol. 11, no:2, pp. 42-49, 1994.[5] Opdahl, A. L., Sindre, G. Concepts for Real-World Modelling. Colette Rolland, François Bodart, Corine Cauvet (Eds.): Advanced Information Systems Engineering, CAiSE'93, Paris, France, June 8-11, 1993, Proceedings. Lecture Notes in Computer Science Vol. 685 Springer, ISBN 3-540-56777-1, 1993, [6] Hammer, M., Champy, J., Reengineering the Corporation: A Manifesto for Business Revolution. HarperBusiness. ISBN 0-88730-640-3, 1993 [7] Mojtahed, V., Garcia-Lozano, M., Kunskapsrepresentation (KR) och Kunskapsmodellering (KM) i CMMS-konceptet. Metodrapport FOI-R—1433—SE. ISSN 1650-1942. 2004Author BiographiesBIRGER ANDERSSON is a Research Engineer at the Royal Institute of Technology in Stockholm. He is, since the beginning of 2005, a member of the FOI CMMS project at the Department of Systems Modelling at the Swedish Defence Research Agency (FOI).MARIANELA GARCÍA LOZANO is a ResearchEngineer at the Department of Systems Modelling at the Swedish Defence Research Agency (FOI) and she has been a part of the CMMS project since its start in 2001. She holds a Master of Science in Computer Science and Engineering from The Royal Institute of Technology (KTH), Stockholm, Sweden. Her research interests are in the areas of Conceptual Modelling, Distributed Computing and Symbiotic Simulations. VAHID MOJTAHED is a senior research officer working at the Department of Systems Modelling at the Swedish Defence Research Agency (FOI). He has been working on modelling and simulation for the past ten years and has led the CMMS project at FOI since 2001. He holds a Master of Science in Computer Science and Engineering from Chalmers University of Technology, Gothenburg, Sweden. His research interests are in the area of Conceptual Modeling, Simulation Framework and Information Operations and Warfare.Figure  SEQ Figure \* ARABIC 1 The Knowledge Meta Meta Model (KM3) EMBED Word.Picture.8  