Distributed Collaborative Environments for Predictive Battlespace Awareness William K. McQuayAir Force Research Laboratory2241 Avionics CircleWright-Patterson AFB OH 45433937-255-4429 ext. 3568 HYPERLINK "mailto:william.mcquay@wpafb.af.mil" william.mcquay@wpafb.af.milSteven T. HobertyAir Force Research Laboratory2241 Avionics CircleWright-Patterson AFB OH 45433937-255-4429 ext. 3562 HYPERLINK "mailto:steven.hoberty@wpafb.af.mil" steven.hoberty@wpafb.af.milKeywords:Battlespace, simulation, decision support. Abstract- The past decade has produced significant changes in the conduct of military operations: asymmetric warfare, the reliance on dynamic coalitions, stringent rules of engagement, increased concern about collateral damage, and the need for sustained air operations.  Mission commanders need to assimilate a tremendous amount of information, make quick-response decisions, and quantify the effects of those decisions in the face of uncertainty.  Situational assessment is crucial in understanding the battlespace.  Decision support tools in a distributed collaborative environment offer the capability of decomposing complex multitask processes and distributing them over a dynamic set of execution assets that include modeling, simulations, and analysis tools. Decision support technologies can semi-automate activities, such as analysis and planning, that have a reasonably well-defined process and provide machine-level interfaces to refine the myriad of information that the commander must fused. Collaborative environments provide the framework and integrate models, simulations, and domain specific decision support tools for the sharing and exchanging of data, information, knowledge, and actions.  This paper describes ongoing AFRL research efforts in applying distributed collaborative environments to decision support for predictive battlespace awareness. 1. IntroductionThe past decade has produced significant changes in the conduct of military operations: asymmetric warfare, the reliance on dynamic coalitions, stringent rules of engagement, increased concern about collateral damage, and the need for sustained air operations.  Mission commanders need to assimilate a tremendous amount of information, make quick-response decisions, and quantify the effects of those decisions in the face of uncertainty.  Information technology will enable new decision-making tools, decision support systems, and future simulations that will assist commanders in making better decisions. New decision aids will support planning and provide alternative courses of action within the time dependencies required to engage Time Sensitive Targets.  Modeling and simulation features will be employed to enable planners to evaluate their options and select the proper courses of action.The importance of decision support tools was emphasized by Gen. John P. Jumper in an article on his vision for the Global Strike Task Force:“The development of predictive-analysis tools will expand the power of integrated ISR [intelligence, surveillance, and reconnaissance].  Horizontally integrated ISR, combined with these predictive tools, will build the concept of intelligence preparation of the battlefield into an emerging concept called predictive battlespace awareness (PBA). Such awareness includes baseline reconnaissance of the battle space; terrain delimitation; focused surveillance; cataloged analyses of movement patterns; knowledge of enemy tactics, intentions, and disposition; as well as course-of action analysis. This concept should allow a shift of ISR platform utilization from collection, used for pure discovery, to targeting those events that our predictive power leads us to anticipate. We are aiming for a forensic level understanding of the battlespace in all four dimensions. PBA will allow us to anticipate the right move rather than simply react to enemy moves. PBA is essential to the GSTF.” [1]Predictive Battlespace Awareness is the understanding of the operational environment that allows the commander and staff to anticipate future conditions, analyze adversary and friendly courses of action, formulate plans, and forecast specific events where decisions are required.   The Air Force Research Laboratory has undertaken a research program to develop and apply information and simulation technologies to Decision Support to Predictive Battlespace Awareness.2. The Predictive Battlespace Awareness Concept Situational assessment is crucial in understanding the battlespace and has led to increased importance to battlespace awareness.   The Air Combat Command’s Concept of Operations for Predictive Battlespace Awareness, defines PBA as: “a continuous cycle that integrates Target Systems Analysis (TSA), Intel Preparation of the Battlespace (IPB),  ISR Strategy and Planning, and ISR Employment into a coherent framework to maximize the capabilities of ISR assets in all environments and across the spectrum of operations.  The integration of these traditionally separate components provides commanders the capability to quickly shift ISR assets to target those actions predictive analysis allows us to anticipate.” [2]This definition emphasizes that PBA is a continuous process which involves many sequential and parallel sub-processes which will be important to identify as we implement a distributed decision support environment.  Two major aspects need to be addressed: battlespace awareness and predictive awareness.  Battlespace Awareness (BA) describes the ability of the ISR network to provide the commander with an accurate picture of what is reality in the battlespace.  Battlespace Awareness essentially tells the commander where he has been and where he is now.  Predictive Awareness (PA) permits the extrapolation of the outcome of previous decisions or alternative actions.    PA relies on an accurate updated baseline and analysis of BA as well as robust planning tools with embedded modeling and simulation capabilities.  PBA directly supports the new joint transformational operational concepts such as effects-based operations, global strike task force, and coercive campaigns.  Effects-based operations (EBO) is a perspective for planning, executing, and assessing military operations. Gen. David Deptula notes “legacy methods focus on destroying targets, moving arrows on a map, and waging wars of attrition. But EBO moves beyond those narrow, tactical viewpoints. Under this campaign-planning philosophy, the military planner uses superior knowledge to avoid attrition encounters, applying force at the right place and time to achieve specific operational and strategic effects. EBO promotes greater planning agility; it is also less plodding and more adaptive to the achievement of specific effects. Although we have used elements of EBO in the past, through aggressive education and training in these operations, warriors from every service can achieve a more comprehensive framework for integrating all elements of the military—as well as multinational and governmental agencies—into a coherent campaign philosophy.” [3]EBO can be further complemented by coercive campaigns, where effects-based employment of appropriate elements of national power can modify an opponent’s behavior to comply with US strategic objectives.   A coercive campaign of using coordinated military and diplomatic means differs from the traditional Napoleonic warfare’s aim of totally destroying the enemy force.  In the 21st century, we are interested in controlling aberrant behavior and shaping hot spots, not annexing territory [3].These new operational concepts can enable approaches that can expand strategic and tactical options and produce new opportunities for joint planning and distributed decision support.  One application area for distributed decision support for PBA is in the Air Operations Center.  Within an Air Operations Center (AOC), multiple divisions exist and they need to collaborate with each other.  The Strategy Division creates an integrated Joint Air Operations Plan that matches the phases of the Joint Force Commander’s  Campaign Plan, but takes into account the ability of air and space power to pursue parallel warfare.  The Strategy Division must interact on a continuous basis with the Combat Plans Division (CPD) and the Combat Operations Division (COD) as well as the ISR Division.  In support of the Air Component Commander, the Strategy Division must also interact with their counterparts supporting the other component commanders as well as the JFC's team [4].  3. Defining a Distributed Collaborative Decision Support Environment 21st century information and simulation technology will provide a new generation of decision support systems to enable decision quality information in compressed decision cycles.  By integrating advance collaborative information technology with simulation, planners and warfighters will be better able to evaluate their options and select the proper courses of action.  Through simulation, discovery, and just-in-time information, the support environment will enable better decisions, not just faster ones. A distributed decision support environment (DSE) enables geographically, temporally, and disciplinarily distinct resources and users to seamlessly interoperate, archive and recall work products throughout the C2 enterprise. A DSE supports both single individuals and collaborating groups by managing and distributing “virtual workspaces.”  These virtual workspaces contain the necessary visualization and resource management tools each user needs to contribute to decisions throughout the mission life cycle.  The collaboration can be active for days, months, or years.   A DSE implements functions such as the following permitting collaboration members to [5]:Access electronic versions of all documents including plans, intelligence reports, resource Figure 1.  Key components of in a Distributed Decision Support Environment and asset schedules, meeting minutes, action items, databases, technical reports, and briefings Maintain documentation and software under configuration control with traceability and archiving of changes and automatic notification of updates and newly created action items View, discuss and generate documents with each other using desktop video and audio conferencing Present data and information to various users in mission-specific and content-specific formats applicable to each user's current needsIdentify, release, and check out documents, software, or information Translate and mediate data between heterogeneous processing systems and diverse functional areasRemotely control and share the use of applicable analysis tools and resourcesMonitor the progress of tasking and alert managers and support personnel to assess the impacts of variances in tasking and changes in plans, schedules, and configurationsRemotely activate applications, such as simulations, analytical models or data extraction and fusion utilitiesThe DSE functions can be implemented with technologies such as collaborative communications tools, document managers, electronic forms, and workflow managers as shown in figure 1.  The DSE collaborative communications tools enable both local and geographically separated users to participate in synchronous and asynchronous sessions and to archive any resulting data and information.  These tools include chart, shared whiteboards, shared application viewing, threaded discussions, instant messaging, and audio/video conferencing. The instant messaging enables team members to communicate with others users who are logged into the same DSE server.  The Instant Messenger enables the user to quickly send another person in the enterprise a message that will pop-up on their screen when it arrives.  The Instant Messenger also lets the user invite another person to join them in a private chat. The invitation will appear on their screen as a request, which they can accept or decline. If they accept the invitation, a private chat frame will appear that other people cannot see or join, unless the user, the creator of the chat, invite them.  Chat is a messaging system that enables participants to communicate via text messages.  All participants in a chat session receive the other participants’ text comments and can share their thoughts by typing into their local chat window then sending them to the group. Chat sessions are recorded for playback by users who join a session in progress, and chat transcripts can be archived in the document manager. The whiteboard feature enables multiple users to share ideas graphically in a shared drawing area using assorted figures and text. Each participant in a whiteboard session receives the same virtual view and has the ability to “mark up” the board to illustrate a point.  The user can construct pictures with basic geometric shapes and add text to the picture using the text tool or the pencil tool.  The DSE collaborative communications tools support multiple simultaneous whiteboard sessions that individuals can join at will.  Whiteboard sessions maintain a history, so latecomers can catch up in a current session. The final results of a whiteboard session can be archived in the document manager. The shared application viewer feature enables users to view the windows and displays of a remotely hosted application. One participant shares the application from  there local computer, maintaining control over the operation of the application, while others in the session make contributions or discuss what they see.   Audio/video conferencing turns a properly equipped computer into a videophone. It allows enterprise users to communicate verbally while viewing not only the other participants, but also any artifacts that contribute to the discussion.   The document manager provides enterprise wide web-based documentation management and allows users and software components to create, search for, access and store documents from anywhere in the enterprise.  Participants see only information they are authorized to see and can only use utilities, like copy or lock, based on those authorizations.  The document manager retains past versions of documents and keeps track of document updates by maintaining an audit trail of changes.  It also provides the users the ability to search enterprise documents and workflows by title, author and keyword.   A form processing feature enables users to fill out and store custom-created electronic forms. Forms can be easily integrated into workflows that can automate common processes such as routine reports and notifications.  Workflow provides the ability to develop, execute and manage mission processes, such as planning; support the execution and control of C2 enterprise resources identified in a workflow process, such as simulations or analytical tools; and provide runtime management capabilities and status information.A crucial element of a DSE is intelligent agent technology.  The intelligent agent is the primary software component for performing tasks. The tasks may be performed autonomously using artificial intelligence concepts or in conjunction with a user who interacts with the agent.  As examples, agents are used to manage applications, perform object transformation between two disparate databases, and manage the execution of conditional actions based on the occurrence of specified events.In a C2 enterprise, important data and status information can be displayed on a portal  -- the single access point for each participant.  For the Commander, the portal could show status of current mission, action items, and critical intel updates.  Each participant can have a tailored portal for the information that that user determines to be critical to his job performance.4.  Integrating Modeling and Simulation into a DSE  for PBAThe DSE supplies the framework that enables teams to describe a process, then represent it as a workflow that can be used and reused as many times as necessary.  As the processes are developed, the requirement for a simulation asset will often become obvious.  For PBA to be effective at the operational level, system-of-system models may be required to rapidly assess the effects of high fidelity weapons employment and indicate general trends of effects and enemy responses.  The necessary and accompanying analytical methodologies can be captured as workflows. Timeliness and responsiveness are essential if these tools are to be relevant to planners at the operational level and offer the ability to influence the tactical battle.  Use of a DSE combined with high performance computers, will facilitate the timeliness of data used for prediction.   Intelligent agents provide unique ability to contact and control simulation resources in a way that leaves the actual operation of the simulation or model in a black box -- isolating the warfighter from having to become an expert in a multiplicity of simulations and databases.  Agents also can follow up on thousands of minute details for after action reviews.  For example, suppose a bridge was part of a target set. The commander wanted to disable but not destroy the bridge since it carried communications cables that the intelligence community could exploit.  Did the weapon hit the target? Did it create a crater? Can we repair the bridge later for our use? Can we still exploit the communications line? Are ISR resources monitoring the bridge? How did traffic flow change? What is the nature of the traffic flow – civilian, military, third party humanitarian? [4]Within the C2 enterprise, modeling and simulation (M&S) resources can be used in support of many activities: coordinated  ISR asset planning and collection strategy, target systems analysis in support of targeting and effects based operations, prediction of enemy courses of action,  etc.  As part of the AFRL ongoing research, various M&S tools are being evaluated for appropriateness and the processes and workflows defined to employ them in an enterprise for PBA.As an example of the utilization of a DSE with M&S resources, AFRL conducted an experimental Analysis of Alternatives focused on potential Uninhabited Aerial Vehicle (UAV) contributions to the Air Force’s priority Time Sensitive Targets (TST) problem.  The initial experiment was to provide insights into tactics, vehicle performance, and relative cost-effectiveness of selected system configurations.  The selected geographic scenario was a notional European landmass with significantly varying topography and significant opportunity for foliage and terrain masking of TST populations.  The scenario is not associated with any real national boundaries, but did employ actual level zero Defense Terrain Elevation Data (DTED) from 16 deg. to 25 deg. longitude and from 42 to 50 deg. Latitude.  Six road networks that were added to the simulated geographical area.  These areas were populated with moving military targets and civilian vehicles in order to provide a better test of platform sensor area search and ISR military worth from manned or UAV platforms in patrol orbits.  The area contained BRDM armored reconnaissance vehicles, tanks, transporter erector launchers (TEL), military trucks, and civilian vehicles.  The strike aircraft consisted of notional Low Observable Aircraft strike fighters.  The weapons load was a single Laser Guided Bomb.  Each strike fighter was capable of illuminating its targets.  Strike platform orbits were roughly 15 minutes from the center of the target area for all test configurations, which maintained the experiment’s focus on the ISR chain timeline in driving mission outcome.  The friendly ISR assets were placed in “safe” orbits just outside the range of the postulated threat systems within the scenario.  This resulted in an 80km distance from the FEBA for the Baseline Manned and Baseline UAV, while the Advanced UAV low cross section was able to move to 47km from the FEBA.  The SBR configuration consisted of a 12 satellite constellation at an altitude of 1100 km.Four configurations were examined in the experiment:Use of generic manned and High Altitude UAV versions of current baseline ISR assetsCombined use of Advanced High Altitude Endurance Uninhabited Air Vehicle (AUAV) and Spaced Based Radar (SBR)Sole use of SBRSingle use of AUAVFor the mission level simulation, a four-hour simulation period was used with pseudo-randomly spread start times for target movement. A number of the missions were executed for each of the four ISR configurations, with results accumulated to provide input data to the campaign level simulation.   Data object and process models were defined for the experiment, and the process model was instantiated as a collaboration workflow.  The process model identified what key resources (survivability models, mission and campaign simulations, data reduction tools, and analysts), methods, and rules that were needed for all necessary tasks.  The results of each case were stored in the shared information for the collaboration with full configuration management and control including versioning.  The different result files for each run were extracted from the DSE database and made available to each resource when required. The experiment was executed in three stages: pre-mission data preparation, mission level trade space reductions, and campaign level and cost concept comparisons as shown in figure2.  Using the workflow tool in the DSE, the process model was captured as a reusable workflow.During the pre-mission data preparation stage, a core set of models was used to: perform detailed engagement analysis for each potential threat-blue asset pairing, generate PK tables for threat systems to be used in mission level modeling, and generate threat system detection ranges and other input data for mission level modeling.  The core data preparation model set included traditional survivability tools such as: Enhanced Surface-to-Air Missile Simulation (ESAMS), Joint Modeling and Simulation System (JMASS) surface-to-air missile (SAM) model, Modeling System for ASTE Investigation of Countermeasures (MOSAIC), C4ISR Space and Missile Operations Simulation (COSMOS), and Advanced Low Altitude Radar Model (ALARM).C4ISR Space and Missile Operations Simulation (COSMOS) was used to better define the blue sensors systems properties and blue and red routing scenarios. Military worth and sensor coverage area metrics were generated using COSMOS and used as a basis for AUAV optimization across trade space consisting of platform altitude, sensor maximum range, sensor platform radar cross-section, and automatic target recognizer performance.  The performance of the optimized AUAV was then compared to other system options including a baseline manned ISR system, a baseline UAV system, and a 12 satellite SBR system constellation. In the experiment, COSMOS passed data to the Suppressor mission model which was used  to conduct target prosecution modeling.   Data included time of detection, target latitude, target longitude, actual target type, perceived target type, and target velocity.Figure 2.  Three Stage Modeling and Simulation ProcessEnhanced Surface-to-Air Missile Simulation (ESAMS) modeled the interaction between a single airborne target and a SAM air defense system. It is a one-on-one framework in which to evaluate air vehicle survivability and tactics.  ESAMS provided SAM engagement contours based on SAM weapon system, target, and environment characteristics. For the experiment, ESAMS generated miss distance and  PK contours for mission level modeling.The Joint Modeling and Simulation System (JMASS) is a standard engineering/engagement-level simulation support environment that allows analysts to define models, combine them into simulations, execute simulations, and post process the results.    JMASS provided a three dimensional matrix consisting of time before shot after detection as a function of range, altitude, azimuth angle.Modeling System for ASTE Investigation of Countermeasures (MOSAIC) is capable of simulating laboratory experiments, field tests, and live fire engagements between advanced infrared (IR) missiles and aircraft with expendable countermeasures. The modeling system provides an automated method for performing sensitivity analysis and parametric optimization of expendable countermeasures. MOSAIC is supported by an extensive database that includes missile seeker models, aircraft signatures, and platform flare dispenser locations. IR flares currently in the inventory, as well as IRCM concepts being developed, are represented both in terms of radiometric performance and trajectory for varying dynamic conditions. The SHAZAM end-game model is run to calculate the final PK value yielded for particular launch points.  As output, MOSAIC provided a two dimensional matrix consisting of  PK as a function of range and altitude.  The Advanced Low Altitude Radar Model (ALARM) was used to analyze the detection performance of ground-based radar systems against aircraft targets.  ALARM is a generic ground-based radar simulation model capable of representing radars operating in either a search or track mode. The types of radars that can be simulated are pulsed, pulsed with moving target indication, pulse doppler, and continuous wave. ALARM uses detailed forms of radar range equation to determine the ability of the system to detect the target in the presence of terrain, clutter, and multipath. Terrain is modeled using digitized terrain data or terrain as a round, smooth earth.  The model also permits the representation of either a standoff jammer or an onboard jammer.  For the experiment, ALARM provided ground-based radar detection ranges for mission level modeling.  The Trade Space Reduction stage included mission level constructive simulations.  The constructive mission models were used to execute and record results for strike missions over a four-hour period.  Results from these runs provided operational parameters for the campaign level.  The workflow was repeated numerous times to develop a statistical basis for the parameters.  The core mission level model set included: ORCA Planning and Utility System (OPUS), the Air Operation Center (AOC), Satellite Tool Kit (STK), Combat Automation Requirements Testbed (CART), Suppressor Composite Mission Simulation.  ISR sensor models received a data stream containing true locations for all scenario entities and produced sets of target detections and perceived locations.  The AOC model accepted this detection stream and created a set of Air Tasking Orders (ATOs) that described detailed orders, target assignments, and strike routes to targets. Suppressor, a mission level modeling system, executed these ATOs and tallied the resultant mission outcome statistics.   These statistics were then aggregated and placed back into the DSE  shared data area  to be used as inputs to the campaign model.The ORCA Planning and Utility System (OPUS) is an interactive aircraft mission-planning tool.  It includes an autorouter that produces threat avoiding, terrain aware routes for both conventional and low observable RCS signatures and automatically plans weapon releases that conform to common tactics.  OPUS can import and export routes from AFMSS, export routes in the EADSIM format, and import and export air-tasking orders in USMTF ATO95 and ATO98 formats.  In the standalone simulation role, OPUS received strike aircraft and target location information from Suppressor; received target type, threat, strike aircraft type and weapons types data from Suppressor; received targeting requirements from the AOC model; generated routes for AOC; handled initial and re-planned routes / flight profiles; and generated expected probability of survival for strike aircraft.The Air Operation Center (AOC) model received mover location and fuel information from Suppressor, received detection information from the Satellite Tool Kit, generated target-strike asset pairing for OPUS, received route information from OPUS, and generated route assignments for Suppressor.  It produced ATO in both ATO98 format and a file formatted for input to Suppressor.  A rudimentary Automatic target Recognition (ATR) module accepted detection messages from ISR assets and determined classification and confidence.   The AOC model the processed the ATR classification messages, and determined whether to prosecute new targets based on target priority, classification confidence, rules of engagement and available assets.  Satellite Tool Kit® (STK) is the leading commercial-off-the-shelf software solution for the space community.  STK provides the analytical engine to calculate data and display multiple 2D maps to visualize various time-dependent information for satellites and other space-related objects, such as launch vehicles, missiles, and aircraft. STK’s core capabilities include generation of position and attitude data, acquisition times, and sensor coverage analysis for any of the objects modeled in the STK environment.  STK received mover location information from Suppressor including RCS and received sensor characteristics from the data preparation phase of the experiment.  STK was used to simulate sensor capabilities & motion for satellite and advanced UAV assets and produced target detection information for AOC.  The Space Based Radar (SBR) was modeled using STK and determined access between vehicles and fixed sites over time subject to wide variety of user-selected constraints.  The SBR was a medium fidelity radar module simulating radar performance (including SAR), antenna patterns, signal to noise, clutter effects and probability of detection. The SBR model provided outputs such as: sensor access for various objects in the scenario, radar performance metrics, communications performance metrics, and scenario visualization and playback.The Suppressor Simulation System is a computer simulation for operational concept evaluation and electronic combat analysis at the composite mission level of detail.  Suppressor can be used for evaluating different weapon systems, sensor systems, tactics, or command procedures in composite missions against an integrated air defense.  In the DSE workflow, Suppressor communicated with several external models: ALARM, ESAMS, JMASS, MOSAIC, the AOC, and CART.   ALARM, ESAMS, MOSAIC, and JMASS supplied the data to populate certain input items in the Suppressor Type Data Base (TDB).  ALARM provided the data for the one meter squared detection range for some of Suppressor’s radars.  ESAMS and MOSAIC provide data for weapon PK tables.  JMASS created firing logic (i.e., Resource Allocation tactics) for some of the SAM shooters in the scenario. Each of these models was executed independently of Suppressor in the workflow.  Their outputs were inserted into the Suppressor database via the Suppressor DSE resource agent.  Communication with the AOC was through an HLA Run Time Interface and provided movement path data for all but one aircraft in the scenario.  Stationary players were fully modeled in the Suppressor scenario database in the usual manner.  Suppressor contained a “ghost” representation of each externally controlled player.  The ghost representations possessed only a small amount of the normal collection of tactics since the players were externally controlled.  The command to shoot and the intended target are passed as part of movement points sent from the AOC.  The Figure 3.  Typical Data Outputs for Campaign Level Tradesexternal points were modeled in Suppressor in the same manner used for its internally generated points. Because Suppressor was operating in a federation, it also outputted data about its internal state.  Specifically, Suppressor periodically exported location and velocity information about all moving entities and non-moving entities once at the beginning of the scenario.   In addition, Suppressor outputted data for use by Attack in the campaign level of the DSE workflow.  The Suppressor data included the number of aircraft launched by the AOC and the number killed, the number of targets killed by target type, and  the number of TELs which launched missiles.The last phase of the experiment, the Campaign level Concept Comparison, combined mission level results to provide data for campaign level modeling of a multi-day scenario.  This phase used a campaign simulation to determine overall effects and costs associated with each alternative system. The campaign level model was run with fixed effectiveness and 3 day time duration. The output was the numbers of strike assets required to accomplish the mission. The resulting cost of the number of strike assets reflected the value added by the new alternatives.  At the campaign level, two iterations were run for each case.  During the first iteration, the targets killed by type and duration were determined.  During the final iteration the number of sorties flown, targets killed by type, and number of strike assets required were determined.  The core campaign level model set included: ATTACK, IDAPS Cost Estimation Tool (ICE), Airlift Capabilities Assessment Simulation (ACAS), and IDAPS with Cost as an Independent Variable (I-CAIV).ATTACK is a deterministic, phase organized, one-sided air campaign simulation.  For each alternative system configuration (Baseline, Space Based Radar, Advanced UAV, and Combined) the effectiveness data was input from the mission level modeling.  The mission effectiveness data included the total tanks and TELs killed, the total number of assignments to each target type, the kill rate per assignment by target type, aircraft attrition in the mission area, and the tactical ballistic missiles launched.  The goals of the campaign were to kill 90% of the TBM launchers and 40% of the reserve unit tanks.  Killing TBM launchers was the first priority and killing the reserve tanks was the second priority.  In the Campaign phase, the model “flew” the sorties for 6 hour periods and calculated the targets killed.  The model continued executing the campaign until the goals for the campaign were complete.  The output of the model included the total number of periods required, the aircraft attrition, and the targets killed by type and period.  Since the desired Measure of Effectiveness (MOE) for the experiment was the total strike aircraft required to meet the goals of the campaign over a fixed duration, the model was run over a number of iterations for each alternative.  This was accomplished by rerunning the model with the quantity of strike aircraft varied.  The MOE required for the cost modeling was derived from the run for each alternative.The purpose of the Airlift Capabilities Assessment Simulation (ACAS) was to determine the throughput for the airlift system, based on available aircraft, airfields, and system constraints.  ACAS also determined the time required for a given unit or specified equipment to be deployed to theater and the airlift assets required to support a given unit.  ACAS required inputs that included the available airlift aircraft, capabilities and constraints on airfields included in system, and a description of the load to be transported. ACAS provided the outputs of time and assets required to provide requested airlift.  Typical output from the campaign level analysis is shown in figure 3.The AFRL DSE experiments have demonstrated the maturity of the framework and infrastructure necessary to integrate geographically distributed resources into a working collaboration.  DSE technology allows an organization to formalize current processes, build upon “best practices” and extend them when appropriate into new areas.   The AFRL research will continue to develop and apply advanced information and simulation technology in distributed environments to enable decision quality information in compressed decision cycles.  Areas of research include distributed virtual environments for decision support, High Performance Computing for faster than real-time decision making and force level simulations, enabling M&S technologies for model abstraction and mixed resolution modeling, advanced presentation technologies and  human-computer  interface technologies for information visualization.SummaryRevolutionary and evolutionary advances in information and simulation technology now provide significant opportunities to implement distributed decision support for military transformation concepts such as predictive battlespace awareness. Mission commanders need to assimilate a tremendous amount of information, make quick-response decisions, and quantify the effects of those decisions in the face of uncertainty.  Decision support tools in a distributed collaborative environment offer the capability of decomposing complex multitask processes and distributing them over a dynamic set of execution assets that include modeling, simulations, and analysis tools. Decision support technologies can semi-automate activities, such as analysis and planning, that have a reasonably well-defined process and provide machine-level interfaces to refine the myriad of information that the commander must fused. Decision Support Environments provide the framework and integrate models, simulations, and domain specific decision support tools for the sharing and exchanging of data, information, knowledge, and actions.  6.  References[1]  Jumper, John P.: “Global Strike Task Force- A      Transforming Concept, Forged by Experience”,       Aerospace Power Journal, Vol. 15, pp. 24-33,       Spring  2001.[2]  Air Combat Command  Concept of Operations for     Predictive Battlespace Awareness, November 2001.[3]  Deptula, David A.: “Air Force Transformation,       Past, Present, and Future”, Aerospace Power       Journal, Vol. 16, Fall 2001.[4]   Welshans ,J. and J. Fawcett: “White Paper on        Predictive Battlespace Awareness,” Science        Applications International Corp, December 2001. [5]   AFRL/IFSD, “Collaborative Technology        Development in the Air Force Research Laboratory,        Requirements for an Air Force Collaborative       Enterprise Environment,” January 2000.Author BiographyWILLIAM K. MCQUAY is Technical Advisor, Collaborative Simulation Technology and Applications Branch,  Information Systems Division, Information Directorate, Air Force Research Laboratory.  He directs the Electronic Concepts Simulation Research Laboratory (ECSRL) and has 32 years experience in research for advanced simulation technology and the development and utilization of digital simulation models for the Air Force development, acquisition, and test and evaluation process. Current research initiatives include distributed collaborative environment technology for simulation-aided acquisition and test process, distributed mission training, and distributed decision support environments for command and control. He received a Bachelor of Science in Mathematics from Towson University, a Master of Applied Science in Operations Research from Southern Methodist University and Master of Science in Engineering in Computer Science from  Johns Hopkins University. STEVEN T. HOBERTY is a systems engineer in the Collaborative Simulation Technology and Applications Branch, Information Directorate (AFRL/IFSD), Air Force Research Laboratory.  He is currently investigating various technologies related to collaborative enterprise environments.  He previous experience includes Senior Special Projects Engineer for the Intelligence Directorate, HQ Air Force Materiel Command (AFMC)  and senior Airborne Radar Systems Engineer and Chief technical manager - Simulation and Analysis software for the National Air Intelligence Center (NAIC.  He received his Masters of Science degree in Electrical Engineering from the University of Dayton  and his undergraduate degree in Electrical Systems Engineering from Wright State University. Approved for public release case number AFRL/IFOIPA 02-022, 11 January 2002.