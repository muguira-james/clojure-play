Synthetic AWACS Weapons DirectorS. David Kwak, Ph.D.Lockheed Martin37 North Avenue, Burlington, MA, 01803(781) 505-9545 (Voice), (781) 505-9501 (Fax)skwak@lads.is.lmco.comKeywords:Behaviors, AWACS, Behavior Architecture, Emergent Behaviors, Rational Behaviors, Complex Adaptive System. ABSTRACT: Synthetic AWACS Weapons Director (SAWD) is a C2 entity in DMT (Distributed Mission Training) environment.  SAWD was created as a part of Coyote98 event to prove a concept of automated AWACS Weapons Director function in the DMT environment while reducing man power requirement.  At the Coyote98 event, SAWD automatically coordinated two Blue strike packages to bomb Red airbases while protecting Blue airbases by scrambling Blue interceptors against the retaliating Red interceptors.  This paper discusses the functional description of the SAWD Coyote98 demo and its implementation. Especially, it explains LM's technical approach, COREBA (Cognition Oriented Emergent Behavior Architecture), adopted to cope with the complexity that is associated with pairing and guidance of Blue interceptors against Red fighters under a dynamically evolving air battle space.  During the demo, SAWD was continuously adaptive to the quickly changing state of the on-going air battle while providing best parings and guidance for Blue fighters.  It also used USAF RT (Radio Terminology) messages to control the Blue fighters, which are actually used by USAF AWACS Weapons Directors to communicate with real fighter pilots.IntroductionFigure  SEQ Figure \* ARABIC 1: Airborn Warning and Control System (AWACS)Training Air Force pilots in flight simulators at one location with pilots at another location hundreds, even thousands of miles away is an emerging requirement for Synthetic Solution for the 21st Century.  This innovative training concept is called DMT (Distributed Mission Training) and it will give the Air Force enhanced simulator training as a realistic supplement to flight training.    In order to “train like they will fight" in simulators, the DMT system needs to provide to the pilots in simulator cockpit both high fidelity synthetic wingmans, enemy targets and command and control function.  The major benefits of DMT is to give ways of providing the structured experience necessary for mission and upgrade training without tapping war assets while opening up a path that may lead to on-demand mission training.  Among many supporting assets for pilots in fight simulators, AWACS (airborne warning and control system) is a critical C2 asset, and a manned AWACS simulator approach has been a typical answer to DMT environment.  Typically, a manned AWACS simulator requires trained human AWACS Weapons Directors (WDs) who sit in front of the weapons director consoles which are excited by the network representations of combat entities on the networks.  Then the WDs communicate with radio with the pilots in fight simulators that are also connected to the same networks.  This manned AWACS simulator approach works for DMT, but it can easily upset the noble concept of DMT.  One pilot can freely get training supports by creating synthetic combat entities, such as his wingmen and enemy fighters.  However, in order to get AWACS C2 supports, the pilot has to call up a site operating a manned AWACS simulator and schedule them to get supports from a group of WDs who operate the manned AWACS simulator.  Therefore, AWACS supports can easily be a bottleneck for efficient DMT training.  The concept of automated AWACS is an obvious solution for this problem.Creating automated synthetic combating entities, such as synthetic wingman, is a technically challenging task [Laird98], but synthetic AWACS, which automatically performs C2 functions, introduces even a higher level of technical challenges.  The AWACS level of C2 usually requires consideration of n-to-n combinatorial engagements rather than one-to-one or two-to-two engagements of the case of automated synthetic fighters.  The air battle space under AWACS C2 control is also more dynamic and complex than that of fighters because it has to take into consideration of multiple engagement groups that simultaneously operate under a quickly evolving air battle space.  For example, a suddenly introduced enemy fighter can easily upset the balance of multiple engagement groups near by.  AWACS has to take into consideration of such dynamism while maintaining balances among the engagement groups under its C2 jurisdiction.  Therefore, a synthetic AWACS has to be highly adaptive to new situations but maintain stable balances across all of its C2 assets to achieve its given objectives such as protecting strike packages.Consequently, creating an automated AWACS function introduces following technical challenges:It has to handle n-to-n combinatorial problem.It has to be always adaptive to rapidly evolving air battle space.It has to maintain a stable goal achievement behavior while balancing multiple engagement groups under its C2.Figure  SEQ Figure \* ARABIC 2: Synthetic AWACS Weapons Director (SAWD)Many conventionally available technologies essentially require enumerative behavior construction.  In other words, they require to predict all possible cases of behaviors before behavior construction and to implement them one-by-one [Kwak98b].  During an execution time, one behavior among the implemented is selected and executed.  Thus, if implemented, then it works.  If not,  it doesn't.  Consequently, the conventional approach requires to implement all possible cases, and the large number of implementation cases quickly makes the conventional technology bogged down, let alone the other two requirements -- agility and stability.  The above technical challenges are overcome by adopting the LM's COREBA (Cognition Oriented Emergent Behavior Architecture) technology [Kwak98a].  Synthetic AWACS Weapons Director (SAWD) was constructed with COREBA, and it capability was demonstrated at the USAF DMT Coyote98 event (DMT technology demo) [AFRL98].  This paper describes SAWD and the Coyote98 scenario.  Then it discusses the SAWD implementation and COREBA technology, and it concludes with summary, benefits and conclusion.  Synthetic AWACS Weapons Director (SAWD)The objective of Synthetic AWACS Weapons Director (SAWD) was to prove the concept of operations of an automated AWACS weapons director in DMT environment, i.e., enhancing effectiveness of DMT training while reducing man power requirement.  Thus, SAWD was designed to autonomously operate by simply connecting to DMT networks and controlling Blue fighters by sending and receiving USAF Radio Terminology (RT) messages defined for C2 Radio communication exchanges between AWACS weapons directors and human fighter pilots.  SAWD receives battle information through its radar model that processes the network representations of Blue and Red planes and creates a perceived reality picture as shown in  REF _Ref454780935 \h Figure 2.  The radar model is a simplistic model with a nominal radar range and a moving target indicator function.  Thus, any aircrafts in the AWACS radar range are represented on the radar scope as long as they move faster than a given speed threshold.  For example, enemy planes on their airstrip are not visible to the radar model although they are in the radar range.  Then SAWD, which is actually created as a form of an agent, creates its perceived world using the data from the radar model.  The metal model approach facilitates emulation of human expert thought process that human weapons directors (WD) would use. Using the perceived information, SAWD anticipates the battle scene for both Blue and Red sides before making pairing decisions.  A simplistic anticipation using a linear extrapolation was because it is too limited to capture the thought process of human weapons directors (WDs).  Human WDs do not blindly select a closest enemy from a Blue interceptor for pairing.  They anticipate a most plausible future before making a pairing decision while taking consideration of various relevant factors.  SAWD is designed to closely emulate this human anticipation process.  Based on the anticipation, SAWD makes pairing decisions.  SAWD first uses Blue airborne assets; i.e., Blue interceptors at CAP (Combat Air Patrol) stations.  If there are still unpaired bogies, then SAWD pairs them with Blue ground assets.  This paring decision later makes scramble (i.e., launch) the Blue interceptors waiting on the Blue airstrips.  SAWD is continuously performing pairing evaluation until all of the bogies are satisfactorily paired with Blue assets.  Then it makes pairing decisions.  Only if the battle status changes significantly, such as a sudden introduction of new bogies, SAWD re-initiates the above process to examine the validity of the current pairing decisions so that SAWD efficiently maintains the currency of good pairings.  SAWD, then, guides Blue interceptors to the paired bogies.  Specifically, SAWD uses USAF RT (Radio Terminology) as the means of C2 communication to Blue interceptors. For example, SAWD, named "Chalace", sends out "Eagle 21 this-is Chalace vector NW and-kill-bogey your-bogey-bears 120 for 40 miles angels 30" when the bogey is hostile and Eagle 21 is paired with the bogey which is 40 miles away with bearing 120 from Eagle 21 with altitude 30,000 ft.  Currently, SAWD understands and uses 16 RT messages.  The 16 RT messages are listed in Table 1.Table  SEQ Table \* ARABIC 1 Radio Terminologies (RTs) used by SAWDMessageFormatExampleBogey-dope<call-sign> bogey-dope Eagle21 bogey-dope Broadcast control<call-sign> group <number> <number> contacts bearing <digit> <digit> <digit> range <number> miles bullseye heading <digit> <digit> <digit>Chalace group 42 2 contacts bearing 2 7 0 range 40 miles bullseye heading 0 9 0Close control<call-sign> this-is <cal-sigh> vector <compass-direction> for-bogey your-bogey-bears <number> for <number> miles angels <number>Eagle21 this-is Chalace vector w for-bogey your-bogey-bears 270 for 40 miles angels 30Confirmed-bandit<call-sign> this-is <call-sign> bogey-is-confirmed-banditChalace this-is Eagle 21 bogey-is-confirmed-banditConfirmed-friend<call-sign> this-is <call-sign> bogey-is-confirmed-friendChalace this-is Eagle 21 bogey-is-confirmed-friendVID<call-sign> this-is <call-sign> vector <compass-direction> and-id-bogey your-bogey-bears <number> for <number> miles angels <number>Eagle21 this-is Chalace vector e and-id-bogey your-bogey-bears 90 for 40 miles angels 30Enroute-to station<call-sign> enroute-to Eagle23 enroute-toJudy<call-sign> judyEagle21 judyKill-bogey<call-sign> this-is <call-sign> kill your-bogeyEagle 21 this-is Chalace kill your-bogeyOff-station<call-sign> off-stationEagle21 off-stationOn-station<call-sign> on-stationEagle21 on-stationLaunch alert<call-sign> this-is <call-sign> launch-alertEagle21 this-is Chalace launch-alertState-message<call-sign> <int> alpha <int> bravo <int> minutes Eagle21 2 alpha 2 bravo 60 minutesTactical control<call-sign> this-is <call-sign> your-bogey-is-at bearing <digit> <digit> <digit> range <number> miles angels <number> heading <digit> <digit> <digit>Eagle 21 this-is Chalace your-bogey-is-at bearing 1 2 0 range 10 miles angels 15 heading 2 7 0Vector and kill<call-sign> this-is <call-sign> vector <compass-direction> and-kill-bogey your-bogey-bears <digit> <digit> <digit> for <number> miles angels <number>Eagle 21 this-is Chalace vector NW and-kill-bogey your-bogey-bears 120 for 40 miles angels 30What-State<call-sign> this-is <call-sign> what-stateEagle 21 this-is Chalace what-stateThen SAWD continuously monitors the course of action executed by Eagle 21 until it receives "Judy" from Eagle 21.  Then SAWD immediately stops sending its guidance message.  The Judy message means that Eagle 21 has the bogey on its radar scope and it believes that it can intercept the bogey by itself.  Thus, at this point, SAWD releases its interception control.  However, SAWD does not quit monitoring the engagement process of the Blue interceptor.  Sometimes, the interceptor looses the bogey from its radar screen, and calls for "Bogey dope".  In this case, SAWD re-vectors the interceptor.  This is usually possible because the AWACS radar has simply better than that of the interceptor.  Specifically, the re-vectoring is performed by sending a close control message.  For example, "Eagle 21 this-is Chalace your-bogey-is-at bearing 1 2 0 range 10 miles angels 15 heading 2 7 0".   SAWD simultaneously handles multiple engagements and each interceptor might have different engagement states.  Some of them already called "Judy" and others are flying toward the paired bogies.  Some might have just called "Body Dope".  SAWD requires handling them independently while maintaining the overall objectives such as protecting Blue strike packages while guarding blue airbases from possible enemy invasions.  Certainly, SAWD job is a complex and complicated one.  Coyote98 SAWD Demo ScenarioFigure  SEQ Figure \* ARABIC 3 : SAWD Scenario for Coyote98The SAWD capability was successfully demonstrated at the Coyote98 event at Air Force Research Lab in Mesa AZ, which was one of the DMT (Distributed Mission Training) technology demonstrations.  At the demo, SAWD performed C2 functions for Blue fighters in an OCA (Offensive Counter Air) scenario.  The scenario and its timeline are shown in  REF _Ref454780965 \h Figure 3.Specifically, the scenario was designed taking 45 minutes to complete and involved total 92 planes including Red and Blue interceptors and bombers in a 200x200 mile space.  It simulated an imaginary air battle near the Kuwaiti area.  Among the 92 planes, 40 of them were Blue interceptors under the C2 of SAWD.  Each side had three air bases -- X, Y, Z for the Red and A, B, C for the Blue.The scenario starts with sending out 12 Blue sweepers (interceptors) from their CAP positions (0,1,2).  Short after these sweepers movement, the enemy launches 4 Red interceptors from the Z air base to counter the Blue move (2 minutes from StartEX).  Soon after the initial launch, 16 additional Red interceptors are added to intercept the Blue sweepers (at 6 minutes).   While the Blue sweepers and the Red interceptors are getting closer for the first air engagement, 2 Blue strike packages are formed by launching bombers and interceptors (i.e., escorts) from A, B, C Blue airbases (at 10 minutes).Soon the Red and the Blue start their air battle.  This happens approximately 16 minutes after the scenario starts.  Because of the superior capability of the Blue to the Red, the Blue eventually clean up the Red interceptors while making passages for the Blue strike packages.  However, at 20 minutes, the Red initiate counterattack by launching 16 Red planes to attack the Blue airbases.  This happens because the Blue misses attacking the X Red airbase.  As soon as the hostile action is detected by SAWD, SAWD pairs them with the Blue ground assets because all of the air assets have been committed.  The Blue ground assets, total 12 interceptors, are distributed to both the A and the B airstrips.  Because SAWD uses a 1-to-1 force ratio policy to intercept enemy fighters, it flushes (i.e., launches) all of the 12 interceptors on the ground.  While the Blue interceptors are engaging with the Red, the Blue strike packages return to the Blue bases.  This concludes the 45 minute scenario.The uniqueness of SAWD is its ability to execute a given scenario adaptively.  As mentioned above, SAWD enforces the force ratio policy.  Thus, if 6 Red planes were launched to attack the Blue, then SAWD would scramble 6 Blue planes rather than 12 Blue planes.  Additionally, if some of the Blue air assets becomes available after defeating all of the Red interceptors, then SAWD uses them also to meet the policy.  In this case, obviously less Blue ground assets would be used.  This unique adaptive capability of SAWD directly inherits from COREBA, the core implementation technology for SAWD. SAWD Demo ImplementationFigure  SEQ Figure \* ARABIC 4: SAWD Demo Setup with AirSF and JointSAF for Coyote98During the Coyote98 demo, SAWD actually controlled synthetic fighters because the approach minimized resource usage for executing a 92 planes demo scenario without effecting the main purpose to prove the concept of SAWD.  Specifically, SAWD sent and received RT (Radio Terminology) messages listed in  REF _Ref454790717 \h Table 1 to command and control the synthetic fighters.  The actual demo setup is shown in  REF _Ref454781009 \h Figure 4.In  REF _Ref454781009 \h Figure 4, each box represents a Pentium II 400 MHz PC running Linux operating system.  Each CPU had at least 256Mbytes main memory and 4 Gbytes hard disk driver.  All of them were connected to the AFRL LAN which was 100 BaseT Ethernet.  As shown in  REF _Ref454781009 \h Figure 4, SAWD ran on one of the Linux PCs.  Four of them were allocated to generate 40 Blue AirSF (Air Synthetic Forces) planes.  Two Linux PCs were used to create 52 Red JointSAF (Joint Semi Automated Forces) planes.  DIS 2.04 was adopted as a common network protocol on the LAN because it was readily available at the demo time for all of the participating systems.  Red JointSAFs essentially generated entity state PDUs and the SAWD's radar model processed the PDUs to provide simulated radar returns to the COREBA SAWD agent.  The RT messages were also encapsulated in DIS Radio communications protocol, commonly called radio PDUs.  Precisely speaking, the radio PDU is a legacy SIMNET terminology.  In DIS 2.04, transmission of one transmitter PDU is followed by a signal PDU, and the signal PDU actually contained one RT message.  SAWD was implemented with COREBA that is depicted as a pyramid in the COREBA SAWD Agent box, and it exchanged RT messages with AirSF Soar agents.  AirSF is an existing entity level computer generated force (CGF) developed for the Synthetic Theater of War (STOW) which exhibits high fidelity individual behaviors of AF SAF (Air Force Semi Automated Forces).  The Blue AirSF's core implementation technology was Soar [Laird98] while the Red were implemented with JointSAF which is essentially FSM (Finite State Machine) based ModSAF (Modular Semi Automated Forces) [Kwak 95].  Although the demo scenario was originally planned to exercise all of the 16 RT messages, AirSF Soar agents could not properly execute some of the messages, such as VID (Visual Identification).  Thus, during the actual demo, VID process was abandoned while forcing SAWD to treat any bogeys detected by the SAWD radar model as hostile enemies.  Thus, SAWD called for Blue AirSFs to intercept them without VID.  The 10 RT messages actually used are: Vector and Kill, What State, Tactical Control, Launch Alert, Judy, Bogey dope, State message, On Station, Off Station (Return to Base), En route to station.  When the Blue interceptors arrived at their CAP (Combat Air Patrol) stations, the Blue interceptors transmit On Station message to SAWD.  SAWD then inquired with what state message.  The Blue interceptors responded with state message composed with information about missiles (both radio guided and heat sink missiles) and fuel amount in an estimated play (flight) time.  A typical state message was Eagle21 2 alpha 2 bravo 60 minutes.  This means that Eagle 21 has 2 radio guided missiles and 2 heat sink missiles with fuel amount equivalent to 60 minutes fight time.  This information assisted SAWD to make proper pairing decisions.  As discussed before, in the demo, limitation of AirSF makes all of bogeys originating from the enemy territory treated as hostile enemies.  Thus, when pairings were determined, SAWD skipped a VID step and SAWD sent vector and kill messages to guide the Blue AirSFs until receiving Judy message.  If the Blue AirSF sent out Bogey dope message due to the radar contact lose with the pursuing enemy, SAWD resumes its guidance to the Blue AirSFs by sending, at this time, Tactical Control message until receiving Judy message again.  When the bogey was killed, the Blue AirSFs returned to the CAP station and waited for further guidance from SAWD.Implementation of SAWDCOREBA integrates three types of behavioral modeling techniques in the overarching behavior architecture while taking advantage of the levels of abstraction as shown in  REF _Ref454781123 \h Figure 5.  It uses three specific techniques -- rule-based expert systems, complex adaptive (or complexity theory-based) systems and object oriented systems as shown in  REF _Ref454781123 \h Figure 5.  The use of hybrid systems of this type provided powerful methods to model human behavior, and the capabilities had been demonstrated in various AF related projects including DARPA JFACC after next program [Kwak99].  The network interfacing approach in  REF _Ref454781123 \h Figure 5 also allows for a straight-forward and natural integration to existing systems such as F15/F16 manned simulators, Soar AirSF and JointSAF without creating a unique interface while having a capability of supporting a wide spectrum of training activities.  Figure  SEQ Figure \* ARABIC 5:  SAWD implementation with the COREBA technologySpecifically, as shown in  REF _Ref454781123 \h Figure 5, the S level will be written in NASA CLIPS (C Language Integrated Production System) [Giarrantano89].  Its production rule syntax, i.e., if-then-rule syntax, will greatly facilitate capturing policies and doctrines because humans can easily describe them with a rule form.  The T level will be implemented with the Santa Fe's Swarm [Langton95], which is specially designed to support a creation of Complex Adaptive System.  The object oriented implementation with Objective C will allow for quick instantiation of a new interface to both AirSF and JointSAF by inheriting the generic SAWD interface.  The network interface approach will quickly provide the desired capabilities without intrusive and often expensive modifications on the existing systems.  Details about COREBA can be found in both later section and [Kwak98a, Kwak98b].SAWD BehaviorsAs briefly mentioned earlier, pairing multiple fighters to multiple targets and vectoring them is not a simple task because it requires anticipation of next movement of enemies.  Enemies are not just physical objects whose next movement is mechanically calculable, but intelligent beings whose behaviors are cognitively processed while taking into consideration of many factors, such as their weapons capability, their battle plan and perception about Blue forces.  As a result, their behaviors are not so mechanically apparent but demands high level of cognitive processing.  For example, one trained human AWACS weapons director (WD) usually handles up to 4 parings at a time.  Going beyond four pairings seems pushing the limit of the WD's cognition capability.  The number of factors to be considered and the dynamics associated with these factors start compounding rapidly while overwhelming the WD's cognition capability.  This section discusses how SAWD implements human-like (or realistic) anticipation function that is crucial for supporting good target pairings.  Figure  SEQ Figure \* ARABIC 6: SAWD anticipates the future based on enemy capability, intention, and perception about Blue and computes interception vector.The COREBA SAWD agent uses perceived realities constructed with the data from the radar model.  The perceived reality approach, first, facilitates achieving computational efficiency by processing only cognitively relevant factors.  Second, it enables adopting a radical approach without being limited by the physical realities.  SAWD simultaneously uses two representations per one physical plane -- one to represent the physical reality and the other for the anticipated future.  Specifically, SAWD computes a bogey's future action as following:Anticipated Red Action = f (Red platform and weapons capabilities, Known Red intention, Red's perceptions about Blue) EQ 	          (1)Using the above equation, SAWD anticipates a most feasible future of the Red, and the result is used for pairing and computing interception vectors for Blue fighters.  This concept is shown in  REF _Ref454781253 \h Figure 6.The bigger circle in  REF _Ref454781253 \h Figure 6 shows the Blue's effective engagement range expanded by AWACS, and the smaller circles of Red fighters signifies the inferior engagement capability.  Therefore, as shown in  REF _Ref454781253 \h Figure 6, although the Red fighter was followed by the Blue interceptor with the help of SAWD, the Red does not notice the situation and continue flying following its originally intended course.  If a linear extrapolation approach were used by SAWD, the anticipated interception point would be the point where the two dotted lines cross in the first figure of  REF _Ref454781253 \h Figure 6.  However, SAWD computes the interception point differently.  The series of the figures tells how actually SAWD anticipates and computes an interception vector.  Specifically, SAWD explicitly considers the disparity of capabilities between Red and Blue in its perceived world.  Thus, the Red fighter cannot recognize the Blue fighter's hostility until the Blue fighter enters its recognition range.  Then SAWD uses the Red's general intention: i.e., either hostile or defensive to anticipate .the Red's reaction.  Depending on the intention, the Red would either fly toward the Blue fighter or fly away from it.   REF _Ref454781253 \h Figure 6 depicts a hostile case.  Thus, the Red and Blue fighters finally meets head-to-head as shown in the fourth figure.  Then SAWD determines the interception point and vectors the Blue interceptor accordingly.  Please note that the series of anticipations are only performed in the perceived world of the SAWD agent.  Only moved are the anticipated realities of both Blue and Red fighters.  The anticipated realities are re-computed whenever needed.  Figure  SEQ Figure \* ARABIC 7: Screen Short of SAWD Perceived World (portion)A portion of the screen shot of the SAWD perceived world is shown in  REF _Ref454798653 \h Figure 7.  It clearly shows two representations for each plane used in the SAWD perceived world.  For example, there are two dots labeled with SweepA21s.  The bright one is the anticipated one, which is in the middle of the figure, while the dimmer one actually represents the known physical reality of SweepA21 at the upper right corner.  COREBA (Cognition Oriented Emergent Behavior Architecture)COREBA is a behavioral modeling technology for next generation CGF systems without many of the fundamental limitations usually associated with conventional behavior implementation technologies.  Through the use of a new hybrid paradigm, it makes possible the construction of a CGF whose behavior closely resembles that of a human combatant individually and in teams. COREBA's unique cognition oriented paradigm, proven theories, and supporting architecture allows for the construction of CGF behaviors that are continuously adaptive while maintaining military rationality [Kwak98b].  Implementing human-like CGF behaviors requires huge and complex behavioral space of today’s simulations. Its sheer size quickly bogs down conventional approaches.  Thus, many of CGF behavior problems, such as expensive to construct and poor performance, are reported.  However, in reality many of the problems may not really be intrinsic to CGF behaviors, but are simple by-products of conventional behavior implementation technologies.  COREBA could overcome many of the known problems by constructing a cognitive CGF entity while taking advantage of multiple techniques from various research communities including Artificial Intelligence, Complex Adaptive Systems and Object Oriented Programming.The internal organization of the COREBA is shown in  REF _Ref454781331 \h Figure 8.  The three level architecture of COREBA allows for achieving a unique behavioral characteristic  -- rational and adaptive.  That is, it stably achieves a given goal while being dynamically adaptive to changing situations.  This behavioral characteristic is  achieved by the interactions of the Strategic (S) level and the Tactical (T) level.  Policies and doctrines of human military operations are implemented as meta behaviors in the S level, and the meta behaviors guide the behavior generation mechanism in the T level.  The mechanism produces emergent behaviors that are synergistically generated through self-organization (or bottom-up synchronization) process.  Thus, COREBA makes highly adaptive behaviors that rationally confirm the given policies and doctrines.  The E level provides a proper interface to other external CGF so that other systems easily interact with COREBA's rational (stable) and adaptive (agile) behaviors.Figure  SEQ Figure \* ARABIC 8: Three level COREBA architecture and behavioral characteristics of each levelCOREBA can be applied to problems in a number of ways.  As a straight behavior simulation architecture, COREBA instantiations can produce realistic human behavior simulations.  The architecture, by its very nature, mimics the human thought process.  Therefore, it is easy to instantiate COREBA in the form of tools that help people to think.  COREBA agents can be designed to operate at different levels, from low level behavior simulations to high-level decision-making aids.  A collection of agents can be assembled to form a nested command hierarchy.  Varied applications are possible because the structure of a COREBA agent closely matches that of the military command structure.  Therefore, it naturally supports applications with military utility.  It has been applied for demonstration of DMT synthetic AWACS [AFRL98], DARPA JFACC planning tool [Kwak99], multi resolution tank company commander, strike air and joint air simulations. Summary, Benefits and ConclusionCreating automated AWACS function introduces technical challenges.  The high level C2 functions require to consider n-to-n combinatorial engagement relationship under a rapidly evolving air battle space.  Thus, conventional enumerative behavior representation approaches have been quickly bogged down by the sheer complexity and the dynamism.  To meet the technical challenges, Lockheed Martin’s research and development team adopted the LM's COREBA technology and developed automated synthetic AWACS weapons directors (SAWD) for use of the DMT environment.  Especially, COREBA, the core SAWD implementation technology, allows for coping with the combinatorial behavioral complexity and the dynamism.  Its stable but agile behavioral computation paradigm facilitates implementation of realistic AWACS weapons directors who performs anticipation, paring, intercept guidance and overall air battle management to make Blue fighters collaborate.The SAWD capabilities were demonstrated during the Coyote98, USAF DMT technology demo.  The main purpose of the demo was to prove the SAWD concept (unmanned AWACS) -- reducing supporting man-power requirement for training pilots under DMT environment while enhancing training effectiveness.  Otherwise, C2 supports would be required from manned AWACS simulators which usually requires 5-10 operators per simulator.  During the demo, SAWD could manage 10 equivalent human weapons director's workload.  The RT message traffics exchanged between SAWD and the Blue fighters during the demo were captured and examined by military subject matter experts.  They agreed that the message traffics were realistic and reasonably close to what human weapons directors would do during the given scenario execution.  Additionally, SAWD demonstrated its robustness during the demo while overcoming unexpected scenario execution abnormalities.  One of them was an unexpected machine crash of simulating Blue fighters.  Even so, SAWD performed flawlessly by treating the incidence as a temporally radar malfunction.  When the machine started re-generating the simulated Blue fighters, SAWD picked them up as becoming available and resumed its controls.  The smooth behavior transition exhibited by SAWD during the demo was as convincing as human weapons directors would do.  The robust behavioral characteristic of SAWD directly owes the COREBA's emergent behaviors that allow for non-enumerative behavior implementation.  Although the specific case, loss of Blue fighters due to a machine crash, was not explicitly programmed in SAWD, COREBA could be quickly adaptive to the unforeseen situation and maintain its operational integrity without showing off stupid behaviors or, even worse, crashing itself.The concept of SAWD, which is an automated AWACS with human-like behavioral performance while requiring virtually no direct human involvement, opens up many new possibilities.  It obviously facilitates investigation, testing and evaluation of various new tactical C2 processes and architectural candidates.  For example, one of the last air battles with IRAQ required multiple of AWACS to cover the air battle space.   SAWD can allow for re-create the air battle with minimal human operator involvement, and what-if type of evaluations of new and existing AWACS policies and tactics can be facilitated.   New technologies, weapons capabilities and operational concepts are rapidly emerging as we approach 21st century.  The 21st century AF will be greatly benefited by them.  COREBA SAWD is such an example that harmoniously integrates newly emerging technology and operational concept while supporting AF critical needs by providing an easily re-configurable testing and evaluation environment with reduced cost and man power requirement. AcknowledgementThe SAWD project was funded by USAF XOCA.References [AFRL98]	AFRL-Mesa, Cognition Oriented Emergent Behavior Architecture  (COREBA), Coyote98 Handout, AFRL, Mesa, AZ, Nov. 3-5, 1998. [Giarrantano89]	Giarrantano, J., and Riley, G., (1989) Expert Systems, PWS-Kent Publishing Company, Boston, MA, 1989. [Kwak95]	Kwak, S., "A Comparison Study of Behavioral Representation Alternatives", Proc. of 5th conf. on Computer Generated Forces and Behavioral Representation, Institute for Simulation and Training, Institute for Simulation and Training, Orlando FL, May 9-11, 1995, pp. 529-539.[Kwak98a] 	Kwak, S. D., " COREBA (Cognition Oriented Emergent Behavior Architecture)", Proc. of 7th conf. on Computer Generated Forces and Behavioral Representation, Institute for Simulation and Training, Institute for Simulation and Training, Orlando FL, May 12-14, 1998.[Kwak98b] 	Kwak, S. D., “A Multiple Paradigm Behavior Architecture: COREBA (Cognition Oriented Emergent Behavior Architecture)”, Proc. of 1998 Fall Simulation Inter-operability Workshop, SISO, Orlando, FL, Sept. 14-18, 1998. [Kwak99] 	Kwak, S.D., "Application of Nonlinear Dynamic Behavior Paradigm to the JFACC Force Selection Problem," Proceedings of the 8th Conference on Computer Generated Forces and Behavioral Representation, IST, University of Central Florida, Orlando, FL, May, 11-13, 1999. [Larid98]	Laird, J. E., Jones, R. M., Nielsen, P., " Lessons Learned From TacAir-Soar in STOW", Proc. of 7th conf. on Computer Generated Forces and Behavioral Representation, Institute for Simulation and Training, Institute for Simulation and Training, Orlando FL, May 12-14, 1998. [Langton95]	Langton, C., Minar, N., Burkhart, R., The Swarm Simulation System: A tool for studying complex systems, on-line documentation at http://www.santafe.edu/projects/swarm/swarmdoc/swarmdoc.html, Santa Fe Institute, 1995.S. David Kwak has conducted research and development of behavior representation and software system architecture for DoD M&S (ModSAF) and DoD robot projects (DARPA-OSU-Adaptive Suspension Vehicle, NPS-Autonomous Underwater Vehicle) for the last 19 years.  He received PhD from Ohio Sate University in 1986.  Before joining Lockheed Martin in 1993, he was a professor at Naval Postgraduate School.  He is currently leading research and development efforts for advanced behavior representation and simulation architectures at Lockheed Martin.   The Coyote98 demo was a classified demo.  Thus, the actual Coyote98 screen shot is not available, but the portion of the scene is recreated for this publication.