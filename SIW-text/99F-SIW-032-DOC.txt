Fidelity Requirements Specification: A Process Oriented ViewManfred RozaDelft University of Technology, Fac. Aerospace EngineeringKluyverweg 1, 2629 HS, Delft, The Netherlands HYPERLINK mailto:z.c.roza@lr.tudelft.nl z.c.roza@lr.tudelft.nl,  HYPERLINK mailto:roza@fel.tno.nl roza@fel.tno.nlJeroen Voogd & Hans JenseTNO Physics and Electronics LaboratoryP.O. Box 96864, 2509 JG, The Hague, The Netherlands HYPERLINK mailto:Voogd@fel.tno.nl voogd@fel.tno.nl,  HYPERLINK mailto:jense@fel.tno.nl jense@fel.tno.nlPaul van GoolIllgen Simulation Technologies, Inc.130 Robin Hill Road, Suite 200, Goleta CA 93117HYPERLINK "mailto:pvangool@illgen.com"pvangool@illgen.comKeywords:Fidelity, FDM-ISG Conceptual Framework, Simulation Requirements, Conceptual Modelling, FEDEP, VV&AABSTRACT: In the report from the SISO Implementation Study Group on Fidelity Definition and Metrics (FDM-ISG) simulation fidelity is put forward as a major tool for the development and validation of simulations. Critical in both activities is the usage of well-defined fidelity requirements. Fidelity requirements represent the level of realism the simulation must display in order to fulfil the user’s needs and objectives. Without being able to specify them formally, fidelity’s potential as a validation technique or a tool for making design decisions becomes questionable.This paper discusses the role of fidelity requirements in the simulation development process and proposes a structured approach for the identification, specification and validation of fidelity requirements. The approach presented here builds on a previous paper describing a fidelity management process overlay onto the federation development and execution process (FEDEP) and provides a more detailed view of several activities from this overlay concerning fidelity requirements characterisation and usage. Much emphasis is placed on how to utilise the recent achievements of the FDM-ISG in specifying better simulation requirements. IntroductionThe report from the Fidelity Definition and Metrics Implementation Study Group (FDM-ISG)  REF _Ref422627242 \r \h [5] presented at the Spring 99 Simulation Interoperability Workshop, is a milestone in the development of a robust modelling and simulation theory. The glossary, concepts and conceptual framework developed by this study group are a true step forward in achieving general consensus and understanding on how to define, characterise and objectively quantify simulation fidelity.Fidelity is formally defined by the FDM-ISG as: ‘The degree to which a model or simulation reproduces the state and behaviour of a real world object or perception of a real world object, feature, condition or standard in a measurable or perceivable manner’. Six major concepts or components of fidelity have been identified to characterise or to quantify the fidelity of a model or simulation. These rather abstract defined components are resolution, error, accuracy, sensitivity, precision and capacity. The semantic relationships between these fidelity concepts and other related concepts such as tolerance, reality, referents, fitness and validity have been outlined by the FDM-ISG in a proposed conceptual fidelity framework.Fidelity is put forward by the FDM-ISG as a major tool for the development and validation of simulations. Critical in both activities is the usage of well-defined fidelity requirements. Fidelity requirements represent the level of realism the simulation must display in order to fulfil the user’s needs and objectives. Without being able to specify them formally, fidelity’s potential becomes questionable. What is needed is a structured approach to identify, specify and validate fidelity requirements.This paper describes the ongoing work on the development of a fidelity management process overlay onto the FEDEP model  REF _Ref448891373 \r \h [12] and summarises the results achieved to date. The paper will start by defining fidelity requirements and their relationship with other system requirements. Some common requirements engineering methods are presented to examine their possible suitability for fidelity requirements specification. The paper will continue with a summary of several previously published constructs for specifying fidelity requirements. We will then describe our approach towards the identification, specification and validation of fidelity requirements. This structured approach to fidelity requirements specification provides a more detailed view of several activities from the fidelity management process overlay concerning the characterisation and usage of fidelity requirements. What are Fidelity Requirements? Why Do We Need Them?Simulations are commonly developed under the concept that a simulation fitness for purpose or validity equates to achieving the highest degree of realism as possible. Previous research ( REF _Ref448891248 \r \h [1],  REF _Ref448891263 \r \h [6],  REF _Ref448891286 \r \h [8],  REF _Ref448891384 \r \h [13]) on fidelity issues demonstrates that this common practice of implementing ‘all you can afford’ levels of fidelity in a simulation is not always the most correct and cost-effective approach to address the question of how much fidelity is required. The importance of this major fidelity question is also stressed and restated by the FDM-ISG  REF _Ref422627242 \r \h [5] as ‘what aspect should be simulated and how well to serve the simulation purposes and objectives best’. These notions are consistent with the general observation that the purpose of the simulation and context in which the simulation is used are not always the driving force behind the simulation development, as it should be  REF _Ref448891384 \r \h [13]. Historically, the question of ‘how much realism or fidelity is good enough for our needs’ has been the main driver behind fidelity research. This question is the prime reason why people have been wrongly using the term fidelity as a synonym for fitness for purpose. Because simulations are abstract representations of some part of reality, the answer to this question states an important set of requirements for simulation systems, which should guide its development. These types of requirements refer to the term ‘fidelity requirements’ as used throughout this paper and can be defined as: ‘A formal description of the level of realism a model or simulation must display in order to achieve or to fulfil the needs and objectives of the user of the model or simulation’. This definition is consistent with the definitions for ‘fidelity’ and ‘user’ provided by the FDM-ISG glossary. The systematic process of developing formal fidelity requirements is referred here as fidelity requirements specification. The usage of fidelity as a technique for validation or a tool for making design decisions only makes sense if the fidelity requirements have been deduced from the simulation user’s needs and objectives. These needs and objectives define the simulation context and purpose.For example, validation is described  REF _Ref422627242 \r \h [5] as: ‘the process of determining the degree to which a model or simulation is an accurate representation of the real-world, or some other meaningful referent, from the perspective of the intended uses of the model or simulation’. This process thus consists of primarily two steps: measurement of the current level of realism or fidelity of the simulation against a referent, and the evaluation whether this measured fidelity level is good enough for the intended use.  This process can only be properly executed when both a suitable referent and a specification of the required level of fidelity (fidelity requirements) are available.Fidelity Requirements and System Requirements Engineering Every development of a new system ( REF _Ref451053049 \r \h [2],  REF _Ref448892859 \r \h [7],  REF _Ref448892867 \r \h [9]), including simulation system development, starts with the identification of the user needs that arise from a problem, question or deficiency and the desire for a system that addresses this problem, question or deficiency. These identified user needs form the basis for the establishment of a set of system requirements which serve as a referent or input criteria for the actual design, implementation and evaluation (VV&A) of the system under development.  The activity of determining this set of system requirements is commonly known as requirements engineering and constitutes a base line from which all other subsequent steps of the development process evolve.This chapter focuses on the relationship between fidelity requirements and the general requirements engineering process. This is established by examining several classes of requirements, the generic requirements engineering process framework and commonly used techniques.Classes of RequirementsThe term ‘requirement’ has many different interpretations and there are even more ways of specifying it. Therefore requirements could describe many things including system objectives and user needs (also called user-requirements), behaviour specifications, system properties, development constraints, or combinations thereof.Traditionally in systems engineering  REF _Ref448892867 \r \h [9], requirements are defined as statements of what the system should do rather than how it should do it. This means that such a specification defines the desired services or functions the intended system must offer to satisfy the user’s needs. Requirements of this type are generally classified as functional requirements. In the case of simulation systems, the prime service offered to its user is the simulation of some part of the real world or simuland  REF _Ref422627242 \r \h [5]. A specification of useful behaviour for a simulation thus concerns a description of the level of fidelity the simulation system must exhibit. Fidelity requirements form the major part of simulation functional requirements but there are others as well to be able to fully support the intended use of the simulation. These requirements may include simulation management functions (start, stop, freeze and monitoring the simulation), data logging functions, educational functions (automatic evaluation of student performance, changing simulation scenario, etc.) Nowadays it is emphasised that specifying requirements in terms of only a functional specification is a too simplistic approach  REF _Ref448892859 \r \h [7], resulting in less or no attention to other aspects such as identification of real user needs and the environment in which the system should operate. These other classes of requirements are often classified as non-functional and enterprise requirements. Although the distinction between these classes and the functional requirement class is often not clear, they are useful during the requirements engineering process because they identify different areas of concern.Non-functional requirements describe external constraints that the system must meet. Because they limit the solution space, non-functional requirements have effect on the achievable fidelity of a simulation. Non-functional requirements are specified by the IEEE-STD-830-1993 in terms of performance, external interfaces, development constraints, resources and quality attributes. Due to the nature of simulation systems, performance requirements of simulations are tightly coupled to simulation fidelity. Therefore fidelity requirements should also address those non-functional aspects affecting the run-time simulation behaviour i.e. fidelity, and in particular performance constraints. The effect of performance and time characteristics on fidelity is something that is currently not adequately addressed by the FDM-ISG framework.System Requirements  Engineering Process Model The requirements engineering process is a structured set of iterative activities, which provide a guideline to derive requirements through analysing the problem at hand, documenting the resulting observations in a variety of formats and checking the correctness of the gained understanding. From a high-level view this process contains the following activities ( REF _Ref448892859 \r \h [7],  REF _Ref448892867 \r \h [9]): elicitation, analysis, specification, negotiation and validation of requirements ( REF _Ref456670676 \h Figure 31). Praxis shows that requirements engineering is not a front-end process but is interlaced with design activities  REF _Ref448892859 \w \h [7]. Some general system architectural considerations (not detailed design or implementation) are necessary to fully articulate all system requirements. A distributed simulation should for example conform to the HLA standard i.e. utilise the RTI in some way, or incorporate a legacy simulation from the DIS era as one of its federates. EMBED CorelDraw.Graphic.8  Figure  STYLEREF 1 \s 3 SEQ Figure \* ARABIC \s 1 1 Requirements Engineering Process Model Requirements Elicitation In order to provide a formal specification of a system, the goal of requirements elicitation is to determine the true user needs and to gain relevant knowledge concerning their problems. Requirements elicitation has four knowledge dimensions  REF _Ref448892859 \r \h [7]:Understanding the needs, objectives and constraints of the system users. For simulation systems this means identifying and understanding the problem at hand, true user needs and true user objectives. Environment understanding. A system is mostly part of a larger system or environment in which they fulfil a specific role. The way in which the simulator is utilised in this system determines its required level of fidelity.Application domain understanding. This understanding is of vital importance for simulations since it is only possible to make a useful representation of a certain part of reality if one understands that reality.Problem domain understanding. The application domain knowledge is further expanded and specialised for the current problem.  For simulation development, this means the identification of those aspects of (perceived) reality or a specific real-world description (referent) which are necessary to address the problem statement and user needs (i.e. level of realism required to support the simulation purpose).Requirements Analysis and Specification The information obtained from the four knowledge dimensions needs to be examined, cross-referenced and combined to produce a logic and coherent whole, which is designated as the requirements specification (document or model). The contents and format should suit the following usage of requirement specifications: A blueprint or reference point for the actual design.A common understanding and agreement between the stakeholders and the system developers on what constitutes the problem.A reference point and input for the VV&A process.Since fidelity requirements are a major part of simulation system requirements and used in a similar fashion as other requirements, they should also fulfil the same desired specification properties  REF _Ref451417612 \r \h [14]: understandable by all people involved, unambiguous, correct, complete, testable, traceable and feasible. Requirements Negotiation and Validation Specifying requirements in a correct and formal fashion does not necessary imply that these are the right requirements for the intended system. Requirements validation is a process that certifies, through an extensive negotiation process, that the requirements specification of a system is suitable for its intended usage. Requirements validation is an unstructured process  REF _Ref448892867 \r \h [9] with several tasks or checks which relate directly to the desired specification properties of the previous section:Internal consistency, no contradiction between the requirements should exist (feasibility problems).External consistency, requirements should correspond to what is true in the problem domain.Non ambiguity, requirements should have only one interpretation.Minimality, include no more requirements than necessary.Completeness, all requirements necessary to meet the user needs should be contained in the specification.Redundancy, no requirement should state what is already contained in other requirements.In the previous section it was argued that fidelity requirements specifications should fulfil the general desired specification properties, therefore all presented validation tasks also apply to fidelity requirements. Especially, completeness and consistency checking are important for simulations. However, it should be noted that in practice it cannot formally be proven that a set of requirements is correct because there is no such thing as requirements for requirements. Therefore, validation can only provide a certain level of confidence that the requirements are correct.Requirements Engineering TechniquesThere exists a wide range of requirements engineering techniques ( REF _Ref448892859 \r \h [7],  REF _Ref448892867 \r \h [9]). The most straightforward technique is interviews. This technique often lacks formality and is more appropriate for obtaining the global view and general requirements. However, carefully prepared and structured interview techniques or brainstorm sessions reduce this problem. Literature ( REF _Ref448891323 \r \h [10]) and practice shows that using a closed interview approach (a fixed question/answer set) in combination with some knowledge/expert system, it is possible to utilise these techniques for specifying major fidelity requirements. An advantage of these knowledge/expert systems is their suitability for fidelity requirements validation purposes if they contain domain knowledge in terms of common fidelity characterisations and referents. Requirements reuse is another possible technique for fidelity requirements specification if a repository can be constructed that describes the relationship between fidelity requirements and simulation purpose. The FAA/JAA requirements are an excellent example of requirements reuse. Another often-used method is task analysis. Task analysis describes the way system users do their job in terms of activities they perform and how these are structured. Task analysis cannot directly yield requirements for new systems since it refers to existing systems.Prototyping ( REF _Ref448892859 \r \h [7],  REF _Ref448892867 \r \h [9]) is a technique both suitable for requirements elicitation and validation because it visualises the requirements. Furthermore it provides the opportunity to experiment with the system requirements to see the effect on the system usefulness and feasibility.Probably the most used validation techniques are requirement inspections and reviews ( REF _Ref448892859 \r \h [7],  REF _Ref448892867 \r \h [9]). Although often used, there is little information available on how these sessions are conducted. Therefore it is difficult to determine their suitability for fidelity requirements validation, but they seem to have certain potential for the validation of high-level fidelity requirements. Overview of Existing Fidelity Requirements ConstructsThis chapter summarises and discusses several published fidelity requirements constructs from previous research efforts. These constructs illustrate how fidelity requirements could be utilised in the requirements engineering practices of the previous chapter.Fidelity Analysis ProcedureThe fidelity analysis procedure is presented in R.T. Hays’s ‘Simulation Fidelity in Training System Design: Bridging the Gap between Reality and Training’  REF _Ref448891263 \r \h [6]. A workable definition of fidelity, according to Hays, should be defined in terms of a domain of interest, relative to something else and in a measurable form. A training simulation domain oriented definition for fidelity is expressed as a two dimensional measurement in physical and functional characteristics. Physical characteristics address aspects like look and feel, while functional characteristics address aspects such as the informational, operational knowledge, and stimulus and response options.4.1.2.	Overview of the Fidelity Analysis ProcedureThe fidelity analysis procedure forms a conceptual bridge between the operational situation and the training situation. Furthermore it determines the fidelity requirements for the training device or simulator. From a high-level view this procedure consist of the following sequential steps:Describing the operational situation in its functional and physical characteristics.Performing a successive task and fidelity analysis to map the operational characteristics onto the required physical and functional aspects of each task.Mapping the required physical and functional aspects onto the physical and functional fidelity requirements for the simulator, and onto non-equipment centred physical aspects of the task. Summarising the requirements into the simulator’s physical and functional fidelity configuration.Expand the fidelity configuration with instructional techniques.4.1.3.	Task and Fidelity AnalysisTask analysis is the first step in the fidelity analysis procedure to determine the requirements for the entire training situation. Based on the resulting information it should be possible to facilitate making fidelity decisions.The next step in this procedure is the fidelity analysis. Fidelity analysis uses the results of the task analysis as its input and determines the required physical and functional characteristics in order to provide the most cost-effective training. In order to do so, the fidelity analysis should be based on the best empirical data available on the relationships between simulator configurations or fidelity and training effectiveness.The information obtained from the task analysis is often difficult to extract and use in defining fidelity requirements. The fidelity analysis step should organise and document this information in a format, which is useful for simulator designers.4.2.	Fidelity Anchoring MethodFidelity anchoring is another way of forcing a systematic justification of simulation fidelity requirements and ensuring that fidelity decisions and resource investments are based on the identified uses of the simulation  REF _Ref448891286 \r \h [8].4.2.1.	Major Concepts of Fidelity AnchoringThe major objective of fidelity anchoring is to ensure that every characteristic of each component and sub-component of a simulation has the minimum degree of fidelity required by its intended application. The premise of this method is that it is possible to specify what the simulation is intended to accomplish in exact terms. Furthermore, each decision about the appearance and operation of the simulation must be justified or ‘anchored’ by a systematic examination of specific requirements. Fidelity anchoring uses three related criteria to anchor the level of fidelity: effectiveness, user acceptance and affordability. The method uses a detailed examination of simulation requirements on four key fidelity drivers:Mission Segments. This dictates the specific tasks to be performed by the operator, the system components, and the simulation components on which fidelity should be focussed.Simulation Objectives. The fidelity needed to meet the objectives should be based on the extent to which each of the identified activities must be supported.Fidelity Dimensions. The dimensions on which fidelity can be examined and evaluated are: characteristics of simulator as a stand-alone entity, the operator or team tasks to be performed and external processes or events generally arising from the dynamics of system participation in the distributed interactive environment.Simulation Components. A simulation can consist of one or more simulators, live equipment, etc. interacting as required by the evolving scenario. Simulations can thus be decomposed in several components.4.2.2.	Fidelity Anchoring Process StepsThe previously described three criteria and four fidelity drivers are combined in the single analytic process of fidelity anchoring. The ultimate goal is to determine, for each component, on each fidelity dimension, the degree of fidelity required to support the intended use of the simulation. Fidelity anchoring consist of four successive stages:Determine which fidelity dimensions are relevant to each simulation component.Determine, for each relevant combination identified in stage one, the highest fidelity required to attain the simulation objectives in any mission segment to be simulated on either the criteria effectiveness and user acceptance. Use for each relevant combination determined in stage two the highest level of fidelity to design that component.Now use the affordability criteria to determine whether all required ‘ideal’ levels of fidelity can be afforded. If not, then reverse the process to see where fidelity requirements can be loosened with least loss.4.3.	Other Fidelity Requirements ApproachesBesides the fidelity analysis procedure and fidelity anchoring method there exist several other approaches to fidelity requirements specification of which the following two are also worth mentioning. The first and the most recent fidelity requirements construct is the fitness for purpose approach developed by McDonald  REF _Ref448891323 \r \h [10]. A summary of this proposed approach is part of the FDM-ISG report  REF _Ref448891323 \r \h [10] and for the sake of brevity the interested reader is referred to this publication.The second approach, probably the oldest one, is the fidelity requirements specification framework for pilot training simulators developed by AGARD  REF _Ref448891248 \r \h [1]. Here, fidelity is divided in two classes: perceptual cues (reality as observed by humans) and objective cues (reality as observed by a non-physiological instrumentation system). This approach is a very high level framework that can be organised in the next two stages:Analyse training requirements and objectives. Here, it is assumed that each mission can be broken down in several phases. Each phase is divided into the tasks that need to be performed. It is then determined which tasks need to be trained and what training techniques need to be used.Define methods and facilities to perform training. First define objective cues that would be experienced in real entity while performing the task being trained. Next, define the perceptual cues experienced by the operator in the reality. Then determine the perceptual cues required for each of the tasks to be trained. Finally, map the perceptual cues to the required objective cues for fidelity of the physical hardware and software characteristics of the simulator.What Constitutes a Fidelity Requirement Specification?This chapter synthesises the results from previous research efforts in fidelity and fidelity requirements to determine what elements should constitute a fidelity requirement specification.Available Tools: FDM-ISG Fidelity ConceptsFidelity is put forward by the FDM-ISG as a multidimensional or umbrella concept encompassing six major components  REF _Ref422627242 \r \h [5]. These components have been defined formally in both a textual definition and a mathematical fashion. Our experiences reveal that these rather abstract definitions are not easy accessible by people not familiar with the FDM-ISG. Despite this, they are currently the best concepts available for characterising simulation fidelity. To clarify these concepts to non-insiders and how they are utilised in the rest of this paper, the following scheme has been developed.  EMBED CorelDraw.Graphic.8  Figure  STYLEREF 1 \s 5 SEQ Figure \* ARABIC \s 1 1 The FDM-ISG Simulation Fidelity ConceptsIn here detail is considered as a designated part (Entity, System, Components, Object, Process, etc.) of the real world with certain representational and behavioural characteristics.  These characteristics could be perceived directly by an observable property or by an approximating set of other observable properties. Details can be addressed at different levels of abstractions or aggregation to describe their relationships and interactions over time  REF _Ref448891384 \r \h [13]. This interaction of details is perceived through their observable properties. Resolution describes the types of detail and their hierarchical level in a model or simulation. The number of represented instances of each detail that are simultaneously represented by a model or simulation is described by the concept of capacity. Capacity relates the simulation representations to its capabilities and performance characteristics. Error, or accuracy, defines how far each represented detail by a model or simulation deviates from reality by looking at its observable properties. The magnitude of these deviations is determined by the quality of internal representations (algorithms, etc.) of each detail in a model or simulation, which is expressed by the concepts of precision (errors due to limitations of solely internal realisation) and sensitivity (errors induced by interaction).The Role of the Fidelity ReferentAccording to the formal definition of the FDM-ISG for fidelity (Chap.  REF _Ref453145589 \r \h 1), fidelity should be measured against some observation of parts of the material reality or some established approximating standard in case the simulation deals with imagined reality. This description of aspects of reality plus their true data-values for behavioural and representational characteristics form a referent or fidelity referent against which the simulation fidelity is measured. Since fidelity requirements address the required level of fidelity for a specific simulation application, their formal specifications should be firmly rooted in such a referent to avoid incompatibility problems during fitness for purpose and validation assessments. The contents of a referent will vary across the application domains, because of the differences inherent to the problems addressed by each domain and in the cultural background of people involved. However, this does not imply that the FDM-ISG concepts for fidelity will not be universal applicable, only their implementations will be different. This will limit true interoperability and reuse of simulations across different application domains but severely enhances these qualities within a domain. Elements of a Fidelity Requirements Specification A close look at previous fidelity requirements constructs (Chap.  REF _Ref453658585 \r \h 4) shows that a fidelity requirements specification can basically be viewed and addressed at two specification levels. The first level involves the mapping from the simulation purpose to a description of real-world aspects to be represented by the simulation. Furthermore, the maximum deviation from reality or tolerance of each aspect is determined to attain this simulation purpose.The second level translates these selected real-world aspects and allowed deviations to requirements for the internal realisation of the simulation i.e. specifying fidelity requirements for the constituent simulation hard and software components.An implicit premise of all these approaches is that a finite set of real-world aspects (fidelity referent) and simulation components can be identified, constructed or used in the form of a referent set. This second level view is what we refer as simulation fidelity decomposition. When viewed from a lower level this decomposition can also be considered as a fidelity requirement. The first level view is what we refer to as the fidelity requirements specification for a simulation and should contain the next recommended elements:A pointer to the used fidelity referent and any other used source. Usage of a fidelity referent is preferred because it enables external consistency of the specification (Sect.  REF _Ref453665119 \r \h 3.2.3).The real-world aspects (detail) to be represented. This involves assessment of resolution and capacity. A pointer should accompany each aspect to its initiating simulation objective to allow traceability.The behavioural and representational characteristics of each detail, together with their observable properties, tolerances to the actual values and conditions for which these tolerances should hold.Measurement methods of the observable properties. This because there are different metrics and ways to measure errors  REF _Ref448891373 \r \h [12].Timing approach: real-time, non-real-time (faster, slower).The fidelity components, sensitivity and precision, may play a role in simulation fidelity requirements but address internal representational aspects of fidelity. Therefore they will be vital for fidelity requirements at the fidelity decomposition level. Specification of simulation fidelity requirements in terms of solely tolerance as suggested by the FDM-ISG  REF _Ref422627242 \r \h [5], is considered as a limited view.Specification and Usage of Fidelity Requirements in the FEDEP The Federation Development and Execution Process (FEDEP) model  REF _Ref452815365 \r \h  \* MERGEFORMAT [3] specifies a set of general guidelines for the development and execution of HLA-based simulations. These guidelines normally need to be tailored by its users to address the specific needs of their application area. The purpose of this chapter is to determine where fidelity requirements should be specified and used in the FEDEP.  Furthermore it is examined how well the FEDEP currently addresses fidelity requirements identification and specification in its process activities. Fidelity Management Process OverlayAdditional guidelines for the FEDEP are required to assist the developer in dealing with fidelity issues and to apply recent achievements of research into fidelity optimally. The basic concepts for such guidelines have already been developed during our previous fidelity research efforts ( REF _Ref448891373 \r \h  \* MERGEFORMAT [12],  REF _Ref448891384 \r \h  \* MERGEFORMAT [13]). These guidelines or fidelity management process overlay ( REF _Ref454767219 \h Figure 61) identifies in which stages of the FEDEP, fidelity requirements are developed and used. EMBED CorelDraw.Graphic.8  Figure  STYLEREF 1 \s 6 SEQ Figure \* ARABIC \s 1 1FEDEP Fidelity Management Process OverlayFrom  REF _Ref454767219 \h Figure 61 it can be concluded that fidelity requirements are developed during the first two stages of the FEDEP. During stage three, design and development, of the FEDEP also some low-level fidelity requirements for simulation components need to be specified. Although important, this is considered as a design specification job, because its activities do not directly involve the federation users input. Instead, this stage uses the federation (fidelity) requirements as a blueprint to facilitate its design activities. User Requirements: Needs and Objectives The FEDEP can be characterised as a client-oriented development process which means that the client e.g. federation user experiences a need for a federation and pays for its development. The resulting federation is tailored only to fulfil this simulation purpose or user need. The elicitation of true needs is probably the hardest part of requirement engineering for several reasons: users have no clear idea of what they really need, users have difficulties to express needs, needs are stated in the user’s language. Needs evolve from the user’s desire to solve a problem in his current situation. A desire is what the user thinks, what is required to solve this problem. Therefore it defines what he wants or expects from the simulation. A need statement is the formal expressions of the user’s desires. This does not necessary imply that a user’s desire is what he really needs i.e. a true need. True needs may be missing from the needs statement because the user didn’t consider them as essential or assumed them to be obvious. Furthermore a need statement contains non-essential needs or wishes, which gives the user more satisfaction from the simulation.The only way to determine all true needs is by posing the ‘why’ question to the user, which directly relates to the user’s problem at hand. A common understanding of the problem and problem domain is thus essential. The first step of the FEDEP is the identification of needs and provides a need statement in terms of a full list of non-functional requirements and a small set of functional requirements (See Sect.  REF _Ref452869613 \r \h 3.1). This statement is not fully compatible with the need statement as defined above. The FEDEP need statement specifies primarily ‘what’ the simulation must accomplish within certain boundaries but not ‘why’ i.e. the identified problem and the simulation’s role in attempting to solve this problem. What a simulation is to establish, in order to satisfy the user’s needs is referred here as simulation objectives. Objectives are a set of abstract functional requirements commonly agreed and understood by the federation developer and user. Usually, objectives do not specify ‘when’ or ‘how much’ and are often expressed by high-level textual descriptions. Besides the non-functional requirements, these simulation objectives are part of the federation objectives statement (Step 1.2 of the FEDEP). Because fidelity requirements are part of the simulation functional requirements, it is here where the initial indication of the required level of fidelity must be developed.  In this stage the fidelity requirements will primarily address resolution. This means developing a set of the entities envisioned, their required behavioural and representational characteristics, interactions, cues (visual, motion, audio, etc.) provided to human subjects, tasks to be performed, etc. A course indication of accuracy and capacity, mostly in subjective terms at this stage, will also be part of an initial fidelity requirements statement. Furthermore, a first scenario may be developed to identify the required environmental and operational context of the federation.Fidelity Requirements during Conceptual Model Development The conceptual model development stage uses the output of the ‘develop federation objectives’ stage to develop the conceptual model, scenario and federation requirements. Despite a formal definition  REF _Ref422627242 \r \h [5], it is still not completely obvious how to develop a conceptual model or what should constitute a conceptual model of simulation  REF _Ref448993659 \r \h [11]. A conceptual model can be characterised ( REF _Ref422627242 \r \h [5],  REF _Ref448993659 \r \h [11]) as a conceptual or an implementation independent abstraction of those parts of the reality that should be represented by the federation. According to these publications a conceptual model should at least consist of algorithms, architecture, available data, assumptions and limitations. In requirements engineering, conceptual modelling  REF _Ref448892867 \r \h [9] is considered as the process of eliciting and modelling of real-world knowledge. Such a process should result  REF _Ref448892867 \r \h [9] in a functional specification of the application domain, in terms of static and dynamic properties, laws and rules of the application domain. Therefore, conceptual modelling can be considered as the mapping of the simulation user’s needs to a highly detailed set of functional simulation requirements  (See Sect.  REF _Ref452869613 \r \h 3.1) and even simulation specifications. Conceptual modelling and fidelity requirements specification are thus closely related processes. Both processes have certain similarities because they all start from the same basis: identifying what aspects or details of reality should be represented ( REF _Ref452815365 \r \h [3],  REF _Ref448993659 \r \h [11]). Fidelity requirements will then focus on the allowable deviations from this reality, while conceptual modelling will focus on the internal representation or how selected aspects of reality will be abstracted (simulation specification). Conceptual modelling further refines and expands the coarse fidelity requirements to a measurable set of fidelity requirements. On the other hand the conceptual model structure and contents will evolve from these fidelity requirements. A Proposed Process for Fidelity Requirements Specification (FiReS)The Fidelity Requirements Specification (FiReS) process is a guideline to assist the federation developer in deriving fidelity requirements (Chap.  REF _Ref453931533 \r \h 5) for a federation during the initial stages of the FEDEP (Chap.  REF _Ref453931612 \r \h 6). Although, its major activities are presented here in a sequential order, it should be noted that FiReS is an iterative process. Capturing True Needs and ObjectivesFiReS comprises seven major activities in the first stage, ‘define federation objectives’, of the FEDEP. The purpose of these seven activities is to identify the true user needs and to develop the federation objectives. Furthermore, these activities will result in an initial indication of the required fidelity for the federation.Get the right people involvedBefore it is possible to start developing requirements, all people who could state relevant federation requirements must be identified. Next, it must be determined when each identified person should get involved and what technique (Sect.  REF _Ref454089518 \r \h 0) must be used to elicit the requirements from that person.Elicit needs and problemsIt should be realised that the simulation development already has started before the user arrives at a federation development organisation. Experience  REF _Ref452970922 \r \h  \* MERGEFORMAT [4] shows that this preliminary phase is the place where false assumptions may easily slip into the development process. Therefore, it is important to collect all information from the user’s preliminary work. This information provides not only a basis for the elicitation process but also provides essential simulation context and purpose information. The elicitation process will evolve from acquiring global knowledge at a sponsor or management level, using informal natural language techniques, to detailed knowledge at the end-users or domain specialists level, using more formal techniques (Sect.  REF _Ref456670901 \r \h 3.3).Analyse needs and problemsAfter elicitation of the needs and problems, the application domain (naval training, aerospace research, etc.) and the type of simulation (T&E, RD&E, SBA, training, etc.) must be identified. This information provides an entry for retrieving data sources such as common standards, regulations, CMMS, knowledge bases, Subject Matter Experts (SME), literature and fidelity referents. Next, the collected needs and problems must be analysed in cooperation with SMEs, to distil the core problem at hand and the true user needs. Cause-effect analysis can be used in this task as well as some heuristics (filtering out solution-oriented statements and constraints, classification of problem difficulty, etc.). Finally, a prioritised list of needs and problems must be made, to facilitate optimisation activities such as fidelity-cost trade off. This step should thus result in a full description of the problem at hand, its environmental context and scope. Negotiate the need and problem statementThe resulting problem and need statement must be negotiated with the users to achieve a common understanding and agreement. This statement will be a textual description in natural language.Elicit constraints (non-functional requirements)Additional information concerning constraints or non-functional requirements (Sect.  REF _Ref452869613 \r \h 3.1) has already been identified in the previous steps. This step must complete this set of constraints and document them formally. Elicitation of these non-functional requirements is still an uncultivated area  REF _Ref448892859 \r \h [7]. It is unlikely to expect that achievements in fidelity will improve this, since fidelity issues primarily relate to functional requirements.Develop federation objectives This step fully utilises the current achievements in fidelity research to develop better federation objectives. Based on the knowledge elicited in step 3 (Sect.  REF _Ref453996972 \r \h 7.1.3), both a suitable fidelity referent(s) and standard(s) must be selected. This should be done in cooperation with SMEs. Both the fidelity referent (Sect.  REF _Ref453997626 \r \h 5.2) and standard should then be used to construct the first description of the required level of fidelity, which supports the formal problem and needs statement. Reuse of fidelity requirements (Sect.  REF _Ref456670901 \r \h 3.3) from similar simulation applications will be of great assistance in developing this initial set of fidelity requirements. Where possible, the formal concepts and format developed in chapter  REF _Ref453931533 \r \h 5 must be utilised, since this will enhance the mapping (traceability) of fidelity requirements between this stage and the following stages of the FEDEP.Feasibility Analysis and ValidationA feasibility study must be conducted at this stage to see if the coarse level of required fidelity is achievable within the constraints placed on the federation and its development. The prioritised list of FiReS step 3 (Sect.  REF _Ref453996972 \r \h 7.1.3) must be used to decide where some concessions to fidelity requirements could be made or where the constraints could be lessened, in case the required fidelity cannot be achieved. Users, SMEs, and federation developers should try to achieve common agreement on and to gain confidence in the fidelity requirements. Requirement checks and techniques presented in chapter  REF _Ref454853233 \r \h 3 must be used to perform this validation. Several iterations through the previous steps may be required in order to reach a valid set of fidelity requirements.Capturing Federation Level Fidelity RequirementsIn the federation conceptual model development stage of the FEDEP the coarse fidelity requirements are further refined to a set of measurable and testable fidelity requirements. The major FiReS activities in this stage of the FEDEP will guide the federation developer to developing this detailed set of fidelity requirements.Develop ScenarioIn this FEDEP sub-stage, FiReS focuses on the development of a scenario(s) that will have enough realism to support the simulation purpose. The initial scenario(s) developed in the FEDEP ‘objectives’ stage is further refined and expanded with additional entities, their behaviours and interactions (Resolution) over time. This information may be retrieved from the fidelity referent or scenario databases. Furthermore, the required number of simultaneously simulated instances of each entity (Capacity) needs to be determined here. More importantly, the required fidelity for the environmental (atmosphere, day or night, etc.) and geographical conditions, in which these entities operate, must be determined here. This is an essential topic, which is not well articulated by the FDM-ISG report.Perform Conceptual AnalysisConceptual analysis focuses on how entities should be realised ( REF _Ref452815365 \r \h [3],  REF _Ref448993659 \r \h [11]). This means that the entities and their behavioural characteristics are decomposed into a system/sub-system hierarchy. Therefore, FiReS further refines the required resolution for the federation in a more top-down fashion. For each newly identified lower-level detail, it must be determined how far its behavioural and representational properties may deviate (tolerance) from their true values in order to meet the tolerances of higher-level properties. Furthermore it should be determined under which conditions these tolerances should hold. The fidelity referent must be utilised in these activities to a great extent. All these aspects of fidelity, together with a selected timing approach, should be enough to develop the formal fidelity requirements (Sect.  REF _Ref454093861 \r \h 5.3) for the validation of the final federation.These fidelity requirements must also be used for the federation specification part of conceptual modelling stage. Federation specification comprises the selection of proper algorithms for the internal realisation of the details (entities, sub-systems, objects, etc.). Based on the assumptions and limitations of each algorithm, it can be determined under what conditions certain required property tolerance levels will be attained. In here, fidelity aspects ‘precision’ and ‘sensitivity’ play an essential role in the determination of how property errors caused by different internal representations of interacting details effect each other. Furthermore, an ideal FOM must be constructed along with an initial federation architecture in terms of ideal SOMs. These SOMs must be complemented with fidelity requirements in terms of all fidelity aspects (Chap.  REF _Ref453931533 \r \h 5), including the required fidelity for the interface between human-operators and the simulation (federate). Previously identified constraints expressing the reuse of existing models or simulations should be taken into account here in order to analyse their effect on the overall federation fidelity Develop Federation RequirementsAll the fidelity requirements identified during the previous FiReS steps must be documented here in a formal specification format (Sect.  REF _Ref454093861 \r \h 5.3) and added to the federation requirements statement. The specification must be completed with the allocation of measurement methods and procedures to determine the actual federation fidelity levels during execution, which is necessary for validation purposes. To support these measurements the FOM may probably be expanded with additional objects and interactions.Conclusions and Future researchThis paper has stressed the importance of formally specifying fidelity requirements for simulations in order to be able to fully utilising the potential of the new FDM-ISG fidelity concepts during simulation design and validation. An examination of common system requirements engineering practices demonstrated a close relationship with fidelity requirements specification. As shown by a discussion of several existing fidelity requirements constructs, fidelity requirements specification addresses basically two specification levels and requires a referent set of real-world aspects or fidelity referent.Based on our illustration of the FDM-ISG fidelity framework, a formal definition for fidelity requirements has been postulated, along with several essential elements for its formal specification. The basic activities of the fidelity requirements specification process have been presented. This process is part of the fidelity management overlay onto the FEDEP model, which is currently under development. The proposed process provides a guideline to assist federation developers in dealing with fidelity requirements identification, specification and validation in the early stages of the FEDEP model.Future research will focus on the expansion and further refinement of the proposed fidelity requirements specification process by means of a practical application. A use-case is already under construction but is not yet mature enough for presentation. This use-case is expected to provide iterative improvement of the FiReS process and feedback to FDM-ISG fidelity framework.ReferencesAdvisory Group for Aerospace Research & Development, ‘Fidelity of Simulation for Pilot Training’. AGARD-Report AR-159, AGARD: Neuilly Sur Seine, July 1981.Blanchard B.S., W.J. Fabrycky, ‘Systems Engineering and Analysis’ Third Edition. Prentice Hall: Upper Saddle River, 1998.Defense Modeling and Simulation Office (DMSO), 'Federation Development and Execution Process (FEDEP) Model, version 1.3'. Department of Defense: December 1998.Gause D.C., G.M. Weinberg, ‘Exploring Requirements: quality before design’. Dorset House Publishing: New York, 1989.Gross D.C., et. al.,  ‘Report from the Fidelity Implementation Study Group’. 99 Spring Simulation Interoperability Workshop, March 99, Paper 167.Hays R.T., M.J. Singer, ‘Simulation Fidelity in Training System Design: Bridging the Gap between Reality and Training’. Springer-Verlag: London, 1989.Kotonya G., I. Sommerville,’ Requirements engineering: Processes and Techniques’. John Wiley and Sons: Chichester, 1998.Lane N.E., E.A. Alluisi, ‘Fidelity and Validity in Distributed Interactive Simulation: Questions and Answers’. IDA Document D-1066. Institute for Defense Analysis: Alexandria, November 1992.Loucopoulos P., V. Karakostas, ‘System Requirements Engineering’. McGraw-Hill Book Company (UK): London, 1995.McDonald B. ‘A proposed process for defining required fidelity of simulations’. 98 Spring Simulation Interoperability Workshop, March 1998, Paper 234.Pace D.K. ‘Conceptual Model Descriptions’. 99 Spring Simulation Interoperability Workshop, March 99, Paper 025.Roza M., P. van Gool, H. Jense,  ‘A Fidelity Management Process Overlay onto the FEDEP Model’. 98 Fall Simulation Interoperability Workshop, September 98, Paper 083.Roza Z.C., ‘Simulation Fidelity: A preliminary study to fidelity assessment methodologies for HLA based distributed simulations’. TNO-Report FEL-98-I311. TNO Physics and Electronics Laboratory: The Hague, December 1998.Wieringa R.J.,’ Requirements engineering Frameworks for Understanding’. John Wiley and Sons: New York, 1996.Author BiographiesMANFRED ROZA is a member of the scientific staff in the Aerospace Engineering, Control and Simulation Division of the Delft University of Technology. He holds a M.Sc. (1997) in Aerospace Engineering from the same university. Currently he is pursuing a Ph.D. in simulation technology from the same university in close cooperation with the Command & Control and Simulation Division at TNO-FEL. Last year he has been one of the lead-team members of the SISO FDM-ISG involved in the development of the fidelity taxonomy and fidelity framework. JEROEN VOOGD is a member of the scientific staff in the Command & Control and Simulation Division at TNO-FEL. He holds a Ph.D. (1998) in Computational Physics from the University of Amsterdam. He has experience in modelling and simulating biophysical systems on parallel and distributed computing platforms. Currently he is involved in projects on virtual reality, joint forces operations and connecting C4I infrastructure to simulators.HANS JENSE is a senior scientist in the Command & Control and Simulation Division at TNO-FEL, and is currently the head of the Simulators Group. He holds a Ph.D. in Computer Science from the University of Leiden. He recently spent a year as principal investigator in a virtual reality environment technology project at the NASA Ames Research Center. His research interests are in general VE and distributed simulation technology, its application in the defence and aerospace fields, information visualisation and the relationship between technical and human factors issues.PAUL VAN GOOL is a Senior Engineer with Illgen Simulation Technologies, Inc. He received his M.Sc. (1992) and Ph.D. (1997) in Aeronautical Engineeringfrom the Delft University of Technology in the Netherlands. He has experience in the mathematical modelling of fixed- and rotary-wing aircraft for real-time simulation and the design and implementation of real-time distributed simulation systems. His current activities include developing distributed simulation systems for various navigation systems (GPS, WAAS and Loran-C) and various VV&A activities for the US Armed Forces. His HLA activities range from developing several federations to developing object-oriented frameworks to facilitate federation development. His research interests include parallel and distributed computing. He focuses primarily on programming paradigms and environments for tightly coupled computers and distributed simulation/modelling systems. User is used throughout the paper as specified by the FDM-ISG Glossary. This is our interpretation of capacity since no formal definition is provided by the FDM-ISG for this term.