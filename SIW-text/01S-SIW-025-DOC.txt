Engineering Collaboration on the DesktopA Proof Of Concept PrototypeJoshua P. TrainerCollaboration Technologies, Inc.138 Laurel Ridge LaneN. Kingstown, RI  02852401-295-7161jtrainer2@home.com Keywords:Simulation Based Acquisition, SBA, Collaborative Environments, Computer Aided Design, CAD, Computer Aided Engineering, CAE, High Level Architecture, HLA  ABSTRACT: Contemporary Computer Aided (Mechanical) Engineering (CAE) and Computer Aided Software Engineering (CASE) tools provide analytical models (simulations) of the real-world systems that engineers intend to build.  These tools currently support most of the stages of the product development lifecycle - from concept exploration and prototyping, to Full-Scale Engineering Development (FSED) and manufacturing.  The economic benefits of these tools, in both direct cost savings and time-to-market improvements are widely accepted.  The integration of these types of engineering tools into a Collaborative Engineering Environment (CEE) is one facet of the Department of Defense Simulation Based Acquisition (SBA) initiatives.  This paper introduces a proof of concept prototype that was developed to integrate multiple Personal Computer (PC) based Computer Aided Design (CAD) workstations into a real-time distributed Collaborative Engineering Environment over the Internet.  The paper presents the objectives of the prototyping effort, how various features of the HLA and RTI were used, the design tradeoffs and technical difficulties encountered during development, and operability issues identified while using the prototype.1. BackgroundThe joint Industry and Department of Defense (DoD) Simulation Based Acquisition (SBA) initiative clearly identifies the implications and importance of  Collaborative Environments (CE)[1] in the acquisition process.  More specifically, these Collaborative Environments represent a major facet of the SBA vision, with significant research ongoing to develop and refine the operational architecture of the Collaborative Environments concept, focusing on the utilization of a CE infrastructure by Subject Matter Experts (SME) during the development and life cycle of a system.  Concurrently, advances are being made in the definition and refinement of SBA enabling technologies and standards ( e.g., Distributed Product Descriptions (DPDs), Data Interchange Formats (DIFs), and resource repositories).  One of the cited enabling technologies is the standard technical architecture for DoD simulations – the High Level Architecture (HLA) and its Run-Time Infrastructure (RTI).  Most often referred to in the literature in the context of simulation system interoperability, HLA use in support of Collaborative Environments has been recently addressed [2][3].  The purpose of this paper is to introduce a Proof-Of-Concept (POC) collaborative engineering tool (developed as a pre-production prototype for a commercial product) that utilizes the HLA \ RTI to provide its real time distributed architecture and operating infrastructure.  The paper presents project design objectives, development limitations, lessons learned, and operability issues identified during the prototyping effort.  The prototype, referred to during development as DVI (Distributed Visio( Interactive), provides generic support for Collaborative Environments (as it is based on a multi-purpose graphics product – Microsoft( Visio().   It was developed however, with the intention of addressing the needs of a Collaborative Engineering Environment (CEE) with real-time distributed Computer Aided Design (CAD) capabilities.  2. Objectives of the Prototyping EffortThe primary objective of the prototyping effort was to create a pre-production prototype of real-time CEE Graphics\CAD application using HLA – with a commercial interest in advancing similar CEE developments.  The effort was exploratory in nature, conducted with the aim of validating the concept, and for assessing performance and identifying operability issues.  No attempt was made to utilize any of the other elements of ongoing SBA research (i.e., data format standards, data interchange formats, or reference systems architecture, etc.) in the prototype.EMBED Visio.Drawing.6Figure 2.1 The Collaborative CAD Workspace In support of the primary objective, the following high level functional requirements were identified for the prototype:Support real-time collaboration of the CAD design space (i.e., the Visio drawing) amongst two or more participants over a Local Area Network (LAN) (see Figure 2.1).Provide the capability for continuous, uninterrupted user interaction with the application program, to allow participants to independently contribute to the collaboration in a seamless manner. (Note: this capability is fundamentally different from most desktop collaboration software products which multiplex user input in a round robin fashion.)Allow for independent, collaborative operation of the Visio application program (not just serving and sharing the GUI interface).  Thus providing local application provided resources for CAD model (drawing) manipulation.Provide protection from concurrent object selection by collaborators, prohibiting simultaneous manipulation of an object by more than one participant.Provide the capacity to execute multiple  collaboration sessions (different virtual CEE workspaces) concurrently on the same LAN.3. Mapping HLA Terms to the Prototype CollaborationFor the purposes of this paper, a mapping of HLA terminology to the prototype collaboration tool and its application in test collaborations will be provided.  This mapping serves only to provide the context for communication, it does not imply any architectural recommendations for future systems:Federation – The concept of  an executing HLA Federation is directly translated to an active collaboration session.  Where active collaboration session provides real-time distributed access to a common, virtual Visio workspace. Federate – The HLA Federate is represented in the prototype as a single instance of  a DVI capable Visio running in the collaboration.  The prototype implements only one Federate application (although a production CEE would have many types of Federates).  Multiple instances are invoked throughout the network, thereby supporting the collaborative environment for each participant.Federation Object Model – The HLA Federation Object Model (FOM) represents an application specific Object Model Template (OMT) for the prototype Collaborative Engineering Environment.Simulation Object Model – Since the prototype design consists of a single application program (but multiple instances at run-time), the Simulation Object Model (SOM) is same as the FOM.4. The Development Approach The choice of implementing the Collaborative Engineering Environment using Microsoft Visio vs. other products was primarily driven by the author’s extensive experience with the automation capabilities of Visio and by budget constraints.  Another significant factor was the rich Component Object Model (COM) automation interface exposed by the Visio product.  This COM interface provides almost complete access to internal event notifications, facilitating use by the Federate application.  The availability of this interface, with its event notifications, was an enabling factor in this exploratory development.  The development approach employed by the prototype should be applicable to other Computer Aided Design (CAD), Computer Aided Software Engineering (CASE) or Computer Aided Engineering (CAE) products (e.g., AutoCAD(, Rational Rose(, Pro-ENGINEER(, etc.).   4.1 Evolution of the PrototypeThe prototype application was initially developed as a separate COM automation client application (see Figure 4.1) that interfaced with Visio Version 5.0.  The RTI baseline was the DMSO Release 1.3v4 for Windows NT.EMBED Visio.Drawing.6Figure 4.1 Separate COM Client ApplicationsDuring initial prototype testing, operability issues surfaced (with respect to concurrent user selection of objects) forcing the DVI application to undergo a significant architectural upgrade.  This modification was necessary in order to provide modal control (synchronous control) over user interaction with the Visio software.  The change  made was to update the application from an out-of-process to an in-process COM application.   In order to support this the standalone DVI application was restructured and implemented as a Visio Dynamic Link Library (DLL).    This re-architecture included the development of a selection management protocol between applications running in the collaboration.  EMBED Visio.Drawing.6Figure 4.2 Visio DLL Architecture  Additional upgrades to the application included modifications to support the DMSO RTI Release 1.3v6 and Visio 2000.5. The Design ApproachThe design approach for the prototype centered around creating an HLA adaptation layer on top of key elements within the Visio object model.  The adaptation layer provided an interface to Visio and an interface to the RTI for each object type (See Figure 5.1).   EMBED Visio.Drawing.6  Figure 5.1 HLA Adaptation LayerThe more important Visio objects supported by this layer are illustrated in Figure 5.2.EMBED Visio.Drawing.6Figure 5.2 Applicable Visio Automation ObjectsThe relationships between these objects (for the purposes of the prototype) are associative:The Visio application instance,Has documents (files) used by the application,(Drawing type) documents have Pages,Pages have Shapes, andShapes may have Connections.  (Connects are objects that form connections between 1-D shapes (lines) and 2-D shapes.)This adaptation layer provided for communication of CAD data produced (published) and consumed (subscribed) by participating DVI applications  within the Collaborative Engineering Environment (aka the Federation execution).   All attributes within the collaboration objects were designed to be independently capable of being  published or subscribed or both.  To simplify the operational characteristics of the demo, object attributes were automatically assigned publish and subscribe status.In addition to the adaptation layer components within the application, support objects were designed to handle CEE specific functionality.6. HLA Interfaces UsedThe HLA interface specification Version 1.3 supports a wide array of services for supporting real-time distributed simulation systems.  The prototype software only utilized a small fraction of these services primarily in the area of Federation Management, Declaration Management, and Object Management.6.1 Federation ManagementFederation management activities (Creation, Join, Resign) directly correlated to collaboration management.  The capacity to provide multiple named federations using a common Federation Execution Data (FED) file, provided in Version 1.3, allowed for the capacity to run multiple CAD collaborations on the same LAN using a single RTI executive.  The operational scenario for using the prototype required that collaborators new the name assigned to the collaboration, a priori.  No facilities were provided to coordinate upcoming collaboration sessions, or to provide a user selectable list of collaboration sessions to join.6.2 Declaration ManagementObject attribute publication and subscription interests were supported in order to provide distribution of the  CAD model data throughout the virtual workspace.  A mature CEE product would contain algorithms to control the publication and subscription interests in  a more meaningful way.6.3 Object Management Object Management functions (registration, discovery, and object deletion) were employed in order to propagate the creation and destruction of CAD model objects by collaborators throughout the system.6.4 Ownership Management Ownership Management functions were employed in order to support the selection management protocol.  6.1 Time Management Time Management functions were not used.  The Federation  used the default time management scheme ( “Neither Regulating or Constrained”).6.1 Data Distribution Management Data Distribution Management was not used.  All attribute communications were receive ordered and reliable.7. Observations on OperabilityThe prototype application was used many times during development in several different configurations.  Most often the entire Federation was executing on a single Windows NT machine (usually 2 instances, but up to 5).  Other sessions were LAN configurations, and one was via the Internet with one node using a Dial-Up interface.  Although extensive operability testing was not performed, some observations can be offered on the real-time collaborative environment it provided:Collaboration Session Management would be required in order to post notification of collaboration activities that are upcoming.  Perhaps the management function could be integrated with email services.An application that shows all the active collaborations running, with additional supporting information (subject, drawing name, participants, etc.) would be very valuable.Embedded chat window support would be necessary at a minimum, with  audio conferencing capabilities preferred.Session synchronization during startup (to ensure that all startup files are synchronized) would be required.Configuration management, to allow for collaboration session to be terminated and  restarted at a later date would also be required.8. ConclusionThe DVI prototype development effort has produced sufficient functionality and performance to validate (to the author) the feasibility of using the HLA \ RTI for Collaborative Engineering Environments. The opportunities for real-time collaboration at the engineering model level are exciting, particularly with high end parametric Computer Aided Engineering (CAE) systems.  An added benefit to using HLA for Collaborative Engineering Environments is in providing interoperability between disparate systems.9. References[1]	“A Road Map for Simulation Based Acquisition”, Report of the Joint Simulation Based Acquisition Task Force, (Acquisition Council Draft for Coordination)”, Joint SBA Task Force, December 4, 1998.[2]	P. Eirich, “Systems Architecture for a Low Cost Collaborative Environment for SBA Decision Making”, Spring 2000 Simulation Interoperability Workshop, March 2000.[3]	M. Brasse, M. and N. Kuijpers, “Realizing a Platform for Collaborative Virtual Environments based on the High Level Architecture”, Spring 2000 Simulation Interoperability Workshop, March 2000.	Author BiographyJOSH TRAINER is president of Collaboration Technologies, Inc., N. Kingstown, RI.  He is currently under contract to the Naval Undersea Warfare Center, Division Newport, Newport, RI, supporting the Submarine Multi-Mission Team Trainer (SMMTT) development.  He has over 20 years experience in computer systems and mechanical engineering within the US Navy submarine community. He holds Bachelor of Science and Master of Science degrees from Southeastern Massachusetts University and the University of New Haven, respectively.