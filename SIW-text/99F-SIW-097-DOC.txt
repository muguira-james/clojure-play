The HLA Mandate for DoD Simulations:Considerations for the C2 CommunityDoug FlournoyThe MITRE Corporation202 Burlington RoadBedford, MA  01730781-377-1760 HYPERLINK mailto:rflourno@mitre.org rflourno@mitre.orgKeywords:HLA, C2 system interfacesABSTRACT:  At the Electronic Systems Center (ESC), simulations are being applied to meet the challenges associated with developing, testing, and training Air Force C2 systems.  Currently these simulations use a variety of interface techniques to exchange a limited amount of information with C2 systems.  Now that Department of Defense (DoD) simulations are transitioning to a single interoperability standard, the High Level Architecture (HLA), C2 systems engineers will be able to take advantage of the HLA to more effectively meet their increasingly complex system development requirements.  However it may be difficult for members of the C2 community to see unfamiliar HLA terminology and practices to consider the benefits HLA interplay offers.  This paper is intended to provide members of the Air Force C2 community with an introductory awareness of HLA concepts and issues relevant to C2 system development and training.  The report begins with a discussion of emerging C2 testing and training challenges and how the transition of simulations to the HLA can help address these challenges.  HLA concepts and processes are outlined, and the HLA Transition is reviewed.  Then, options for establishing HLA connections to C2 system software are presented.  Finally, two ESC initiatives that can reduce the effort required to connect simulations to C2 systems are discussed.1.  IntroductionDepartment of Defense (DoD) simulations are transitioning to a single interoperability standard, the High Level Architecture (HLA).  Command and Control (C2) systems connect with simulations to fulfill development, test, training, and other operational requirements.  How can C2 system engineers take advantage of the HLA to meet these requirements in the most effective manner?  This paper is intended to provide members of the Air Force C2 community with an introductory awareness of HLA concepts and issues relevant to C2 system development and training.The Electronic Systems Center (ESC) is the developing agency for many of the Air Force’s C2 systems.  ESC’s Modeling, Simulation, and Training (MST) Product Area Directorate (PAD) is performing research and experimentation aimed at leveraging emerging infrastructure standards to further C2-to-simulation interoperability.  This report is the third in a series of white papers from this effort.  The report begins with a discussion of emerging C2 testing and training challenges and how the transition of simulations to the HLA can help address these challenges.  HLA concepts and processes are outlined, and the HLA Transition is reviewed.  Then, options for establishing HLA connections to C2 system software are presented.  Finally, two ESC initiatives that may reduce the effort required to connect simulations to C2 systems are discussed.2.  Increasing C2 Interoperability Requires a Leap in Test and Training CapabilitiesIn order to provide effective testing and training for C2 systems, it is necessary to represent the set of system input feeds and output connections that occur during battle.  Simulations can be used to generate these operational conditions.  If, for a given C2 system, the number of data connections involved is small and the variety of possible data scenarios is manageable, simple test jigs and output stubs may be sufficient for certain testing and operator training purposes.  Traditionally, such single-system testbeds sufficed where systems were operated in a “stovepipe” manner-- that is, inputs were received, processed, and results generated without significant interaction with other C2 systems.The current trend in C2 is toward increased inter-system communications or “interoperability.”  To maintain information superiority in today’s warfighting environment, more and more time critical battlespace data must be shared between systems.  In response to this need, related C2 systems within the Armed Services are being merged into “systems of systems.”   Architectures are being specified to aid in the creation of a single next-generation Integrated C2 System (IC2S).  Meanwhile, increasing emphasis on joint operations is forming complex dependencies between systems across different Services.  The complexity of data flows between systems is increasing by orders of magnitude.  This in turn increases the complexity of tools and processes required to test systems to insure each data exchange is executed properly.  Increased interoperability between C2 systems also brings with it an additional training burden.  For interoperability to translate to operational effectiveness, system users must now more than ever “train as they fight,” training on operational consoles and making use of all the information available to them from other systems in the battlespace.Consequently, the days of simple test jigs providing realistic C2 system testing and training are over.  A more complete representation of the entire battle, or “synthetic battlespace,” is needed.  Such a synthetic battlespace provides simulated representations of the other systems in the battle and models the impact of decisions likely to be made by operators of those remote systems.  Only by exercising C2 software within such battlespaces can the intended interoperability of the C2 system be verified and users of the system effectively trained to take advantage of the new capabilities.3.  How the Emergence of HLA Can HelpWhere will such a synthetic battlespace come from?  Developing the environment from scratch would certainly be cost- and time- prohibitive.  However, many of the building blocks necessary to compose a synthetic battlespace already exist.  Theater-level wargames are already used for battlestaff training.  Theater- and mission-level simulations are used to analyze operational concepts.  More detailed system- and subsystem-level simulations are used for system-specific engineering analysis.  In the past these simulations used a variety of interface techniques to exchange information with remote sources.  Soon these simulations or their next generation counterparts will all exchange data via the HLA.  The intent of the HLA is “...a structure that will support reuse of capabilities available in different simulations, reducing the cost and time required to create a synthetic environment for a new purpose.  An individual simulation or set of simulations developed for one purpose can be applied to another application under the HLA concept of the federation: a composable set of interacting simulations.”1  C2 systems that are able to interface via HLA will be able to connect to a federation of simulations that work together to provide a synthetic battlespace.  In this manner, C2 interoperability testing and training needs can be met.4.  HLA OverviewThe HLA is a software interoperability framework evolving under the guidance of the Defense Modeling and Simulation Office (DMSO) Architecture Management Group (AMG).  Figure 1 illustrates key HLA concepts.  The HLA provides a specification of Application Programmer Interfaces (APIs) for run-time data interchange services,2 pre-runtime templates and tools for reconciling data exchange details between applications,3 and rules for proper use of these services and tools.4 Within this framework the HLA facilitates a logical context that underpins data interactions so that participating applications know what data is expected of them and in what form data will be delivered to them.  The HLA does not provide a list of approved software products, just API specifications for services that any HLA-compliant Run Time Infrustructure (RTI) must provide.  The choice of hardware platform, software components, and coding language for the RTI is left to the developer’s discretion.Figure 1.  HLA Overview (DMSO figure)In addition, for a group of software applications that wish to connect with one another, the Federation Execution Process (FEDEP) provides a step-by-step procedure for implementing the HLA.5  From the point of view of a software engineer faced with enabling his/her single application to participate in an HLA federation, this process includes negotiating with engineers representing the other federates to develop a Federation Object Model (FOM) describing the data-passing needs within that particular federation.  The HLA Object Model Template dictates the format for expressing this FOM.  Then, the software engineer establishes the necessary RTI calls and callbacks, as specified in the RTI Interface Specification, for the application to pass the specified data at runtime and maintain proper temporal status.  More details on the options available for achieving this RTI interface are discussed below in the section entitled “Determining an Approach for HLA Participation.”It is important to note that the HLA interface resulting from a trip through the above process does not render the application capable of participating in all HLA federations.  For an application to participate in a different HLA federation that has negotiated a different FOM, additional interface development work may be necessary.5.  The HLA Transition:  Well on its WayIn the software world, mandating an approach does not guarantee success.  In fact, the very existence of the mandate often carries with it political tensions that lower the probability that the mandated technology will be accepted.  However in the case of the HLA, the transition to the mandated technology is well on its way.  The original mandate signed 10 September 1996 specifies that the DoD “shall cease further development or modification of all simulations which have not achieved, or are not in the process of achieving, HLA compliance by the first day of fiscal year 1999, and shall retire any non-compliant simulations by the first day of fiscal year 2001.”6   Indeed, the transition to HLA continues to proceed on schedule and appears headed for successful completion.  Management techniques employed by DMSO have played a key role in the project’s success.  DMSO sponsored dozens of HLA prototyping efforts that resulted in enhancements to the technology while building strong user advocacy across the simulation community.  Feedback from these and other early experiences with the HLA abound in the form of conference presentations and other writings available on the DMSO Web Site.  A strong training program was implemented featuring free courses and training materials to both technical and management-oriented audiences.  A Help Desk and traveling team that provides orientation and hands-on advice to new HLA users are also in place.  From early in the HLA evolution process, DMSO allowed free access to RTI and Object Model Development Toolkit (OMDT) software for development purposes.  So despite initial resistance from portions of the simulation community, HLA will soon be the way DoD simulations communicate.6.  Determining an Approach for HLA ParticipationHow can C2 system development engineers take full advantage of the HLA transition to “play” their applications within synthetic battlespaces?  A first step is to define the data inputs and outputs necessary to exercise the C2 system sufficiently to meet testing, training, and experimentation requirements.  Then discussions can begin with members of the modeling and simulation community to determine a set of simulations that can be connected to each other and with the C2 system via HLA to meet these requirements.  Care must be taken to select simulations that can not only provide input to the C2 system but can also receive and process C2 system outputs to realistically influence the course of the simulated battle.  Once simulations are selected, the capabilities of the simulations can be mapped to the needs of the C2 system, eventually resulting in a data model (in HLA terms, a FOM) that specifies the object data and interactions to be exchanged.   As mentioned above in the HLA Overview section, an RTI interface must then be implemented that permits the data exchange and time synchronization of the C2 application with the other HLA Federates.  These RTI service connections can be embedded into the source code of the existing C2 software so that the interface is an integral part of the C2 application.  In Figure 2, C2 Application #1 is connected with the RTI using this embedded interface method. Figure 2.  RTI Interface Options for C2 ApplicationsIn some cases it may be desirable to establish the RTI interface without modifying the C2 software, as shown in Figure 2 for C2 Application #2.  This alternative is particularly attractive when an external interface already exists.  For example, a Common Object Request Broker Architecture (CORBA), a United States Message Text Format (USMTF), or a Tactical Digital Information Link (TADIL) interface are excellent candidates for reuse.  A separate interface application is inserted between the C2 application and the RTI that translates data from the protocol of the existing C2 software interface to the form required by the HLA Federation.  Employing an interface application renders the HLA connection transparent to the C2 application.  This can be attractive from a software maintenance perspective since the C2 software is insulated from changes to the RTI and the rest of the synthetic battlespace.  Also, an interface application permits all simulation-related software to be run on separate workstations from the C2 software.  This can alleviate intrusion issues; that is, concerns that simulation interface software resident on a C2 workstation may take away from available memory or storage space or otherwise degrade C2 system performance.  However from a performance perspective, employing an interface application rather than an embedded RTI interface adds an extra time- and bandwidth-consuming waypoint on the network between the synthetic battlespace and the C2 system.  Therefore an interface application may not be practical where closer coupling is needed to exchange large quantities of data under strict time constraints.Most C2 systems are not single applications but sets of related applications.  For example, a C2 system might include a display application and an algorithmic processing application such as a tracker.  Data connections to the synthetic battlespace could include:sensor reports inbound to the tracker from simulated sensor systems,track reports inbound to the tracker and display from remote (simulated) C2 systems, track reports outbound from display (perhaps triggered by operator action) to other simulated C2 systems, andmission assignments triggered by the display operator, outbound to simulated weapon systems.One approach for this C2 system to provide access for HLA-based simulation support is through a single “gateway” HLA interface that brokers the passing of data between its applications and HLA-compliant simulations.  Shown in Figure 3, the gateway is an extension of the interface application approach described above.  The gateway approach can be straightforward to develop and maintain if the C2 applications are all connected to each other via a common infrastructure such as a CORBA object request broker.   EMBED Word.Picture.8  Figure 3:  Connecting a C2 System to a Synthetic Battlespace Using a Gateway ApplicationThe gateway approach may not be feasible if (1) the C2 applications do not share a common architecture or infrastructure, or (2) time-critical, high-volume data throughput requirements require tighter coupling for one or more of the synthetic battlespace connections.  In these cases it may make sense to employ some combination of embedded interfaces and interface applications to achieve the desired connections to the synthetic battlespace.  For instance, a gateway may not be able to provide the data throughput necessary to support the tracker from the example in Figure 3.  An embedded RTI interface may be a better solution for the tracker.  If the display does not have such high throughput requirements, it may make sense to employ an interface application for the display.  This system configuration is shown in Figure 4. EMBED Word.Picture.8  Figure 4: Connecting a C2 System to a Synthetic Battlespace Using Multiple RTI Interface ApproachesA key issue for C2 system program offices deciding to what extent to adopt HLA is the up-front investment involved to build an HLA knowledge base and develop an initial HLA interface to their system.  The world of HLA-based software development is unique and involves a significant learning curve in spite of the abundance of tutorial information and on-line help available.  Even the highest-level introductory tutorial presents unique terminology, object modeling processes, and runtime interface methods.  Complicating matters is the fact that there are few HLA-experienced software professionals on the job market to draw from.  At a time when C2 system development efforts are already constrained by COE and year 2000 (Y2K) concerns, the level of resources necessary to build and manage one or more HLA interfaces could be a deterrent to active HLA participation.7.  Initiatives That Could Ease HLA Participation for C2 SystemsOne way to reduce the effort necessary for C2 system engineers to achieve an initial HLA interface for their systems is to develop HLA interface applications that translate information from simulations into formats or protocols that are commonly used for communication and interfacing within the C2 community.  A combined HLA-COE runtime environment that employs such interface applications is being investigated by members of the ESC MST PAD.  For these interface applications to achieve some degree of reusability, it may be necessary to employ common data models that support classes or categories of simulation-to-C2 system interplay.Another way to facilitate HLA-based simulation support to C2 systems is to influence the evolution of C2 system architectures so that future systems are developed with simulation access in mind from the get-go.  One such architecture is the ESC’s C2 System Target Architecture (C2STA).  The C2STA specifies Data Access Interface Modules (DAIMs) for C2 system components that can be leveraged to create HLA Federates that provide simulation data entry points to the C2 system.7These and other initiatives hold promise for bringing the benefits of HLA-based simulations to bear on C2 development efforts.  However, the level of funding being applied to wring out these concepts via prototyping is insufficient.  Just as the HLA itself is succeeding because prototyping was emphasized early and often, increased emphasis on prototyping is necessary to take advantage of the opportunity the HLA provides for cost-effective simulation-based C2 system interoperability testing and training.  C2 system developers can receive the most value from these prototyping efforts by becoming involved as engineering consultants, insuring that mission-relevant issues are addressed and providing feedback on the resulting software.8.  ObservationsWith today’s increasing emphasis on C2 system interoperability, single-system test jigs that have traditionally been employed in the development of C2 systems will no longer suffice.  A synthetic battlespace is needed that provides a simulated representation of the rest of the entities involved in a battle.  With the emergence of the HLA it is now feasible to compose synthetic battlespaces from the variety of existing DoD simulations.With a single “gateway” HLA interface, some C2 systems can begin to benefit from HLA-based simulation support.  Multiple HLA interfaces may make sense for other C2 systems depending on performance requirements and the variety of desired connections to the synthetic battlespace.  However, the perceived complexity of HLA terminology and practices, combined with other costly initiatives vying for C2 system development resources, make it a difficult time for C2 system development agencies to consider an investment in HLA.It may be possible to reduce the resources needed for C2 systems to develop an HLA connection by providing HLA-compliant interface applications that take advantage of common C2 data exchange mechanisms in the COE.  However the reuse of these applications across different simulation-to-C2 system interface cases may only be feasible to the extent that the applications share a common data model.  Over the longer term, simulation access can be designed into new systems by influencing C2 system architectures like the ESC-developed C2STA.  Increased emphasis on prototyping synthetic battlespace and simulation-to-C2 system interface concepts is necessary if the benefits of HLA are to be brought to bear for testing and training emerging C2 systems.  C2 developers can insure the success of these efforts by taking an active consulting role in them.    References[1]	Defense Modeling and Simulation Office, HLA Overview from Web Site http://hla.dmso.mil, March 1999.[2]	U.S. Department of Defense, “High Level Architecture Interface Specification Version 1.3,” Draft 9, 5 February 1998.[3]	U.S. Department of Defense, “High Level Architecture Object Model Template  Version 1.3,” Draft, 5 February 1998. [4]	U.S. Department of Defense, “High Level Architecture Rules Version 1.3,” Draft 2, 5 February 1998.[5]	Defense Modeling and Simulation Office, “High Level Architecture Federation Development and Execution Process (FEDEP) Model Version 1.3,” 9 December 1998.[6]	Under Secretary of Defense for Acquisition and Technology Memorandum, “DoD High Level Architecture (HLA) for Simulations,” 10 September 1996.[7]	Defense Information Infrastructure—Air Force Chief Architect’s Office, “Command and Control System Target Architecture Specification,” Release 2.0, 31 August 1998, p. 47, 48Author BiographyDOUGLAS FLOURNOY is a Lead Simulation and Modeling Engineer for the MITRE Corporation in support of the ESC MST PAD on Hanscom AFB outside Lexington, Massachusetts.  He is currently investigating methods for providing simulation support to Air Force Command and Control systems.  Previously he developed user interface and algorithmic software prototypes for MITRE’s Center for Advanced Aviation System Development (CAASD).  Mr. Flournoy holds a Bachelor of Science Degree in Mechanical Engineering from the Pennsylvania State University and a Master of Science Degree in Operations Research from the George Washington University.