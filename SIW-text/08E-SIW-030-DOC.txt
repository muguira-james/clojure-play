Using Modelling and Simulation to Represent Commander’s Intent in the Maritime ContextMark G. HazenDefence R&D Canada - AtlanticMark.Hazen@drdc-rddc.gc.caTania E. RandallDefence R&D Canada - AtlanticTania.Randall@drdc-rddc.gc.caKeywords:Modelling & Simulation, Scenario Generation, Commanders Intent, Command and ControlABSTRACT:  The critical component of Command and Control (C2) is the mental model of the battlespace held by the commanding officer (Commander’s Intent), and one of the critical capabilities of a C2 system is the ability for the commander to share that Commander’s Intent with subordinates.  While a wide variety of technologies have been developed to provide the commander with current and historical data of the battlespace, far fewer technologies are available to assist in the development and communication of Commander’s Intent.  As far back as the late 1980s, tactical decision tools were trialed and deployed to give commanders simulation tools for planning, however, the majority of these tools lacked speed and usability.  Simulation speed and fidelity have improved by orders of magnitude since then, however, the ability for non-specialists to set up scenarios has lagged other user-interface issues.  The ability to describe a commander’s mental model of the battlespace for communication to other warfare team members has direct analogies to military scenario description.  The authors have hypothesized that properly configured simulation scenario sets can be used to efficiently communicate Commander’s Intent in the maritime context.  This paper will compare current simulation scenario elements to Intent description requirements, and identify crucial areas for development.IntroductionIn the past decade western nations have spent a lot of effort trying to understand what is meant by Command and Control (C2).  A major part of this effort has been lifting C2 out of the purely technical realm and reestablishing the role of the human decision-makers.  Earlier work focused on data fusion, tracking, and information management technologies which were/are seen as more tractable than dealing with human decision-makers.In both Pigeau and McCann  REF _Ref195417981 \r \h [1] and Alberts and Hayes  REF _Ref195417991 \r \h [2], the concept of Intent is central to understanding current practices and looking to the future.  Shattuck  REF _Ref195418014 \r \h [3] also examines the concept of Intent from a US Army perspective.  In all cases the authors conclude that Intent is more than the explicit statement required by regulation.  Simplistically, Intent embodies the command vision of the battlespace and expectations for how the battlespace will evolve.  It is more than an expected end state, but does not involve micro-management.  McCann and Pigeau emphasize that Intent encompasses both explicit Intent (written down in orders and doctrine) and implicit Intent (arising out of shared social norms, training and trust relationships).  Shattuck and Wood  REF _Ref195418026 \r \h [4] examine the problem of remote supervisors and apply it to combat problems where the presence of intelligent reactive opposition adds an extra layer of uncertainty.  The age-old adage that the best battle plan rarely lasts past the first moments of conflict fits to this analysis and leads them to suggest the need for commanders to provide the context to let subordinates respond to unexpected (therefore unplanned) situations in a similar manner to the commander.  Shattuck calls this context “presence” and it is directly analogous to Pigeau and McCann’s “Intent.” Intent then is how commanders impart what they want accomplished and the constraints under which they expect the results to be obtained.  While it is often seen as a higher command function, as Alberts and Hayes state, Intent is fractal, that is, there is contextual Intent wherever there is command.  In  REF _Ref195418026 \r \h [4], Shattuck and Wood conclude with the problem of communicating intent/presence with current technology.  Extrapolating their discussion of natural language interpretation problems within command posts to coalitions where nations often find themselves separated by a “common” language, it is clear that methodologies for the communication of Intent are urgently needed.This paper uses the language of a hierarchical command system that assumes a unity of command.  However, the concepts and issues explored are extensible to parallel and ad-hoc command systems, with a corresponding increase in complexity.The question at the heart of this work is, how can technology assist commanders to communicate Intent; both in terms of transmitting Intent and ensuring understanding upon receipt?  This question really has at least four parts:Content - Are there technologies that can encode the elements of Intent that get missed with current systems;Transmission - Can the elements of Intent be efficiently encoded in the technology; Reception - Can the elements of Intent be efficiently decoded by others from the technology; and,Validation - Can the technology assist users in validating that Intent has been communicated properly?One of the most common current methodologies for communicating Intent is the use of the back-brief.  This is where a commander provides subordinates with the Intent and then subordinates back-brief with their developed plans.  In general, the back-brief has little factual information that the commander does not already know. Instead, the purpose is to ensure that the staff have understood the Intent to the point that it is reflected in their developed plans.  Through working together in this sort of feedback environment, the command staff learns the implicit Intent and develops into a team.  As trust in the team develops, the amount of explicit Intent required from the commander decreases.  For spatially and temporally remote subordinates, this team development is clearly more difficult.Clearly, there are problems with this model for the ad-hoc or non-traditional command structures that are becoming the norm in coalition operations.  In these cases there may be little time to develop the trust relationships required.  In the maritime context where fluid multi-national coalitions are common-place, it can be difficult to physically co-locate members of a command team, and it is generally impossible to gather all senior subordinates.  While technologies such as video-teleconferencing, email and internet chat have mitigated this problem, the remote supervisor problem remains, as does the problem of ensuring a common understanding of plans and context.Command IntentTo examine this problem we first look at the types of information required for the communication of Intent; both explicit and implicit.  Table 1 provides a non-exhaustive list of Intent elements.Table 1: Elements of Command Intent for a Single UnitElementDescriptionMission ObjectiveOverall end and significant intermediate states both for subordinate unit(s) and overall.  ContextRelation of objective to higher and parallel missions.Rules of EngagementForce employment legally authorized – may vary between units.Hostile Forces Intent EstimateWho, what, where, mission, expected constraints on operations, and readiness.Neutral Forces IntentOther Government Departments (OGD) / Non-Governmental Organizations (NGO) / other nations/civilian/journalists. Operational ConstraintsLocal customs, Law of Sea, and social norms.Safety ConstraintsAny authorized departures from normal operations.Inter-unit SupportRelationship between units and other allied forces.  Expectations to support other units.Unit readinessState of supporting units.Relationships with Neutral ForcesGuidelines for interacting with neutral forces.Environmental ConstraintsGuidelines on the impact of operations on the environment.Doctrine Standard operating procedures, tactics, and procedures.Note that the list given in Table 1 does not include instructions on how a unit should accomplish its objectives.  Rather it sets the context and constraints within which the subordinate commander is expected to work.  It is expected that each subordinate unit will develop its plans and express the Intent for its subordinates, they for their subordinates, and so on.For example, consider Figure 1.  The Joint Task Force Atlantic (JTFA) commander is in charge of the entire task force for the demonstrated area.  The commander has, based on inputs from CANADACOM, a vision for what goals the task force should accomplish and the constraints within which these outcomes must be accomplished.  The commander divides the force into smaller task groups (TGs) and shares with them a vision and the necessary constraints.  How the required outcomes should be accomplished is not specified; it is up to the task group commanders to interpret the JTFA commander’s Intent and come up with appropriate goals for its task group (in coordination with the other task groups) to satisfy the overall vision.  Each TG commander must then communicate its vision for the task group to each of its individual units.  Again, explicit instructions for how to accomplish the task group’s goals should not be specified, as this will limit the unit’s ability to adapt to unexpected situations.  Only the desired outcomes and necessary constraints should be specified, and the individual units can use these to come up with appropriate action plans (in coordination with the other units in the task group).  As stated in  REF _Ref195418014 \r \h [3], if the friendly commander’s are limited by a specific course of action that has been identified from the level(s) above, while the enemy is free to choose amongst numerous courses of action, the enemy has a clear advantage.In the childhood game of “whispers” (aka “telephone”) where an initial message (or some variation of it) is whispered from one child to the next, the last child’s interpretation of the message may differ significantly from the original message.  While a source of humour in this case, a similar interpretation (or misinterpretation) of Intent in the case of the example in Figure 1 is no laughing matter.  It is critical to the success of the mission that each level of command is able to correctly interpret the Intent of the level above it, and to pass on the appropriate vision to the levels below.  The collective plans of the individual units must sum up to meet the Task Group commander’s vision, and the collective plans of the task groups must sum up to meet the JTFA commander’s vision. Otherwise, the success of the mission is at risk. Clearly, being able to adequately express Intent such that it is interpreted correctly by all subordinates is a critical requirement for any mission. Figure 1: Naval Task Force Dissemination of IntentReferring back to Table 1, there is a major element of this table that is essentially equivalent to a comprehensive intelligence brief covering all organizations in the operations area.  However, Intent is more than an intelligence brief in that it expresses the commander’s appreciation of the state of the battlespace and the expected reaction to planned operations.  While this predictive portion of Intent is based on as much factual information as possible, it also includes the commander’s estimate of the ability of the opposing command and their mission.Similarly, Intent includes the commander’s appreciation of subordinate unit capability and the impact of operations in other areas of operation.  In reading through the elements of Table 1 and the explanation of Intent above it is clear that Intent can be explained as the Commander setting the scenario for subordinates as to the current and future state of the battlespace.  A natural step in looking for technology to assist in this process is to look at other situations where scenarios are developed, and the technologies used to assist them.Two of the main areas that use scenarios are training and analysis.  Both of these areas make extensive use of simulation, and there are whole organizations devoted to the development of validated scenarios for use, both with and without simulation.   Military Scenario DescriptionTo develop scenarios for military training exercises and experimentation programs, software tools have been developed that allow the user to specify the details of an initial situation and describe how it will progress over time.  These software systems provide an interface for developing entity-level simulations, where entity models come packaged with sensors and weapons systems which they can use to detect or attack other entities.  Entity models also include a description of physical characteristics such as size, weight, maximum speed, etc..  Sequences of entity behaviours (e.g., go to a location, follow a route, etc.) are pre-selected by the scenario developer for each entity.  These behaviors can be initiated at run-time based on elapsed time or through operator input (to handle event-based situations).  In the case where operators can intervene with a scenario as it runs, the software system is said to use semi-automated forces (SAF).  For all scenario development tools, there is common information that the scenario developer must have before a scenario can be properly created.  First of all the developer must understand the overall goal of the training or analysis program so that the scenario created presents the issues necessary to bring about the desired learning or situation under study.  With this information alone, the beginnings of a storyline can be created in the mind of the developer. The next obvious consideration is what geographical area the scenario will take place in.  With that decided, the developer must choose which entities will be used and what they will be doing throughout the scenario.  More specifically, the following information must be identified for every entity in the simulation: What type of entity is it (e.g., frigate, fishing vessel, seadoo)?What is its threat classification (friendly, neutral, or enemy)? What sensors and weapons will it have?Where is it initially located?What are its plans (e.g., remain undetected, aggressively pursue enemy, etc.)?Where/how will it move throughout the scenario  	(e.g., follow a preset path, head for a specific   location, move randomly within a specified area)?   What are its rules of engagement (e.g., under what circumstances (if any) will this entity attack another?)?When does it use its sensors (e.g., are passive sensors always on and active sensors off unless required by current circumstances?)?What is the environment (e.g., visibility, sea state, wind direction, etc.)?Which entities are working together? How and what do they communicate?How do actions taken by one entity affect those of another entity, if at all? One difficulty with SAF environments is the time, effort, and experience required for non-experts to effectively develop even a simple scenario.  This is in part due to non-intuitive environments and in part due to the necessary amount of detail that must be specified for each and every entity.    Figure 2 shows a screenshot of the Joint Semi-Automated Forces (JSAF) development environment, and provides an indication of the detailed level of information (particularly, pre-planned routes) that must be specified. Figure 2: JSAF Scenario Development EnvironmentOnce all the information has been entered, the scenario designer must validate that the combination of the configuration data and simulation algorithms produce the desired behaviours.  Generally it takes a number of iterations of fine-tuning configuration parameters to obtain the desired overall behaviour. For simulation developers, it is a particular adage that every time a simulation has been validated, the next user will want to simulate some new situation.  As a result, scenario designers often become quite adept at tweaking the combination of configuration parameters and simulation algorithms to allow production of new types of entity behaviour or characteristics.  This of course requires substantial experience with a simulation unless the documentation is extremely good.  However, it also means that simulations can often be used to produce reasonable representations of scenarios that were never envisioned by the original developers.In the past decade, simulation has begun to be used in a wider number of areas than strict military, physical systems, or economic ones.  For example, developers using technologies such as agent systems are using simulation to investigate sociological issues such as the causes of civil war  REF _Ref195418100 \r \h [5].  These advances, while still immature, bode well to allow the integration of non-physical issues into warfare modeling.  As an example, the MANA program  REF _Ref195418110 \r \h [6] developed by the New Zealand Defence Technology Agency has been used by both the US Marines and US Border Security forces  REF _Ref195418138 \r \h [7] to include issues of morale and fear.  Using its ability to instigate changes of allegiance, the Somalian Black Hawk Down incident was reproduced wherein initially neutral bystanders become a hostile mob.          Comparison of Intent and Scenario ElementsAn examination of Table 1 and the list in Section 3 shows the expected similarities between the specification of Intent and the requirements for scenario generation.  While some of the more human elements addressed in Table 1 are not currently required as simulation input, they still provide constraints against which simulations are validated.  Further, as simulation developers work more with the human factors and social scientists, the less-physical aspects of simulation are expected to improve in complexity and realism.Referring back to Section 1, the vision for Intent communication is to encode Intent information in simulation through a combination of configuration data and simulation algorithms.  The constraints imposed by the combination of configuration (scenario description) and simulation conduct are expected to be communicated through the receiver exercising the simulation at their own level of planning.  Thus, higher levels input general constraints to the simulation and then more detail is added as lower levels conduct their planning.  It is expected that the process is iterative with all levels contributing.Scenario development for simulation, on the other hand, is typically much less distributed and iterative, although it is often conducted following very similar steps as used for mission planning.  In both cases, a deep understanding of the underlying environment within which a mission must take place is required – in planning that understanding is an estimate of what will actually be there, in scenario design it is an estimate of what is required for the simulation to produce that environment.  Neither are exact sciences.So the first part of the communication of Intent question, that of content, is affirmative.Encoding of Intent in SimulationThe second issue to be addressed is that of the ease of encoding Intent elements within simulations.  In the last section we affirmed that it was possible – the question here is if it is efficient or practical.The use of simulation in C2 systems, and particularly in the planning stage of C2 has been trialed many times, with varying success.  In  REF _Ref195418165 \r \h [8] one of the authors examined the use of two early naval Tactical Decision Aids, Joint Operational Tactical System (JOTS) and the Integrated Tactical Decision Aid (ITDA), in the late 1980s.  The concept was to provide squadron staff with the ability to conduct what-if planning for task groups.  In general, the day-to-day operational concerns of staff meant they had little time to deal with learning to use simulation, and the simulations ran far too slowly to match the required battle rhythm.  In the 20 years since then, simulations have become more capable (and more complex) while computer power has increased exponentially.  In Surdu and Hill  REF _Ref195418175 \r \h [9] the requirements for simulation usage in a future command post are described based upon earlier research on a system called OpSim.  The requirements they developed call for simulations that run on single-user low-cost workstations at faster than real time.  While they expect normal operation to be stand-alone they also call for the capability to interact with other systems, be federated with other simulations, and be able to interface with C2 systems.In essence, the point made in both of the above cases is that operational commanders (and command teams) have limited time, and any technology proposed to help them in their tasks should minimize the impact on their available time.  The central hypothesis of this work has been that simulations could provide a reasonable tool for the communication of Intent between levels of command.  However as discussed above, simulation scenario generation is not a simple process.  Typically, there is a wide range of input parameters required that require Subject Matter Experts (SMEs) and/or extensive experience with the simulation to determine.  The determination of simulation parameters is not just a matter of obtaining good numbers, but also understanding how the simulation algorithms use those numbers to create behaviour.In the author’s over 20 years of experience working with analysis and training simulations, including writing some of them, parameter descriptions and their relation to simulation behaviour are seldom well documented.  Following some recent simulation-based experimentation work  REF _Ref195418193 \r \h [10], the authors have begun work to look at scenario generation interfaces and methodologies.  The use of agent-based systems to modularize scenario development appears promising  REF _Ref195418211 \r \h [11], however the initial cost to develop libraries of validated entities with associated behaviour is still high.  The concept is to build libraries of entities (frigates, tankers, pleasure craft, aircraft) and features (fishing villages, resorts, harbours, ferry terminals) which include not only kinematic and visual information but also behaviours.  Thus, a scenario designer need only specify the location of a fishing village and its associated fishing grounds, and the feature would generate the fishing fleets at appropriate times with appropriate behaviour.Some of these modules are essentially simulations by themselves that can be federated or used together.  While many of the commercial simulation vendors are starting to market systems with some built in libraries, to be useful the modules often need classified configuration and to be validated.The issue of validation is important on input since a commander needs to be sure that the Intent has been encoded properly (we will address the issue of proper decoding in the next section).  Thus, the simulation system needs to include tools to assist the user to validate the inputs over the range of envisioned situations.  This is particularly problematic when there are large numbers of probabilistic event outcomes that generate multiple sub-branches of behaviour (also known as multi-trajectory results).  While many simulations come with associated analysis tools, the interfaces are again not optimized for the non-expert user.In general, our assessment of the current state of scenario generation interfaces is that they remain in the domain of the expert user, and therefore, are unlikely to be useful to the majority of commanders.  However, the potential is there to tailor interfaces to the operational community using concepts such as development road-maps and by modularizing scenario elements.Decoding of Intent Information from SimulationThis is the issue of whether a recipient (usually a lower level commander) can extract Intent information from a simulation.  As discussed above, the Intent information is encoded in the behaviour of entities within the simulation.  That behaviour is controlled by the combination of configuration parameters and the internal algorithms of the simulation engine.Thus, while some Intent information may be available explicitly in the configuration file (or scenario description document), the perceived added benefit comes from the depiction of the Intent within the simulation behaviour.  Typically, simulation users tend to run simulations in two different modes.  In the first, individual runs with specific configuration files are run, often in a visualization package so that the operator can see behaviour developing.  The second method is often called a batch run where the simulation is run with a wide range of input parameters and the results are accumulated for post-run review.  In analysis situations, often a few single runs are done for general validation, followed by batch runs, and then specific interesting cases are extracted from the batch set for review as single visualized runs.  Depending upon the number of variations and length of time required for each run, this process can be quite time-consuming.As with the encoding of Intent, timeliness is important on decoding since subordinate commanders do not have a lot of extra time during operations.   The subordinate commander may not need to view complete batch runs of the simulation, but does need to view runs of the significant variations in order to understand the constraints that Intent imposes on their unit’s actions.  This would indicate some sort of envelope analysis which defines the space within which the commander can operate.There is a synergy here between the information the encoder needs in order to trust their Intent has been encoded properly, and the information required to be reviewed by subordinates.  In both cases, the information can be generated, the real question is whether it can be generated and visualized in a timely fashion.  This is an area that requires human factors and visualization research.Use of Simulation for Validation of CommunicationThe final issue is the analogy to the back-brief.  That is, can simulation technology assist the commander in determining that the subordinate commanders have understood the Intent?Under the concept of this paper, the simulation configuration has additional details added to it as it is passed through the various commanders.  Thus, as the simulation is updated to reflect subordinate commanders, copies of the simulation can be sent back up for review – this is a direct analogy to the back-brief, and requires similar information visualization as the decoding issue.In addition, it also imposes the requirement for configuration management and versioning since it is likely that a commander will want to compare the original with versions from multiple subordinates.  As with Sections 5 and 6, the conclusions are that while solutions to these issues are feasible, they require research and development, and case by case analysis to determine practicality.  It is noted that computing and graphics power, familiarity with simulation (through Commercial Off the Shelf (COTS) gaming, etc.), and visualization technology continue to improve.  So, what is impractical today is likely to be very practical tomorrow.Requirements for the Use of Simulation for Intent CommunicationPulling the discussions of the last four sections together, the following two sections discuss general requirements and risks.As discussed in Section 5, Surdu and Hill  REF _Ref195418175 \r \h [9] examined the requirements for simulation systems for use within a command post by a command staff.  The application was essentially that of planning, which is directly related to Intent generation. In the case of Intent communication, a system must also be fit for use by a variety of players distributed spatially and temporally.  Thus, the following requirements also exist:Since members of the user community are constantly changing, the system must be easy to learn to use;Commanders have many commitments, so the system must be fast to configure and run;Similarly, it must be quick and easy to make changes to configurations;Output formats need to be intuitive and easy to interpret;Since Intent covers a wide range of possibilities, the simulations need to support multi-trajectory analysis; Comprehensive constraint checking must be conducted  and reported; and,There must be good documentation on expected results of changing scenario parameters.Many current simulation systems are oriented toward combat missions which have a limited duration.  However, recent history for many armed forces shows that the most common missions are long duration constabulary ones.  For example, on the naval side, coalition forces have been conducting Maritime Interdiction Operations (MIO) in the Persian Gulf area since the first Gulf War.  There are changes in tempo, and Intent, as time progresses.  In essence these are very different from classical naval battles, hence, the simulation systems need to include non-combat related features such as civilian and commercial traffic, population morale, and local religious and cultural customs.  Again, since Intent communication is two-way, the system needs to be able to handle iterative development with tools to manage changes made by different players.The problem of Intent communication implicitly assumes a wide variability in expected conditions.  Hence simulation support tools must support multiple probable outcomes of simulated decisions and events; this is sometimes called the multi-trajectory problem.  Risk AreasWhile simulation shows a lot of potential for use in the development and communication of Intent, it currently does not meet the requirements of the previous section.  There are a number of issues that will have to be addressed before simulation will fulfill its potential in this application.  In particular, scenario generation techniques are not simple, easy-to-learn or natural.  In addition, the relation of input parameters to simulation behaviour is often poorly understood and undocumented.  Partially this is because simulations are complex systems and therefore prone to emergent behaviour.  However, for them to be useful to commanders, these effects need to be understood, documented and validated. The multi-trajectory issue requires the ability for users to visualize multiple possible outcomes, and to identify unexpected results in the output.  Thus, it may be expected that either multi-run Monte Carlo or probability field calculations will be required, which will increase run times.Usage of simulation tools across force levels brings with it the issue of level consistency, that is, ensuring that simulation results are consistent when aggregating or disaggregating units for different levels of units.  Thus, a naval simulation conducted at the platform level should have results that are consistent with a simulation run at the task group level.  Note, this does not mean the results will be the same, or that there will not be emergent behaviour.  However, it does mean that the general capability of the task group remains consistent between simulation levels.The use of simulation does not negate the problem of interpretation of terminology.  Simulation interoperability is a major issue that requires a lot of work.  Except in the unlikely case where a single simulation is mandated and strictly configuration-controlled, there will be an issue of interoperability between users.  The simulation community has been active in addressing the technical issue of interoperability between disparate simulations and C2 systems with programs such as the Coalition Battle Management Language (C-BML) [12].  This work on scenario definition languages and data-models, such as Joint Command Control Consultation Information Exchange Data Model (JC3IEDM), will assist in this matter, but is not complete.On top of the interoperability issue is the issue of interpretation and legality.  Intent is meant to give subordinates the context within which to handle situations that fall outside of plans.  As such, Intent is important in the determination of responsibility in after action processes.  So there is a legal issue of clarity of interpretation that will have to be resolved.  The C-BML development work on unambiguous terms may assist with legality issues.ConclusionsIt has been shown that there is a good correspondence between the requirements of simulation scenario generation and Intent elements which supports the hypothesis that simulations could provide a vehicle for the communication of Intent.  Distributed command organizations require commonly understood representations of the problem space to enable collaboration and coordination.  Simulations can not only provide such a representation, but generally come with the built-in tools for the graphical depiction of current and predicted/planned states.However, current simulation interfaces, both on input and output, are not oriented to operational commanders and staff.  While simulation engines have developed greatly in scope and reality, the ability to configure and validate simulation inputs remains a specialty skill requiring extensive experience or training.  Similarly, simulation output has generally been matched to training or analyst requirements, not an operational commander’s.To make simulation a practical tool for the communication of commander’s Intent, research and developments efforts will be required to design and implement interfaces that address these issues.ReferencesR. Pigeau and C. McCann: “Redefining Command and Control”, Chapter 12 in The Human in Command: Exploring the Modern Military Experience, R. Pigeau and C. McCann Ed., Kluwer Academic, New York, pp 163-184, 2000.D.S. Alberts and R.E. Hayes: “Understanding Command and Control”, CCRP, 2006.L.G. Shattuck: “Communicating Intent and Imparting Presence”, Military Review, pp 66-72, Mar-Apr 2000.L.G. Shattuck and D.D. Wood: “Communication of Intent in Military Command and Control Systems”,  Chapter 19 in The Human in Command: Exploring the Modern Military Experience,  R.Pigeau and C. McCann Ed.,  Kluwer Academic, New York, pp 279-291, 2000.R. Bhavnani, D. Misdownik and J. Nart: “REsCape: An Agent-based Framework for Modelling Resources, Ethnicity, and Conflict”, Journal of Artificial Societies and Social Simulation (JASSS), Vol 11, No 27, March 2008.D.P. Galligan, M.A. Anderson and M.R. Lauren: “Map Aware Non-Uniform Automata (MANA) Users Manual Version 3.0”,   Defence Technology Agency, New Zealand. July 2004.E.R. Beeker III and E.H. Page: “A Case Study of the Development and Use of a MANA-based Federation for Studying US Border Operations”, Proceedings of 2006 Winter Simulation Conference, pp 841-847, 2006.M.G. Hazen: “ITDA Usage in MARCOT 2/88: A Preliminary Evaluation Report”, Internal Working Paper 1/89 Maritime Command Headquarters, Operational Research Division, January 1989.J. Surdu and J. Hill: “Simulations in Command Posts of the Future”, In Proceedings of 2002 Advanced Simulation Technology Conference, pp 77-86, San Diego, CA, April 2002.M.G. Hazen, A. Jones, P. Cao, G. Macferson, R. Kuster: “Command and Control Experimentation using Distributed Simulation”, Proceedings of 12th ICCRTS conference, Paper I-052, Newport RI, June 2007.T.E. Randall: “Modelling Decision-Making for Entities in a Simulated Maritime Environment”, Proceedings of the 2008 Conference on Behavior Representation in Modelling and Simulation (BRIMS), Providence, Rhode Island, April 2008.C. Blais, K. Galvin and M. Hieb: “Coalition Battle Management Language (C-BML) Study Group Report”, Proceedings of the 2005 Fall Simulation Interoperability Workshop, Paper 05F-SIW-041, September 2005. Author BiographiesMARK G. HAZEN leads the Virtual Combat Systems Group at Defence R&D Canada – Atlantic.  He has an MSc in Mathematics from Carleton University and 22 years of experience in defence research using modeling and simulation to support operations and capability development.  His current research interests are in the area of Human-in-the-loop command and control experimentation, and distributed simulation.TANIA RANDALL is a Defence Scientist at Defence R&D Canada (DRDC) - Atlantic.  She has an MSc in Mathematics from Dalhousie University and 6 years of experience in defence research using modeling and simulation. At DRDC she is a member of the Virtual Combat Systems group which develops maritime synthetic environments and procedures for the execution of experiments in support of naval programs. Her research focuses on the use software agents and techniques for modeling computer generated forces behaviours and scenario development.