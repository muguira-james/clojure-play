Training Event Development/Scenario Generation  (TED/SGEN) Web-Based ToolDavid FisherTerry McDermott Conway Bolt David PierceNorthrop Grumman Information Technology12000 Research Pkwy Suite 236Orlando, FL 32826407-243-2010, 407-273-2026,407-243-2022, 330-677-9707 HYPERLINK "mailto:david.fisher@northropgrumman.com" david.fisher@northropgrumman.com,  HYPERLINK "mailto:tmcdermott@nortnropgrumman.com" tmcdermott@nortnropgrumman.com,  HYPERLINK "mailto:cbolt@northropgrumman.com" cbolt@northropgrumman.com,  HYPERLINK "mailto:david.pierce@northropgrumman.com" david.pierce@northropgrumman.com Steve HueySparta, Inc13501 Ingenuity Drive Ste. 132Orlando, FL 32826407-380-0076 HYPERLINK "mailto:steven.huey@orlando.sparta.com" steven.huey@orlando.sparta.com Keywords:Distributed Training, Scenario Generation, Military Planning, Mission rehearsalAbstract: As distributed training and mission rehearsal events are conducted with ever greater frequency across increasing numbers of geographically dispersed simulation sites, there is a growing need for tools that provide a collaborative planning, specification and scheduling environment for these events.   The geographic separation of the simulations and planning participants makes a web-based implementation approach both appropriate and natural for such a framework.  TED/SGEN provides for distributed training event and scenario development using Java servlet architecture, XML data storage, JavaScript forms management, and a Java API to interface with an Oracle database back end.   In addition to the lay down of scenario elements, this tool implements features that allow for user friendly planning of both the training and simulation aspects of an event.   It includes a rich privilege level structure for users of the tool to control participation in the planning process and automatic generation of exportable power point slides and HTML tables from the event data. Scenario definition is supported through both forms based and 2-D graphic scenario specification capability. Re-use and collaboration are enhanced through search and import of archival events and scenarios, and storage and management of event documents.  This paper describes initial implementation efforts and discusses several distributed object architectural structures.1. Introduction   As distributed training and mission rehearsal events are conducted with ever greater frequency across increasing numbers of geographically dispersed simulation sites, there is a growing need for tools that provide a collaborative planning, specification and scheduling environment for these events.   At the present time, the planning of such events generally takes place at meetings, in teleconferences and through email using standard desktop productivity tools to capture significant information.  This is probably not too troublesome for small events involving only a few geographically close simulation sites. As more sites are involved, event frequency increases and spatial distances expand, inefficiency and inherent difficulty of maintaining coordination becomes more and more problematic, and the cost in time and money becomes significant.  Under these conditions, a distributed, collaborative tool that enables participants to share and coordinate centrally maintained information with reduced reliance on direct personal contact is an attractive possibility. In this paper we describe such a collaborative tool that has been developed (and is being expanded) to help overcome the problems associated with a planning distributed training events.   2. TED/SGEN Summary TED/SGEN is a web-based application that is server based, employing Java Servlets interfaced to an Oracle database.  The Oracle database (the repository) is accessed through a Java API that makes the database structure transparent to the servlets.  The servlet generates HTML pages supplemented with JavaScript scripts to support user interaction.  The user interface utilizes extensive pick lists that are data driven from data in the repository.   This approach reduces the demands on the user to know and/or remember details, and also reduces the potential for error in providing required information.  The tool can be divided into two basic functional area components with very different objectives. One component, the planning component, provides for training event developers to plan and report results of a training event.  The second component, the administrative component, is designed to administer the user privileges and repository (data base) support options.  The planning component treats an event as a project and is designed to allow planners to initiate an event, assign personnel to organize and plan the event and designate their project privilege levels.  It also supports defining the scenario, mapping scenario elements to the available simulation resources, scheduling the event and reporting the results.  By maintaining the event planning information in a central database, the planning component can include the ability to search and import scenario and other data from past training events to simplify and speed the planning of new events.  The administrative section is used to register and set up permission levels of users and administrators, register simulation centers and their simulation resources and authorized simulation center agents, and administer the repository list of simulated weapon systems.    3. The Planning Component3.1 Initiating an EventA Planner accesses the TED/SGEN tool simply by starting a standard browser application (e.g., Netscape, Microsoft Internet Explorer), directing it to the URL of the TED/SGEN Home Page, and logging in.  The first step in an event’s lifecycle is for a user to create (or initiate) the event.  As mentioned above, the event is treated as a project by TED/SGEN.  For a person to initiate or create the event project for the planning phase of a training event, that person must be a registered user with at least the minimum user privilege level. There are 3 defined levels: general (lowest), admin, and root.  Registration and user privilege levels will be discussed further in the section on the Administrative Component.  For a user with at least ‘general’ privilege to create a new training event project, the user first inputs a name for the event on the event creation form. That name must be unique (no past events with the same name) or the user will be asked to re-submit with another name.   This newly created project becomes a working project until it is either deleted or archived.  After creation, some additional initial information about the project is input by the creator to describe the project, provide expected event execution date and duration, and specify key words for searching.  The system generates an email stating that this new project has be started along with some of this initial project information on the project and automatically emails it to all registered users.3.2 My AdministrationA “My Administration” section is provided for users to update or edit their personal data, change their password and also to create and edit “personal groups.”  Personal groups provide a vehicle similar to distribution lists and shared folders in an e-mail application, allowing controlled involvement of other users to easily share and collaborate on developing information.3.3 Establishing a ScenarioSituations are anticipated where no specific training event is in the planning stage, however, a user would like to create a scenario for possible future use in a training event.  This may occur because a user has a “good” idea for a scenario and would like to input it for future use. Even more likely is that scenarios will be sufficiently complex that a separate ongoing scenario generation activity needs to be supported.  TED/SGEN has a “scenario only” selection to support this situation.  It provides access to a subset of the full training event definition that leaves out those definition elements relating to assignment of specific simulation resources and reporting the aspects of a full training event.  This allows all the scenario specification functions to be utilized, the definitions to be saved, and the results to be used, and re-used in the planning of subsequent events.3.4 Collaboration SupportSince the planning of a distributed training event is a collaborative activity, each project (whether full event, or scenario only) will have a discussion group associated with it and accessible from the main project page.  This allows the project participants the ability to discuss issues such as scenario content, which simulation sites will simulate what entities, etc.  The key here is to provide a simple way to have delayed reaction discussion that does not hinge on finding someone – or several people at the same time - in their office in order to share a thought or idea.  It removes the need for email lists or remembering to forward email.  All parties to the discussion can track the ideas and contribute.  Chat is another web-based tool that has been considered for inclusion, but it has some of the same disadvantages as telephone.  Yet another slightly different tool is the news group, which allows decisions or news of important events to be “pushed” to participants. These and other capabilities are relatively easy to add to the basic infrastructure, if the need is felt.  It seems reasonable that if a certain collection of simulation sites were continuously training together over a prolonged period, a news group might be valuable that kept everyone aware of the training activities, schedule events, surrounding that “consortium.” 3.5 Project AdministrationTED/SGEN has a strong privilege structure for an event project that is completely separate from the user privilege structure discussed below under the Administrative Component.  There are four privilege levels associated with a training event project; they are in ascending privilege order: observer, member, coordinator and leader.  All users are by default observers and the only user initially with any project privilege other than observer is the creator of the project.  The creator has the highest, or “leader,” level privilege.  The creator then selects other users and groups to participate in the project and designates what privilege level these users and groups will have while participating in the planning and reporting phase of the project.  The selection lists are populated from the Repository information managed in support of the Administrative Component.  Hence, the user does not have to generate and organized contact data, only select the people from the database that are to help with the project.  As participants are added to the project, an email is automatically generated and sent to the new project participants informing them that they are participants and their privilege level for that project.  This automatic email is optional and may be disabled by the project leader.  As to the meaning of privilege levels: observers have access to view all project artifacts, but cannot edit them; members, in addition, only have input into the scenario; coordinators have full edit privileges along with the leaders, but only the leaders can archive the event.   A project is archived only after the project is completed and there is no further input.  Once archived, the project data is locked and can no longer be edited.  The data from an archived project my be imported into a new project or working project.Project participants’ privileges may include creation of entities and routes in the project’s scenario, however, they may only edit entities and routes that they create.  At present the scenario lay down is completed using a forms based system, we are presently incorporating a 2-D map based system to supplement the forms based interface.  The scenario entity selection pick lists are completely data driven from entities defined in the repository.  Repository entity definitions are an example of the things entered/edited and maintained via the Administrative Component. 3.6 Event Configuration:Scenarios are expected to be defined independent of the association of scenario elements with specific simulation or live resources.  Part of event planning is the association of all scenario elements with the specific simulation resources expected to play scenario element roles during simulation.  We call this process event configuration.  Therefore, at some point before the implementation of a training event, the entities of the event’s scenario must be mapped to simulation site’s resources for simulation.   The selection pick list of simulation sites and the levels to which they can simulate an entity is completely data driven by the repository.  First a simulation site must be registered with the repository and that site must be able to simulate the chosen entity at a specified fidelity level.  More on how simulation sites are registered and how what entities a site can simulate and to what levels is discussed with the administration component.  Once an entity has been selected for mapping to a sites resource, a pick list of all the sites that simulate that entity will be displayed along with a dynamic secondary pick list of the fidelity levels to which the selected site can simulate that entity.  As the user changes the selection of the simulation site, the secondary pick list automatically changes to display which specific resources are present at the selected site to simulate the entity, and at what level of fidelity.The mapping of an entity to a sites simulation resource is considered only “suggested” unless it is mapped by an authorized agent for that site or has been authorized by an authorized site’s agent.  The authorized agents are registered in the repository via the Administrative Component.  All mappings must be authorized before a training event configuration is recognized as complete.  If a user is an authorized agent, upon login a link will appear on the TED/SGEN home page which will go to a page with a list of all “suggested” simulation site resource mappings the agent needs to authorize for their site for all working projects.  From here they can authorize those resource mappings.  The process of registering simulation sites and their authorized agents will be discussed in the Administration Component discussion.  3.7 DocumentationThrough the process of defining, developing and executing a training event, there are documents created that are associated with that training event.  These documents may include planning documents and briefings, the event brief, the event debrief, an executive brief, and a final report.  TED/SGEN provides for a defined set of documents to be stored at the repository and downloaded and locked for editing.  In addition to storing the documents created for the event, the ability to export the scenario and training event data in several forms is provided.  This includes emailing to a user the scenario in HTML format or the high level event and scenario details as PowerPoint slides automatically generated from the training event and scenario data and.The US military uses the Air Tasking Order (ATO) to task air missions, assign cross-force tasking, and intraservice tasking.  CINC (USJFCOM), USAF, and USN sponsor the ATO format, since Joint Forces, the Air Force, and the Navy/Marines use the ATO.  The ATO has been used with great success in operations Desert Storm, Allied Force, Northern Watch, and Enduring Freedom to task air missions across joint and coalition forces.  The long-term objective to provide training of composite force missions in a realistic environment begs to incorporate the ATO as a medium of tasking the elements of a training event.Therefore, within TED/SGEN, the ATO has been selected as the basis for scenario description, supporting training in composite forces.  The scenario data is used to construct a set of “simulation ATOs” in standard ATO format to convey to the simulation sites the planned roles for each air entity in the scenario.ATO export software generates an ATO that represents real world air tasking that can be used in the problem domain to task the air missions identified in the event scenario.  TED/SGEN will incorporate the ability to both import and export scenario data in the ATO format. ATO import supports top down scenario development.  This mode of operation will accept existing ATOs from actual exercises or operations for development, implementation, and execution as training events.  This mode of scenario development has been used successfully in the Theater Air Command and Control Simulation Facility organized Desert Pivot exercises.  Alternatively, the ATO could be input from a real or simulated air operation center (AOC) for development, implementation, and execution as events for mission rehearsal.TED/SGEN ATO export supports bottom up event development where the event and scenario is developed entirely within TED/SGEN as described above.  TED/SGEN supports the export of a blue, red, and gray ATO, thus tasking three types of forces for the event.  These ATOs can be “fragged” out to individual simulation sites for event implementation and input into local aircraft mission planning systems to support detailed mission planning for each aircraft in the flight if that is part of the training for this event.Currently ATOs in United States Message Text Format (USMTF) Baseline 2002 can be imported or exported by TED/SGEN.  The software is written in Java.  The export function gathers scenario data from the Repository via method calls into the Repository API, parsing the XML based data using Sax XML parsers, and creates ATO objects.  The data content of these objects can be written locally on the server as ASCII flat files in USMTF 2002 format.  A sorting function separates the blue, red, and neutral forces in the XML data prior to creating the ATO objects for each force.The import function parses Java String objects or ASCII flat files in USMTF 2002 format and creates the ATO objects.  We are currently working on the conversion from the ATO objects to TED/SGEN XML so the air tasking can be displayed in TED/SGEN. Eventually the related Airspace Control Order (ACO) will be added as another import/export function.  The ACO is used to provide specific detailed orders for airspace management and control.The ability to generate Power Point slides from event and scenario data is provided on the server.  This is enabled from the client side for the current event being edited permitting the presentation to be emailed or downloaded from the server.  This is a case where the particular briefing format is not the main consideration.  Rather, it is the demonstration of the capability to generate standard presentations from centrally stored data that is the point of this TED/EGEN feature. The current format for the scenario provides a high level summary of the training event from generated from TED/SGEN.  The presentation content includes aTitle slide showing the event name as obtained from the RepositoryDescription slide: with a list of aircraft missions, a list of the simulation sites participating, and lists of numbers and types of aircraft, ground forces, and ground based air threats as allocated to simulation resourcesMission Brief slide: including event timeline, call signs of participants, list of Strike Package and Tanker call signs, aircraft loadouts, and rules of engagementMission Timing slide: times for Brief, Start/Flight Check, take off, AWACS On-Station time, time on target, etc.Gaming Area Map: (eventually the 2D map software will generate these images)Objectives slide including elements of the F2T2EA (find, fix, track, target, engage, assess) kill chain Event Control Functional Roles slide: personnel assignmentsOther Coordination Details slide: including which shift crew is required and required site’s scenario data files that implement this eventThe Scenario PowerPoint presentation is generated completely in software using a Scenario template (*.pot file).  This permits the correct color and logo backgrounds on each slide.  The Java side of the software gathers event and scenario data necessary to populate the PowerPoint presentation data fields from the Repository via method calls into the Repository API, parsing the XML based data using the Sax XML parsers.   This data is transferred to the C++ side via text files and JNI method calls.  From this data, the C++ side generates the PowerPoint presentation via Microsoft PowerPoint automation and its C++ COM API.  The PowerPoint file is saved locally on the server and the pathname to the saved file is returned to the caller on the Java side via the JNI.  The caller can then fetch the file in order to e-mail or view the file.3.8 PowerPoint Presentation Time ConsiderationsEvent start and end times are managed in java.util.Date objects in UTC time.  These times are input/output in local time based on Java time zone strings applied to java.util.GregorianCalendar, java.util.SimpleTimeZone, and java.text.SimpleDateFormat classes.  For example, time can be input in central time for one site and presented in eastern time for another site with correct daylight savings time accounting provided by the time classes in packages java.util and java.text.4. Administrative ComponentThe administrative component allows assigned administrators to register users, delegate user privilege levels, define the entity repertoire available for scenario use, register simulation sites, register site’s authorized agents, and specify the site’s simulation resources (including level of fidelity) capable of simulating a subset of the entity repertoire.   4.1 Repository Administration LevelsThe philosophy of the management of the repository is to try to minimize the potential loss of repository data, while maintaining the ability to readily input new data.  To this end there are two levels of repository administration; they are in ascending order admin and root.  Only an administration user with root privileges is able to delete or remove.  This includes deleting a project, a user, a simulation site, an authorized site’s agent or a repository entity.  However an administration user with admin or root privilege level is able to create any of these.Either an admin or root level users may perform registration of users, however, only a root level user can give a user root privileges.4.2 Administrative Component FeaturesFirst, all simulation sites considered potential participants in a training event must be registered in the Repository.Then, for an entity to be used in a scenario, a user with admin or root privilege must first define it in the repository.   Since the entity pick list repertoire for a scenario is data driven by the repository, once an entity is defined in the repository it will show up on the appropriate pick list (blue aircraft, red aircraft, ground force, red air threat, etc.) depending on its definition.  This enables any project planner to place that entity into a scenario and maintain the entity’s complete, and accurate, definition.   Once the repertoire of entities has been defined and the repertoire of simulation sites has been registered in the Repository, the administrators identify the subset of entities each site is capable of simulating.  This supports the configuration of scenario elements to a site’s simulation resources.  The administrators designate at what levels (if any) each site can simulate the entity.  These levels include virtual simulator, threat station, and/or computer-generated forces. A site may be capable of simulating an entity at one or more levels with one or more simulation resource at each level.  Forms are provided for this administrator task.  Once this has been set up in the Administration Component, project planners working in the Planning Component can assign scenario elements to site’s simulation resources.  Project planners assign one scenario entity at a time to a site’s simulation resource.  The site’s simulation resources designated by the Administration Component drive the pick list content for the entity in the Planning Component.  First the simulation site is selected.  Only sites capable of simulating this entity appear in the list.  Second the specific site’s resource (virtual simulator, threat station, or computer generated force) is selected.  Only those resources designated in the Administration Component appear on the pick list in the Planning Component.Assignment of a scenario entity to a site’s simulation resource is only considered “suggested” until a site-authorized agent registered with the repository validates the selection.  A site-authorized agent is empowered by that simulation site to commit its site’s simulation resources to a specific event.  No one else can commit site resources to an event.  Again, a user with admin or root privileges accomplishes registration of a site’s authorized agents using the Administration Component of this tool.  The result of maintaining registered users, user privilege levels, the entity repertoire available for scenario use, registered sites, registered site’s authorized agents, site’s simulation resources and similar types of data in the repository controlled by a limited number of users with administrative privilege is to minimize errors, inconsistency, and demand for general user knowledge.  Also, as a result, the specification process is simplified and speeded up.5. Group Formation and ManagementThere are two levels of group creation, general groups (defined within the Administration component) and individual user groups (defined within the Project Component).  However, either type of group may be added to a project.  General groups are available to all users.  Individual user groups are “owned” by an individual user and are useful when the same or similar group of people are used each time that user creates a project.  Instead of going through the entire list of users each time multiple users are added to a project, the user simply add one of their individual user groups.  Groups may be comprised of other groups.6. Geo-referenced Data EntryWe are currently developing a 2-D map based system to supplement the forms based architecture.  Once integrated into the scenario development system, users will be able to select maps from a list of maps available in the repository. These maps will subsequently be served to a map display client on the users workstation. The user will then have the capability to pan and zoom the map to the appropriate scale for their use. The map tool will support layers that can be selected or deselected, revealing or hiding the features assigned to each layer. Some layers will be part of the map such as roads and bridges, contour lines, rivers and lakes, etc. Other layers will provide the user with the ability to place icons on them for use in scenario development such as SAM sites, enemy forces, friendly forces, etc. In the present design concept, both the forms and 2-D map pages will be displayed together.  The 2-D map will be optional and opened from the forms version.  As the 2-D map component will consume considerably more bandwidth (while loading) there are situations where the user will only want to use the forms version, for example when simple edits or additions are made or when on a slow network connection.   When the 2-D map component is used, entity lay down and coarse definition will be done with in the 2-D component, but details will be input through the form.The 2D map client is being developed to integrate with the existing form server in such a way that data entry in the form based system and the map-based system is synchronized. For coarse laydown of forces a user may want to use the map features and later “fine tune” the coordinates by editing in the forms. The challenge in developing the map client is in developing an architecture that will serve up the maps in a timely fashion.  7. Architecture:The figure below shows the architectural design of TED/SGEN.  TED/SGEN is a web-based application employing HTML and JavaScript on the client side and Java Servlets on the server side.  The application is password protected and uses session objects for authentication and the storage of critical data on that user.    EMBED PowerPoint.Slide.8  Figure 7.1: Architecture of TED/SGENThe Repository consists of a Java API that provides a straightforward interface to data stored in an Oracle database. The Repository API isolates TED/SGEN and other clients from the implementation details of the Oracle database, and provides a great deal of flexibility as to how data is stored and retrieved. This design allows TED/SGEN to easily work with a wide variety of data formats such as XML and DTD files. The Repository API classes represent the different types of data stored in the Repository, such as users, groups, events, and scenarios. TED/SGEN makes use of these classes to manage the required resources to define and maintain events and scenarios. These classes provide a straightforward, common interface to the Repository, allowing the database structure to be updated without changing any TED/SGEN code. The API classes handle establishing and managing a network database connection as well, allowing the TED/SGEN users in different locations to work with the same data.On the client side, HTML pages are generated with embedded JavaScript for form validation and the generation of dynamic pick lists. These dynamic pick lists allow secondary pick lists content to vary depending upon the value selected in the primary list. The JavaScript source code producing the pick lists is also dynamically generated by the servlet as these list are data driven by the data in the repository.  Updates and changes to the data that drives these lists are handled by the administrative component as discussed earlier.   Data transfer between the browser and the servlet is through standard http protocol using the Get and Post methods depending upon the situation. As shown in the figure below, the 2-D map will functionally look the same to the data servlet as the forms version when the servlet processes the data.  The servlet will not know if the data was input through the form or the 2-D map component.  The data servlet will synchronize the forms and the 2-D map.  Changes applied in one will update the other and vice versa accordingly.    EMBED Word.Picture.8  Figure 7.2: Architecture of 2-D MapAuthor BiographiesDR.  DAVID L. FISHER is a software developer for Northrop Grumman in Orlando, FL.  Since receiving his doctorate in Physics from the University of Texas at Austin in 1995, he has worked in the areas of theoretical plasma physics, the detection of explosive materials, millimeter wave sensor technologies and applications, and in the development of an Internet business.  He is presently developing several software tools.  David has 17 professional publications and 2 patents (1 pending).DR. TERRY MCDERMOTT is Senior Scientist for the Simulation Technology Department of Northrop Grumman Information Technology.  He has over 20 years of experience in systems engineering and simulation including system and software definition and development, system performance simulation, software design, realtime and constructive simulation, protocol development, standards development, and project management.  Currently, Terry is contributing to development of systems for visualizing tactical situations, training exercise planning and coordination, and distributed test environments.  Terry received his doctorate in mathematics from the University of Southern California specializing in Functional Analysis.CONWAY A. BOLT, III is a Software Technical Lead for Northrop Grumman Information Technology and has been developing distributed simulation systems for nearly a decade. He holds a Master’s degree in Computer Science from The Johns Hopkins University.DAVID R. PIERCE is an Applications Software Programmer External Level 4 at Northrop Grumman Information Technology.  He has 18 years experience in modeling and simulation including scenario generation and tactical environment, IFF, EW and avionics simulations on the F-15C Operational Flight Trainer and the F-15E, MC-130E Combat Talon, and JAS-39 Grippen Weapon System Trainers.  David has built federates and federations under the HLA, and assisted the interoperability planning effort for the Marine Corps Aviation Simulation Master Plan including tailoring the FEDEP process.  He is now applying his object-oriented modeling, distributed simulation systems/software engineering background to the problem of Air Tasking Order import/export for distributed military aircraft simulations.  He has a Bachelors degree in Electrical Engineering from Cleveland State University and a BS in Biology from Case Institute of Technology, Case Western Reserve University.STEVEN HUEY received an M.S. in Computer Science from the University of Central Florida in 2001 and now works as a Senior Design Analyst for Sparta, Inc. in Orlando, FL.Thanks:The authors would like to give a special thanks to Theresa Clark for her help in preparation of this document.