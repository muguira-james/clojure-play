The FEDEP in Systems Engineering and Conceptual Modeling for the WMDOA FederationKatherine L. MorseDavid W. WalterScience Applications International Corporation10260 Campus Point Drive, MS B-1-ESan Diego, CA  92121858-826-5442, 858-826-5112katherine.l.morse@saic.comKeywords:FEDEP, FEDEP checklists, conceptual modeling ABSTRACT: The Defense Threat Reduction Agency (DTRA) is integrating the Integrated Theater-Level Engagement Model (ITEM) and Hazard Prediction and Assessment Capability (HPAC) model into a Weapons of Mass Destruction Operational Analysis (WMDOA) federation. The federation must support war fighters in consideration of the effects of nuclear, biological, and chemical (NBC) weapons in campaign planning and in theater-level war games and exercises.  These considerations must include the effects of NBC weapons on friendly and enemy forces, the effects of WMD use by special operations forces and terrorists, the effects of conventional attacks on WMD munitions storage sites, and the effects of protection systems such as MOPP gear, pre-emptive medications, and decontamination systems.  At the beginning of the program, HPAC was not HLA-compliant.  ITEM was HLA-compliant, but neither its model nor its SOM supported WMD.  The resulting federation requires functionality not initially in either model.  Additionally, the team had little HLA experience at the beginning of the program.  This paper discusses how the program team used the FEDEP checklists to guide them in integrating the FEDEP into a standard software/systems engineering process, and provides an overview of the resulting conceptual model as documented in the System Conceptual Design Document.IntroductionThe Weapons of Mass Destruction Operation Analysis (WMDOA) federation [4] provides an analyst with the capability to model the effects of nuclear, biological, and chemical weapons and facilities within a joint force campaign.  The WMDOA federation consists of a combat model and a WMD model: the Integrated Theater Engagement Model (ITEM) [3] and the Hazard Prediction Assessment Capability (HPAC) [5].  ITEMITEM is an interactive, animated computer simulation of military operations in theater-level campaigns.  It provides fully integrated air, land, and naval (including amphibious) warfare modules that permit realistic simulation of joint force operations in a single, seamless computer environment.  All force-on-force attrition calculations are accomplished by the model.The model is highly interactive with a very strong emphasis on visualization.  The GUI consists of two displays - a Master Interface Process (MIP) and the WARVIEW Geographical Display Process.  The MIP is used to create warfare objects and define their parameters, populate system effectiveness tables, schedule warfare events, specify the level of model output desired, run the model for a specified period of campaign time, and review event reports which display event outcomes.  The MIP also permits the user to save the entire state of the campaign at the end of each run period and to restore the model to any previously saved period.HPACThe HPAC software was designed to meet the needs of a broad spectrum of users, from military personnel in the field (“operational” users) to subject-matter experts (“analysts”).  The WMDOA federation uses HPAC in its operational capacity.  The operational user is able to provide basic information regarding the action which caused the release of nuclear, biological, and chemical (NBC) materials, such as the location of a warhead impact or a description of an attack on a storage facility, and is able to interpret graphical output which provides coarse hazard contours with plain-language descriptions (e.g. “50% lethal”). WMDOA FederationIn the federation, ITEM will provide the capability for planning a joint-force, theater-level campaign for both red and blue forces. It also will provide the capability for modeling the execution of the campaign with respect to intelligence, surveillance, and reconnaissance (ISR), joint-force combat, and logistics operations.  HPAC will provide the capability for modeling various aspects of WMD warfare including the generation of plumes of hazardous materials, the dispersal and deposition of the hazardous materials, and the casualties resulting from exposure to the hazardous materials. The high-level responsibilities of the two federates are listed in  REF _Ref484343845  \* MERGEFORMAT Table 41.Table  STYLEREF 1 \s 4 SEQ Table \* ARABIC \s 1 1. WMDOA Model Federation CapabilitiesCapabilityModelThe planning and execution of attacks employing nuclear, radiological, biological, and chemical weapons.ITEMThe planning and execution of attacks against nuclear, biological, and chemical facilities.ITEMDetonation of weapons of mass destruction and generation of initial plume of nuclear, radiological, biological, and chemical source material.HPACDispersion and deposition of nuclear, radiological, biological, and chemical source material.HPACCasualty estimation of prompt and latent effects of nuclear, radiological, biological, and chemical incidents on personnel as a function of MOPP level and other protective measures.HPAC Material Damage estimation due to nuclear detonation.ITEMDegradations in combat and logistics operational effectiveness that result from the time dependent personnel.ITEMDegradations in combat and logistics operational effectiveness that result from the material damage.ITEMDegradations in operational effectiveness that result from MOPP level burdens.ITEMReconstitution of combat forces by redistributing available personnel or by supplying new personnel.ITEM Planning and scheduling of NBC reconnaissance operations.ITEMDetection of WMD contamination.HPACGeneration of perceived areas of contamination and classification of the contaminating agents.HPACPlanning of decontamination operations.ITEMExecution of decontamination operations that eliminate or reduce source material deposited.ITEMThe first step in the application of the federation will be the development of the necessary databases for each federate. For ITEM, the starting databases will include an ITEM state file that describes all of the combat objects (weapons, aircraft, ground units, installations, ships, etc.) and a set of effectiveness tables that define the probabilities of outcomes that are a function of both red and blue combat objects.  For HPAC, the data files will include a file defining the properties of the hazardous materials of interest, a file providing terrain modeling data, and a file providing weather modeling data.When all of the required time steps have been run, the models will pause and permit the user to assess the state of the campaign.  If the user is satisfied with the results of the run for the time steps involved, the user can enter the plans for the next set of time steps to be run.  If the results are not satisfactory, the user can restore the federation to the state it was in prior to running the time steps, modify the campaign plans, and re-run the time steps.  The user continues this process of planning, running, and assessing until the full campaign has been run.  The run-time portion of the process is shown in more detail in  REF _Ref486236715 \h Figure 41.  After the user has commanded the federation to run the specified number of time steps, the ITEM model resumes running.  It runs a set of planned allocation events that generate a set of action events.  These action events are run next. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 4 SEQ Figure \* ARABIC \s 1 1.  WMDOA Federation Flow – Run TimeIntegrating the FEDEP with Systems/Software EngineeringSince a software engineering standard wasn’t specified for WMDOA, the team selected MIL-STD-498 [7] due to our familiarity with it.  Only one team member had HLA [1] experience when we began federation design which presented us with the challenge of educating the team about the HLA in parallel with integrating the FEDEP [6] with MIL-STD-498.  The FEDEP checklists [2] helped us break down the FEDEP into discrete steps and decide which steps applied to the WMDOA federation.The FEDEP Checklists and the Program PlanWith the checklists partially completed, we were faced with the question of where to record the results of the checklist step.  The steps in the checklists produce two types of results:  processes and federation products.  Since the program plan should record the processes by which a software system is produced, the program plan seemed a logical place to record the processes.  Since the checklists are a process unto themselves, a meta-process, we concluded that they should be included in the program plan as an appendix.  However, to be effective as a process the checklists needed to record not only that we had completed them, but where the results were recorded.  If this line of reasoning sounds circular, it’s because our thinking was when we addressed this issue.  The solution was to add another column, Artifact, to the checklists which recorded where the results of the step were recorded.  If the result is a process, the artifact column points back into a section of the program plan.  If the result is a federation product, the artifact column points to another document or file such as the software test plan or the FOM.  REF _Ref484426739 \h Table 51 shows an excerpt from step 2, Develop Federation Conceptual Model/Develop Federation Requirements.Table  STYLEREF 1 \s 5 SEQ Table \* ARABIC \s 1 1.  FEDEP Checklist ExcerptDevelop Federation RequirementsDistill the results of conceptual analysis into a straightforward set of objects and behaviors that must be in the federation with emphasis on quantifiable characteristics that can be used to guide federate selection and testing.Assess the requirement for faster-than-, slower-than-, or real-time federates. Determine the need for futuristic objects (e.g., prototype weapons or sensors) or behaviors (e.g., experimental tactics, techniques or procedures) that are not currently defined in the domain reference literature.  If needed, these features are a special category of federation requirements that require special attention.Determine the need for non-simulation components of the federation (e.g., C4I systems, hardware-in-the-loop, human-in-the-loop).Identify federation reporting requirements before, during, and after execution.Refine high level fidelity objectives to a measurable set of fidelity requirements.Identify test evaluation criteria. [VV&A]Assess security requirements with respect to hardware. [Security]Assess security requirements with respect to network, data, and software. [Security] ACArtifactXXXXXXPXXPSCDDSCDDSCDDSCDD5.2.5SCDDSTPNotice that item 4 has two artifacts, the System Conceptual Design Document (SCDD) (described in section  REF _Ref484426869 \r \h 5.2) and section 5.2.5 of the program plan.  It must be recorded in the SCDD because non-simulation components are part of the federation conceptual design, while section 5.2.5 of the program plan addresses HLA tools.In this format, the FEDEP checklists allow us to ensure that our program plan incorporates all the necessary components of the FEDEP by verifying that each applicable step has an artifact.  When all the artifacts are completed, the federation will be complete.Also of note is that our division software development procedures require a program plan, even if the customer does not.  We are using the SAIC Software Engineering Procedures Handbook, part of SAIC’s Common Approach to Software Development and Maintenance, a proprietary implementation of the SEI CMM.  This required us to merge the FEDEP process requirements into the current division level processes.  In general, there were no conflicts between the processes; the FEDEP provided a more focused set of process requirements for developing the federation.WMDOA Conceptual ModelThe other issue that the checklists illuminated was that the System/Subsystem Specification (SSS) and Software Requirements Specification (SRS) called for under MIL-STD-498 lack sections for some of the artifacts produced by the FEDEP, specifically the conceptual model.  We considered producing a separate document, but concluded that we needed a system level document to encompass the entire system design.  We opted for incorporating applicable elements of the SSS and SRS into an SCDD which would also incorporate the federation conceptual model.In the few places where the Data Item Description (DID) for the SSDD lacked an appropriate place for critical conceptual model information, we made liberal use of appendices and forward pointers.  For example,  REF _Ref484568597 \h Table 52 shows the first part of the system internal interface requirements.  Since there are temporal requirements for the federate interface requirements that would be lengthy to describe in text, we included them as sequence diagrams in a separate appendix.  The HPAC SOM, WMDOA FOM, and FEPW are also included as separate appendices.Table  STYLEREF 1 \s 5 SEQ Table \* ARABIC \s 1 2.  System Internal Interface Requirements from SCDD4.6	System Internal Interface Requirements4.6.1	ITEM –HPAC Federate Interface RequirementsA set of HLA RTI sequence diagrams is presented in Appendix E.  These diagrams show both the internal interfaces of all the major functional areas of the WMDOA Software and the data being transmitted from one system federate to another.4.6.1.1	HPAC SOMThe HPAC federate shall adhere to the HPAC SOM<SCDD-V1-H-0406-t><SOW-029>.  The ITEM federate shall interface with the HPAC federate as specified in the HPAC SOM<SCDD-V1-I-0407-t><SOW-029>.  The following sections delineate the specific responsibilities of the two federates with respect to the SOM.  Order of battle entities are defined as ground units, EWGCI, installations, Air Bases, SAM sites, SSM fields, fixed SSM sites, mobile SSM sites, ships, seaports, and supply depots.  The WMDOA shall use Federation Management synchronization services to coordinate federate time advancement<SCDD-V1-I-0408-t><SOW-029>..4.6.1.4	Incident Invocation and ResultsThe HPAC federate shall have the capability to invoke a named, previously defined potential incident (WMD definition) in response to a request that specifies the incident name, location, and time<SCDD-V1-H-0454-d><SOW-004><SOW-005><SOW-006><SOW-029>.  The HPAC federate shall continually identify both prompt and latent casualties to personnel groups that are caused by an incident<SCDD-V2-H-0455-d><SOW-010><SOW-011><SOW-012><SOW-029>.  The HPAC federate shall create NBC hazard region objects (surface deposition, plume, nuclear effect)<SCDD-V1-H-0456-d><SOW-007><SOW-008><SOW-009>.  The HPAC federate shall update the attributes of NBC hazard region objects<SCDD-V1-H-0457-d><SOW-007><SOW-008><SOW-009><SOW-029>.  The HPAC federate shall create a contamination object that represents the presence of an OOB entity in the hazard region surface deposition or plume resulting from one or more incidents for a given agent<SCDD-V2-H-0458-d><SOW-007><SOW-008><SOW-009><SOW-015>.The ITEM federate shall have the capability to request the HPAC federate invoke a named, WMD definition (potential incident)<SCDD-V1-I-0459-d><SOW-004><SOW-005><SOW-006><SOW-029>.  The ITEM federate shall respond to personnel casualty interactions from HPAC by updating the health status attributes of the affected personnel<SCDD-V2-I-0460-d><SOW-014><SOW-029>.  The ITEM federate shall reflect NBC hazard region attributes<SCDD-V1-I-0461-d><SOW-007><SOW-008><SOW-009><SOW-029>.  The ITEM federate shall reflect contamination attributes<SCDD-V2-I-0462-d><SOW-015><SOW-029>. REF _Ref484568597 \h Table 52 also describes the interface requirements for NBC incident invocation and its results only briefly.  The temporal requirements for this interface are illustrated in  REF _Ref484569986 \h Figure 51 which came from Appendix E of the SCDD.  The sequence diagrams served another purpose as we were designing the federation.  Initially it was unclear which federate should model casualties since neither of the existing models had such a capability.  We exercised our design options by developing sequence diagrams, and analyzing the resulting RTI service calls and data exchange requirements. EMBED Word.Picture.8  Figure  STYLEREF 1 \s 5 SEQ Figure \* ARABIC \s 1 1.  NBC Incident Invocation Sequence DiagramConclusionsAs more existing models transition to the HLA in the near future, we expect that more development teams will find themselves in our same situation.  They will have experienced modelers and software engineers, but little or no immediate HLA experience.  Until HLA experience is ubiquitous in the M&S community, the tools, processes, and experiences like this one can provide guidance to other teams.  We found the FEDEP checklists, particularly in the expanded form we used, to be a very valuable process tool for integrating the FEDEP into an existing system/software development process already understood by the software development team.References[1]	Defense Modeling and Simulation Office:  “High Level Architecture RTI Interface Specification, Version 1.3,” April 1998.[2]	Defense Modeling and Simulation Office:  “High Level Architecture FEDEP Checklists, Version 1.5,” December 1999.[3]	SAIC:  “Integrated Theater-Level Engagement Model (ITEM) User’s Guide, Version 8.3,” October 1999.[4] SAIC: “System Conceptual Design Document for the Weapons of Mass Destruction Operational Analysis Model”, June 2000.[5] “The HPAC User’s Guide,” Version 3.2, October 1999.[6] Defense Modeling and Simulation Office:  “High Level Architecture Federation Development and Execution Process, Version 1.5,” December 1999.[7] Department of Defense:  “MIL-STD-498 Sotware Development and Documentation,” 5 December 1994.Author BiographiesKATHERINE L. MORSE is a Senior Computer Scientist with SAIC.  She received her B.S. in mathematics (1982), B.A. in Russian (1983), M.S. in computer science (1986) from the University of Arizona, and M.S. (1996) and Ph.D. (2000) in Information & Computer Science from the University of California, Irvine.  Dr. Morse has worked in the computing industry for over 20 years in the areas of simulation, compilers, operating systems, neural networks, speech recognition, image processing, computer security, and engineering process development.DAVID WALTER is a Senior Software Systems Engineer with SAIC.  He received a B.S. in Aerospace Engineering (1984) from the University of Cincinnati, and postgraduate studies in Aerospace Engineering from Pennsylvania State University.  Mr. Walter has developed U.S. and Foreign Military GIS, aircraft mission planning, and combat model simulation software applications for over 19 years. This project was funded under DTRA contract DSWA01-97-C-0197.  The COTR is James Gerding, james.gerding@dtra.mil. Data logger.