An ADL Framework for Learning Content Contextualization, Discovery, and ResolutionPhilip V. W. DoddsADL Chief ArchitectPaul JesukiewiczDirector, ADL Co-LaboratoryJ. D. FletcherInstitute for Defense AnalysesABSTRACT: Three principal components of a learning object repository framework are found to be context for relating context-specific search criteria to object metadata, discovery to resolve the location and policies of the repository and its objects, and resolution to register unique object identifiers and resolve location, metadata, and other object information required to retrieve specific content with precision.  An ADL framework, the Content Object Repository, Discovery, and Resolution Architecture (CORDRA), integrates these three components and is intended to serve as a foundation for a host of learning object services such as search, authorization, authentication, accreditation, policy enforcement, resolution, retrieval, auditing, and digital rights management.  1.  IntroductionThe Advanced Distributed Learning (ADL) Initiative, sponsored by the Office of the Secretary of Defense (OSD), is a collaborative effort involving government, industry and academic participants in an effort to establish a new distributed learning environment that enhances the accessibility of education, training, and performance aiding by ensuring the interoperability of learning tools and course content on a global scale [1].  To support its interoperability goals, ADL developed the Sharable Content Object Reference Model (SCORM) for creating and deploying reusable and interoperable instructional content objects.  The SCORM is a reference model that defines the interrelationship of course components, data models, and protocols.  SCORM contains a collection of specifications and standards adapted from global specification bodies, accredited standards organizations, and consortia to provide a comprehensive suite of e-learning capabilities enabling interoperability, accessibility, and reusability of Web-based learning content.  As a result, learning content objects, including those needed for simulations, can now be created, accessed, and delivered by any conforming learning management environment.   These technical specifications and practices are being finalized and adopted by a number of countries – in Europe, the Pacific Rim, and South America. However, a critical missing component in SCORM is a means to uniquely identify learning objects, locate them, and retrieve them on a scale that can support all users in a consistent, persistent, reliable, and secure way.   Such a registry for learning objects is needed to identify content against defined metadata and resolve its location.  ADL is now expanding its focus to include contextualized discovery, identification, and resolution of instructional objects.2. Discovery and Resolution FrameworkThis paper describes a framework intended to provide a scalable means to identify, search, and retrieve learning content that resolves to local content repositories.  The framework allows content to be implemented and managed locally, but be indexed centrally.  The framework includes technical architecture, services required (e.g., a resolution service), metadata policies, and registration procedures specifically directed toward the discovery and resolution needed for simulation objects and other learning content.The assumptions and requirements underlying the design of the framework emanate from the community of practice concerned with education and training.  The framework provides a practical means for identifying, locating, and retrieving instructional content that is contextually appropriate.  By contextually appropriate we mean content that satisfies criteria for semantic substance, instructional goals to be achieved, instructional strategy being used, and the individual characteristics, background knowledge, current progress, and learning style of the student. 3.  The “Problem Space”Over the past several years developers of digital instructional content have begun adopting an object-based approach based on relatively small “chunks” of instructional material.  The idea is that these content objects can be shared and re-contextualized into many different instructional situations to suit the individual needs of the learner.  Specifications such as SCORM suggest ways to add metadata tags to content objects so that information about the object may be discovered and searchable repositories of objects may be built.  However, SCORM is silent about how discovery is to be implemented.  There are many specifications and technologies in existence that define, methods and protocols related to repositories.  None of these individually address the entire problem of finding and then getting exactly the right instructional material.  Indeed, many aspects of the problem are not technical at all, but are policy decisions and business rules that pertain to a specific enterprise.   This situation has led to the development of many different and incompatible implementations of repositories that cannot be easily discovered, accessed or mined.SCORM addresses several critical aspects of content design: how to identify, organize, package, and move content, and how to track the learner’s progress and mastery.  These two areas are addressed by SCORM’s Content Aggregation Model (CAM) and the Run Time Environment (RTE) respectively.  With SCORM we have the means to create tagged, interoperable, and sharable content objects that are ready to use and reuse.  What is missing from SCORM is how to use the metadata for contextually relevant discovery (e.g., searching for instructional material that teaches a particular skill). To address these issues, we plan to:1.	Articulate high-level requirements, policies, and business rules for instructional content repositories that constrain the architecture so that it can be implemented.2.	Identify and relate the most relevant technologies and specifications that can be applied to the architecture (connect the dots). 3.  Define a framework on which a number of services may be built 4.  Provide a model that can scale.4.  Assumptions and RequirementsThe following assumptions and requirements describe working assumptions related specifically to ADL’s distributed learning environments:  4.1  Assumption 1: Publishers want their content to be found. It is assumed that developers of instructional material who make their content available in a repository intend that the content be found eventually and used by someone.  The act of “publishing” content to a repository means that its developer wants to make it discoverable and retrievable.  It is probable that the developer will also want to apply rules that regulate who may discover and retrieve the content and under what circumstances, but these are separate issues.  Requirement: A means to discover where contextually appropriate content is available.4.2  Assumption 2: Most users and developers are not skilled at either tagging content or expressing detailed queries. Just because content has been tagged doesn’t mean that it was tagged with useful search information.  Interpretations for when to tag and with what vocabulary vary widely.Requirement: Guidance and very simple interfaces for tagging content.4.3  Assumption 3: Searchers of content have specific criteria in mind. It is assumed that people who want instructional content know what they need.  This might be expressed with a simple description, key words, a specific skill or piece of knowledge, a relationship to other processes, or the state of a learner’s profile.   Requirement: A means to relate context-based search criteria to descriptions of specific content objects (e.g., mapping a skill definition to an object designed to address that specific skill).4.4  Assumption 4: Searchers of content want only what they need. It is assumed that searchers want their selections to be as precise a match to their requirements as possible, and with high confidence and trust.  They do not want every content object that “might” pertain; they want the ones that do pertain, if any.Requirement: A means to insure that discovered content is relevant, accredited, and authorized (among other qualities) and is required to assure the delivery of the appropriate content.4.5  Assumption 5: Forcing a rigid information, service, and protocol model won’t scale. Experience and studies have shown that distributed networks that rely on standardizing most or all of the protocols, data models, and services to be applied do not scale.  This is because local systems, requirements, and practices vary widely.Requirement: An approach  that is low cost and easy to implement and that allows voluntary support and adoption, with minimal alteration of existing approaches.4.6  Assumption 6: The architecture must enable local policies and business rules, not define them.  The approach must accommodate widely varying requirements and needs.  Enforcing strict procedural conformance (e.g., metadata elements and vocabularies) will not be broadly supported.Requirement: The means to institute and expose local business rules and policies so they may be used or mapped to and from other systems.4.7  Assumption 7: We cannot foresee all of the services or capabilities that will eventually be required. It is assumed that we will not imagine all (or even most) of the things that might be needed or wanted for this architecture.  Some we imagine now will probably turn out to be wrong.  Requirement: An architecture  that enables new services and capabilities to be added without changing the underlying structure.These assumptions and requirements are not intended to be hard and fast, but to guide the evolution and evaluation of specific solutions to serve contextually appropriate discovery and resolution of learning content.5.  Relating Context, Discovery, and ResolutionThe process of obtaining instructional content that meets the needs of the learner involves three processes: contextualization, discovery, and resolution.  There are technologies that can be applied to each of these areas, but they haven’t yet been integrated into a single coherent and comprehensive solution. 5.1  ContextWe assume that a search for content is driven by specific needs arising from a particular context.  In a simple case, a learner (or his or her proxy) might want to find content that relates to a particular topic.  A complex context will take account of such factors as the individual learner’s characteristics, background knowledge, current progress, and learning style, subject matter, environment, instructional objectives, and instructional strategies being appliedFor instance, imagine that an electronics technician is learning to troubleshoot faults in an unfamiliar avionics subsystem , but that he or she has been certified to work on similar systems.  A search for relevant content would want to know a) what make, model, and version of avionics system the technician is dealing with, b) what skills are needed to repair it, c) what skills the technician has mastered, and d) what procedures and skills are needed for the specific system at hand.  This scenario assumes that:•	A database exists somewhere with the exact configuration of each avionics system, •	Someone has defined a skills taxonomy for the system in consideration,•	A profile exists of the technician’s proficiency, •	Instructional content exists for this system, and•	Instructional strategies exist to prepare this technician to troubleshoot this system.Assuming this information exists and is accessible, one can imagine the development of a service or agent that can derive from these data the criteria needed to identify instructional content that is contextually appropriate for the technician’s needs.Context provides the criteria required for discovery.  It may be simple or complex, it may be automated, semi-automated, or determined manually.  5.2  DiscoveryThe field of search and cataloging is large and diverse.  Library science tends to focus on thoroughness of searches within specific collection, (i.e., get all the pertinent literature on a subject [2].  This community often bases searching on catalogs and indexes.  Some collections are federated by sharing indexes and using common protocols.  Metadata used in library collections is often a relatively small set such as that defined by the Dublin Core [3].Web searchers like Google focus on indexing everything (get everything out there that might pertain).  Google-type searching “crawls” through thousands of web pages every day indexing everything it finds.  The problem is that Google searches simply relate names and concepts and can produce hundreds of “misses” for every “hit”.  Also, there is a good deal of content it cannot find and index, such as non-text based content or repositories that aren’t openly connected to the Web.  A means to find content with certainty, and not with the ambiguity of a global web search engine, is required.The structured approach to discovery used by the library community may not scale well for the more granular learning objects needed for instruction and under consideration by SCORM.  The imprecision of the Google-type approach is also a major problem.  Neither of these approaches makes use of metadata specific to learning, i.e., Learning Object Metadata [4], nor does either approach lend itself to supporting local policies and business rules.Ideally the discovery of learning objects might involve a process like:1.	Develop search criteria from the local context;2.	Go to a master index of relevant repositories;3.	Go to one or more likely repositories, and4.	Discover what content is available on the repositories.This approach puts forward the idea of a registry of repositories – a place to go to find out where learning objects may be found.  If there were such a registry, its index and its metadata could be mined by a discovery service.  Publishers of learning objects who wanted their content to be found could voluntarily register their objects and provide information about their content for discovery.  This approach is “lighter weight” than the management and federation of library collections, and therefore more scaleable.  It also increases the precision of search both by enabling sophisticated search services and by narrowing the scope to intentionally published objects.  This said, we wish to include discovery by “crawling” as well, or at least not preclude such techniques in our approach.5.3  ResolutionIdentifying an object and knowing where an object is are different things.  Currently we rely on Universal Resource Locators (URLs) for location.  These have been highly successful tools, but they tie Internet resources to their current network locations and to local file paths, which may be included with the URL. When the resource is moved, the connection is severed.  Uniform Resource Names (URNs) are persistent identifiers for Internet resources, but commonly used browsers do not yet understand them. Resolution in this paper is meant to include the resolution of an identifier to a variety of services and functions that manage the use of an object – not just finding its location. Identifying a name with a location is only one of the services enabled by this approach.  Authentication services can be used to determine who may obtain access to content (or repositories, for that matter).  Other business rules might be enforced to protect intellectual property rights.  Life cycle management policies and services could also be applied. 6.  Resolution Using the Handle SystemThe Handle System [5] was developed by Bob Kahn and his team at the Corporation For National Research Initiatives (CNRI) [6] in the mid ‘90s and can be used as “Universal Resource Names” (URNs), among other things [7, 8].  Kahn, who co-invented TCP/IP, hoped that Handles would either replace or augment the web’s Domain Name System (DNS) registration system and thus fix the limitation of URLs.  But the existing DNS system turned out to have too much momentum, and was therefore not upgraded to the Handle System, leaving functional gaps that now have to be managed separately.  The Handle System defines globally unique identifiers that can be associated with information about an object as well as its location.  The system defines how to build a registry of handles and the services needed to resolve a handle’s associated information (e.g., location).  In the Handle System, the unique name (called a handle) is stored in a handle server along with a pointer to the object’s location.  The process of obtaining the location of the object is executed by a “resolution service” that asks the handle server for the location information, among other things.CNRI hosts a root “global handle server” that is a registry for other second-tier handle servers.  A number of these second-tier servers have been established as naming authorities and offer packaged services, such as object location resolution, authentication, application of business rules, and metadata storage and use.  The packaging of services with the basic handle registry capability creates a community-specific capability that provides persistent storage and retrieval of content objects.   It appears that the success, stability, and increasing use of handles-based registries make it a logical foundation for repository search and retrieval services.  But history in the field of distributed repositories shows that success is often dependent on simplicity and minimal technical specifications or practices due to wide variations in local requirements and infrastructure.  Sometimes it is just too hard to get many organizations to adopt exactly the same practices. 7.  A Proposed ArchitectureAs suggested by Figure 1, the principal components of a proposed learning object repository discovery and resolution architecture are:7.1  Context: A framework for relating context-specific search criteria to object metadataSuch a framework would define for a particular community of users specific information about the individual learner and his or her situation in a form that could be read by machine and linked to provide meaningful search criteria.  This type of information might take the form of domain maps, skills/competency taxonomies, knowledge ontologies, learner profiles, and metadata.   We plan to focus on the mapping of metadata, learner profiles, and skills/competencies taxonomies and to develop specific application profiles that process these relationships to provide specific search criteria.  A simple example might link a learning objective to an instructional object identified as having the same learning objective identifier.Figure 7.1.  Outline of the Proposed Architecture for Learning Content Contextualization, Discovery, and Resolution7.2  Discovery: A registry of object repositories that contains information about how to resolve the location and policies of each repository, and exposes a means for searching itFor communities of practice with a large number of distributed repositories (probably with different implementations and capabilities), some means of making each repository “visible” to searchers is needed.  A handles-based registry of repositories could produce the means to locate repositories and indicate how to search for content.  Guidance will have to be developed to define how repositories are to make their contents searchable, and to set local policy and business rules.  There will no doubt be many parallel strategies for discovery, but a means to register where content may be found is highly desirable. 7.3.  Resolution: A registry of unique object identifiers that contains information about how to resolve its location and other pertinent informationOnce a mechanism exists to discover content, the discovery process reveals the content’s identifier.  The Handle System can then resolve its location, metadata, and other information as required.  The content can then be obtained. 8.  Light-Weight ThinkingMany approaches to repository and content management have emphasized one of the three elements (context, discovery, resolution) over the others.  We believe all three must be considered equally and in parallel.  Also, efforts to federate repositories often end up over-defining access protocols, metadata sets, and complex services.  Our plan is to remain on a level higher than most of the infrastructure and concentrate on means to expose services, data, and capabilities so that use can be negotiated rather than predefined.  Communities of practice can then develop somewhat independently of one another as required, but still be able to create bridges of interoperability.ADL’s new initiative, the Content Object Repository Discovery and Resolution Architecture (CORDRA), was established in February of 2004 to address these issues and produce specific implementation guidance to support upcoming U.S. Department of Defense policy now in review.  This policy is expected to direct the use of ADL’s SCORM specifications, and to require that learning content be registered in searchable repositories. 9.  References[1] Dodds, P. V. W. (Ed.) Sharable Courseware Object Reference Model (SCORM) Version 1.2 (IDA Document D-2677), Alexandria, VA: Institute for Defense Analyses (2002).  Evolving versions of SCORM are posted on line at http://www.idanet.org.[2] Arms, W. "Key concepts in the architecture of the digital library," D-Lib Magazine (July 1995) [http://hdl.handle.net/10.1045/july95-arms].[3] Dublin Core [http://dublincore.org/] [4] Learning Object Metadata (LOM), IEEE Standard, [http://ltsc.ieee.org/wg12/index.html].[5] Handle System [http://www.handle.net].[6] Corporation for National Research Initiatives CNRI [http://www.cnri.reston.va.us/]. [7] Kahn, R. E. & Cerf, V. G. DRAFT "An Open Architecture For a Digital Library System and a Plan For Its Development", The Digital Library Project Volume I: The World of Knowbots, March 1988, [http://hdl.handle.net/4263537/2091].[8] Kahn, R. E. & Wilensky, R. “A Framework for Distributed Digital Object Services,“ (May 1995), [http://hdl.handle.net/4263537/5001].Author BiographiesPHILIP V. W. DODDS is a Project Analyst with Randall House Associates, Inc., Adjunct Staff Member with the Institute for Defense Analyses, and the Chief Architect of the Department of Defense Advanced Distributed Learning Initiative along with its Sharable Content Object Reference Model.PAUL JESUKIEWICZ is a Research Staff Member in the Science and Technology Division of the Institute for Defense Analyses, Director of the Advanced Distributed Learning Co-Laboratory in Alexandria, and Coordinator for all ADL Laboratory functions. J. D. FLETCHER is a Research Staff Member in the Science and Technology Division of the Institute for Defense Analyses where he specializes in manpower, personnel, training, and human factors issues.  He is the task leader for Advanced Distributed Learning tasks.RetrievalResolutionLocationIdentificationContextDeliveryDiscovery