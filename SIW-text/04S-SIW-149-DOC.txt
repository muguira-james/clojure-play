Advanced C4I Training for the Global Command and Control System – Maritime (GCCS-M)Gene Layman, Ph.D Naval Research Laboratory  HYPERLINK "mailto:layman@nrl.navy.mil" layman@nrl.navy.mil Dennis McGroder Dynamic Animation Systems  HYPERLINK "mailto:dmcgroder@d-a-s.com" dmcgroder@d-a-s.com William HarringtonSpace and Naval Warfare Systems Command HYPERLINK "mailto:william.harrington@navy.mil" william.harrington@navy.milKeywords: C4I, CTTS, Team Training, Simulation, Modeling and Simulation (M&S), Scenario, Web-Enabled, Global Command and Control System-Maritime (GCCS-M), Common Operating Environment (COE), Range Fusion System.ABSTRACT:  A set of advanced embedded training capabilities developed at the Naval Research Laboratory (NRL) provide various levels of Command, Control, Communication, Computer and Intelligence (C4I) training for the Navy.  Both operator and team training applications are being released to the fleet as part of the Global Command and Control System-Maritime (GCCS-M) upgrade currently under way. The Training Tutor provides operator training by injecting scripted scenarios into an operational system.  A trainer can use scenarios provided or create new scenarios using authoring tools provided. Lessons may be prepared that include visuals aids, training instructions, map highlighting and various display controls. Lessons walk an operator through the use of the GCCS-M core functions and mission applications. It can teach basic system skills to a new user or more advanced features of the C4I system.The C4I Team Training System (CTTS) is used by trainers to develop advanced scenario based training to be executed on the GCCS-M local area network (LAN). It is used to train users in assessing tactical situations and decision making. The trainer can tailor the training scenario to add relevance and achieve specific objectives. The CTTS is fully embedded within GCCS-M systems, and can provide training aboard Navy ships while underway without interfering with normal C4I operations, in port and at ashore training facilities.  Other training capabilities are being developed to capture the real world Common Operational Picture (COP) during exercises for use as the basis of CTTS training development, a comprehensive C4I reconstruction and exercise training assessment, a Range Fusion System (RFS) that will link to Navy Training Ranges and provide a ground truth data stream into the GCCS-M for training exercise environments.  A Transit Training capability is also being developed that will reconstruct pre-deployment battle group exercises to provide mission specific training while in transit to forward deployed areas. This paper describes the capabilities of these advanced C4I training tools and provides insight into future embedded training that is being addressed to take advantage of the current C4I focus on the Global Information Grid and network enabled warfare applications.1. IntroductionA set of advanced training tools have been developed at the Naval Research Laboratory (NRL) that provide various levels of Command, Control, Communication, Computer and Intelligence (C4I) training for the Navy.  An application called the C4I Team Training System (CTTS) has been released to the fleet as part of the Global Command and Control System-Maritime (GCCS-M) and will be used by trainers to develop advanced scenario based training to be executed on the GCCS-M local area network (LAN) for multiple trainees.  The CTTS is fully embedded within GCCS-M systems, and can provide training to at ashore training facilities, aboard Navy ships in port, and while underway, without interfering with normal C4I operations.  The CTTS is designed to host embedded training simulations, such as the Cruise Missile Trainer simulation plug-in and the UAV Down Link Trainer plug-in.  Another application named the Training Tutor has been developed to provide single operator level training for GCCS-M core functions and mission applications.  Training lessons are created and organized by trainers, and they may include dynamic scenarios to aid in the instruction of GCCS-M capabilities.  Other tools under development include a Training Author application that is used to build and manage these training lessons and scenarios and can be used by trainers for content creation in advance of ship deployment or while underway.   Other tools are being developed for capturing the real world Common Operational Picture (COP), replaying the COP back into GCCS-M, comprehensive reconstruction and analysis of real world operations and fleet exercises, and debrief capabilities for after action review, analysis, lessons learned, etc.  The ability to combine archived real world data with simulated data (or modified real world data) created by a trainer is also under development to further enhance C4I training for the end user. A Transit Training capability is also being developed that will use this and other available tools to reconstruct C4I training that was done during pre-deployment battle group exercises and provide additional mission specific training while underway.An additional goal is to provide distributed training across the wide area network (WAN) by making these tools web-enabled, so that collaborative content and scenario creation can be performed, as well as the distributed execution of training at both the operator and team level.  A Range Fusion System (RFS) has also been developed that will communicate with Navy Training Ranges and provide a ground truth data stream into the GCCS-M for training exercise environments.  This Range Fusion System will provide a standard interface to current Large Area Tracking Ranges (LATR) and other range systems and will be integrated with the CTTS and other training applications in GCCS-M.  This paper describes the capabilities of these advanced C4I training tools, their concept of operations, and a vision for how they can be integrated into a comprehensive embedded training system for the Navy.  What is now somewhat separate applications, tools, and software libraries that all have related functions will be organized into a single, comprehensive, integrated training system focused on the end user’s tasks and responsibilities in the C4I training realm. Training will be supported that typically progresses from basic operator level tutorials, to single operator training in functional areas, to a team training environment, where it first would be conducted ashore (or in port) before deployment, and then conducted while in transit to an operating area destination.  It is envisioned that the advanced C4I training capabilities developed at NRL can provide an organized C4I centric approach that supports the entire training process. 2. Evolution of C4I Embedded Training Embedded Training can take on many meanings depending on the purpose. The definition adapted here for C4I embedded training is when training data is injected into an operational C4I system that simulates real world situations, does not corrupt normal operations and the C4I functions operate on the training data in the same manner as real world data.  The benefit of this type of training is that it can be provided to C4I users and decision makers when and where it is needed. The applications described run within C4I systems that are compliant with the Department of Defense Common Operational Environment (COE). This includes the several variants of the GCCS and upward of a hundred or more COE compliant systems in various levels of development.Developing embedded training within C4I presented a significant challenge. C4I systems in general do not provide ready means to manage simulated data and operate on variable time bases.  As more comprehensive levels of sophistication of embedded training were conceptualized and developed it required the inclusion of C4I services to accommodate them. Training Type              Methods	  		COE Services RequiredOperatorScripted ScenariosStepped InstructionsTraining Data ManagementDynamic Scenario ReplayVariable time bases Visual InsertionsDisplay ControlsC4I Team TrainingEmbedded SimulationsFree PlayClient / ServerScenario GenerationLAN DistributionNetwork Based Multi-Ship TrainingEnhanced Real WorldDistributed ApplicationsPeer-to-Peer Synchronization WAN DistributionReal World Ground TruthC4I CentricMulti-System TrainingInterfaces to non-C4I SystemsTailored data exchangeFigure 1C4I Embedded Training EvolutionEmbedded training is broken down to several types and methods as shown in Figure 1. This table outlines some of the additional services that were required to be developed within C4I to accommodate the various levels of embedded training. This table also shows the evolution of capabilities within the C4I Training Infrastructure from basic operator level training through team training distributed across multiple ships and to operator trainees on military systems other than C4I.  Operator Level Training is directed at providing individual training through the use of scripted scenarios and step by step instructions to the trainee. The software consists of the Training Author and the Training Tutor. They are used for developing and delivering training to individual operators. The training lessons are played identically each time the training is provided. The training lessons include scripted scenarios that run on operational C4I systems accompanied by display controls (e.g., re-centering of the map, zooming), annotations (arrows, overlays), graphics and text. Figure 2 is and example of a screen.Figure 2Operator Level Training[Description of Figure 2.]It was necessary to devise software methods to replay dynamic scenario files through the C4I system in a manner that would exercise the system functions. Methods to manage variable time bases were necessary so the scenarios can run at real time or speeds up to 1000 times real time. They can be started, paused or advanced.It was also necessary to provide visual aids such as text, illustrations and map highlights to instruct the trainee.  Controls were provided to manage the map displays such as re-centering and zooming to areas of interest. The basic capabilities to inject simulated data and manage variable time based, developed for operator level training, were expanded to accommodate C4I team training.C4I Team Training is the term used to describe training that is provided to a team of C4I users and decision makers. Two major differences between this and operator level is that the scenarios are generated by simulations and they are injected into the ship’s local area network (LAN). Hence the training is accessible at any GCCS-M workstation by selecting the training common operational picture (COP) instead of real world COP. The C4I Team Training System (CTTS) is a simulation-based training application that provides C4I team training at training commands, operational facilities and aboard Navy ships. Specific training objectives are achieved through the use of an internal scenario generator plus the addition of plug-in training simulations that perform specialized tasks. The initial delivery of CTTS hosts an embedded simulation, the Cruise Missile Trainer (CMT) Simulation, a plug-in that was developed by the Naval Undersea Warfare Center-Division Newport (NUWC). A major capability that was needed to accommodate team training was provisions to embed simulations within C4I and interface them with various COE services. The technology utilized in operator level training was expanded to accommodate the injection of training scenarios into C4I that were generated by simulations rather than from stored files. Other Plug-in simulations can be developed and embedded within the Training Architecture.A second capability that was equally challenging was to develop an easy way to generate scenarios and efficient ways to store, retrieve and run them. The Mission Editor can produce scenarios that run directly in training sessions or be used as the ground truth input to simulations such as the Cruise Missile Trainer which in turn produces the perceived common operational picture that the trainees see. The Mission Editor provides a means to change the training scenarios during runtime.Figure 3CTTS Mission Editor[Explanation of  the Mission Editor]A Client / Server architecture was developed as a part of the Training Architecture. The embedded Clients within this architecture serve as multiple clients to both an embedded training server, such as the CMTpc and to COE servers such as the Tactical Management System (TMS) and Joint Mapping Tool Kit (JMTK).A final capability required was to devise the methods in which the training is distributed throughout the ship. Training occurs at specific workstations on the operational GCCS-M LAN while other workstations are continuing to process real world C4I data.Operator and Team Training software capabilities have reached a relatively advanced stage of development. The current phase or research and development is in the areas of network based, or network enhanced training to broaden the range of C4I training to multiple ships and C4I centric training that broadens the scope of embedded training to include other systems.Network Based C4I Training is simply the expansion of synchronized team training that can be produced and run across the C4I wide area network. This technology, currently under early stages of development, presents a challenge since underway Navy ships have a limited C4I communication bandwidth that can be dedicated to training. Many of the conventional methods of centralized generation and control of training data would be difficult to implement.Several methods are being examined for implementing network based training within the C4I architecture.  Additional requirements are being defined to achieve distributed training applications with peer-to-peer connectivity with data exchange and time synchronization across the C4I network.One approach being examined is a methodology that will allow distributed training scenario generation using a combination of scripted scenarios and free play. Many of the forces move according to a preplanned script. If not modified during the training they can be processed independently on each ship without further communication except for scenario changes. Changes to those scripts are communicated with much less data communicated than other approaches. Another area of importance being pursued is the ability to inject simulated forces into real world exercises. This requires the acquisition of real world ground truth obtained from instrumentation of the forces involved. Without ground truth the simulated forces would have no real references. The Range Fusion System (RFS) under development at NRL as part of this overall program and described later provides ground truth from Navy Training Ranges. The range data has been integrated with GCCS-M afloat and will be integrated with the CTTS this year.Finally, C4I Centric Training is a technique that extends the capabilities described above to provide interfaces to a range of other shipboard systems. We are in the early stages of this development. If the distributed Multi-ship C4I training technology is successful it makes sense to expand this training to other systems. And since the GCCS series of systems is the only Joint C4I configuration it provides the potential of a Joint embedded training infrastructure that is truly integrated into military systems and can provide the links to a wide range of systems networked to C4I.One application that has been developed is the UAV Down Link Trainer that is a plug-in simulation to the CTTS. It simulates the Predator down link video stream synchronized with the training scenario generated with the CTTS and running in the GCCS-M. Another C4I Centric Training application under development is an interface to Cryptologic systems.    Figure 3.C4I Embedded Training Architecture3. Embedded Training Architecture[Paragraphs (2-3) to be added at end of individual component descriptions on actual Integrating of CTTS, Tutor, Author, Archiver, and the C4I]The challenge in the developing a comprehensive set of embedded C4I training tools is integrating the various components together in a cohesive and logical manner.  By using software reusability principals, flexible design principles, and Java software development best practices, the envisioned C4I embedded training system will be extensible, allowing for future functions and plug-ins to be added more seamlessly.  This section describes the architecture of the C4I embedded training tools, for operator and team level training, and the design decisions made to integrate this component based software within the COE of GCCS-M.  It will then discuss the design concepts to be employed for future enhancements to be added to facilitate full network centric training for shipboard and distributed use.   A diagram of this architecture is shown in Figure 4.The C4I Team Training System is based upon the concept of a training host application, which is a GCCS-M mission application shell tailored to the specific domain of training and serves as a host to multiple embedded simulations applicable to training.  It contains a set of “core” components and functions that would be necessary for any basic C4I training capability.  Specific models and simulation components, known as plug-ins, can be added to build a comprehensive training application for the specific training desired, in this case, CTTS. The training host components of CTTS are derived from the Modeling and Simulation (M&S) Software Development Kit (SDK).  The Mission Editor component of CTTS is comprised of the M&S sharable software components related to scenario generation and management.  These components are the Scenario Editor, the COP Capture function, the Virtual Track Manager, Scenario Preview, and Dynamic Run. The Archive, Replay, and Author components have recently been added to the M&S SDK, and will be incorporated into the advanced C4I embedded training system being developed.  Additional domain specific components, such as simulations and other applicable plug-ins, can then be added to tailor its use for more advanced team level, network centric, and distributed training applications.The Scenario Editor component is a robust scenario generation and editing capability.  It is used in the CTTS to create and edit the time based scenarios stored in the VTM, and saved in Extensible Markup Language (XML) or Over-The-Horizon Targeting Gold (OTG) formatted files.  The Scenario Editor has an intuitive user interface and contains features that allow a user to rapidly create and modify scenario track and waypoint objects.  The Scenario Editor acts as a core functionality of the CTTS, around which other features and plug-ins are built.COP Capture is a function used to extract the real-time C4I common operational picture and provide it to the CTTS as a starting point for a scenario to be built, or to initiate a course of action or plan. Several filters are available to limit track types, time period and geographical areas.The Virtual Track Manager (VTM) component is the low-level software for storing and manipulating scenarios made up of simulated forces. The VTM stores the time based scenarios in memory as tracks, waypoints, and events. The VTM contains functions (Java methods) for creating and manipulating the tracks. Unlike the other services, the VTM has no graphical user interface but interacts with other M&S components such as the Scenario Editor, COP Capture, Scenario Preview and Dynamic Run.  An application accesses the VTM through application programmer interfaces (APIs), which are public Java classes and methods.The Scenario Preview capability is used to run and preview a scenario stored in the VTM during its development. It is used in conjunction with the Scenario Editor and can display all waypoints and tracks in the scenario in the form of PIM tracks. The scenario may be automatically time stepped or viewed in time slices by adjusting a time slider bar. The scenario is displayed on the GCCS-M default system map but not inserted into the TMS, therefore the GCCS-M system functions cannot operate on the scenario during preview.The Dynamic Run function processes the VTM scenario during CTTS runtime. Several options are available that effect how the dynamic scenario is provided. The output can be inserted into the GCCS-M TMS or provided to the simulation to process, depending on the training requirements. For example the stored scenario could be the “ground truth” input which gets converted to a “perceived picture” by the simulation, which is the case for the CMT Simulation Server plug-in in CTTS.  The Dynamic Run function generates the Simulation COP (SIM COP), which provides CTTS with the means to display simulated data in the common operational picture map display so that it protects the real world C4I data but allows all COE and GCCS-M software segments to operate on the simulated data in the same manner as if it were real.The first release of the CTTS contains an embedded plug-in, the Cruise Missile Trainer (CMT) Simulation Server plug-in, which is pre-loaded at runtime.  The CMT Simulation Server was adapted from the Cruise Missile Trainer – Personal Computer (CMTpc) training system, whereby the basic functionality of the simulation engine of the CMTpc and Contacts Database are preserved in the CMT Server for CTTS.  There is also a feature of the Dynamic Run component that is specific for the CMT plug-in, and it handles the interface between the VTM scenario in memory and the CMT sensor detection analysis and track reporting functions. The perceived picture for CTTS is derived from the VTM scenario provided by the Dynamic Run component to the CMT Simulation Server. Scenario tracks are then modified to simulate sensor inaccuracies and deviations, according to database setup parameters, and they are made visible or are hidden based on when they are actually detected.  Then, the reports for the perceived scenario finally make it to the GCCS-M LAN via the TMS as controlled by the CMT Output Client component of the Simulation COP. The Archiver is a training component that is being integrated for the advanced C4I embedded training system.   The Archiver can archive real world tracks from real time operations and training exercises, as well as simulated scenarios generated within the Scenario Editor of CTTS. The archives are saved on the system disk as simulated data in either XML or OTG format.The Replay component will allow the playback of archived C4I track data, either from real world operations, training exercises, or from training scenarios and simulated output from CTTS.  It will replay the tracks within the GCCS-M system as simulated data.  All C4I applications are active during replay and operate on the data the same as on real world C4I data. The Author component  provides additional authoring tools that allow the user to define an animated playback, import slides, screen captures, photo or other graphical images, etc., for briefing purposes, add pause and stop points, adjust playback speed and control the COP display (e.g., center the map or zoom, activate a tactical overlay, etc). The Author is generic in its component implementation.  It can be used for a Training Author that will create content for operator level training, or it can also be used for a Debrief Author that will be used for a wide range of briefing and presentation content.A diagram that illustrates the relationship between the C4I Embedded Training components and the COE services and application programmer interfaces (APIs) is shown in Figure 5. Previous papers have described this architecture. [ ], [ ] [Description of figure 5.]Figure 5.C4I Embedded Training and the COE Interface4. Operational use of the CTTS[Willie Harrington to describe who and how the CTTS will be used by the Navy]Figure 6.Example CTTS Screen5. Additional Training ToolsA number of additional training capabilities that will be integrated into the mix are under development or available. C4I Simulator/Stimulator – The C4I SIM/STIM is a version of the CTTS that simulates a separate COE system and passes training scenarios through the C4I communications channel rather than inserting directly into the C4I data base. The C4I SIM/STIM is capable of generating training scenarios or of archiving real world operations and playing them back. UAV Down Link Trainer – This application uses the common Scenario Generation capabilities in the CTTS as the input into an embedded UAV Visualization Tool (UVT). The UAV Down Link Trainer output stimulates the Predator down link to provide training synchronized with the training scenario being displayed on the C4I system.  Transit Training Application – The concept for this new development is to archive C4I data during Battle Group exercises for play back and training during transits to deployed operational areas. The advantage of this approach is that the trainees are familiar with the exercise since they had just been through it. Scenario generation tools can be used to modify the scenario to add interest and examine alternate threat conditions and courses of action. Range Fusion System (RFS) – The Range Fusion System (RFS) integrates data from multiple range systems into a common ground truth picture during Navy exercises and provide the fused product to other systems such as C4I, training systems, remote display systems and reconstruction/debrief systems. The Range Fusion System will be a crucial component in the future for mixing real with synthetic forces by provides ground truth for the real world elements.SponsorsSpace and Naval Warfare Systems Command (SPAWAR) – CTTS, Tutor, Author, UAV Down Link Trainer; Navy Modeling and Simulation Management Office (NAVMSMO) – M&S technology development; Naval Air Systems Command (NAVAIR) – Range Fusion System and its integration with the CTTS and GCCS-M;  Navy’s Quality Fleet Feedback (QFF) Program – the Transit Training Application.References[1]	McGroder, D., Layman, G.: “The C4I Team Training System” Paper 03F-SIW-069 Simulation Interoperability Workshop, Fall 2003; Orlando, Florida.[2]	Layman, G., Daly, J., Weatherly, J.: “C4I Host Applications” Paper 03F-SIW-053 Simulation Interoperability Workshop, Fall 2003; Orlando, Florida.[1]	Layman, G., Daly, J., Robinson, D, Weatherly, J.: “Integrating Simulations into DII COE Compliant C4I Systems” Paper 02F-SIW-048 Simulation Interoperability Workshop, Fall 2002; Orlando, Florida.[2]	Layman, G., Daly, J., Weatherly, J.: “C4I Embedded Simulations” Paper 01S-SIW-082 Simulation Interoperability Workshop, Spring 2001; Orlando, Florida.[3]	Layman, G., Daly, J.: “C4I Tactical Applications Utilizing Embedded Simulations” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, California.[6]	Daly, J., Layman, G.: “C4I Simulation Based Embedded Team Training” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, California.[7]	Tolk, A., Daly, J.: “Modeling and Simulation Integration with Network-Centric Command and Control Architectures” Paper 03F-SIW-121 Simulation Interoperability Workshop, Fall 2003; Orlando, Florida.Author BiographiesDR. GENE LAYMAN is a Research Engineer at the Naval Research Laboratory and directs a Command and Control Development Team that has been active in GCCS and GCCS-Maritime developments since their conceptions. Earlier he managed the Radar Branch and the Guidance Branch at the Naval Surface Weapons Center. Before that, Dr. Layman was a Program Manager in the Missile and Ordinance Division at Texas Instruments, Inc. and a Circuit Designer at The Boeing Company on the Minuteman Program. He has led or participated in the design of over two-dozen military systems with more than half becoming fully operational.DENNIS MCGRODER is a Principal Systems Engineer for Dynamic Animation Systems, and is the project manager for the C4I Team Training System at the Naval Research Laboratory.  He has acted as a lead software designer and developer for several COE based projects, including Embedded Training, Training Author, and Scenario Generator for the Joint GCCS, plus Training and Event Reconstruction for the Navy’s JMCIS.  He has been involved with advanced software development for over fifteen years, specializing in the areas of C4I, training, graphical user interfaces, and tactical decision aids.  He has had several applications deployed in operational C4I systems.  He holds a Master of Science in Biometry and Computer Science and a Bachelor of Science in Mathematics.WILLIAM HARRINGTON is a Program Manager for Northrop Grumman Corporation in the GCCS-M Program Office (PMW-157) of the Space and Naval Warfare Systems Command (SPAWAR).  [more…]/h/C4ITTS	/bin		CTTS JAR 		(main application)		Scenario Editor JAR		Dynamic Run JAR		ESI Library JAR		Database Access JARs		CMT Library JAR		DMI Help JAR		Run CTTS perl scripts and batch files		CMT Database Access perl scripts and batch files		/plugins			CMT Plug-in JAR	(included in CTTS)			[Debrief Author JAR]				[COLT Plug-in JAR]	(additional plug-ins)			[Predator Plug-in JAR]			…/data	/CMTPCDBMaster CMT Database file (MS Access .mdb file) with:	Contacts tables	Sensors / Emitters tables	/Exercises		CMT Database Exercise files (.mdb files) with:  			scenario infosensor / emitter parameter settings	/Scenarios		XML Scenario (.xml) files		OTH-T GOLD Scenario (.gld) files	/Icons	/Menus/Scripts	CTTS runtime environment batch file		CTTS class path batch file/SegDescrip	Standard COE segment descriptor files	SegInfo file:CTTS Requires: IFL, JMV, TMS, AFW, TMS-V