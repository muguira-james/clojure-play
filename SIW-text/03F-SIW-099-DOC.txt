A Narrative Meta-Model Approach to Bridging M&S and C4I applicationsReginald L. HobbsArmy Research LaboratoryTactical Collaboration & Data Fusion Branch115 O’Keefe Building – Georgia TechAtlanta, GA 30332, USAhobbs@arl.army.milKeywords:Scenarios, HLA, OMT, XML, knowledge representation, narrativeABSTRACT: Recently, there has been much discussion on the creation of a common framework for integrating information from Modeling & Simulations (M&S) applications with data generated by existing Command, Control, Communications, Computers, and Intelligence (C4I) Systems.  Both domains are shifting towards distributed, network-centric approaches for designing, implementing, and manipulating scenarios for the war fighter.  These scenarios are the basis for decision-making; strategic planning, training, lessons learned repositories, and systems development. Scenarios are narratives that illustrate future possibilities and help policy makers and designers choose among alternative courses of action. The Joint Technical Architecture (JTA) proposes standards for C4I interoperability while the Extensible Modeling & Simulation Framework (XMSF) promotes the use of web services, such as the Extensible Mark-up Language (XML) and the Simple Object Access Protocol (SOAP) as M&S standards.  In order to share semantically useful data from such a diverse range of systems, it is necessary to describe a conceptual model that can map the rules and behaviors in an abstract way.  The use of narrative, in the form of scenarios, as a meta-model makes this representation possible.  This narrative structure can be derived from simulation data to generate canonical stories from domain information. This paper describes the Scenario Markup Language (SCML), an XML-based specification grammar for scenarios.  SCML can be utilized to encode M&S and C4I data, sharing not only the objects, but also the context under which they were created and manipulated.  Once the information is in the intermediate scenario form, it can be analyzed and processed by external applications outside of the original simulations. This paper will present heuristics for deriving meaningful scenarios from a domain, potential uses of the scenarios, and an example mapping for interoperability between an M&S and C4I application.IntroductionThe research work that is described in this paper was first presented to the SISO simulations community during the Spring 2003 SIW conference  REF _Ref48629296 \r \h [11].  There were two factors that made the work particularly unique: 1) the ideas and concepts originated from the software engineering community and 2) it focused on using a narrative meta-model not associated with any operational military environment. However, it was deemed applicable by the modeling and simulation (M & S) community, as it presented an alternative approach for simulations interoperability. There are a myriad of standards being developed that address simulation interoperability at the object level. To support an exchange of semantics from a simulations tool to decision-oriented C4I systems, it is the context that must be shared.  What must be transferred from simulation to C4I is not where objects are in the virtual battlefield, but how and under what circumstances did they get there.The purpose of this paper is to describe how the implementation of a narrative meta-model could be used to capture semantics from simulations to assist the decision-maker. The following section begins with a discussion of current efforts within the government to support interoperability. Next, there is a discussion of the development of the narrative ontology and its implementation in a specification language called SCML (Scenario Markup Language).  Finally, there is a brief example of the use of SCML to support information exchange from OneSAF to a situational awareness (SA) system.Approaches to increasing M&S and C4I InteroperabilityThere was a high level of interest in issues concerning M&S and C4I interoperability during the previous SIW conference.  One of the most widely attended presentations focused on the how and the why of creating a framework for the interchange of information between the two domains  REF _Ref48640243 \r \h [17].  The necessity for such a framework is driven by the increasing scope of applications being developed on both sides.  Many of the systems are stove-piped, with little support for cross-pollination between environments.  There are also emerging requirements for embedded training simulations and the ability to immediately use simulation data under operational conditions.  A common framework would require the use of web services to support network-centric applications, the establishment of direct working relationships with the C4I community, and the development of components to support the interaction.Another approach was the use of the Common Operating Environment (COE), developed by DISA, as a model for interoperability  REF _Ref48642633 \r \h  \* MERGEFORMAT [2]. The COE is an architectural approach towards software development that focuses on reusable software and the establishment of guidelines.  There are over 100 systems across the DoD that adheres to the guidelines and policies of COE.  But the M&S community lacks a central governing institution on the level of DISA to administer and mandate an infrastructure like COE.  However, there is a large amount of lessons learned on interoperability issues that could be gleaned from examining the COE process.To share higher-level information between simulations, it is necessary to describe the context under which they are manipulated in a predictable format.  Interoperability at this level requires meta-models, adaptive models, and common repositories.  REF _Ref31023263 \r \h  \* MERGEFORMAT [16]A Narrative Meta-Model ApproachThe purpose of this research effort was to develop a computational representation for problem-solvers, particularly software engineers. Scenario-based design has become a powerful technique for system specification and design. The entire software development life cycle from requirements gathering, architecture descriptions, prototyping, implementation, and software maintenance involves some level of scenario descriptions. A scenario is defined as a form of narrative consisting of a collection of episodes with the purpose of describing the actions of characters within an environment.  Because of its utility for decision-making in general, a scenario-centered approach can be applied to other problem solving domains, such as M&S and C4I system development. The difficulty in developing a meta-model for simulations is due to the variations in styles, categories, and implementations of simulations.  It is necessary to describe an abstraction of simulations without being tied to a specific context.  All simulations are essentially stories.  They are stories about what was done, what is being done, or what can be done.  These different forms of narrative can be used for problem solving, training, entertainment, and other decision-oriented activities.  This approach begs the question: what aspects of narrative impact decision-making activities?  Answering this question involved creating ontology for narrative.The next section presents an overview of the scenario model designed for this work. Scenarios as NarrativeScenarios have been used in software engineering, cognitive science, and HCI (Human-Computer Interaction) to aid in decision making, comprehension, design, and training  REF _Ref31046321 \r \h  \* MERGEFORMAT [15].  These scenarios are used largely as points of discussion in each of these cases.  Building new scenarios or analyzing existing scenarios orient the discussion in collaborative activities and increase understanding in single user tasks. Currently, software developers and programmers are using scenarios (usually in the form of rapid prototyping or computer simulations) to assist them in system development  REF _Ref31044425 \r \h  \* MERGEFORMAT [3].  Scenarios are being used throughout the design process to examine alternate methods and techniques. These "what-if" studies allow them to refine the design and requirements of a system before (and sometimes during) implementation.  By catching potential system errors and design problems early in system evolution, costly redesigns are minimized.Just as there is the structural description of stories in the storytelling process, there is the ontology for activities that manipulate stories.  For example, to perform the task of creating a story, there must be some notion of collecting and cataloging events.  These events are then described using a goal-based structure.  The use of the goal-based hierarchy to define requirements has proven a useful method to capture analysis artifacts.  As an alternate example, consider building a script for a virtual environment using a graphical design tool.   In such an environment, the story is laid out by defining the low-level actions to be performed, (among the limited choices available), and assigning those actions to particular agents.  The actual interplay within the environment involves grouping these actions and corresponding props into situations that could occur.Cognitive scientists have used narrative in their models of explanation, inference and interpretation. These models have then been applied to professional practices such as pedagogy and educational technology  REF _Ref31044405 \r \h [4]. Scenarios are useful in externalize mental models and thought experiments. The decision-maker may test hypotheses by constructing what-if scenarios on top of a baseline description of the situation under consideration. The intention of these mental models is to clarify the relationships among actions and features of a situation and to understand better the consequences of actions.  In order to describe a language framework for scenarios, it is necessary to define a conceptual model of narrative.  The model evolved from analyzing multiple narrative domains, looking for commonalities of story elements  REF _Ref48629296 \r \h  \* MERGEFORMAT [11]. This led to the creation of ontology for decision-oriented narrative and the relationship between story elements.  This research identifies two aspects of narrative representations for scenarios: (1) the static structure of narrative content, and (2) the dynamic "storytelling" process of the narrative.  These scenario artifacts can be authored, shared, and analyzed using the appropriate software tools.  A markup language framework allows the separation of structure from application.  The semantic information within narrative and the relationship/hierarchy between story elements is represented structurally with tags and attributes in a specification grammar.    REF _Ref48639803 \h  \* MERGEFORMAT Figure 1 shows the narrative ontology represented as a UML (Unified Modeling Language) class diagram. The diagram establishes a hierarchy of story elements and the associations among them. Each element is a first-order object that can be manipulated within scenarios like the stock cuts of film editing.  REF _Ref31044648 \r \h  \* MERGEFORMAT [5] EMBED Word.Picture.8  Figure  SEQ Figure \* ARABIC 1 Scenario Conceptual ModelThe fundamental building block of scenario is the action. An action is anything that happens in the context of the story. It could be communication between, physical movements, or any change of state.  Actions are the lowest-level components of a scenario.  Meaningful sequences of actions make up events, and predetermined lists of events are combined into episodes.  Episodes are goal-based objects, with the individual events occurring to support sub-goals.  Each scenario can be described as a succession of episodes (goals) that were either achieved or thwarted.  It is this goal-based, hierarchical nature of the scenario structure that affords manipulation of the story.The process of storytelling can be described as purposeful navigation through a set of events. Regardless of the reason for the story, it is task of the storyteller to weave these event chunks into a meaningful whole. In filmmaking, for example, the technology and linear ordering of the viewed events has given rise to the aesthetics and terminology of film editing  REF _Ref31044593 \r \h [9]. Scenario Markup Language (SCML) There are several problems with current scenario representations, such as, domain-specific or proprietary techniques, requirements for narrative formalism, lack of support for multiple levels of detail and points of view, and platform dependency.  There are 3 specific research questions to be addressed by this effort:  (1) What aspects of narrative impact decision-making activities, (2) What computational framework for scenarios is non-intrusive, semiformal, extensible, multiple perspectival, and portable representing the semantics and modalities of the storytelling process, and (3) What common activities across decision-oriented narrative domains suggest building blocks for scenario applications?The goal is to represent the structural and linking models in a form that is general enough to describe the structure of any scenario, yet expressive enough to support different external views of the data. The choice of a markup language supports both these objectives. Markup languages describe a document’s structure, leaving presentation details to the capabilities of the structure-aware applications. The structural narrative model is implemented in an XML-based scenario specification grammar called SCML (Scenario Markup Language).Specific markup languages are defined from XML by creating a DTD (Document Type Definition).  The DTD defines allowable components and structures for documents of its type.  Designing SCML therefore involved determining which entities, elements and attributes to represent and the rules for combining them into a document encoded as an XML DTD. Major story components, such as episodes, goals, actions and cuts are all reflected as elements in the SCML DTD. Another important aspect of SCML is the support for the link strategy.  Within an XML-based language, the developer can define link types using XLL (XML Linking Language).  SCML links are bi-directional.  Extended links can target a selection of possible document artifacts, as opposed to a single file. External programs can be executed by activating a link using this method. Cut links are therefore implemented as extended links, allowing for cuts to any location in a corresponding episode.  Heuristics for Deriving StoriesAnalyzing the artifacts and processes of the organization helps determine episodic information to create reasonable stories. The military domain is extremely well suited for depiction-using hyperscenarios, due to the amount of established doctrine for any activity, particularly battle planning. It is straightforward to determine potential episodes, actors, actions, and events from army field manuals, policy documents, and regulations. There are some general guidelines, however, that can be used to discover the stories in a domain and increase the amount of coverage of information.  These rules are based on the contextual inquiry technique developed by Holtzblatt and Beyer  REF _Ref48666759 \r \h [13] to aid requirements analysis and system design.  Contextual inquiry is the basis of customer-centered design, an attempt to involve the customer in all aspects of software development.  To find out about customers’ requirements, the inquiry technique is used to construct work models that describe their environment.   These models are to highlight potential design problems based on how the current system is actually being used. Although contextual inquiry was developed as a technique for software design, it is very useful in capturing stories about the users’ domain.  Each one of the models (and the design problems that they uncover) is a scenario representing differing aspects of the same system.  There are five work models defined in the technique.Flow Model – The flow model represents the communication within a system with respect to workflow.  This model is used to define how work is broken up across an organization and how collaboration is accomplished to get work done.  Within the model, the designer is determining the individuals involved, responsibilities, groups that coordinate work products, and the artifacts that represent the work product.  This model offers a broad view of the organization, showing the people and their responsibilities.  Determining the force structure to support a mission objective would be an example application of flow modeling.Sequence Model – The lists of work tasks and their appropriate sequence.  The focus of a sequence model is discovering a customer’s intent, based on the actions done.  Individual tasks are deconstructing into the individual actions and analyzed. The order, triggers of action, potential breakdown in task completion, even hesitation and errors are determined in this model.Artifact Model- Work products are created, used, and modified in the course of doing work.  These artifacts and their manipulation give insight into the work practices and business rules of an organization.  This model is looking for the information presented by an object, its structure, and the presentation of the object, how it is used and any conceptual distinctions represented in the object.Cultural Model – Work does not happen in a vacuum; it is influenced by the culture, which defines the expectations, desires, policies, and value system to the work. The cultural context drives how things are accomplished through standards, policies, and organizational influences.Physical Model – Describe the physical environment under which work happens.  This could be the inside of a tank, the top of a bridge, or within a conventional office.  This model reveals the design constraints for new system development.  This model places a distinction on describing the site, the workplace, hardware, software, communication lines, and layout, even the organization of materials.  There can be many organizational assumptions derived from how space is utilized.Although contextual design uses certain diagramming conventions, they are not prescriptive.  The purpose of the technique is to have a systematic approach to determining design, or in this instance, discovering stories about a domain.An SCML-Oriented PrototypeA proof-of-concept scenario generation tool has been developed for SCML. The prototype is written as a Java applet, using standard web browsers for the user interface.  The narrative domain is that of a simple 3-dimensional maze game, modified to generate a log file.  This applet displays a 3-D maze drawn with texture-mapped walls. The object is to move through the maze, locating colored squares on the floor. The applet captures the user’s interaction and uses knowledge of the domain to supply the context.  This “plot” is then encoded in SCML.  At that point, transformations could be applied to the document to create alternate representations of the same story.  The XML Style Language (XSL) is applied to the document to control rendering and also to handle the transformations.  Alternate story views such as hierarchical, summary, tabular, and literary narrative are available for the participant.  The alternate views were to assist in strategy and analysis for future game sessions.  Other transformations have been coded for the simulation.  The text from the literary narrative can be further transformed by re-direction through a translation tool such as babelfish to represent the story in other languages.  Existing XML technologies, such as VoiceXML, can be used to generate an audio version of the story with the help of an appropriate text-to-speech engine.The usefulness of these story versions is in the extension of the thought experiments that are naturally performed during decision-making.  Game playing in decision-oriented environments, such as logic puzzles and mazes, are inherently pattern-matching exercises.  Discovering the correct sequence and form of subtasks is accomplished by trial-and-error, until the solution pattern unfolds.  The claim of this research is that the available of a computational version of the story that can be manipulated will decrease the amount of time for the “A-ha” factor to arrive.One of the most interesting transformations is that of a literary narrative.  The narrative reflects the actions that were done in the game simulation, with "narrative fluff" around it to make up a story.  Each time the game is played, depending upon the scenario variant and the actions, a different story is generated.  The tool can detect sequences of events and generate appropriate text to describe what happened.   The counterpart of the technique for the M&S community would be the addition of doctrinal or SOPs (Standard Operating Procedures) around known tasks.3D Maze Simulation ExampleSharing Stories from M & S to C4IThe scenario conceptual model and SCML can be used to share information from a simulation environment to a C4I system.  The work is in determining a mapping of story elements from one domain to the other.  A characteristic that represents a single action in a simulation may be operationalized as several events in a decision support system.  This is where the ability to add annotations, external documentation, and other forms of narrative become of vital importance.    The simulation environment contains objects with attributes and behaviors.  There may be some low-level context available within the system, but only what could be inferred based on the constraints of the software.  For example, if the simulation contained tanks or armored personnel carriers, it would be fairly straightforward to determine their location in the battlefield and their current mission status.  But why they are positioned the way they are and under what circumstances would not be apparent.  The next section contains a brief example of how the information could be encoded from a simulation to be useful with a command and control situation.  The information in the example was not actually used with either system, but is presented here for the purpose of illustration.The OneSAF (Semi-Autonomous Forces) Objective System is a simulations environment being designed to support a wide-range of military training and planning operations  REF _Ref48658381 \r \h  \* MERGEFORMAT [10]. The fundamental components are behaviors, physical models, and behavior agents.  The behaviors contained in OneSAF are low-level functions based on doctrine.  These behaviors control the use of the physical models in the system, such as weapons, sensors, and communications.  The behavior agents are used for planning and execution; these are the command and control agents that manipulate the behaviors.  These building block components are used to create composite behaviors that are more complex, entities that represent equipment and personnel, and units that represent organizational structures, such as platoons and battalions.  There are separate languages that represent the different compositions, but for the purposes of this example we will use the behavior definition language representation.  This grammar uses markup language syntax to represent the hierarchical elements within a behavior.  An example composite behavior would be MoveAndShoot. The definition for this behavior includes a tabular list of variables, and execution timeline, and the primitive behaviors involved.  Within MoveAndShoot, the primitive behaviors are moving around, sensing the environment, shooting the weapon system, and reporting the status.The C4I environment under consideration is the Situational Awareness (SA) requirements analysis effort for Military Operations on Urbanized Terrain (MOUT)  REF _Ref48660110 \r \h  \* MERGEFORMAT [7].  The purpose of this research was to use a goal-directed task analysis and subject matter experts to determine SA requirements during MOUT missions.  Military officers participated in a series of simulated missions and discussed the SA requirements during halts in the mission. By analyzing the expert’s responses, the researchers developed set of measurement tools to assess situational awareness. An extremely important and useful side effect of the research was the development of a detailed goal-hierarchy that represented the Military Decision-Making Process (MDMP)  REF _Ref48664189 \r \h [8].  This hierarchy was developed using doctrinal information, army regulations, input from the subject matter experts and goal decomposition techniques.  Because episodes in the scenario conceptual model are goal-based, this becomes the bridge to establish an automated connection between OneSAF and the SA task.Figure 2 is an excerpt from a concept of operation document.  This scenario describes a battle from the perspective of an army tank platoon.  In this scenario, each of two platoons has four M1 tanks.  The enemy also has two platoons, each of those contain three T72 Russian tanks.  This scenario information could be used to generate orders and describe mission objectives for OneSAF.  The participants are expected to know the particulars of how the objectives are to be met.The goal-hierarchy development by the SA environment could be used to place additional data around the behavioral data generated by OneSAF.  This additional information could be hyper-linked into the documents and might included descriptions of the Force structure, overlays from the battlefield, and images for battle damage assessment.  Figure 3 is an example of how the SCML formatted battle scenario might look.  Once the narrative of the battle is in this format it can be fed into other scenario applications to improve measures of situational awareness, generate after-action reports, perform Course-of-Action (COA) analysis, generate operational orders, or be inserted into a lessons learned database to support focused searches.ConclusionThis research was presented as an example of creating a meta-model to help bridge the gap between M & S and C4I systems.  In order to share semantically useful data from such a diverse range of systems, it is necessary to describe a conceptual model that can map the rules and behaviors in an abstract way.  The use of narrative, in the form of scenarios, as a meta-model makes this representation possible.  This narrative structure can be derived from simulation data to generate canonical stories from domain information. SCML leverages XML technologies and could be merged with existing efforts, such as XMSF.  The narrative model and the heuristics for story discovery could assist in finding ways to have the simulations inform decision-making in C4I systems, and for C4I systems to improve the accuracy and utility of simulation tools. BibliographyCarey, S., Kleiner, M., Heib, Michel, Brown, Richard. “Standardizing Battle Management Language-A Vital Move Towards the Army Transformation”. In Proceedings of the 2001 Fall Simulation Interoperability Workshop, Orlando, Fl 9-14 September 2001.Carr, F. and Myers, L. ”Interoperability and Reuse through a Modeling and Simulation Common Operating Environment”. In Proceedings of the 2003 Spring Simulation Interoperability Workshop, Orlando, FL April 2003.Carroll, John M. editor. ”Scenario-Based Design: Envisioning Work and Technology in System Development”. John Wiley  & Sons, Inc., New York, 1995.Carroll. John M. “The Scenario Perspective on System Development”. In Scenario-Based Design: Envisioning Work and Technology in System Development  REF _Ref31044425 \r \h [3], pages 1-15. Dmytryk, Edward. “On Film Editing”. Focal Press, Boston, MA, 1984. Elmasri, R., Wu, Y., Hojabri, B., Li, C. and Fu, Jack. “Conceptual Modeling for Customized XML Schemas”.  In ER 2002, Springer-Verlag Publishing, Berlin, pages 429-443.Endsley, M., Holder, L., Leibrecht, B., Garland, D. and Matthews, M. “Modeling and Measuring Situation Awareness in The Infantry Operational Environment”. Research Report 1753, US Army Research Institute, Alexandria, VA. January 2000.Endsley, M., Pleban, R. and Matthews, M.”Measures of Platoon Leader Situation Awareness in Virtual Decision-Making Exercises”. Research Report 1753, US Army Research Institute, Alexandria, VA. January 2000.Frensham, Raymond. “Screenwriting”. NTC /Contemporary Publishing,Chicago, IL, 1996.Henderson, Christopher.  “Model Execution in the OneSAF Objective System”. In Proceedings of the 2003 Spring Simulation Interoperability Workshop, Orlando, FL April 2003.Hobbs, Reginald. “Sharing Stories: Using Narrative for Simulation Interoperability”. In Proceedings of the 2003 Spring Simulation Interoperability Workshop, Orlando, FL April 2003.Hobbs, Reginald. “An XML-based Framework for Battle Planning Simulations.” In Proceedings of the 2000 Winter Simulation Conference, Orlando, FL, 10-13 December 2000.Holtzblatt, K. and Beyer H. “Contextual Design: Defining Customer-Centered Systems”. Morgan Kaufmann Publishers, Inc. San Francisco, CA, 1998.Murray, Janet H. “Hamlet on the Holodeck: The Future of Narrative in Cyberspace”. Free Press, New York, NY, 1997.Potts, Colin. “Requirements Completeness, Enterprise Goals and Scenarios”. Research Report, August 1994.Tolk, Andreas. “Avoiding another Green Elephant – A Proposal for the Next Generation HLA based on the Model Driven Architecture”. In Proceedings of the 2002 Fall Simulation Interoperability Workshop, Orlando, FL September 2002.Tolk, Andreas. “A Common Framework for Military M & S and C4I Systems”. In Proceedings of the 2003 Spring Simulation Interoperability Workshop, Orlando, FL April 2003.Author BiographyREGINALD L. HOBBS has been a research scientist for the Department of the Army for 13 years, currently with the Army Research Laboratory.  Mr. Hobbs has a B.S. in Electronics from Chapman University, a MS Computer Science Georgia Tech, and is a PhD Candidate at Georgia Tech. He has research interests and experience in the areas of software development methods, re-engineering, scenario-based design, XML for knowledge representation, and interactive narrative.  To simplify the discussion, the terms narrative and scenario will be used interchangeably throughout the remainder of this paper.A stock cut consists of previously created footage of actions that can be retrieved from a library and pieced together and used as a placeholder during filming.  http://babelfish.altavista.com This is from a mission scenario developed at West Point, originally used for ModSAF	Figure  SEQ Figure \* ARABIC 2 Concept of Operation * First Platoon (4 M1s):1st PLT will occupy attack position vic. ntc235890 and orient NNE in order to prevent enemy movement west along roadway vic. ntc240905. If contact is made, 1st PLT will conduct an ambush with 2nd PLT in support to the west at ntc221901. 1st PLT has priority of fire with 155 howitzer unit in support of operation. An Artillery-laid minefield is in place on roadway at ntc238905 to assist in fixing the enemy. Upon neutralizing the enemy, 1st PLT will assault to OBJ Red and set up a hasty perimeter.   * Second Platoon (4 M1s):2nd PLT will occupy attack position vic. ntc221901 and orient NE in order to prevent enemy movement west along roadway vic. ntc240905.    * Enemy (2 platoons; 3 T72Ms each):Move along Rt. T72M. Upon detecting enemy PLTs, enemy platoons will conduct contact drills and return fire.Figure  SEQ Figure \* ARABIC 3 SCML-Encoded Battle Scenario<?xml version="1.0"?><!-- Revision: 1.0 /usr/stb/hobbs/scml/ntcplatoon.scml --><!DOCTYPE hyperscenario SYSTEM "c:/current_wk/scml.dtd"><hyperscenario title="NTC Platoon Battle"><purpose>Maneuver Battle exercise for NTC tank platoon</purpose><role name="2nd Platoon"  id="2 PLT Charlie Company"><participant><actor>M1 Tank Squad #1</actor><actor>M1 Tank Squad #2</actor><actor>M1 Tank Squad #3</actor><actor>M1 Tank Squad #4</actor></participant></role><narrative><title>NTC Platoon Operations</title><setting>ModSAF Fort Irwin Desert Terrain</setting><script><episode name="Movement to Contact"><description>Maneuver conducted to develop the situation and to establish or regain contact</description><goal>Establish contact with OPFOR</goal><action></action></episode><episode name="Countermobility"><description>The construction of obstacles and emplacement of minefields to delay, disrupt, and destroy the enemy by reinforcement of the terrain.  The primary purpose of countermobility operations is to slow or divert the enemy, to increase time for target acquisition, and to increase weapon effectiveness. See FMs 3-50,3-100,5-102, and 5-250</description><goal>Slow or Divert the OPFOR</goal></episode><episode name="Defend in Sector"><description>A technique that requires a defending unit to prevent enemy forcesfrom passing beyond the rear boundary of the sector while retaining flank security and ensuring integrity of effort within the parent unit's scheme of maneuver. Initial positions generally are established as far forward as possible, but a commander may use any technique to accomplish the mission.  The higher commander will normally assign no-penetration criteria.  See FMs 7-30,71-100,71-123,100-5,and 100-15.</description></episode>