Using Neurobiologically Inspired Algorithms to Control Multiple Unmanned Air VehiclesMatthew Duquette and Adam ParryAFRL/VACD, 2180 8th Street, Suite 1 Wright-Patterson AFB, OH 45433Kevin AllenGeneral Dynamics, 5200 Springfield Pike, Dayton OH 45431Bret GivensInfoscitex, 4027 Colonel Glenn Highway, Dayton OH 45431Keywords:Reconnaissance, Surveillance, Target Acquisition, Unmanned Air Vehicle, Neurobiologically-inspired. ABSTRACT: In support of the Air Force Research Lab (AFRL) Air Vehicle Directorate’s mission to develop and evaluate future vehicles for the Air Force, AFRL/VACD has a mission to perform comprehensive simulation test and analysis of new advanced concepts. This paper details an on-going proof of concept focused on development of a neurobiologically-inspired system for the high level control of a Reconnaissance, Surveillance, and Target Acquisition (RSTA) Unmanned Air Vehicle (UAV) team. This study, entitled Neurobiologically Enabled Autonomous Vehicle Operations (NEAVO), will evaluate initial System-Under-Test (SUT) concept data by selecting well defined tasks, and evaluating performance based on assignment effectiveness, cooperation, and adaptability of the system. The system will be tested thoroughly in simulation, and if mature, will be implemented in hardware. 1. IntroductionThe use of unmanned aerial vehicles (UAVs) for various military missions has received growing attention in the last decade. Apart from the obvious advantage of not placing human life at risk, the lack of a human pilot enables significant weight savings and lower costs. UAVs also provide an opportunity for new operational paradigms. To realize these advantages, the UAVs must have a high level of autonomy and preferably work cooperatively in groups. Exchanging information within these groups can greatly improve their capability. Depending on the application, there are many different ideas on how to measure the autonomy of a system. In Ref. [1] the Autonomous Control Levels (ACL) metric was introduced. This metric has 11 levels ranging from “Remotely Piloted Vehicle” to “Fully Autonomous”. In order to rank its autonomy, a system is rated in five areas, “Perception/Situational Awareness”, “Analysis/Coordination”, “Decision Making”, and “Capability”. The ACLs are shown in Figure 1 along with estimated rankings of the vehicles developed to date. This is a good example of why the definition of autonomy must be used in context with the proposed mission and the weapon system being evaluated. A concentrated research effort has been conducted in recent years in the development of novel cooperative decision and control algorithms. The majority of the techniques that have been developed can be classified as either optimization-based methods that make use of extensive a priori information or reactive methods that use local information to define a global planning strategy. Optimization-based methods are strictly planning methods. Typically these methods require offline processing due to their computational complexity and can thus show a lack of robustness in dealing with highly dynamic environments. However, in some cases, re-planning phases during execution of the mission can be possible. The graph search approaches that have been used extensively typify these methods. Reactive methods take planning methods one step further by incorporating local information into the control strategy to allow for changing conditions in the environment. Rather than generating an a priori path through a given environment, reactive methods focus on using local information to define a controller for a vehicle that Figure 1. Autonomous Control Levelsultimately gives rise to the desired behavior. Potential function methods have long been exploited in the reactive paradigm. However, there is an area of research that focuses on neurobiological (or brain-based) design that has been less exploited in cooperative control. Brain-based design (BBD) may provide a unique solution to the cooperative control problem. For example, artificial neural networks (ANN) have been studied for many years and are “trained” rather than deterministically programmed. The complexity and sophistication of these designs has increased over the past three decades. These systems provide an even greater capacity to respond to changes in the environment than traditional planning or reactive methods. They will not only plan and react to the current environment but can also anticipate future changes. Clearly there exists the potential to extend the traditional Plan/React paradigms to include the element of anticipation. The essence of BBD lies in its ability to adapt to changing conditions in real time. By mimicking the design and operation of the human brain, these systems can exhibit a great capacity for learning about their environment [2]. It is the ability to make reasoned decisions that separates BBD from other cooperative control strategies. The Neurobiologically Enabled Autonomous Vehicle Operations (NEAVO) Study aims to exploit the capabilities of BBD to solve problems in the area of UAV cooperative control.2. Mission TasksIn NEAVO, teams of UAVs will be used to perform tasks in the category of Reconnaissance, Surveillance, and Target Acquisition (RSTA). These tasks are especially important in urban settings. Given the increased need for real-time information in urban settings, perfecting RSTA UAV teams is an important research topic with applications in modern warfare. In order to prosecute a target, several steps need to be accomplished in order to find, identify, and destroy that target. This process, the kill chain, is shown in FigureFigure 2.  The Kill Chain. Each step may iterate one or more times and be performed by one or more assets.2 and is often denoted by the acronym AF2T2EA. RSTA UAV teams can contribute to all steps of the kill chain.  Cooperation is a necessary component for a UAV team if that team is to manage multiple tasks. A team of UAVs should provide the best information possible to the warfighter. This often means coordinating tasks between multiple vehicles, and/or anticipating changes in the environment. There are many types of tasks that benefit from cooperation and adaptation. Consider the situation of a team of UAVs performing reconnaissance and surveillance tasks. A task, such as tracking a suspect vehicle, is given to the group. The target vehicle can turn at an intersection, stop at any time, reverse direction, speed up, or conceal itself behind terrain or structures. Tracking this kind of target is a difficult task for a UAV, especially if the UAV is not capable of traveling fast enough to maintain track on the target. However, a team of UAVs can be placed in a strategic manner to allow for a “hand-off” to take place. Now consider this task in the context of an overall mission. In order to position UAVs in the right location to perform many tasks, a system must anticipate future conditions, and adapt accordingly.For NEAVO, a subset of important RSTA tasks is identified as test cases for the demonstration of BBD. Two basic tasks have been identified:1.	Tracking a Moving Target 2.	Cooperative Area Search These tasks were chosen based on their relevance to RSTA UAV missions as well as their applicability to an adaptive mission planning system. 2.1 Tracking a Moving TargetTracking a moving target requires knowledge of the target’s current position as well as the ability to predict future locations. If a UAV team is given prior knowledge of a road network, or a map of obstructions that would block the type of vehicle being tracked, The UAV team could more simply predict the likely motion of the target. However, if the team is required to “discover” the terrain while tracking, the problem becomes more complicated. This is where BBD can be exploited. The mission task is as follows:A team of UAVs is introduced into an area of unknown terrain and culture. A target is assigned to the team. Using sensors on-board the UAVs, the team is to track the target as it proceeds through the unknown terrain. It is assumed that the target vehicle may travel faster than any one member of the UAV team. Thorough data sharing between team members is assumed.Figure 2.1 Tracking a moving target2.2 Cooperative Area SearchIt is common for areas to be searched using established search methods. When entering a new area, it is necessary to identify important items of interest, such as the locations of friendly or hostile troops, activity of civilian populations, the layout of road networks, or to find a specific target. Using BBD, a system can adapt to unknown terrain, learning ways to better approach areas that are to be searched, and to minimize the time to complete a mission. By employing multiple assets in a cooperative manner, the system can maximize the area searched over time. The mission task is as follows:A team of UAVs is introduced into an area of unknown terrain and culture. The team is assigned a search area designated by a geo-referenced polygon. The team is to determine patterns for searching the area, minimizing time to search. One or more targets with unknown location(s) may be placed in the search area. The team must locate the target(s).Figure 2.2 Cooperative area search2.3 ConstraintsFor the above tasks, several constraints are provided. A list of constraints follows.The team shall stay within a specified area of operations.  This area may change in shape or size during operations.The team must avoid all areas marked as no-fly zones.  No-fly zones may be added, removed, or changed during operations.Figure 2.3 Area search with no-fly zoneThe system shall allow for team members to be added or removed at any time.  New members shall be commanded in the same way as existing team members.Steady-state winds shall be considered when planning team actions.3. System Models3.1 VehiclesAll aircraft in NEAVO will be fixed-wing, small UAVs. The team may be heterogeneous, but all aircraft will be statically stable, autopilot controlled vehicles. Each vehicle will be a waypoint follower. A route will be uploaded to the aircraft by the command system.3.2 SensorsThe focus of NEAVO is cooperative task planning. BBD has shown promise in the area of video processing, and target recognition, but these technologies are not being considered in the NEAVO effort. Sensors will be modeled as polygons of fixed size, with a grid of pixels that represent a video image over that area. A notional sketch of this type of sensor is shown in Figure 3. Data will be passed from the sensor simulation to the mission planner supplying the information seen and a confidence value. Initially, the sensor will be in a fixed orientation on board the aircraft, but sensor movement may be considered later in the NEAVO effort.When data is passed from the sensor to the planner, a confidence value is applied to the detection. The confidence can be expressed as a function of the number of pixels on target, the amount of time that the target spends in the sensor field-of-view, the aspect angle to the target and the level of contrast between the target and the surrounding pixels. EMBED Equation.3  		                      (a)  Top View					(b)  Side ViewFigure 3.  Sensor Description (Notional)Figure 4.  The elements of mission planning4. Mission Planning SystemA multi-UAV mission planning system can be broken into five parts, as shown in Figure 4. The user, whether human or automated, requests a task or set of tasks. A task allocator decides, based on current information regarding the UAV team, which UAV or sub-group of UAVs is assigned that task. The importance or rank of the task can be decided by the task requester. The final step is to plan a trajectory for all UAVs that have been allocated new tasks. The planning system may run once per request, or iteratively based on user analysis. One or all parts of the mission planning system can be distributed among the UAV team, or contained in one physical location. In NEAVO, the system is assumed to be centralized in one location, receiving sufficiently timely and accurate information from the UAVs to operate the entire team.NEAVO aims to apply BBD to the task allocation and path planning steps of the mission planning system.  The result of the path planning step is a route instruction to one or more UAVs. 5. NeurocomputationNeurocomputation seeks to mimic the processing abilities of the brain to solve complex problems [3].  Neurobiological algorithms can typically be characterized by a few basic principles:Locality of computationMassively parallel computationHierarchical / modular architectureDecentralized controlAbility to learn and adapt to situationsThe most popular of these algorithms is the artificial neural network.  ANNs consist of very simple processing units connected in a distributed fashion.  Each processing unit is modeled after the neuron and is typically characterized by an activation function that may or may not produce an output based on the input presented to it.  Learning is accomplished by adjusting the weights that connect the neurons to each other.  In order to produce useful results, the neural network must be given some criteria for determining the goodness of its solution.  This criterion varies between different learning algorithms. [4][5][6]  5.1 Supervised LearningSupervised learning algorithms make use of training data in the form of a set of inputs and outputs.  Using information about the expected outputs given an input, the network learns how to respond to new inputs that it hasn’t seen before.  The performance of the neural network when acting on its own is entirely dependent on the behaviors present in the training data. The fitness of the solutions produced is determined based on comparison to the output data in the training set. Essentially, these represent desired outputs and the network is trained to minimize the difference between the actual output and the desired output.  Supervised learning mechanisms have been successfully applied to problems involving handwriting recognition, pattern recognition, and information retrieval.  5.2 Unsupervised LearningUnsupervised learning mechanisms make use of training data as well.  However, there is no output data used in the training set.  An input data set is used to fit a model to observations.  By forming a probability distribution over a set of inputs, the neural network can be trained to output the conditional probability of an input given all previous inputs.  As an example, consider a set of temperature data from a properly functioning power plant.  A neural network could be trained to determine the likelihood of a particular reading given all previous readings, and could thus be used to monitor the operation of the power plant.  Unsupervised learning techniques have also been applied to data compression problems.5.3 Reinforcement LearningReinforcement learning is unique in that it does not make use of training data.  Instead, a set of possible actions is provided to the network for a given situation and a system of rewards and penalties is used to direct behavior.  At each step an estimate of the future expected reward given a particular action is formed and the neural network is trained to maximize its reward.  In this way, reinforcement learning mechanisms rely on direct interaction with the environment.  Reinforcement learning focuses on online performance rather than a priori training and seeks to strike a balance between the exploration of unknown areas and the exploitation of currently held knowledge. This learning scheme has been successfully applied to robot control and telecommunications problems.    5.4 NEAVO ApplicationFor NEAVO it is envisioned that the task allocation and path planning problems will be solved using cascaded neural networks. Separate networks will be required for both problems and will feed into each other. Initially, a supervised learning scheme will be implemented using training data produced by internal simulations. A notional cognitive architecture that could be applied to this problem is shown in Figure 5.Figure 5. Notional Cognitive Architecture6. Evaluation of SolutionsRegardless of which neurocomputational method is used, there must be a means for judging the goodness of the solutions produced.  Metrics must be developed to evaluate potential solutions to both the task allocation and the path planning problems.  Although the NEAVO program will not focus on the development of sensor technology, all of the NEAVO tasks require accurate sensor information.  In the simple sensor algorithm used for this program, objects are detected with a given confidence. Given its applicability to the set of NEAVO tasks, sensor confidence seems to be a good metric to use in the evaluation of solutions.  For path planning there must also be some notion of energy expended along a particular path.  In the following sections, metrics for the NEAVO tasks are discussed.  6.1 Track a Moving TargetTracking a moving target requires that the target be in the sensor field-of-view and that the sensor have a high confidence in the identification of the target.  Several variables important for the evaluation of the vehicles ability to track a target are contained in the sensor confidence expression.  If it is assumed that the vehicles fly at a constant altitude, time to fly a given path can also be used as a metric to minimize the energy expended.  6.2 Cooperative Area SearchThe efficiency of cooperative search can be judged in several ways.  The sensor confidence metric can be used to ensure that the vehicle has high confidence in the identification of objects in a given area.  Another metric that should be used is the percent of the total area covered in the search.  The metrics used to judge the goodness of the cooperative search should recognize that there could be some value in covering a large area with a low level of confidence versus covering a small area with a high level of confidence.7. SummaryThe NEAVO Program seeks to evaluate the concept of a neurobiologically-inspired system controlling a RSTA UAV team.  As the system concept is developed, a simulation will be used to assess the ability to learn over time and the adaptability of the system, and if mature, the system will be implemented in hardware.  The simulation chosen to assess the system concept is called MultiUAV2.Construction of MultiUAV2 satisfies the need for a simulation environment that researchers can use to develop, implement and analyze cooperative control algorithms. Since the purpose of MultiUAV2 is to make cooperative control research accessible to researchers it was constructed primarily using MATLAB and Simulink.  Some of the simulation functions are programmed in C++. C++ is used for functions that require faster execution and do not need to be modified by researchers. For example, the cooperative control algorithms are coded in MATLAB scripts and the vehicle dynamics are coded in C++.During the simulation, vehicles fly predefined search trajectories until a target is encountered. Each vehicle has a sensor footprint that defines its field of view. Target positions are either set randomly or they can be specified by the user. When a target position is inside of a vehicle’s sensor footprint, that vehicle runs a sensor simulation and sends the results to the other vehicles. With actions assigned by the selected cooperative control algorithm, the vehicles generate their own trajectories to accomplish tasks. The simulation takes place in a three dimensional environment, but all of the trajectory planning is for a constant altitude, i.e. two dimensions. Once each vehicle has finished its assigned tasks it returns to its predefined search pattern trajectory. The simulation continues until it is stopped or the preset simulation run time has elapsed.Several issues are currently being explored in the NEAVO Program using MultiUAV2.  The issues as well as the progress to date made in NEAVO will be documented and presented at the Fall SIW.8. References[1]	B.T. Clough. Metrics, schmetrics!  How the heck do you determine a UAVs autonomy anyway. In Proceedings of the Performance Metrics for Intelligent Systems Workshop, Gaithersburg, MD 2002.[2]	J. Reggia, M. Tagamets, J. Contreras-Vidal, S. Weems, D. Jacobs, R. Winder, T. Chabuk, Development of a Large-Scale Integrated Neurocognitive Architecture, DARPA Information Processing Technology Office, 2006.[3]  D. Rumelhart, J. McClelland, Parallel Distributed Processing: Explorations in the Microstructure of Cognition, MIT Press, 1988[4]	S. Haykin, Neural Networks: A Comprehensive Foundation, Prentice Hall, 1999.[5]	L. Nunes de Castro, Fundamentals of Natural Computing: Basic Concepts, Algorithms, and Applications, Chapman and Hall, 2006[6]	HYPERLINK "http://en.wikipedia.org/wiki/Supervised_learning"http://en.wikipedia.org/wiki/	Supervised_learning	Unsupervised_learning	Reinforcement_learningAuthor BiographiesMatt Duquette is an aerospace simulation engineer at the Air Force Research Laboratory, where he specializes in UAV mission-level simulations.  Matt is a graduate of Clarkson University with a MS in mechanical engineering and a BS in aeronautical engineering.Adam Parry is an Aerospace Simulation Engineer at the Air Force Research Laboratory, where he is currently working in the area of UAV cooperative control.  Adam is a graduate of the University of Oklahoma where he received a BS in Engineering Physics.Kevin Allen is a Senior Software Applications Engineer with General Dynamics Advanced Information Services (GDAIS).  Kevin has a total of 28 years of DOD technical project experience with the biggest portion of his experience associated with flight and laboratory testing of electronic combat equipment.  Over the past four years, he has supported the Air Force Research Laboratory (AFRL) and the Aeronautical Systems Center (ASC) with software application and simulation projects.  He is a graduate of Virginia Polytechnic Institute and State University (VPI&SU) with a BS degree in electrical engineering.BRET GIVENS received his BS degree in Computer Engineering from Wright State University (WSU) in 1985 and his MS degree in Computer Engineering from WSU in 1990.  Mr. Givens works for Infoscitex and has more than twenty years of technical experience in software engineering and is currently supporting the NEAVO Project at AFRL/VACD.  