Command and Staff Training and the Practical Use of the HLA John W. OgrenMITRE CorporationPO Box 3320     Ft. Leavenworth, KS 66027     913-684-5754jogren@mitre.orgKeywords:HLA; SIMC4I; Eagle; IBCT; Training. ABSTRACT: Over the past three years, both the Command & General Staff College and TRADOC Analysis Center at Fort Leavenworth, Kansas, along with the TRADOC Army Experiment/Transformation program office have sponsored multiple training events using advanced simulations to drive staff training events. The suite of equipment and software to drive these events is known as the Digital Leaders Reaction Course (DLRC). The primary objective of the DLRC is to train the battle staff to leverage the advances in information warfare to win the next war. It provides an environment for training leaders on how to visualize the battlespace and make tactical decisions in a time constrained, digitized environment. The challenge is to create this environment in the most cost effective means that will drive the Staff Officer's senses such that they feel totally immersed in the on-going battle, making illusion becomes reality. This paper will describe this environment, focusing on the use of the High Level Architecture and its importance in facilitating the rapid federation of multiple software applications. The context of the paper is the TRADOC Army Transformation initiative being conducted this fiscal year to develop the Interim Brigade Combat Team (IBCT) Senior Leaders Training Course.1.0 IntroductionThe United States Army's Training and Doctrine Command’s (TRADOC) Army Experiment (AE) process has for many years utilized advanced simulations to investigate new command and staff training techniques. This year, in line with the Chief of Staff’s new thrust to transform the Army into a more agile, responsive force, the Army Experiment Program was changed to the Army Transformation Program. Its new focus is to provide training to the Commanders and principal staff officers of the new Brigade Combat Team (BCT) forming at Ft. Lewis, Washington. Simulation technologies and training methodologies developed under the Army Experiment Program have been combined and enhanced to provide a portion of this training experience for these officers of this new and innovative unit. This paper will focus on the training simulation called the Digital Leaders Reaction Course (DLRC) which was used to drive the capstone exercise of this BCT Senior Leaders Course (SLC). Specifically, the focus will be on the DLRC simulation architecture that is in place and used to support command and staff training at the Command and General Staff College (CGSC) at Fort Leavenworth, Kansas. A few examples of previous DLRC based exercises are the capstone exercises for CGSC advance tactics classes, the training of the commander and staff of the 1st Brigade 4th ID and 1st Brigade, 10th Mountain Division, and the analytical effort to design the Strike Force headquarters. The flow of information and technical aspects of the High Level Architecture (HLA) Federation of Simulations and Simulation to C4I interfaces used to support the training of the BCT will be also discussed.2.0 BCT Senior Leaders Course ObjectivesThe BCT Senior Leaders Course (SLC) was a forum for the Army’s Training Community to provide an intense indoctrination of the key operating principals and doctrine of the evolving Operation and Organization Plan to the Brigade Combat Team's principal commanders and staff. It lasted approximately five weeks and was conducted at Forts Lee, Huachuca, Knox, Benning, and Leavenworth. A Kosovo "road to war" tactical scenario was used as a common thread for all instruction. The course culminated at Fort Leavenworth, with a simulation driven exercise using the DLRC.  The exercise was conducted in two phases. The first was a week long exercise (8 - 18 May), conducted as a capstone exercise for the Command and General Staff A311, advanced tactics class. The general scenarios envisioned for the final exercise were tested and students played the command and staff positions of the BCT units. Extensive after action reviews were conducted not only on the performance of the students in fighting the battle, but also on the scenario designs and the flow of information to the staff sections through the C4I equipment. The second Phase, was the actual participation of the BCT command and staff in the DLRC on 21 through 25 August.3.0 Digital Leaders Reaction Course ArchitectureThe primary objective of the DLRC is to train a battle staff to leverage the advances in information warfare to win the next war. It provides an environment for training leaders on how to visualize the battle space and make tactical decisions in a time constrained, digitized environment.To create this environment, the DLRC combines several simulations and interfaces them to the following fielded Tactical Command and Control systems: the Maneuver Control System (MCS), the Advanced Field Artillery Tactical Data System (AFTADS), the All Source Analysis System (ASAS), the Combat Service and Support Control System (CSSCS) and the Air and Missile Defense Work Station (AMDWS). The core simulation used to drive the DLRC is the Eagle Combat Model.  This model combines techniques normally associated with artificial intelligence for representing command and control decision making and classic algorithmic solutions for representing the physical dynamics of the battlefield. The model represents commanders and staff sections at each level of a tactical military operation, all performing battle management tasks based on Operations Orders, driven by combat message traffic being passed up and down the chain of command. The DLRC leverages this design by divesting the cognitive processing of selected simulated commanders and staff sections to the live commander and staff players that are being trained; all other commands, including the enemy, remain in the simulation. The Eagle simulation allows for dynamic two-way interaction between the live staff players and the simulated subordinate and superior headquarters in the model. Information is passed to the live players through their C4I equipment and simulated radio traffic allowing the staff officers see and hear the battle. Their equipment has been modified to allow the staff to communicate directives and requests to fight the battle to their simulated superiors and subordinates.  The staff can also view the battlefield using a 3-dimensional viewer made possible by a unique process that allows disaggregation of the Eagle combat units into the Distributed Interactive Simulation (DIS) environment. By allowing Eagle’s simulated commands to play those units that are not directly being played by the live training audience, the normally required support staff and personnel are significantly reduced. The DLRC creates an environment that drives the participant’s senses so that they feel totally immersed in the ongoing battle, yet requires few if any role players and support staff. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 1Figure 1 shows the overall architecture of the DLRC. All combat modeling is done in the Eagle simulation. It outputs information directly to the staff by stimulating the C4I interfaces and simulated tactical radio via the HLA RTI. Selected C4I devices have been modified to provide information back to the combat simulation. Eagle also provides information to the After Action Review (AAR) system via the HLA. Eagle outputs sensor information from simulated airborne intelligence gathering assets to the Intelligence Message Generator (INTEL GEN). The INTEL GEN accumulates sensor information and provides intelligence information via the HLA to the ASAS. The Eagle simulation also provides unit information to the Modular Semi-Automated Forces (ModSAF) Simulation Interface Unit (SIU). The SIU generates entity information based on the units and their formations to drive the simulated video downlink from the Unmanned Areal Vehicle (UAV). Consequently, the UAV can view the Eagle aggregate battle as individual vehicles. The SIU also generates the air track broadcast message from simulated airborne sensors to the AMDWS.We will now take a close look at each element of this design and how we embed the Commander and his staff into the battlefield using this architecture.4.0 Eagle Combat SimulationEagle was developed in the late 1980’s as a vehicle to investigate the application of artificial intelligence to explicitly model command and control in a combat simulation.  The model’s typical combat functionality (such as attrition adjudication) relies on the extensive combat modeling experience at TRADOC Analysis Center (TRAC) and is rooted in standard, validated algorithms. The model is categorized as a constructive, aggregate Corps level model with normal resolution to company size units. Eagle uses a hybrid event structure that relies on both the notion of continuous time using time steps (1 to 5 min.) and the projecting of special discrete events (such as TBM launches or the penetration of air defense domes by fixed wing aircraft) at moments between the time steps. Eagle's architecture is built on the object-oriented programming paradigm. This paradigm is based on a philosophic focus of data grouped into objects acting on other objects, rather than on the traditional focus on processes which act on data. The data or knowledge representation reflects the unique requirements of the military domain. Eagle's knowledge representation conforms to the user's understanding of the problem space in three main areas. First, military units, weapon systems, and munitions are defined as objects. Second, terrain is represented as a network of mobility corridors each of which are objects. Third, plans are represented in standard five-paragraph field order format, so that the user can specify orders to units in a mission-oriented manner. Simulated command posts respond to these orders by accessing its domain knowledge executing the mission as directed. Decisions are made by the software commander and the information or directives are passed up and down the chain of command. This flow of information between command posts (software objects) is very important, because the actions of the units are not scripted based on time, but occur based on events that cause commanders to give their approval to execute the next portion of the plan. A software commander's perception of the battlefield is based solely on what his subordinates and the intelligence system are telling him and how it relates to the command's battle plan. Eagle portrays ground maneuver, attack and lift helicopters, field artillery, air defense, air and ground intelligence units, engineer units and logistics units. The primary emphasis is on Army units and capabilities, yet Eagle also plays air force air assets used in support of ground operations. This design has proven to be very flexible and quite adaptive to the needs of the DLRC.5.0 Simulation Interfaces to the Army Battle Command (ABCS) EquipmentAs indicated in the description of the combat model Eagle and shown in figure 2, simulated units in Eagle belong to a tactical organization and communicate with each other through a simulated communications network. Each unit’s communication requirements (defined as the type of information, destination and time to send) is explicitly represented in the unit's Standard Operating Procedures (SOP). Approximately 25 different message types are defined within Eagle and each has its own definition of when the message should be sent, who should receive it and content and format. For example in figure 2, Task Force 23 is sending a maneuver status message to its higher headquarters. The message is sent based on the conditional that it is to be sent every 10 minutes if one of its elements has changed. In this case the direct fire intensity that the unit is experiencing has increased to “heavy”, so the simulated staff forms the message and sends it on to 1st Brigade. Information flow is controlled within Eagle by a communications manager that can delay or prevent a message from being sent based on the ground truth characteristics of the two units that are trying to communicate. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 2Messages arrive at the headquarters and are placed in the unit’s journals so that rule sets/procedures that represent the various staff officers can use the information in the automated execution process. However, for those commands whose commander and staff are being played by actual people, information is further sent out to the C4I equipment associated with that command. Figure 3 shows this process. In this case, 1st Brigade’s Tactical Operations Center (TOC) is being played by real staff officers. The 1st Brigade TOC also exists in the Eagle model. The Software Object that represents this headquarters has both physical and cognitive capabilities. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 3The 1st Brigade TAC CP in Eagle consists of vehicles that move around the battlefield and may have weapon systems associated with it (such as Air Defense Elements). These physical parts (plus the cognitive processes to make them functional) remain in the simulation. However, the cognitive processes of the commander and staff in pursuing the ongoing battle and planning for the next have been "turned off" and superceded by procedures that will send and receive information from the live players. The cognitive capabilities have been “divested” to the live players. As shown in figure 3, Eagle units execute a very simple decision process. They acquire information, assess it, decide what to do, and then direct units to execute (or request information). For those simulated units whose cognitive processes have been turned off, only the assess and decide processes have been overridden. Information arrives at the simulated TOC and is both saved in the simulated unit's journals and sent out to the live staff. Staff officers make decisions and that information is sent back to the simulated TOC in Eagle. The decision is reformatted into a structure that makes it look like the simulated 1st Brigade Commander made the decision. Again it is logged in the appropriate journals and then sent out.  All information in and out of the simulated unit can be saved for later analysis. Additionally, this architecture allows the flexibility to dynamically turn back on the Eagle Commander's cognitive processes during the simulation run. In this case the simulated staff can pick up the battle based on the message logs. In short they know how they got where they are and the plans and operations they are executing.Information arriving at those headquarters whose cognitive processes have been divested, must make a decision as to how the information will be delivered to the actual staff officers. The basic communications foundation for all information flow between the Staff officers and the units in Eagle is the High Level Architecture (HLA). However which C4I device to deliver information to and in what form to deliver that information is controlled by Eagle initialization tables. These tables are tailored for each exercise based on the staff officer roles being played and the amount of headquarters live support personnel available. The available generic type interfaces (shown in figure 4) developed as part of the DLRC are:1. A direct Data Based input process for the Maneuver Control System. This process developed as a prototype for a future interface to the Joint Common Data Based (JCDB) allows Eagle to input information directly into the MCS databases replicating the processes used by the normal e-mail process.2. A USMTF e-mail process that allows delivery of the information via the HLA to the C4I device, then form up an arriving message and locally insert it into the arriving e-mail message queue.3. A TACFIRE interface process that allows delivery of TACFIRE formatted messages to the AFATDS. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 4For example, a location message arrives at the divested CP from an Artillery Unit. Based on the SOP, the information will be sent to the TOC Operations MCS as a direct database update, to the assistant Intelligence Officer at ASAS station number two as a USMTF S507L, and to the TOC FSO at the TOC AFATDS as a TACFIRE unit update. If Eagle is playing the TOC enlisted staff, then the location message may be directed to other MCS’s within the same TOC and to the higher HQ, replicating the staff's normal operations of forwarding information. The goal is to allow the principal staff officers to focus on the fighting of the battle, not the mechanics of using a particular computer.Figure 5 shows the headquarters and staff positions that were divested for the BCT SLC exercise.ARFOR HQ: Small Staff (6 Officers) to control ARFOR controlled forces such as the 4th Infantry Division.OPFOR: Controllers (3 Officers) to control 6 Enemy Brigades size unitsBCT Main TOC: All primary and assistant Staff Officer positions were playedBCT TAC: Commander and all primary Staff Officer positions were playedReconnaissance, Surveillance, Target Acquisition Squadron (RSTA) TAC: Commander and Operations, Intelligence and Fire Support (FSO) Officer positions playedForward Support Battalion (FSB) Operations: Operations, Logistics, and Intelligence Officer positions were played EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 5All other units were played in the simulation, including the staff positions at the subordinate battalions that were not divested. For example the BCT TOC staff may issue a FRAG Order to the 1st Battalion. The simulated 1st Battalion’s staff determines the actions of the subordinate companies and issues orders. Where as, if the BCT TOC Staff issued a FRAG Order to the RSTA Battalion, the actual staff officers would receive the message and they would have to plan for their subordinates and issue the orders to the companies. This automation of the unit's planning process and the direct flow of information between live players and the simulated units, is the key to the “low overhead” characteristic of the DLRC.6.0 Tactical flow of informationRegardless of the technical merits of the C4I design, unless the simulation and interfaces can get the right information to the right people in a form that is normally expected, it is of little value as a training tool. The DLRC attempts to immerse the staff into his environment, stimulating as many of the human senses as possible. The flow of information is two way.6.1 Information to the StaffTo create this environment, the DLRC not only delivers information to the C4I systems associated with each staff section, but also delivers information verbally though simulated radios that are monitoring the units command net traffic within the simulation and visually through a three dimensional (3D) stealth that is simulating the video down-link from the unit’s UAV. The following is a list of the C4I devices and the information sent to them.6.1.1 To Maneuver Control System (MCS)Direct Data Base update of friendly situation report information consisting of unit location, effectiveness, and general status information such as speed. Data would normally be from S507L and S302 USMTF messages.Direct Data Base update of enemy spot report information consisting of unit location, estimated effectiveness, and general estimates on the unit's activities. Data would normally be from S309 USMTF messageDirect Data Base update of a subordinate unit’s routes when moving. Data would normally be from S301 USMTF message.Direct Data Base creation of a new unit. Used to display enemy units and friendly units with no UIC in MCS task Organization.Free text Messages - USMTF S302 for general status information.Unit Orders - USMTF 432 for orders from higher units simulated or live when using DLRC communications rather than direct e-mail.6.1.2 To All Source Analysis System (ASAS)Friendly Locations - USMTF S507L for designated units in Task Organization.TACREP - C111 for enemy spot report information from higher and lower unitsINTREP - C110 for enemy Humint InformationTACELINT - C131 for information generated from communications and signal sensors.IPRR/IIR - C100 for information generated from photo and moving target sensors.6.1.3 To Combat Service Support Control System (CSSCS)CSSCS database message ASSET7/ UPDATE7 to update a unit’s class 7 (major systems) status. All CSSCS data base messages are embedded in a USMTF S302 and delivered via e-mail.CSSCS database message ASSET3/CS3-001 to update a unit's class 3 (Fuel) status.CSSCS database message ASSET5/UPDATE5 to update a unit's class 5 (Ammo) status.CSSCS database message ASSETP/UPDATEP to update a unit's personnel status.CSSCS database message Battle Damage Report to inform higher of a unit’s battle damage.CSSCS database message Critical Movement Report to inform the Staff of all convoys on the road.Free Text Message - S302 to inform Staff on unit supply request and convoy requests and general Supply Unit information.6.1.4 To Army Field Artillery Tactical Data System (AFATDS)TACFIRE AFU Fire Unit Update to update unit locations.TACFIRE AFU Ammo Report to update ammunition status of a unit.TACFIRE CFF Call for Fire to request a artillery mission.TACFIRE MFR Mission Fired Report for end of mission data from firing battery.TACFIRE CDR Coordinate Report to notify FSO of targets being fired in area.Free Text Message - S302 to inform Staff of firing battery information, target history information and detailed battle damage reports6.1.5 To Air and Missile Defense Workstation (AMDWS)Friendly Locations - USMTF S507L for designated ADA units in Task Organization.Air Warning Alerts - USMTF E500 from ADA units detecting inbound enemy aircraft.Free Text Messages USMTF S302 to inform unit of ADA Battery status, targeting and Battle Damage reports on firings.Air Tracks - F3 from airborne sensors of all air units flying in area of operations.6.1.6 To Simulated Tactical Radio Simulated units within eagle report their status in a multitude of message types. These messages are structured with commander decision information associated with a commander's critical information requirements. A unit does not report that it is 1.456777 kilometers from an object, but that it is “closing” on his objective. In this case the variable name is “relationship to the objective” and the possible values based on the SOP are: “at, closing, approaching ..”. There are approximately 50 of these variables, with groups of them associated with a message type. When a message arrives at a divested headquarters, the information is always delivered to the live players as indicated previously. If the unit has a simulated radio, the information is also delivered as a radio message. Each unit within the task organization has a unique radio voice. Unit designations can be based on a Communication, Electronic Operations Instruction (CEOI) with call signs varying base on the CEOI, or abbreviated unit names can be used. The following is a typical status message: “BCT this is 2nd Battalion, we are closing on our final objective, in contact with the enemy, currently effective with 96% equipment. Alpha company is in contact with 2 enemy units, receiving light indirect fires and medium direct fires, and is reporting an amber status, Bravo ..”. Over 30 type reports tailored for each unique situation can be generated. No reports are scripted, all are formed dynamically within Eagle based on the current situation.6.1.7 To Simulated Video Down Link from Unmanned Aerial Vehicle (UAV)To provide a 3-dimensional look at the battlefield, the DLRC has included a stealth display that can be attached to any vehicle within the unit. For the BCT this was a simulated video down link from the unit's two flying UAVs. Eagle has an extensive interface with a highly modified ModSAF program that allows Eagle to display its aggregate units in an entity state. The entities are dynamically created by this interface based on status messages from Eagle. They have minimal functionality, in that they will dead reckon, but will not fire or detect other entities (although their counterpart in Eagle maintains these capabilities). All resolution of combat is done in Eagle. When entities are killed, ModSAF is notified and entities will be displayed burning and eventually displayed as dead. When simulated Eagle artillery units fire, the impact of the rounds will be displayed. Entities are templated into the ModSAF environment based on the operational activity of the unit they are associated with. Staff Officers monitoring the Stealth, will see realistic unit formations conducting their normal combat operations. The stealth display used for the exercise allows the user to vary the picture between day TV and FLIR, zoom to narrow focus on an area, and designate the coordinates of a location.6.2 Information from the StaffUp to this point, we have focused on the information that is sent to the staff officers. However, for the DLRC to be truly “low overhead”, a means must be provided to allow the staff to communicate directly back to his subordinate units without the intervention of role players or “pucksters”. The DLRC has accomplished this with two two-way interfaces through the MCS and AFATDS.6.2.1 From the Maneuver Control SystemAs shown in figure 6, the map application on the MCS has been modified to provide a new menu choice that allows the staff to issue directives and requests directly to their subordinate units. The notion is the same as the standard MCS auto-fill capability provided by the message processor for sending unit locations. The Staff officer can select a unit on the map, activate the menu, then fill in a standard template of information and send the message. In essence the staff officer is sending a highly structure message back to the unit in the simulation via e-mail. Figure 6 shows the basic menu with a submenu used for issuing a FRAG order to a unit. Other general functionality allowed is:Requesting detailed unit status information.Requesting Artillery firing summary information for the past 30 minutes.Issuing FRAG Orders. These can include multiple Tasks and be on-order. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 6Create an Artillery Fire ScheduleChange Fire Support PrioritiesIssue tasking to Engineer units to breach or create obstacles.Request Air Force support.Request Artillery FASCAM missionsSimple Fire Mission requests.Request supplies from higher HQ or issue supplies to subordinates.6.2.1 From Army Field Artillery Tactical Data SystemThe second two-way interface is through the AFTADS. Figure 7 shows the typical flow of a call for fire originating from an forward observer in a simulated combat unit. Eagle and its associated TACFIRE interface allow for the normal flow of targeting information to the Fire Support Officer (FSO) using the AFATDS. The FSO can use the automated unit selection process of the AFTADS to designated the firing unit for every artillery mission. The call for fire is then forwarded to the simulated Artillery unit, where the mission is fired. The mission is closed out with a Mission Fire Report returned to the AFATDS. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 76.3 Information flow summaryThe combination of the information flow to the staff officers and the allowed functionality to return directives and orders has been very effective in allowing a cost effective solution to the training of units with their C4I equipment. Figure 8 shows the 29 available message types used in a typical DLRC exercise. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 87.0 HLA Run Time Interface (RTI) FederationUp to this point we have focused on the tactical flow of information and the functionality of the combat simulation and C4I devices. The underlying structure that holds these two elements together and makes the DLRC functional is the High Level Architecture.7.1 C2HLA federation object modelThe HLA was used to generate our C2HLA BCT SLC federation. This federation consisted of seven different type federates as shown in figure 9 and described below. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 9Eagle Federate: The combat simulation.Intel Federate: The intelligence generator received intelligence sensing information directly from Eagle, processed the information as an intelligence interpreter, generated the appropriate USMTF message and sent the information out to the designated ASAS.AAR Federate: The Eagle after action review process. This federate captured all ground truth information from the combat simulation to include locations, tasks, equipment status, direct and indirect firings. It also captured all information coming from the live Staff Officers to the simulationC4I Federate: The basic interface to the C4I devices which allows for the direct data base updates to the MCS and USMTF message delivery to the message processors on all C4I devices. This interface is a two-way interface on the MCS which also allows for the return of information from the Staff Officer to the simulation.TACFIRE Federate: The basic interface to the AFATDS for the delivery of TACFIRE Messages. This interface is also a two-way interface allowing for call for fires to be sent to designated artillery units.Radio Federate: The interface to the speech synthesizer which was the simulated radio at each of the command posts. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 10The basic HLA compliant federation used was DISTRIBUTED EAGLE (Nov 1998). It was extended for this exercise by including the previously described federates and upgraded to use RTI Version 1.3 NG version 3. The size of the exercise did not require the use of multiple Eagle federates; however, the one Eagle federate did assume that multiple Eagles were present because all objects were required by the AAR to maintain ground truth information for the after action review process. Figure 10 shows the class objects that were defined. Forty-seven attributes were defined for the ground maneuver and air maneuver classes. Forty-five attributes were defined for the fix wing class. All attributes were time stamped ordered and reliable delivery.Figure 11 shows the seventeen interaction classes that are used in a DLRC exercise. Actually the federation declaration file (fed file) included thirty-seven interaction classes. The twenty additional interactions are associated with distributed Eagle. All seventeen interactions were: receive order, reliable delivery. Basically, the following interactions were associated with each type federate:AAR: 3 interactions to notify the AAR process of all firings and when Eagle made time advance requests.RADIO: 1 interaction to deliver the string text which was then parsed through the speech synthesizer.C4I: 7 interactions to deliver and receive information from the C4I devices. Unique interactions were defined for each type of MCS data base call. However, all USMTF messages were formatted at EAGLE and only one interaction was used to deliver the e-mail traffic to the C4I devices. The type of USMTF message was an attribute of the interaction. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 11TACFIRE: six interactions to deliver and receive information from the AFATDS.7.2 C2HLA federation designThe DLRC federation is normally organized into groups that are generally associated with a particular network segment and TOC configuration.  EMBED PowerPoint.Slide.8   Figure 12In the BCT exercise, three network segments were available. Two were dedicated to the tactical network and one to the simulation network. As shown in figure 12 a total of 23 federates were used in the C2HLA BCT SLC federation. The RTI executive, federation execution, Eagle, the Intel Generator, and the AAR were running on the simulation network. The largest traffic producers were the ModSAFs that were also running on this network. The only Staff interfaces on the simulation network were the Stealths. The C4I networks were protected from this ModSAF traffic because there was no multicast between segments.The remaining groupings are organized based on the tactical operation lay out of the designated command post.  Figure 13 shows the BCT Main TOC federation configuration. An important element of the DLRC design is that a single C4I interface can provide interfaces for multiple C4I devices. In this case there are 11 C4I devices being serviced by four federates (five when including the Radio) running on three separate computers. The actual design of the number of interface machines and number of federates required is a trial and error process in the setting up of the exercise. Typically federates are added or moved based on the actual flow of information as it evolves during the exercise. Overall, for this experiment, there were 23 federates driving 36 C4I devices and four radios in seven cells over two network segments. It should be noted that normally an exercise of this type would have had seven separate network segments, however they were not available on the local area network. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 127.3 C2HLA federation data distribution managementThe constraining of the amount of information flowing to the C4I federates is of prime importance. To manage this information flow two process are used. First, as stated previously a single federate can service multiple C4I devices. To identify a unique C4I device a role is assigned to the device. The DLRC process that runs on the C4I device, identifies itself to the C4I federate with this role. The C4I federate maintains a list of those roles that are attached to it. Each interaction that the C4I federate subscribes to has a parameter “to”. Eagle maintains a list of these roles and tables that identify message types with particular roles. These tables are set up based on the desired flow of information. Eagle will identify the message with this role in the “to” parameter. When the C4I federate receives the interaction it will extract the “to” parameter and send the message on to the DLRC process running on the appropriate C4I machine. If the same information is always to be delivered to a group of machines attached to the same federate, then they all can have the same role and the C4I federate will send the single RTI message to multiple C4I devices. Second, the HLA data distribution management process of creating routing spaces is used. In this case, all C4I and Radio federates had unique routing spaces. The routing space defined was Info_Link which had 17 regions each defined by a point on a linear scale.  By using the routing space, information addressed to a C4I federate could be sent directly to the one federate needing the information, rather than to all 13 other C4I federates. Eagle maintained tables that identified C4I device roles with designated routing spaces. Through both these constraining techniques, network traffic was kept at a minimum. This is very important on the tactical networks, where the simulation traffic is sharing the network capacity with the tactical traffic, and the tactical network traffic has priority. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 13In summary, the DLRC through processes running on multiple machines manages the information flow to guarantee that the required information gets to the required C4I device. Figure 14 shows this configuration. For the interfaces associated with the C4I devices this entailed creating 20 federate processes over 10 machines and 36 DLRC processes running on the actual 36 C4I devices. This DLRC process provides the ability to input information into the database or place information on the device’s e-mail message queue. To manage these multiple processes, scripts are developed that allows one person to start up and monitor all processes from two control machines in the simulation cell. The general flow of information can be monitored and as C4I devices fail, color coded windows allow for the quick identification of problem machines and the appropriate recovery procedures can quickly be initiated.8.0 Message flow statistics and observationsThe actual experiment lasted for approximately seven days including two days of familiarization with the equipment and interfaces. During the training period five separate scenarios were available for exercising the staffs. The following message traffic statistics were generated on the fifth day of the preliminary exercise in a "movement to contact" scenario where both the Blue and Red forces were moving to engagement.This scenario lasted a little over five hours and figure 15 shows the number of object updates and interactions that Eagle sent and received.  Eagle initially instantiated 470 combat unit objects. This number increased to approximately 600 during the simulation run due to user initiated tasks that required logistics convoys, engineer teams or airforce flights to be created. Figure 15 shows the number of messages sent to each major Blue TOC cell by C4I device.  Including the object and interaction updates, Eagle was sending approximately 500 messages per minute over the RTI. All this traffic was reliable delivery. The total number of interactions received by Eagle from the C4I devices issuing orders or requesting information was 1042.  The network load was never a factor in this experiment. Probably the most important factor that the DLRC had to deal with when interfacing with C4I devices is the number and rate of arrival of messages to the devices. It is very easy for the Eagle combat simulation to literally flood a device with so many messages that the device becomes completely unusable. During this exercise the various machines had no problem with the rate of messages. The CSSCS figure is misleading in that all units had a cycle that they reported logistics information, so their messages tended to arrive in groups. The interesting statistic is the rate of messages sent to the MCS. This is a high number and would probably have had a significant impact on the computer, if they were all e-mail traffic; however this is not the case for the DLRC interface. The primary input to the MCS was data base updates which required significantly less processing compared to parsing e-mail traffic. Reliable, timely information could be sent to the MCS because of the unique interface which replicates the general functionality available with the new ABCS Block 6x devices using the Joint Command Data Base. EMBED PowerPoint.Slide.8  Figure  SEQ Figure \* ARABIC 149.0 Observations and direct for future.The DLRC has been proven to be an effective means to conduct training for commanders and staff using their ABCS equipment. The flexibility of the simulation and interfaces lends themselves to react to the unique needs of a particular experiment or training session. The quick turn around of resetting the simulation and interface devices to allow for multiple runs of the same scenario vignettes on the same day, has been very complimentary to the Adaptive Training Methodology used by the college. Exercises are typically run training on a single Combined Arms Event such as "Conduct a Movement to Contact". Mentors provide oversight and if the staff is missing the objective of the current training session, then a quick AAR can be conducted and the simulation and C4I devices reset to try again. This continual replaying of same vignettes until the training objectives are met is one of the single most important aspects of this environment. The students don't leave until they get it right. The DLRC is typically used in this quick turn around, intense environment. However, it can also be used for a large continual staff exercise that lasts for weeks. The Strike Force exercise was an example of this continual type of exercise. This exercise lasted approximately two weeks using the same scenario. The simulation was reset each day from a checkpoint that had been conducted the prior evening. Over sixty hours of simulation time was played driving over 64 C4I devices, spread over four classrooms, keeping approximately 60 staff officers busy. The key architecture parts of this environment are constantly being modified and enhanced. The following is a summary of the direction that the DLRC is proceeding for the future.Eagle: The Eagle combat model has extensive capabilities that at present can not be leveraged by the live staff. A continual challenge is to determine how this functionality can be made available for the use of staff officers. Also during each exercise, the expertise of the students is leveraged and their knowledge is used to enhance Eagle. This is especially true for the embedded doctrine of operational tactics and techniques that the automated units use to execute missions from the live players. Additionally, the re-hosting of the Eagle software on a PC is actively being pursued, which will provide a lower footprint for the simulation and more flexibility to the using community.ModSAF: The detailed terrain resolution and entity representation of the units has undergone extensive revision over the life of the DLRC. More advanced stealths have been used to give a better picture. Providing for the display of burning and destroyed vehicles has injected more realism. The DLRC is currently looking at enhancing the SIU by using a version of Joint SAF or, as it comes available, One SAF.HLA: The HLA has proven to be a successful underpinning of this endeavor. It is flexible in its approach and has allowed for the easy integration of federates into this environment. Although not a part of the BCT SLC, the DLRC has an interface to the Force Battle Command Brigade and Below (FBCB2). This connection was made available with an HLA interface to a simulation interface call Situational Awareness Tactical Internet Data Server (SATIDS). The integration of SATIDS and Eagle took little or no time and was significantly assisted by the structure of the HLA. A similar interface was made with CSTAR, which is a intelligence modeling simulation that was used in the Strike Force exercise. The overall point is that federates have been brought in and removed with little effort because we rely on the HLA as the basic communications architecture for the DLRC. The DLRC will incorporate each new version of the RTI.C4I Interfaces: Providing the information to the ABCS equipment is a continual challenge. The ABCS equipment is evolving to new versions and the DLRC must keep up with these revisions. The DLRC is an active participant in the SIMC4I OPT and has preliminary designs and software to interface with the new Block 6x versions of the ABCS. Two important Defense Information Infrastructure Common Operating Environment (DII COE) products that are the keys to our interface are the Joint Common Database (JCDB) and the Common Message Processor (CMP). The DLRC also requires a means for the staff to communicate back to the simulated units. Current investigation of this capability involves two new capabilities. First, a menu system is being devised that is independent of a particular C4I system. It will use common applications and be available for all systems. Second, a voice to text capability is being investigated to allow users to input by voice structured instructions to the simulated units. The flexibility of the DLRC and its leveraging of artificial intelligence to replace the normal support personnel has greatly enhanced the effective training of these "digitized" staff officers.Author BiographyJOHN W. OGREN is an Simulation Modeling Engineer working at the MITRE site at the TRADOC Analysis Center, Ft. Leavenworth, KS.  He retired from the US Army in 1993 as a Lieutenant Colonel having spent the last eight years of his career in the Operations Research & Analysis Field. He began working with simulations while assigned to the Combat Development Experimentation Center (CDEC), at Fort Ord, California. CDEC conducted live experiments with actual combat equipment, where the resolution of combat was modeling in a central computing facility. He continued working with Combat Simulations while assigned to the Los Alamos National Laboratory where he studied artificial intelligence and its application to command and control. He began work with TRAC on the Eagle combat simulation in 1988 and continues to expand and develop its functionality.Eagle Tactical CommunicationsDLRC ArchitectureSIMC4I Interface ConceptInformation Transfer OptionsBCT SLC Divested HeadquartersInformation From MCS to SimulationInformation From AFATDS to SimulationSummary of Message TypesTypes of Federates in FederationFederation Object ModelFederation Object ModelBCT SLC FederationBCT Main TOC ConfigurationC4I Interface SummaryMessage Traffic Analysis