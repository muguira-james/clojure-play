Derivation of a C4I FOMDr. Stephen G WaltersBAESYSTEMS UNIT D1 Marabout Industrial Estate Unit D1DorchesterDorset UK+44 (0) 1305 251111UK Defence and Evaluation Research AgencyPortsdown (LBTS)FarehamHampshire UK+44 (0) 23 92 31 2921swalters@dera.gov.ukKeywords: FOM development; C4I systems; C4I FOM, combat system; RPR FOM; FOM interoperabilityABSTRACT: As a part of the UK Ministry of Defence funded Combat System Integration (CSI) Research Programme a testbed is being developed to provide an environment in which experiments can be conducted to address combat system integration issues.  The CSI TestBed comprises a synthetic environment (SE) component, which is a simulation of the physical and operational environment in which a naval combat system would find itself, plus a set of C4I applications (as opposed to simulations) which are stimulated by, and exchange data with, the SE component.  This SE component comprises an HLA federation that communicates with the C4I Applications via an interface federate.The elements of the CSI federation have been designed to exchange real world data in conjunction with data which supports scenario distribution, the communication of perceived data such as sensor tracks and the communication of command and control messages.  Additionally the CSI TestBed is required to inter-operate with DIS simulations via a Gateway. In order to meet the requirements of the TestBed, the RPR FOM has been extended to encompass this additional data. This paper describes the development of the CSI FOM and the TestBed concepts that underlie it, including the distribution of scenario initialisation data and the treatment of perceived data.  As this is the first major application of the HLA standard undertaken by the engineering team working on the TestBed, this paper also describes the lessons learnt during the development of the FOM, including some of the potential interoperability issues.  The development of the CSI TestBed is described in another paper in these proceedings.Introduction OverviewAs a part of the UK Ministry of Defence funded Combat System Integration (CSI) Research Programme a TestBed is being developed to provide an environment in which experiments can be conducted to address combat system integration issues.This paper describes the development of a FOM, which defines the information exchange within the CSI TestBed.  The topics covered in this paper are:A brief overview of the TestBed and its architecture.A description of the underlying concepts within the TestBed which are embodied within the FOM.An overview of the CSI FOM in terms of its overall structure and classes.A description of the process used to develop the FOM and the lessons learnt from this process.A preliminary discussion of some of the interoperability issues that will arise when the CSI TestBed inter-operates with other facilities.CSI TestBedThe Combat System Integration (CSI) programme is a United Kingdom (UK) Ministry of Defence (MoD) research programme.  The programme is led by the Defence and Evaluation Research Agency (DERA) as an integrated research team with UK industry.The CSI programme is concerned with the de-risking of future (distributed) combat systems through the early integration and testing of combat system elements, their integration with legacy systems, and the integration of COTS elements and technology.In order to support the CSI research programme a TestBed is being developed comprising the following elements (see also Figure 1.1).A set of C4I applications.  These are representative combat system applications which receive their information about the real world from sensors, human operators or communications devices.  Within the CSI TestBed these applications are interfaced using the Common Object Request Broker Architecture (CORBA) standard.  The C4I applications are conceptually located on a subject platform – usually a naval ship.An HLA federation comprising a set of inter-operating simulations which together provide a simulation/stimulation environment for the C4I applications.  This federation simulates: the subject platform(s) on which the C4I applications are located; subject platform sensors, communications devices and weapon systems; threat platforms, weapons and sensors; the underlying physical environment EMBED Word.Picture.8  Figure 1.1: Overview of CSI TestBedThe C4I applications and HLA federates are legacy developments by other research groups or industry. A more detailed description of the CSI TestBed is at Reference 1.Within the CSI TestBed the C4I applications are interfaced to the simulation environment by a CORBA to HLA Interface.  This interface allows, for example, the transmission of data derived from simulated sensors to the applications which require it and the transmission of command and control instructions (e.g. to launch a missile or turn on a sensor) from the C4I applications to the relevant simulations.One of the requirements of the CSI TestBed is to investigate issues arising when operating in a force.  In this case the TestBed would be configured with multiple instances of the C4I application set and CORBA to HLA interface, with each instance representing an individual subject platform.Given the architecture of the TestBed as described, the CSI FOM must incorporate the requirements for information exchange between the elements of the HLA federation and between the elements of the HLA federation and the C4I applications with which they must communicate.TestBed ConceptsBefore describing the CSI FOM, this section describes some of the concepts that underlie the operation of the HLA federation within the CSI TestBed and which must be supported by the FOM.Platforms, Systems and Naming HierarchyThe HLA federation element of the CSI TestBed is responsible for modelling the following:Platforms: surface vessels, aircraft, sub-surface vessels, missiles, and decoys.Platform systems: sensors (radar, ESM, sonar, IRST, communications), effectors (onboard and off-board ECM, missile systems).The interaction between platforms, systems and the physical environment.Platforms and systems exist as objects within the HLA federation, with the relationship shown at Figure 2.1. Figure 2.1: Relationships between platforms and systemsWithin the TestBed, platform and system objects are explicitly named and the object names are used in the following ways:to easily identify the FOM objects that represent the public interface of platform/system objects and cross reference these to the entities specified in CSI scenarios.as part of the mechanism for defining the required relationships between platforms and systems illustrated by Figure 2.1 in the scenario distribution process (see Sections 2.6, 3.4.3).to address the system or platform for communications purposes (See Section 2.4).As a part of the scenario definition process each system and platform is given a ‘short name’.  The full object name of the platform or system is then a compound of its short name with the short names of other platforms or systems that it is associated with via the relationships illustrated in Figure 2.1.  The full object name is also the name used to address communications messages to the system.For example a missile system whose short name is “GWS30” and which is carried by a frigate named “Marlborough” will have the full object name “Marlborough.GWS30”.  A missile whose short name is “SeaDart1” assigned to the Marlborough missile system will have the full name “Marlborough.GWS30. SeaDart1”The explicit naming of objects as above has proved useful when looking at recorded data by, say, the DMSO HLA data logger, since each object is readily identified with its scenario counterpart and its relationship to other objects is easily inferred.Ground Truth Data vs. Perceived DataWithin the TestBed a clear distinction is made between ground truth data and perceived data.Perceived data is that which is measured by a system such as a sensor and will include all of the associated measurement errors, whereas ground truth data represents the true state of an entity.A given object may therefore be described by the two forms of data.  For example a platform such as an aircraft will posses a set of ground truth dynamical attributes such as position, velocity.  In addition there may be corresponding sets of perceived data representing its measured position and velocity, in the form of sensor tracks.The only form of data about the real world transmitted to the C4I applications from the HLA is perceived data as it would be within an actual combat system.Representation of System StateWithin the CSI Federation, systems such as sensors and effectors are modelled.  Each modelled system may have two types of interface, which make its state available to other federates as follows:Ground truth interface: this represents the actual physical state of the system.C2 interface: representing information about the system that needs to be available for C2 purposes (i.e. the sort of data that would be made available to an operator or command and control system).The two types of state information have been differentiated because they represent different facets of the system state and are used for different purposes. This approach also allows for the modelling of situations where a system’s perception of its own state is in error – should this ever be required.  Figure 2.2 illustrates this concept.  Within this figure a conceptual federate is shown, responsible for modelling a particular system.  The internally modelled system may change its state as a result of processing within the model or as a result of receiving a command and control instruction (e.g. to turn on a radar or launch a missile).  This change will be reflected in the two system state interfaces as appropriate.  The state change is communicated back to the C4I applications via the CORBA to HLA interface, which will subscribe to the appropriate attributes and classes.Figure 2.2: Representation of System StateCommunications MessagesWithin the context of this paper a communications message is a message sent over any sort of communications network e.g. combat system highway, tactical data link system.Within the CSI TestBed there is a requirement to send communications messages. For example it must be possible for C4I applications to send command and control messages to weapon and sensor systems being modelled within the HLA federation.  It must also be possible for the scenario generator to send scripted command and control instructions to systems not under the control of a C4I application (e.g. instruction to a threat aircraft to launch a missile).Since the TestBed is able to represent many different systems located on different platforms it was necessary to devise a way of addressing messages so that only the intended recipient system would process them.The platforms and systems within the CSI federation are divided into a set of communications domains, which represent logical networks that connect systems together (see Figure 2-3).  Each system possesses a name, unique within the domain(s) it is on.  The combination of name and domain name represents the address of the system to be used for communications purposes.  For example a system named “GWS30” located on platform named “MARLBOROUGH” on communications domain named “MARLBOROUGH_DTS” will have the address:MARLBOROGH.GWS30MARLBOROUGH_DTSThe addresses of each system to be modelled are specified in the scenario distribution process (see Section 2.5).Figure 2.3: Communications DomainsEach communications message is given an address in terms of the domain and system to which it is to be sent.  In addition each message contains a parameter defining the current domain that it is on.  Only systems whose name matches that on the message address and which are on a domain which corresponds to the message current domain parameter may receive the message.Message broadcasts are achieved by setting one or both of the to-system and to-domain parameters to “ANY”.To date domains have been used to represent the combat system data highway on different platforms, with separate instances of the CORBA to HLA interface being used to represent each platform.  The communications domain of each CORBA-HLA interface is defined using a configuration file so that it will only process and transmit onward data from the HLA federation appropriate to its domain.Information Flows within the TestbedThe C4I applications and the HLA federation operate together as a ‘closed loop’ system with the principal information flows indicated by Figure 2.4.HLA Federation to C4I ApplicationsThe information flowing from the CSI federation to the C4I applications comprises sensor data (principally tracks), system state data and system communications address data accompanied by system type.  Since this data is persistent it is communicated via object attribute updates.For each system modelled within the federation, its name, associated communications domains and type are published.  This data is used by other federates and the CORBA to HLA interface to address messages to the system.  For example, the CORBA to HLA interface understands which types of command and control message from C4I applications should be routed to which type of system (this data is configurable).  The interface uses this information plus the published system type and associated communications address to route messages to the intended systems.C4I Applications to HLA FederationBased on the sensor and system state data generated by the sim/stim environment, the C4I applications may perform tasks such as automated picture compilation, threat assessment and weapon assignment.  This will, in turn, result in the applications issuing command and control instructions to sensors or weapon systems (e.g. “track target”, “launch missile”).  The command and control instructions are converted into FOM interactions by the CORBA to HLA interface and transmitted to the HLA federation.  Federates which subscribe to these interactions will receive the interaction and the federate responsible for modelling the system to which the message addressed will take appropriate action.Figure 2.4: CSI Testbed DataflowsScenario DistributionThe CSI TestBed includes a mixture of simulations that are either specialised, such as a radar simulator, or more general purpose, capable of simulating a variety of platforms and sensors – such as the General Simulation Facility identified at Figure 1.1.In order to configure the TestBed in a flexible way, to allow use of the most appropriate simulations for any given experiment, a scenario distribution process is used.Before the start of a simulation none of the CSI federates knows what their responsibilities will be for modelling scenario platforms or platform systems.  The scenario distribution process is used to inform each federate in terms of:The platforms, decoys and missiles it will be responsible for modelling plus their starting attributes.The systems it will be responsible for modelling plus their starting attributes.Whether the federate is responsible for reflecting (i.e. it will process attribute updates) or ignoring a given platform or system.  In general this is used to override any default behaviour of a particular federate in this regard.The parameters used to define the above responsibilities are described in more detail in Section 3.4.3.The scenario distribution process occurs in the early stages of a synchronised start up procedure, which is described in more detail at Reference 1.Co-ordinate SystemThe CSI HLA federation is based on a set of legacy simulations adapted to inter-operate by the addition or modification of an HLA interface.  Most of these simulations employ a flat earth co-ordinate system where the surface of the earth corresponds to a flat plane.  Therefore a flat earth co-ordinate system is used for the transmission of Cartesian position related data, with X= North, Y= East, Z = down.CSI FOM DescriptionOverviewEarly on in the FOM development process (Section 4) it was decided to use the Real Time Platform Reference (RPR) FOM (Reference 2) as the starting point for the CSI FOM.  This was for three principal reasons:It has the classes needed to describe platform ground truth data.It has an embedded system class, which could be used as the basis for defining platform system ground truth attributes.There was a future requirement to inter-operate with DIS based simulations.Given the above, it was decided to adapt the RPR FOM, by adding classes, attributes and parameters, in order to accommodate the concepts described in Section 2 of this paper.  The starting point for the CSI FOM was RPR FOM version 0.9 and this has been upgraded to the version 1.0 standard in more recent phases of the programme.In summary, the principal modifications made to the RPR FOM in order to accommodate the CSI requirements are as follows.Addition of attributes to the RPR FOM BaseEntity class so that platform dynamics could be defined using the CSI flat-earth co-ordinate system rather than DIS standard geocentric co-ordinates.  Also, a time of validity attribute has been added so that this appears explicitly.Addition of object classes to define perceived data such as system state and sensor tracks.Addition of object classes to describe the ground truth attributes of platform systems.  These are a specialisation of the RPR FOM EmbeddedSystem class with a base class CSISystem added, which contains the communications address of the system.Addition of interaction classes to define communications messages.Addition of interaction classes for scenario distribution.Addition of a CSIDetonation interaction to enable the definition of detonations using the CSI flat earth co-ordinate system. The above additions to the RPR FOM are described in more detail in the following sections.  Many of the specialised classes in the CSI FOM are ‘placeholders’ to allow for future expansion and not all are discussed in the following sections.Platform System Ground Truth DataThe classes used to represent platform system data are shown at Table 3.1.  The class CSISystem is used to define the communications address of the system in terms of the system name, its communications domains and the type of system.  By subscribing to this class, or leaf classes as appropriate, other federates can use the system type and address, to send directed messages to the system if required.  It is envisaged that this data will be used principally by the CORBA to HLA interface as described in section 2.5.1.EmbeddedSystem (N)CSISystem (S)MissileLauncher (PS)ESM (PS)Radar (PS)Jammer (PS)DecoyLauncher (PS)NavigationSystem (PS)TorpedoLauncher (PS)Magazine (PS)Sonar (PS)C3I (PS)Parent (PS)Designator (PS)EmitterSystem (PS)RadioReceiver (PS)RadioTransmitter (PS)Note: additions to RPR FOM are indicated using bold typefaceTable 3.1: Platform System ClassesOf the leaf classes shown in Table 3.1, most are placeholders, with the Radar class used in instances where two CSI federates have responsibility for modelling aspects of a radar.  In this instance one of the federates is responsible for modelling the detection and tracking process, while another is responsible for modelling the emissions of the radar and their effect on ESM systems.  The track producing federate owns the radar and the emissions modelling federate subscribes to the Radar class so that it can respond to mode changes of the radar.Perceived DataOverviewWithin the CSI TestBed the following types of data are treated as perceived data Sensor tracks.System state, used for C2 purposes.Platform reference data, e.g. yaw, pitch, roll as would be measured by on board sensorsNavigation reference data – the platform position related data that would be measured by a platform’s navigation system.All of the above data is transmitted as object attribute updates of classes deriving from a PerceivedData base class.  Since perceived data is that which would be transmitted by some form of communication system, such as a data highway, the PerceivedData class contains attributes that define the communications address and type of the originating system.  This enables federates which subscribe to Perceived Data classes to work out whether they are eligible to receive the data from the particular communications network i.e. platform.Currently, perceived data is not addressed to a particular system and is considered to be available to all simulated systems and C4I applications that subscribe to it and are eligible to receive it.Sensor TracksTable 3.2 shows the class structure used to represent sensor tracks.  Any given sensor track is considered to be made up of a combination of different track facet objects, with different sensors giving rise to different combinations of track facet objects.For example a radar which is also responsible for autonomously performing IFF interrogations could produce tracks comprising, a TrackPolarPositionFacet and a TrackIFFDataFacet.  Alternatively an ESM system track may comprise a TrackPolarPositionFacet, TrackESMParametersFacet, TrackEmitterIdentityFacet.  Track facets are therefore a set of building blocks, which enable tracks from any type of sensor, or any type of sensor data fusion application to be built up in a flexible way.  PerceivedData (N)NavigationReference (PS)PlatformReference (PS)Track (S)TrackRepresentationFacet (PS)TrackPositionFacet (N)TrackCartesianPositionFacet (PS)TrackPolarPositionFacet (PS)TrackEmitterIdentityFacet (PS)TrackESMParametersFacet (PS)TrackIdentityFacet (PS)TrackIFFDataFacet (PS)TrackRadarDataFacet (PS)Note: not all CSI FOM track facet leaf classes are shown in this tableTable 3.2: Perceived Data – Sensor Track, Navigation and Platform Reference ClassesFrom the above discussion it will be seen that a given track will be represented by a number of linked objects.  In order for receiving federates to be able to marshal the linked track facets on receipt each track contains a TrackRepresentationFacetThe TrackRepresentationFacet contains a list of all of the HLA object names of the other facets comprising the track.  For a given track update, the representation facet also contains a list of the object names of the track facets which have been updated, since not all facets may be updated each time.  To further assist marshalling of track updates, an UpdateID attribute is included in the Track class, incremented on every update with each updated track facet given the same UpdateID.The above method of representing tracks has the advantage of being fairly generalised, but offers the disadvantage of requiring more complex processing to marshal track facets on receipt. System StateThe classes used to represent the state of a system for command and control purposes are shown at Table 3.3.  Each leaf class has attributes specific to the system type.  For example the class FCRStateForC2 contains attributes indicating whether it is tracking or illuminating its target, while the class LauncherStateForC2 contains an attribute indicating the number of rounds available to be launched.In general the system state leaf classes are subscribed to by the CORBA-HLA interface so that system state changes can be converted into the appropriate CORBA messages and sent to the C4I applications.Interaction ClassesOverviewTable 3.4 illustrates the interaction classes which have been added to the RPR FOM as part of the CSI FOM.  An outline of the CommunicationsMessage and ScenarioDistribution classes is given in the following subsections.Communications MessageThese correspond to messages sent over any kind of communications network.  The base class CommunicationsMessage contains attributes defining the “from” address and “to” address of the message in terms of the system name and communications domain as discussed in Section 2.4.In general, communications messages are command and control messages which are sent from C4I applications to simulated platform systems as described at Section 2.5.  They are also used by the scenario generator to send pre-scripted C2 instructions to systems that are not under the control of a C2 application.  Examples of use of these messages are instructions to launch missiles and decoys, destroy self defence missiles in flight, start to track a defined target, change radar mode.At present an additional class EWEFMessage exists in the FOM to allow multiple instances of the Electronic Warfare Engagement Framework federate to communicate using ‘private messages’ via the CSI FOM.  As the FOM and EWEF’s HLA interface evolve, these messages will be defined explicitly as FOM classes.EquipmentStateforC2 (N)SensorStateForC2 (S)RadarStateForC2 (PS)SurveillanceStateforC2FCRStateForC2ESMStateForC2 (PS)SonarStateForC2 (PS)JammerStateForC2 (PS)LauncherStateForC2 (S)DecoyLauncherStateForC2 (PS)MissileLauncherStateForC2 (PS)TorpedoLauncherStateForC2 (PS)Table 3.3: Object Classes used to Represent System StateCommunicationsMessage (IR)CommandAndControl (IR)RadarControl (IR)TrackTargetRequest (IR)DecoyLaunchCommand (IR)MissileLaunchCommand (IR)StopEngageWithSAM (IR)DestroyMissile (IR)PlatformControl (IR)ECM Target TaskingECMActionTasking (IR)IFFControl (IR)IFFControlResponse (IR)EWEFMessage (IR)ScenarioDistribution (IR)ScenarioSystemDescriptor (IR)ScenarioPlatformDescriptor (IR)CSIDetonation (IR)Table 3.4: Principal CSI FOM  Interaction ClassesScenario DistributionAs described in Section 2.6, the CSI TestBed federation undergoes a scenario distribution process, which tells each federate what its responsibilities are in a given scenario.  During this process the scenario manager federate distributes a set of interactions deriving from the ScenarioDistribution interaction class, which contains the name of the federate to whom the interaction is addressed.Scenario distribution is a key part of the TestBed start up process and is achieved by through use of the ScenarioPlatformDescriptor and ScenarioSystemDescriptor interactions.  The key parameters of each of these are outlined below to give a feel for the way that the system works.ScenarioPlatformDescriptors inform each federate which platforms they are responsible for modelling as defined in Table 3.5. ScenarioSystemDescriptors inform each federate which platform systems they are responsible for modelling as defined in Table 3.6.ParameterUseEntityTypeIndicates the type of platform in terms of a DIS Entity Type.  It is up to the receiving federate to be able to map DIS entity types onto internal platform representations.ShortNameThe short name of the platform.  This is compounded with the name of any other associated plaforms or launcher systems to give the full name of the platform, which will also be its HLA object name (see Section 2.1).ExistingDefines whether the platform will exist in the federation at the start of the simulation.CarriedByThe full object name of a carrying platform or launcher system.  May be used to locate the object if the receiving federate is not modelling the carrying platform or launcher via the reflected attributes of the host platform objectNumberDefines the number of platforms of the given type required.  Number will be greater than 1 in situations where multiple rounds are to be launched by a launcher – for example active decoy rounds.  In this case the short name of each individual round will be appended by .x where x runs from 1 to NumberPosition and VelocityInitial position and velocity of the platform.ResponsbilityDefines whether the federate will be responsible for owning, reflecting or ignoring the platformTable 3.5: Key parameters in ScenarioPlatformDescriptorParameterUseHostObjectIdentifierThe full HLA object name of the platform on which the system is mounted.  Enables the receiving federate to locate the system launcher via the reflected attributes of the host platform object. Realtive positionPosition of the system relative to the platform reference pointSystem typeString indicating the type of system to be modelled. It is up to the receiving federate to be able to system types onto internal system representations.ResponsibilityDefines whether the federate will be responsible for owning, reflecting or ignoring the systemShortNameThe short name of the system.  The full name of the system will be this, prepended by the name of the carrying platformDomainListList of communications domains that the system is on.Table 3.6: Key Parameters in ScenarioSystemDescriptorFOM Development ProcessThis section outlines the process used to develop the CSI FOM and the lessons learnt.  CSI is a phased programme, so this section is divided into sections defining the initial phase of FOM development and then subsequent phases.  This is followed by a summary of the lessons learnt.Initial phase FOM DevelopmentThe process started with a ‘clean sheet of paper’ but with view that in future we would need to inter-operate with DIS based simulations/federations.  This quickly led to the adoption of the RPR FOM as the starting point for the CSI FOM.The overall development process was via a set of meetings used to define and collectively review the FOM contents.  In addition, a single person was responsible for co-ordinating the development of the FOM and its capture using the DMSO Object Model Development Tool (OMDT).At the start of FOM development not all of the federates which would contribute to the programme had been decided, but representatives from as many potential federates as possible were invited to the meetings to ensure future proofing.  This meant that early meetings contained a mixture of people whose experience of HLA ranged from ‘much’ to ‘none at all’.Early meetings were spent developing the concepts described in Section 2.  However, this was found to be a time consuming process and meetings were not always the best place to do the detailed thinking required. Given the above it was decided to split into a number of small working groups who would work on various aspects of the development (for example co-ordinate systems, representation of tracks, communications).  The working groups would report back to the FOM meetings and the results would be recorded by the FOM co-ordinator, supplemented by informal working papers.FOM review was conducted at meetings, with the FOM displayed using either the OMDT or a visual presentation tool, laptop and projector – again a time consuming process.In addition to the above, a scenario was developed which captured the sorts of event which might be expected within the federation and the consequent data exchanges between federates (federate responsibilities were decided at a separate set of meetings).  This proved to be a useful way of checking the FOM by ‘dry running’ it through the scenario to ensure that it captured the requirements.For the initial phase FOM, the above process took some three months, involving 9 full meetings plus other smaller informal meetings and discussions.Subsequent DevelopmentFor subsequent Phases of CSI (characterised by the introduction of new federates and applications) one or two initial meetings have been held to discuss overall requirements.  The FOM co-ordinator has then modified the FOM and issued it for review off line, with a memo detailing the changes.This has somewhat streamlined the process, resulting in a much faster up-issue of the FOM, although for subsequent FOM releases work has not been undertaken on the underlying concepts.  The downside of this is that during the second phase of CSI we met less frequently as a federation, which led to some subsequent system engineering problems.Lessons LearntTrying to do all of the FOM in meetings involving representatives of all federates is not efficient.  We found it better to use working groups reporting back to a FOM co-ordinator, with off-line reviews by all.  Of course for initial concepts and major issues, full meetings are absolutely necessary.It is highly desirable that all people involved in FOM development are familiar with at least the concepts involved in HLA at the outset.All people involved in FOM development should be issued with an OMDT or other such tool, so that the FOM can be disseminated to them for review in a digestible way.A textual summary of where and what the changes are should accompany all FOM up-issues.Do not under estimate the time needed to develop a FOM with all participants – especially for thorough review.  If this involves people from different organisations then ensure with them that everyone has time allocated for FOM develoment.Ensure that FOM development meetings are chaired by someone who is technically (domain and HLA), managerially and diplomatically skilled – especially when dealing with strong minded and experienced developers who may have different ways of doing things.The use of a scenario to ‘dry run’ the FOM is a useful way of checking completeness before development starts.The FOM should not be regarded as stand-alone.  Underlying it will be a concept of operations, which details how it is to be used.  This should also be documented and made available to federate developers.If tools such as the DMSO Data Collection Tool and VTEC’s HLA Results are to be used to record data generated during a federation run, then check for any constraints that they may impose on the FOM.Interoperability One of the aims of the CSI programme is to inter-operate the TestBed with other facilities, be they HLA federations or DIS simulations (in which case a DIS to HLA gateway would be employed).In the initial phases of the programme, interoperability was an aim, with no specific goals and effort was concentrated on achieving interoperability between CSI federates.  Now that the programme is maturing we are looking more closely at interoperability.This is being done in two ways. Firstly, a link has been established with a DIS based simulation at DERA Farnborough, the Joint Maritime Simulation Facility (JMSF).  Secondly we are comparing a number of other FOMs with our own to assess any potential interoperability problems.  Note: the latter is being undertaken as an academic FOM comparison study, there is no current or envisaged requirement for CSI to be linked to any of these programmes.Both of the above activities are underway at the time of writing of this paper and so the results reported here should be regarded as very preliminary.FOM ComparisonWe have had a preliminary look at interoperability of the CSI FOM with the following FOMs from the two aspects of functional handling of information and structure:UK Future Command Team Trainer (FCTT): this FOM is derived from the RPR FOM and defines objects and interaction data for an HLA federation passing data between the command team trainer (CTT) located at HMS Dryad and the T23 Shore Integration Facility at the Land Based Test Site via a wide area network.Australian Virtual Ship (VS) programme: this programme provides for the linking of federates that describe the behaviour of ship systems, in order to build a virtual representation of a warship in a process analogous to the construction of a physical ship.The Future Offensive Air System synthetic environment (FOAS-SE) Demonstration Project is a collaborative, jointly funded project involving UK MOD and Industry.  FOAS is aimed at fulfilling the need for an offensive air capability for entry into service in around twenty year's time.  The FOAS FOM was based on the RPR-FOM, which has since been extended to incorporate many FOAS specific communication and data logging interactions.NATO Interoperability and re-use (NIREUS) under NG6.  This FOM is derived from the RPR FOM and is currently in initial draft.  The study is concerned with linking HLA federates from different nations to investigate the landing of an unmanned air vehicle on a ship taking into account ship motion, ship motion forward prediction and air wake between air vehicle and ship.Of the FOMs considered, all except the VS FOM have been derived from the RPR FOM with additional classes added to cater for the additional requirements of each federation.  The FOAS and FCTT FOMs are nearest to the RPR FOM, understandable since both programmes had to inter-operate with DIS systems at the outset, followed by the NIREUS and CSI FOMs.  It is probable that CSI could inter-operate with these federations for the exchange of platform ground truth data, with CSI using its co-ordinate converter federate to convert between geocentric and flat earth co-ordinates.However for information covered by the additional classes the position is not so clear.  For example the FOAS FOM has introduced interactions to deal with communications messages, but these are binary formatted, with a message type included to tell the recipient how to decode the data, whereas CSI used explicitly defined messages.  Further work is needed in this area.The VS FOM does not appear to be based on the RPR FOM, but possesses classes, which describe platforms, systems and sensor tracks, and there are interaction classes which perform scenario distribution and management functions.  Functionally, it appears that the VS FOM is closest to the CSI FOM, but differs the most in structure.Further work will be performed in this area.Inter Operation with JMSF Using a DIS-HLA GatewayPlanning for this task is well underway at the time of writing, from which it is anticipated that CSI and JMSF will exchange platform data and JMSF will also transmit track data to CSI.  Data will be exchanged between the two facilities using an RPR FOM compliant DIS – HLA gateway.The platform data will be transmitted using the RPR FOM BaseEntity derived classes, with CSI converting between Geocentric and Flat earth co-ordinates.There is no specific class in the RPR FOM for the transmission of sensor track data, so the DIS Set Data PDU will be used and the corresponding SetData interaction converted into CSI track facets by a converter federate.The scenario will be controlled from the CSI TestBed , using its scenario manager federate to issue RPR FOM StartResume and StopFreeze interactions as part of the scenario start up process described at Reference 1.One additional problem that has had to be overcome is scenario distribution.  Within the CSI TestBed this is used to tell a federate responsible for a system, the HLA object name of the platform on which the system is to be mounted and all object names are explicitly controlled via the owning Federates.  However DIS identifies platform instances via the EntityIdentifier, supplemented by the Marking attribute.  Therefore the CSI scenario manager is being modified to be able to use Marking in addition to object name to tie systems to platforms.Tentative ConclusionsMany organisations are basing their FOMs on the RPR FOM and modifying it to suit their own specific requirements – this is certainly true of CSI which has modified the RPR FOM to incorporate classes associated with scenario distribution, perceived data and communications messages.Inter-operation between federations using FOMs derived as above should be possible for ground truth platform and system data, but for perceived data and communications message data, work would have to be done to convert data between the different representations.  Although CSI uses a flat earth co-ordinate system, we have developed a co-ordinate converter federate which converts between geocentric and flat earth co-ordinates (see Reference 1).For FOMs that are not based on the RPR FOM, inter-operability will present greater challenges.For CSI is it likely that future inter-operability will be achieved via the use of converter federates, as described at Reference 1, for co-ordinates and track data, with modifications to our scenario distribution process if necessary.Unlike DIS, HLA is not a rigid standard for data interchange – it gives federation designers complete freedom to design FOMs to suit their exact requirements.  However this very freedom may well give rise to future inter-operability problems.  At the federation design stage, if it is anticipated that inter-operation with other organisations may be required then this should be explicitly catered for in the FOM design provided that explicit inter-operability requirements can be fully defined at an early stage in the federation’s life.It is noted that even with the more rigid DIS standard, the ‘free format’ messages are being used independently by different projects to pass bespoke data.SummaryThe CSI FOM has been derived from the RPR FOM but has been modified to allow for perceived data, communications messages, a flat earth co-ordinate system and a flexible way of distributing scenarios.In addition we explicitly use object names as part of the scenario distribution process, to readily identify HLA objects and the relationships between them.  This has been very useful when analysing data collected using standard data collection tools and when discussing scenario data.The complete freedom that HLA has given us to define our FOM may lead to downstream inter-operability issues but these should not be insurmountable and we hope to report on further progress in future fora.References[1]  Sally A White, “Experiences from Building a Naval Combat System Simulation Environment with HLA”, SIW paper 01S-SIW-029, Spring 2001 SISO conference.[2]  See for example: Sean Reilly, “Guidance Rationale and Interoperability Modalities for the Real Time Platform-level Reference FOM”, Engineering Test and Evaluation Dept, Naval Undersea Warfare Centre, Newport RI, 1999.AcknowledgementThe author wishes to thank the many people working on the CSI programme who have contributed to the work described in this paper.  In addition thanks are due to the organisations which have made their FOMs available to us. Author BiographySTEPHEN WALTERS has worked for BAESYTEMS for some 15 years on a variety of software and combat system projects.  For the last three years he has worked on contract for DERA, firstly participating in an initial experiment using HLA to link an EW simulator with a scenario generator and more latterly on the CSI TestBed engineering team where his responsibilities include co-ordinating the CSI FOM.( Crown copyright 2001. Published with the permission of the Defence Evaluation and Research Agency on behalf of the Controller of HMSO.