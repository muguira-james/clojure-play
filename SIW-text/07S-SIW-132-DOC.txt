Name of Forum or Group:  Distributed Simulation Process & Tools (DSPT)ChairJake BorahVice ChairJane BachmanSecretaryPierre GauvinObjectives for this Workshop:  DiscussProcesses for developing distributed simulationsTools for developing distributed simulationsExercise planning and managementComments:1. Comments from 07S-SIW-107, “Developing Web Centric Federates and Federations Using the HLA Evolved Web Services API” (Joint Session with CFI forum: 37 attendees):Final paper on Web Services as these have been incorporated into HLA Standards updateSeveral papers and tutorials have been presented on WSDLSeveral design issues result Selection of services to be offeredLong haul communications easy so linkage across disparate time zones now possibleEncryption and authentication may be requiredMore coordination between participants may be requiredPerformance limitations due to request/response methodologyLong haul communications means high latencySeveral Web Services Frameworks have been testedApache AxisMicrosoft .NETIONAIBM WebSphereBEA WebLogicFederate Code ConsiderationsSession handling and time-outsUsing handlesCallback deliveryData encoding and time representationSecure and authenticated connectionsTesting and DebuggingTraditional RTI user interfaceSOAP ToolsNetworking monitoring toolsWeb Services frameworks may provide additional debugging toolsStandard development environmentsRecommendations:Most important question: what does it mean to provide the federation/simulation as a service over the a WAN or over the internet?  2. Comments from 07S-SIW-099, “Adaptive Generative Grammar for JC3IEDM Web Services” (Joint Session with CFI forum: 35 attendees):Challenges of languages for service-oriented architecturesApplication domain for C2-M&S InteroperabilityRequirements for C-BMLInformation exchange is used by systemsSystems cannot think or assumeHaving views on C-BML is usefulDoctrinal view of userRepresentation view of information systemProtocol view used to exchange informationModels are purposeful abstractions of realityCurrent approach uses mandated standards to introduce a “common language” that requires system engineer to map to a languageFuture approach should be identifying exchangeable information organized along common conceptsCommon Reference Model (CRM) becomes model of common conceptsMore to data models than dataData definitionsStructureApplicationMetadataRecommendation:Using data model together with business process rules results in an enhanced ability to communicate3. Comments from 07S-SIW-108, “An Overview of the HLA Evolved Modular FOMs” (Joint Session with CFI forum: 40 attendees):First paper presenting modular FOMsTo interoperate federation developers need to agree upon several itemsInformation to be exchangedResponsibilities of the federates for production and consumption of informationSynchronization issues like startup, shutdown and check pointsLogical responses and sequences of iteractionsCommon algorithmsCommon informationFOM Modules work when federation developers agree upon fundamental concepts of object models in several areasExact equivalency required in Switches, Time Representation and User Supplied TagsUnion of elements, duplicates are equivalent in Dimensions, Data types, Transportation types, Update rates, Synchronization points and NotesUnion of hierarchical elements, duplicates either equivalent or empty in Object and Interaction classesTables not used MetadataModular FOM Block TypesDependentStandaloneMOM ModuleAllowed and Disallowed Combinations result from characteristics of the Modular FOM Block typesModular FOM would relate to Modular FEDEP Recommendation:Opportunity to maintain purity of reference FOMs by limiting extensions in modular FOM4. Recommendations from 07S-SIW-074, “Conceptual Modeling for the Probability of Raid Annihilation (PRA) Testbed” (22 attendees):Future Navy programs will incorporate simulation based test eventsSimulation based test events crossing multiple domain boundaries (acquisition and testing communities)Systems Engineering Concept Model (SECM) very important persistent artifact throughout FEDEPSECM has three viewsSystem ViewModel ViewFederate ViewLessons LearnedSECM framework format is keyDecision makers both love and hate seeing consequences of decisions they makeEngineers tend to think and document from a federate-centric vantage pointGetting people to document “what it is” is very hard, getting them to document “why it’s good enough” is even harderSECM very effective at revealing inter-system gaps and assumptionsMuch information exchange, especially at the working level is not inherently documentedA picture is worth a thousand spreadsheetsSECM done right automatically collects the core V&V documentation5. Comments from 07S-SIW-056, “Developing Conceptual Models of the Mission Space (CMMS) A Metamodel Based Approach” (21 Attendees):Problems of Conceptual ModelToo many definitions, but too few existing modelsLess emphasis is put on the conceptual analyiis phaseEither ambiguous free text or more formal but general purpose modeling languages are usedIt is difficult to apply V&V techniques based on free text definitionsApplied approachInvestigated existing conceptual modeling notationsRefine the position of conceptual modeling phase in simulation development lifecycleProposed a UML based conceptual modeling languageDefine a metamodel and syntactic & semantic rule baseDevelop a tool that supports the conceptual modeling processConceptual model development process begins with knowledge acquisition activitiesConceptual model consists of two views “Structural” and “Behavioral” which eventually result in Model Elements based upon four UML diagrams. Experimental studies are being performed for validating conceptual modeling notationRecommendations:Conceptual modeling activities should follow a defined processConceptual models should provide a basis for the design, development, acquisition and verification activities of simulation developmentMethods and tools should be provided to transfer conceptual models into more detailed software modelsOntology definition languages should be utilized for representing entity ontologies 6. Comments from 07S-SIW-106, “Graphical Abstract Representation of Design (GARD): Better M&S Through Earlier Visualization & Better Design Through M&S” (22 Attendees):The need to visualize and understand complex designs for software, systems or simulations has never been greaterA visualization capability without proper awareness of the design at the conceptual level creates an incomplete and potentially incoherent picture.Refactoring is the process of changing a software system in such a way that the external behavior of the code does not change but the internal structure is improvedRefactoring is developing better designed software, simulatons and systems components to support reusePatterns is another way to define reusable designsBut visualization methodologies necessary to view and comprehend designsThree possible methods are mind maps, functional block diagrams, metaphoric viewsMetaphoric views have three picture views (blueprint, satellite, magnified)Conclusion, the ability to visualize a design is an important key in optimizing itRecommendations:Community needs to become better informed on “refactoring” of software concepts7. Comments from 07S-SIW-012, “Design and Implementation of a Fine-Grained and FOM Dependent RTI Framework for Rapid Federate Development” (Joint Session with VV&A forum: 29 attendees):Developing Federates requires significant amount of time and effortClassical framework approach eases federate developmentFrameworks are not silver bulletsFramework Implementation Object oriented implementation in C++Used common design patterns (façade, observer, singleton)Expected AdvantagesRapid development time (less than 2 months)Ease of integration with existing environment (no additional libraries)Ease of maintenance (one person occasionally)Improved run-time efficiency (no hidden costs)8. Comments from 07S-SIW-017, “Enhancing the Simulation Based Acquisition Process Using a Spiral Lifecycle Model Based Federation Development and Execution Process” (Joint Session with VV&A forum: 38 attendees):Simulation Based Acquisition are confronted with two paradigmsM&S teams Concurrent develop a robust collection tools for SBA contract delivery Spiral Lifecycle Model artifacts and process easily map to FEDEP activitiesTailoring the FEDEP to overlay a spiral lifecycle model helps ensure the key stakeholders are involved in the processWork in not yet completed on the detailed mapping of the FEDEP to FCS artifacts and processesFour issues have been raised that will be input into the FEDEP Revision process9. Comments from 07S-SIW-033, “Federation VV&A in Support of the Urban Resolve 2015 Experiment” (Joint Session with VV&A forum: 40 attendees):VV&A people bought into project after many FEDEP products had been constructedShort timeline required streamlined approach based upon the VV&A Overlay to the FEDEPPrimary challengesFederation size and complexityVV&A timelineLearning curveMust be non-intrusiveLessons LearnedVV&A Overlay provided a viable framework for all VV&A activitiesVV&A histories can be hard to obtainEffective V&V sometimes requires data that is not otherwise needed for federation executionV&V team size, composition and experience must be balanced for large, complex federationsGood support from the federation development team and experiment participants is criticalRecommendations:SISO Community should join IEEE Balloting Pool for VV&A Overlay to the FEDEPAverage attendance (excluding joint sessions)21.67Peak attendance (excluding joint sessions)22Peak attendance (including joint sessions)40Total papers presented9“No-show” presentations0Other presentations and panel discussions0Recommended Reading List nomination: 07S-SIW-106 Graphical Abstract Representation of Design (GARD):  Better M&S Through Earlier Visualization & Better Design Through M&S                 2006 SPRING SIW OUTBRIEF FORM