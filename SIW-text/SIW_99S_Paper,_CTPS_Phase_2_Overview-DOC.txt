Combat Trauma Patient Simulation Phase 2 ArchitectureSumeet RajputMikel D. PettyInstitute for Simulation and Training3280 Progress DriveOrlando, FL 32826407-658-5038, 407-658-5022 HYPERLINK mailto:srajput@ist.ucf.edu srajput@ist.ucf.edu,  HYPERLINK mailto:mpetty@ist.ucf.edu mpetty@ist.ucf.eduKeywords:HLA, Medical simulation, Human patient simulatorABSTRACT: The Combat Trauma Patient Simulation (CTPS) is a dual purpose training and analysis simulation system that realistically and physically simulates the emergency medical treatment process for selected combat injuries from the time of occurrence through initial treatment at the field hospital. CTPS is supported by the Department of Defense (DoD) Live Fire Test and Evaluation Office, US Army Simulation Training and Instrumentation Command (STRICOM), and the US Army Office of the Surgeon General. CTPS is built by integrating existing commercial and military technology with the High Level Architecture (HLA).  CTPS components include the Human Patient Simulator (HPS), which is an instrumented mannequin that manifests symptoms and permits treatment by human users of the system; a simplified version of the HPS called a Pre-Hospital Simulator (PHS); a Multiple Integrated Laser Engagement System (MILES) based Electronic Casualty Card (ECC); the Jackson Medical Scenario Library (JMSL); the Operational Requirements Casualty-Based Assessment (ORCA) system; and the CTPS Executive.  In this paper the CTPS Phase 2 architecture is explained, with emphasis on how the HLA capabilities are used to support the system.  The current level of functionality is discussed, and anticipated improvements and extensions are described.IntroductionBackgroundThe Combat Trauma Patient Simulator (CTPS) research team is prototyping and evaluating a dual purpose training and analysis simulation system that realistically and physically simulates the emergency medical treatment process for selected injuries from the time of occurrence through initial treatment at the field hospital. A description of Phase 1 research (April – December 1997) is detailed in [1] and [2]. This paper describes Phase 2 (April 1998 – April 1999) of the program. Phase 2 GoalsThis paper describes the work done by the Institute for Simulation and Training (IST) with regard to the CTPS effort. In Phase 2, IST’s goals were:inclusion of the Pre-Hospital Simulator (PHS), a simplified version of the Human Patient Simulator (HPS), currently being developed by Medical Education Technologies, Inc.,additional software for better controlling the flow of patients between simulation components,allowing patient states to be transferred from one simulation component to another, andinclusion of more realistic simulation models (software) of patient physiology. 1.3 	Simulation ComponentsTo accomplish the project’s goals IST had to modify existing simulation components and integrate new ones into the system.  This paper describes how new simulation components were integrated into the Phase 2 system.  It is important to have an understanding of the simulation components that make up the CTPS system. This is detailed below in Section 1.3.1.3.1 Electronic Casualty Card (ECC)The ECC [3], developed by Lockheed Martin Electo Optics Systems, is a small harness-mounted device used in Multiple Integrated Laser Engagement System (MILES)/Simulated Area Weapons Effects (SAWE) force-on-force exercises. When a soldier is “hit”, the ECC generates a casualty, determining a type and severity of trauma. A medic can select one of several treatments provided by the ECC through a medical interrogation device. The soldier’s condition degrades if no medical care is given and the soldier eventually “dies”. The ECC provides in excess of 40,000 symptom/treatment conditions and several injury areas, including the head, neck, torso, abdomen, arms, legs, and hands, to be “treated” by a medic during these exercises.1.3.2 Human Patient Simulator (HPS)The HPS [4] is a full-scale, interactive simulator that functions as a stand-alone simulation of a human patient. The HPS consists of two components: a mannequin which represents the “patient” and a Personal Computer (PC) based application which provides a software simulation of the patient’s response to medical intervention. Clinical features of the HPS as manifested in the mannequin include palpable pulses, breathing, heart and breath sounds, pulmonary artery pressure, and cardiac outputs. The software based physiological and pharmacological models direct simulated patient responses, both normal and pathophysiological, to drugs, mechanical ventilation, and other medical therapies. 1.3.3 Pre-Hospital Simulator (PHS)The PHS is a simplified version of the HPS. It has substantially less features compared to the HPS. The technique and protocols used to interface the PHS with the CTPS system are identical to those used for the HPS and for the remainder of this document these techniques would be discussed without differentiating between the two.1.3.4 Operational-Requirements Casualty Based Assessment (ORCA) SystemThe Operational Requirements-based Casualty Assessment (ORCA) program’s primary purpose is assessing the effects of conventional munitions upon the ability of personnel to perform military tasks [5]. However, to determine if a person is an operational casualty, ORCA must first determine the degree of medical incapacitation. This aspect makes ORCA of interest to the medical simulation community and of particular interest to the CTPS system as a mechanism for generating detailed casualty information. In ORCA, a threat environment directly affecting an individual is called an insult. The insults planned for ORCA include penetrators (fragments, bullets), blast overpressure, thermal fluence, toxic gases (military agents), abrupt acceleration, blunt trauma, and laser eye damage. Based on these insults, ORCA provides very specific injury information. The human body is defined and geometrically modeled by 473 ORCA Body Components (OBC’s), each one relating to an organ or other important anatomical structure within the body. Each OBC has associated with it a scale in which its condition (extent of injury) is expressed. ORCA generates information on a per-casualty basis that can be displayed on the screen or captured in a text file. The latter method allows ORCA to be used in an offline manner.1.3.5 Jackson Medical Scenario Library (JMSL)JMSL (Jackson Medical Scenario Library) consists of a library of human casualty models designed for mass casualty emergency medical training [6]. JMSL supports individual and team training in standalone, Intranet, and Internet environments, and has been demonstrated in both flat-screen and virtual reality training clients. Casualty models are implemented in a State Engine (SE) which runs as a server accessible to clients. The client and server communicate using the TCP/IP protocol. Finite State Machines (FSM) represent patient models in the SE – a state in the FSM represents the patient’s condition and state transitions are affected via treatment or lack of treatment to the patient [7]. The primary function of JMSL within the CTPS system is to simulate patients while they are not being simulated on an HPS. JMSL provides this capability quite well allowing several patients to be “created” within the SE.Phase 2 ArchitectureSystem ArchitectureThe Phase 2 system architecture is made up of several simulation components (those responsible for patient simulation) and a CTPS Executive that controls the transfer of patients from one simulation component to another. These are linked by the High Level Architecture (HLA) as shown in Figure 1. Note that only a single HPS and PHS is shown below; however, the actual configuration may contain several of these. Figure 1: CTPS Phase 2 Architecture.Figure 1 shows how simulation components and the CTPS Executive are connected. The ECC, HPS, PHS, ORCA, and JMSL are systems that  require software interfaces to be connected into the CTPS system. The ECC RTI interface is a computer program that allows the casualties generated by the ECC to “enter” into the CTPS system as patients. The HPS/PHS RTI interface is a software program that allows a patient to be created on the HPS and allows communication to proceed between the HPS and the rest of the CTPS system. The ORCA RTI interface is a software program that allows ORCA to provide more detailed patient information. The JMSL RTI interface is a software program that allows patients to be modeled by the JMSL software and allows information to be broadcast to other simulation components. The CTPS Executive coordinates the transfer of patient through HLA Run Time Infrastructure (RTI) services. In essence, each of the above RTI Interfaces is an HLA Federate.2.2 Phase 2 FOMThe Phase 1 FOM explicitly defined a patient’s state through several physiological attributes [8]. Though this FOM was sufficient for an initial proof-of-concept system it was never deemed complete. The CTPS research team spent considerable effort attempting to define the set of attributes that would capture a patient’s physiological condition “completely” but the task was monumental. Initial estimates put the number of attributes to be approximately 700. In addition to defining the attribute set, medically oriented “conversion” functions were needed to compute values for attributes not directly simulated by another simulation component.For Phase 2 the CTPS research team took a simplified approach to solving this problem. A patient is represented in the FOM by two attributes: patient scenario and patient state. The patient scenario corresponds to one of Bloodloss, Pneumothorax, or Anaphylactic Shock. These scenarios specify the changes in a patient’s physiology caused by a sudden loss of blood, puncture in the chest cavity, or an allergic reaction respectively. In these scenarios a patient’s condition can be thought of as going through a series of progressively worsening states; i.e., a patient starts of as being in a “healthy” state and then goes on to progressively “ill” states as time passes with no medical intervention. Each simulation component capable of simulating a patient updates the patient state as the simulation progresses.This simplification is helpful for at least two reasons. First, conversion functions must map internal simulation component patient representation to a single state variable, which is much simpler than trying to determine the value of other physiological variable from those simulated by that simulation component. Second, it is easy to add new simulation components because a single conversion function is required which makes the architecture extremely scalable.2.3 Patient FlowFigure 2 shows the sequence of patient transfers through the CTPS system.Figure 2: CTPS Phase 2 Patient Flow.A patient is generated by the ECC in response to a MILES/SAWE “hit”. The ECC fills in the scenario attribute and the patient is transferred to ORCA (arrow labeled “1”). The ORCA database (to be discussed later) is consulted to determine an initial patient state which is then used to fill in the patient state attribute. The patient is then transferred to JMSL (arrow labeled “2”). The patient’s physiology is then simulated on JMSL until it is transferred, either automatically or by a user, to an HPS or PHS (arrow labeled “3”). Medical intervention can be given to the patient while it is on the HPS/PHS to be followed by transfer back to JMSL (arrow labeled “3”). This transition, i.e., the one labeled “3”, can occur as many times as necessary. All patient transfers are controlled by the CTPS Executive.The CTPS Executive3.1 RequirementsThe components in the CTPS system perform a variety of tasks ranging from patient generation (e.g., ECC), patient simulation (e.g., JMSL), and patient treatment (e.g., HPS). It is unlikely that a single component will be able to handle all functions. Moreover, practical considerations may prevent a component from performing all functions. Consequently, it becomes necessary to transfer patients from one component to another component that can best achieve the desired function. The task of coordinating the transfer of patients between components falls within the CTPS Executive’s purview. A prototype CTPS Executive was developed to control the transfer of patients among the components of the CTPS system.The CTPS Executive is used for:Patient allocation: The CTPS Executive allocates patients to the components in the CTPS system. This is a significant issue because it needs to know the computational load on each component in order to allocate the patient to the component best able to simulate it. Currently, allocation decisions are made to satisfy the patient flow discussed in Section 2.3; i.e., an idle HPS is given top most priority, followed by an idle PHS, and finally JMSL. A user can also override the allocation algorithm and assign patients manually.Patient tracking:  Much as a hospital or other situation where a large amount of entities are handled, the CTPS Executive provides the ability to track patients, for instance, for an after action review.Logging/Saving and Restoring:  The CTPS Executive will allow the events in an exercise to be logged for the purpose of playing them back later, or for restarting the exercise in the event of a system breakdown.User Interface:  The CTPS Executive provides a user interface and a graphical display of the system.The CTPS Executive does not simulate patients, it controls the simulations of the other components in the system. It was designed in a general way to serve other types of simulations using the HLA.3.2 Patient TransferThe CTPS Executive controls all patient transfers between simulation components. Simulation components always divest patient ownership to the CTPS Executive which can then pass on ownership rights to another simulation component. This prevents inter-simulation component binding and centralizes the transfer logic at one place viz., the CTPS Executive.Patient transfer is achieved by transferring the ownership of attributes that define a patient. The reason is that the RTI disallows object ownership transfer ([9], [10]). Patient transfer is achieved by transferring the ownership of the state attribute. Because the scenario attribute does not change over time once set by the ECC it was not considered. To transfer a patient from one simulation component to another the CTPS Executive first acquires ownership of the state attribute for that patient and then divests it to the simulation component designated to simulate the patient. Thus, patient transfer is carried out in a two-stage process as shown below in Figure 3 for the transfer between the ECC and ORCA.Figure 3: Patient Transfer in CTPS.In Step 1, the CTPS Executive acquires the ownership of a patient’s state attribute from the ECC. This acquisition is accomplished via the “requestAttributeOwnershipAcquisition” function. The RTI accomplishes the transfer through a sequence of internal “requests” and “notifications”. When the CTPS Executive is notified that it has acquired ownership of the state attribute, it treats this as patient acquisition. The CTPS Executive’s patient allocation algorithm assigns the patient to an internal object designating the destination simulation component and Step 2 is initiated. In Step 2, the CTPS Executive divests the patient’s ownership to the simulation component by making a “requestAttributeOwnershipDivestiture” call to the RTI. Again, the RTI accomplishes the transfer through a sequence of internal calls.3.3 ImplementationThe CTPS Executive is implemented as a multi-threaded, object-oriented, and event driven system. In addition to providing a Graphical User Interface (GUI) to the user, the CTPS Executive also needs to monitor HLA activity. GUI based systems can become extremely dependent on the rate at which a user enters information and this can lead to degeneration in other, more critical, functions of the system. If the CTPS Executive is busy handling GUI related functions and does not react in real-time to, for example, patient control requests, such requests can get lost leading to system malfunction. To overcome this problem the CTPS Executive was implemented as a multi-threaded program. Multi-threaded programs offer multiple paths of execution through a program, as opposed to single-threaded programs which offer a single execution path. Using this technique, the program appears to devote equal time to all functions. This technique allowed the CTPS Executive to process user input as well as properly handle RTI messages.ECC IntegrationNo modifications were made to the ECC for Phase 2. The methodology employed for integrating the ECC with the CTPS system is described in detail in [8].ORCA Integration5.1 ORCA Injury DatabaseThe ORCA tool was designed to run in an on-line interactive mode; typically, the user enters the insult parameters and the systems displays the details of the resulting injury, both via a graphical user interface.  The current version of the ORCA software was not readily adaptable to direct integration into CTPS, where it would be required  to run in a non-interactive fashion.  Consequently, for Phase 2 ORCA is integrated into CTPS in an off-line fashion.  ORCA was used on-line to generate a stored database of detailed injury descriptions.  The injuries in the database correspond to different variations and severity levels of the basic CTPS Phase 2 scenarios.  The database records contain high fidelity data about the injury, as well as the scenario and state information used for the CTPS Phase 2 FOM.  It is the ORCA Injury Database that is integrated into the CTPS system.5.2 ORCA RTI Interface DevelopmentThe ORCA RTI Interface is a program that reads the ORCA Injury Database and transmits patient data on to the HLA network. The structure of the program and its connection with the ORCA Injury Database is shown in Figure 4.Figure 4: ORCA RTI Interface.The ORCA RTI Interface is exercised when a patient is transferred to it to complete the injury information for that patient. The “HLA To ORCA Map” component converts HLA information (attribute value updates from other simulation components) into a format understood internally by the program. The “ORCA To HLA Map” component performs the reverse function, it consults the ORCA Database Reader for patient information and then updates the HLA network with this information. The ORCA Database Reader is responsible for reading the ORCA Injury Database and responds to database related queries from other components.As noted before, the ORCA Injury Database contains several records, each designating a specific patient “scenario”. The fields in these records contain values for various patient attributes. Upon the transfer of a patient to the ORCA RTI Interface, the ORCA Database Reader randomly selects a record based on the scenario type. The attribute values in this record are placed on the HLA network. The patient is then divested to the CTPS Executive for transfer to another simulation component.JMSL Integration6.1 JMSL RTI Interface DevelopmentThe JMSL client/server architecture (Section 1.3.5) is well suited for integration in the CTPS system. The JMSL RTI Interface is implemented as a client to the SE server. On the HLA side, the interface reads and writes patient information in the form of HLA updates while on the client side it sends and receives messages that the SE can understand. This is shown in Figure 5 below.Figure 5: JMSL RTI Interface.The structure is similar to that of the ORCA RTI Interface. Upon the transfer of a patient to JMSL, the “HLA To JMSL Map” component sends a message to the SE to create a patient with information another message to initiate the appropriate scenario.  The SE responds by sending patient information as the simulation proceeds. The “JMSL To HLA Map” component receives this information and converts it into HLA updates which are communicated to other simulation components.  When a patient is transferred to another simulation component the JMSL RTI Interface sends a message to the SE to stop simulating that patient.HPS/PHS IntegrationIn Phase 1 [2] when a patient was transferred to the HPS, state information was lost. What this means is that patient simulation on the HPS began from the point when the patient was first introduced into the CTPS system and any previous changes in state brought about by medical treatment, or lack thereof, were lost. In Phase 2, the CTPS FOM was enhanced to include state information so that a patient could be instantiated on a simulation component in the correct state thus maintaining continuity of the patient’s physiology (Section 2.2).The HPS needs to be initialized in a certain way to correctly transfer the state of a patient to it. For this purpose, a sequence of initialization files, each representing a particular state in a given scenario, were created. The HPS RTI Interface [2] was modified to read in the correct initialization file, based on the scenario and state, so as to initialize the HPS correctly. In this manner the patient’s state could be maintained as the patient was transferred from one simulation component to another.Conclusions and Future WorkThe CTPS Phase 2 system shows that HLA has the capabilities to support a medical simulation, and with appropriate interface modules, can be used to integrate a rather disparate variety of simulation types within the medical category.  We believe the effort expended in developing a general HLA infrastructure for CTPS Phase 2 will reduce the effort required to integrate other medical simulations into CTPS the future.A number of tasks are being considered for CTPS Phase 3 (and beyond).  We list a few here:Full pathophysiological FOMRicher variety of scenarios, including chemical and biologicalMulti-site and wireless connectionAutomated patient treatmentVirtual reality or 3D visual displayReferences[1]	Goldiez, B. F. and Pettitt, M. B. (1997). “Human Patient Modeling”. Proceedings of the 1997 Interservice/Industry Training, Simulation, and Education Conference (I/ITSEC), December 1-4, 1997, Orlando, FL.[2] 	Pettitt, M. B., Goldiez, B. F., Petty, M. D., Rajput, S., and Tu, H. K. (1998). “Combat Trauma Patient Simulator”. Proceedings of the 1998 Spring Simulation Interoperability Workshop, March 9-13, 1998, Orlando, FL.[3]	Lockheed Martin Electro Optics Systems (1996). “Electronic Casualty Cards for the MILES II Decoder Processor: Database Design Overview”, Preliminary Design Review (I), Lockheed Martin Electro-Optical Systems, June 11, 1996.[4]	Medical Education Technologies, Inc. (1996). “Human Patient Simulator: User’s Manual”, version 1.3, Medical Education Technologies, Inc./University of Florida, May 1996.[5]	Frew, K, Gray, J., Killion, E., & Streit, B. (1997). Software Design Document for Operational Requirements-based Casualty Assessment (ORCA), U.S. Army CBDCOM contract DAAA15-94-D0005, Applied Research Associates, September 18, 1997.[6]	Teittinen, M., Thompson, S., and Wieber, J. (1997). “Trainer/StateEngine Communication Protocol” Technical Report, Tekamah Corporation, 1997.[7]	Thompson, S. and Allely, E. (1997). “Finite State Automata as a Model for Casualty Simulation”, April 25, 1997. (Available on the World Wide Web at http://tekamah.com/~thompson/fsm.html)[8]	Rajput, S., Tu, Hsiao-Kun, Goldiez, B. F., and Petty, M. D. (1997). “Combat Trauma Patient Simulator” Phase 1 Final Report, IST-CR-97-28, Institute for Simulation and Training, December 19, 1997. [9]	Li, Zhian, Macal, Charles M., and Nevins, Michael R. (1998). “Ownership Transfer for Non-Federate Object and Time Management in Developing an HLA Compliant Logistics Model”. Proceedings of the 1998 Spring Simulation Interoperability Workshop, March 9-13, 1998, Orlando, FL.[10]	Li, Zhian. (1998). “The Problem of Object Ownership in HLA-Compliant Logistics Simulations”. Proceedings of the 1998 Fall Simulation Interoperability Workshop, September 14-18, 1998, Orlando, FL.AcknowledgementsThis project was sponsored by the Live Fire Test and Evaluation Office, under Mr. Jim O’Bryon, and the US Army Office of the Surgeon General. It was managed by the U. S. Army Simulation, Training, and Instrumentation Command, under the supervision of Ms. M. Beth H Pettitt.  That support is gratefully acknowledged.  The overall CTPS project team is managed by Mr. Brian Goldiez of IST.Author BiographiesSumeet Rajput is a Research Computer Scientist at the Institute for Simulation and Training. Mr. Rajput has worked in distributed simulation since 1992. He received a M.S. in Computer Science and a M.B.A. in Finance from the University of Central Florida in 1994 and 1998 respectively. His research interests are in the areas of computational geometry, physical modeling, medical simulation, and computer generated forces.Mikel D. Petty is an Assistant Director of the Institute for Simulation and Training. He leads IST research in distributed simulation, including High Level Architecture and computer generated forces. Dr. Petty has worked in distributed simulation since 1990. He received a Ph.D. from the University of Central Florida in 1997, a M.S. from UCF in 1988, and a B.S. from the California State University Sacramento in 1980, all in Computer Science. His research interests are in distributed simulation, computer generated forces, and applied computational geometry.ECCORCAJMSLCTPSExecutivePHSHPSHLA NetworkECCRTIInterfaceORCARTIInterfaceJMSLRTIInterfaceHPSRTIInterfacePHSRTIInterfaceJMSLORCAECCHPS & PHSCTPSExecutive123CTPSExecutiveORCAECCStep 1Step 2ORCA Database ReaderHLA NetworkORCAInjury DatabaseHLA to ORCA MapORCA to HLA MapSEHLA NetworkTCP/IPHLA to JMSL MapJMSL to HLA Map