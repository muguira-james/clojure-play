09E-SIW-013Core Technical Framework Study: An OverviewJan TegnérSaab ABSt Olofsgatan 9 BSE-75321 Uppsala+46 73 437 7105 HYPERLINK "mailto:jan.tegner@saabgroup.com" jan.tegner@saabgroup.comDr Qi HuangSaab ABNettovägen 617588 Jarfalla+46 73 437 4431 HYPERLINK "mailto:qi.huang@saabgroup.com" qi.huang@saabgroup.comDr Robert SuzicCombitech ABP.O. Box 6011SE-17263 Sundbyberg+46 8 580 86078 HYPERLINK "mailto:robert.suzic@combitech.se" robert.suzic@combitech.seDr Choong-Ho YiCombitech ABP.O. Box 6011SE-17263 Sundbyberg+46 8 580 86078 HYPERLINK "mailto:robert.suzic@combitech.se" robert.suzic@combitech.seKeywords: Architecture, Distributed Simulation, MODAF, Net-Centricity,Interoperability, Information Management,  Federation Management, Planning, ReuseABSTRACT: The goal of the Core Technical Framework study is to enable a framework that promotes secure, multinational distributed simulations. The main domains targeted are Training, Simulation Based Acquisition (SBA) and Concept Development and Experimentation (CD&E). The framework benefits from, and can be easily integrated with, Enterprise Architecture Frameworks descriptions compliant to NAF and MoDAF. The approach selected is to support heterogeneous simulation architectures, Live-Virtual-Constructive simulations, transformation of simulation assets to simulation capabilities in a net centric environment and to enable automation of exercise management. The study focus on the whole process from Exercise Planning to After Action Review (AAR). This paper will give an overview of the Technical Framework study and present the needs and requirements identified.1. Introduction1.1 BackgroundMultinational distributed simulation experimentation is a vast and highly complex domain. The scope ranges from analysis simulations to huge theatre of war simulations comprised of live, virtual and constructive simulations and there are several competing standards, products, frameworks and processes available.There is a need to share common methods, processes and tools between various stakeholders, which requires to form a Core Technical Framework to simplify planning, design, development, reuse, integration, deployment, execution and evaluation of distributed simulations in order to increase efficiency and reduce time and cost. The challenge with the Core Technical Framework in a common usage for distributed simulations is to enable flexible and composable simulation services for different types of enterprises and various users. This implies a service oriented approach in a net-centric sense for packaging different configurations of capabilities that are enabled by simulation in conjunction with real-world systems for training and simulation experimentation. 1.2 The ProjectThe study is comprised of three different parts.First a Requirements phase was performed to gather needs and requirements from different stakeholders. The rest of the study was divided in an Architecture Framework Work Package (WP) and a Simulation Core Framework Topics WP. The Architecture Template WP was focusing on architecture templates that enhance reuse of simulations and simulation assets, a service framework for distributed simulations in a net-centric environment and a reference model that defines the most important terms of the framework and some relationships between them. The Simulation Core Framework Topics WP was focusing on more technical issues, such as experimentation process, simulation architecture and connectivity, modeling development, scenario specification and sharing and experiment analysis. Figure 1.2.1 Study Work Breakdown Structure2. Needs and RequirementsWhile most simulation frameworks focus on development and integration of distributed simulations, the Core Technical Framework focus on the whole system life cycle from Simulation Based Acquisition (SBA) and Concept Development & Experimentation (CD&E)  to Training.2.1 StakeholdersThe Core Technical Framework is intended to serve a large number of stakeholders with different needs and interests, dependency of work processes, methods and technical platforms for distributed simulation.According to their roles, the stakeholders could be grouped into the following types: Operational ManagementSupplier of Simulation assetsIntegrator of Distributed SimulationConsumer of Simulation ServicesProvider of Simulation ServicesBroker of Simulation ServicesTrainees using Distributed SimulationsTraining & Simulation CommunityThe framework is supposed to serve all of these stakeholders. 2.2 Training domainDifferent kinds of training can have different needs. For skills and tactical training it is important that the work load on the trainee can be altered during training to optimize the training effect. This may be done by dividing the scenario in a basic scenario and additional add-on scenarios that could be started separately if and when needed.For Distributed Mission Training (DMT) or Distributed Mission Operations (DMO) it is important to be able to create variants of the same scenario: for example variation of scenario where the trainees performs the same mission, but they are exposed to different threats or combination of threats in each configuration. This may also be solved by creating sub-scenarios that may be composed to create new variants of an exercise in a flexible manner. SHAPE  \* MERGEFORMAT Figure 2.2 Joint Training by LVC simulationsLive, Virtual and Constructive (LVC) simulation supplies a wide range of capabilities for the training both in military and civilian domains, as given in figure 2.2. The Core Framework supports the joint training across military areas and civil applications, where most needed support is integration and interoperability.2.3 Simulation Based AcquisitionSimulation Based Acquisition (SBA) focus on analysis and assessment in life cycle oriented system development. SBA has a wide focus ranging from algorithm analysis using tools like Matlab to system of systems distributed simulations. This study only focuses on SBA using distributed simulations.The purpose of Simulation Based Acquisition is to:reduce time, resources and risks associated with the entire acquisition processincrease quality, improve capabilities and supportability of  fielded systems while reducing total cost throughout the entire life cycle.enable Integrated Product and Process Development (IPPD) across the entire acquisition life cycle.When comparing and selecting subsystems or applications from different vendors against different scenarios, a large number of simulations may be needed. It is important that the scenarios is divided in sub-scenarios that easily could be combined in different configurations to increase re-use and lower integration cost. 2.4  Concept Development & Experimentation Concept Development and Experiments (CD&E) is a key enabler when developing capabilities with focus on both force structure, doctrines, concepts and technologies.Since state of the art theory and technology is used a core technical framework must be flexible and support heterogeneous standards and use mediation services to bridge differences.When integrating live, virtual and constructive systems using both live and virtual interfaces it is essential to separate different information layers.Figure 2.4 Simulation Information LayersThe Synthetical Natural Environment (SNE), e.g maps, terrain data etc, may be used for both live and virtual systems.The Simulated Environment (SE) denotes all simulated data, e. g. platforms, emissions etc,  exchanged in the distributed simulation.The Perceived Environment (PE), i.e  situation picture,  is the participating systems view of the simulated environment, which is exchanged between systems, e.g. using simulated tactical data links.2.5 Multi-Level Command OperationsBesides working in a joint and collaborative environment, distributed simulations may also cover several command levels. This may introduce problems since the different command levels work with different time perspective and also at different levels of aggregation. While a combat tactical unit work in real time and with high level of detail, a  staff at operational level have one day’s perspective and see whole battalions as a single unit.2.6 Net-Centric EnvironmentExposing simulation assets as net centric capabilities makes it possible for resources to be shared and more efficiently used in a cost effective manner. Further, adding generic service interfaces for federation and simulation management and mediation services simplifies integration of heterogeneous simulation, where participating federates may be based on different simulation standards. The services may include:To find or search simulation assets in a net centric environmentTo request and book simulation assets including enterprise model (Use of a reference scenario, scenario development, configuration and integration)Federates may also provide an user interface service allowing users to use simulators and/or systems remotely, which could be beneficial when performing Distributed Mission Training or Distributed Mission Operations (DMT/DMO)2.7 Exercise / Experiment ManagementCurrent tools for managing distributed simulations focus on starting applications and monitoring the simulation network.There are no commercially available tool that supports Exercise/Experiment planning and resource management.There is a need to be able to create variants of scenarios, e.g. to be able to have a fallback solution if a federate application is not available at a given time or just to train the same scenario with slightly different preconditions.2.8 M&S ReuseShea [3] listed a number of barriers to M&S reuse:No awareness of reusable resourcesLack of or out-dated information about M&S resourcesLack of flexibility, can’t adapt resources to new problemsDifficulties to access resources and data.Wrong format or incompatible standardsNo cost model to compensate resource investmentNo mechanism to protect developer from mischievous use3. Core Technical FrameworkThe Core Technical Framework proposed is composed of  four parts:Smorgasbord, consisting of architecture templates, standards and services from which the user selects the ones suitable for the specific purpose.Reference Model, i. e a taxonomy defining relevant terms.Simulation architecture, describing technical approaches and high level design to support distributed simulations from planning to evaluation promoting reuse, resource management and automation.Methods & recommendations, describing how processes, MODAF views and design recommendations could facilitate development and re-use.3.1 SmorgasbordDistributed simulations are complex and depending on the purpose of the simulation and available simulation assets different solutions may be preferred from case to case.  Some standards fade and new standards evolve continuously. To be able to adapt to both a changing world and legacy a technical framework must be flexible and support heterogeneous distributed simulations, i. e. federations of federations. Thus, the smorgasbord is like a buffet which suitable components could be selected from.3.1.1 Architecture TemplatesSoftware engineering standards like NATO Architecture Framework (NAF) [9] and Ministry Of Defence Architecture Framework (MODAF) [8] is becoming widely adopted in the defence market  SHAPE  \* MERGEFORMAT Figure 3.1 The Core Technical Frameworkand could be used as a compliment to available simulation development standards like FEDEP or the future DSEEP standard.By using MODAF as architecture templates both the framework itself, simulation assets and scenarios may be documented in a structured manner simplifying both selection of resources and reuse.3.1.2 Standard FrameworkThe Standard Framework describes some commonly used standards applicable to distributed simulations and development of distributed simulations. The relationships between some of the standards are also described.3.1.3 Service FrameworkTo be able to integrate distributed simulations in a net centric environment, a Service Oriented Architecture (SOA) approach have been used.The service framework is assumed to be living document where different stakeholders agree on stepwise improvements. The proposed structure contains:   Service description – an explanation of the most important aspects from distributed simulation services perspective Service taxonomy – a guideline on how to document a particular taxonomy of services and a proposal for taxonomy for distributed simulation services The Core Framework’s Service Framework simply adopts an extended definition, regarding service description, of the service-oriented distributed modeling and simulation framework introduced in ‎[10].  However, the recommendation is that services should be documented according an architecture framework, like MODAF’s service views.  A single service is defined by: Interface specification - By defining service interfaces the information on which types of services may be compatible to other types of services or systems is representedInteraction specification - description of some typical scenarios where service is used and interactions with Other Sub-systemsConstrain specifications - Contain information of quality of service. As a foundation the Core Enterprise Services for the GIG have been used. The framework taxonomy for distributed simulations tailor two main types of services,  the operational or enterprise services ‎[14] and (Core) Global Information Grid (GIG) core enterprise services ‎[18].  GIG services are assumed to be more oriented towards types of services that are performed by mainly technical artifacts. The operational services are carried out as a combination of human and technical artifacts. The service taxonomy consists of following services: Operational ServicesResource  management services Scenario planning services System Management ServicesMessaging ServicesRegistration and Discovery ServicesMediation Services Collaboration ServicesInformation Assurance and Security ServicesStorage Services Application Services 3.2 Reference ModelThe reference model consists of a taxonomy describing common terms associated with distributed simulation and contains some relations between those terms.3.3 Simulation ArchitectureThe simulation architecture proposed focus on distributed simulations in a holistic and lifetime perspective. It is also intended to support a higher degree of automation when managing distributed simulations. Basic ideas have evolved from among other work by Sjöström et al [6] and Euclid RTP 11.13 work [7]. SHAPE  \* MERGEFORMAT Figure 3.3 Exercise/Experiment ManagementThe Core Technical Framework is intended to support all phases from planning to execution of distributed simulations. 3.3.1 Scenario SpecificationScenarios are usually hard to reuse, since they are too large and too specialized. If the scenarios were divided into smaller sub scenarios, or vignettes, that could be reused and combined in new ways (see fig 3.3.1), this would be simple way to achieve agile development of scenarios. Vignettes are described in three aspects:Conceptual descriptionImplementation descriptionConfiguration desciprionThe Conceptual description is similar to a operative pattern, e.g. a fighter and a forward observer interacting to engage a target in a Close Air Support operation.The Implementation description points out which simulation assets that should be used to implement the operative pattern.Finally, the Configuration description describes scenario specific data, such as geographic positions, weapon load etc.It is possible to have multiple implementations of the same Conceptual description and for each implementation it is possible to have multiple Configuration descriptions. By separating these three aspects of a vignette, reuse is simplified.Today most Computer Generated Forces (CGF’s) may only run one scenario at a time, but it would be better if they would be able to start multiple vignettes at different times for the same scenario/federation.Fig 3.3.1 Reuse of vignettesWhen creating new scenarios the relative time of the vignettes may be changed, e.g. instead of starting right away, some vignettes may be started later on. Vignettes could have a pre-planned start or they could be started on demand at any time in the exercise.One of the issues when starting vignettes after the exercise/experiment has started is the “late join” problem, i.e. the newly added federates need to be synchronized with object and attribute states, ownership etc. Since, according to DIS and HLA standard, attribute updates are not sent cyclic to reduce bandwidth this has the effect that the new federate doesn’t get all the data needed automatically when joining a federation. To solve this it is required that all federates handle Update Requests. However, to avoid burst behaviours when several federates are started simultaneously, a random delay is needed before a update is requested.   3.3.2 Exercise/Experiment PlanningThe FEDEP standard is focusing on development of a distributed simulation. If the distributed simulation is intended for a demonstration that will be performed a limited number of times this may be enough, but if this is a distributed simulation that will be performed many times over time, e. g. for training purposes, there is a need for resource management.Besides simulation assets, there is a need to plan the manning, i.e. which roles, and other collaborative resources, e.g. phone communication, chat, conference rooms etc, that are needed to perform a distributed simulation.This exercise/experiment plan could be seen as a template, so when planning a specific experiment/exercise occasion the plan needs to be filled with real resources. SHAPE  \* MERGEFORMAT Figure 3.3.2 Exercise plan and booking of resourcesTo do this, the planned resources need to be booked by a booking service. Especially for larger distributed simulations, where multi-national simulation assets and Privately Funded Initiative (PFI) resources are used, the logistics of running the distributed simulations are one of the main issues. 3.3.3 System ManagementSystem Management Services could be used to deploy data needed for an exercise/experiment as described in the scenario configurations. Either the data could be “pushed”, i.e distributed from a central server, or it could be enough to distribute what configuration to use and let each federate get the data needed themselves.Some basic data need to be converted before it could be used, so the System Management Service could also run scripts remotely to set up necessary data before the exercise/experiment is started.The System Management Services may also be used to start simulation applications. However, some simulation assets may be available in the network in a net centric manner.3.3.4 Federation managementWhen a federate application is started it is often decided which federation it should join either by command line parameters or configuration files.In the Core Technical Framework study, we have adopted a net centric approach where simulation assets are seen as capabilities in a net centric environment. The simulation assets register at a library service when started and when needed, the federate is asked to join a specific federation.This net centric service interface is independent from the actual simulation standard used, so as an example, the same service could be used to order both HLA federates and DIS federates to join a federation and then a mediation service could be used to exchange data between those federations.This approach makes it easier to use simulation assets provided by other. It is also possible to add a cost model that could be used when booking and using simulation assets, e.g. initial fee and pay.per-hour for simulation assets used.  3.3.5 Simulation ControlWhile there is only one federation manager for each experiment/exercise, there is one simulation control for each sub-federation, e.g. one HLA [6] Simulation Control and one DIS [5] Simulation Control.Each simulation control has a service interface enabling the federation manager to send simulation control orders to specific federates regardless  which simulation standard they use.  SHAPE  \* MERGEFORMAT Fig. 3.3.5 Federation management and simulation control Sjöström et al [2] proposed that five simulation states should be used for federates (Ready for init, Initialised, Ready for start, Started and Frozen). In NMSG-052 similar simulation states were proposed (Ready to Initialize, Initialized, Started, Paused and Stopped) The only differences are that in NMSG-052 the “Ready for start” state was omitted, while the “Stopped” state was added. The “Ready for start” state is not essential, but the “Stopped” state does not fill any purpose, since it would be sufficient to go directly to directly back to the “Ready to Initialise” state.At the federation level it is only necessary to have three states (Not Started, Started and Frozen) for an exercise/ experiment. Other states are only representative for each federate.3.3.6 StorageA lot of data need to be stored throughout the M&S lifetime cycle and there has been several attempts to create repositories for M&S, but since there has not been any standards on how to document and store data about a federate, vignette, scenario or data needed for experiment analysis / After Action Review, repository projects rarely reach their goal.Some approaches have used databases as repositories, but lately Wikipedia’s and repositories just providing the URL’s to the data has become more popular and this approach is preferred from a net centric perspective.  3.3.7 Experiment AnalysisExperiment Analysis require that a lot of data has been stored during the simulation. There are a number of COTS Recorders available for storing HLA and DIS data, but this is often not enough. I may also be of interest to store events that occur inside the participating systems and simulators as well as operator interactions.Unfortunately, there is not any standard available on how to store the data, but one approach could be to store all data using RESTful web services [1]. All data would then be XML-based and could be used by Mash-up tools to view what happened afterwards. Since the data with this solution is posted during the experiment, it could also be used for presentation of a near real time view.3.4 Methods and Recommendations3.4.1 Experimentation ProcessThe Experimentation process consists of two sub processes. The first sub process is a Planning Process for Multi-national Distributed Simulation Project Start-up and focus on initial planning and agreements between participating countries. When developing distributed simulations it is highly recommended to follow a standardized process, e.g. FEDEP [13] for HLA simulations. The current work with the DSEEP standard [12] suits the Core Technical Framework even better, since it is independent of which simulation standard that is used, and, thus, better fits the approach with heterogeneous federations.Since the Core Technical Framework has a life cycle perspective, additions to the  DSEEP standard is needed, especially regarding exercise/experiment planning and booking of resources. The second sub-process is an adaption of the IEEE DSEEP to match the needs of the Core Technical Framework.Fig. 3.4.1 CTF DSEEP adaptionWhile IEEE DSEEP focus on setting up a specific simulation, the adaption has a life cycle perspective and differs between development of a reference simulation and setting up and executing an instance of the reference simulation.In the CTF adaption of DSEEP, Step 1-4 is focusing on the development of the reference simulation, while step 5-7 is focusing on setting up, executing and evaluating a specific instance of the distributed simulation at a specific occasion. The integration and verification activities during step 5 in IEEE DSEEP has due to this been moved to step 4 in the adaption.Another difference is that in the CTF adaption of DSEEP, the types of resources and roles needed are specified in step 4 and the mapping to actual resources are made in step 5. This abstraction is not used in the IEEE DSEEP standard.Besides the adaption, the different steps and activities have been mapped to specific MODAF views that are appropriate for documentation of the distributed simulation.3.4.2 Model and Federation Development Recommendations When documenting federates, vignettes, scenarios and exercises/experiments the approach is to use a MODAF overlay to the FEDEP or DSEEP standard. The framework should define which of the MODAF views that is needed or recommended and where in the process these should be provided.For documentation of vignettes and scenarios Military Scenario Definition Language (MSDL) [11] may be a good compliment to the MODAF views. It is also important to store basic data, configuration files and result files from exercises etc, to facilitate reuse.Even though the Core Technical Framework supports heterogeneous simulations it is highly recommended to limit the number of used standards, since the use of gateways affects the performance of the distributed simulations and may also introduce discrepancies due to different data models.3.4.3 Modeling DevelopmentThe framework proposes some design issues regarding federates. One of them is to implement the federation management interface to become net-centric in that sense. To become even more net-centric and easier to integrate in distributed simulations the Human Machine Interface (HMI) could be net-centric as well, so that a user could control the federate remotely.While the DIS standard defines all messages that could be sent in the distributed simulation, HLA is a more generic infrastructure where the data exchange is determined by a Federation Object Model (FOM). The HLA RPR.-FOM standard defines the corresponding messages as the HLA:standard.However, sometimes other FOM´s may be chosen of different reasons. A mediation service could be used to translate between the FOM´s.Another solution is that the federate supports multiple FOM’s. The federate could have a Simulation Object Model (SOM) that covers the union of the two federates. At start the federate parses the current FOM and decides which parts of it´s SOM that it should provide to the simulation.4. SummaryThis study has proposed a first approach to create a Core Technical Framework to support effective use of distributed simulations in a multi-national and heterogeneous environment.One of the basic approaches was that it is not possible to select a single simulation architecture and instead the framework should support heterogeneous distributed simulations and offer a smorgasbord of standards and services that could be selected.The framework also proposes extensions to current standards regarding exercise planning, booking of resources, net centricity, federation management, simulation control etc. These extensions enable a higher level of automation, reuse and logistics management. However, it is not mandatory to implement these extensions. It is important that the architecture is backward compatible, even though the full functionality may not be used.One of the biggest issues of distributed simulations is reuse. The Core Technical Framework tries to over bridge most of the barriers pointed out by Shea [3].This study has been a first step towards a Core Technical Framework for distributed simulations. Future work is needed to detail the work and to define interfaces needed, as well as creating Wikipedia’s to share information and knowledge on management of complex distributed simulations.5. References[1]Fielding, Roy Thomas. Architectural Styles and Design of Network-based Software Architectures. Doctoral dissertation, University of California, Irvine, 2000.[2]Sjöström, Rune; Johansson, Ulf; Ohlsson, Stefan; Sjökvist, Per; Tegnér, Jan: Modular Training System for C4I – A federated approach (03E-SIW-090), Euro-SIW 2003, Stockholm.[3]Shea, Dennis P:  Modeling and Simulation Resource Reuse Business Model, 2008 NDIA Systems Engineering Conference[4]IEEE-1278 Application Protocol for Distributed Interactive Simulation (DIS),   HYPERLINK "http://www.ieee.org" http://www.ieee.org[5]IEEE-1516 Standard for Modelling & Simulation (M&S) High Level Architecture (HLA),  HYPERLINK "http://www.ieee.org" http://www.ieee.org[6]SISO Real-Time Platform Reference FOM, v 2.0.draft 17 ,  HYPERLINK "http://www.sisostds.org" http://www.sisostds.org[7]EUCLID RTP 11.13 Realising The Potential of Networked Simulations in Europe,  HYPERLINK "http://www.euclid1113.com" http://www.euclid1113.com, Deliverables[8]Ministry of Defense Architecture Framework (MODAF), http://www.modaf.com[9]NATO Architecture Framework. http://www.nhqc3s.nato.int/ARCHITECTURE/_docs/NAF_v3/ANNEX1.pdf[10]Öhlund, Gunnar; Wemmergård, Joakim; Löfstrand, Björn; Löf, Staffan; MSG-052 Federation Architecture and Design CoP: Federation Architecture and Design Whitepaper, NATO MSG-052[11]SISO-STD-007-2008: Military Scenario Definition Language (MSDL)http://www.sisostds.org[12]IEEE P1730/Dv3.0: Draft Recommended Practice for Distributed Simulation Engineering and Execution Process (DSEEP) [13]IEEE 1516.3 Recommended Practice for High Level Architecture Deferation Development and Execution Process (FEDEP).6. Author BiographiesJAN TEGNÉR is Technical Manager for Modelling & Simulation at Saab Systems in Sweden. He currently works with C4ISR to Simulation integration issues including simulation of tactical data links and Network Enabled Capabilities. Previously he has been involved in the development of several C4ISR systems for the Naval and Air Defence domain and simulators for Air Defence systems. Jan Tegnér is member of NATO MSG-052 CoP, a former member of SISO Conference Committee and has also been working within Net Centric Operations Industry Consortium (NCOIC).Dr  QI HUANG joined Saab Systems in 2001 as a system architect at the competence centre of Training & Simulation. He has experienced several simulation and training related projects,e.g. embedded simulation and HLA standard, simulation based decision support. He is now a Senior Scientist and specialist on the network centric joint training and decision support. He got his M.Sc from Northewestern University of Polytechnology, China 1985, Licentiate of Engineering in robotics and laser technology from Linköping Institute of Technology (LIU), 1993.  Received his Ph.D in Mechatronics from Royal Institute of Technology (KTH), 1999-2001.Dr ROBERT SUZIC is PhD from The Royal Institute of Technology (KTH), Stockholm, Sweden.  He has been working for the Combitech AB as expert in interoperability, architecture frameworks and information management issues.  Moreover, he researched about knowledge representation of uncertainty, simulation-based decision support and multi-agent plan recognition within command and control and information fusion field in the time period 2001-2007.Dr CHOONG-HO YI is a consultant at Combitech. He holds a PhD (2002) in Computer Science (Information Systems Modeling) from Linköping University, Sweden. Previously, he has worked as a Senior Scientist at Swedish Defence Research Agency (FOI). He has wide experience within different aspects of systems engineering, such as semantic interoperability, system architecture, specification languages and VV&A.  Dr. Yi has been involved in several co-operation projects within WEAGJOINT & COMBINEDInteroperability Integration Collaboration ReuseCONSTRUCTIVEVIRTUALLIVEMILITARY, CIVIL& INDUSTRYStakeholdersTRAININGSERVICESTACTICALTRAININGSKILLS TRAININGCOMMAND &STAFF TRAININGTRAININGSOLUTIONPROVIDERCOLLABORATIVE TRAININGENVIRONMENTS