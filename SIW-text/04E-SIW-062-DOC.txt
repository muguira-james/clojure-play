C4I Training on Demand Dennis McGroderDynamic Animation Systems  HYPERLINK "mailto:dmcgroder@d-a-s.com" dmcgroder@d-a-s.com Gene Layman, Ph.D  Naval Research Laboratory HYPERLINK "mailto:layman@nrl.navy.mil" layman@nrl.navy.mil Keywords:  C4I, Embedded Training, Team Training, Modeling and Simulation (M&S), Scenario, Web-Enabled, Global Command and Control System-Maritime (GCCS-M), Common Operating Environment (COE).ABSTRACT:  A comprehensive suite of advanced embedded training capabilities developed at the Naval Research Laboratory (NRL) provide various levels of Command, Control, Communication, Computer and Intelligence (C4I) training for the Navy.  Both operator and team training applications are being released to the fleet as part of the Global Command and Control System-Maritime (GCCS-M) upgrade currently under way.  The ultimate goal is C4I training on demand that is readily available, easy to set up and deliver, and can be applied to the individual operator level, small team, or larger multi-team and multi-ship training environments.The Training Tutor provides operator training by injecting scripted scenarios into an operational system.  A trainer can use existing training scenarios or create new scenarios using authoring tools provided. Lessons may be prepared that include visuals aids, training instructions, map highlighting and various display controls. Lessons walk an operator through the use of the GCCS-M core functions and mission applications. It can teach basic system skills to a new user or more advanced features of the C4I system.The C4I Team Training System (CTTS) is an evolutionary development of an open architecture core training system that can be expanded by developers to incorporate models and simulations that accomplish a variety of training objectives.  The CTTS can be used by trainers to develop advanced scenario based training to be executed on the GCCS-M local area network (LAN). It can be used to train users in assessing tactical situations and decision making. The trainer can tailor the training scenario to add relevance and achieve specific objectives. The CTTS is fully embedded within GCCS-M systems, and can provide training aboard Navy ships while underway without interfering with normal C4I operations, in port and at ashore training facilities.  Other training capabilities being developed are: a means to capture the real world Common Operational Picture (COP) for use in training development; a comprehensive C4I reconstruction and exercise assessment capability; the Range Fusion System (RFS) that links C4I to Navy Training Ranges; and a Transit Training capability that reconstructs battle group work-up exercises as mission specific training while in transit to forward deployed areas. This paper describes these advanced C4I training tools and future embedded training that is being addressed to take advantage of the Global Information Grid and network enabled warfare applications, and which will be used to provide comprehensive training on demand for the Navy.1. OverviewA set of advanced training tools have been developed at the Naval Research Laboratory that provide various levels of Command, Control, Communication, Computer and Intelligence (C4I) training for the Navy.  The C4I Team Training System (CTTS) is being released to the fleet as part of the Global Command and Control System-Maritime (GCCS-M) to be used by trainers to develop advanced scenario based training that will be executed on the GCCS-M local area network (LAN) for multiple trainees working as a team.  The CTTS is fully embedded within GCCS-M systems, and can provide training that is available on demand at ashore training facilities and schoolhouses, and aboard Navy ships while underway or in port, without interfering with normal C4I operations.  The CTTS has an open architecture designed to host embedded training simulations, such as the Cruise Missile Trainer (CMT) simulation and the UAV Down Link Trainer.  Developers can develop and integrate their own simulations into this application.Other training applications have been developed to provide single operator level training for core GCCS-M functions and mission applications, namely the Training Tutor and Training Author.  Training lessons that are created and organized by trainers include dynamic scenarios and step by step instructions for operating and understanding the GCCS-M.  The Training Author application is used by trainers to build training scenarios and create lesson content.  The Training Tutor is then used by the trainees to run the lessons and follow the given instructions in GCCS-M.Additional tools have also been developed to capture the real world Common Operational Picture (COP), replay the COP back into GCCS-M, provide comprehensive reconstruction and analysis of real world operations and fleet exercises, and debrief capabilities for after action review, analysis, lessons learned, etc.  An ability to combine archived real world data with simulated data (or modified real world data) is also under development. A Transit Training capability is being developed that will use many of these training tools to reconstruct pre-deployment battle group exercises to provide mission specific training during transits to forward deployed areas.The Range Fusion System (RFS) is a system that links C4I to Navy Training Ranges.  The RFS provides a ground truth data stream into the GCCS-M during Battle Group and other training exercises.  It provides a standard interface between the GCCS-M and Navy’s Large Area Tracking Ranges (LATR), Tactical Air Combat Training System (TACTS) ranges and other range systems.  This data stream from the ranges will be integrated with the CTTS this year.  An additional goal this year is to improve distributed training across the wide area network (WAN) by making these tools web-enabled, so that collaborative content and scenario creation can be performed, as well as the distributed execution of training.  The capability to synchronize and coordinate the scenario under development by multiple trainers, or being run on multiple systems on the WAN, has been demonstrated in the laboratory, and further enhancements will be made this year.Training will be supported that typically progresses from basic operator level tutorials, to single operator training in functional areas, to a team training environment, where it first would be conducted ashore (or in port) before deployment, and then conducted while in transit to an operating area.  It is envisioned that the advanced C4I training capabilities developed at NRL can provide an organized C4I centric approach that supports the entire training process, and will thus provide comprehensive embedded training that is available on demand for the Navy.  2. Embedded C4I Training in Operational UseThe embedded training provided in GCCS-M will be used for various training and planning tasks by the Navy training and operational community.  These tasks include cruise missile qualification certifications, mission planning and rehearsal, integrated team training, and COP management training and proficiency.Cruise Missile Qualification Certifications: Naval vessels are required to be certified to shoot Tomahawk and Harpoon weapons systems.  The certification process requires that they demonstrate the ability to accurately maintain their COP tactical database picture to ensure the weapon engages only the intended target. The CTTS provides the capability to build training scenarios that will be used in the actual crew certification process.  Having the actual training software embedded in the real C4I system guarantees access to all required users, without having to take an actual weapons system console off line to support the injections required for the training and certification process.Mission Planning and Rehearsal:  The ease with which mission scenarios can be built for multiple air, surface and subsurface platforms makes the CTTS an ideal application for mission planning.  The variable playback speeds will allow staff officers to rapidly plan and brief senior decision makers on current and future planned operations.  This system is expected to be used in the Surface Warfare Officer School department head course for precisely this purpose.Integrated Team Training:  The difficulty in training the various components in modern C4ISR systems stem from the fact that there is so much source data that is being input and analyzed by the various operational specialties assigned to work those specific issues. Currently these are simulated by large numbers of complex modeling and simulation systems, which require a large support staff to operate, to ensure validity of data types and sources from different simulation engines.  This type of event is not sustainable at the individual Strike Group or platform level due to the lack of personnel resources.  CTTS addresses this shortfall by providing a one-stop scenario generator, with various simulation plug-ins, where each plug-in is capable of outputting data in the various formats required by the specialized analytical tools available to the analysts using the C4ISR systems.  The system is easy enough to use that schoolhouses will build scenarios that can be transferred to the afloat platforms, permitting them to continue to rehearse and modify the scenarios to maintain tactical proficiency.  The scenarios can easily be tailored to emphasize a new training objective. It is expected that the operational community will build websites that can be used to share their favorite and most challenging scenarios.  COP Database Manager Training and Proficiency:  When the CMT simulation plug-in is enabled, CTTS provides outputs with sufficient variability in location and quality of data elements that mimic reporting by real world sensors.  This will be used by Joint and Navy schoolhouses responsible for training the COP database managers.  The course will also train the operators in how to build and execute scenarios of their own design, thus allowing for continued proficiency training after completion of the formal course of instruction. 3. Evolution of C4I Embedded TrainingEmbedded Training can be described many ways, but we have adopted this definition here: C4I Embedded Training is when training data is injected into an operational C4I system that simulates real world situations, it does not corrupt normal operations and the C4I functions operate on the training data in the same manner as real world data.  The benefit of this type of training is that it can be provided to C4I users and decision makers when and where it is needed. The applications described run within C4I systems that are compliant with the Department of Defense Common Operational Environment (COE). This includes the several variants of the GCCS and upward of a hundred or more COE compliant systems in various levels of development.Developing embedded training within C4I presented a significant challenge. C4I systems in general do not provide ready means to manage simulated data or operate on variable time bases.  As more comprehensive levels of sophistication of embedded training were conceptualized and developed it required the inclusion of C4I services to accommodate them as shown in Figure 1.Embedded training is broken down to several types and methods as shown in Figure 1. This table outlines some of the additional services that were required within C4I to accommodate the various levels of embedded training. This table also shows the evolution of capabilities within the C4I Training Infrastructure from basic operator level training, through team training distributed across multiple ships, to the training of operators on military systems other than C4I.Operator Level Training provides individual training through the use of scripted scenarios and step by step instructions to the trainee. The software consists of the Training Author and the Training Tutor. They are used for developing and delivering training to individual operators. Training lessons run on operational systems at an individual workstation. GCCS-M functions operate on the training data and scenarios the same as real world data.The training lessons are played identically each time the training is provided. The training scenarios run on operational C4I workstations accompanied by display controls (e.g., re-centering of the map, zooming), annotations (arrows, overlays), graphics and text. Figure 1C4I Embedded Training EvolutionFigure 2Operator Level TrainingThe combination of reading instructions and applying newly learned skills is an effective learning method. Figure 2 is an example of a typical screen during a lesson. The background is the GCCS-M. A training scenario is presented along with the Tutor user interface at lower center. Instructions, visuals, graphics, etc., occur in frames.  It was necessary to devise software methods to replay dynamic scenario files through the C4I system in a manner that would exercise the system functions without corrupting normal operations. Methods to manage variable time bases were also necessary so the scenarios can run at real time or speeds up to 1000 times real time. They can be started, paused or advanced.It was also necessary to provide visual aids such as text, illustrations and map highlights to instruct the trainee.  Controls were provided to allow the training scripts to manage the map displays such as re-centering and zooming to areas of interest. C4I Team Training is the term used to describe training that is provided to a team of C4I users and decision makers. Two major differences between this and operator level is that the scenarios are generated by simulations and they are injected into the ship’s local area network (LAN). Hence the training is accessible at any GCCS-M workstation by selecting the training common operational picture (COP) instead of the real world COP. The C4I Team Training System (CTTS) [1], [2] is a simulation-based training application that provides C4I team training at training commands, operational facilities and aboard Navy ships. Specific training objectives are achieved through the use of an internal scenario generator plus the addition of plug-in training simulations that perform specialized tasks. The initial delivery of CTTS hosts an embedded simulation, the Cruise Missile Trainer (CMT) Simulation, a plug-in that was developed by the Naval Undersea Warfare Center (NUWC) - Newport Division.  Developers may add additional training simulations.A major capability that was needed to accommodate team training was a method to embed simulations within C4I systems and interface them with various COE services [8]. The technology utilized in operator level training was expanded to accommodate the injection of training scenarios into C4I that were generated by simulations rather than from stored files. Other Plug-in simulations can be developed and embedded within the open system training architecture.A second capability that was equally challenging was to develop an easy way to generate scenarios and efficient ways to store, retrieve and run them. The Mission Editor component of CTTS can produce scenarios that run directly in training sessions or be used as the ground truth input to simulations such as the Cruise Missile Trainer which in turn produces the perceived common operational picture that the trainees see. The Mission Editor also provides means to change the training scenarios during runtime.Many of the core technologies that are used in Embedded Training were developed over the last three years in the Navy’s C4I Embedded Simulation Infrastructure (ESI) Program [3], [4] sponsored by the Navy Modeling and Simulation Management Office (NAVMSMO).An embedded Client / Server architecture was developed [5], [6] as a part of the overall Training Architecture. The embedded Clients within this architecture act as multiple clients to both training server simulations, such as the Cruise Missile Trainer (CMTpc), and to COE servers such as the Tactical Management System (TMS) and Joint Mapping Tool Kit (JMTK). These embedded clients provide the links between the simulations and the COE.A final capability required was to devise network methods by which the training can be distributed throughout the ship. Training occurs at specific workstations on the operational GCCS-M local area network (LAN) while other workstations are continuing to process real world C4I data.Operator and Team Training software capabilities have reached a relatively advanced stage of development. Two current areas or research are: the development of network based, or network enhanced training, to extend the range of C4I training to multiple ships; and C4I centric training that broadens the scope of embedded training to include other systems.Network Based C4I Training is the expansion of team training that runs across the C4I wide area network (e.g., synchronized and conducted on multiple ships.). This technology, currently under early stages of development, presents a challenge since underway Navy ships have a limited C4I communication bandwidth that can be dedicated to training. Many of the conventional methods of centralized generation and control of training data would be difficult to implement.Several methods are being examined for implementing network based training within the C4I architecture.  Requirements are being defined to achieve distributed applications with peer-to-peer connectivity with data exchange and time synchronization across the C4I network.One promising approach being examined is a methodology that will allow distributed training scenario generation using a combination of scripted scenarios and free play. Many of the forces move according to a preplanned script. If not modified during the training they can be processed independently on each ship without further communication except for scenario changes. Changes to those scripts are communicated with much less data exchanged than other approaches. Another technology being addressed is the ability to inject simulated forces into real world exercises. This requires the acquisition of real world ground truth data obtained from instrumentation of the forces involved. Without ground truth the simulated forces would have no real references. The Range Fusion System (RFS) under development at NRL is part of the overall training strategy. The RFS, which provides ground truth data from Navy Training Ranges during exercises, has been integrated with GCCS-M afloat and will be integrated with the CTTS this year.Finally, C4I Centric Training is a technique that broadens the capabilities described above by providing interfaces to other shipboard systems. This work is in anticipation of the future direction of C4I systems taking advantage of evolving network enabling technologies planned for the transition of the COE to the Global Information Grid (GIG) Enterprise Services (GES) [7].We are in the early stages of this development as the distributed Multi-ship C4I training technology evolves. It makes sense to expand C4I Centric Training to other systems. And since the GCCS series of systems are Joint C4I systems, they provide a potential of a Joint embedded training infrastructure that is truly integrated into military systems and can provide the links to a wide range of systems networked to C4I.An example of an application that supports C4I Centric Training is the UAV Down Link Trainer. It is a plug-in model that has been developed to simulate the Predator video stream and produces a down link synchronized with the CTTS training scenario running in the GCCS-M. Another C4I Centric Training application under development is an interface to Cryptologic systems. 4. Embedded Training ArchitectureOne challenge in developing a comprehensive set of embedded C4I training tools is integrating the various components together in a cohesive and logical manner.  By using software reusability principals, flexible design principles, and Java software development best practices, the evolving C4I embedded training applications will be extensible, allowing for future functions and plug-ins to be added more seamlessly. This section and the following section describe the architecture of the C4I embedded training tools and the design decisions made to integrate this component based software with the COE and GCCS-M.  These sections also address the design concepts to be employed for future enhancements that will be added to facilitate full network centric training for shipboard and distributed use.A diagram that illustrates the relationship between the C4I Embedded Training components and the COE services (See DII COE Integration & Runtime Specifications Version 4.1 [8]) and application programmer interfaces (APIs) is shown in Figure 3. Previous papers have described this architecture [4], [5], [6]. Figure 3 illustrates the relationship between the embedded training architecture shown at the top and the COE shown at the bottom. One common aspect of the design is that the training applications are layered over and use the COE through the standard COE Application Program Interfaces (API). The APIs for the new COE 4.x being released are written in Java. The significant difference between the training applications and many other applications are the widespread use of sharable modeling and simulation (M&S) software components that are integrated into the application design. These components were developed in the Navy’s C4I Embedded Simulation Infrastructure (ESI) Program as extensions to the COE and are available in the Modeling and Simulation Software Development Kit (M&S SDK) distributed by NRL [3].  The M&S SDK is compatible with COE compliant systems.Figure 3COE/Embedded Training Architecture5. Embedded Training Host ApplicationThe C4I Team Training System is based upon the concept of a training host application [3], [9] which is a GCCS-M mission application shell tailored to the specific domain of training and serves as a host to multiple embedded simulations applicable to training.  It contains a set of “core” components and functions that would be necessary for any basic C4I training capability.  Specific models and simulation components, known as plug-ins, can be added to build a comprehensive training application for the specific training desired, in this case, CTTS.  Other examples of the use of C4I host applications are the Weapons of Mass Destruction Defense (WMDD) [9] and the Range Fusion System, mentioned in Section 5.The training host components of CTTS are derived from the Modeling and Simulation (M&S) Software Development Kit (SDK).  The Mission Editor component of CTTS is comprised of the M&S sharable software components related to scenario generation and management.  These components are the Scenario Editor, the COP Capture function, the Virtual Track Manager (VTM), Scenario Preview, and Dynamic Run. The Archive, Replay, and Author components have recently been added to the M&S SDK, and will be incorporated into the CTTS this year.  Additional domain specific components, such as simulations and other applicable plug-ins, can then be added to tailor its use for more advanced team level, network centric, and distributed training applications.The Mission Editor component shown in Figure 4 contains a robust scenario generation and editing capability.  It is used in the CTTS for force lay down of entities and routes and to simulate movement along those routes. Figure 4CTTS Mission EditorThe Mission Editor is used to create and edit the time based scenarios stored in the VTM, and saved in Extensible Markup Language (XML) or Over-The-Horizon Targeting Gold (OTG) formatted files. The Mission Editor has an intuitive user interface and contains features that allow a user to rapidly create and modify scenario track and waypoint objects.  The Mission Editor acts as a core functionality of the CTTS, around which other features and plug-ins are built.COP Capture is a function used to extract the real-time C4I common operational picture and provide it to the CTTS as a starting point for a scenario to be built, or to initiate a course of action or plan. Several filters are available to limit track types, time period and geographical areas.The Virtual Track Manager (VTM) component is the low-level software for storing and manipulating scenarios made up of simulated forces. The VTM stores the time based scenarios in memory as tracks, waypoints, and events. The VTM contains functions (Java methods) for creating and manipulating the tracks. Unlike the other services, the VTM has no graphical user interface but interacts with other M&S components such as the Scenario Editor, COP Capture, Scenario Preview and Dynamic Run.  An application accesses the VTM through application programmer interfaces (APIs), which are public Java classes and methods.The Scenario Preview capability (also called the Plan Preview in other applications) is used to run and preview a scenario stored in the VTM during its development. It is used in conjunction with the Scenario Editor and can display all waypoints and tracks in the scenario in the form of PIM tracks. The scenario may be automatically time stepped or viewed in time slices by adjusting a time slider bar. The scenario is displayed on the GCCS-M default system map but not inserted into the TMS, therefore the GCCS-M system functions cannot operate on the scenario during preview.The Dynamic Run function processes the VTM scenario during CTTS runtime. Several options are available that effect how the dynamic scenario is provided. The output can be inserted into the GCCS-M TMS or provided to the simulation to process, depending on the training requirements. For example the stored scenario could be the “ground truth” input which gets converted to a “perceived picture” by the simulation, which is the case for the CMT Simulation Server plug-in in CTTS.  The Dynamic Run function generates the Simulation COP (SIM COP), which provides CTTS with the means to display simulated data in the common operational picture map display so that it protects the real world C4I data but allows all COE and GCCS-M software segments to operate on the simulated data in the same manner as if it were real.The first release of the CTTS contains an embedded plug-in, the Cruise Missile Trainer (CMT) Simulation Server plug-in, which is pre-loaded at runtime.  The CMT Simulation Server was adapted from the Cruise Missile Trainer – Personal Computer (CMTpc) training system, whereby the basic functionality of the simulation engine of the CMTpc and Contacts Database are preserved in the CMT Server for CTTS.  There is also a feature of the Dynamic Run component that is specific for the CMT plug-in, and it handles the interface between the VTM scenario in memory and the CMT sensor detection analysis and track reporting functions. The Dynamic Run component extracts the training scenario from the VTM and produces the dynamic ground truth picture as the input to the CMT Simulation Server. Scenario tracks are then modified in the CMT to simulate sensor inaccuracies and deviations, according to database setup parameters, and they are made visible or are hidden based on when they are actually detected.  Then, the perceived scenario reports are inserted into the GCCS-M Track Management System (TMS) and into the Simulation COP and distributed as training tracks across the GCCS-M LAN.  The Archiver is a training component that is being integrated for the advanced C4I embedded training system.   The Archiver can archive real world tracks from real time operations and training exercises, as well as simulated scenarios generated within the CTTS Mission Editor. The archives are saved on the system disk as simulated data in either XML or OTG format.The Replay component will allow the playback of archived C4I track data, either from real world operations, training exercises, or from training scenarios and simulated output from CTTS.  It will replay the tracks within the GCCS-M system as simulated data.  All C4I applications are active during replay and operate on the data the same as on real world C4I data. The Author component  provides additional authoring tools that allow the user to define an animated playback, import slides, screen captures, photo or other graphical images, etc., for briefing purposes, add pause and stop points, adjust playback speed and control the COP display (e.g., center the map or zoom, activate a tactical overlay, etc). The Author is generic in its component implementation.  It can be used for a Training Author that will create content for operator level training, or it can also be used for a Debrief Author that will be used for a wide range of briefing and presentation content.Figure 5Training Host Application ArchitectureThe Training Host Application architecture [3] is illustrated in Figure 5.  This architecture integrates the M&S Services and provides a structure for the insertion of plug-in simulations such as the CMT Simulation plug-in, the UAV plug-in, and other simulation or model plug-ins, as shown.  An example of the CMT Simulation plug-in as it is used in CTTS is shown in Figure 6.  The C4I Team Training System window is active as the trainer creates the training scenario and sets up the Cruise Missile Training (CMT) plug-in simulation. This figure shows the paths of intended movements of the forces. These can be modified during runtime. This “ground truth” training scenario is provided to the CMT simulation which in turn produces the “perceived” training picture that gets fed to the simulated COP. Trainees perform their assigned tasks on the simulated COP.6. Training Tools Undergoing IntegrationA number of additional training capabilities that will be integrated within GCCS-M in future enhancements to the  embedded training tools are available in a basic configuration or are under development at NRL.Transit Training Application – The concept for this new development is to archive C4I data during Battle Group exercises for play back and training during transits to deployed operational areas. The advantage of this approach is that the trainees are familiar with the exercise since they had just been through it. Enhanced scenario generation tools can be used to modify the scenario to add interest and examine alternate threat conditions and courses of action. Battle Force Tactical Trainer (BFTT) Interface – This interface will allow the C4I embedded training tools to send selected scenario data to the BFTT system aboard single ships, through a Distributed Interactive Simulation (DIS) communication channel.  This will be the ground truth data that BFTT can then use to stimulate its own channels and sensors that feed into the GCCS-M LAN.  Options will be available to set the selected group of tracks to be reported, the area of interest, and the update rates of the scenario.Figure 6Example ScreenRange Fusion System (RFS) – The Range Fusion System (RFS) integrates data from multiple range systems into a common ground truth picture during military exercises and provides the fused product to other systems such as C4I, training systems, remote display systems and reconstruction/debrief systems. The Range Fusion System will be a crucial component in the future for mixing real with synthetic forces by providing ground truth for the real world forces.C4I Simulator/Stimulator – The C4I SIM/STIM is a version of the CTTS that simulates a separate COE system and passes training scenarios through the C4I communications channel rather than inserting directly into the C4I tactical data base. The C4I SIM/STIM is capable of generating training scenarios or of archiving real world operations and replaying them back through the system.UAV Down Link Trainer – This application uses the common scenario generation capabilities in the CTTS as input into an embedded UAV Visualization Tool (UVT). The UAV Down Link Trainer output stimulates the Predator down link to provide training synchronized with the training scenario being displayed on the C4I system.  Sensor/Emitter Plug-in – This plug-in for CTTS is under development to provide a basic visibility model for tracks in the scenario other than blue forces (assumed self-reporting via Link).  It is currently based on line-of-sight sensor ranges of the blue forces and will be enhanced to include more detailed sensor/emitter databases.  It will be an additional plug-in to use for the simulation of the reporting of synthetic hostile, neutral, or unknown C4I track data in the training scenario.			        AcknowledgmentsThe authors would like to acknowledge Peter Kunkel, Nam Le, Trinh Nguyen-Phan, Dan Robinson, and Jennie Womble for their software development work at NRL that is described in this paper.			        References[1]	McGroder, D., Layman, G.: “The C4I Team Training System” Paper 03F-SIW-069, Simulation Interoperability Workshop, Fall 2003; Orlando, FL.[2]	Daly, J., Layman, G.: “C4I Simulation Based Embedded Team Training” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, CA.[3] Layman, G., Daly, J., Weatherly, J.: “C4I Host Applications” Paper 03F-SIW-053, Simulation Interoperability Workshop, Fall 2003; Orlando, FL.[4]	Layman, G., Daly, J., Robinson, D, Weatherly, J.: “Integrating Simulations into DII COE Compliant C4I Systems” Paper 02F-SIW-048, Simulation Interoperability Workshop, Fall 2002; Orlando, FL.[5]	Layman, G., Daly, J., Weatherly, J.: “C4I Embedded Simulations” Paper 01S-SIW-082, Simulation Interoperability Workshop, Spring 2001; Orlando, FL.[6] 	Layman, G., Daly, J.: “C4I Tactical Applications Utilizing Embedded Simulations” Command and Control Research and Technology Symposium (CCRTS), June 11-13, 2002; Naval Post Graduate School, Monterey, CA.[7]	Tolk, A., Daly, J.: “Modeling and Simulation Integration with Network Centric Command and Control Architectures” Paper 03F-SIW-121, Simulation Interoperability Workshop, Fall 2003; Orlando, FL.[8]	Reference for the COE architecture on the DISA web site:  HYPERLINK "http://www.disa.mil/apps/coe/disacoe.html" http://www.disa.mil/apps/coe/disacoe.html, as of  Feb. 17, 2004.[9]	Layman, G., Weatherly, J.: “Weapons of Mass Destruction Defense – A C4I Host Application” Paper 03S-SIW-090, Simulation Interoperability Workshop, Spring 2003; Orlando, FL.			       Program SponsorsSpace and Naval Warfare System Command (SPAWAR) - CTTS, Tutor, Author, UAV Down Link Trainer; Navy’s Quality Fleet Feedback (QFF) Program - the Transit Training Application; Navy Modeling and Simulation Management Office (NAVMSMO) - the M&S technology development; Naval Air Systems Command (NAVAIR) - Range Fusion System and its integration with the CTTS and GCCS-M.			        Content in this paper was also presented at the Spring SIW, April 2004, Washington, DC, Paper 04S-SIW-149, Layman, G., McGroder, D., Harrington, W.: “Advanced C4I Training for the Global Command and Control System – Maritime (GCCS-M).			       Authors BiographiesDENNIS MCGRODER is a Principal Systems Engineer for Dynamic Animation Systems, and is the project manager for the C4I Team Training System at the Naval Research Laboratory.  He has acted as a lead software designer and developer for several COE based projects, including Embedded Training, Training Author, Training Tutor, and Scenario Generator for the Joint GCCS, plus the Training Module and Event Reconstruction for the Navy’s JMCIS.  He has been involved with advanced software development for over fifteen years, specializing in the areas of C4I, training, graphical user interfaces, and tactical decision aids.  He has had several applications deployed in operational C4I systems.  He holds a Master of Science in Biometry and Computer Science and a Bachelor of Science in Mathematics. DR. GENE LAYMAN is a Research Engineer at the Naval Research Laboratory and directs a Command and Control Development Team that has been active in GCCS and GCCS-Maritime developments since their conceptions. Earlier he managed the Radar Branch and the Guidance Branch at the Naval Surface Weapons Center. Before that, Dr. Layman was a Program Manager in the Missile and Ordinance Division at Texas Instruments, Inc. and a Circuit Designer at The Boeing Company on the Minuteman Program. He has led or participated in the design of over two-dozen military systems with more than half becoming fully operational./h/C4ITTS	/bin		C4ITTS JAR 		(main application)		Scenario Editor JAR		Dynamic Run JAR		ESI Library JAR		Database Access JARs		CMT Library JAR		DMI Help JAR		Run C4ITTS perl scripts and batch files		CMT Database Access perl scripts and batch files		/plugins			CMT Plug-in JAR	(included in C4ITTS)			[Debrief Author JAR]				[COLT Plug-in JAR]	(additional plug-ins)			[Predator Plug-in JAR]			…/data	/CMTPCDBMaster CMT Database file (MS Access .mdb file) with:	Contacts tables	Sensors / Emitters tables	/Exercises		CMT Database Exercise files (.mdb files) with:  			scenario infosensor / emitter parameter settings	/Scenarios		XML Scenario (.xml) files		OTH-T GOLD Scenario (.gld) files	/Icons	/Menus/Scripts	C4ITTS runtime environment batch file		C4ITTS class path batch file/SegDescrip	Standard COE segment descriptor files	SegInfo file:C4ITTS Requires: IFL, JMV, TMS, AFW, TMS-V