Crowd Federate Graphical User InterfaceHerbert H PilandFrederic (Rick) D. McKenzieVirginia Modeling, Analysis & Simulation CenterOld Dominion University757-683-5590Norfolk, VA 23529 HYPERLINK "mailto:rdmckenz@odu.edu" rdmckenz@odu.eduKeywords:Crowd federate, simulation.ABSTRACT: The Crowd Federate is intended to provide the United States military with the ability to realistically simulate the behavior and effects of crowds of civilian inhabitants encountered in the urban settings that are often the battlefields of today. However, setup and execution of any complex simulation can be a long and difficult process, even for experienced users. For the true potential of this tool to be realized, it will be necessary for users to have the full capability to design, edit, and control scenarios in a simple and intuitive manner.In this paper, we report about the Crowd Federate's Graphical User Interface, or GUI. The GUI presents operators of the Crowd Federate with an overhead map view of the scenario (whether it is a simulation being designed, or one in progress), along with a variety of menu options. Using simple mouse actions and guided data entry, the operator can design or edit scenarios, give specific instructions to specific entities, obtain information about specific entities, and more. Included in this paper are details about the functions provided to the operator by the Crowd Federate GUI, as well as details about the interface design.1. IntroductionThis section begins with a (brief) look at the motivations and design of the Crowd Federate, as a basic understanding of the program will be necessary in order to effectively discuss the benefits provided by the Crowd Federate GUI. The conclusion of this section discusses the motivations and need for developing the Crowd Federate GUI.1.1 Motivation for Developing the Crowd FederateThe United States Military has made use of simulations for several years, recognizing their effectiveness for training exercises and mission planning. However, the face of combat has begun to change in recent years. In the 20th century, most military operations were traditional wars: one military force fighting against another, usually away from populated areas. But as the 21st century progresses, the military is being called upon to fulfill a more diverse set of roles: law enforcement, peacekeeping, infrastructure development, and other operations taking place in centers of population. [1]This invariably means that crowds of civilians will be involved in modern military operations. Crowds can have a large impact on the ability of military units to achieve their mission objectives: the crowds may block roads, provide cover to insurgents, or even attack military forces directly. The United States Military therefore needs to be able to account for the possible actions of these civilian actors in its training and planning: the Crowd Federate is designed to meet this need. [1]1.2 Description of the Crowd FederateThe Crowd Federate is a HLA-compliant simulation intended for use alongside standard military simulations, including JSAF and OTBSAF among others. The model has three main layers, the cognitive model (CM) layer, the physical model (PM) layer, and the crowd behavior API. The approach used in the design for the crowd federate is to utilize a generalized API for an architecture that supports the reuse of existing cognitive models as well as existing physical models.  The API is facilitates control of virtual human agents animated in the physical model by an intelligent mood-driven algorithm (cognitive model) as well as provide event and state feedback from the physical model to the cognitive model. The cognitive model simulates the aggression level (mood) of and actions performed by the crowds, including how aggression levels change in response to various stimuli passed to it by the physical model. In addition to passing stimuli to the cognitive model, the physical model handles the execution and animation of the actions dictated by the cognitive model. Besides the GUI, there is also a 3D Viewer used to render and visualize animated crowd member activities. Information about the crowd is exchanged across the RTI with other federates such as a SAF simulation.1.3 Motivation for Developing the Crowd Federate GUIThe Crowd Federate provides a useful tool for simulating the behavior of civilians within an area of interest to the effectiveness of a mission. However, as with many simulations, user-friendliness is needed to obviate a high level of technical expertise that may be required to setup the federate and use its features. To make the Crowd Federate more readily usable to operators, the Crowd Federate team decided to design a GUI that would simplify many common tasks. For example, rather than trying to calculate positions of units by hand, the GUI allows users to simply click on a map position to obtain it’s coordinates for placing groups or designating target locations for behaviors.In addition to improving accessibility of the basic features of the Crowd Federate, the Crowd Federate GUI also expands on its available functions by allowing specific situations to be created on demand by giving specific behaviors to crowds, rather than relying on the choices made by the Crowd Federate cognitive model. Typically, the crowd model is meant to be left alone to generate automatic and realistic behaviors based upon the psychology of crowds. Therefore, an operator would be able to leave the possible thousands of intelligent agents (crowd members) alone to operate and evolve through the phases of crowd behavior (gathering, rallying, and dispersing). During which, stimuli from the environment will affect mood levels and corresponding behaviors as well as reactive behaviors. On the occasion where an operator wants to achieve a training or other objective, the ability to stop or direct actions of groups within the crowd is then available via the GUI.2. Features of the Crowd Federate GUIThe Crowd Federate GUI uses scenario files to store initial terrain positions of interest and laydown of entities that is made available to other components of the Crowd Federate such as the Physical Model and the Crowd Federate Viewer. One of the primary challenges in creating scenario files is achieving the desired placement of units within the scenario. By allowing users to simply click on the map presented in the GUI to determine unit placement, as well as showing the locations of previously placed units, the Crowd Federate GUI makes it easy to initially place units in any formation a particular scenario might require. Compared to the alternative of editing a scenario file directly with no aid for calculating position coordinates, this aspect of the Crowd Federate GUI cuts back on the time and technical expertise required for scenario creation and editing significantly.For scenario execution and control, the Crowd Federate GUI does not just improve usability, it also expands functionality. Normally, the Crowd Federate’s cognitive model controls the behaviors of crowds based on environmental stimuli, the crowd’s mood, and the types of civilians that compose the crowd. The Crowd Federate GUI allows a user to directly change the behaviors of specific units, allowing a particular situation to be produced at will. In addition to achieving operator objectives, this capability can be used to allow a scenario controller to role-play the part of a crowd and to re-create scenarios for training or experimentation purposes.3. Case Study: Creating and Controlling a Simple Scenario using the Crowd Federate GUITo illustrate the functionality the Crowd Federate GUI provides, we will walk through the creation and execution of a simple scenario. Our scenario will consist of two different groups of civilians which begin at different locations, walk towards each other, and then begin throwing rocks at each other once they meet. Creation of the scenario and control of the groups’ actions will be handled entirely through the Crowd Federate GUI.3.1 Group and Entity Laydown within the Crowd Federate GUIWhen the Crowd Federate GUI is opened without being connected to the Crowd Federate, the GUI is in editing mode, which is used to create and edit scenarios for future use. Starting the GUI in this mode, we will create the two groups of civilians by using the Crowd and Group creation window that is opened automatically when the Crowd Federate GUI is started in edit mode.In the Crowd Federate, a crowd is composed of groups of varying types. This means that we must first name our crowd and then create our two groups. In the status window (which is automatically opened when the Crowd Federate GUI is started up), we can enter a name for our new crowd. Then, we can directly enter the location for the crowd by typing in the coordinates (in LatLong or UTM format), or we can click the ellipsis (“…”) and select a location by clicking on it within the 2D map displayed in the GUI’s main window. Once information entry is complete, the “Add Crowd Row” button will add the new crowd to the scenario file.Now, we create the two groups that will be contained within the new crowd. This is also accomplished within the status window: as before, a name and position are required. Additionally we must designate a type for the group. Type determines the behaviors and reactions the members of the group will eventually exhibit when controlled by the Crowd Federate cognitive model. A size is also needed: this will be the number of entities/individuals in this group. The group must also be associated with one of the crowds in the scenario. Finally, pressing the “Add Group Row” button will add the group to the scenario. Repeating this procedure again will provide us with the two groups needed for our desired scenario. Of course, this process can be repeated many times to add many more groups within a crowd. Figure 3.1 shows the status window that is used to view, create, and edit crowds and groups. The Crowd Federate GUI extends an open source program called OpenMap. Also illustrated in the figure is the 2D map background of the GUI which is the city of Brcko, Bosnia-Herzegovina. The diamond shaped icons shown are Homeland Security icons of soldiers and civilians in various stages of protest/unrest. The green and blue icons are mapped to the various types of groups (bystander, curious, protestor, and agitator) that have been entered into the scenario while red icons map to soldiers or control forces.Figure 3.1 Crowd Federate GUI with status window.3.2 Controlling a Scenario using the Crowd Federate GUIHaving created the crowd and group placements necessary for our scenario, we will now use the Crowd Federate GUI to direct the desired behaviors from the groups during the scenario’s execution. When the scenario is started, the groups will be waiting for instructions. This is particularly true if execution is occurring without the cognitive model. First, we will use the Crowd Federate GUI to direct that both groups move to a common location. To issue a move behavior to a group, the user simply right-mouse clicks on any member of that group, selects the Group sub-menu, and within that group selects a group behavior such as the Seek To option. The user then selects the target location by clicking on the ellipsis and clicking again on the GUI map at the location the group is to move towards. Repeating this operation for the other group will start both groups moving towards the targeted location. Figure 3.2 shows those menus for a selected unit.Once the two groups have reached the location, they can be instructed to begin throwing rocks at each other by, as before, right-mouse clicking a member of one group, selecting the Group sub-menu, selecting the Group Throw option. Once this is repeated for the second group, both groups will be throwing rocks at each other. At this point, the requirements for this simple demonstration scenario have been completed. GUI-directed scenarios of this type could be used to elicit on-demand crowd responses to support specific training or experiment requirements of law-enforcement and military units. Such on-demand directives would be used in addition to or in lieu of cognitive model driven groups within the crowd. It is thought that this method of creating crowd behavior within a scenario could also be used as a validation alternative by comparing the human operator driven crowd to the cognitive model driven crowd. Such a comparison would serve as a Turing test for the observation of realistic behaviors within a crowd.Figure 3.2 Issuing a behavior to a group.4. SummaryGiven the unpredictable nature of civilians and crowds of civilians and a natural extension of this unpredictability to realistic models of crowds, there is an obvious and inherent need for controllability within the context of experimentation and training. The Crowd Federate GUI provides this element of controllability when necessary in addition to the user-friendliness needed in scenario generation.Using the GUI, operators can generate more aggressive behaviors within the crowd members or lower aggression levels when unwanted behaviors interfere with established training objectives. Operators can also decide to direct specific actions of crowd members when particular behaviors are desired in response to certain stimuli. This can also eventually be a learned response over time and use be users of the Crowd Federate.5. Future WorkBesides general refinements of the interface and appearance of the Crowd Federate GUI, several specific features of note are planned for future versions of the software.Primary among these will be improved methods by which to control the units during scenario execution including a macro system for giving units a “script” to follow, the ability to set conditions for behaviors to start/stop executing for specific units, and windows by which parameters of the cognitive model can be initialized from within the Crowd Federate GUI.Additionally, the scenario creation mode may be expanded to allow alteration of the probabilities used for choosing behaviors, encoding specific reactions to specific stimuli, and adding new behaviors or disabling built-in ones based on culture or other scenario-specific contexts.With all of these planned changes, the intent is to continue to develop the Crowd Federate GUI into a robust user-friendly tool that can be used by operator personnel to create and execute scenarios with the level of detail and precision required for training and experiment exercises.6. References[1] M. D. Petty, F. D. McKenzie, R. C. Gaskins, and E. W. Weisel, “Developing a Crowd Federate for Military Simulation”, Proceedings of the Spring 2004 Simulation Interoperability Workshop, Arlington VA, April 18-23 2004, pp. 483-493.Author BiographiesFREDERIC (RICK) D. MCKENZIE, Ph.D. is an Associate Professor of Electrical and Computer Engineering at Old Dominion University where he currently serves as Principal Investigator (PI) and Co-PI on projects involving software architectures for simulation, behavior representation in simulations, and medical modeling and simulation. Many of these projects also involve virtual reality and scientific visualization. Dr. McKenzie received his Ph.D. in computer engineering from the University of Central Florida in 1994. Prior to joining ODU, he held a senior scientist position at Science Applications International Corporation (SAIC).HERBERT H. PILAND is a modeling and simulation (MSIM) masters student and graduate research assistant at Old Dominion University. He holds a bachelors degree in computer science also from ODU. Mr. Piland is currently working on improvements on the Crowd Federate GUI and investigating the integration of non-lethal weapon (NLW) physiological components into the crowd model.