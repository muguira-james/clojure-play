SISO J to SIMPLE Translation Advice and Lexicon for Enabling Simulations(SIMPLE TALES)Joe SorrocheASRC Communications, Ltd.USAF Distributed Mission Operations Center (USAF DMOC)4500 Aberdeen Dr., SE, Building 942Kirtland Air Force Base, NM 87117505-853-0372, DSN 263-0372 HYPERLINK "mailto:joe.sorroche@kirtland.af.mil" joe.sorroche@kirtland.af.milOther Contributors from earlier workMr. Adin Burroughs, Northrop/GrummanMr. Ralph Snape, StasysABSTRACT: The NATO Tactical Data Link Interoperability Syndicate (TDLITS) group currently uses the Standard Implementation for Multiple Platform Link Evaluation (SIMPLE) protocol to exchange Link 16 messages between simulations.  The SIMPLE protocol, otherwise known as Standard Agreement (STANAG) 5602, is only available to NATO nations.  Non NATO nations have expressed an interest in participating in NATO TDLITS events, thus having the problem of obtaining the protocol required for participation.  Also, there are NATO and non NATO nations that currently use SISO-STD-002, formerly known as TADIL TALES, and now referred to as “SISO J”.  Therefore, there are operational requirements for existing NATO and non NATO military simulations to exchange Link 16 data using the two standards that are also interoperable with each other.  This paper describes the SIMPLE to SISO J translation process and methods, thus providing a way for SIMPLE and SISO J users to participate in NATO Link 16 training events.IntroductionRequirements for a Link 16 model in Command and Control (C2) distributed simulation training led to the creation of Tactical Data Link Technical Advice and Lexicon for Enabling Simulation (TADIL TALES).  TADIL TALES, now SISO-STD-002, further defines the IEEE 1278.1a Distributed Interactive Simulation (DIS) standard Signal and Transmitter PDUs for the Link 16 model.  The SISO standard also defines a High Level Architecture (HLA) Base Object Model (BOM) for modeling Link 16 in HLA.  NATO has designed their own model, the Standard Agreement (STANAG) 5602, otherwise known as the Standard Implementation for Multiple Platform Link Evaluation (SIMPLE).Because joint coalition training events are becoming more common, there has been a push to conform to either the SISO J or SIMPLE standard for Link 16 training.  However, implementers of the two Link 16 models do not wish to change because both fulfill the necessary training requirements.  The obvious solution, therefore, is to create a gateway that can provide a translation to either protocol, not unlike those that are using a DIS to HLA gateway.  This paper describes how a SISO J to SIMPLE gateway could be designed, thus providing interoperability between SISO J and SIMPLE protocol users.  SISO-STD-002 DescriptionSISO-STD-002 was approved by SISO in June 2006, and defines how to model a Link 16 network and exchange TDL J messages using DIS Signal and Transmitter PDUs.  The transmitter PDU adds 5 fixed modulation fields: Timeslot Allocation Mode, Transmitting Terminal Primary Mode, Transmitting Terminal Secondary Mode, Synchronization State, and Network Synchronization ID.  These fields model some Link 16 network characteristics.  The Signal PDU adds 160 bits after the Signal PDU Header and defined fields.  Additional Link 16 network parameters that are modeled are:  Network Participation Group, Net Number, Transmission Security, Message Security, Message Type Identifier, Timeslots, and Perceived Transmit Time.  These fields provide the capability not only for Link 16 message transmission, but also to adequately model a Link 16 network.  The different fidelity levels allow the user to model as little or as much as necessary to meet C2 training requirements.  All fidelity levels are interoperable with each other, which allow multiple fidelity users to interoperate.  For HLA, a Base Object Model was created which adds the required objects and interactions for Link 16 modeling and message exchange.  The SISO J HLA BOM fields are identical to the DIS fields, and the model was designed such that additional tactical data links could easily be added.  The standard also includes DIS to HLA translation guidance for DIS to HLA gateways.SIMPLE DescriptionIn Feb 1996, the Ad Hoc Working Group (AHWG) on NATO Common Interoperability Standards (NCIS) Testing required a single interface standard to support the interconnection of NATO resources.  This resulted in the development of the SIMPLE, STANAG 5602 (Reference 3).  This STANAG defines a protocol to provide the means for geographically (national and international) separated TDL assets (C4ISR, C2 and non-C2 platform test assets) to exchange environment data and TDL messages in order to conduct detailed TDL IO testing.The SIMPLE standard consists of several elements. These are the communications bearer (e.g. telephone lines, digital WANs), the encryption methods to be used to protect the secure information transmitted between sites, the protocols/data formats for the data transfer process, and additional aspects such as time co-ordination. There are currently three Ethernet WAN/LAN protocols that could be utilized for assets implementing the SIMPLE Standard. These include UDP broadcast, UDP multicast and TCP. Both UDP and TCP require that the Internet Protocol (IP) be used as an underlying protocol and are often referred to as UDP/IP and TCP/IP.In SIMPLE, the methodology for exchanging TDL messages is to take the host generated message traffic from the MIDS/JTIDS terminal interface and repackage it for transmission across the SIMPLE network.  The receiving SIMPLE node extracts the TDL message traffic from the received packet and presents it to the host interface as if it had been received from a MIDS/JTIDS terminal.  A new packet definition; the DIS PDU Packet, was added to the baseline protocol to support the exchange of DIS PDUs for simulated entities.  The content of the SIMPLE DIS PDU packet is related to the DIS PDUs defined in the IEEE 1278.1 standard.  As such, most Transmitter and Signal PDU fields require no translation.  SISO J to SIMPLE Protocol RelationshipsThe SISO J to SIMPLE translations required a careful look at related fields in the SISO J Transmitter and Signal PDUs and the SIMPLE data packets.  Some fields were easily translated; others did not have a corresponding relationship.   For HLA, the SISO J DIS to HLA translations (SISO-STD-002, Appendix C) provided guidance for developing HLA to SIMPLE translations.  SISO J DIS to SIMPLE TranslationsIn the SISO J and SIMPLE environments, it was found that Link 16 terminals are replaced with an emulator that provides only sufficient fidelity to ensure host/terminal and terminal/host interfacing requirements are met, which can be different for each platform.  The emulator also performs PPLI generation and terminal Receipt/Compliance (R/C) processing.  A SIMPLE converter would then interface the emulator for the transmission and reception of the SIMPLE packets to and from other participants.    For this reason, the Transmitter PDU will not be used, except as a precursor to a Signal PDU. Currently, it is not a requirement for TDL IO testing to emulate the JTIDS/MIDS terminal to such a high degree of fidelity; however, that may change.IEEE 1278.1a (Reference 1) and SISO-STD-002 (Reference 4) requires a Transmitter PDU be issued in accordance with clause 4.5.7.2.2 of Ref 1 (Issuance of the Transmitter PDU) and in conjunction with the following events: entering the Link 16 network, exiting the Link 16 network, when a synchronization state changes, and upon issuance of each PPLI or initial net entry message. A simulated JTIDS network is not required to undertake TDL IO testing in a SIMPLE environment.  Therefore, if the Transmitter PDU were required by SIMPLE, it would only be issued when a participant commences or ceases generating Link 16 messages.  In this case, the TSA mode can be set to 0 – 2, and all the remaining data item fields are set to defaults, depending on TSA mode.  The SISO J Transmitter PDU to SIMPLE Translations is described in detail in Annex A.Most Signal PDU fields require no translations; some do and will require the gateway to generate these fields, or delete them, depending on the translation required.  The Signal PDU to SIMPLE Translations is described in detail in Annex A.For Link 16 data, there are translations for the following:Message Type = 0 (JTIDS Header/ Link-16 Message) to/from SIMPLE Packet Type = 1 Link 16 messages.Message Type = 3 (JTIDS Header/JTIDS Voice CVSD) to/from SIMPLE Packet Type = 13 MIDS/JTIDS Voice.Message Type = 4 (JTIDS Header/JTIDS Voice LPC 10) to/from SIMPLE Packet Type 13 MIDS/JTIDS Voice.Message Type = 7 (JTIDS Header/VMF) to/from SIMPLE Packet Type 8 Variable Message Format.SISO J HLA to SIMPLE TranslationsThe Link 16 BOM to SIMPLE translations are similar to the DIS to HLA translation in Ref [5].  The HLA to SIMPLE translations convert from HLA Radio Signal Class Attributes to SIMPLE Signal PDU fields, and are shown in detail in Annex B.    No translations are required for the HLA Link 16 BOM TDLBinaryRadioSignal Class; it is an empty class and contains no attributes.SISO J HLA Link 16 Header to SIMPLE TranslationThe SISO J HLA JTIDSHeaderStruct is defined as a Data field of octets with cardinality of 6.  Therefore, the appropriate SIMPLE Link 16 Message fields must packed into the equivalent HLA JTIDSHeaderStruct octets.  The table in Annex B summarizes this mapping.SISO J HLA Link 16 Message Translation to SIMPLE The SISO J HLA TADIL J Message attribute is defined as a data field of octets with cardinality 1+.  The HLA TADIL J message contains Link 16 J-Words padded to a 10-byte size, just as described in Section 5.2.2.  The TDL Message Count Field of the HLA RawBinaryRadioSignal class specifies the number of J-Words contained in the TADIL J Message field and therefore is used in computing the size of this variable record.  The number of J-Words varies based on the J-Message type specified, as well as the Time Slot Type specified in the HLA JTIDSHeaderStruct.  Annex B shows the translation for a J Message containing three 10 Byte J-Words, although there can be up to twelve 10 Byte J-Words in a Link 16 J-Message.SISO J HLA JTIDS Voice CVSD Radio Signal Class Translation to SIMPLEThe HLA JTIDSHeaderStruct is defined as a data field of octets with cardinality of 6, so the appropriate DIS JTIDS Message fields must packed into the equivalent HLA JTIDSHeaderStruct octets.  The table in Annex B summarizes this mapping.SISO J HLA JTIDS Voice CVSD Radio Signal Class Translation to SIMPLEThe HLA JTIDSHeaderStruct is defined as a Data field of octets with cardinality of 6, so the appropriate DIS JTIDS Message fields must packed into the equivalent HLA JTIDSHeaderStruct octets.  The table in Annex B summarizes this mapping.SISO J HLA VMF Radio Signal Translation to SIMPLEThe fields contained in the HLA VMFRadioSignal class are equivalent to the HLA JTIDSMessageRadioSignal class, which is described in section 4.2.2. and in Annex B.SISO J to SIMPLE Gateway Application RequirementsThere are some special processing required that should be implemented in the SISO J to SIMPLE gateway.  They are:The SISO J to SIMPLE gateway should act as a Link 16 “data forwarder” to both domains.  All messages transmitted by a host within a single time slot shall be included within a single Link 16 packet.To preserve communications bandwidth, the SISO J to SIMPLE gateway shall have the capability to include J31.7 messages in Link 16 packets when required.  The gateway should be able to generate J31.7 messages as necessary when converting from SIMPLE to SISO J.  Consequently, the gateway should delete J31.7 messages when converting from SISO J to SIMPLE.The SISO J to SIMPLE gateway should generate meaningful data for the Signal PDU fields that have no equivalent in either protocol.  For SISO J to SIMPLE, message type 0, they areReceipt/Compliance flagWord count, which lists the number of 16-Bit data words in message data body.Loopback ID, which Defines unique terminal/host reference for specific messages.For SISO J to SIMPLE, message type 3 and 4, they are:Message EncodingNumber of CodewordsFor simulations complying with SISO J TSA Level 4, The Round Trip Timing (RTT) Packet in SIMPLE should not be confused with Link-16 RTT. In SIMPLE this packet is used to determine the average transit time of packets transmitted between each connected pair of SIMPLE Nodes.  For this reason (and others), when translating, SISO J modes should be set at TSA levels 0, 1 or 2.  TSA level 0 is preferred.Field 1 & 2 combinations provides a 24-bit field from which the receiving system can identify one particular bit in the whole day, so it is possible to calculate the Epoch, Frame, Time slot & Set.ConclusionsSIMPLE TALES provides interoperability between two popular Link 16 models:  SISO J and SIMPLE.  Note that this paper is the second attempt at providing a roadmap for a gateway.  The first [Ref 4}, written by Mr. Snape and Mr. Burroughs, was when the SISO J model was being developed and in draft form.  This paper incorporates the initial work and the changes to the SISO J model, as well as HLA to SIMPLE translations.  This gateway design will most likely require modifications when actual implementation occurs.  Those modifications will be reported in subsequent SIMPLE TALES papers.  Once this design has been tested and interoperability is verified, a SISO Guidance Document will be proposed.AcknowledgementsI thank Mr. Adin Burroughts and Mr. Ralph Snape for starting the initial version of “DIS-J to SIMPLE Translation Paper – Draft, Issue A”, that provided the basis for SIMPLE TALES, and Mr. Bill Hinkle, who provided the DIS to HLA translations to the SISO standard.  I also thank the DMOC for sponsoring the completion of this paper and supporting SISO Link 16 DIS and HLA standard efforts.  From DMOC, I thank Chief Engineer Mr. Tom Brown, Technical Advisor Mr. Jeff Wakefield, and Lt. Col. Donald “Drex” Dreschler.References[1]	IEEE 1278.1, 1995, “Standard for Distributed Interactive Simulation – Application Protocols”.[2]	IEEE 1516, “High Level Architecture Standard”, 2001[3]	NATO Standardization Agreement (STANAG) 5602, Edition 3, Standard Interface for Multiple Platform Link Evaluation (SIMPLE)[4]	DIS-J to SIMPLE Translation Paper – Draft, Issue A, 2002.[5]	SISO-STD-002, June 2006.Author BiographyMr. Sorroche is a Senior Systems Engineer with Arctic Slope Regional Corporation Communications (ASRCC), and has 20 years professional experience; 13 years experience in the Modeling and Simulation field. He currently works at the DMOC for the System Architecture Group, and has been the Engineering lead for the DMOC for many JEFX, Blue Flag, and Virtual Flag exercises. He is the Chair for the SISO TADIL TALES Product Support Group, the Link 11/11B Product Development Group Chair, and the SISO Liaison for the NATO Tactical Data Link Interoperability Testing Syndicate.  He has Bachelors and Masters of Science Degrees in Electrical Engineering from New Mexico State University.  He is a member of Tau Beta Pi and Eta Kappa Nu Honor Societies.   ANNEX A:  DIS to SIMPLE TranslationsSISO J TRANSMITTER PDU TO SIMPLEDIS Transmitter PDU FieldsSimple ImplementationPDU HeaderProtocol VersionThis field shall be set to value 6 (IEEE 1278.1a-1998).Exercise IDSee Reference IEEE 1278.1-1995PDU TypeThis value shall be set in accordance with the PDU Type being reported.Protocol FamilyThis value shall be set in accordance with the PDU Type being reported.TimestampAbsolute time stamping shall be used. Additionally the time shall be referenced to UTC (USNO).LengthSee Reference IEEE 1278.1-1995PaddingThis field shall be set to zero.Entity IDSiteSee Reference IEEE 1278.1-1995ApplicationSee Reference IEEE 1278.1-1995EntitySee Reference IEEE 1278.1-1995Radio ID All bits set to 1Radio Entity TypeEntity KindAll bits set to 1DomainAll bits set to 1Country All bits set to 1CategoryAll bits set to 1Nomenclature VersionAll bits set to 1NomenclatureAll bits set to 1Transmit State 0 = OffInput Source 0 = OtherPadding This field shall be set to zero.Antenna LocationX componentAll bits set to 1Y componentAll bits set to 1Z componentAll bits set to 1Relative Antenna Locationx componentAll bits set to 1y componentAll bits set to 1z componentAll bits set to 1Antenna Pattern Type All bits set to 1Antenna Pattern Length All bits set to 1Frequency All bits set to 1Transmit Frequency Bandwidth All bits set to 1Power All bits set to 1Modulation TypeSpread SpectrumAll bits set to zero indicate that spread-spectrum modulation is not in use.Major 0 = OtherDetailSet all to 0 = OtherSystem0 = Other Crypto System 0 = OtherCrypto Key ID All bits set to 1 Length of Modulation Parameters  All bits set to 1PaddingThis field shall be set to zero.Modulation Parameter #1Time Slot Allocation ModeSet to 0, 1, or 2. Modulation Parameter #2Transmitting Terminal Primary Mode 1-NTR 2-JTIDS Unit ParticipantModulation Parameter #3Transmitting Terminal Secondary Mode 0=None Modulation Parameter #4Synchronisation State3=Fine SynchronisationModulation Parameter #5Network Synchronisation ID All bits set to 0SISO J SIGNAL PDU TO SIMPLEMessage Type = 0 (JTIDS Header/ Link-16 Message) vs SIMPLE Packet Type = 1 Link 16 messagesSignal PDUSIMPLE Packet Type = 1 Link 16 messages (Note 1)FieldBitsRemarksFieldBitsRemarksNPG Number16NPG Number16Net Number8Net No.8TSEC CVLL8For TSA Level 0 – 2, N/A.No Equivalent Field and N/A  for SIMPLEMSEC CVLL8For TSA Level 0 – 2, N/A.No Equivalent Field and N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFDIS Type 0 = SIMPLE Type 1DIS Type 7 = SIMPLE  Type 8DIS Type 3 = SIMPLE Type 14DIS Type 1 = SIMPLE Type 63No Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot IDTimeslot NumberEpoch Number178For TSA Levels 0 – 1, Set all bits to 1Sequential Slot Count Field 1Field 216 8Defines MIDS/JTIDS slot (based on UTC) in which message transmitted. Perceived Transmit Time3232For TSA Level 0 – 2, N/A No Equivalent Field and N/A  for SIMPLETimeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or not codedSee Message sub-type belowRelay Transmission         1No Equivalent Field and N/A  for SIMPLESTN15STN15SDU Serial Number16Inserted by source Secure Data Unit (SDU) of the originatorSet all bits to 1No Equivalent Field and N/A  for SIMPLETadil-J Word #175Add 10 bits of padding to message when received from SIMPLE.Message Word #116Message data consists of one or more codewords -  (Link 16 70-Bit codewords) -  5 Parity bits stripped off-  5 Padding bits stripped off:-:-Tadil-J Word #N75Message  Word #N16No Equivalent FieldR/C Flag 8Defines if a Link-16 message requires Receipt/ComplianceSee Timeslot Type aboveMessage Sub-Type30 = Unencoded Free Text1 = Coded Free Text2 = Link 16 Fixed FormatNo Equivalent FieldWord Count16Number of 16-Bit data words in message data bodyNo Equivalent FieldLoopback ID16Defines unique terminal/host reference for specific messagesMessage Type = 3 (JTIDS Header/JTIDS Voice CVSD) vs SIMPLE Packet Type = 13 MIDS/JTIDS VoiceSignal PDUSIMPLE Packet Type = 13 MIDS/JTIDS VoiceFieldBitsRemarksFieldBitsRemarksNPG Number16NPG Number16Net Number8Net No.8TSEC CVLL8No Equivalent Field and N/A  for SIMPLEMSEC CVLL8No Equivalent Field and N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFDIS Type 0 = SIMPLE Type 1DIS Type 7 = SIMPLE  Type 8DIS Type 3 = SIMPLE Type 14DIS Type 1 = SIMPLE Type 63No Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot ID25No Equivalent Field and N/A  for SIMPLETimeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or unencodedNo Equivalent Field and N/A  for SIMPLERelay Transmission         (See note 5)1No Equivalent Field and N/A  for SIMPLESource Track number (STN)15STN15SDU Serial Number16Inserted by source Secure Data Unit of the originatorNo Equivalent Field and N/A  for SIMPLECVSD Encoded Voice data225 to 1860Size of data area is dependent upon timeslot typeMessage Data225 or 465Coded or unencoded free text message codewordsNo directly equivalent Field – See Signal PDU Message type Identifier aboveJTIDS/MIDS Voice Type31 = 16 kb/s CVSD2 = 2.4 kb/s LPC-103 = 4.8 kb/s4 = 9.6 kb/s5 = 24 kb/s MELPNo equivalent fieldMessage Encoding10 = 255 bit – coded1 = 465 bit - unencodedNo equivalent fieldNumber of Codewords16Number of codewords included in the messageMessage Type = 4 (JTIDS Header/JTIDS Voice LPC 10) vs SIMPLE Packet Type 13 MIDS/JTIDS VoiceSignal PDUSIMPLE Packet Type = 13 MIDS/JTIDS VoiceFieldBitsRemarksFieldBitsRemarksNPG Number16NPG Number16Net Number8Net No.8TSEC CVLL8No Equivalent Field and N/A  for SIMPLEMSEC CVLL8No Equivalent Field and N/A  for SIMPLEMessage Type Identifier8Type 0 - JTIDS header and messageType 1 - RTT A/BType 2 - RTT ReplyType 3 – 5  JTIDS VoiceType 6 – LETType 7 - VMFDIS Type 0 = SIMPLE Type 1DIS Type 7 = SIMPLE  Type 8DIS Type 3 = SIMPLE Type 14DIS Type 1 = SIMPLE Type 63No Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  (Note 2)Type 63 - RTT  (Note 3)Timeslot ID25No Equivalent Field and N/A  for SIMPLETimeslot Type3Type 0 – Type 7 and identifies packing format, message type, and if free text message is coded or unencodedNo Equivalent Field and N/A  for SIMPLERelay Transmission         (See note 5)1No Equivalent Field and N/A  for SIMPLESource Track number (STN)15STN15SDU Serial Number16Inserted by source Secure Data Unit of the originatorNo Equivalent Field and N/A  for SIMPLEMessage Type = 4 (JTIDS Header/JTIDS Voice LPC10)SIMPLE Packet Type = 13 MIDS/JTIDS Voice (Cont)LPC10 Encoded Voice data225 to 1860Size of data area is dependent upon timeslot typeMessage Data225 or 465Coded or unencoded free text message codewordsNo directly equivalent Field – See Signal PDU Message type Identifier aboveJTIDS/MIDS Voice Type31 = 16 kb/s CVSD2 = 2.4 kb/s LPC-103 = 4.8 kb/s4 = 9.6 kb/s5 = 24 kb/s MELPNo equivalent fieldMessage Encoding10 = 255 bit – coded1 = 465 bit - unencodedNo equivalent fieldNumber of Codewords16Number of codewords included in the messageANNEX B:  HLA To SIMPLE TranslationsHLA Raw Binary Radio Signal TranslationHLA Radio Signal Class AttributeSIMPLE Signal PDU AttributeRemarksHostRadioIndexEntity IDRadio IDThe HLA Host Radio Index is the unique HLA object name of the associated Radio Transmitter object.  There is no implied direct relationship between the SIMPLE Entity ID/Radio ID and the HLA HostRadioIndex.DateRateSample RateThese fields are defaulted to a value of zero (0).SignalDataLengthData LengthThese fields are defaulted to a value of zero (0).SignalDataNOTE: For the HLA implementation, because the Signal Data Length is set to a value of zero (0), the Signal Data attribute is simply not published.TacticalDataLinkTypeTDL TypeThese fields are set to 100 for the SISO-STD-002 Link 16.TDLMessageCountEncoding Scheme Bits 0-13These fields contain the number of J-Words, not including the JTIDS Header.HLA Link 16 Radio Signal TranslationHLA Link16 Radio Signal Class AttributeSIMPLE Signal PDU AttributeRemarksNPGNumberNPG NumberNetwork Participation Group (NPG) Number.  Used to segregate information within the JTIDS/MIDS network.  Specifies the virtual network currently being participated in.  NetNumberNet NumberNetwork Number. Used to create virtual sub-circuits within the NPG for stacked nets or between NPGs for multi-net implementations.TSEC_CVLLNo Equivalent Field and N/A  for SIMPLEMSEC_CVLLNo Equivalent Field and N/A  for SIMPLEMessage Type IdentifierNOTE: No Direct equivalent. SIMPLE packets exist for :Type 1 - Link-16 messages Type 8 - VMF Type 14 - MIDS/JTIDS Voice  Type 63 – RTT.  However, In HLA the message type is inherent to the HLA classes used and therefore is not explicitly specified by attribute in HLAPaddingTimeSlotIDSequential Slot Count Field 1Field 2Defines MIDS/JTIDS slot (based on UTC) in which message transmitted. (Note 4)PerceivedTransmitTimeNo Equivalent Field and N/A  for SIMPLEMessage DataNOTE:   In HLA, the Message Data is contained in subclasses of the Link 16 Radio Signal class.  The descriptions for mappings for DIS and HLA follow.JTIDS Message DataSIMPLE J Message Octet 0                         SIMPLE J Message Octet 1                         SIMPLE J Message Octet 2                      SIMPLE J Message Octet 331 3029282726 252423222120191817161514131211109876543210Secure Data Unit Serial Number (SDUSN) Start Source Track Number of Sender (5 octal value of 3 bits each) RTI Time Slot Type First 32 bit wordSIMPLE J Message Octet 4                        SIMPLE J Message Octet 5                          SIMPLE J Message Octet 6                     SIMPLE J Message Octet 731 3029282726 252423222120191817161514131211109876543210J Message Length IndicatorJ Message Sub-labelJ Message LabelJ Word FormatPaddingSDUSN EndSecond 32 bit wordSIMPLE J Message Octet 8                         SIMPLE J Message Octet 9                         SIMPLE J Message Octet  10                   SIMPLE J Message Octet 1131 3029282726 252423222120191817161514131211109876543210	First J-Word Continued (bits 47--16)Third 32 bit wordSIMPLE J Message Octet 12                       SIMPLE J Message Octet 13                       SIMPLE J Message Octet 14                     SIMPLE J Message Octet 1531 3029282726 252423222120191817161514131211109876543210PaddingFirst J-Word Continued (bits 74--48)Fourth 32 bit wordSIMPLE J Message Octet 16                       SIMPLE J Message Octet 17                       SIMPLE  J Message Octet 18                   SIMPLE J Message Octet 1931 3029282726 252423222120191817161514131211109876543210Second J-Word Continued (bits 31--2)J Word FormatFifth 32 bit word       SIMPLE J Message Octet 20                       SIMPLE J Message Octet 21                       SIMPLE J Message Octet 22                     SIMPLE J Message Octet 2331 3029282726 252423222120191817161514131211109876543210Second J-Word Continued (bits 63--32)Sixth 32 bit wordSIMPLE J Message Octet 24                       SIMPLE J Message Octet 25                       SIMPLE J Message Octet 26                    SIMPLE J Message Octet 2731 3029282726 252423222120191817161514131211109876543210Third J-Word (bits 15--2)J Word FormatPaddingSecond J-Word Continued (bits 74-64)Seventh 32 bit wordSIMPLE J Message Octet 28                       SIMPLE J Message Octet 29                       SIMPLE J Message Octet 30                    SIMPLE J Message Octet  3131 3029282726 252423222120191817161514131211109876543210	Third J-Word Continued (bits 47--16)	Eighth 32 bit wordSIMPLE J Message Octet 32                       SIMPLE J Message Octet 33                        SIMPLE J Message Octet 34                    SIMPLE J Message Octet 3531 3029282726 252423222120191817161514131211109876543210PaddingThird J-Word Continued (bits 74-48)Ninth 32 bit wordHLA Message Type = 0 (JTIDS Header) vs SIMPLE Packet Type = 1 Link 16 messagesHLA JTIDSMessageRadioSignal class AttributeSIMPLE Signal PDU AttributeDescriptionJTIDSHeaderStructData[0] octetJMessageData[6] octetThis is the byte mapping between the HLA JTIDS Header and the equivalent SIMPLE Link 16 Header field.  .Data[1] octetJMessageData[7] octetData[2 ]octetJMessageData[0] octetData[3] octetJMessageData[1] octetData[4] octetJMessageData[2] octetData[5] octetJMessageData[3] octetMessage Type = 0 (Link-16 Message) vs SIMPLE Packet Type = 1 Link 16 messagesHLA JTIDSMessageRadioSignal class AttributeSIMPLE Signal PDU AttributeDescriptionTADILJMessageData[0] octetJMessageData[12] octetThis is the byte mapping between the HLA JTIDS Message Data and the equivalent SIMPLE Link 16 Message field.  The mapping ensures that the statements pertaining to message bit orientation.  NOTE: This shows the octet translation pattern for three J-Words contained in the J-Message, the reader is encouraged to derive the translation of additional J-Words based on these examples.Data[1] octetJMessageData[13] octetData[2] octetJMessageData[14] octetData[3] octetJMessageData[15] octetData[4] octetJMessageData[8] octetData[5] octetJMessageData[9] octetData[6] octetJMessageData[10] octetData[7] octetJMessageData[11] octetData[8] octetJMessageData[4] octetData[9] octetJMessageData[5] octetData[10] octetJMessageData[26] octetData[11] octetJMessageData[27] octetData[12] octetJMessageData[20] octetData[13] octetJMessageData[21] octetData[14] octetJMessageData[22] octetData[15] octetJMessageData[23] octetData[16] octetJMessageData[16] octetData[17] octetJMessageData[17] octetData[18] octetJMessageData[18] octetData[19] octetJMessageData[19] octetData[20] octetJMessageData[32] octetData[21] octetJMessageData[33] octetData[22] octetJMessageData[34] octetData[23] octetJMessageData[35] octetData[24] octetJMessageData[28] octetData[25] octetJMessageData[29] octetData[26] octetJMessageData[30] octetData[27] octetJMessageData[31] octetData[28] octetJMessageData[24] octetData[29] octetJMessageData[25] octetMessage Type = 3 (JTIDS Voice CVSD) vs SIMPLE Packet Type = 13 MIDS/JTIDS VoiceHLA JTIDSVoiceCVSDRadioSignal class AttributeSIMPLE Radio Signal PDU AttributeDescriptionDataData[0] octetJMessageData[12] octetThis is the byte mapping between the HLA JTIDSVoiceCVSDRadioSignal class Data field and the equivalent SIMPLE Link 16 CVSD Voice Data message. The mapping ensures that the statements pertaining to message bit orientation in Ref 5. NOTE: This shows the octet translation pattern for a 29 byte Free Text message, the reader is encouraged to derive the translation of additional bytes based on these examples as there is a potential for up to 233 bytes of Free Text allowed.Data[1] octetJMessageData[13] octetData[2] octetJMessageData[14] octetData[3] octetJMessageData[15] octetData[4] octetJMessageData[8] octetData[5] octetJMessageData[9] octetData[6] octetJMessageData[10] octetData[7] octetJMessageData[11] octetData[8] octetJMessageData[4] octetData[9] octetJMessageData[5] octetData[10] octetJMessageData[26] octetData[11] octetJMessageData[27] octetData[12] octetJMessageData[20] octetData[13] octetJMessageData[21] octetData[14] octetJMessageData[22] octetData[15] octetJMessageData[23] octetData[16] octetJMessageData[16] octetData[17] octetJMessageData[17] octetData[18] octetJMessageData[18] octetData[19] octetJMessageData[19] octetData[20] octetJMessageData[32] octetData[21] octetJMessageData[33] octetData[22] octetJMessageData[34] octetData[23] octetJMessageData[35] octetData[24] octetJMessageData[28] octetData[25] octetJMessageData[29] octetData[26] octetJMessageData[30] octetData[27] octetJMessageData[31] octetData[28] octetJMessageData[24] octet