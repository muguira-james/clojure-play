Decision Support Tools II– Insights from a German R&D StudyDr. Stefan KruscheDr. Andreas TolkIndustrieanlagen-Betriebsgesellschaft mbH. (IABG)Einsteinstr. 20D-85521 Ottobrunn, GermanyDr. Hans Peter MenzlerDr. Kay PixiusWehrtechnische Dienststelle der Bundeswehr 81KalvarienbergD-91171 Greding, GermanyDr. Andreas Dabelstein Thomas WeyrathElektroniksystem und Logistik GmbH. (ESG)P.O. Box 8005 69D-81605 Munich, GermanyMajor Dietmar KundeHeeresamt (German Army Office) HA V (3)Bruehler Str. 300D-50968 Koeln, GermanyKeywords:Decision Support, Integration Layer, C4I-SimSys CouplingABSTRACT: On behalf of the German MoD, the authors are presently conducting a research and development study „Decision Support Tools II“. The main objective of this study is the definition and prototypical implementation of an integration framework for means of operations research – especially simulation – systems and C4I systems for online decision support of the warfighter. On behalf of this objective, the main German Command and Control Systems on division and corps level – HEROS 2/1 Batch 2 – and the main German Computer Assisted Exercise Systems on the corresponding level – KORA/OA – are coupled by using this framework.This paper describes the objectives of the study, the prototype of the integration framework, the systems architecture and some initial results.IntroductionThe main objective of decision support systems for the military commander and his staff is to increase the efficiency of the integrated command and control process by enhancing the decision’s quality and reducing the time needed. Therefore, decision support systems contribute essentially to the command and control superiority [9].To meet the military requirements, the integration of various Operations Research methods into the command and control process is a prerequisite. Decision cycles must take place quickly and provide high “quality” decisions, in order to gain and keep the initiative in combat as well as in operations other than war (OOTW). In the long term DST must become an integral part of future command and control IT systems. For the time being existing decision support systems have to be added on existing C4I-systems.Currently decision support systems in the sense of ACOA are defined as follows: “Decision Support Systems are applied OR methods for the support of the military commander and his staff. They support all phases of the Command and Control process by providing and assessing information obtained from the respective C4IS in campaigns.”Among possible means of Operations Research, simulation systems play a special role due to their wide acceptance in different application domains in the armed forces, therefore the coupling of simulation systems and C4I systems is recognized as an important issue to broaden the possibilities of training as well as supporting the process of decision making for the higher echelons.The focus of this study “Decision Support Tools II” is on establishing an integrating framework that allows for coupling of arbitrary C4I systems and corresponding simulation systems by exploiting some commonly used techniques:the High Level Architecture (HLA), the ATCCIS model and the message text format ADatP-3.For the proof of concept, the German C4I system, HEROS 2/1 Batch 2, and the corresponding simulation system, KORA/OA, were chosen.Unfortunately, a direct coupling of these systems was not possible as neither uses the same protocols, nor the same data formats/data models. Therefore, additional mapping mechanisms had to be established that:could be re-used;fit into the world of “modern” data models like ATCCIS;are easy to implement.System ArchitectureFigure 1 shows the current system architecture of our experimental system. The system architecture divides the coupling mechanism into four layers: Federate layer: This layer connects the application itself to the external interface of DST, i.e. the data mediation component. Within our experiment system HEROS 2/1 (see section 2.4) and KORA/OA (see section 2.1) are coupled by introducing the corresponding federates. The federate layers are proxys for the applications to be coupled. They comprise application specific adaptors on the one side, and standardized data exchange access point on the other.Data mediation component: This layer provides a re-usable mapping mechanism that matches the data from the individual data format of an application to the ATCCIS data model and vice versa. The layer is described in section 2.2.RTI access layer with (-SA: This layer provides an object oriented shell to the Run Time Infrastructure for the objects of the ATCCIS Reference FOM. This layer is described in section 2.3.Run Time Infrastructure (RTI): This layer establishes the lowest layer and provides the transfer medium.Figure  SEQ Figure \* ARABISCH 1: System architecture of the experimental systemIn addition to the components of each layer, there is a control component for the data flow between all these components (see section 2.5). The transient data structures used to handle the information between the respective layers areMessage oriented objects (comprising the information content of ADatP-3 messages)ATTCIS information objects [2]Elements from the ATCCIS HLA-OMTThese layers are described in the next sections.KORA FederateOne of the major German simulation systems for computer assisted exercises (CAX) is the KORA/OA system which has been in use by the German federal armed forces for several years now. It is mainly used for exercises on Corps and Division level. Due to its use in many German exercises and its use at the “Führungsakademie” (German Military Academy for General Staff Education) there is hardly a German officer without knowledge of KORA.When trying to find a simulation system that was able to act as a federate within the decision support tools federation, one of the main aspects was the ability to support distributed execution. The main advantage of KORA is that it is not only well known in Germany, but more importantly, in NATO as well. KORA has already successfully participated as the land component model in the first NATO DiMuNDS (distributed multinational defense simulation) experiment.That federation, however, was a ALSP federation. Subsequently, the KORA model was already able to receive and send messages. Therefore, the ALSP interface had only to be changed to an HLA interface. This had already been done in a former study leading to a general solution to migrate ALSP simulations to HLA simulations, using a more general technique than the ADAPTOR having been introduced by MITRE only recently.Although, the gap between the different OS – Linux (the KORA environment) and Windows NT (used by the RTI and the HEROS environment) – had to be bridged somehow. To do so, a TCP/IP socket connection was established between the KORA simulation system itself and an MS Windows NT proxy, i.e. the KORA federate. The protocol used on this socket were ALSP character strings. The KORA federate took those strings and matched them to the external interfaces used for DST: a subset of the ADatP-3 messages “own situation report” and “enemy situation report”.To summarize the pre-conditions:The KORA simulation systems runs on a Linux laptop.The Linux laptop has a TCP/IP socket connection to the DMF/RTI/HEROS NT platform.ALSP strings are exchanged over the socket.The NT KORA proxy translates the ALSP strings into the format having been agreed to in the DST experiment: ADatP-3.The NT KORA proxy writes the results into a MS database (XML, ADatP-3 character strings, radio links, etc. are also possible)The proxy has a connection to the control component enabling the exchange of control data between these two components (i.e., availability of new data in the transient information structure to be imported into KORA, or respective the end of the export process from KORA to the transient information structure.Data Mediation ComponentThe data mediation component results directly from the ideas proposed in [4]. It is connected to the control component (see section 2.5), to the KORA federate data source (the HEROS federate data source, respectively), as well as to the ATCCIS Reference FOM (or better the (-SA generated object room, see section 3.4).The data mediation component translates the KORA/HEROS information semantics into the ATCCIS information semantics. In other words: towards the federates, the component “speaks” in their language, towards the RTI it speaks ATCCIS.This is carried out by configuring a standard software device (as described in [4]) with the result of respective data management activities. Within the DST II team, the work of data management, i.e. the mapping of the respective data elements of KORA and HEROS to the standardized data elements of ATCCIS, was one important issue.In order to do the mapping, the data mediation component understands two commands: mediate from ATCCIS and mediate to ATCCIS. After having done so, the control component is informed using a predefined function.This general approach has been tailored to meet the needs of the DST project. To facilitate the testing, the data sources KORA, HEROS and ATCCIS are persistently stored in MS Access databases, i.e. the federates write into and read from these databases. In the same sense, the data mediation component reads and writes respective data bases.RTI-Access Layer: (-SAThe RTI (DMSO’s RTI1.3NG version) serves as the transport medium over which all data is exchanged. However, as mentioned elsewhere [3], the RTI suffers from a lack in convenience concerning the user-API. Therefore, the German Federal Armed Forces’ interface to the RTI, so-called (-SA, is exploited within this project.Basically, (-SA tries to bring together two methods of system design (which in fact are closely related to each other): the classical object oriented view and the OMDT as promoted by DMSO. The HLA OMT actually allows a bird's eye view on a simulation application to catch the most essential features as necessary for interoperability needs. However,  this does not address the needs of a common semantics across a federation. There is still the requirement for additional and detailed information about semantics. The FEDEP has been designed to fill this gap on a documentary basis. One of the major objectives of (-SA is to urge the user to publish semantic aspects by a combination of object oriented design and the OMT. This is carried out by forcing the user to establish an object oriented view of his specific application in order to let him connect his application via its OMT-representative to the federation. The data representation from the application down to the OMT-Shell matures continuously: The so-called OO-Shell introduces the application specific representation thereby inheriting OMT-Shell-design from (-SA: any object which lives in the OO-Shell associates on the one hand with its application specific counterpart and on the other hand inherits a (-SA-specific OMT-cap. Within (-SA there is no need for allocation of additional storage except for the (-SA-specific add-ons such as OMT-name- and instance-spaces. Those are reflected in the same way as SISO's OMDT does: primarily on a textual basis such as class- and attribute names. The FOM as described in section  REF _Ref486152662 \r \h  \* FORMATVERBINDEN 3 is implemented simply by using the following scheme:class MyObject : public OMT_Object {OMT_Name Classname(){return "BaseEntity";}MyObject() : OMT_Object() {...}...}From within this scheme a practical problem arose while instantiating MyObject and calling ClassName() simultaneously. Since any abstract method from the base class is not accessible unless the derived class is implemented and instantiated, the method under consideration cannot be called. To cope with this problem we introduced an internal process which frequently analyzes object-states with reference to completeness. In fact, an internal (-SA-heartbeat helps to circumvent several difficulties.HEROS FederateHEROS 2/1 is the main German Command, Control and Information System for computer-based headquarters operations management. The system runs on a Windows NT operating system. All data in the system is stored in an object oriented database.In addition to the sophisticated data model, the database defines object clusters for simplifying the data access. An object cluster is a structured compound of objects that provides a set of data objects into a logical context. The object cluster concept can be compared with the definition of views in a relational database.The connection between HEROS 2/1 and the external interface of DST is established by the HEROS federate. It is linked to the object oriented database of HEROS 2/1 via the object clusters that describe the external view of the data “own situation report” and “enemy situation report” in the form of ADatP-3 message contents. The HEROS federate reads these clusters and writes their contents in a MS Access database.Also, the HEROS federate is connected with the control component via CORBA. Control ComponentThe control component is responsible for the control of data flow between the other components. For the connection between the control component and the other components the middleware CORBA is used .Each component, including the control component itself, provides a CORBA interface for data flow control that consists of simple trigger functions. For example, in the control component three interface functions “push()”, “get()” and “finished()” are implemented. Function “push()” is called by the federate when data should be transferred to the RTI. Then the control component informs the data mediation component by calling interface function “mediate()” of the data mediation component. After the data mediation process the control component triggers the RTI access component via “push()” (an interface function of the RTI access component). The backward direction, e.g. the transfer of data from the RTI to the application, operates analog with the “get()” function in place of the “push()” function. ATCCIS Reference FOMAs pointed out in earlier papers [4, 7, 8] an initiative by the Deputy Supreme Allied Commander Europe in the early 1980’s lead to the idea of ATCCIS. Meanwhile ATCCIS has matured sufficiently and is now on its way becoming a NATO Standardization Agreement (STANAG) [2]. Denoted as the “Land C2 Information Exchange Data Model” [1] it is said to become ADatP-32.Based on the findings of German studies described in [4], the authors decided to use the ATCCIS data model as the base to gain the common information interpretation needed to couple HEROS 2/1 and KORA/OA.ATCCIS Data ModelWhen talking about the ATCCIS data model one has to distinguish between the Generic Hub (GH), which is a kernel of data elements common to all application areas of ATCCIS, and the so called Subfunctional Areas (SFA), which extend the Generic Hub appropriate to a special application, e.g., fire support, personnel, etc.The ATCCIS Generic Hub data model is intended to represent the core of the data identified for exchange across multiple subfunctional areas and multiple views of requirements. Toward that end, it lays down a common approach of describing information to be exchanged in a tactical command and control  environment.  Thus, the approach is generic, i.e., it is not limited to a special level of command, force category, etc. Moreover, it tries to catch the idea of object oriented modeling for data modeling by starting with very basic concepts of data – like object items, object types, actions, facilities, etc. – and allows for the gradual specification of more and more details in order to match real instances on the battlefield.To summarize: the data model needs to describe all objects of interest on the battlefield, e.g., organizations, persons, equipment, facilities, geographic features, weather phenomena, and military control measures such as boundaries by using a common and extensible data modeling approach.The five key entities can be described as follows:An OBJECT-ITEM is an individually identified object with military significance.An OBJECT-TYPE is an individually identified class of objects with military significance.A CAPABILITY is the potential ability to do work, perform a function or mission, achieve an objective, or provide a service.A LOCATION is a specification of position and geometry with respect to a specified frame of reference.An ACTION is an activity, or the occurrence of an activity, that may utilize resources and may be directed against an objectiveThe main concept of the ATCCIS data model that makes it flexible enough to serve for the purposes of our study is TYPING. For every object on the battlefield – and thus for every piece of information to be exchanged between HEROS and KORA – the type and the item must be defined, i.e. this is the counterpart of classes and instances in the object oriented paradigm.For each key entity, several levels of subtree hierarchies can  be derived by introducing new categories of OBJECT-ITEMS, OBJECT-TYPES, CAPABILITIES, ACTIONS, and LOCATIONS.The definitions are as follows:An ORGANIZATION is an administrative or functional structure.A sort of MATERIAL is necessary to equip, maintain, and support military activities without distinction as to its application for administrative or combat purposes.A PERSON is a human being to whom military significance is attached.  This includes not only soldiers, but  civilians, refugees, and  if necessary  terrorists, paramilitary forces, or deputies of organizations with significance to the ongoing operations (e.g. Red Cross, NGO, etc.)A FACILITY is built, installed, or established to serve some particular purpose and is identified by the service it provides rather than by its content.A FEATURE encompasses meteorological, geographic, and control features that are associated with a location to which military significance is attached.The second necessary concept for flexibility is CATEGORIZING. It is the counterpart to inheritance within the object oriented paradigm. It allows information to be extended to the wished granularity.All definitions refer to the standard described in [2] where additional examples are given.  The data elements belonging to the generic hub of the ATCCIS data model are going to become an agreed standard between the participating nations.  In addition to the elements described above, they comprise data elements to model establishments, holdings, date and time, perceptions, contexts, etc.  It is already possible to model rules of engagement, assessments, tasks, etc.In order to be able to meet all information exchange requests not only today, but also in the future, it  was necessary to establish a procedure to integrate new knowledge seamlessly into the existing information model: Thus, the subfunctional areas (SFA) were introduced catching special requirements using the same modeling scheme, like the generic hub, but being of national concern.  However, the data elements of the respective SFA can be standardized if needed and wished. The topics of intelligence, fire support, communications and electronics, logistics, and personnel were already addressed in different works.Meta-Data ModelingDuring the last SISO workshops the ability of the HLA-OMT has been the topic of several discussions and sometimes even of harsh critics on the ideas of HLA itself. Although, in [8] a way has been shown to make use of the OMT by introducing meta data modeling without comprising the OMT itself, e.g. multiple inheritance, aggregation, association, etc.By doing so, it now becomes possible to exchange data and/or object model information over the RTI using the OMT to describe the information.As the DST Team used a relational instantiation of the ATCCIS information model (as has been pointed out in [4] there already are UML and XML versions of ATCCIS), the following ways were chosen:The information to be exchanged comprised entities and relations.Every entity became an object.Categorized entities became super-classes, the categories became sub-classes.Relations became instances of the new introduced “Relation-Class” comprising pointers to the parent and child entity instance.Using this concepts, the relational information could be transmitted over the RTI. It should be mentioned, however, that this was only possible due to the fact that there are no dynamical behavior aspects within the use of the HLA in DST II. This is due to the fact that the HLA is only used to transfer the initial information being needed to start the simulation (compare [6]). Thus, there was no need for transaction concepts. When really being used for dynamic data replication, a transaction concept or service for the RTI is needed in order to encapsulate the information belonging together. This concept is already pointed out in [8].Used Concepts of ATCCIS in DST IIWithin the federation, not all of the ATCCIS entities had to be used. A major advantage of using a reference FOM – beside being semantically consistent – is, that the FOM development phase of the FEDEP becomes a tailoring process. It is simply to figure out which standard data elements are to be used. The remainder of the RFOM can be skipped or tailored.The decision support tool experiment is divided into two phases. In phase one, only units and their locations are to be transferred in order to give a proof of concept. In phase two the “own” and “enemy situation” (comprising units, locations, activities, obstacles, bridges, borders and boundaries, and equipment) are to be transferred.The figures in the appendix show the entities being used for information exchange in the DST experiment.Findings and SummaryThe results so far show how common techniques, like High Level Architecture and the ATCCIS data model as a Reference FOM, can be used for coupling C4I systems and simulation systems. In the next step we will expand the functionality and the content of data that can be transferred between the systems.The integration framework and the technical methods presented here are not proposed as a final solution to the general problem of interoperability between C4I systems and simulation systems. In fact, interoperability can not be achieved by coupling of distinct systems.Normally, data in a C4I system, for example about the enemy situation, are often incomplete and uncertain. Such data can hardly be processed by a simulation system that needs a complete description of the initial information. This problem is still waiting for its solution. AcknowledgementsThe authors would like to thank all colleagues at the respective institutions for making DST II a success, especially Dr. Rudolf Poppe, Dr. Günther Scheckeler and Dr. Thomas Rieth at IABG as well as Jürgen Weis and Brigitte Probst at ESG. This project is funded by contract of the Federal Office for Defense Technology and Procurement (BWB).ReferencesFollowing books and articles are referenced in this paper: [1]	ADatP-32, Edition 2.0: “The Land C2 Information Exchange Data Model”, NHQ Brüssel, März 2000. [2]	ATCCIS Working Paper 5-5 Draft 1.0: “ATCCIS Battlefield Generic Hub 3 Data Model Specification”, ATCCIS Permanent Working Group, SHAPE, Belgium, November 1996.[3]	W.J. Davies, G.L. Moeller: „The High Level Architecture: Is there a better way?“; Proc. of the 1999 Winter Simulation Conference; Orlando, FL, December 1999.[4]	S. Krusche, A. Tolk: “A SHADE Approach for Coupling C4I systems and simulation systems”, Proc. of the Fall Simulation Interoperability Workshop, Orlando FL, September 1999.[5]	H.-P. Menzler, U. Krosta, K. Pixius: “HLA in a Nutshell: (-SA Proposed Standard Interface for Simulation”, Proc. of the Spring Simulation Interoperability Workshop, Orlando, Florida, March 2000. [6]	A. Tolk: "Requirements for Simulation Systems when being used as Decision Support Systems", Proc. of the Fall Simulation Interoperability Workshop, Orlando FL, September 1999. [7]	A. Tolk: “Using ATCCIS as an Information Layer to couple CGF Federates and Closed Combat Simulations”, Proc. of the Fall Simulation Interoperability Workshop, Orlando FL, September 1999.[8]	A. Tolk: “HLA-OMT versus Traditional Data and Object Modeling – Chance or Shoehorn?”, Proc. of the Spring Simulation Interoperability Workshop, Orlando, Florida, March 2000.[9]	A. Tolk, D. Kunde: „Decision Support Systems – Technical Prerequisites and Military Requirements“, 2000 CCRTS, Monterey, June 2000.Author’s BiographySTEFAN KRUSCHE is Project Manager of the Department for Tactical Systems at the IABG, Ottobrunn, Germany.  His professional career focuses on information interoperability in federations of heterogeneous C4I system components and systems, ranging from conceptual data management aspects up to the design and implementation of appropriate software solutions. He is also an ATCCIS specialist and senior analyst for federated databases.ANDREAS TOLK is Technical Advisor and Project Manager for C4IS Interoperability Solutions, Information Management, and Decision Support Systems within at the IABG, Ottobrunn, Germany. He gives lectures at the University of the Federal Armed Forces of Germany on the Use of Artificial Intelligence within Military Systems and on Object and Data Modeling and Information Management in Command and Control Systems.HANS-PETER MENZLER studied physics at the University of Osnabrueck, Germany, and earned his PhD in applied mathematical physics in 1989. He worked for three years as a scientist at the Max-Planck Institute for Plasmaphysics and then became a system engineer at Competence Center Informatik GmbH (CCI). In April 1999 he became head of the Simulation Infrastructure Department at WTD 81, Greding.KAY PIXIUS joined the Simulation Infrastructure Department of WTD 81 in late 1998, after his trainee program with the Federal Office for Defense Technology and Procurement BWB. He graduated from University of Cologne with a masters degree in semiconductor physics and earned his PhD in Material Sciences from RWTH Aachen. He has worked as a research scientist at the Institute of Materials Research of the German Aerospace Research Establishment DLR; where he finally was Assistant to the Board of Directors prior to joining the BWB.DIETMAR KUNDE is Major in the Federal Armed Forces of Germany’s Army. Within the German Army Office he is responsible for decision support issues of the Army ranging from conceptual works to support and evaluate respective R&D studies. He earned not only a Master of Science from the University of the Federal Armed Forces, but is also a graduate of the Naval Postgraduate School, Monterey, California, where he got his Master in Operations Research.ANDREAS DABELSTEIN is Head of Airborne and Spaceborne Surveillance Systems at ESG, Munich, Germany. He worked on system development for Avionics and virtual simulations systems. He earned his PhD in theoretical physics at the Werner Heisenberg Institut /Max-Planck-Institut for Physics.THOMAS WEYRATH studied computer science at the University of Saarbruecken, Germany, and wrote his master thesis in 1998. After the study he joined the ESG, Munich, Germany. He is working as a software engineer in the department telecommunication systems. In addition to the software development, he is working in the field of decision support. AppendixATCCIS Elements used in Phase 1 EINBETTEN Package  ATCCIS Elements used in Phase 2 EINBETTEN Package   Translation of the definition proposed by a conceptual study for the German MoD as given in [9]. ATCCIS = Army Tactical Command and Control Information System. ADat-P-3 = Allied Data Publication #3.		2000 Fall Simulation Interoperability Workshop		Orlando, Florida, September 200000F-SIW-XXX038		Page  SEITE 1		2000 Fall Simulation Interoperability Workshop		Orlando, Florida, September 199999F-SIW-008		Page  SEITE 8		2000 Fall Simulation Interoperability Workshop		Orlando, Florida, September 199920000099F-SIW-008038XXX		Page  SEITE 7