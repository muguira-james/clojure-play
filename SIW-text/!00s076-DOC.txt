Improving the Verification of Synthetic Environments:  Advanced Checking of  HLA Specifications across a FederationC.  MoralesM.  R.  Moulding *Computing Information Systems Engineering GroupDepartment of Informatics and SimulationRoyal Military College of ScienceCranfield UniversityShrivenham, Swindon, Wiltshire, UK.+44-1793-785522morales@rmcs.cranfield.ac.uk;  HYPERLINK mailto:moulding@dial.pipex.com moulding@dial.pipex.com(* contact) Keywords:	Synthetic Environments; Verification and Validation; Consistency Checking; Compositional Checking; Semantic Checking; HLA/OMT/FOM/SOM.ABSTRACT: This paper reports on a continuing research project which is concerned with improving the early-stage verification of Synthetic Environments (SEs) by applying automated checks to the Simulation Object Models (SOMs) and Federation Object Models (FOMs) of SEs developed with the High Level Architecture (HLA).  The starting point for this project has been the Defense Modeling and Simulation Office (DMSO) Object Model Template (OMT) Test Procedures which specify Consistency Checks to verify that an individual FOM or SOM is well-formed.  In an earlier paper, we reported research that refined and validated these Consistency Checks, and implemented them in our RMCS HLA Checker Toolset.  This paper extends that work by reporting upon research which has formalised the OMT and its Consistency Checks using Relational Algebra.  In addition, the paper also presents more advanced work on Compositional Checking across the FOM and SOMs that define an HLA federation, and which we term the Federation Model Set (FMS).  Over fifty Compositional Checks are proposed, to determine whether federates satisfy the requirements of a federation, and vice-versa, and are founded on a minimalist abstract view that a FOM represents a subset of the union of its associated SOMs.  In addition, we have refined and validated these checks using the same approach devised for the individual FOM and SOM Consistency Checks, reported in our previous paper.  Furthermore, we have incorporated these Compositional Checks into our RMCS HLA Checker Toolset, and applied them to a number of FMSs from the DMSO Object Model Library, with results that suggest the utility of this approach.  Finally, the paper also considers how the information within a FOM and SOM might be extended, in order to  provide automated Semantic Checking of key behavioural properties across a federation, and outlines an initial approach to address known problems of semantic interoperability.1.	IntroductionIn the High Level Architecture (HLA), the Object Model Template (OMT) Test Procedures specify checks to verify that an individual Federation Object Model (FOM) or Simulation Object Model (SOM) is internally consistent [1, 2].  Our research is concerned with validating and formalising these OMT Test procedures, and investigating enhanced checking approaches that would enable more extensive verification and validation to be performed on FOMs and SOMs.  As illustrated in Figure 1, our research has been divided into three phases, each phase focussing on a type of verification that can be performed on FOMs and SOMs: consistency checks that determine whether an individual SOM or FOM is well formed; compositional checks which verify that a FOM and its associated set of SOMs are mutually compatible; and semantic checks that seek to establish that a FOM and its set of SOMs have interoperable dynamic behaviours.  A key to our work is the desire to formalise the specification of the OMT so that the checks which are devised can be described as precise mathematical invariant properties of that formal specification, thus removing ambiguity and facilitating mathematical analysis.  We also recognise that semantic checks will require some extension to the information which is currently defined by the OMT. Figure 1    Three-phased Strategy Towards Formalisation of the ChecksIn our last paper at the Spring 1999 Workshop [3], we reported on the early part of phase 1, which was concerned with refinement and validation of the published OMT Test Procedures, and their implementation in our RMCS HLA Checker Toolset. We now present a more formal view of the consistency checks, to complete this first phase.  Also, in this current paper, we report on the completed second phase of the research.  This is concerned with the formulation, validation and formalisation of compositional checks, their implementation in a new Compositional Checker extension to our Toolset, and the results of the experimental application of this new tool to a number of published Federation Model Sets.  We close with a report of our early incursions into the third phase, semantic checks, and our future activities in this area.2.	A More Formal View of theConsistency ChecksThe check validation framework, first presented in [3] and depicted inside the dotted rectangle of Figure 2, involved the progressive extraction and abstraction of the checks defined in the OMT Test Procedures.  Although this method yielded very satisfactory results, the lack of formalism of the tabular specification approach limited the verification and validation, that could be applied to the checks, to largely visual inspection techniques; a more mathematical view of the checks was required.  Hence, the checks that are specified in the HLA OMT Test Procedures, and that we had broken down into simpler Sub-checks in our Tabular Specification, have now been expressed in Relational Algebra.  This is illustrated in Figure 3, which shows a short extract from the full definition of the FOM Consistency Checks [4]. Figure 2    Multi-view Framework to Validate the Consistency ChecksAlthough Relational Algebra [6] has been closely identified with databases, its fundamental purpose is to enable the writing of expressions over special abstract sets, called relations.  By considering the individual tables of FOMs and SOMs as relations, the consistency checks can be expressed using powerful Relational Algebraic operators over those tables.  This results in a much more succinct and abstract formal specification than would be achieved if, for example, the SOMs and FOMs, and their checks, were expressed using basic set theory [5].Inspection of Figure 3 provides insight into the role and benefit of using Relational Algebra for specifying the consistency checks.  First, the Tabular Specification of the Sub-checks, using natural language in the second column, clearly provides greater resolution and definition, compared with the statement extracted from the OMT Test Procedures, in the first column.  Secondly, and of more significance here, the formal specification of each Sub-check, using Relational Algebra in column three, provides mathematical precision without increasing the detail of the specification; there is good correspondence between the formal and informal expressions of the Sub-checks.  In effect, the transition from column one to three shows how the HLA OMT Test Procedures have become precise mathematical invariant conditions, in a visible and traceable way. Apart from the inherent benefits of removing ambiguity, the Relational Algebraic specification of the consistency checks enabled clearer reasoning about their overall correctness and completeness.  Moreover, the Relational Algebraic expressions can be tested by animating them using a Relational Algebra interpreter [7].  Furthermore, the Relational Algebra is sufficiently close to SQL [8] so as to facilitate direct implementation and optimisation of the checks, using relational database technology.  This speeds up the development of automated checker tools and reduces the possibility of design defects.OMT Test Procedures Specificationversion 1.3Tabular Specification ofSub-checks(Error if statement is true)Relational Algebraic Expression ofSub-checks"Any object class referenced in any other component (table) of a HLA FOM shall be included in the Object Class Structure Table"Section 3.3, paragraph 6F4.2.3(a): Object class appears in the Attribute Table but not in the Object Class Structure TableAttribute_Table_A [Object_class_name] MINUS Object_Class_Structure_Table [Object_class_name]F4.2.3(b): Object class appears in the Attribute Definitions but not in the Object Class Structure TableAttribute_Definitions [Object_class_name] MINUS Object_Class_Structure_Table [Object_class_name]F4.2.3(c): Object class appears in the Object Class Definitions but not in the Object Class Structure Table (Object_Class_Definitions [Term] RENAME AS Object_class_name) [Object_class_name] MINUS Object_Class_Structure_Table [Object_class_name]Figure 3    Relational Algebraic View of Consistency Checks3.	Formulation of Compositional ChecksHaving demonstrated the utility of the multiple-view framework for validating the consistency checks, we decided to use the same approach to formulate and validate the compositional checks.  This is illustrated in Figure 4.  However, since HLA does not define test procedures to verify the compositional consistency between the FOM and SOMs of a Federation Model Set (FMS), we began with a high-level conceptual view that a FOM represents a subset of the union of its associated SOMs, as depicted in Figure 5.  Compositional checks to verify whether federates satisfied the requirements of a federation, and vice- versa, were then formulated and entered in a table, as shown in Figure 6. To aid traceability, each check was assigned a reference number, the first digit indicating the table, and the second digit indicating the type of check.  To date, 48 compositional checks are proposed for the main FOM/SOM tables, and 12 for the lexicon [9].  However, due to the lack of a defined notation for describing the contents of the lexicon, the lexicon compositional checks are not as rigorous as those of the main tables, and are included only for completeness.Figure 7 gives a sample of the abstract tabular view of compositional checks [9].  Tabular specification aided the formulation of checks in that each empty cell had to be questioned, to determine whether a specific check applied to a particular table.  A filled-up row indicated that a type of check applied to all tables, while a filled-up column signified that all types of check applied to a table.  Similar checks that applied to similar tables, e.g.  C5.3 and C6.3, were also easier to spot.  A cell was greyed out when it was determined that a check did not apply to a table.  The abstract description of the checks (left-most columns) provided coherence while preventing redundancy of checks. Figure 4    Multiple-view Framework for Formulating and Validating Compositional ChecksThis simple, yet comprehensive, approach helped to ensure that no check had been omitted or duplicated; a missing or redundant check would result in a loss of symmetry in the table.The individual compositional checks were then expressed in Relational Algebra, creating a precise mathematical specification of the checks, as illustrated in Figure 8.  As with the consistency checks, discussed earlier, the Relational Algebraic expressions lent themselves well to a higher-level of reasoning about the completeness and correctness of the checks, as well as to their animation using a Relational Algebra interpreter.  Implementation of the Relational Algebraic expressions as SQL queries was straightforward, as shown in the third column of Figure 8.Figure 5    Conceptual View of a Well-formed Federation Model SetThe compositional checks that we have devised can be viewed as a natural extension to the consistency checks defined in the OMT Test Procedures.  Without defined compositional checks, there is no way to verify whether a FMS is well-formed.  No definitive claim is made about the completeness of the compositional checks proposed in [9], although the framework that we applied to formulate and validate the checks has increased our confidence that the checks enforce the conceptual view of a well-formed FMS illustrated in Figure 5.  Moreover, the embodiment of these checks in a Compositional Checker extension to our RMCS HLA Checker Toolset has provided further evidence of the potential utility of automated compositional checking of FMSs, as discussed below.Check Ref NumberCheck Performed(If statement is true, an error or warning is flagged)Object Class Structure TableC1.1                                                      An Object Class is declared in the FOM, but not in a SOM(s).C1.2An Object Class declared in a SOM(s) but not in the FOM may be relevant to the federation.C1.3An Object Class is declared in the FOM with a P/S designator of 'N', but is declared in a SOM(s) with a P/S designator other than 'N'. C1.4An Object class is declared in the FOM with a P/S designator of 'PS',  but –Is not declared in a SOM(s) with a P/S designator of 'PS';  ANDIs not declared in two complementary SOMs: in one with a P/S designator of 'P', in another with 'S'.C1.5An Object class is declared in the FOM with a P/S designator of 'PS',  but is declared in a SOM(s) with a P/S designator not in {'P', 'S', 'PS'}.Figure 6    Tabular Specification of Compositional ChecksAbstract View of Check PerformedCheck Performed(Error if statement is true)"Data structure" refers to object class, interaction class, attribute, parameter, enumerated or complex datatypeFOM and SOM Tables Checked(Cells contain check reference numbers)Object Class Structure TableInteraction Class Structure TableAttribute TableParameter TableEnumerated Datatype TableComplex Datatype TableData exchange agreement between federates and/or federation is incomplete or cannot be fulfilled.Federates do not support data requirements of the federationData structure is declared in a FOM but not in a SOMC1.1C2.1C3.1C4.1C5.1C5.3C6.1C6.3Data structure's  PS/ISR designation in the FOM is not fully-supported by the SOMsC1.4C2.4C2.6Federation expects data to be exchanged; federates don'tC1.5C2.5C2.7Federation does not support data requirements of federates Data structure declared in SOM but not in FOM may be relevant to the federationC1.2C2.2C3.2C4.2C5.2C5.4C6.2C6.4Federates expect data to be exchanged; federation doesn'tC1.3C2.3Figure 7    Abstract View of Compositional ChecksCheck (Error if True)Relational Algebraic ViewSQLC1.3  An Object Class is declared in the FOM with a P/S designator of 'N', but is declared in a SOM with a P/S designator other than 'N'. (((FOM_Object_Class_Structure_Table WHERE Publish_subscribe = 'N') [Object_class_name]) INTERSECT((Union_of_all_SOM_Object_Class_Structure_Tables WHERE Publish_subscribe <> 'N') [Object_class_name] )) JOIN Union_of_all_SOM_Object_Class_Structure_Tables [Object_class_name, Filename]SELECT CC_Union_all_SOM_OCST_Table.Class_name, CC_Union_all_SOM_OCST_Table.Publish_subscribe, CC_Union_all_SOM_OCST_Table.Filename, FOM_Class_Structure_Table.Full_Class_name, FOM_Class_Structure_Table.Publish_SubscribeFROMCC_Union_all_SOM_OCST_Table INNER JOIN FOM_Class_Structure_Table ON CC_Union_all_SOM_OCST_Table.Class_name= FOM_Class_Structure_Table.Full_Class_nameWHERE (((CC_Union_all_SOM_OCST_Table.Publish_subscribe)<>'N') AND ((FOM_Class_Structure_Table.Publish_Subscribe)='N'));Figure 8    Relational Algebraic View of Compositional Check4.	The Compositional Checker Figure 9 shows the overall architecture of the RMCS HLA Checker Toolset.  At the stage of our last paper [3], the individual FOM and SOM Consistency Checkers had been completed.  These have now been supplemented with the Compositional Checker, which implements the checks discussed above.  The last stage of the Toolset’s development will be to implement the Semantic Checker, as discussed in section 8, below.The Compositional Checker was built with the same technology as employed for the SOM and FOM Consistency Checkers: Visual Basic tailoring of Access, with a third-party parser configured to import the OMT-DIF files.  Functionally, it allows the creation and storage of FMSs, each of which comprises a FOM and up to fifteen SOMs, in OMT-DIF format.  It assumes that the FOM and SOMs have been first examined by the appropriate Consistency Checker, and  its output is a report of compositional errors detected in the FMS.Figure 9    RMCS HLA Checker Toolset ArchitectureFigure 10  The RMCS HLA Compositional Checker, Showing theFederation Model Set Creation ScreenFigure 11  The RMCS HLA Compositional Checker, Showing Checks Carried OutFigures 10 and 11 show two screen shots taken during the execution of the Compositional Checker.  The first of these is concerned with selecting the FOM and SOMs which form the FMS for checking; this must be explicitly achieved because a FOM does not contain the set of its associated SOMs, although this information can be held in the Federation Execution Planner Workbook (FEPW) and DMSO’s Object Model Library.  The second screen identifies the individual checks that have been carried out on the FMS.5.	Results of Compositional CheckingWe have conducted experimental runs of the Compositional Checker, over some FMSs downloaded from DMSO's Object Model Library, and the results tend to affirm the utility of our approach.  A summary of these results is given in Figure 12.  Of the five FMSs tested, four returned compositional errors; for example, object or interaction classes declared in the FOM that do not appear in any SOM, or object classes declared 'N' in the FOM that are declared 'P' or 'S' in the SOMs.  This was despite all having been certified to be HLA-compliant.  The detailed nature of the detected errors have been communicated to the federate owners concerned, so that they made be fed back into the SOM/FOM development process.  Significantly, we have discovered that the federations have been successfully executed despite having these inconsistencies embedded in their FMSs.DescriptionValueNumber of  FMSs tested5Number of FMSs with compositional errors4Total number of SOMs36Avg. number of SOM per FMS7.2Total number of error types flagged35Avg. number of error types flagged per FMS(8.8Total number of errors detected(1221Avg. number of errors detected per FMS(305.3Figure 12    Summary of Results of Experimental Runs of the Compositional CheckerThese experimental findings suggest that:The FOMs and SOMs of a certified HLA-compliant federation may, in fact, contain conflicting declarations.  HLA compliance requires only that a federation, or federate, has a valid FOM or SOM when considered in isolation [10].  There is no stipulation for a FOM or SOM to have valid relationships with other object models within a federation, and creates a brittle and misleading definition of ‘HLA-compliance’ in this context.A formal definition of the relationships between a FOM and its associated SOMs will demand that these relationships be maintained by developers when they implement the federates and the federation.  Currently, nothing prevents developers from building federates and federations that deviate from their FOMs or SOMs.  This defeats the main purpose of the FOM or SOM, which is to serve as a contract between federates, and to advertise the capabilities of a federate.  Our research tends to show that FOMs and SOMs have been submitted mainly to satisfy HLA-compliance certification, reducing the OMT to product literature, rather than engineering specification. Without defined compositional checks, FOMs and SOMs cannot be used for early-stage interoperability verification.  The cost-effectiveness of early verification and validation is well-known and, considering the number of errors detected in our pilot experiment, one can only speculate about problems developers could have avoided had compositional checks been carried out.Nothing in the foregoing should be misconstrued as imputation of negligence on the part of FOM/SOM specifiers or developers.  On the contrary, these findings merely highlight the difficulty of building consistent FMSs in the absence of defined compositional semantics.  More significantly, they underscore the need for compositional checks to be defined for the HLA OMT.  The fact that an individual FOM or SOM is checked for validity under the OMT Test Procedures strongly argues for at least the same level of verification to be applied to a FMS.                   Figure 13    Abstractions over the Simulation Model6.	Extending the OMT for Semantic CheckingAs experience in building HLA federations grows, some interoperability problems have surfaced that go beyond the scope of HLA, as it is currently defined [11].  We are now considering how the information within a FOM and SOM might be extended, in order to provide automated checking of key behavioural properties across a federation, so that these problems may be detected early in the HLA development process. Not all entities within a federation need to resolve all aspects of the simulation (e.g. time, space, etc.) in a strictly uniform manner, but in a way that is sufficient and appropriate to the needs of the federation.  It is difficult to make judgements about the appropriateness of a model for an application without an understanding of its inner workings, which the OMT has no means of capturing.  DEVS [12] provides formalisms to capture the dynamic behaviour of systems, but at a lower level of abstraction than the OMT, as illustrated in Figure 13.  Extending the OMT to this lower abstract level would result in an unbalanced view of a federation, which would be hard to reason about.  Therefore, our research is currently focussing on enhancing the OMT at its present level of abstraction and format, to capture key behavioural properties of federates and federations.Currently, a FOM/SOM specifies objects and interactions in terms of their static data structures; that is, a FOM/SOM is a data interface specification.  However, abstract qualities, relating to the dynamic behaviour of a federate/federation, could also be defined at this interface, using tables that would extend the OMT.  Checks could then be carried out on these extension tables to verify whether the abstract behavioural qualities at each interface are adequately consistent across the federation.  One of the problems identified in [11] was caused by the different ways that various federates advanced time within a federation.  For instance, a low-flying aircraft entity travelling at the speed of sound might escape detection by a surface-to-air missile site entity that checks for aircraft only once every minute.  This unrealistic outcome could be prevented if the ‘freshness’ of data required to support the objectives of the federation could be captured in the OMT.  For the example given, the federation could specify that federates should be able to detect/update aircraft entities at a realistic time interval; for example, at least once every second.  Each federate would then need to declare its aircraft detect/update time interval, which could then be checked against the requirements of the federation. Data ‘freshness’ is just one example of a quantifiable abstraction that could be captured in an extended FOM/SOM.  We envisage semantic tables extending the OMT to capture a set of quantifiable abstractions that will address the particular problems of semantic interoperability, which have been identified by HLA federations.7.	ConclusionsFrom our work, to date, we draw the following conclusions:Checks that verify the compositional compatibility of FOMs and SOMs within a federation need to be defined.  Their absence gives rise to problems that could hamper the development of HLA federations.The multiple-view framework for validating FOM/SOM checks has proven effective and adaptable; it was used not only to validate the derived consistency checks, but also to formulate and validate compositional checks from an abstract conceptual view.Relational Algebra has proven to be a useful formalism with which to define the HLA OMT from which consistency and compositional checks can be derived.  The abstract expressions with which such checks are expressed lend themselves well to verification and validation through animation, and direct implementation in SQL.The OMT could be enhanced at its present level of abstraction by semantic tables that quantify certain abstract qualities, which relate to the dynamic behaviour of a federation and its federates.  Semantic FOM and SOM extension tables could help to ensure a more uniform view of entities and interactions across a federation, and support early-stage checking for semantic interoperability problems.8.	Future WorkOur future research activities in this area include the following:Investigate other interoperability problems reported by the HLA community, and identify behavioural aspects that can be abstracted, quantified and captured in semantic tables which extend the OMT in a coherent manner.Formulate checks that verify the coherence of the semantic FOM and SOM extension tables, and subject these checks to the validation framework described in Figure 4.Build a Semantic Checker to complete the RMCS HLA Checker Toolset, as identified in Figure 9.9. 	AcknowledgementsThe authors would like to express their thanks to the UK MOD and DERA for funding their attendance at this Workshop.10.	References[1]	“HLA Object Model Template”, Version 1.3, DMSO, 5 Feb 1998.[2]	Horst, M.,  “Test Procedures for the HLA OMT Version 1.3”, Georgia Tech Research Institute, 6 April 1998. [3]	Morales, M. C., Moulding, M. R. & Newton, A. R., “Improving the Verification of Synthetic Environments: Towards a More Rigorous Approach for the Automated Checking of HLA Specifications”, SISO SIW Spring 99 (Paper #171).[4]	Morales, M. C. & Moulding, M. R. "Relational Algebraic Description of Consistency Checks for the HLA-OMT version 1.3",  Report Ref: SE023E/TR1, Cranfield University/Royal Military College of Science, UK, June 1999.[5]	Morales, M. C., Moulding, M. R. & Newton, A. R., Specification of Interfaces for Distributed Interactive Simulation Systems: Final Report, Report Ref: 1180/TR3, Cranfield University/Royal Military College of Science, UK, May 1999.[6]	Date, C. J. “An Introduction to Database Systems, Vol. I", 5th ed., Addison-Wesley, 1990.[7]	LEAP (a public-domain Relational Algebra interpreter), version 1.2.5, 1999. http://www.dogbert.demon.co.uk/leap.html/[8]	Pratt, P.J., “A Guide to SQL”, 2nd ed. 1991.[9]	Morales, M. C. & Moulding, M. R. "Compositional Checks for the HLA-OMT version 1.3", Report Ref: SE023E/TR2, Cranfield University/Royal Military College of Science, UK, February 2000. [10]	"HLA Compliance Checklist", version 1.3. DMSO, 4 May 1998.[11]	Dahmann, J., Salisbury M., Turrell C., Barry P. & Blemberg P., "HLA and Beyond: Interoperability Challenges", SISO SIW Fall 99 (Paper #073).[12]	Zeigler, B. P., & Sajoughian, H. S., "Support for Hierarchical Modular Component-based Model Construction in DEVS/HLA." SISO SIW Spring 99 (paper #066).[13]	“Federation Execution and Planning Workbook”,  Draft 2, DMSO. 13 Oct 1999.Author BiographiesMICHAEL C. MORALES is a PhD student in the Computing Information Systems Engineering Group in the Department of Informatics and Simulation, at RMCS.  He is a serving officer with the Armed Forces of the Philippines, and is focussing his research on the formal specification of the HLA OMT.MICHAEL R. MOULDING is Professor of Software Engineering, and Head of the Computing Information Systems Engineering Group, at RMCS.  Over the past decade his main research activities have been in the fields of high integrity software, requirements analysis, mathematically formal specification techniques, and the verification, validation and accreditation of Distributed Interactive Simulation (DIS) system.  We define a Federation Model Set (FMS) as the FOM and the SOMs that constitute a federation.( Only the four FMSs with errors were considered. This is different from the information captured in the Object Update Rate Table of the FEPW [13], which is the product of the number of objects updated and the frequency of update for each object.Level of abstraction