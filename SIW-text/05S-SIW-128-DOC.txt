Real-Time Range Operations Components for Integrated Testing (ROCIT) Collection, Command, and Control Tools using the Test and Training Enabling Architecture (TENA)Ryan NormanU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" rnorman@rttc.army.milDavid R. BrowningU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" dbrowning@rttc.army.milJason BolinU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" jbolin@rttc.army.milChris EdwardsERC IncorporatedHuntsville, Alabama555 Sparkman Dr., Suite 1622Huntsville, AL 35816 HYPERLINK "mailto:darryl@amtec-corp.com" cedwards@rttc.army.milJosh SellsERC IncorporatedHuntsville, Alabama555 Sparkman Dr., Suite 1622Huntsville, AL 35816 HYPERLINK "mailto:darryl@amtec-corp.com" jsells@rttc.army.milKeywords:TENA, ILH, ROCIT, USI ExerciseABSTRACT:  The ROCIT Initiative, which was funded through Virtual Proving Ground (VPG), was created as an effort to modernize range business processes through the enhancement of infrastructure, test planning, and test execution.  Redstone Technical Test Center (RTTC) was able to demonstrate its successes with ROCIT in the FY04 Unmanned Systems Initiative (USI) Exercise performed at RTTC.The USI Exercise demonstrated RTTC’s use of TENA as its architecture for range asset command and control as well as real-time data collection.  In this exercise, RTTC enabled two Laser Trackers, a Range Radar, and a Track Mount Control on its test network with TENA.  In addition, a DIS to TENA Gateway was also used to capture USI vehicle TSPI information published in DIS in order to remotely command the range assets to automatically track any of the entities on the range.  TENA-enabled 3D Viewers and Data Loggers were used throughout the exercise.The USI Exercise also made extensive use of the Integration Level Hierarchy (ILH) to associate the data collected via TENA with a range-specific test and move that test data to a standardized RTTC database for viewing by the entire test center.  This data was disseminated to all TENA-enabled range assets by the Test Event Controller.  The Test Event Controller was able to notify all range assets of significant test events, such as the start or stop of a test and when to begin or end logging, with the single push of a button in order to facilitate test event control from a single location.Using TENA, the range assets communicated their data and allowed for remote control and automatic tracking of the USI vehicles and, thus, showed that the ROCIT Initiative at RTTC was indeed a success.1. IntroductionThe Redstone Technical Test Center (RTTC) Firing Test Division has been deploying capabilities resulting from the Range Operations Components for Integrated Testing (ROCIT) initiative. ROCIT, which was funded through the Virtual Proving Ground (VPG), was created as an effort to modernize range business processes for the testing of rockets, missiles, sites, seekers and helicopter components through the enhancement of infrastructure, test planning, and test execution. ROCIT is the integration of the software tools, networks and range hardware with the goal to test better, faster and cheaper and achieve capabilities to support range testing now and 10 years into the future.  The FY04 Unmanned Systems Initiative (USI) Exercise was the first opportunity to bring ROCIT test planning, test execution, post-test analysis and distributive testing capabilities to bear on a complex project.The USI Demonstration incorporated live, virtual and simulated robotic elements in an operational tempo exercise. Virtual components were being generated from Ft. Rucker, simulated entities from the labs on Redstone Arsenal, and live entities were active on the RTTC, Flight Test Range. The live entities included an Unmanned Ground Vehicle (UGV) firing munitions at a Tactical Operation Center (TOC) emulation and Unmanned Arial Vehicles (UAV) acting in a battle damage assessment role. Support for the USI exercise at the Flight Test Branch included the utilization of the ROCIT network, servers, tools, data systems and control center infrastructures. The Test and Training Enabling Architecture (TENA), which RTTC had evaluated for performance and chosen as the test architecture, was utilized as the architecture to move test metadata, real-time range data among instruments and to move data from the tactical layer into the range instrumentation layer. However, the truly revolutionary capability demonstrated during the test was the reliance on TENA throughout the test process. TENA not only provided the real-time instrumentation data dissemination capability but was also utilized to bring tactical information into the test network for use by the range instrumentation.  In addition, TENA was used for overall range test execution control and as the test Integration Level Hierarchy (ILH) metadata distributor. The ILH, which was also developed under the guises of the VPG, is a metadata schema and taxonomy. TENA combined with the ILH and ROCIT infrastructure enabled the Flight Test Range to actively participate in this live, virtual, and simulated distributed exercise controlling instrumentation, data collection and enabling streamlined data delivery. 2. TENA at a GlanceThe Test and Training Enabling Architecture (TENA), part of the FI 2010 CTEIP Program, is an object-oriented data transport architecture.  TENA is technically driven by interoperability, reusability, and composability requirements.  Interoperability requirements necessitate TENA applications to work together to achieve the goals defined by a user or users.  Reusability requirements involve TENA components, applications, or systems that can be used in configurations beyond those for which they were originally designed.  Composability requires an ability to rapidly assemble, initialize, test, and execute a system from members of a pool of reusable, interoperable elements.  TENA sanctions real-time, distributed testing and simulation through the use of a Logical Range Execution, or LRE.  The LRE concept allows TENA to meet the interoperability, reusability, and composability goals as defined by the user community.  Communication between entities in the test execution environment using TENA is accomplished with servant objects and proxy references to these servant objects.  In terms of the publisher-subscriber paradigm, Servant objects are publishers and proxy objects are subscribers.  Together, servant objects and their corresponding proxy references form Stateful Distributed Objects (SDOs), the building blocks contained within every Logical Range Execution.  SDOs contain both data attributes and control methods.  TENA relies on SDOs within a LRE to publish test data in an object-oriented format and deliver that test data to any number of interested subscribers real-time.  With a SDO, the data attributes are updated across the network via an SDO’s publication state.  A publishing, or servant, object represents the source of data and reports any changes made to the publication state to all applications that are connected to the servant object via a subscription, which is otherwise known as a proxy reference.  These updates occur atomically, meaning an object’s attributes are updated as one single entity to preserve the state of the published object.  Furthermore, a proxy is only notified about servants it has told TENA it is currently interested in; that is, a proxy only receives objects of types that it has “subscribed” to.  A SDO, however, facilitates more than just publishing and subscribing.  TENA also allows for Remote Method Invocation, which permits a subscriber to remotely command its publisher to perform certain methods.  Methods defined within an SDO’s design are set up by TENA for remote invocation.  To remotely invoke a method, TENA relies on SDO subscriber proxy references that use its middleware to connect with the publishing servant.  Applications can be defined to handle TENA servants and TENA proxy references simultaneously.  That is, TENA allows for a publisher application to also be a subscriber application and for an application to be attached to multiple publishers or subscribers within the Logical Range Execution.  In short, TENA is a complete real-time data transportation solution for test execution data.3. TENA Logical Range OMs and the Firing Division OMTo meet the driving technical requirements listed above, TENA is object-oriented and, therefore, needs an object-oriented Logical Range Execution comprised of Stateful Distributed Objects in order to facilitate this data transportation process.  The object model used to describe the LRE is known as the Logical Range Object Model, or LROM.  A LROM integrates testing and training applications for a range exercise while residing either at a single test site or be distributed throughout a network of test and training centers.  This Object Model describes the boundaries of a LRE by encoding all information that is transferred between systems during a given range event.  All objects of interest found in the LRE must be modeled in the LROM.  Simply put, the LROM is the common understanding of the test execution environment and TENA is the language test applications use to communicate the LROM.  In order to facilitate interoperability and reuse, it becomes imperative to encode all information communicated among range resource applications into a standard format for all applications to use.  The RTTC Firing Division Object Model is an ambitious task within ROCIT with the goal of defining, at a RTTC division level, a set of common range interface and protocol definitions encapsulated into an object-oriented design.  This object-oriented design will then be incorporated into a TENA Logical Range Object Model for use in both distributed and intrarange activities.  Since all braches within the division are using the same LROM, interoperability amongst the branches using TENA is automatically available in range applications.  For example, an application that logs data of the Firing Division OM type RTTC_Platform can receive RTTC_Platform data from any division or branch application that publishes RTTC_Platform or even an object that inherits from RTTC_Platform, such as a Laser Tracker Publisher.  The Firing Division Object Model embraces source code reuse by allowing generic applications and processes to be designed based on functionality built into the object model and incorporated into all range applications.  For example, a Generic Application Management tool can be built to communicate range test events, such as the starting or stopping of a test, to all participating range applications.  All the connectivity described is inherent in the range applications that use the Firing Division Object Model and require no additional work from the application developer.  In addition, LROMs can be built upon the Division OM to provide functionality to applications that are not necessary at a division-level.  However, inheritance allows these applications to still be interoperable with division-level objects.  In order to best facilitate test center interoperability, it will be possible in the future for RTTC to combine all of its Division level Object Models into a single test center Object Model based on commonalities among each separate Division Object Model.  Further examples of interoperability and reuse made possible by the Firing Division Object Model are provided in the following sections. 4. USI Exercise TENA ComponentsThe USI Exercise demonstrated RTTC’s use of TENA as its architecture for range asset command and control as well as real-time data collectionFurthermore, the USI Exercise provided the opportunity to evaluate the initial design of the Firing Division Object Model.  Please see Figure 1 for an overview of the exercise.  In this exercise, RTTC enabled two Laser Trackers, a Range Radar, and a Track Mount Control on its Instrumentation Layer test network, which provides communication via TENA.  Additionally, a DIS to TENA Gateway was also used to capture USI vehicle TSPI information published in DIS on a separate Tactical Layer network in order to remotely command the range assets on the Instrumentation Layer network to automatically track any of the entities on the range.  TENA-enabled 3D Viewers and Data Loggers were used throughout the exercise.  Each application is described in detail below, along with how each helped to execute the test event narrative.Figure 1: USI Exercise Overview4.1 DIS / TENA GatewayA DIS to TENA Gateway was used to branch the Tactical network layer comprised of Units Under Test (UUT) to the Instrumentation Layer comprised of range instrumentation.  The Gateway resided on a computer with two network cards to allow the UUT data to be distributed as TENA SDOs on the Instrumentation network.  The DIS traffic was rebroadcast on to the range instrumentation through the gateway as RTTC_Platform objects, which, by reading the TSPI information, enabled the instrumentation to know where on the range to locate the UUT.  Furthermore, since all DIS traffic was rebroadcast as TENA SDO’s, range assets were unable to differentiate between real UUTs or simulated vehicles.  Therefore, range assets could be commanded to automatically track both live and virtual targets from the Tactical network layer.4.2 Range-in-a-Box (RIAB)UUT data was also available for the UGV on the Instrumentation network layer via the Range-in-a-Box (RIAB).  RIAB, a TENA-enabled generic data collection instrument mounted on the UGV for this exercise, published GPS data in the form of a RIAB TENA SDO.  This GPS Position data was, in turn, used by the Radar to auto-track the UGV via Remote Method Invocation.  Please see the following section for more information on the Radar.  For evaluation purposes, this GPS data from the Instrumentation layer was also compared to the Position data collected from the Tactical layer.  Please see Figure 2 for a screenshot of the RIAB. SHAPE  \* MERGEFORMAT Figure 2: RIAB Controller4.3 Weibel Radar and Track MountThe Weibel Radar was used in the USI exercise to track the UGV as it drove around the test range.  Two applications were used to control the Weibel Radar.  The first, a Radar Controller, controlled the actual Weibel Radar via Serial Port and published Radar data as a TENA SDO.    Please see Figure 3 for a screenshot of the Radar Controller.  This application provided logging capabilities and was aware of the test metadata through subscription to the Integration Level Hierarchy (ILH) objects.  Both of these tasks will be discussed in further detail in a subsequent section.  The Radar Controller application controls whether or not the second application, the Remote Radar Controller, can control the Radar via TENA Remote Method Invocation (RMI).  The Remote Controller can command the Radar to point at any RTTC_Platform object because, through subscription, data for all real or virtual UUTs is delivered to the application.  The Remote Controller operator selects the RTTC_Platform of their choice, RIAB for the USI Exercise, and sends RMI calls to the Radar Controller application to instruct it to point at the selected object.  During the USI Exercise, the Remote Radar Controller would switch between auto tracking based on GPS information to the “truth” data from the locked target of the first Laser Tracker.  More information on this can be found in the Laser Tracker section below.  Please see Figure 4 for a screenshot of the Remote Radar Controller. SHAPE  \* MERGEFORMAT Figure 3: RADAR Controller SHAPE  \* MERGEFORMAT Figure 4: Example Instrumentation Remote ControllerThe Video Track Mount (VTM) was utilized during the test to provide real-time video documentation of the status of the live components to include the UAVs and UGVs. The VTM is a “portable” pedestal that can rotate 360 degrees horizontally and about 105 degrees vertically (90 up and 15 down).  Two applications were used to control the Track Mount.  The first, the Track Mount Controller, provided the same functionality for the Track Mount as the Radar Controller did for the Radar.  Please see Figure 5 for a screenshot of the Track Mount Controller.  The second, the Remote Track Mount Controller, provided the same functionality as the Remote Radar Controller.  Please see the preceding paragraph for more information on the functionality of the Track Mount Controller and Remote Controller applications.  The Remote Controller used DIS Traffic converted into TENA SDOs via the Gateway to automatically point the Track Mount at the UAV.  The VTM has the capability to “auto-track” a target once the item of interest is in the field of view and is selected by the operator.  However, finding an item of interest traveling at a great speed or distance in the field of view is very difficult for the operator.  The Remote Controller performs this acquiring task for the operator and allows the operator to switch the VTM into “auto-track.”  During the USI Exercise, the Remote Track Mount Controller would switch into auto tracking mode based on Tactical Layer DIS traffic or the “truth” data from the locked target of the second Laser Tracker until it acquired a lock of its own which, due to the size of the UAV and the distance it traveled away from the Track Mount, would not have been possible without the remote control capabilities to approximate the target’s position.   SHAPE  \* MERGEFORMAT Figure 5: Track Mount Controller4.4 Laser TrackerTwo Laser Trackers were in use during the USI Exercise.  The first provided “truth” data on the UGV whereas the second provided “truth” data on the UAV.  Two applications were used to control each Laser Tracker and both act similarly to the Radar and Track Mount applications described in the section above.  Once it acquires its target, the Laser Tracker target accuracy is reliable to within a foot and is updated one hundred times a second.  In comparison, a good GPS will provide one meter accuracy updated once a second.  These Laser Tracker target locks were used to provide more accurate targeting information for the Radar and Track Mount.  When each Laser Tracker acquires its target, it goes into a locked target state.  The Laser Tracker Controller application recognizes this lock state and, in turn, publishes a TENA SDO in the form of a RTTC_Platform containing the “truth” Position data of the target.  The other Remote Controller applications would then command the Radar or Track Mount to point at the actual location of the UGV or UAV, respectively, rather than the GPS data.  Please see Figure 6 for a screenshot of the Laser Tracker Controller. SHAPE  \* MERGEFORMAT Figure 6: Laser Tracker Controller4.5 3D ViewerThe 3D Viewer provided a simulated view of the actual test event.  The 3D Viewer uses TENA to subscribe to RTTC_Platform objects, enabling it to display both real and virtual entities on the test range.  The 3D Viewer is used to verify that the Radar, Track Mount, and Laser Tracker are pointing at the correct UUTs by displaying a beam to represent where each instrument is pointing on the range.  If the real or virtual UUT appears within the beam, then tracking is verified.  Please see Figure 7 for a screenshot of the 3D Viewer. SHAPE  \* MERGEFORMAT Figure 7: Range 3D Viewer Screenshot4.6 Data LoggersFor the USI Exercise, each Instrumentation Controller has built-in logging capabilities.  Data is logged in an XML format that coincides with the attributes available in the Firing Division OM.  XML allows for text data formatting, which facilitates easier data reduction, mining, and viewing.  Each log file is associated with a second XML file which contains the ILH information for the test.  This ILH information provides details about the test currently being executed and maximizes the effectiveness of data movement and storage.  Please see the following section or the accompanying paper “Real-Time Range Operations Components for Integrated Testing (ROCIT) Collection and Distribution of Data Using the Test and Training Enabling Architecture (TENA) and the Integrated Level Hierarchy (ILH) Meta-Data Standards” for more information about ILH.5. TENA and the Integration Level Hierarchy (ILH)The USI Exercise also made extensive use of the Integration Level Hierarchy (ILH) to associate the data collected via TENA with a range-specific test and reference that test data automatically, with user intervention where required, in a newly developed RTTC database.  This data, which is grouped by ILH metadata, can then be viewed uniformly, regardless of the range at which it was collected, by the entire test center.  ILH has been designed, developed, approved and promoted by all test centers to establish a standard database architecture.  The ILH database schema is the minimum required data architecture each test center’s data system must use to communicate with other test centers.  Metadata within the ILH provides a “card catalog” on what is being tested, who conducted the test, project information on tests being conducted, types of tests conducted, test event information, and unique identification of test articles. All of this metadata is used to identify, store, and retrieve digital objects known as resources. The referenced digital objects are items such as documents, test data, images, models, simulations, and software.  The USI Exercise log files are an example of digital objects.  To ensure intra-range data integration, the ILH enables the development and real-time deployment of metadata standards via database table replication across the command.This ILH test data was disseminated to all TENA-enabled range assets by the Test Event Controller.  Please see Figure 8 for a screenshot of the Test Event Controller.  The Test Event Controller is able to notify all range assets of significant test events, such as the start or stop of a test and when to begin or end logging, with the single push of a button in order to facilitate test event control from a single location.  This is made possible through the use of TENA SDO subscription and Remote Method Invocation.  The Test Event Controller publishes ILH data in TENA and subscribes to all RTTC_Platforms.  To publish the ILH data, the test being executed is first selected in a tree view on the application interface.  All ILH data is then automatically published on the Instrumentation network via TENA for each range asset to associate its data to.  In addition, subscription to RTTC_Platform objects allows the Test Event Controller to send test events to all instrumentation on the range.  When selected, these events were sent to each piece of instrumentation through the use of TENA RMI.  For example, in the USI Exercise, the Test Event Controller managed the beginning and ending of data logging via start logging and stop logging methods remotely invoked on each instrument with the push of a single button.   SHAPE  \* MERGEFORMAT Figure 8: USI Test Event Controller6. USI Exercise ResultsThrough the Unmanned Systems Initiative Exercise, RTTC accomplished its overarching goal of demonstrating the capabilities achieved as a result of the ROCIT Initiative, with respect to test execution processes, through the success of two sub goals.  Each sub goal is described in detail in the following paragraphs.The first sub goal was to improve range test execution processes through the extensive use of TENA.  This sub goal was delivered as TENA was used throughout the USI Exercise.  The initial Firing Division Object Model easily facilitated communication among range entities through the publishing of and subscribing to their state data.  The common Object Model also allowed Unit Under Test data presented as DIS entities from the tactical network layer to be mapped into TENA SDOs so that their information could also be shared through publishing.  Furthermore, the 3D Viewer application, which was able to use the Firing Division Object Model to receive data from all live and virtual range entities, provided a colossal benefit to test execution.  The 3D Viewer allowed the users to easily make sure instrumentation was properly tracking other range entities while simultaneously providing a visual overview of the entire exercise.  In addition, since all range objects and applications could effectively communicate via this common Division Object Model, TENA enabled instrumentation control of the Radar, Track Mount, and two Laser Trackers with the extensive use of Remote Method Invocation throughout the test network layer.  This instrumentation control facilitated automatic tracking of objects on the range from either the tactical or instrumentation network by the Radar, Track Mount, and Laser Trackers.  Furthermore, the Laser Tracker was able to publish its target, once acquired, into TENA using the Firing Division OM for all other instrumentation to track those range entities as accurately as possible without having to rely on the less accurate GPS data.  The second sub goal, to facilitate easier post test analysis, was accomplished through the use of ILH and its resultant, uniform test data viewing.  ILH test metadata was distributed by a Test Event Controller to all range entities through the use of TENA, which allowed everything on the range to be “aware” of the current test being executed.  Once the range assets were aware of the test, they were then able to log test data real-time with its associated standard ILH test metadata attached in a log format understandable by anyone using ILH.7. Issues and Problems EncounteredWhile the USI Exercise was quite successful, there were several problems that occurred during test execution.  Initializing and maintaining persistent serial connections over large distances to range instrumentation proved to be quite a complex task.  FreeWave modems were used to provide the necessary serial connection down range.  However, initial setup was time consuming and, due to other RF interference related to the USI Exercise, connection persistency was, at times, sporadic.  Although TENA met all of RTTC requirements and exceeded all expectations, several issues relating to TENA thread safety were encountered during the exercise.  The first problem (TENA Help Desk Case #TENA-189) occasionally manifested when TENA subscribers, which were not stopped, became delayed in re-discovering publishers that had been restarted.  This problem occurred because of some thread safety issues in both RTTC’s applications and the TENA Middleware.  To solve this problem, the publisher applications were refactored to force the TENA thread to properly close before the main application thread was allowed to close.  More specifically, the applications were rewritten to manually reset the TENA pointers necessary to resign from the Middleware before allowing the application to completely close.The second problem (TENA Help Desk Case #TENA-199) occurred when a publisher or subscriber application would crash, which would then cause other applications running on the TENA LRE to freeze.  If given enough time, the frozen applications would return to a stable state.  However, on a range where test events last seconds and not hours, this is unacceptable.  After much discussion, this problem seems to stem from a threading problem where an application that crashes causes the TENA Execution Manager to freeze and prevents anyone using the SDO type(s) in the application that crashed to halt processing.  Other organizations have seen and reported similar versions of this problem to the TENA Development Team.  The TENA Middleware Development Team is actively working on a solution to this problem and will provide a patch once a solution is available.  The TENA Help Desk has been extremely helpful in diagnosing and resolving both of these problems.  Please go to  HYPERLINK "http://helpdesk.fi2010.org/" http://helpdesk.fi2010.org/ for further information regarding the case numbers listed above.8. ClosingThe extensive work required for RTTC to support the USI Exercise allowed for encapsulation and evaluation of all aspects of the ROCIT Initiative including network, servers, tools, data systems and control center infrastructures.  RTTC has chosen TENA as its architecture of choice throughout the entire test execution process from disseminating test metadata, to providing real-time range data among instruments, to moving data from the tactical layer into the range instrumentation layer.  Furthermore, RTTC demonstrated how TENA can be used for overall range test execution control and for facilitating ILH test metadata distribution.Without the ROCIT Initiative, which combined ILH and TENA to the Flight Test Range’s new network infrastructure, RTTC participation in the USI Exercise would not have been as efficient because the automatic control of instrumentation and streamlined data delivery process would not have been possible.  ROCIT effectively enabled RTTC to further enhance its extensive capabilities for test support.  The ROCIT Initiative at RTTC was indeed a success.