Issues in Development of a FOM For AggregatedGround Combat and Overhead IO-ISR SimulationsRobert L. YoumansTeledyne Brown Engineering300 Sparkman Dr. NWHuntsville, AL 35807256-726-1046robert.youmans@tbe.comKeywords:HLA, FOM, RPRFOM, Aggregated, Ground Simulation, ISR Simulation, Object Oriented DesignABSTRACT:   The latest standard for the RPRFOM has the aggregated unit representation removed.  We are designing a federation involving an aggregated ground combat simulation, and an overhead ISR-capable simulation, to study and show the contribution of these products to the force.  We describe our desired federation, and its features.  In designing a FOM for an aggregated combat simulation and an IO-ISR simulation, many issues not considered in the RPRFOM arise.  We discuss some of these issues, some alternatives to deal with them.  We discuss the desired features of our aggregate/IO-ISR FOM.1.  IntroductionOur group at Teledyne Brown Engineering is continually developing, modifying, and using military simulations as a central part of our business.  We have been working with HLA, DIS, and other distributed simulations for as long as the technology has existed.  Two of our latest simulation projects are at a point in development where there is some interest and opportunity in having them cooperate in an HLA federation.  The simulations are:  JFAS, the Joint Force Analysis Simulation, and ASESS, the Advanced Sub-system, Element, and System Simulation.  JFAS is an aggregated ground combat simulation.  It is a new simulation based on other older models, and takes advantage of current software development tools and techniques.  ASESS is a more mature simulation, which focuses on missile, other airframes and space vehicle domains.  It can be used as an IO-ISR simulation (Information Operations - Intelligence, Surveillance and Reconnaissance).   ASESS has existing HLA capability (using the RPRFOM, among others), and has been used in several projects to date.The purpose of this paper is to discuss issues about the aggregate level FOM which allows these simulations to run cooperatively using HLA.  We discuss the FOM in the context of an extension of the RPRFOM.  The FEDEP process (initial design steps) is used as the forum for the federation objectives.  We develop some alternatives for providing aggregate level unit functionality in a FOM, and select a preferred approach.  It is important to note that this federation is a work in progress (in its initial design), and that all the answers are not in yet.1.1  JFAS-ASESS FederationEach of the two simulations in the federation provide particular functionality (there is little overlap).  JFAS, as a aggregate ground combat simulation, focuses on unit maneuver and command and control. JFAS does not model satellites and their sensors.  ASESS can model satellites, as well as missile and fixed wing air platforms.  It can also model sensors mounted on any of these platforms, in many configurations.A federation with these two tools can have an overhead sensor which detects various force components, processes that intelligence (e.g., and intelligence staff or agency role), and communicates that information to various points within a maneuver force.  There are many issues which this capability can study.  The relative value of such intelligence to a force on maneuvers can be addressed, as can the effect of various degrees of intelligence processing, time delays from processing, transmission, etc.  In other words, it seems like a good idea to pursue.2.  FEDEPThe Federation Development and Execution Process Model describe six steps in the design of an HLA federation [Ref. 3].  We will discuss our federation in the context of the first two of these steps:  Federation Objectives, and Federation Conceptual Model.  The FEDEP model is designed to be tailored to each project.  There are many FEDEP activities, which are mapped to the six FEDEP steps.  For example, in our case, the selection of the federations (an activity mapped to FEDEP step 3, Design Federation) is determined a priori, to accomplish some specific objectives outside the usual scope of the FEDEP process.  Thus, there are two classes of federation objectives:  those concerned solely with the federation development, and external objectives (e.g., economics, simulation project goals, schedule, etc.).  We are making use of the FEDEP model to facilitate all of these objectives.2.1  Federation ObjectivesOur federation has the following objectives:Provide the ability to study the contribution to a manuever force provided by various types of overhead IO-ISR assets.Provide the ability to study alternatives and effects of requests for information (taskings) from maneuver units to IO-ISR assets.Leverage these efforts to improve our suite of simulations, for other as-yet-unknown projects.Leverage these efforts to produce a FOM and/or SOM's which are useful for other as-yet-unknown projects.Take advantage of earlier work, and make maximum use of previous HLA/RTI codes and FOMs.The first two objectives listed above are concerned solely with the federation development, and are intentionally rather broad.  They are within the scope of the candidate simulations.  The remaining three objectives are external objectives, designed to ensure we accomplish more than just another simulation project.  We are trying to improve our own "toolbox" as well as the simulation community at large.2.2  Federation Conceptual ModelThe development activities in this FEDEP step are:  develop scenario, perform conceptual analysis, and develop federation requirements.  We will not develop specific federation requirements here, due to our desire to focus on FOM aggregation design issues.  Our scenario can be described in general terms.  The friendly force is large enough so that there is a staff and sufficient maneuver platforms to make use of these intelligence products.  For our purposes, this is typically the maneuver division level.  However, we note that there is significant discussion in the community regarding the potential uses of this information by units at all levels of organization, to include individual platforms (e.g., helicopters, tanks).  The maneuver of the friendly force is sufficiently complex that there are some alternatives to maneuver which can be selected based on receiving intelligence products.  The scenario contains overhead IO-ISR assets which can cover the maneuver area of the scenario.  The enemy order of battle is such that there are contributions to the intelligence process of the friendly force which can be made by the IO-ISR assets during the maneuver (e.g., there are active enemy elements which the ISR assets can detect).  The scenario can then study in a set of alternatives the ways in which the IO-ISR assets can contribute (or not) to the effectiveness of the friendly maneuver force.2.3  Other FEDEP ProcessesFor  our purposes here the other FEDEP processes are not addressed.  The project design is such that the federates are already determined.  Some portion of the FOM is also already determined, as we shall see, by the external objectives of the project (i.e., previous RPRFOM use).3.  FOM Aggregation AlternativesWe are very familiar with the RPRFOM.  We have developed simulations which use various versions of it (including ASESS).  We participated in the recent standards approval process for the RPRFOM and its associated GRIM (Guidance, Rationale, and Interoperability Modalities).  In order to achieve our external federation objectives, we desire our FOM to remain "close" to the RPRFOM.  Since DIS, and the original RPRFOM (not the proposed standard), included some cursory addressing of aggregation, we decided to investigate ways to extend the RPRFOM to include aggregation information.What information is required for the aggregation of units in a FOM (in addition to the entity information already in the RPRFOM)?  Here is our initial list:Organization level.Contained entity/platforms and their strengthCommand relationships (superior and subordinate units)Aggregated state:  formation, distribution, shape, etc.And in particular, we do not want to require the actual presence of all of the individual entities which are aggregate into units.Continuing our federation conceptual model, the FEDEP model describes the activity "perform conceptual analysis" as an analog of Object-Oriented design.  We can apply this to the RPRFOM, and then find ways to add the above information to produce our aggregated FOM.  Using UML notation, we can build a general object model of the RPRFOM object classes (Fig. 3-1) [Ref. 1]Figure 3.1 - Partial RPRFOM UML Object ModelTo preserve clarity, not all of the entities in the RPRFOM are represented in Figure 3.1.  The vertical relationship of the entities in the object model is that of inheritance (C++), or general-to-specific (UML).  Note the original RPRFOM and the DIS IEEE 1278 standard include an aggregate entity on a parallel level with the Physical Entity [Ref. 2], and it is absent from the current RPRFOM proposed standard.Given the above object model, and the desired aggregate entity information to be added to it, we can create at least three approaches to accomplish this.3.1  Aggregation As Generalization of All EntitiesIt is possible to consider the current RPRFOM, with its de-aggregated entities, as a level of aggregation in itself (i.e., the lowest level of aggregation is no aggregation).  In this approach, the base entity contains our aggregation data, possibly as a complex enumerated type (or several of them).  This idea is attractive because it incorporates the aggregation information at the lowest level (BaseEntity), and all other entities receive it via inheritance.  The default aggregation level is then none, which is the existing RPRFOM (Fig. 3.2).Figure 3.2 Aggregate BaseEntity3.2  AggregationEntityThis approach is similar to the existing DIS approach, and incorporates a separate aggregation entity, probably on a level parallel with the physical entity (depending on your view of the question "Is an aggregate entity actually a physical entity?").  It is shown in Fig. 3.3.  This approach "partitions off" the aggregation from the rest of the object class structure, and would require references to other entities.  It would probably increase significantly the number of entities to be managed, in a large scenario.Figure 3.3 - Separate Aggregation Entity3.3  Aggregation As Specialization of Each EntityThis approach includes aggregation information into each entity at a level specific to each entity (Fig. 3-4).  In the example, there are AggAircraft and AggGroundVehicle Entities, but the Spacecraft are not aggregated.  This approach has the attraction of leaving unmodified those entities that would not usually be aggregated.  It also has the disadvantage that many classes must be modified, and the future as-yet-unknown entity types will not be included by default.Figure 3.4 - Aggregated Specific Entities3.4  Preferred DesignThe first of these alternatives (para. 3.1,  Aggregation As Generalization of All Entities) best meets our federation objectives.  This approach remains "close" to the RPRFOM, and the idea that the de-aggregated case is also a particular case of general aggregated entities (e.g., none) is attractive and elegant.  We use object inheritance in our software (C++) to obtain the aggregation parameters for the entities by default, and we can subscribe to the within the RTI as we see fit.  Any new object classes will also inherit this behavior, which is an example of the re-use of the technology.4.  Other Aggregated FOM Design IssuesIn addition to the object model for entity aggregation, there is at least one more area to discuss briefly:  communication messages.  4.1  Communication MessagesOur federation needs a method with which to send and receive information.  We are interested in the content of these messages, more than the physical transmission process.  A review of the RPRFOM produces the ApplicationSpecificRadioSignal, which could be used for these messages.  It is notable, though, that this information may not actually be a radio signal.  It could be transmitted using many modes.  Nevertheless, it is a good place to start, given constrained resources.5.  SummaryWe propose to develop an aggregated entity FOM, based on the RPRFOM, to provide the HLA interface for our federation.  This FOM will include aggregation information in an extension to the BaseEntity object class, called the AggBaseEntity (Fig. 3.2).  Included in the AggBaseEntity will be some complex enumerated types:  an AggState, a CommandRelation, and an EntityStrength. The AggState will contain the organization level, formation and size parameters (to be determined), and entity strength.  There will be no requirement that all the contained entities actually exist with Object Id's.  If desired, they can be created using various templating schemes.The CommandRelation will contain the superior and subordinate unit list.The existing interaction ApplicationSpecificRadio-Signal is the proposed method for sending messages containing the intelligence information for our federation.We believe this approach meets (at least initially) the objectives we have established.  It is also attractive from the elegance obtained by interpreting de-aggregated states as a special case of aggregation (e.g., none).5.  References[1]	RPR-FOM, Version 1.0 Draft 2.[2]	IEEE - 1278.1 "Distributed Interactive Simulation - Application Protocols."[3]  HLA FEDEP Model, Version 1.4, June 9, 1999Author BiographiesBOB YOUMANS is a Senior Systems Analyst at Teledyne Brown Engineering, Huntsville, AL (a company of Teledyne Technologies, Inc.).   He has a M.S. in Operations Research from the Naval Postgraduate School, 10 years of service with the U.S. Army, and has built and run military simulations in the Army with the TRADOC Analysis Command, White Sands Missile Range, NM while on active duty.  He is currently involved with many aspects of military simulations and studies at Teledyne Brown Engineering.  EMBED Word.Picture.8  