C4I Adapter Reuse Experience ReportRobert L. Wittman Jr.MITRE CORPORATION3504 Lake Lynda Drive, Orlando, FL 32817321-235-7601 HYPERLINK mailto:rwittman@mitre.org rwittman@mitre.orgStephen Lopez-CoutoProgram Executive Office-Simulation Training and Instrumentation Command (PEO-STRI)12350 Research Parkway, Orlando, FL 32826407-384-3926stephen.lopezcouto@peostri.army.milLori ToporNorthrop Grumman3045 Technology Parkway, Orlando, FL 32817321-235-7702ltopor@ngc.comKeywords: OneSAF, Computer Generated Forces (CGF), Semi Automated Forces (SAF), Command, Control, Communication, and Computers, and Intelligence (C4I), WARSIM, Software ReuseABSTRACT:  Software reuse can be a tricky endeavor with potential false economies at every turn.  If not properly managed reuse can turn out to be more costly than starting from scratch.  Prior to selection and integration one must carefully consider the potential benefits and costs of software reuse.  Such costs can be hard to estimate and might include developmental costs associated with re-architecting for maintainability, performance, or new technology integration, built in licensing fees, extending to include additional functionality, and others. Reuse benefits can easily out weight the costs and include such things as an early working code base that can be used to educate the software engineering  work force and help them understand current shortfalls, demonstrate working capability, and provide a bridge to a richer capability set.  This paper explores the government directed reuse of the WARSIM C4I Adapter, within the OneSAF Objective System (OOS) from OOS’s perspective.  The WARSIM C4I adapter is a software component providing bi-directional simulation to Army Battle Command System (ABCS) translation and stimulation capabilities.  It starts with a quick look at the requirements allocated to the C4I Adapter, accounting for both OOS and WARSIM simulation to C4I requirements, and then moves to exploring the specific adapter characteristics inherited from WARSIM,  the magnitude of change necessary to meet OneSAF requirements, and the configuration management  challenges of keeping the two development efforts synchronized.IntroductionThe One Semi-Automated Forces (OneSAF) Objective System (OOS) is the U.S. Army’s next generation, composable, entity based simulation system.  It is being developed to provide an integral simulation service to the Advanced Concepts and Requirements (ACR), Training, Exercises, and Military Operations (TEMO), and Research, Development, and Acquisition (RDA) domains.  With requirements ranging from closed-form analytical support to command level human in the loop training, OneSAF will be a High Level Architecture (HLA)/Distributed Interaction Simulation (DIS) compliant, entity level simulation providing a common-based solution for a broad range of user requirements.  [3]OneSAF requirements demand varying levels of interoperability with ABCS.  OneSAF development and fielding must keep pace with the sequential versions of ABCS for the next 11-20 years, culminating with the Future Combat System (FCS) C4I system. PM OneSAF must synchronize OneSAF design and production with ABCS architecture and development processes to field constructive simulations that can interoperate with ABCS. This paper reflects on the government’s direction to reuse the WARSIM C4I Adapter software component with respect to similarity of C4I interface requirements between WARSIM and OneSAF, the magnitude of change to the WARSIM C4I Adapter component necessary to support OneSAF, and the benefits and costs of such a reuse decision.C4I Adapter RequirementsWe start with a brief comparison between the driving C4I interoperability requirements for both OneSAF and WARSIM.  In so doing we establish a firm footing to understand the application and reuse of the WARSIM C4I interface adapter within the OneSAF  program.  As we will see both of these programs intend to seamlessly interface to Army Operational C4I systems to allow commands and staff to train as they fight. Both systems have requirements to stimulate and be stimulated by their respective C4I devices to create a realistic training environment.  WARSIM & OneSAF Interface RequirementsWARSIM’s focus is at Battalion through Corps level training while OneSAF is postured for Brigade and below command and staff training.  This echelon breakdown allows us to identify the different C4I systems within and between these organizational echelons.Because of its target training audience WARSIM focuses on interacting with the Army Tactical Command and Control Systems (ATCCS) and the Global Command and Control System – Army (GCCS-A). Specifically the WARSIM Operation Requirements Document (ORD) Version 3.7 [10] includes a Key Performance Parameter (KPP) – a high priority requirement used to assess the success of a program – that requires “a two-way interface with the Maneuver Control System (MCS), Advanced Field Artillery Tactical Data System (AFATDS), and the Forward Area Air Defense Command, Control, and Intelligence (FAADC2I); and a one-way sim-to-system interface for the All Source Analysis System (ASAS) and Combat Service Support Control System (CSSCS).” [10]  The Air and Missile Defense WorkStation (AMDWS) has been added as an interface requirement to support the higher echelon Air Defense command and control and situational awareness functions. [9]Finally, WARSIM’s Final Operational Capability (FOC) KPP calls for an interface to the Land Component Command (LCC) Army Global Command and Control System (AGCCS).  [10]OneSAF’s operational requirements for its initial fielding in 2006 resonate with the WARSIM requirements for interfacing to the ATCCS systems (MCS, ASAS, AFATDS, AMDWS, CSSCS) at the Brigade level.  However, as called out in the OneSAF ORD at Brigade and below OneSAF must also bi-directionally interact with the lower tactical internet and specifically Force XXI Battle Command Brigade and Below (FBCB2) system.GCCS-A, ATCSS, & FBCB2 Short DescriptionsBefore continuing, it’s worthwhile to briefly describe the C4I systems mentioned above.  The system listing begins with GCCS-A, continuing with the ATCCS systems, and concludes with FBCB2.  The Global Command and Control System - Army (GCCS-A) provides readiness, planning, mobilization, and deployment information supporting both strategic and theater commanders.  GCCS-A provides the link from the ATCCS & other ABCS systems to joint & coalition domains. [6]The ATCCS systems (MCS, AFATDS, AMDPCS, ASAS, CSSCS) reside on what is called the upper tactical internet and represent a subset of the overall Army Battle Command and Control Systems (ABCS) used at Brigade and above.  Specifically these systems include:The Maneuver Control System (MCS) provides the maneuver battlefield operating system picture to the commander and staff. [6]The All Source Analysis System (ASAS) provides the intelligence related information to the commander and staff and other ABCS systems. [6] The Advanced Field Artillery Tactical Data System (AFATDS) provides field artillery situational awareness, fire request, and control information between multiple echelons on the battlefield. [7]The Air and Missile Defense Planning and Control System (AMDPCS) includes the Air and Missile Defense Workstation (AMDWS).  AMDWS as the situational awareness component provides the tactical and operation air picture to the commander and staff. [7] The Forward Area Air Defense Command, Control, and Intelligence (FAADC2I) system is another component of the air defense C2 system and is further subdivided into FAAD Engagement Operations (EO) and FAAD Force Operations (FO) subcomponents. [6] The FAAD components provide air track information necessary to support air defense weapon system engagements as well as for providing an integrated air picture to the other ABCS systems. [7]The Combat Service Support Command System (CSSCS) provides logistics and sustainment information to the commander and staff. [7]Finally, FBCB2 provides command and situational awareness information from the Brigade level down to the individual soldier and platform and resides on the lower tactical internet.  Additional Architectural ConstraintsAs with most rigorous system engineering efforts the operational requirements provide a starting point for additional system engineering, analysis, and requirements derivation.  Along these lines Brennan and Smith, 2001 stipulate additional C4I interface constraints obtained through WARSIM’s experience. Similar constraints are echoed in Wittman, Kelley, & Cane, 2003 from a OneSAF perspective. The first constraint deals with the inability to modify the C4I systems to support an efficient link between the simulations and C4I systems.  Within WARSIM and OneSAF the interface requirements are the sole responsibility of the simulation developers.  Historically the C4I community has not accepted, prioritized, or has been funded to enact the changes necessary to support a more closely aligned simulation to C4I linkage.   Clearly a better solution would be to share the interface requirements between the C4I and simulation development communities. This is highlighted by the fact that there are functions related to time-management, time-synchronization, checkpoint/restart, and database synchronization that must reside on the C4I side of the interface to allow a seamless automated interface between the simulation and C4I systems. [1, 11].  Secondly, the C4I system interfaces use standard, modified standards, and proprietary message formats and protocols for their intercommunication.  Each of the message sets evolves at a different rate managed by different groups.  To isolate the simulations from the constant change associated with messages and protocols both systems’ (WARSIM and OneSAF) architecture-level designs appropriately place a gateway mechanism between the simulation and C4I devices to perform message and protocol translations.  Finally, the derivation of the requirement to stimulate and be stimulated by the C4I systems for both WARSIM and OneSAF led to similar conclusions that a subset of both standard and proprietary military formatted messages must be sent to and received from the C4I systems to appropriately address the requirements.  See Brennan & Smith 2001 [1] and Topor 2003 [8] for a breakout of message types supported for each of the C4I systems listed above.  The subset of messages include both useful, human readable information pertaining to specific tasks such as a situation report as well as heartbeat and synchronization messages intended to maintain a healthy responsive network.  The standard and proprietary message sets include:The United States Message Text Format (USMTF), The Joint Variable Message Format (JVMF),Variable Message Format (VMF) Package 11,FAAD Data Link (FDL), and Email planner attachmentsOneSAF Directed ReuseBased on operational requirement, system engineering and architecture design decision similarities, the government directed OneSAF to reuse the WARSIM C4I Adapter software as part of its reuse and direction guidance. [2] As part of the integration effort, however, the adapter has changed significantly to more effectively fit within the OneSAF architecture, to satisfy additional OneSAF requirements, and to become a more efficient message translation mechanism.  The following section identifies and describes these significant points of change and explains the decision to evolve the OneSAF and WARSIM C4I Adapters independently.Evolving the Adapter or Full Scale ChangeThe extent to which software components can be reused is a difficult subject to discuss in an objective manner. Whether the amount of reuse desired is at the algorithm, class, or application level there will almost always be changes required before it will mesh correctly with the needs of a new or different program. At the outset of development on the OneSAF Objective System it was decided that the WARSIM C4I Adapter had many of the features and capabilities that were required to satisfy OneSAF ORD requirements; therefore, the government contracted with the most experienced team to integrate and extend the WARSIM C4I Adapter for OneSAF. As development progressed, more and more pieces of the adapter were modified to meet architectural (scalability, performance, reusability, etc.), functional, and usability requirements, eventually leading to a full rearchitecture effort. This section first discusses the items that had to be changed and then looks at what is still common between the OneSAF and WARSIM C4I Adapters.  What Changed (Functionality & Design)From the earliest trade studies it was understood that the simulation side of whatever reuse product was chosen would have to be changed to accommodate OneSAF’s architecture and interface structure. When thinking about the design of the C4I Adapter imagine three blocks as in shown in Figure 1. There is a center block where the translation services reside and two surrounding blocks, one that handles the interface to the simulation and one that handles the interface to the C4I systems. Figure 1The design goal of this structure was to isolate interface changes to an easily identifiable part of the code as well as to allow different simulations or C4I systems to easily use and connect to the adapter’s translation services.  The underlying theme is that C4I adapter’s design intended to make it easy to reuse the translation services by easily connecting to new simulations and C4I systems. Simulation InterfaceIn addition to changes to support the OneSAF simulation runtime data formats and Application Programming Interfaces (API), modifications were also necessary to access adapter initialization data prior to runtime. OneSAF and WARSIM implement somewhat different schemes for system startup, and this piece simply would not carry over as reuse. The WARSIM C4I adapter initialization process depends on receiving initialization data via Federation Objects as defined in its FOM. The OneSAF initialization process requires the adapter to get its data from the PAIR (Parametric and Initialization Repository). The PAIR stores, in XML formatted files, all of the OneSAF non-environment initialization and runtime data and meta-data. The PAIR files are created from Scenario Generation input and contain the real world URN (Unit Reference Number) for the role that the connected C4I devices will be booted with. The OneSAF C4I Adapter also has an improved URN template-based structure for defining “static” C4I device initialization data.  This data includes the characteristics of the specific C4I Devices by version including communication types and protocols. As part of the scenario generation process an appropriate URN is associated with the simulated C4I device.  Once this occurs the appropriate simulation initialization data can be loaded. [4].C4I InterfacesBecause of OneSAF’s focus at brigade and below the OneSAF C4I adapter team initiated work on an FBCB2 interface. The WARSIM C4I Adapter lacked an interface to FBCB2 due to its focus at the Army’s higher echelons. Unlike the ABCS 6.x systems FBCB2 does not use the Defense Information Infrastructure Common Operating Environment (DII COE) component called the Commserver to send messages. It uses socket connections (TCP and UDP) to transfer JVMF messages.  FBCB2 also uses specific rules to send and receive messages that mandate specific ports, transfer mechanisms, and acknowledgement requirements that the C4I Adapter must support. Presently, messages are being passed from the simulation to FBCB2, as the OneSAF models do not yet possess the capability to consume messages received from FBCB2. During OneSAF’s block C development (in Fiscal Year 2004) a more robust set of models will be completed allowing for two-way communications with FBCB2.   MappersWithin the OneSAF and WARSIM C4I Adapter “mappers” bridge a large part of the gap between the simulation and C4I sides of the adapter. Mappers are Java classes in the WARSIM C4I Adapter and XML files in the OneSAF C4I Adapter that perform a translation from the internal simulation message format to a tactical message format or vice versa. For instance, if the adapter receives a USMTF message, a translation must occur so that all of the data elements within that message are put into the correct consumable simulation format.  When a message travels from the simulation to a real C4I device a mapper converts the internal message type into a valid tactical message. Mappers handle everything from automatically inserting data into certain required fields (i.e Date Time Groups (DTG)), to conversions (i.e. Lat/Long to Universal Transverse Mercator (UTM)), to inserting correct enumerations. The WARSIM development team initially recognized the time consuming mapper generation task and developed a GUI-based tool to assist in mapper creation; however, the first generation of this tool was never completed and the mapper generation process remained cumbersome and software developer intensive. Since mappers depend on the format of the incoming simulation data and because the data formats of OneSAF and WARSIM differed OneSAF required a completely new set of mappers.  In order to simplify the mapper creation process OneSAF opted to create a second generation mapping GUI.  This along with the refactoring of the automated translation process that reduced the number of translations from five to three allowed for a simpler design and faster execution.  The new mapper GUI will allow non-software developers to create mapper; however, even with the second generation tool it is still expected that there will be cases where a software developer is necessary to generate new converter code, but this should be the exception rather than the rule.  [5].Interface ModesBoth OneSAF and WARSIM recognize two main paradigms for C4I data flow when using a simulation to stimulate real world C4I devices. The first, called Simulation Communications, routes all C4I messages (including those messages between real C4I devices not bound for the simulation) through the simulation. In this case if two Tactical Operation Centers (TOCs) are set up in the field all messages they send to one-another are first routed through the simulation.  This process allows for simulating communication effects as well as recording the message data for later AAR use. The second paradigm, World Communications, allows the real C4I devices to communicate directly. This method does not allow the simulation to impact all of the C4I communications or record all C4I data, but it saves bandwidth. During the course of the WARSIM C4I Adapter development a new unfunded requirement was added calling for this mode of operation; however, the funding was never provided and consequently only the Simulation Communications mode was implemented. As with earlier decisions, OneSAF pushed ahead and, based on its FOC requirements, decided to make the extensive and necessary modifications to support both modes of operation.      Performance EnhancementsAs the C4I team experimented with the C4I Adapter in the OneSAF integration laboratory they uncovered performance and scalability issues resulting in a significant message backlog when sending from the simulation to the C4I devices.  To reduce threading complexity and increase performance, the C4I team refactored the original threading architecture.  In its original state the C4I adapter required numerous threads, which grew exponentially by the number of real-world C4I devices connected to the adapter, to be spawned and kept alive for the duration of the C4I adapter’s execution. The new architecture replaced the miscellaneous threads with a single supervisor thread that directs worker threads to complete specific reception, translation, ordering, and sending tasks.  The number of worker threads can be sized (without recompiling) according to the supporting hardware platform and message load. [4].PortabilityThe WARSIM C4I Adapter ran solely on Sun Microsystems’ Solaris platform The software was written in Java a “platform independent” programming language, but because of WARSIM’s focus on a single platform, other reused components within the adapter such as the DII COE Common Message Processor (CMP) had only been used on the Solaris platform.  This was in direct conflict with OneSAF’s portability requirements to have the entire OOS system support platform independence (target platforms are Windows, Solaris and Linux). The OneSAF C4I Adapter team performed evaluations to ensure that all of the required products worked on Windows; then made all of the necessary code changes to support that platform. The Windows port not only expanded the number of supported operating systems, it also provided significant performance increases over what was being achieved on the Solaris platform.  The OneSAF adapter now runs on both Windows and Solaris and for the time being has a waiver for Linux until DII COE products are ported to that platform.  Monitor and ControlOneSAF -- but not WARSIM -- also required and now has a C4I Adapter Monitor and Control Tool (MCT) to manage executing C4I Adapters.  The OOS C4I Adapter team added the MCT as a separate OneSAF application with a user friendly GUI interface. The MCT can automatically find multiple adapters on the network and start, stop, or pause them. It shows what C4I devices are connected to any given adapter, the number of messages processed, and the number of messages currently in the queue to be processed. [5] ExtensibilityAnother important new capability was to allow component plugins.  These plugins, once developed, will have the ability to perform a variety of useful tasks within the adapter.  It is expected, in order to save simulation side bandwidth, that heartbeat and other low level type C4I messages will be generated within the adapter by these plugins as opposed to being implemented within the simulation. A new component called SocketComms was created that allows the adapter to more easily use socket communications to interoperate with C4I devices. The WARSIM adapter had the ability to handle socket communications (TCP and UDP), but the new SocketComms component streamlines and generalizes the process and will allow the developers to more easily add support for other socket communication types (FTP, HTTP, etc.). Code BaselineBecause of the wide range of simulation interface, mapper, mode upgrades, and extensions, the OneSAF C4I Adapter team decided to overhaul and refactor the basic architecture. This work allowed the team to enhance the adapter’s overall design flexibility, increase performance, increase usability and support both Simulation and World Communications. Many of the software components that made up the WARSIM adapter were reused and refactored and as a result this work represented a major split in the baselines between OneSAF and WARSIM. What Didn’t Change (Functionality & Design)To support the Simulation Communications Mode of operation the WARSIM C4I adapter interfaces and provides and receives services from ABCS just like any other Battlefield Operating Systems (BOS). In order to do this the adapter reuses multiple DII COE products that also reside within each of the ABCS systems. These DII COE reuse components include:The C2R (Command and Control Registry) loads and synchronizes Lightweight Directory Access Protocol (LDAP) Data Interchange Format (LDIF) addresses between the systems. The GTCS (Ground Tactical Communications Server or Commserver) transmits and receives many of the messages between the ABCS 6.x systems. The CMP (Common Message Processor) parses and creates the majority of the tactical messages that the adapter sends/receives. All of these DII COE products remain as integral components to the OneSAF adapter architecture. Although the code was largely refactored, providing second generation functional and quality characteristics, the fundamental separation of interfaces from translation capabilities persists. [4]. Even though the World Communications paradigm was not implemented by WARSIM, the operational concepts for both connectivity modes originated within WARSIM and were then applied by the OneSAF team.Creating a Common BaselinePEO-STRI’s initial vision was the creation of a common C4I Adapter between WARSIM and OneSAF.  The final objective is to integrate the C4I Adapter within other programs with similar C4I interface requirements. After the decision to reuse the WARSIM C4I Adapter on OneSAF a single combined OneSAF/WARSIM adapter team was created.  The team worked together supporting both program’s requirements while maintaining a single software baseline. Eventually the teams separated and two adapter teams emerged as well as two separate code bases.  During the split engineering level discussions and concept sharing continued.  These discussions focused at keeping a common functionality and a relatively consistent software base.  These informal engineering discussions continue today.  Even with these efforts it became apparent early on that the common C4I interface mechanism was diverging.  Today, two distinct baselines exist and continue to evolve.  Some of the barriers to achieving a common C4I adapter stem from technical complexities, but most come from programmatic issues.  These issues revolve around the essential requirement to maintain a single software baseline for all the associated users. This drive for a common baseline creates a number of interesting questions not easily answered when trying to control the risk associated with program level dependencies.   For example:What is the expected Return On Investment (ROI) of a common baseline?  How is the ROI calculated for legacy programs, programs in the middle of development, and new programs?Who manages and develops the common baseline?  Where do their responsibilities begin and end?How are new requirements generated?How are competing and conflicting requirements handled?  How will open source requirements be handled and how integrating externally developed enhancements be handled?Answering these questions is beyond the scope of this paper, but certainly must be addressed to justify the coordination, discipline, and effort to harness multiple baselines and manage them in an efficient manner. Even in the microcosm of OneSAF and WARSIM where the programs have independent schedules, priorities, and requirements; some are common while others are not (OneSAF has a requirement to distribute source code while WARSIM does not) these are tough questions to answer to the satisfaction of both programs.  The process is neither easy nor quick and jumping to conclusions too early may be more costly in terms of collaboration and rework rather than providing cost savings.  SummaryThis paper started with a quick look at both the OOS and WARSIM simulation to C4I interface requirements.  We then moved to exploring the specific adapter characteristics inherited from WARSIM and the magnitude of change necessary to meet OneSAF requirements.  The final section highlights some of the difficulties and programmatic issues of keeping two independent C4I adapter development efforts synchronized even after they started from a common base.As a final point, leveraging the experience of the original developers and avoiding the pitfalls they may have experienced first hand is a critical part of any reuse effort   Within OneSAF the results gained from relying on an adapter team that started with a functioning product and had an established experience base allowed them to identify specific functional and quality deficiencies and correct them early in the OneSAF development lifecycle.  This is in sharp contrast to a “big bang” alternative of starting from scratch and engineering requirements, designs, and implementations without the benefit of insight, designs, and code from a working product.  AcknowledgementsThe authors would like to thank the OneSAF C4I Adapter development team for their experience, expertise, forward thinking, and the adapter enhancements that are summarized in this paper.References[1]	Brennan, Joseph; Smith, Eddie. (2001)  “M&S-C4ISR Interoperability/Synchronization Issues and Potential Solutions”, 01S-SIW-094, 2001.[2]  OneSAF Government Reuse Direction and Guidance Document.  2001. https://www.onesaf.net/Architecture_and_Integration/Archive/GovtInfo/govt_info.html.[3]	OneSAF Operational Requirements Document Version 1.1, Dated 21 May 2001. TRADOC.[4]	OneSAF Product Line Architecture Specification Volume 2 Revision A, Dated 26 June 2003, located at https://www.onesaf.net/Architecture_and_Integra tion/SystemsEngineering/SystemArchitecture/PLAS/OneSAF_PLAS_Volume_II.doc[5]	OneSAF Product Line Architecture Specification Volume 2 Revision B, Dated 02 August 2003 (Working Copy), located at   HYPERLINK "https://www.onesaf.net/Architecture_and_Integration/SystemsEngineering/SystemArchitecture/PLAS/Working_Copy_OneSAF_PLAS_Volume_II.doc" https://www.onesaf.net/Architecture_and_Integration/SystemsEngineering/SystemArchitecture/PLAS/Working_Copy_OneSAF_PLAS_Volume_II.doc[6] Program Profiles Weapon Systems 1999 for FAADC2. [7]  Program Profiles Weapon Systems 2001 for ABCS, AFATDS, AMDPCS, FAADC2, ASAS, MCS, CSSCS, GCCS-A. Located at  HYPERLINK "http://www.defensedaily.com/progprof/army/amdpcs.pdf" http://www.defensedaily.com/progprof/army/amdpcs.pdf[8]  Topor,  Lori.  C4I Version Supported Document Updated 11/04/03.  OS C4I Interface Task Order web-page. Located at https://www.onesaf.net/C4I/OneSAF%20information/C4I_Device_Versions_supported.doc[9]	WARSIM Story,  HYPERLINK "http://www.peostri.army.mil/ PRODUCTS/WARSIM/STORY/" http://www.peostri.army.mil/ PRODUCTS/WARSIM/STORY/[10]	WARSIM Operation Requirements Document Version 3.7, Dated 4 Sept. 1998, located at  HYPERLINK "http://leav-www.army.mil/nsc/warsim/ord/" http://leav-www.army.mil/nsc/warsim/ord/ [11]	Wittman, Rob; Kelley, Hugh; Cane, Sheila. (2002) Simulation to C4I Support Plan Development: Experience Report.  Paper 03S-SIW-135. 2003.Author BiographiesROBERT L. WITTMAN JR. currently works for the MITRE Corporation supporting the OneSAF program.  He has been part of the U.S. DoD M&S community since 1990. He holds a B.S. in Computer Science from Washington State University, a M.S. in Software Engineering from the University of West Florida, and a Ph.D. in Industrial Engineering from the University of Central Florida. STEPHEN C. LOPEZ-COUTO is an engineer for the US Army’s Program Executive Office for Simulation, Training and Instrumentation (PEO STRI). He has been supporting the OneSAF program since early 2000. He holds a B.S. Degree in Computer Engineering from the University of Central Florida. LORI TOPOR is a systems engineer / Program Manager for Northrop Grumman Information Technology (NGIT).  She has been working simulation programs for the past 10 years; leading C4I Adapter efforts for WARSIM, WIM, OneSAF and IEWTPT since early 1998.  She holds a B.S. Degree in Computer Science and Mathematics from the University of Southern Mississippi.