M&S-C4ISR Interoperability/Synchronization Issues and Potential Solutions Joseph M. Brennan Jr.U.S. Army STRICOM AMSTI-ED12350 Research ParkwayOrlando, FL   32826-3276(407) 384-3855, DSN 970joe_brennan@stricom.army.mil Eddie B. SmithNAWCTSD Code 491712350 Research ParkwayOrlando, FL 32826-3224(407) 380-4130, DSN 960eddie_smith@stricom.army.milKeywords: Army Battle Command System (ABCS); Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance  (C4ISR); Synchronization; Data; DII COE; Interoperability; Warfighter’s Simulation (WARSIM);ABSTRACT: Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance  (C4ISR)  systems and simulations each support a  variety of formats, transmission protocols, and baselines, and are not synchronized with respect to development schedules and capabilities supported.  Some commonality across C4ISR systems has resulted from the Defense Information Infrastructure (DII) Common Operating Environment (COE).  Some commonality across Modeling and Simulation (M&S) systems has resulted from simulation standards  such as Distributed Interactive Simulation (DIS) and High Level Architecture (HLA).  However, significant issues currently remain which prevent simulations from seamlessly interoperating and maintaining synchronization with C4ISR systems to include:  data incompatibilities between simulations and C4ISR systems; design of C4ISR system components which preclude “out of the box” use by simulations; design of C4ISR systems such that they do not readily support database synchronization,  checkpoint restart, time synchronization, and time management; design of C4ISR components such that simulations cannot be registered within C4ISR addressing mechanisms; and the inability of current C4ISR systems to support a “simulation mode” of operation. Challenges to achieving M&S-C4ISR synchronization include:  the co-existence of Army Battle Command System (ABCS) and independent “stovepipe” C4ISR version baselines, the inability of  simulations to “keep up” with C4ISR systems capabilities and operational “behaviors”, and the significant lead times required to develop  and  upgrade simulations such that they can adequately interface with newly released versions of C4ISR systems.  In addition to addressing the above issues, potential solutions for how to resolve these issues and current findings of the Warfighter’s Simulation (WARSIM) team in supporting C4ISR systems are discussed. IntroductionModeling and Simulation (M&S) and Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) Interoperability/ Synchronization issues have limited the ability to support C4ISR related testing and training needs.   However, communication of key issues and potential solutions may provide a means by which to resolve these issues.  In the sections that follow, the following will be specifically addressed:  C4ISR and M&S Data Formats, M&S-C4ISR Interoperability Issues, M&S-C4ISR Synchronization Issues, Potential Solutions, and the WARSIM Team’s findings with respect to C4ISR.     C4ISR and M&S Data FormatsC4ISR systems and M&S systems each support several distinct data formats.  C4ISR systems generally support multiple standard and non-standard data formats, many of which are not common across C4ISR systems. Simulations have evolved to be compatible with a select set of standard simulation data formats.  Specifics regarding C4ISR data formats are discussed in the following section.  C4ISR Data FormatsEach C4ISR system has it’s own internal system specific database format and system specific C4ISR message formats.  Select C4ISR systems also support standard message formats (e.g., United States Message Text Format (USMTF)) and a standard database format (i.e.,  the Joint Common Database (JCDB) for the ABCS 6.x baseline).  Some of the specifics with respect to the Maneuver Control System (MCS), All Source Analysis System – Reconfigurable Workstation (ASAS-RWS), Advanced Field Artillery Target Data System (AFATDS), Air and Mission Defense Work Station (AMDWS), and Combat Service Support Control System (CSSCS) C4ISR systems are addressed below.    MCS: supports USTMF as the system specific message format for MCS-to-MCS communications supports the JCDB as its own internal system specific database format supports ABCS interoperability via standard message formats (e.g., USMTF, JVMF, etc.) and via a standard database format (i.e., the JCDB) for the ABCS 6.x baseline supports interoperability with FBCB2 via the Embedded Battle Command (EBC)ASAS-RWS:supports External Database Coordination (EDC) and W007 as the system specific formats for ASAS-RWS-to-ASAS-RWS communications -- W007 is the primary system specific format for the ABCS 6.x version of ASAS-RWS and beyond  supports it’s own internal system specific databasefor the ABCS 6.x baseline supports ABCS interoperability via standard message formats and the JCDB AFATDS:supports Request Object (RO) as the system specific format for AFATDS-to-AFATDS communications  supports VMF Package 11 – a standard message format used by several systems contained within the fire support family of systemssupports it’s own internal system specific databasefor the ABCS 6.x baseline supports ABCS interoperability via standard message formats and the JCDBAMDWS:supports a system specific format for AMDWS-to-AMDWS communicationssupports the Forward Area Air Defense (FAAD) Data Link (FDL) format – a standard message format used by various systems contained within the FAAD Command, Control, and Intelligence (C2I) family of systemssupports it’s own internal system specific database for the ABCS 6.x baseline supports ABCS interoperability via standard message formats and the JCDBCSSCS:supports “USMTF like” as the system specific format for CSSCS-to-CSSCS communications  supports it’s own internal system specific databasefor the ABCS 6.x baseline supports ABCS interoperability via standard message formats and the JCDBSimulation Data FormatsSeveral simulation formats are currently in existence today or are under development.  These  include the following:Command and Control Simulation Interface Language (CCSIL) – Used by many simulations/interfaces to include Digital Battlestaff Sustainment Trainer (DBST), Protocol Interface Unit (PIU)/Enhanced Protocol Interface Unit (EPIU), Fire Simulator (FIRESIM), Close Combat Tactical Trainer (CCTT), and Eagle. Although several simulations use CCSIL, this simulation format has never been “officially” adopted as a standard. Distributed Interactive Simulation (DIS) – Used by many simulations to include DBST, CCTT, Janus, Extended Air Defense Simulation (EADSIM), and Modular Semi-Automated Forces (ModSAF).  DIS enabled heterogeneous simulations to interoperate.High Level Architecture (HLA) is the current standard simulation architecture.  HLA is currently supported by several simulations to include Eagle and ModSAF, and will be supported by WARSIM, JSIMS, and OneSAF.M&S-C4ISR Interoperability IssuesMost M&S-C4ISR Interoperability issues result from the fact that simulations and C4ISR systems are developed independently in support of distinct sets of requirements which do not respectively address the needs of each.  Thus simulations and C4ISR systems currently must be integrated “after the fact”.  Historically, the burden of designing components such that they could support C4ISR systems were placed on the simulation community (not the C4ISR community). Thus, the level of interoperability between M&S and C4ISR systems were directly influenced by the ability of simulations to support modeling of and interfaces to existing C4ISR systems/networks.  However, some progress has been made for ensuring interoperability is a shared responsibility between the M&S and C4ISR communities. This progress is evident in the requirements documents of C4ISR systems in which some simulation related requirements are starting to be addressed, the emphasis on systems interoperability within the recently released Department of Defense (DoD) 5000.2 policy on Acquisition Reform, and ongoing activities within the Simulation-to-C4I Interoperability (SIMCI) Consortium. However, there is still a long way to go to resolve the interoperability issues that currently exist. Significant tradeoffs exist between simulation fidelity, training benefit, and overall program costs.  For example, it is not cost effective for simulations to identically replicate C4ISR systems/networks. Similarly it is not  cost effective for simulations to support all data formats for all C4ISR systems.  However, both of these cases would be considered ideal from the training perspective if cost was not a factor and technology guaranteed that performance would not be an issue.  The following are currently some of the more significant M&S-C4ISR interoperability issues that currently exist:Database synchronization.  Database synchronization between C4ISR systems and simulations is not  supported in an automated fashion:  C4ISR systems that are part of the ABCS 6.x baseline currently contain internal system specific databases as well as the JCDB.  It is noted that “upload” of JCDB data from simulations to ABCS systems will not support Training Audience needs (the lone exception being the MCS system in which the JCDB serves as it’s internal system specific database).  This is because ABCS C4ISR systems generally “push” data to the JCDB, but rely on their individual system specific databases to handle mission related data.  There currently exists no plan for the JCDB to replace ABCS C4ISR internal system specific databases, however, the authors feel that pursuit of this objective has strong potential for improving M&S and C4ISR interoperability. C4ISR systems do not have automated mechanisms to allow “upload” of simulation data to internal system specific databases.ABCS 6.x security restrictions do not allow public access to C4ISR internal system specific databases.  The DII COE Data Collection Module (DCM) has recently been introduced to support “pulling” of data from ABCS internal system specific databases.   The DCM is currently the only means by which simulations can gain access to ABCS 6.x system databases. Database synchronization is currently a manual process requiring several hours to achieve before a given exercise can be initiated.  It is anticipated that the Army Standard Database Synchronization Module (ASDSM) effort will improve database synchronization between simulations and C4ISR systems [1]. C4ISR systems are not designed to provide a “simulation mode” of operation. “Simulation mode” of operation for C4ISR systems would provide capabilities to support mission planning, battlefield visualization, “replay” of scenarios/vignettes, after action reviews, and classroom seminars.  Simulation mode of operation would also provide C4ISR systems the capability to “toggle” between simulation mode (for training purposes) and operational mode (for real world operations) without the need for spending several hours to purge and reinitialize C4ISR systems databases. It is noted that adverse consequences could result if simulation data is not purged correctly and completely because their exists the risk of simulation data being confused with real-world data.  The current manual process used to purge and reinitialize C4ISR systems databases increases this risk substantially.  Deployed units on real world missions do not have the luxury of expending several hours to reinitialize C4ISR system databases, and require the capability to train and immediately “switch” to real-world data when required. Providing a simulation mode of operation would ensure that soldiers can  participate in challenging and realistic training  using their actual C4ISR equipment while maintaining the ability to readily activate the “go to war” configuration in the event of actual emergencies.  M&S-C4ISR Synchronization IssuesMost M&S-C4ISR synchronization issues primarily result from the fact that via the current paradigm of C4ISR interoperability being primarily an M&S responsibility (and not a shared responsibility between the M&S and C4ISR communities), simulations cannot cost effectively support design and development activities until after stable target C4ISR systems versions are released.  This results in  significant lead times for using simulations to support newly released versions of C4ISR systems.  Simulations currently have the added complication of having to decide which “go to war” Army to support since there currently exist two distinct baselines of C4ISR systems that support the Army:  one baseline that currently supports the modernization efforts at Fort Hood, and another separate baseline that supports the remainder of the Army until replaced by the modernized baseline.  The following sections address M&S-C4ISR synchronization issues in more detail. Version/Baseline Synchronization Issues The Army is currently supporting two primary distinct C4ISR baselines via each of the C4ISR Project Managers (PMs), and will continue to support these baselines over the next decade and beyond.  For the purposes of this paper, the authors refer these as the “ABCS baselines” and the “independent baselines” (others have referred to these as digital versus analog respectively, while yet others refer to the independent baselines as “stovepipes”).  ABCS baselines have been utilized primarily at Fort Hood to support Army modernization activities (ABCS 4.x/6.x/7.x systems).  Independent C4ISR baselines are the C4ISR systems that are currently being used to support the majority of the Army (outside Fort Hood) while the ABCS modernization effort is being undertaken. The ABCS and independent C4ISR baselines will co-exist in the Army until the ABCS baselines have been fully fielded.  Both new hardware and software for each of the component C4ISR systems will be fielded as part of the ABCS baseline.  Current indication is that ABCS baselines will begin fielding to Army units outside of Fort Hood around January 2005 and will require a decade to fully field (2005-2015) [2].  Thus part of the “go to war” Army will be using the ABCS fielded baseline of C4ISR systems while the remainder of the “go to war” Army will be using the independent fielded baselines of C4ISR systems.  As a consequence, simulations will need to support both baselines of systems to successfully support the entire “go to war” Army at least until the ABCS baseline has been fully fielded.  The simulations which support the ABCS baselines will also be in a position to support digitization/modernization exercises.  Some of the differences between the ABCS and independent baselines of C4ISR systems are described below.ABCS baselines:The ABCS baselines of C4ISR systems will be fielded to the Army as a system of systems associated with a specific ABCS version (ABCS 6.x, ABCS 7.x, etc). Currently ABCS 6.x is the version being supported by the ABCS baseline, however, ABCS will continue to evolve to versions such as ABCS 7.x and 8.x. The ABCS baselines of C4ISR systems include synchronized versions of the following C4ISR systems: MCS, MCS Lite, ASAS-RWS, ASAS Lite, AFATDS, FAAD Engagement Operations (EO), AMDWS, CSSCS, Tactical Airspace Integration System (TAIS), and Force XXI Battle Command Brigade and Below (FBCB2). The ABCS baselines provide improved automated digital horizontal interoperability between heterogeneous C4ISR systems (e.g., MCS sharing info with AFATDS, etc) via standard data formats such as USMTF/JVMF and a standard database (i.e., the JCDB for the ABCS 6.x baseline).  Much of the focus of ABCS has been on digitally sharing information between heterogeneous C4ISR systems (e.g., MCS and AFATDS, etc.)ABCS baselines support a communications architecture which utilizes Tactical Operations Center (TOC) servers, communications servers (commonly referred to as DII COE “comms servers”), and dynamic addressing mechanisms (supported by the DII COE Command and Control Registry (C2R)). The fielding schedule for the ABCS baselines are currently as follows [2]:January 2001 -- Fielding of ABCS to 4th Infantry Division (4ID) at Fort Hood.  4ID is the First Digitized Division (FDD) No Later Than (NLT) January 2004 -- Fielding of ABCS to 1st Calvary Division at Fort HoodNLT January 2005 -- Fielding of ABCS to 3rd Armored Cavalry Regiment & III Corps Headquarters (Fort Hood).  III Corps will be the First Digitized Corps (FDC)2005-2015 – Fielding of ABCS baselines to the Army outside of Fort HoodIndependent baselines.  The independent baselines of C4ISR systems are fielded as individual systems on independent schedules (e.g., the fielding schedule for ASAS-RWS is different from the fielding schedule for CSSCS, etc.), and are not fielded as a “system of systems” as is done with the ABCS baselines. The independent baselines of C4ISR systems supported in the field primarily include independent versions of the following C4ISR systems:  ASAS-RWS, AFATDS, FAAD Engagement Operations (EO), AMDWS, and CSSCS (Note:  MCS is currently not a fielded system).  The independent baselines of C4ISR systems supported in the field have been primarily designed to operate as individual Battlefield Functional Area (BFA) systems and not across BFAs.  Thus, these systems currently do not support the JCDB and may only partially support standard data formats such as USMTF and JVMF, depending on the extent by which the cross-BFA integration activities being performed as part of the ABCS baseline have been maintained.  The primary means by which C4ISR interoperability is achieved in the ABCS 6.x baseline is via the JCDB. The independent baselines of C4ISR systems supported in the field provide  communications architectures which are more static in nature (e.g., address books, sendmail, etc), and there exists no concept of centralized TOC servers. In general, releases of independent baselines of C4ISR systems supported in the field are not backward compatible with earlier versions of the same system.  This is primarily because each C4ISR system essentially supports one baseline of software for the entire Army. The preceding version of a given C4ISR system is replaced by the latest fielded version (average fielding time generally ranges from 3-12 months -- most Continental United States (CONUS) locations are fielded within the first few months).  It is noted that although independent baselines of C4ISR systems supported in the field do not support backward compatibility, this significantly affects the ability of simulations to maintain synchronization with C4ISR systems.  Schedule Synchronization Issues Long Lead Development.  Both C4ISR systems and simulations are long lead procurements in terms of development time, requiring multiple CSCIs to perform individual builds prior to integrating all of these CSCIs together.  For complex simulations, the integration, test, and validation of CSCIs can take a year or more after development activities have been completed.  Because no new functionality can be introduced during the integration/test phase without introducing integration risk, there exists a substantial probability for C4ISR systems being supported by a given simulation to no longer exist in the field upon completion of integration, test, and validation activities.  This is primarily because all new functionality must be completed prior to start of the integration phase to ensure a timely and successful integration of the simulation’s CSCIs and hardware.  Thus, simulation development will always significantly lag behind C4ISR systems development schedules unless specific actions are taken to help reduce this lead time (discussed under paragraph 5). Long Lead Upgrades.  Simulations generally require several months to perform the upgrades required to synchronize with C4ISR versions that are newly released.  Upgrades are required to the simulation C4ISR system interfaces and the simulation models representing the C4ISR systems/networks to ensure specific actions taken by the training audience result in accurate and timely responses by the simulation and vice versa.  Simulations must be able to support full (e.g., a Corps) and/or selective training (e.g., a division “slice”), and must be robust enough to simulate each of the remaining components such that the training audience cannot tell “simulated” units from “live” units.  Thus simulations must be able to provide “C4ISR like” functions and provide interfaces to the fidelity required to support realistic training.  This is one of the primary reasons that simulation interfaces currently have a need to support BFA system specific data formats (e.g.,  for AFATDS-to-AFATDS communications the RO format, for CSSCS-to-CSSCS communications the “USMTF like” format, etc).  It is noted that one of the primary objectives for training simulations is to provide adequate training on C4ISR systems with minimal overhead (support staffs, equipment, etc).  Utilizing actual C4ISR systems within the simulation cells is not considered to be an appropriate alternative by the user community.  Thus, simulations must adequately represent the C4ISR systems/networks and adequately support simulation interfaces to achieve this objective.  Because of some of the issues discussed previously in this paper and in the follow-on sections, a significant amount of lead time is currently required to upgrade simulations such that they can support the latest “go to war” C4ISR systems fielded to the army.  Potential SolutionsThis section presents potential solutions for resolving the M&S-C4ISR interoperability and synchronization issues discussed previously.  Support of the following will minimize the cost, schedule, and effort required to adequately support C4ISR systems via simulations:  Require C4ISR systems to provide a “simulation mode” of operation.  Desired features include:Checkpoint/Restart:  Checkpoint/Restart would enable C4ISR systems to go back in time to reinforce training by allowing “replay” of scenarios/vignettes.  Checkpoint/Restart would also facilitate rapid recovery from system failures during an exercise, and aid in troubleshooting.Time Synchronization.  Time synchronization would enable C4ISR systems to go forward in time, support faster than real time (e.g., “seminar mode”), and maintain synchronization of C4ISR systems with simulation time (time of day, etc).Time Management.  Time Management would enable the C4ISR systems to be “time managed” from a central location.  Time Management functions include “start”, “stop”, and “pause”.  Database Synchronization Features (addressed previously under paragraph 3.a. of this paper)Require C4ISR systems to develop their respective components such that interoperability with  simulations is better accommodated:Require C4ISR systems to define and publish stable Application Programmer’s Interfaces (APIs) “up front” (as a first step prior to actual C4ISR system development).  This would enable simulations to use  the same APIs as the C4ISR systems themselves prior to a C4ISR version release, and enable both the C4ISR system developers and simulation developers to simultaneously develop enhancements to their respective systems while maintaining the ability to interoperate.  The JCDB is a good example of a product which uses this approach.Require C4ISR systems to define and publish stable data standards “up front” (as a first step prior to actual development), to include migrating system specific “stovepipe” data formats to standard data formats or establishing standards for these formats. This would enable simulations to use the same data standards as the C4ISR systems themselves prior to a C4ISR version release, and enable both the C4ISR system developers and simulation developers to simultaneously develop enhancements to their respective systems while maintaining the ability to interoperate.  The MCS system is a good example of a C4ISR system which has used this approach.  MCS exclusively uses standard message formats (e.g., USMTF) and a standard database (i.e., the JCDB).Require that DII COE (and other) C4ISR software products be designed such that they can be used “out of the box” as GOTS/COTS products by simulations. This would maximize interoperability between C4ISR systems and simulations, minimize the amount of schedule/effort required to upgrade simulations to new C4ISR version releases, and minimize the recurring maintenance costs associated with modifying DII COE components or developing DII COE “like” components such that they adequately meet simulation needs.  Designing DII COE (and other) C4ISR software products such that they support parallel processing would greatly improve the ability of simulations to use these products “out of the box”.  Parallel processing would enable simulations to take advantage of  multi-threading capabilities and the ability to support multiple instantiations on a single platform.  As indicated by reference [3], the DII COE is key for providing a mechanism by which C4ISR systems and simulations can interoperate, however, currently most DII COE products fall short of meeting both C4ISR and simulation related requirements.Require complete documentation for C4ISR systems and make this documentation publicly available.  Require also that  draft documentation be provided for development in progress.  The availability and quality of C4ISR related documentation directly influences the extent to which simulations and C4ISR systems  can interoperate.  Documentation should provide details to include all system specific message formats, protocols, database schemas, data dictionaries, and interface specifications.Require each of the C4ISR systems to document a Simulation Object Model (SOM) to describe all data which can be accessed and utilized by simulations such that they can interoperate with each C4ISR system. For the ABCS modernization effort  digital horizontal interoperability between heterogeneous C4ISR systems (e.g., MCS sharing info with AFATDS, etc) was accomplished via the use of common standard message formats (e.g., USMTF) and a common database (i.e., the JCDB).  To achieve digital horizontal interoperability, a determination had to be made as to which specific data elements would be shared between the various C4ISR systems, and the specific data standards that would be commonly supported by each. A similar approach needs to be taken for simulations (i.e., determining which data elements will be supported for each C4ISR system by simulations, and which specific data standards will be used).Establish a simulation BFA such that simulations can send and receive data like the C4ISR BFAs and be registered within addressing mechanisms such as the C2R.  This would require that these addressing mechanisms be expandable to include any units which might be represented by the simulation.  For example: In the ABCS 6.x system  during the TOC server boot-up process, all static TOC Internet Protocols (IP) hosts are recognized and checked for connectivity. Simulation host nodes to include units represented by the simulation need to be contained within the C2R as a part of this process to ensure C4ISR equipment can communicate with simulated units.Successful implementation of the ASDSM.  The WARSIM and DCM teams plan to support the development of the ASDSM via the FY01 SIMTEC program – It is anticipated that the effort will be initiated around the March 2001 timeframe.  The ASDSM is addressed in detail within reference [1].  Integrate simulation components as part of the DII COE.  Reference [3] presented four design options for simulation and DII COE based C4ISR system “interaction”.  Its option 4 was for simulations to be integrated into the DII COE, thus merging components of the simulation infrastructure with DII COE components.  The authors of this paper believe that this option would help to resolve some of the issues previously discussed.Establish a central Simulation/C4ISR organization to provide common C4ISR services which can be readily used to service the simulation community.  There exists a need to establish such an organization as the primary technical interface for coordinating information transfer between the simulation community and each of the C4ISR PMs.  Rationale:  The availability of quality C4ISR related documentation and other technical information directly influences the extent to which simulations and C4ISR systems can interoperate, and influences the lead time required to upgrade simulations such that they can maintain synchronization with C4ISR systems.  The following are some of the key benefits that would be derived from using a central organization to provide common services for C4ISR: Every request for C4ISR related technical data can be shared among the simulation community "across the board", thus the C4ISR PMs won't receive multiple requests for the same information from multiple sources (currently an issue). C4ISR PMs are reluctant to respond to repeated requests for documentation and technical information.Central organization can coordinate Technical Interchange Meetings (TIMs) with the C4ISR PMs as required to meet common needs of the simulation community.Position’s simulation/C4ISR organization as "the place to go" for all C4ISR related technical information needs.Each of the C4ISR PMs will be more motivated to be supportive since it means that they’ll not have to respond to multiple requests for information and technical interchanges.   Promotes better Horizontal Integration (HI) between the simulation and C4ISR communities, and provides a central means by which the simulation and C4ISR communities can maintain common aggregate level awareness regarding simulation and C4ISR system needs and applicable requirements for each.  In addition, the simulation community will become more aware of where technical C4ISR related information shortfalls exist, and be in a position to work the more significant issues.The Return On Investment gained from this service will be significant and be realized nearly immediately. The authors of this paper are confident that an implementation plan can be drafted in coordination with the C4ISR PMs to support such an effort.  Funding will most likely be required for the C4ISR PMs (to support development of required documentation and for technical consultation support).  Funding will also be required for Government/Contractor team support to manage the process, manage/distribute the data, and set-up a central repository for archiving data and making this data readily available. For each C4ISR system, assess the differences between the set of data elements supported by given C4ISR system specific (or “stovepipe”) data formats with the set of data elements supported by given C4ISR standard data formats.  This assessment would enable the simulation and C4ISR communities to become more aware of what the differences are between these, and provide a means by which to identify some of the more critical data elements contained within the system specific “stovepipe” data formats that should be migrated into standard data formats or established as standards themselves to enable simulations to more readily support desired C4ISR capabilities.  The following tradeoffs currently exist between simulations which plan to pursue C4ISR standard data formats, and those which plan to pursue  system specific “stovepipe” data formats: Simulations that plan to support C4ISR standard data formats:  will enjoy a much reduced lead time for development.  This is primarily because the data standards are well documented, are publicly available, are stable (i.e., does not change much from one given C4ISR system version to the next), and are often shared across multiple components (e.g., for the ABCS baseline, USMTF can be used to communicate between each of the BFA component C4ISR systems).  will be better insulated from changes to C4ISR systems and are likely to continue interoperating across multiple C4ISR versions with minimal upgrades.   will enjoy a significant reduction in maintenance costs primarily due to the combination of items i. and ii. above.will be limited in the C4ISR functionality which can be supported because many of the data elements contained within the system specific “stovepipe” data formats are not supported within the standard data formats,  (including much of the C4ISR BFA related mission critical data.)  Simulations that plan to support C4ISR system specific “stovepipe” data formats:  will require a significant amount of lead time for development.  This is because most C4ISR systems use system specific data formats which are not well-documented, stable, or publicly available.will not be insulated from changes in C4ISR systems resulting in the requirement for continual upgrades.  As noted previously, from one C4ISR system version to the next, the system specific data formats and database formats generally change significantly.  Thus, given one or more of the simulation supported C4ISR systems evolve, upgrades to simulations will be required to maintain the ability to adequately support these C4ISR systems.     will require significantly greater maintenance costs due to the combination of items i. and ii. above.will support a significant amount of C4ISR functionality for a given C4ISR version, and will be much more supportive of the “train as you fight” notion.To obtain the best combination of standard and system specific “stovepipe” data formats (i.e., items 1) and 2) above), C4ISR data contained within system specific “stovepipe” message formats and system specific databases need to either be:migrated to well-documented standard message formats and database formats such as USMTF and the JCDB or,established and stabilized as standard message and database formats themselves  The first option provides the best solution for simulations because it reduces the number of different data standards that must be supported. Option 2) provides an improved solution over what is currently available, but would require that simulations support multiple standard formats.   It is recommended that the results of the data assessment proposed above be documented and maintained for the M&S and C4ISR communities.  The resulting document would form the basis by which tradeoffs can be assessed among the various data formats which can be supported by simulations, and the adequacy of testing/training which can be provided for each C4ISR system.  Potential candidates for development of such a document include the Simulation-to-C4I Interoperability (SIMCI) consortium and the Simulation Interoperability Workshop (SIW) C4I Study Group.   WARSIM’s C4ISR Findings Some of the WARSIM team’s C4ISR findings to date include the following:FAAD EO system. The FAAD EO system provides mandatory receipts of F-0 messages in an Local Area Network (LAN) environment.  Although the LAN FDL interface is considered to be a User Datagram Protocol (UDP) packet,  additional header and routing information in front of the F-0 message is required. The bit layout for this information, as well as the entire LAN packet is compiler specific and is undocumented.  From the FAAD EO standpoint, this is not considered an issue since all FAAD EO nodes in the current version baseline use the same compiler. FAAD representatives have indicated that between adjacent FAAD units contained within the training audience (TA), these units communicate via the TADIL-B format; Thus, WARSIM will have to support the serial connection for this TADIL link for TA-to-TA interactions of adjacent units.The fielded FAAD EO 5.1 version is actually a merged 5.1/5.2 version.  This merged version will enable FAAD EO to support both the independent (version 5.1) and the ABCS 6.x baselines’ (version 5.2) communications architectures with the same FAAD EO system.  Many of the other C4ISR systems associated with ABCS, maintain separate baselines. Item 1) above illustrates one example of the issues created when adequate documentation is not made publicly available.   Whenever this situation arises, direct support from the C4ISR development contractors must be obtained to resolve simulation interface/modeling issues.    AMDWS system.  The AMDWS system utilizes a system specific “stovepipe” message format which cannot currently be supported by simulations.  The AMDWS “stovepipe” message is an emailed “.zip” file which can only currently be interpreted by the AMDWS system itself.  Thus, if the AMDWS system specific “stovepipe” format must be supported for a given exercise then currently the only solution is to install AMDWS systems so this functionality can be provided.  As noted previously, use of C4ISR systems in the simulation cell is not considered to be an acceptable solution from the user community’s perspective.  The WARSIM team’s IOC solution will be to support the FDL format which contains only a percentage of the data elements/capabilities supported by the AMDWS  system.The AMDWS issue identified above illustrates one example of the issues created when adequate documentation is not developed or made publicly available. It further illustrates the rationale for requiring C4ISR systems to “migrate” their “stovepipe” and proprietary data formats to  well-defined and publicly available data standards. As noted under item 6.a. above, whenever insufficient documentation is available, direct support from the C4ISR development contractors must be obtained to resolve simulation interface/modeling issues.  As things currently stand, the lead time and maintenance costs for developing and upgrading simulations such that they can adequately support a given version release of AMDWS via it’s system specific “stovepipe” data format will always remain significant until this issue is resolved.  WARSIM’s FDL solution will only provide a partial capability for supporting the AMDWS system, however, upgrade costs/schedules will be minimal as compared to the upgrade costs/schedules associated with supporting the system specific “stovepipe” AMDWS format because FDL is a stable standard message format. CSSCS system.The CSSCS system specific “stovepipe” format is not a defined format although, it is considered to be “USMTF-like”.  Thus, simulation developers must populate CSSCS with data, generate messages, reverse engineer outputs, and validate these outputs conform to the database schema for the target CSSCS versions to be supported. CSSCS sources have indicated that in the future,  Battalion level CSSCS systems will be fielded to the Army.  Current indication is that different CSSCS data elements will be required for support of Battalion level CSSCS systems, thus simulation modelers and C4ISR interface developers  will need to monitor this closely to ensure the Battalion level CSSCS system will be adequately represented/supported.  PM CSSCS sources recommended that WARSIM initially interface to the CSSCS 4.4 system  instead of CSSCS version 4.1 (the current independent baseline fielded version).  This was because the CSSCS “USMTF like” format and the database schema for version 4.4 will be almost identical to the fielded independent baseline version of CSSCS (version 4.6) which will be the fielded version by WARSIM’s Initial Operational Capability (IOC).  PM CSSCS projects that the system specific “stovepipe” messages and the database schema for CSSCS will remain relatively constant beyond version 4.6 in the near term.  The CSSCS 4.6 system will be fielded to the Army using the ABCS 6.x/7.x communications architecture (e.g., comms server, C2R, etc) for support of CSSCS-to-CSSCS communications.Item 1) above illustrates one example of the issues created when adequate documentation is not developed or made publicly available, and further illustrates the rationale for requiring C4ISR systems to “migrate” their “stovepipe” and proprietary data formats to  well-defined and publicly available data standards. As noted under item 6.a. above, whenever insufficient documentation is available, direct support from the C4ISR development contractors must be obtained to resolve simulation interface/modeling issues.  As things currently stand, the “reverse engineering” effort required to determine the format of CSSCS messages will not be able to be initiated until after a stable version of the target CSSCS system has been released.  Once the format has been “decoded”, the required software development activities can be initiated.  Thus, the lead time for upgrading simulations such that they can adequately support a given version release of CSSCS will always remain significant until the issue is resolved.  AFATDS system. The AFATDS system utilizes a system specific “stovepipe” message format (i.e., RO) which cannot currently be easily supported by simulations.  If the RO format must be supported for an exercise then currently the only solution is to install AFATDS systems so this functionality can be accommodated. As noted previously, use of C4ISR systems in the simulation cell is not considered to be an acceptable solution from the user community’s perspective.   The WARSIM team’s IOC solution will be to support the VMF Package 11 format which contains only a percentage of the data elements/capabilities supported by the RO format. The AFATDS issue identified above illustrates one example of the issues created when adequate documentation is not developed or made publicly available. It further illustrates the rationale for requiring C4ISR systems to “migrate” their “stovepipe” and proprietary data formats to  well-defined and publicly available data standards. As noted under item 6.a. above, whenever insufficient documentation is available, direct support from the C4ISR development contractors must be obtained to resolve simulation interface/modeling issues.  As things currently stand, the lead time and maintenance costs for developing and upgrading simulations such that they can adequately support a given version release of AFATDS via it’s system specific “stovepipe” data format will always remain significant until this issue is resolved.  WARSIM’s VMF Package 11 solution will only provide a partial capability for supporting the AFATDS system, however, upgrade costs/schedules will be minimal as compared to the upgrade costs/schedules associated with supporting the RO format because VMF Package 11 is a stable standard message format. ASAS-RWS system.   The WARSIM team’s findings with respect to ASAS-RWS are as follows:  The W007 is the primary system specific “stovepipe” format for the ABCS baseline, but this format is not currently supported for the independent fielded baselines.  The EDC format is currently the primary format used to support the independent fielded baseline of ASAS-RWS.MCS system.   It has been determined that the FBCB2 feed for EBC is not via standard JVMF messaging, but an EBC “format” which is essentially JVMF without the header information. The MCS system currently installs the EBC software as a part of its software load so that the “red and blue” picture can be sent/received via the EBC.  The MCS system is currently not a fielded/supported system.  The Milestone III decision for MCS Block IV is currently anticipated to occur in the 1st QTR FY02 time frame. Current indication is that MCS systems (when fielded) will only be compatible with the ABCS 6.x/7.x communications architecture (e.g., comms server, C2R, etc).Although WARSIM is planning to support the fielded independent baselines of C4ISR systems for the WARSIM IOC system, the latest available version of MCS from the ABCS baseline will also be supported.  This is because the MCS system is often relied upon as the primary workstation of choice during C4ISR exercises by commanders and their staffs.  For current exercises, MCS provides the primary means by which decisions are made, planning activities performed, and orders provided. In contrast to some of the issues associated with many the other C4ISR systems addressed previously, the MCS system can be much more readily supported by simulations from one version to the next because the MCS system utilizes well-documented and stable data standards which are publicly available as are the APIs for accessing the MCS’s internal database (the JCDB).  Thus, interoperability and synchronization between simulations and the MCS system is significantly improved over simulation integration with the other C4ISR systems addressed in this paper.  If other C4ISR systems implemented a similar design/development paradigm as was used for the MCS system, this would offer a significant contribution to resolving some of the M&S-C4ISR issues that currently exists. Other findings:Several C4ISR sources anticipate differences between system specific messages and system specific databases for the ABCS baseline (such as ABCS 6.x) versions of a given C4ISR system release and it’s nearest fielded independent baseline relative.  The significance of the differences is largely unknown, but is likely to include differences in data elements and symbologies (among others).As a result of extensive collaboration between the WARSIM and the DII COE Message Processor (CMP) development teams, the WARSIM team has successfully incorporated the CMP software as a part of the WARSIM C4ISR interface to parse and format organic C4ISR messages.  The CMP is being developed by PM ATCCS and provides an automated, multifunctional, message-processing system designed to enhance interoperability for DoD C4ISR Systems  [4]. The WARSIM team has leveraged the capabilities of CMP to support WARSIM specific requirements to include:extending the capabilities of CMP to support several message formats not previously supported by  CMP.  The PM ATCCS CMP baseline currently supports several formats to include USMTF and JVMF.  The CMP has been extended by the WARSIM team to also support VMF Package 11, FDL, EDC, and CSSCS “USMTF like”.  It is anticipated in the future, WARSIM will extend CMP to support the W007 and other formats as well.using the CMP software within the Common Component Workstation (CCWS). This will enable WARSIM Role Player workstations to parse, format, and validate native organic messages to enable them to fully communicate with the training audience via supported C4ISR data formats.In general, DII COE products are not designed with  simulations in mind.  Ideally, simulations would utilize DII COE products  “out of the box” to support specific simulation needs as indicated previously.  The WARSIM team is attempting to utilize DII COE products within the WARSIM C4ISR interface, however, currently it is noted that the DII COE communications server does not allow multiple instantiations between simulations and C4ISR systems.  A single communications server (per TOC) will have to support all inter-TOC ABCS data interactions for WARSIM unless this software is modified to support parallel processing. The evolutionary nature of the ABCS baseline of C4ISR systems presents a significant issue for simulations. Advertised ABCS functionality vs. the reality continues to be an issue.  A number of workarounds are being developed "on the fly" to get ABCS developmental releases working although the objective architecture ("advertised" functionality) continues to be pursued for the long term.  This raises an issue with building simulations to the workaround solutions because these simulations will most likely be "broken" as soon as the next incremental release of ABCS is provided (assuming ABCS will continue to pursue the objective architecture).  However, if simulations build to the objective architecture, functionality that is supposed to exist in a given incremental release of ABCS may not.  Thus, these simulations will not be able to successfully integrate with ABCS until an ABCS version is released which provides the functionality anticipated.  In either case it is likely that simulations will not successfully integrate with ABCS without significant cost/schedule implications until the ABCS baseline stabilizes.Simulations will need to assess C4ISR baseline tradeoffs among the following options to effectively support development activities:Support and maintain upgrades to accommodate the “go to war” independent C4ISR baselines -- currently, the independent C4ISR baselines support the majority of the army.Support and maintain upgrades to accommodate developmental ABCS baselines – this option is required to support digitization/modernization exercises.  It is anticipated that developmental baselines will continue to exist in the future to accommodate modernization efforts in support of new requirements.Support and maintain upgrades to accommodate  “go to war” ABCS baselines  -- currently, “go to war” ABCS baselines have only been fielded to 4ID at Fort Hood.    Ideally, simulations will support a combination of all three options presented above to accommodate both the independent and ABCS C4ISR baselines that will co-exist, while also maintaining the ability to support digitization/modernization efforts.   However, cost considerations (to include development, maintenance, and support costs) weighed with the Army’s priorities will largely dictate which options will be supported and to what fidelity. If all three options are supported then this would allow the Army to continue training on their “go to war” C4ISR systems while the ABCS baselines are being fielded, and enable support of modernization efforts.  As indicated previously, it will require several years to fully field ABCS (2005-2011) [2]. It remains to be seen whether future ABCS releases beyond ABCS 6.2 will be backward compatible or whether simulations will need to be developed to support each specific version of ABCS for ABCS 6.2 and beyond. ConclusionSeveral M&S-C4ISR Interoperability/Synchronization issues exist which limit the ability to support C4ISR related testing and training needs.  Much of these issues result from the fact that simulations and C4ISR systems are developed separately (on independent schedules) and integrated “after the fact”. Many of the M&S-C4ISR interoperability issues  can be resolved by shifting the current paradigm such that both simulations and C4ISR systems consider each of their respective needs, and facilitate information transfer between C4ISR and simulation developers.  As noted previously, some progress has been made for ensuring that interoperability is a shared responsibility primarily via requirements documents, DoD policies, and SIMCI related activities.  However, there is still a long way to go.  Many of the M&S-C4ISR synchronization issues can be resolved by synchronizing schedules, adopting standards, promoting HI, and facilitating information transfer between C4ISR and simulation developers. Currently, significant tradeoffs have to be made between simulation fidelity, training benefit, and overall program costs.  It would be beneficial for C4ISR systems to be part of this equation. By synchronizing schedules, adopting standards, facilitating information transfer between C4ISR and simulation developers, and providing incentives for C4ISR and simulation developers to develop common components, significant progress can be made on resolving M&S-C4ISR issues and producing an M&S-C4ISR system of systems which better meets the needs of the Warfighter and improves military readiness. C4ISR modernization efforts will need to be continued   to ensure current M&S-C4ISR interoperability and synchronization issues, and Army requirements of the future are accommodated.     AcknowledgementsThe authors would like to express appreciation to those that provided the information required to make the development of this paper possible.  This information was provided by various sources to include:  Members of the WARSIM team (to include STRICOM, Lockheed-Martin Corporation, Logicon-Sterling, and SAIC representatives), the SIMCI Consortium, C4ISR representatives, and other sources.ReferencesAnthony, J., “WARSIM 2000 and C4I Device Initialization”, Paper 01F-SIW-013, Spring Simulation Interoperability Workshop, 2001.“The Army Digitization Report 2000” – located at  HYPERLINK http://www.ado.army.mil/archives/docsarchives.htm. http://www.ado.army.mil/archives/docsarchives.htm., June 14, 2000.Hieb, M.R. and Sprinkle, R:  “Simulation Infrastructure for the DII COE Architecture: The Army Vision”, Paper 00F-SIW-035, Fall Simulation Interoperability Workshop, 2000.Newcomb, M., Gustufson, J., and Nguyen, P:  “The WARSIM 2000 C4I Interface”, Paper 99F-SIW-036, Fall Simulation Interoperability Workshop, 1999.Author BiographiesMR. JOSEPH M. BRENNAN is an Electronics Engineer at United States Army Simulation, Training, and Instrumentation Command (STRICOM) in Orlando, Florida. Mr. Brennan is currently the Lead Government C4ISR Interface Engineer for the WARSIM program.  Mr. Brennan has earned a Master’s of Science degree in Industrial Engineering from Texas A&M University, and a Bachelor’s in Mechanical Engineering from University of Central Florida. MR. EDDIE SMITH is an Information Technology Engineer at the Naval Air Warfare Center Training Systems Division (NAWCTSD) in Orlando Florida.  Mr. Smith works C4I WARSIM program issues to include software and hardware.  Mr. Smith has earned an Engineering degree from Florida Atlantic University.  Mr. Smith has twenty years experience working Navy and Army simulation programs, including subsurface, surface and Command & Control Training systems.PAGE  		PAGE  		