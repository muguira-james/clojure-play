Simulating the Communications Network in Net Centric OperationsGary WarrenScience Applications International Corp.1710 SAIC DriveMcLean VA 22102703-676-2611Gary.Warren@saic.comKeywords: Distributed Communications Network Simulation HLA FederationABSTRACT: Communications modeling, in support of the analysis of netcentric operations, must include high fidelity network and device models in order for models of netcentric operations to give credible results appropriately reflecting the impact of the network on netcentric operations. For example, the message delivery time can vary a factor of 10 or more depending on the operational concept. High fidelity, in this case, means models of fidelity similar to those used to design the network protocols and devices.  Such a fidelity requirement suggests desirability of a single communications modeling system that can be configured as a stand-alone system engineering tool, as a deployable web service, and as an HLA federate in large netcentric modeling. We have designed and analyzed such a system, and validated it in prototypes. The prototypes use COTS and existing defacto standards.  The key to success is not in any single network modeling tool, but rather in the system engineering, distributed design, COTS selection and interface implementation. Our design has the further desirable property that it can be integrated into HLA federations for netcentric modeling with a relatively simple interface hiding a very complex and detailed communications model. Achievement of real-time simulation of 5000 JTRS type radio nodes, or more, looks practical now that real-time modeling of the routing layer of 5000 ad hoc MANET radios has been achieved and since the computation time for the physical layer has been reduced from order N2 (N is the number of radios) to order N.1. IntroductionCommunications technology in support of netcentric operations, especially to, from, and within the edge, includes QoS routing, unified networks (voice, video, and data on the same network), spectrum management, ad hoc routing, wideband waveforms, directional antennas and other technologies that make the difference between success and failure of the network in support of operations. Further, operational tempo of netcentric warfare is affected by the ability of the network planning, configuration and reconfiguration to support the tempo.  Further, the ability of CONUS based forces to lead (or support) the operation depends on tactical networking transparently interoperating with the GIG as one end-to-end network. Studies and tests of netcentric operations need to include the network‚Äôs ability to support the operational concept. As an objective, such studies and tests should precede full rate hardware production and full commitment to an operational concept.  Simulation, therefore, is a critical aspect to validation of netcentric operations, and network simulation is critical to studying both the operational concept‚Äôs requirements for the network technology and, conversely, the network technologies‚Äô impact on the success of operational concept. One of the key future radio systems for DoD is the JTRS, Joint Tactical Radio System. This radio system will replicate many of the existing legacy radio waveforms in software, to be reconfigurable and adaptable to various evolving netcentric operations. Additionally, the JTRS will support one or more WNW‚Äôs -- wideband-networking waveforms. These waveforms include ad hoc routing for more automated network configuration, and more bandwidth for higher throughput at the network edge. The waveform will support a unified network and scale to ~1600 nodes in a single network. A unified network in the future battlefield will save substantially on logistics and improve average communications, yet still has a critical weakness.  When a unified network fails, there is no telephone or backup network for use to contact the network administrator or request help restoring the network.In short, netcentric operation provides great advantage to the warfighter when the network works, but it also puts the warfighter at great risk, should the network fail.2. Network Simulation System RequirementsA network simulation capability to support modeling of wireless networks used in netcentric operations must meet certain requirements. In a recent effort to design a network simulation capability of this type for the Army [1], we developed the following set of system requirements:Simulate up to 1630 ad hoc radios in a single network in real-time with up to 100 of those radios as real radios.Integrate a Developmental Test (DT) or Operational Test (OT) environment. Realistically produce virtual routing information in a simulation that can be transformed to inject realistic routing updates into the real network. (JTRS SSP)Integration shall not require additional soldier equipment relative to deployment equipment issued.Include self-diagnosing sufficient to enable field maintenance of the simulation system.Capable of real-time receipt and use of GPS and of real and virtual equipment.Generate timely output of achieved service characteristics at various levels of granularity to support real-time display of network quality to network users.Integrate using an HLA modeling and simulation methodology. Support simulation of terrain effects in the supported scenario(s).Provide communications service characteristics statistics of the virtual network to support the test of ad hoc radio mobility and scalability requirements for protocol development, DT and OT events.Simulate communication node movement as provided by the operational scenario.Simulate both communication node mission and routing update traffic.Operate in a stand-alone capability with the same interfaces as the capability integrated for development and operational test. Model the effect of HAIPE security and include HAIPE between real and virtual radios. Measurable achievement of the requirements is based on the metrics in Table 1. These system requirements apply to each instance of a network simulation federate in a federated simulation.3. Operational RequirementsFederates that simulate wireless networks have additional inter-federate effects to be modeled beyond simulations of wire line networks. One such effect is RF noise ‚Äì wireless packets create noise for radios other than the intended recipient(s). The other such effect is ad hoc link modeling ‚Äì links form between pairs of radios not under static control of the scenario and transmission along these self-forming links must be modeled. Within a single network simulation federate instance, these two effects must be modeled to provide an accurate representation of a wireless network, and in fact, the design below has aspects specifically related to meeting providing this capability. In systems that may use network simulation and also have real radios, there are two basic approaches to handling the challenge of modeling the inter-federate effects. We categorize these approaches as: Fully Meshed ‚Äì All cross-domain effects re-created between real and virtual radios. The name of this approach comes from the mesh of cross connections created by the re-creation process.Wrap-Around ‚Äì Scenarios are constructed in which there is no cross-domain effect to recreate. The name of this approach comes from the types of scenarios that support this.The Fully Meshed approach is required when real and virtual radios of the same network are positioned in a common geo-spatial region in the scenario. The Wrap-Around approach is sufficient for scenarios in which real-radios occupy one geo-spatial region, and virtual radios occupy a separate geo-spatial region that ‚Äúwraps around‚Äù the region occupied by real radios, and where communication between the real and virtual radios is meant to be blocked as by mountains except for specific bridge locations for which the approach emulates the links.A similar set of issues and approaches arise when using multiple instances of a network simulator federate to model subsets of the total set of virtual radio in a large operational simulation. After a careful analysis of the two approaches, we have found that the total set of requirements and metrics listed in the requirements section can be better met with the wrap-around approach than with the fully meshed approach. Not that the fully meshed approach cannot be achieved or of value. Rather, we have determined that achievement of a single simulation federate that handles the 1630 radios of single network is practical for current thus allowing DoD to avoid the complexity and undesirable complications of the fully meshed approach. 4. System DesignA review and analysis of previous efforts to create communications network simulators for ad hoc network that scale to 1600+ nodes, including several of our own iterations of prototypes of various components and end-to-end integrations for DARPA, the Army, and others, exposes the following performance challenges:Federate input/outputModeling the ad hoc routing.Computing the propagation attenuation of the wireless signal due to path loss over the terrain.Computing bit error rates at each receiver.Handling communication bursts as they affect real-time performance.The design handles each one of these issues in a separable modular scalable fashion. The design also addresses the other (non-performance) requirements within the process of fixing these performance issues. ‚ÄúSeparable‚Äù, in this case, means that the solution allows different experts to attack each part of the problem and then assemble a whole federate out of the resulting pieces. The design allows use of many computers distributing the load. It can be moved to standard service oriented architecture, although it is not necessary for success.  The key to success is not in any single network modeling tool, but rather in the system engineering, distributed design, COTS selection and interface implementation. 4.1 Federate input/output One challenge that we have seen is overload of the federate input/output processing capability. This challenge comes from overload of the simulation federate requirements to include communication flow degradation ‚Äì the delay, dropping, and bit error insertion into communication packets between transmission and reception. The solution given here is to separate the communication flow degradation function into a separate federate, of which there can be multiple instances distributed around the network, even when using the wrap around approach and to model a single network. The network simulation federate, then only needs flow description metadata (no content) and need output only service characteristics for that flow in response. Each of these HLA interactions and responses is small with little processing per flow. The communication flow degradation federates subscribe to HLA messages containing the service characteristics and then apply those characteristics to the flows between transmitter and recipient. This solution, in addition to improving performance for use of network simulation in a federation, also simplifies its use in a stand-alone mode and for modeling real to virtual interactions. The solution combines the simplicity and modularity of the traditional centralized approach with the scalability of the distributed approach to handling this federate input/output overload challenge [2]. In discussions with the authors of Reference [2] we found that their fully distributed approach required an integration effort not acceptable relative to the requirement and metrics listed in Section 2 above. The solution presented here, in part, evolves from that discussion.The solution presented here provides substantial fault tolerance in that the overall federation continues, and with reasonable results, even if the entire network simulation federate fails ‚Äì the communications degradation federates use the most recent service characteristics they have in cache, until the network simulation federate recovers. The service characteristics are always as up to date as is possible ‚Äì very good fidelity of the network simulation is provided to operational simulation when fully operational and very good, graceful degradation in case of failure.Given the use of separate communications degradation federate, the remaining input/output load for the network simulation federate includes:Location updates (entity state)Communication flow metadata (interactions)Flow service characteristics (interactions or interaction responses)Each of these is a simple message that can be sent over HLA or other channel (see Section 5). If necessary, the processing for each can be put onto a separate computer feeding into the network simulation federate to improve scalability. The first of these has the same load as for any other federate, so the network simulation federate should fare as well as any other federate for this load. The second of these occurs at some multiple of the location update message load, but only from radios modeled by the instance. Feasibility depends on the FOM definition and on the capabilities of the filtering to reduce the load to the federate. The third of these is the same number of messages as the second.4.2 Modeling the ad hoc routing in real-timeThe challenge of modeling ad hoc routing in real-time has been around a decade and has been worked to the point where it is now gone ‚Äì as an isolated issue. The initial problem existed as a combination of: immature, discrete event simulation applied to networks, non-scalable, ad hoc routing protocols (even the real protocol did not scale, so an accurate model could not), and incorrect attribution of a number of separate performance problems as problems related to ad hoc routing simulation. Now, OPNET Technologies, for instance has a demonstration of 5,000 ad hoc radios being simulated in real-time and on a single Intel processor. This solves the problem with an order of magnitude in reserve (need on 1600 nodes and can allow use of a multi-processor Intel, which OPNET supports). This is not a statement of support for OPNET over other tools; just an example showing that the problem has been solved in isolation.Given that the problem has been solved in isolation, the issue in our design is to avoid loading other calculations onto the computer that is modeling the ad hoc routing. Thus, in our design, the federate interface software is on separate computers. Also, the computation of service characteristics from the raw simulation results is on separate computers. Additionally, the calculation of RF propagation is on separate computers.  That is, the architecture allows these components to be each placed on separate computers or not, depending on the size of the network being modeled, and thus, the computing power required. Finally, given the number of separate modules that may be distributed, a control module is included that: (1) starts and stops all of the components of the federate, (2) sets up the bus among them, and (3) monitors them.To best support the distributed components within the network simulation federate, each of the components interfaces with the ad hoc routing portion and with each other, where needed, through an asynchronous persistent data bus. This approach lets each run as fast as it can, using the latest data available. This works well in both stand-alone mode and as a federate. As a stand-alone simulation, the approach lets each component run in isolation using recorded outputs from the other components. In a federation, the approach lets each component on average run faster than over a synchronous bus, so that overall the results from the network simulation are more timely to the federation. Once in a while the results will become stale on the time scale of the network simulation, however, (1) the resulting staleness will be less than with a synchronous bus, and (2) the time scale of the operational simulation is slow relative to the network simulation, so that such staleness, within the statistical variation of the network simulation, has no practical impact on study results. Thus, this approach meets the performance requirements. It also meets the development, deployment and operational requirements. 4.3 Propagation Calculation Performance Transmission of RF through the air is affected by the terrain, ground moisture, foliage, buildings, and, above threshold frequencies, by weather. Operations are designed to these same factors; hence, the RF transmission performance is correlated to the operations via propagation, and cannot be treated purely statistically. To include the propagation losses accurately requires a model that includes all of these factors, plus multi-path (including wide-band effects), between every pair of radios, whether they are sending packets between each other or not. The radio transmissions still interfere as noise between radios that are not directly communicating. The performance of this part of the overall network simulation has been a bottleneck in the past because: (1) the time to compute the loss on each link is long, and (2) the number of calculations in a brute-force approach is proportional to the square of the number of radios [3]. The solution includes the following aspects:Separation of the propagation calculation from other aspects such that it is parallelizable ‚Äì Compute the link path loss computation on processors separate from the network simulation and send the changes to the network simulation computer as fast as they are computed (link by link) not via HLA, rather on internal channel.Smart caching of results ‚Äì Network simulation keeps the latest updates from Step 1, above, and can quickly access them when a value is needed. It does not wait for the propagation calculation to complete. Mobility dependent calculation ‚Äì If nodes are temporarily moving faster than the path loss calculation can process, the calculation process add a process for skipping updates such that the calculation is approximately equally stale for each node. This keeps the overall network simulation real time, with its results out of synch with the operational simulation by one or a few seconds, not enough to matter to evaluation of operational tempo, and the network federate still responds in real-time, so that the other federates are not waiting for it ‚Äì which is important.Pre-calculation filter ‚Äì For each radio pair, periodically use a very fast calculation of whether the link between the two radios can possibly be strong enough to be worth modeling. Keep that result, and check it each time the nodes move. This calculation has a time proportional to the number of nodes squared but is very fast and has not shown up in profiling the software to date. Having the filter reduces the time for the detailed calculation to be linear in the number of nodes, at least in the scenarios that we have used to date. Limit the model fidelity to the limits of practical knowledge and need ‚Äì It is always possible to define the propagation calculation detail to a level that cannot be computed in real-time even for a single link. We have seen requests for modeling the effects of individual leaves in the foliage, for example.  The point of this aspect of the solution is to recognize that the uncertainties and variability of the environment quickly limit the ability to get the exact path loss right, and that the purpose of having the calculation is to remove the systemic correlation between the operation and the network performance that comes from their common dependence on environment. Systemic knowledge errors, such as hidden metal framing in buildings, can be handled with signal offsets. Random variations can be handled with random number generators and give the correct output for the simulation ‚Äì where that output is flow service characteristics, not the validity of each bit in each packet. Overall, the first four of the above items, get a practical solution for real-time performance, and item five shows the value of getting an approximate solution, rather than the hopelessness of ever getting a perfect solution. 4.4 Bit error rate Modeling As the number of nodes increases, the number of noise packets that arrive during the reception of a signal packet increases. This noise creates the bit errors that create packet drops, and various models compute that loss with various accuracy.  The default OPNET model computes the overall noise affecting different portions of a signal packet based on the noise packets arriving during that interval. Then it computes a number of bit errors in that interval using a very accurate representation of the bit error distribution as a function of the signal to noise ratio in that interval. The last step occurs in proportion to the number of intervals that a signal packet is broken into because evermore noise packets arrive. To reduce that calculation, first, noise packets are not sent to nodes for which the level of noise is so low as to produce any likely bit errors (even summed over lots of noise packets). Second, the bit error calculation is approximated, still such that the error in the bit error rate is dominated by the path loss calculation, not by the bit error calculation. This removed the bit error rate code as a source of performance issues.4.5 Communication Bursts Even though real-time simulation of 5000 ad hoc radios has been achieved, it is important to note that the definition of real-time in that achievement is as an average. Sometimes there are bursts of packets on the network such that, for small time intervals (maybe up to few seconds) the network simulation clock may lag real-time.  The network simulation is even driven; more packets mean more events, which means slower execution time during the moment of a burst. The network simulation clock catches after processing of the burst is complete.Such infrequent and short delays would have meaningful impact if they delayed the transmission of the communication from source to destination in the federated simulation. However, thanks to the fault tolerant design, and asynchronous bus, these delays within the network simulation do not affect the overall operational simulation. Instead, the network simulation component responsible for providing the outputs to the federation in a timely manner caches the service characteristics for previous similar flows between node pairs. Then, if the simulation is lagging, the federate simply sends out the cached service characteristic results to the federation. As discussed before, this use of slightly stale data does not affect the output of the operational experiments. 5. Applying the RPR-FOM to the ProblemThe architectural features discussed above can be implemented using HLA in a variety of ways.  For example, the architecture can use HLA: (1) for all of the communications or (2) for only the synchronous parts of the communication. Other mixtures are also possible. When using HLA only for the synchronous portion of the architecture, the RPR-FOM standard [4] fits very well with the architecture. Both the network simulation federate and the communications degradation federate(s) use HLA to interact with the operation simulation and other federates. The information partitioning in the RPR-FOM matches well to support the network simulation and communication degradation federates subscribing to subsets of the FOM. In fact, there is no overlap between the information subscribed/published to by the network simulation federate and by the communication degradation federate.The network simulation federate subscribes to the RPR-FOM‚Äôs ‚Äúradioreceiver‚Äù and ‚Äúradiotransmitter‚Äù objects. Further, as an enhancement for improved model fidelity it may subscribe to ‚Äúemitterbeam‚Äù ‚Äújammerbeam‚Äù, and ‚Äúradarbeam‚Äù objects that might interfere with radio signal reception. (It also may subscribe to any ‚Äúplatform‚Äù objects for which a ‚Äúradiotransmitter‚Äù and/or ‚Äúradioreceiver‚Äù may be implied, but not explicitly published.) The network simulation federate does not publish anything on the RTI. Also, its participation in time management is optional.The communications degradation federate(s) essentially act as agents for the network simulation federate, subscribing to various types of radio signal interactions as necessary to support the network modeling. Such interactions include: ‚ÄúApplicationSpecificRadioSignal‚Äù, ‚ÄúDatabaseIndexRadioSignal‚Äù, ‚ÄúRawBinaryRadioSignal‚Äù and ‚ÄúEncodedAudioRadioSignal‚Äù. These radio signal interactions describe the signal as it leaves the transmitter.  The communications degradation federates publish a new set of sub-classes of radio signals.  The new subclasses might well be given the name structure ‚Äú___radiosignalreceived‚Äù, where the underscore is a placeholder for the corresponding radio signal type, e.g. ‚ÄúRawBinary. The new subclasses are used to describe the radio signal at each radio receiver for which the corresponding radio signal: (1) is an ultimate destination and (2) successfully arrives at the receiver (after multi-hopping and routing through the network, if appropriate, and given the receivers‚Äô published specifications for reception capabilities). The new subclasses add a field, e.g.,  ‚Äúradioreceiverobjectid‚Äù that identifies the radio receiver at which the signal has been computed to arrive. In one variation of the approach, an instance of a ‚Äú___radiosignalreceived‚Äù is published for each radio at which the signal is successfully received (even if only partially received).To integrate the network simulation federates, the communications degradation federates, and the operation simulation federates, the operational simulation federates change their radio signals interaction subscriptions. Whereas currently they typically subscribe to ‚Äú___radiosignal‚Äù and assume reception without regard to propagation, multi-hop, routing, etc.; after the change, they subscribe to ‚Äú____radiosignalreceived‚Äù interactions. When multiple communication degradation federate instances are in a federation, each communication degradation federate filters to a subset of radio signals selected by ‚ÄúHostRadioIndex‚Äù (radiotransmitter). To reduce network bandwidth used, the communication degradation federates are placed between the transmitters and likely receivers based on the scenario and based on the HLA network (not the network being modeled, rather the network over which the model is being run). The degree of bandwidth savings depends on optimization of the federates‚Äô placement, which is topic for the future. Currently, such optimization is external to the HLA FOM process and external to the RTI, typically static and manually performed.6. Analysis and ConclusionA set of communication simulation federate requirements has been presented that span integration, ease of use, maintenance and performance, to support development and operational test for ad hoc radios, as needed, for example for the Army. The novel aspects of a design have been presented (based on review and analysis of previous efforts) with low risk to achieve or exceed the requirements. Its impact on HLA FOMs is minimal ‚Äìthe RPR-FOM basically adds a subclass to the ‚Äúradiosignal‚Äù. Further, the HLA portion of presented architecture can remain unchanged as the internals of the network simulation federate change over time and require multiple different areas of expertise to support iterative improvement. Separation of the network components into communication degradation federates and network simulation federates provides scalability, graceful degradation, and low risk for the operation simulation federations including network simulation.	The network simulation, as presented, can be easily used in stand-alone mode, as well as, within operational studies. As such, it can be debugged with high reliability before deploying a new version into an operational simulation. This minimizes downtime of the operational studies while the network simulation is upgraded. It can also be used for network design studies so only good network designs are in operational studies. This work has been supported in part by the Defense Advanced Research Projects Agency (DARPA), the US Army, and the US Air Force Research Laboratory (AFRL)references[1] ‚ÄúJTRS/HITL Systems Design Document (Final), Prepared by ISS/SAIC For the JTRS Cluster 1 Product Management Office‚Äù, Jerry Parker, Phillip Hoang, Jesse Aronson, Greg Korzeniewski, Robert Segraves, Gary Warren, ISS Report Number 04-XX, September 17, 2004.[2] ‚ÄúA Distributed Communications Framework:Integrating Distributed Communications Models Into a High-Level Architecture Environment‚Äù, Sherie M. Johnson, Greg Wolff, Deanna Evans, 04F-SIW-009, SIW Fall 2004.[3] ‚ÄúReal-time Applications for Defense -- M&S Case Studies‚Äù, Gary Warren, OPNETWork, 2003.[4] Real-Time Platform Reference Federation Object Model (RPR-FOM), SISO-STD-001.1-1999.Author BiographyDr. Gary Warren is a Chief Scientist at SAIC in the C4I business unit. Dr. Warren has devoted nearly a decade to developing scalable network modeling and simulation applied to ad hoc networks and nearly as long applying these simulations to develop and evaluate netcentric concepts operating over such networks. Dr. Warren has several patents in the area on web-centric information management. Prior to joining SAIC, Dr. Warren employed by Mission Research Corporation for eight years developing and applying simulation techniques for modeling of electromagnetic devices, such as amplifiers, antennas, plasmas, and waveguides. Dr. Warren also has experience in areas of RF interaction with bio-systems, satellite system engineering, and as an architect for computer aided design electronics software.Table 1.  Network Simulation Design Parameters and MetricsDesign GoalMetricsNear real time performanceLess than 300 msec delay between M&S clock and real time.System CapacityNumber of radios that can be supported (1630); Number real radios (100).System QualityAccuracy and completeness of transferred messages; ability of operators to react to virtual messages; ability of operational simulation to react to real messagesSystem Extensibility to multiple waveforms, multiple Operational simulators, varying testing and operational scenariosTime and SLOC to integrate new system; changes to architecture required, architectural changes required to support new scenariosSystem Fault ToleranceSystem recovery time; number of lost messages, number of coupled processesEffect of security on performanceSystem performance as a function of security implementationSystem setup time, operator workload, operator trainingSystem setup time; time it takes to learn how to run system; Operator EffectivenessConstraints system imposes on test scenarios and operationsTesting Scenario Constraints; test radio configuration and operation constraints; test setup, geometric, and movement constraintsOperations and maintenanceMean time between failure; mean time to repair