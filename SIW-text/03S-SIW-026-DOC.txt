Radiant Mercury Simulation CapabilitiesRuth E. PollockRadiant Mercury Software Engineer Lockheed MartinP.O. Box 179Denver, CO 80201-0179303-971-2921 HYPERLINK "mailto:ruth.e.pollock@lmco.com" ruth.e.pollock@lmco.comABSTRACT: Radiant Mercury (RM) has been used as an accredited sanitizer and guard between different classifications of simulation exercises since 2000, and new features are planned that will add to its simulation capabilities. The simulation architectures in which RM has participated are independent Distributed Interaction Simulation (DIS) and High-level Architecture (HLA) exercises. In both cases, RM provides its traditional capabilities of data structural integrity and verification of content, but requirements for the two were very different. Requirements for the DIS environment were for two-way data communications using UDP Multicast, parsing the data with the IEEE DIS PDU (Protocol Data Units) specification, and applying RM sanitization rules to each message. The HLA environment was one-way data flow using TCP sockets from an external interface to federations on each side, parsing data based on a frequently changing Federate Object Model (FOM), and using the RM guard-only mode (no data modification). Both of these exercises posed challenges that resulted in new features being introduced to the RM toolkit. While requirements were completely satisfied for these customers, the experience demonstrated that adding RM capabilities would allow much more versatility in these environments. Pre-planned product improvements include: sanitizing HLA data; having RM interact directly with the RTI thus removing dependency on the external federation interfaces; transliterating and transferring between DIS PDU and HLA environments using the RPR FOM; and transliterating between two different FOMs.1.0  BackgroundRadiant Mercury (RM) has long been used as an accredited, automated sanitizer, downgrader, and guard that moves data between systems operating in different classification domains. Each new requirement adds to the growing RM baseline toolkit. This toolkit has been growing to include capabilities that allow it to be used in simulation architectures to process both Distributed Interaction Simulation Protocol Data Units (DIS PDU) and High-level Architecture (HLA) data. Using traditional RM features as well as those developed specifically to support the simulation requirements, RM has been accredited to support both DIS PDU and HLA exercises. These new features have since been used by other customers and will form the baseline for further expansion of the RM product for both simulation and non-simulation uses. This paper will discuss how RM was used in the two architectures, and describe planned enhancements that will allow greater simulation support.RM is a versatile, fully configurable, and trusted data processing software/hardware package that allows data to be received from multiple sources simultaneously and processed through independent, configurable rules. These rules may or may not modify the data, based on customer requirements, before transmitting the data on to the receiving entity. RM’s versatility is evident in the type of data sources (TCP Socket, UDP Multicast, FTP, etc.) and data types (Gold Contact, NITF, DIS PDU, etc.) it can currently process. Each new source and data type is introduced into the baseline so that it may be available for future reuse. The software package uses graphical user interfaces to configure input and output channels (TCP client/server IP addresses, etc) and rule sets for a customer’s specific architecture and data processing requirements. This configurability allows it to be readily tailored on site by trained RM operators. Because RM has been fully certified and accredited by many agencies worldwide, in many different types of architecture, it can be quickly configured to an accreditable state for a particular site.RM data processing traditionally includes both a parse and format of all data fields. “Parse” is a deconstruction of the data into the lowest level of individual attribute name/value pairs as defined by the data type. The resulting attribute list is what is used by the RM rule set to make decisions, modify, etc. “Format” is a reconstruction of the attribute name/value pairs (after rules are applied) into a message to be sent out. The parse and formatting functionality in RM uses a set of MAG (Message Analysis and Generation) tables. What MAGs are used depends on the site’s specific data type. MAGs define how the data is decomposed into attributes, and often contain constraints on what may be contained within each field. Parsing data in this way ensures that the data is structured precisely as defined, and that data fields are filled according to standards. Formatting data is unnecessary in “guard-only” configurations (those in which no data is changed, but rather decisions are only go/no-go).2.0  DIS PDU and HLA RequirementsBoth the DIS PDU and HLA exercises introduced new requirements that resulted in new features being introduced to the RM toolkit.Requirements for the DIS PDU simulation environment (Refer to Figure 2.1) were to connect two classification levels (high and low) both generating Tadil-J and DIS PDU data. All data was to be shared by both sides (two-way communication) using multiple UDP Multicast groups, and was to be protected both ways using RM sanitization rules. In order to support these requirements, new software was introduced for UDP Multicast input and output channels and MAGs were written based on Mil-STD 6016 and IEEE DIS specification to handle Tadil-J and DIS PDU data. Existing RM software covered all other requirements.Because of the DIS PDU simulation, the ability to send and receive using UDP Multicast, and the ability to parse Tadil-J and DIS PDU data were added to RM baseline. MAGs introduced to support this simulation have since been expanded and used by other customers. Figure 2.1. DIS PDU ArchitectureRequirements for the HLA environment were to connect a low side federation to a high side federation (one-way communication), while protecting the high side at a PL-4 security level. The data, based on a frequently changing FOM, was transmitted to the RM by TCP IP sockets from an LSI (Low Side Interface). RM verifies the data structure and content (during parse) before passing it to an HSI (High Side Interface) using TCP IP sockets. The LSI and HSI are independent PC-based support architecture (Refer to Figure 2.2) that act as federates in their respective federations and perform all RTI (Run Time Interface) interactions. In this architecture, no sanitization (data modifying) rules were identified for the data, but rather, all message data that passed the parse was passed to the high side. Because the go/no-go decisions were based on the parse, the MAGs were written so that each object/interaction in the FOM was parsed down to its lowest level and constraints were placed on the fields based on FOM specifications and accreditor requirements. Messages would fail parse (and be grounded by RM) if they did not meet exact structure and value ranges defined in the MAGs, a feature that was used many times to identify when federates were producing badly formed data. In order to rapidly create accurate MAGs for the over 300 objects and 800 interactions in the FOM (over 26,000 MAGs in all), and because the FOM was changed often during the developmental stage of this exercise, automated methods were developed for MAG generation and testing.Because of the extreme number of MAGs used for the HLA simulation, and the speed requirements to process them, new features were added to the parse/format software in the baseline RM. Other customers have since used these new capabilities, as well as the automated MAG generation technology. Figure 2.2. HLA Architecture3.0  Future DIS PDU and HLA CapabilitiesWhile requirements were completely satisfied for these customers, the experience demonstrated that adding RM capabilities would allow much more versatility in simulation environments. The new capabilities that are planned are: expanding the types of DIS PDU message types supported; sanitizing HLA data; having RM interact directly with the RTI; transliterating between DIS PDU and HLA data using the RPR FOM; and transliterating between two different FOMs.The current DIS PDU MAGs support only those types required by the customer to satisfy the immediate requirement. Future enhancements will expand the types to all those included in the full IEEE DIS specification.The HLA simulation in which RM took part does not modify any attribute or parameter value, this allows a guard-only mode to be used (making message formatting unnecessary). While this satisfied the customer’s particular requirements, the MAGs are insufficient for formatting the attribute lists back into messages (making data modification by rule sets impossible). Future enhancements of the supporting MAG generation scripts will restructure the MAGs so that full RM parse, modification (i.e., sanitization), and format of data will be supported.In the current architecture, RM is dependent on the LSI and HSI to interact with the RTI. While this is satisfactory for this particular customer, it is unknown whether the LSI and/or HSI would be compatible with other RTIs and/or federations. Future RM development will include RTI input and output channels that will communicate directly with the RTI, eliminating the external de-pendency.RM MAGs are very powerful – so powerful, in fact, that the existing DIS PDU MAGs can be used to transliterate directly into RPR FOM data. This transliteration will be a future capability of RM that will allow a DIS PDU environment to connect through an RM to an HLA environment.Another planned capability for RM is the ability to have federations using different FOMs to connect with one another by configuring the MAGs so that the data is transliterated from one FOM structure to the other.4.0  ConclusionRM has been used to solve data sharing problems for many customers worldwide, and has recently allowed data sharing between different classifications in both DIS PDU and HLA simulation environments. As the software and supporting MAGs continue to evolve, they will add capabilities to RM that will make it an even more versatile and powerful tool for rapid solutions to simulation integration issues.