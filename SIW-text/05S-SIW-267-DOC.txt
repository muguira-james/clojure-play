Transfer Control DIS Standards Document Draft28 March 2005This document contains the draft changes to IEEE 1278.1a and the DIS Enumeration Document forthe Transfer Control Function This document is designed for two-sided printing.Prepared byFrank Hill404.464.4511fhill@sdslink.comThis Page Left BlankTable of Contents	1.0	Introduction	1	2.0	Study Group Activities	1	3.0	Study Group Documents	1	4.0	Transfer Control Analysis	1		4.1	DIS Approach	2		4.2	HLA Approach	2	5.0	Recommendations	2		Appendices	A.	 IEEE 1278.1a, Section 4.5.8.3 Replacement, Transfer Control	A-1		4.5.8.3 	Transfer Control	A-1		4.5.8.3.1  	Definitions	A-2		4.5.8.3.2  	Transfer Control Rules	A-2		4.5.8.3.2.1  	General Rules	A-2		4.5.8.3.2.2  	Push Transfer	A-8		4.5.8.3.2.3  	Pull Transfer	A-10		4.5.8.3.2.4  	Transfer Control Timers	A-12		4.5.8.3.3  	Related PDUs	A-12		4.5.8.3.4 	Related Records	A-12	B.	Other Transfer Control Related Changes to IEEE 1278.1a	B-1		1.0	General	B-1		3.1	Definitions	B-1		4.5.1	PDU Header	B-4		4.5.1.6	PDU Status record	B-4		5.1.4	Symbolic Names	B-4		5.2	Basic Data Types and Records	B-5		5.2.61	PDU Status record	B-5		5.2.62	Munition record	B-5		5.2.63	Engine Fuel record	B-6		5.2.64	Storage Fuel record	B-6		5.2.65	Designation record	B-7		5.2.66	Expendable record	B-8				5.2.67	Total Record Sets record	B-9		5.2.68	Launched Munition record	B-10		5.2.69	Association record	B-11		5.2.70	Sensor record	B-11		5.2.71	Ownership Status record	B-12		5.2.72	Location record	B-13		5.2.73	Location Set record	B-13		5.2.74	Formation record	B-13		5.2.75	Formation Member record	B-13	C.	Transfer Control Changes to EBV-DOC (Enumerations)	C-1		1.0	General	C-1		3.4	PDU Status	C-1		3.4.1	Transferred Entity Indicator	C-1		7.0	Simulation Management family	C-1		7.1	Datum and Record Specification records	C-1		7.3	Acknowledge PDU	C-1		7.3.2	Response Flag	C-1		7.6	Event Report PDU	C-2		7.7	Record-R PDU	C-2		7.8	Record Query-R PDU	C-2		11.4	Transfer Control Request PDU	C-2		11.4.1	Transfer Type	C-2		14.0	General Records	C-3				14.1	Munition record	C-3		14.2	Engine Fuel record	C-3		14.3	Storage Fuel record	C-4		14.4	Designation record	C-4		14.5	Expendable record	C-4		14.6	Association record	C-4		14.7	Sensor record	C-5		14.8	Location record	C-5		14.9	Location Set record	C-5		14.10	Formation record	C-5		14.11	Formation Member record	C-5		14.12	Ownership Status record	C-5		15.0	Sensors	C-6	D.	Transfer Control Required PDUs	D-1				D.2.1  	Transfer Control Request PDU	D-1 		D.2.2  	Acknowledge-R PDU	D-4		D.2.3 	Set Record-R PDU	D-5		D.2.4 	Record-R PDU	D-6		D.2.5  	Event Report PDU	D-7D.2.6 	Entity State PDU	D-9		D.2.7 	Data Query PDU	D-10		D.2.8 	Data PDU	D-11		D.2.9 	Record Query-R PDU	D-12	E.	Study Group Participants	E-1	 	1.0	IntroductionThe paper presented by Frank Hill at the Spring 2003 SISO Interoperability Workshop (SIW) indicated that the current transfer control design contained in IEEE 1278.1a was not interoperable as evidenced by an analysis of the requirements and research into DoD and commercial projects that had implemented transfer control.  (See 03S-SIW-044 - Transfer Ownership - A Marvelous Capability Sitting Out The War.) This was the impetus for establishing the SISO Transfer Control Study Group which was chartered by the SISO CC to study and propose changes to the DIS standard and HLA RPR FOM and GRIM to ensure that transfer control in a DIS environment, or HLA environment using the RPR FOM, would be basically interoperable.  The group was also to look at native HLA transfer control implementations to identify any issues there as well.Since several United States Department of Defense (DoD) projects had already implemented transfer control, and other would be implementing the capability in early 2004, it was imperative that the group reached consensus on the needed changes as soon as possible.  It was agreed that this necessitated a two-stage process: (1) to concur on specific technical issues, documenting the rational and discussions, and (2) to write the technical changes as draft changes to IEEE 1278.1a.  That way, the exact wording could be reviewed early on that would expedite consensus by the simulation community.  It would also expedite the work of the Product Development Group (PDG).2.0	Study Group ActivitiesThe TC Study Group began its work on 11 August, 2003 with the first telecon.  A series of telecons were held during the life of the group, as well as, meetings at the Fall 2003 SIW, and Spring and Fall 2004 SIW.The first phase of the study group activity addressed defining record formats and values that would be needed to convey internal state data when handing over an entity.  The second phase was reviewing and improving the sequence of messages involved in a transfer transaction.  The third phase was defining a set of rules for transfer control.  This culminated in the review of that portion of the Transfer Control Study Group Final Report that covered all DIS changes. The forth phase was to look at HLA RPR FOM changes needed for the new transfer control approach.  Finally, native HLA transfer control was looked at.  The last activity was a final version of the DIS Study group Final Report that included DIS and HLA recommendations and draft changes to related documents.  A request to form a Product Development Group was the last act of the Transfer Control Study Group.Although anyone was welcome to actively participate, as usual, there was a core set of volunteers who set about to produce draft changes, analysis and reviews.  These core volunteers were present at the majority of the telecons and produced the bulk of the work. A series of weekly one and a half hour telecons were held to review draft documents and ideas.  The core members of the group and a list of subscribers to the study group are contained in Appendix I. 3.0	Study Group DocumentsA series of documents were produced in support of the group’s activities.  These were posted to the Transfer Control Document Library on the SISO Website and will be transitioned and archived on the Transfer Control PDG website.Meeting MinutesTerms of referenceRecord Definition DocumentRules DocumentFinal Report4.0	Transfer Control AnalysisThe overarching principles were to ensure that the transfer control design supported as broad a transfer of types of entities as possible, that any changes would be compatible with HLA and that the types of data records required be kept to what experience and analysis showed would most probable be required.  Only two of the new records were deemed to be essential.  The rest are optional records that may be implemented as needed by federation agreements.It was decided that it would be appropriate to use some terms introduced by HLA that also applied to a DIS environment as well.  This includes use of the terms “federate”, “federation”, and “attributes”.  As used for DIS, they have identical meanings.  Many other terms have been introduced for clarity to explain various aspects of the transfer control process with precision. 4.1	DIS ApproachThe initial task that was tackled was the development and agreement on a set of internal store data records used during the transfer process.  This was followed by an analysis and modification to the messages and message sequence for transfers.  Changes were made keeping in mind the need to be backward compatible, in so far as practical, with existing transfer control implementations.  Then, the existing transfer control rules were reviewed and modified to ensure interoperability.  It was felt that considerable more detail was required to assist implementers and ensure that resulting software would be interoperable.  The guiding principle was to include a rule if it was deemed necessary to ensure compatible functionality. In other words, if the rule was omitted, there was a good likelihood that some developers, especially if they had limited experience with distributed simulation or simulators, would overlook important considerations that would cause interoperability issues when their software was undergoing certification or integration testing with other federates.  It was generally agreed that any internal state record data or other records should be based on systems analysis, experience, and what has already been implemented broadening to include transfers of all entity kinds and platforms.  Also, it was agreed that some transfer would be automatic and some would involve operator intervention and control.   This needed to be explicated accounted for in the requirements.The IEEE 1278.1a, para 4.5.8.3 rewrite lays out the functional requirements for the transfer control capability while leaving developers free to implement whatever software program design fits their situation.   Based on past experience, the additional detail added to the standard should reduce the software development costs and reduce the risk of interoperability issues later on.4.2	HLA ApproachThe HLA implementation of transfer control has been addressed last.  First, the HLA RPR FOM and GRIM updates were coordinated.  Contact has been made with developers who have implemented transfer control in a native HLA environment.  However, this work has not been completed and no final recommendations have been as of this date.5.0	RecommendationsDue to the approval of a DIS Product Development Group (PDG) at the Fall 2004 SIW, the TC SG members will become part of a drafting committee to incorporate transfer control along with other DIS changes into the next update to the DIS Standard.   The draft changes produced by the TC Study Group will serve as the initial draft to be reviewed by a wider distributed simulation community and be balloted on.  The DIS PDG - Transfer Control drafting group will actively support the implementation of the new transfer control rules. The Transfer Control Study Group will remain active until the Spring 2005 SIW to finish work on the HLA implications of the new DIS transfer control design and to address native HLA transfer ownership issues. The Transfer Control document library on the SISO website and Transfer Control reflector will remain active to serve the DIS PDG and the developers who are implementing transfer control and the users who may have suggested changes based on their experiences. Once a new IEEE 1278.1standard is published that includes the new transfer control changes, the support of transfer control developers and users is expected to be part of the DIS PDG or a predecessor organization.  Appendix AIEEE 1278.1a, Section 4.5.8.3 Replacement, Transfer Control1.0	GeneralThe Entity handover function is described in paragraph 4.5.8.3 of the IEEE 12178.1a-1998 DIS Standard. This appendix contains a complete replacement for that paragraph and redesignates the function as the Transfer Control Function as that is the term that has come to be commonly used.  Changes to other paragraphs of the standard that are required to support the Transfer Control function are contained in Appendix B.   Changes to the DIS Enumeration Document for transfer control are in Appendix C.  Replace the present paragraph 4.5.8.3 in its entirety with the following:4.5.8.3 	Transfer ControlThe handover of an entity and associated attributes from one federate to another shall be accomplished using the Transfer Control process.  This applies to constructive, virtual and live entity transfers and to any combination (e.g., virtual-constructive, constructive-constructive, etc.) unless otherwise indicated.  This process is initiated by sending a Transfer Control Request PDU that contains a transfer request.  The transfer of an entity may occur as a Push or Pull transfer.  These are defined in the 3.1 Definitions Section.  The Transfer Control Request (TCR) PDU provides a capability to transfer control of a complete entity from one federate to another in an exercise. (For the HLA RPR FOM, this is referred to as the transfer of a base entity object.)    Annex D contains informative design guidance for implementing transfer control.There is no best effort to maintain a certain level of fidelity for a transferred entity.  The basic fidelity required to be maintained is specified in this section.  Additional fidelity requirements, and any restrictions on transfers between federates, are expected to be addressed in federation agreements.  A transfer transaction may be in progress at one federate and not at the other federate involved in the transfer due to the delay in exchanging messages.  There should not be more than a few seconds when the transfer status differs between the two federates.Broadcast transfers where a federate is asking multiple federates to assume ownership of an entity shall not be allowed.  Likewise, swap transfers, as mentioned in the 1278.1a standard, shall not be allowed. Any kind of entity, including an environmental process entity, but excluding an Aggregate Entity, may be handed over from one federate to another.   A federate is deemed to have implemented the Transfer Control function if initiates or receives and processes the Transfer Control Request PDU.  A federate that does not implement the Transfer Control function is not required to process any of the PDUs unique to this function.   The PDUs associated with the Transfer Control function are listed in Table 60.1.  The Records associated with the Transfer Control Function are listed in 4.5.8.3.4.Table 60.1 - Transfer Control Function PDUsPDUTransferTransactionNon-TransactionTransfer Control Request  xSet Record-RxRecord-RxxAcknowledge-RxEntity State  xEvent Report (Ownership)xData Query  (Ownership)xData   (Ownership)xRecord Query-R x4.5.8.3.1	DefinitionsThe terms used by Transfer Control are defined in the 3.1 Definitions Section of this standard.	4.5.8.3.2	Transfer Control Rules.The general and specific rules that apply to the Transfer Control function are listed here.4.5.8.3.2.1	General Rules.The following general rules shall be met by a federate that implements the Transfer Control function or requires knowledge of federate ownership in a federation that includes transfer control capable federates, or desires to exchange internal store data outside of a transfer transaction.	a)	For Federates that implement the Transfer Control Function, the following rules apply:	1)	The Entity ID of the transferred entity shall remain the same and shall not change as a result of either the completion or termination of a transfer transaction.		2)	Both Simulation Management and Simulation Management with Reliability PDUs are used in addition to PDUs that belong to other families.   Simulation Management with Reliability PDUs are permissible to use regardless of whether the Acknowledged service level has been requested.		3)	All references to the Entity State PDU shall be applicable to the Entity State Update and the Environmental Process PDUs unless otherwise indicated.	4)	All transfers shall use the Required Reliability Service of Unacknowledged since not all requirements of the Acknowledge Reliability Service are used.  	5)	There shall be no limit on the number of times an entity can be transferred between federates including being transferred back to a federate that previously owned it.	6)	A federate may implement either a full or limited transfer control capability (see para 3.1- Definitions).  See also 11) and 25) in this sub-paragraph.	7)	A federate that implements transfer control shall ensure that the determination of whether an entity is a local or remote entity is not based solely on the Simulation Address portion (Site/App) of the Entity ID for the entity and shall account for the fact that the Simulation Address (Site/App) portion of a remote entity may be identical to that of its own Simulation Address.		8)	A transfer may be initiated automatically by a federate or manually by operator action at a federate.  Likewise, the processing of a TCR PDU or Acknowledge-R PDU at the receiving federate may be the result of automatic logic or manual intervention by an operator.   Both methods may be available to a federate and used for different transfer transactions.	9)	Simultaneous transfer transactions shall be allowed between federates so long as different entities are involved in each transfer transaction.  The number of simultaneous transfer transactions allowed is beyond the scope of this standard.  There is no requirement for a federate to be able to handle more than one transfer transaction at a time whether initiated by itself or in response to a received transfer request.	10)	When a transfer is in progress, it is referred to as a transfer transaction. A transfer transaction may be initiated automatically or manually.   It may be responded to automatically or manually or a combination of the two methods.	11)	A federate that does not implement the full or limited Transfer Control capability shall not be required to respond to the Transfer Control Request PDU or any PDUs sent as part of a transfer transaction.	12)	The only federates involved in a transfer transaction shall be the Divesting Federate and the Acquiring Federate.	13)	A transfer capable federate shall ensure that it does not initiate a new local entity using an Entity ID that already exists for either a local or remote entity currently in its data base.	14)	To avoid potential ownership conflicts during the rejoin of a federate after exercise start, transfer capable federates shall implement a means to prevent duplicate Entity IDs. 	15)	A federate that implements the transfer control function and provides for no operator interaction shall include a capability to automatically terminate a transfer transaction started by the simulation application based on, as a minimum, timeouts.  Other criterion may be applied as well. 					16)	Before the completion of a transfer transaction, either federate involved in a transfer transaction may terminate the transaction by automatic or manual means.	17)	The Total Record Sets Record shall be required to be implemented for transmission by any federate whose local data conveyed in various records could exceed the maximum length of the PDU in which it is placed.  All federates that implement a full or limited transfer control capability shall be required to process the Total Record Sets Record in conjunction with a transfer.		18)	The Launched Munition Record is required to be implemented by any federate that can either initiate or accept a transfer request where the entity being transferred is a munition.  The acquiring federate shall not accept the transfer of a launched munition when it cannot complete the engagement.  				19)	The fidelity requirements associated with assuming ownership of an entity are beyond the scope of this standard. 	20)	Federates implementing transfer control shall implement the PDU Status field -Transferred Entity Indicator subfield in the PDU Header Record for the Entity State, Entity State Update and Environmental Process PDUs, whichever of these PDUs are implemented.21)  PDUs shall be transmitted in the physical order shown in Figures 22 and 23.22)	A federate that allows for an operator-initiated transfer request shall provide feedback to the operator on the status of the request including rejection of the request by the federate’s application. 23)	An entity shall only be eligible to be involved in one transfer transaction at a time.  Once a transfer transaction is initiated for an entity, no new transfer control request for it shall be sent to another federate until the transaction is terminated or completed. 24)	Any federate that implements either a full or limited transfer control capability shall:	a)	Provide a visual indication to an operator in the form of an always-present or requested display, or access to a data file, which provides information on the current ownership of each entity in its data base and on data necessary to ensure that transfer transactions can take place.  Detailed Human System Interface requirements are beyond the scope of this standard (See Annex D).  	b)	Provide the capability to manually remove from its data base individual local and remote entities.  This is needed to ensure that ownership conflicts can be resolved if automatic logic fails.	c)	Ensure that the initial motion, orientation, and positional values contained an Initial Entity State PDU reflect the most recent values received from the previous owner taking into account any extrapolation of such data that may occur prior to issuance of the first Entity State PDU, and that further automatic changes to those parameters are based on logic that takes into account rates of change. 		25)	If a federate that assumes ownership of an entity has the capability to continue some or all of the entity attributes (e.g., IFF and emissions data) that were being transmitted by the previous owner, it shall ensure that the required PDUs are transmitted within one entity heartbeat cycle after assuming ownership.  The minimum requirement for the data to be contained in such PDUs shall be to duplicate the non-PDU Header data contained in the last PDU of each type received from the previous owner that was processed prior to assuming ownership. 		26)	When a transaction is cancelled, both federates shall ensure that their data base and other system status information for the entity are restored to their original condition as it existed before the transaction was initiated and shall ensure that the cancellation does not result in an ownership conflict.		27)  No entity that is part of an aggregation shall be eligible to be transferred as a single entity unless it is removed from the aggregation to which it belongs and established as a separate, standalone entity. 	b)	For Federates that do not implement the Transfer Control Function, the following rules apply:		1)	A federate that does not implement the transfer control capability, but needs to determine ownership of entities during an exercise, shall implement the following:			a.	Receive and process the Ownership Event Report PDU. 			b.	Issue the Ownership Data Query PDU.			c.	Receive and process the Ownership Data PDU in response, as a minimum, to an Ownership Data Query PDU it originated.  			d.	Have the ability to process the Transferred Entity Indicator subfield of the PDU Status Field in the PDU Header Record.			e.	A federate may also receive and process an Ownership Data PDU that is not in response to an Ownership Data Query PDU that it originated for the purpose of maintaining its ownership data base.  			f.	The federate shall comply with the rules set forth for the use of these PDUs in 4.5.8.3.	2)	If a federate does not process ownership information as defined in subparagraph b) 1) above, it shall ensure that it recognizes the existence of the PDU Status Field in the PDU Header Record as a legitimate field and not a Padding field, unless it does not perform a validity check to ensure that a Padding field is set to zero. 	c)	If a federate implements a limited transfer control capability, it shall:		1)	Respond to any received Transfer Control Request PDU that initiates a Push or Pull transfer that it does not implement.  The response shall be an Acknowledge-R PDU indicating Unable To Comply.	2)  	Comply with all rules associated with the type of transfer it can originate or respond to. d)	Transfer Initiation Rules.	1)	A transfer transaction is initiated by sending a TCR PDU that contains a request to transfer an entity.  The valid Transfer Types and associated (enumerations) are as follows:				a.	Push Transfer.  Push Transfer-Entity (1), Push Transfer - Environmental Process (4).		b.	Pull Transfer.  Pull Transfer-Entity (2) , Pull Transfer - Environmental Process (5), Manual Pull Transfer - Entity (8), and Manual Pull Transfer - Environmental Process (9).		2)	Only an Active entity shall be eligible to be transferred as indicated by the Entity State PDU Appearance State subfield being set to zero. 	e)	Transfer Transaction Completion Rules.	1)	The transfer transaction for an entity shall be considered completed by the Acquiring Federate when it sends the Initial Entity State PDU for the entity for which it assumed ownership.  The Ownership Event Report PDU for the entity shall be sent by the AF immediately following the transmission of the Initial Entity State PDU and before the TC_AUTO_RESPONSE _TIMER expires. The transfer transaction shall be considered completed at the Divesting Federate upon receipt of the Initial Entity State PDU from the AF for this transaction.      		2)	The divesting federate shall continue to have ownership, process interactions, and output information on the entity until it receives the Initial Entity State PDU transaction at the appropriate time from the AF involved in this transfer transaction.  	3)	An acquiring federate shall ensure that all PDUs required to be output at the time it assumes ownership of an entity are output within one heartbeat period following the receipt of all necessary information from the divesting federate.  Subsequent PDUs for the entity shall be output at the next appropriate heartbeat interval.	4)	The values contained in the initial PDUs output by the acquiring federate shall reflect the latest information received from the previous owner for those attributes and capabilities, as a minimum, that are required to be continued as specified in paragraph 7) below. 	5)	Whenever the acquiring federate assumes ownership of an entity, the Reporting Source subfield of the PDU Status field shall be set as follows for the Entity State, Entity State Update, and Environmental Process PDUs only:			a.	If the Site/Application of the Entity ID is the same as its own Site/Application, it shall be set to 0 (No difference).					b.	If the Site/Application of the Entity ID is not the same as its own Site/Application, it shall be set to 1 (Difference).		6)	Regardless of which PDUs are generated by the acquiring federate, once the transfer transaction is completed, the divesting federate shall cease transmitting all PDUs where the entity was the primary Entity ID in the PDUs (e.g., Entity State, IFF/ATC/NAVAID and Electromagnetic Emissions PDUs.)  No final PDUs of any kind shall be issued for the transferred entity.		7)	The following data fields of the Entity State and Entity State Update PDU shall be maintained by the new owner using the last values received from the divesting owner and shall not be subsequently changed for the life of the entity: 			a.	Entity ID.  			b.	Entity Type and Alternate Entity Type. 			c.	Markings.	f)	Transfer Termination Rules	A transfer transaction may be terminated before being completed.  A transfer transaction that is in progress may be cancelled by either the Acquiring Federate or the Divesting Federate.  The federate initiating the Cancel TCR PDU (Transfer Type set to Cancel Transfer) shall terminate the transaction and disregard any further transfer-related PDUs received from the other federate.  The federate receiving a valid Cancel TCR PDU from the other federate shall also terminate the transaction and cease transmitting any further transfer-related PDUs.  A cancellation of a transfer transaction due to any of the following conditions shall occur immediately upon detection of the condition.  The following rules apply to the federates and the associated entity that is involved in a specific transfer transaction that is terminated.  		1)	A transfer transaction shall be automatically cancelled if an appropriate Acknowledge-R PDU is sent by a federate involved in a transfer transaction indicating Unable To Comply. This cancels the transfer transaction at the sending federate at the time the PDU is sent and at the receiving federate at the time the PDU is received and processed.  				2)	A transfer transaction shall be automatically cancelled if a timer expires without receiving an appropriate message from the other federate.  In this case, the Cancel TCR PDU shall be sent by the federate whose timer expired.  				3)	A transfer transaction shall be automatically cancelled if the required number of Set Record-R PDUs are not received.  In this case, the Cancel TCR PDU shall be sent by the federate that did not receive the required number of Set Record-R PDUs.  				4)	A transfer transaction shall be automatically cancelled if a message is received out of sequence or it contains inappropriate values.  	g)	Ownership Conflict Rules		An ownership conflict exists when two or more federates are transmitting an entity with the same Entity ID. Ownership conflicts generally occur due to either transfer control anomalies or when two or more federates have the same Site and Application values. A federate that implements either the full or limited transfer control shall ensure that it can detect an ownership conflict between itself and another federate.  See 3.1 Definitions and Annex D.  Ownership conflicts may be resolved by automatic logic or manual operator action.   All transfer-capable federates must have the capability to manually deactivate a local entity without sending out a Final Entity State PDU and to process a received Remove Entity TCR PDU.		1)	Ownership Conflict Detection.  Ownership conflict detection for transfer-capable federates shall be an automatic process.   An ownership conflict shall be detected if any of the following messages are received with an Entity ID that is a duplicate of a locally held, active entity and the entity is currently not involved in a transfer transaction:	a.	An Entity State or Entity State Update PDU. 		b.	An Ownership Event Report with Reason = Ownership Conflict.	c.	An Ownership Event Report with Reason = New Owner.	d.	If an ownership conflict is detected and the federate detecting the conflict does not resolve it automatically, the federate shall send an Ownership Event Report with Reason = Ownership Conflict. 		2)	Ownership Conflict Resolution.  An ownership conflict may be resolved by any of the following methods:			a.	Automatic conflict resolution based on the rules described in para. 3) below.			b.	Manual conflict resolution based on the rules described in para. 5) below.			c.	Automatic conflict resolution by the processing of a received Remove Entity TCR PDU as described in para. 6) below.  	 	3)	Automatic Ownership Conflict Resolution.  An ownership conflict may be automatically resolved only by the divesting federate from a previous transfer in which the transfer was by a federate if it was the divesting federate of a previous transfer of the entity that was terminated by the divesting federate prior to normal completion (.  (Ssee 4.5.8.3.2.1.f, Transfer Termination Rules.).  The following rules shall apply if a federate elects to implement this option and remove its local entity:	a.	The entity shall be removed as an active, local entity in the data base.  If retained in the data base it shall be considered a deactivated local entity.	b.	No Final Entity State or Entity State Update PDU shall be sent (i.e., Appearance bit 23 set to deactivated).	c.	Any associated PDUs shall cease to be transmitted without sending a final PDU for them.		d.	An Ownership Event Report PDU with Reason = Local Entity Cancelled - Auto Resolved Conflict shall be sentissued by the federate.  	e.	If the removed entity was involved in a transfer transaction, a Cancel TCR PDU shall be sent.-  If the entity is currently in a transfer transaction that includes this federate, a Cancel TCR PDU shall automatically be sent by the federate.  		4)	Ownership Conflict Dissemination.  If a transfer-capable federate detects an ownership conflict with one of its local active entities and it does not meet the automatic resolution criteria of 4.5.8.3.2.1.g. 3) aboveresolve the conflict automatically, an Ownership Event Report PDU with Reason = Ownership Conflict shall be sentissued by the federate.  	5)	Manual Ownership Conflict Resolution.  Manual ownership conflict resolution shall occur when a conflict situation cannot be resolved automatically and operator involvement is required.An ownership conflict may be manually resolved by operator action.  The operator may resolve the conflict by coordination with another federate to have it drop its local entity or by manually dropping its own local entity.  If the conflict is manually resolved, the federate that cancelled its local entity shall send an Ownership Event Report PDU with Reason = Local Entity Cancelled - Manual Resolved Conflict.  No Final Entity State PDU shall be sent in this case.	6)	Remove Entity TCR PDU.  The Remove Entity TCR PDU may be used by a federate to cause a transfer-capable federate to automatically remove, or deactivate, its local entity from the exercise.  The use of the Remove Entity TCR PDU shall be governed by the federation agreement. If the conflict is resolved in this manner, the federate that cancelled its local entity shall send an Ownership Event Report PDU with Reason = Local Entity Cancelled - Remove Entity TCR Received.  No Final Entity State PDU shall be sent in this case.	h)	Munition Transfer Rules.		The transfer of a munition entity shall be accomplished using the following additional rules:	1)	An acquiring federate shall only take ownership of a munition entity that has been fired from another entity if it has an engagement capability, including generation of the Detonation PDU, that would allow it to continue the engagement for this type of munition.  	2)	The divesting federate shall send the Launched Munition Record for the entity which the acquiring federate shall process, store and use the data either in the eventual Detonation PDU or in a new Launched Munition Record if the entity is transferred to someone else before it detonates.	3)	The acquiring federate shall be able to continue the engage to a specific target entity if one is contained in the Launched Munition Record.  However, the engagement may be subsequently broken if its internal engagement logic determines that the intercept is not feasible.	i)	Transfer Gateway Rules.		A transfer gateway may be used to provide some or all of a transfer control capability to a host federate where the host federate is not able to completely incorporate this functionality.  If a transfer gateway is used, it shall ensure that DIS traffic is managed to and from the host federate such that it is in compliance with the applicable rules contained in 4.5.8.3.	j)	Transmission of Internal Store Data Outside of a Transfer Transaction.		The transmission of internal store data for an entity that is related to a decision whether to transfer the entity, or in preparation for such a transfer, shall be accomplished using the Record-R Query PDU and Record-R PDU. All other transmissions of internal store data for reasons not related to transfer control may be accomplished using any of the PDUs that have a capability to request or transmit internal store data.  There is no requirement for a federate that implements transfer control to initiate or respond to a Record-R Query PDU. 	k)	Automatic and Manual Transfer Mode.		A federate shall be considered in the Automatic Transfer mode if there is no operator manual intervention in the decision to comply or not comply with a received transfer request.  A federate shall be considered in the Manual Transfer mode if there is the capability for an operator to make a decision whether to comply or not comply with a received transfer request.  		1.	Regardless of which transfer mode a federate is operating in, when it receives a transfer request, the initial Acknowledge-R PDU shall be automatically generated.  If the federate is in the Automatic Transfer mode, it shall set the Response Flag to Able to Comply or Unable To Comply.  If it is in the Manual Transfer mode, it may also respond with the Response Flag set to Able to Comply or Unable To Comply if it has initial automatic validity checks that would preclude it from complying with the request.  Otherwise, it shall set the Response Flag to Pending operator action. 		2.	Manual operator actions to initiate a transfer request or cancel one may occur in both the automatic and manual transfer modes. 		3.	A federate operating in the Manual Transfer mode shall alert an operator to a transfer request for which a Pending Operator action response was returned to the originator of the request.  This alert and any decision support information shall be made available to the operator such that a final response can be sent within the time limits imposed by the Manual Response timer.  4.5.8.3.2.2		Push TransferThe rules and associated message sequence for a Push Transfer are specified in this section.  A Push transfer is where the present federate who owns an entity desires to hand the entity over to another federate.  A request is sent from the present owner (divesting federate) to the potential new owner (acquiring federate). This request includes any internal state data.  The acquiring federate then responds with an Acknowledge-R PDU indicating whether it can take the entity or not.  It may initially respond to indicate that an operator will make the decision and then follow up with the final decision. Once the acquiring federate has indicated that it can take the entity from the divesting federate, it sends the Initial Entity State PDU, Ownership Event Report PDU and any other PDUs that would normally be sent for a new local entity.   Some optional PDUs are also involved in the process.  Timers are set by each federate at different points in the transfer process to allow the transfer to be automatically terminated if applicable. 	a)	Push Transfer Rules		A Push Transfer shall comply with the general transfer rules specified in 4.5.8.3.2.1, 4.5.8.3.3 and 4.5.8.3.4 in addition to the specific Push Transfer rules listed in b. below.	b)	Push Transfer Message SequenceThe message sequence and associated rules shall be as defined in this paragraph and depicted in Figure 22.  The steps listed here correlate with those shown in Figure 22.   If there is a conflict between this paragraph and the content of Figure 22, the requirements defined here shall be considered superseding.  	1)	Step 1.   The Divesting Federate (DF) transmits a TCR PDU that indicates a transfer request (see 4.5.8.3.2.1.d.1.a ) with the TCR PDU set as specified in 4.5.8.3.3.1 to a specific Acquiring Federate (AF).  Required internal state data inside Record Sets shall be included, if applicable.  	2)	Step 2.   If the number of record sets needed to send all the internal store data exceeds the maximum length of the TCR PDU, the remaining record sets shall be included in one or more Set Record-R PDUs sent at the same time and following the TCR PDU.	3)	Step 3.   If the AF is in the manual mode, an Acknowledge-R PDU with the Response Flag set to Pending Operator Action shall be automatically sent to the DF and the AF operator alerted to the transfer request.   Otherwise, this step is skipped.	4)	Step 4.   If an Acknowledge-R PDU with the Response Flag set to Able To Comply is sent, the transfer transaction shall be continued and steps 5 through 7 shall be executed.  If an Acknowledge-R PDU with the Response Flag set to Unable To Comply is sent, the transfer transaction shall be cancelled by both parties.   	5)	Step 5.   (Optional) One or more Record-R PDUs may be optionally sent by the AF to reflect the content and exact values of the record(s) received from the DF.  The records may be placed in the Record-R PDU in any order.  A DF shall not be required to process the Record-R PDU when received as part of a transfer transaction.  	6)	Step 6. The Acquiring Federate (AF) shall send the initial Entity State PDU before the TC_AUTO_RESPONSE_TIMER expires. If there are additional PDUs related to the entity, they shall be sent in accordance with the federate’s requirements for sending such PDUs for a newly initiated local entity.  Upon receipt of the initial Entity State PDU from the AF, the DF shall cease transmission of any PDUs for the transferred entity. At this point the DF no longer owns the transferred entity.  No Final Entity State PDU (with the Appearance State Field set to Deactivated) shall be transmitted by the DF for a transferred entity. The exact process whereby a DF's local entity is transitioned to a remote entity and an AF's remote entity is transitioned to a local entity is beyond the scope of this Standard. 	7)	Step 7. The AF shall also send the Ownership Event Report PDU before the TC_AUTO- _RESPONSE _TIMER expires.  This PDU must follow the initial Entity State PDU but may be interspersed with other PDUs so long as it is sent before the timer expires.Figure 22 - The Push Transfer4.5.8.3.2.3	Pull Transfer The rules and associated message sequence for a Pull Transfer are specified in this section.  A Pull transfer is where a federate asks to take ownership of someone else’s entity. A request is sent from the potential new owner (Acquiring federate) to the present owner (Divesting Federate). The divesting federate then responds with an Acknowledge-R PDU indicating whether or not it will relinquish ownership of the entity.  It may initially respond to indicate that an operator will make the decision and then follow up with the final decision. Once the divesting federate indicates that it will relinquish ownership entity, it will send any applicable internal state data.  The acquiring federate then sends the Initial Entity State PDU, Ownership Event Report PDU and any other PDUs that would normally be sent for a new local entity.   Some optional PDUs are also involved in the process.  Timers are set by each federate at different points in the transfer process to allow the transfer to be automatically terminated if applicable PDUs are not received within time limits.    	a)	Pull Transfer Rules		1)	A Pull Transfer shall comply with the general transfer rules specified in 4.5.8.3.2.1, 4.5.8.3.3 and 4.5.8.3.4 in addition to the specific Pull Transfer rules listed in b. below.		2)	A federate shall not send a Pull Transfer Request if, as a minimum, any of the following conditions exists:				a.	It is at entity capacity such that it could not store the transferred entity at the time the transfer request is made.				b.	It cannot maintain the entity with the same entity type after the transfer is completed.				c.	It does not currently hold the entity to be transferred as an external (remote) entity in its entity data base. 		3)	A federate shall not be required to both initiate and respond to a Pull Transfer request.  It may do one or the other, or both.		4)	If a Pull TCR PDU is received addressed to a transfer-control capable federate that is not the owner of the entity, an automatically generated Acknowledge-R PDU with Response set to Unable To Comply shall be returned to the originator of the Pull TCR PDU. 			5)	The federate receiving a Pull Transfer Request directed to it shall ensure, as a minimum, that all the following conditions are met before responding with an Able to Comply Acknowledge-R PDU.  If they are not met, an Unable To Comply Acknowledge-R PDU shall be sent.				a.	The entity to be transferred is held in its entity data base as an internal (local) entity at the time the TCR PDU is received. 				b.	The entity is not presently involved in a transfer transaction.				c.	Internal criteria have been met for relinquishing ownership.  Specific criteria are beyond the scope of this standard.		d.	Eligibility checks to ensure that the federate requesting ownership is capability of maintaining the entity are beyond the scope of this standard.  Such check should be in accordance with the federation agreement.	b)	Pull Transfer Message Sequence	1)	Step 1.   The Acquiring Federate (AF) transmits a TCR PDU that indicates a transfer request (see 4.5.8.3.2.1.d.1.b ) with the TCR PDU set as specified in 4.5.8.3.3.1 to a specific Divesting Federate (DF).  	2)	Step 2.   If the DF is in the manual mode, an Acknowledge-R PDU with the Response Flag set to Pending Operator Action shall be automatically sent to the AF.  The DF operator alerted to the transfer request.   Otherwise, this step is skipped.	3)	Step 3.   If an Acknowledge-R PDU with the Response Flag set to Able To Comply is sent, the transfer transaction shall be continued and steps 5 through 7 shall be executed.  If an Acknowledge-R PDU with the Response Flag set to Unable To Comply is sent, the transfer transaction shall be cancelled by both parties.   	4)	Step 4.  If an Able To Comply Acknowledge PDU is sent, any applicable internal state data shall  be sent in one or more Set Record-R PDUs immediately following the Acknowledge PDU.    	5)	Step 5 (Optional) One or more Record-R PDUs may be optionally sent by the AF to reflect the content and exact values of the record(s) received from the DF.  The records may be placed in the Record-R PDU in any order.  A DF shall not be required to process the Record-R PDU when received as part of a transfer transaction.  	6)	Step 6. The Acquiring Federate (AF) shall send the initial Entity State PDU before the TC_AUTO_RESPONSE_TIMER expires. If there are additional PDUs related to the entity, they shall be sent in accordance with the federate’s requirements for sending such PDUs for a newly initiated local entity.  Upon receipt of the initial Entity State PDU from the AF, the DF shall cease transmission of any PDUs for the transferred entity. At this point the DF no longer owns the transferred entity.  No Final Entity State PDU (with the Appearance State Field set to Deactivated) shall be transmitted by the DF for a transferred entity. The exact process whereby a DF's local entity is transitioned to a remote entity and an AF's remote entity is transitioned to a local entity is beyond the scope of this Standard. 	7)	Step 7. The AF shall also send the Ownership Event Report PDU before the TC_AUTO- _RESPONSE _TIMER expires.    This PDU must follow the initial Entity State PDU but may be interspersed with other PDUs so long as it is sent before the timer expires.Figure 23 - The Pull Transfer4.5.8.3.2.4	Transfer Control TimersThe timers associated with the Transfer Control function are shown in Table 60.2.Table 60.2 - Transfer Control TimersSymbolic NameDefinitionNumeric Range*DefaultvalueTC_AUTO_RESPONSE_TIMERTransfer Control Automatic Response TimerThis timer shall be set as specified in Figures 22 and 23.If a valid, expected PDU is not received in the allotted time from the other federate involved in a transfer transaction, the transaction shall be terminated and a Cancel Transfer Control Request PDU shall be sent. (1,1-600) seconds5 secsTC_MAN_RESPONSE_TIMERTransfer Control Manual Response TimerThis timer shall be set as specified in Figure 22 and 23.This timer shall be set (by an AF or DF) upon receipt of a Pending Operator Action Acknowledge-R PDU, or during a pull-divest when the AF is in the manual transfer mode and the DF is expecting a Record-R PDU or an Initial Entity State PDU.If a valid, expected PDU is not received in the allotted time from the other federate involved in a transfer transaction, the transaction shall be terminated and a Cancel Transfer Control Request PDU shall be sent.(1,1-600) seconds120 secs*Numeric range (n1, n2 - n3) where N1 is the increment that the value can be specified in (e.g. 1 means 1 second intervals, 2 means 2 second intervals. If the increment is 2, then the timer value over the range can be 2, 4, 6, etc.)  N2 is the lowest possible value and n3 is the highest possible value.4.5.8.3.3	Related PDUsThe detailed requirements related to the PDUs that directly support the transfer control function are provided in Annex D.  4.5.8.3.4	Related RecordsThe records related to the Transfer Control function are listed in Table 60.3.  These records shall be used to pass the type of internal state data indicated by each record when required by provisions of 4.5.8.3 and by a federation agreement.  The record formats and rules are described in Section 5.2 of this standard, as shown in Table 60.3.  Table 60.3 - Transfer Control Related RecordsRecord NameSectionPDU Status record5.2.61Munition record 5.2.62Engine Fuel record5.2.63Storage Fuel record 5.2.64Designation record5.2.65Expendable record 5.2.66Total Record Sets record 5.2.67Launched Munition record 5.2.68Association record 5.2.69Sensor record5.2.70Ownership Status record5.2.71Location record 5.2.72Location Set record5.2.73Formation record5.2.74Formation Member record5.2.75 Appendix BOther Transfer Control Related Changes to IEEE 1278.1a1.0	GeneralThis appendix lists the other changes to paragraphs in IEEE 1278.1a in addition to the replacement of paragraph 4.5.8.3.The paragraph numbers below correspond to those in IEEE 1278.1a.3.1	DefinitionsAdd the following sentence to the 3.1 Definitions section and include theIf a term in italics precedes a PDU name, it is used to more clearly and easily define the use of the PDU.  The following definitions apply to the Transfer Control function. Able To Comply Acknowledge-R PDU.  An Acknowledge PDU with the Response set to Able to Comply.Acquiring Federate.  The federate (simulation application) that will become the new owner of the entity involved in a transfer transaction.Appropriate PDU.  A PDU involved in a transfer transaction that (1) is sent or received at the correct point in the message sequences associated with a transfer transaction, and (2) contains correct data.Auto Pull Transfer   A Pull Transfer that is initiated at the originating federate via automatic logic that does not involve an operator.Automatic mode.  A federate is in the Automatic mode if the simulation application is automatically processing all messages associated with a transfer transaction.  A federate at which an operator manually initiates a transfer is considered to be in the Automatic mode if the operator has no control over the completion of the transfer transaction except to manually cancel the transfer.Cancel Entity State PDU.  An Entity State PDU with Appearance Bit 23 set to Inactive.Cancel TCR PDU.   A TCR PDU with Transfer Type set to Cancel transfer.Divesting Federate.  The federate (simulation application) that presently owns the entity involved in a transfer transaction.Federate.  A simulation as represented by a simulation address (site/application).Federation.  A group of federates formed to conduct an exercise, test or experiment.Full transfer control capability.  The capability to initiate and respond to both Push and Pull Transfer requests.Internal State Data.   Data held by a federate that is not contained in the Entity State, Entity State Update, or an associated attribute PDU (e.g., IFF PDU, Emissions PDU).Limited transfer control capability.  The capability to initiate and/or respond to a Push or Pull Transfer request but not able to both initiate and respond to both Push and Pull transfer requests. (See Full transfer control capability.)Manual mode.   An acquiring or divesting federate is in the Manual mode if (1) an operator manually initiates the transfer request, Acknowledge-R PDU, or manually initiates sending the initial Entity State PDU to complete a transfer. The simulation application will still automatically process some of the messages associated with the manual mode.Manual Pull Transfer.  A Pull Transfer that is initiated at the originating federate via manual logic that involves operator action to send the Transfer Request.Originating Federate.  The federate that initiates a transfer transaction by sending the transfer request.Owner, Ownership.  The federate that owns the entity and is sending PDUs related to the entity. Ownership Conflict.  An ownership conflict exists when the present owner of an entity receives an Entity State, Entity State Update PDU or an associated attribute PDU (e.g., IFF PDU, Emissions PDU) from another federate and the entity is not currently involved in a transfer transaction with the present owner.Ownership verification check.  A check made to verify the present owner of an entity.  This is accomplished by comparing the Originating Entity ID from the Transfer Request with stored ownership information previously received in the Ownership Event Report PDU or an Ownership Data PDU. Ownership Data Query PDU.  A Data Query PDU with Datum ID = 15800, Ownership Status.  If the federate that owns the entity has implemented the Transfer Control function, it is required to respond with an Ownership Data PDU.Ownership Data PDU.  A Data PDU with a datum record for Datum ID = 15800, Ownership Status.Ownership Event Report PDU.  An Event Report PDU with a datum record for Datum ID = 15800, Ownership Status.Primary Entity ID.  The Entity ID in a PDU to which the data primarily applies when more than one Entity ID is contained in the PDU.  For example, for the Electromagnetic Emissions PDU, the Emitter Entity ID is the Primary Entity ID.Pull Transfer.  A transfer where the Acquiring federate wants to take ownership of another federate’s entity. A Pull Transfer may be an Auto Pull Transfer or a Manual Pull Transfer.Push Transfer.  A transfer where the Divesting federate wants to give its entity to another federate.Transfer Request TCR PDU.  A TCR PDU that where Transfer Type is set to Push or Pull.Push Transfer Request.  A TCR PDU with Transfer Type set to a Push transfer value.Pull Transfer Request.  A TCR PDU with Transfer Type set to an Auto or Manual Pull transfer value.Transfer Request.  A TCR PDU with Transfer Type set to a Push or Pull transfer value.Transfer Transaction.  The process associated with the transfer of an entity.  This process is initiated by sending the Transfer Control Request (TCR) PDU for an entity and is completed at the Acquiring federate when it sends the Initial Entity State PDU and at the Divesting federate when it receives that PDU.  A transfer transaction may be terminated without being completed by sending and receiving a Cancel TCR PDU between the two federates involved in the transaction.  A transfer transaction will be in effect at one federate, or both federates, depending on the phase of the transfer transaction and message exchange. Unable To Comply Acknowledge-R PDU.  An Acknowledge PDU with the Response set to Unable to Comply.Validity check.  A check by a federate to determine if a PDU is received in the sequence or at the time required by the standard, or in accordance with a federation agreement, and that the data is valid.    A federate may use additional criterion to determine validity beyond that required by this standard.Valid data.  Data that conforms to the requirements of the standard and which is appropriate for a given circumstance as determined by validity checks performed by a receiving federate.Valid PDU.  A PDU that contains appropriate information for the situation and which has passed validity checks by the receiving federate.  If the PDU is part of a sequence of message exchanged between two federates, it must arrive at the proper time in the sequence.4.5.1		PDU HeaderThe PDU Header section requires the addition of the following new field.  This field will replace the 16-bit padding field in the PDU Header.4.5.1.6	PDU Status recordThe PDU Status record shall specify status information related to this PDU (see 5.2.61).5.1.4	Symbolic NamesAdd the following to the introduction:     D: means a Default Value.  Range is expressed as an increment followed by the lowest and highest value allowed.Add the following additions in alphabetical order to the existing list:Symbolic name	Value	Range	DefinitionTC_AUTO_RESPONSE_TIMER 	D: 5 sec	1, 1-100	Table 60.2TC_MAN_RESPONSE_TIMER 	D: 120 sec	1, 1-600	Table 60.2NO_VALUE	0	- - - - - -	- - - - - - - -5.2 	Basic Data Types and RecordsThe Basic Data Types and Records section requires the addition of the following new records that support the Transfer Control function.5.2.61		PDU Status recordPDU status information shall be specified in the PDU Status record that is contained in the PDU Header as shown in Table 90.1.  Enumerations are defined in the EBV Document.  Table 90.1 - PDU Status recordBoolean BitFieldUnits0Not used1 bit unused1Transferred Entity Indicator1-bit enumeration2-15Not used14 bits unused5.2.62		Munition recordMunition (weapon) information for an entity shall be communicated using a Munition record.  The Munition record shall indicate the weapons (munitions) presently available for an entity.    It shall be used when weapons data for an entity is being transferred between the originating federate and a receiving federate that will become the new owner of the entity.  It may also be used for other purposes.   This record is optional even if the divesting federate maintains internal munitions data for the entity being transferred.Non-Specific Stations: One Munition record is used for each type of munition when stations/launchers are not specified (i.e., the Station/Launcher field is zero).   Specific Stations:  One Munition record is used to indicate the quantity of a munition type located at one specific station/launcher when the Station/Launcher field value is non-zero.   All Munition records associated with an entity shall either be Non-Specific Stations or Specific Stations.   There shall be no mixing of the two types in a given transfer.   The Munition record shall contain the following fields: a)	Munition Type.  This field shall identify the entity type of the munition.  This field shall be represented by an Entity Type record (see 5.2.16 and Section 4 of EBV-DOC).b)	Station/Launcher.	  This field shall indicate the station or launcher to which the munition is assigned.  A zero value shall indicate that this Munition record is not associated with any particular station/launcher and represents the total quantity of this munition type for this entity.  If this field is non-zero, it shall either reference an attached part or an articulated part, as defined in Annex A and enumerated in Section 4.7 of EBV-DOC.  In this case, the Munition record indicates the quantity of a munition type at the specified station/launcher.  c)	Quantity.  This field shall identify the quantity remaining of this munition. d)	Munition Status.  This field shall specify the status of the munition.  It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  The format of the Munition record shall be as shown in Table 90.2.Table 90.2 - Munition recordField size (bits)Field Names and Units64Munition TypeEntity Type record (see 5.2.16)32Station/LauncherParameter Type field (see Annex A and Section 4.7 of EBV-DOC)16Quantity16-bit unsigned integer8Munition Status8-bit enumeration8Padding8 bits unusedTotal Munition record size = 128 bits5.2.63		Engine Fuel recordEngine Fuel information for an entity shall be communicated using an Engine Fuel record.  The Engine Fuel record shall indicate the amount of fuel remaining for an entity.    It shall be used when engine fuel data for an entity is being transferred between the originating federate and a receiving federate that will become the new owner of the entity.   It may also be used for other purposes.   This record is optional even if the divesting federate maintains internal engine fuel data for the entity being transferred.Non-Specific Fuel Location:  One Engine Fuel record is used for all engine fuel associated with the entity if the Fuel Location field is zero.   Specific Fuel Location:  One Engine Fuel record may be used to indicate the quantity of fuel remaining for each fuel location specified in the Fuel Location field associated with the entity.  The Engine Fuel records associated with an entity shall either be Non-Specific Fuel Location (1 record) or Specific Fuel Location (1 or more records).   There shall be no mixing of specific and non-specific fuel locations in a given transfer.  The Engine Fuel record shall contain the following fields: a)	Fuel Quantity.  This field shall indicate the quantity of fuel remaining in increments specified in the Fuel Measurement Units field. b)	Fuel Measurement Units.  This field shall identify the fuel measurement units.  It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  c)	Fuel Type.  This field shall identify the type of fuel.    It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  d)	Fuel Location.	  This field shall indicate the location of the fuel as related to the entity.  A zero indicates no specific location.  In this case, the fuel quantity is available for all engines associated with the entity.  Values for this field are found in Section 14 of EBV-DOC.  The format of the Engine Fuel record shall be as shown in Table 90.3.Table 90.3 - Engine Fuel recordField size (bits)Field Names and Units32Fuel Quantity32-bit unsigned integer8Fuel Measurement Units8-bit enumeration8Fuel Type8-bit enumeration8Fuel Location8-bit enumeration8Padding8 bits unusedTotal  Engine Fuel record size = 64 bits5.2.64		Storage Fuel recordStorage Fuel information for an entity shall be communicated using a Storage Fuel record. This also includes off-load fuel.  Storage fuel is defined as fuel that is not available for use by engines associated with the entity being transferred, or for entities that do not have engines.  The Storage Fuel record shall indicate the amount of fuel remaining that is being stored by the entity being transferred.    It shall be used when storage fuel is required to be transferred as part of a transfer.  It may also be used for other purposes.   This record is optional even if the divesting federate maintains internal storage fuel data for the entity being transferred.Non-Specific Fuel Location:  One Storage Fuel record is used for all storage fuel associated with the entity if the Fuel Location field is zero.   Specific Fuel Location:  One Storage Fuel record may be used to indicate the quantity of fuel remaining for each fuel location specified in the Fuel Location field associated with the entity.  The Storage Fuel records associated with an entity shall either be Non-Specific Fuel Location (1 record) or Specific Fuel Location (1 or more records).   There shall be no mixing of specific and non-specific fuel locations in a given transfer.  The Storage Fuel record shall contain the following fields: a)	Fuel Quantity.  This field shall indicate the quantity of fuel remaining in increments specified in the Fuel Measurement Units field. b)	Fuel Measurement Units.  This field shall identify the fuel measurement units.  It shall be represented by an 8-bit enumeration. .  Values for this field are found in Section 14 of EBV-DOC.  c)	Fuel Type.  This field shall identify the type of fuel.    It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  d)	Fuel Location.	  This field shall indicate the location of the fuel as related to the entity.  A zero indicates no specific location.  In this case, the fuel quantity is not allocated to any specific fuel locations.  Values for this field are found in Section 14 of EBV-DOC.  The format of the Storage Fuel record shall be as shown in Table 90.4.Table 90.4 - Storage Fuel recordField size (bits)Field Names and Units32Fuel Quantity32-bit unsigned integer8Fuel Measurement Units8-bit enumeration8Fuel Type8-bit enumeration8Fuel Location8-bit enumeration8Padding8 bits unusedTotal  Storage Fuel record size = 64 bits5.2.65		Designation recordDesignation information associated with an entity being transferred or with a Location record shall be communicated using a Designation record.  Designation information includes call signs, a target or location designation, etc. The Designation field is a fixed length ASCII character string, large enough to contain an ASCII Entity Marking (see 5.2.15).  Longer character strings can be transferred using multiple Designation records in a Record Set (see 5.2.55).  Each record shall specify the same Designation Identifier and Designation Type.  The Designation fields shall be concatenated, and only the last Designation field shall contain a null character, specifying the end of the string.  This record is optional for a transfer transaction even though the divesting federate may have designation information available for the entity in its internal stores.  The Designation record shall contain the following fields: a)	Designation Identifier.  This field shall specify the Designation Identification number for this designation.  It shall be represented by a 16-bit unsigned integer.  This field allows the differentiation of multiple designations related to the entity being transferred, or related to associated locations, etc.  b)	Designation Type.  This field shall indicate the type of designation.  It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  c)	Designation.  This field shall represent the designation using a string of 13 ASCII characters.  Unused characters shall be set to a null value.  Multiple Designation fields may be concatenated to form a longer string.  The format of the Designation record shall be as shown in Table 90.5.Table 90.5 - Designation recordField size (bits)Field Names and Units16Designation Identifier16-bit unsigned integer8Designation Type8-bit enumeration104Designation13 8-bit ASCII charactersTotal Designation record size = 128 bits5.2.66		Expendable recordExpendables (e.g., chaff, flares, etc.) information for an entity shall be communicated using an Expendable record.  The Expendable record shall indicate the expendables presently available for an entity.    Non-Specific Stations: One Expendable record is used for each type of expendable when stations/launchers are not specified (i.e., the Station/Launcher field is zero).   Specific Stations:  One Expendable record is used to indicate the quantity of an expendable type located at one specific station/launcher when the Station/Launcher field value is non-zero.   All Expendable records associated with an entity shall either be Non-Specific Stations or Specific Stations.   There shall be no mixing of the two types in a given transfer.   This record is optional even if the divesting federate maintains internal expendable data for the entity being transferred.The Expendable record shall contain the following fields: a)	Expendable Type.  This field shall identify the entity type of the expendable.  This field shall be represented by an Entity Type record (see 5.2.16 and Section 4 of EBV-DOC). b)	Station/Launcher.	  This field shall indicate the station or launcher to which the expendable is assigned.  A zero value shall indicate that this Expendable record is not associated with any particular station/launcher and represents the total quantity of this expendable type for this entity.  If this field is non-zero, it shall either reference an attached part or an articulated part, as defined in Annex A and enumerated in Section 4.7 of EBV-DOC.  In this case, the Expendable record indicates the quantity of an expendable type at the specified station/launcher.  c)	Quantity.  This field shall identify the quantity remaining of this expendable.  d)	Expendable Status.  This field shall specify the status of the expendable.  It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  The format of the Expendable record shall be as shown in Table 90.6.  Table 90.6 – Expendable recordField size (bits)Field Names and Units64Expendable TypeEntity Type record (see 5.2.16)32Station/LauncherParameter Type field (see Annex A and Section 4.7 of EBV-DOC)16Quantity16-bit unsigned integer8Expendable Status8-bit enumeration8Padding8 bits unusedTotal Expendable record size = 128 bits5.2.67		Total Record Sets recordThe Total Record Sets record shall be used in a transfer transaction when all the required record sets cannot fit within the size limitations of a single Transfer Control Request, Set Record-R or Record-R PDU.  This record may also be used for other purposes.  The Total Record Sets record is mandatory for a transfer transaction if all the necessary record sets in a Transfer Control Request, a Set Record-R, or a Record-R PDU cannot fit in a single PDU.  This record shall be included in the first PDU in a sequence of PDUs carrying record sets.  When included, it may be inserted in any record order.  The Total Record Sets record is optional if all record sets fit within a single PDU.  The Total Record Sets record shall contain the following fields:  a)	Total Record Sets.  This field shall specify the total number of record sets, possibly spanning multiple PDUs, which are being transferred in conjunction with the current Transfer Control Request, Set Record-R or Record-R PDU.  The format of the Total Record Sets record shall be as shown in Table 90.7.  Table 90.7 – Total Record Sets recordField size (bits)Field Names and Units8Total Record Sets8-bit unsigned integer24Padding24 bits unusedTotal Record Sets record size = 32 bits5.2.68		Launched Munition recordInformation for a munition entity being transferred when it was the entity specified in the Munition ID field of a previously transmitted Fire PDU shall be communicated using the Launched Munition record.   The acquiring federate shall process and store the Firing Entity ID and Fire Event ID fields contained in this record and shall use it to either (1) complete the corresponding fields in a subsequent Detonation PDU related to this munition entity or (2) pass this information on to another federate if the munition is transferred again before the Detonation PDU is issued.   The Launched Munition record shall not be used if the entity being transferred is a munition for which no Fire PDU was issued.  This record may also be used to support other functional areas besides the transfer function.This record is mandatory if the entity being transferred is a munition entity that was previously contained in the Munition ID field of a Fire PDU.  Either the Target Entity ID or the Target Location in World Coordinates field may be specified, but not both.    Additional target entities and/or target locations may be communicated using the Association record (see 5.2.69).  If one or more Association records are to be used in this fashion, they shall immediately follow the Launched Munition record.  The Launched Munition record shall contain the following fields: a)	Fire Event ID.  This field shall contain the same data as in the Event ID field of the Fire PDU that communicated the launch of the munition.  This field shall be represented by an Event Identifier record (see 5.2.18).  b)	Firing Entity ID.  This field shall contain the same data as in the Firing Entity ID field of the Fire PDU that communicated the launch of the munition.  This field shall be represented by an Entity Identifier record (see 5.2.14).c)	Target Entity ID.  This field shall identify the munition’s target entity.  The value of this field may be different than that contained in the Fire PDU that communicated the launch of the munition.  If there is no identified target entity, this field shall contain the value TARGET_ID_UNKNOWN.  This field shall be represented by an Entity Identifier record (see 5.2.14).d)	Target Location in World Coordinates.  This field shall specify the munition’s geographic target location in world coordinates.  This field shall be set to zero if there is no specific geographic target.  This field shall be represented by a World Coordinates record (see 5.2.34).  The format of the Launched Munition record shall be as shown in Table 90.8.  Table 90.8 – Launched Munition recordField size (bits)Field Names and Units48Fire Event IDEvent Identifier record(see 5.2.18)48Firing Entity IDEntity Identifier record(see 5.2.14)48Target Entity IDEntity Identifier record(see 5.2.14)192Target Location in World CoordinatesWorld Coordinates record(see 5.2.34)16Padding16 bits unusedTotal Launched Munition record size = 352 bits5.2.69		Association recordAn entity or location associated with a transferred entity shall be communicated using the Association record.  If more than one entity or location is associated with the transferred entity, multiple Association records may be sent.  Either an associated entity or a location, but not both, may be specified.  Exactly one of the two association object fields (i.e., entity or location) must contain valid non-zero information.This record is optional for a transfer transaction even if the divesting federate maintains internal association data related to the entity being transferred.  The Association record shall contain the following fields: a)	Association Type.  This field shall indicate the type of association.  It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  b)	Associated Entity ID.  This field shall identify the associated entity.  If there is no associated entity, this field shall be set to NO_SPECIFIC_ENTITY.  This field shall be represented by an Entity Identifier record (see 5.2.14).  c)	Associated Location in World Coordinates.  This field shall specify the associated location in world coordinates.  If there is no associated location, this field shall be set to zero.  This field shall be represented by a World Coordinates record (see 5.2.34).  The format of the Association record shall be as shown in Table 90.9.  Table 90.9 – Association recordField size (bits)Field Names and Units8Association Type8-bit enumeration48Associated Entity IDEntity Identifier record(see 5.2.14)192Associated Location in World CoordinatesWorld Coordinates record(see 5.2.34)8Padding8 bits unusedTotal  Association record size = 256 bits5.2.70		Sensor recordSensor information for an entity shall be communicated using a Sensor record.  The Sensor record shall indicate the sensors presently available for an entity.    It shall be used when sensor data for an entity is being transferred between the originating federate and a receiving federate that will become the new owner of the entity.  It may also be used for other purposes.  This record is optional even if the divesting federate maintains internal sensor data for the entity being transferred.Non-Specific Stations: One Sensor record is used for each type of sensor when stations are not specified (i.e., the Station field is zero).   Specific Stations:  One Sensor record is used to indicate the quantity of a sensor type located at one specific station when the Station field value is non-zero.   All Sensor records associated with an entity shall either be Non-Specific Stations or Specific Stations.   There shall be no mixing of the two types.   The Sensor record shall contain the following fields: a)	Sensor Type Source.  This field shall specify the source of the Sensor Type field as defined in Section 14 of EBV-DOC.  It shall be represented by an 8-bit enumeration.    b)	Sensor On/Off Status.  This field shall specify the on/off status of the sensor.  It shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  c)	Sensor Type.  This field shall specify the sensor type and shall be represented by a 16-bit enumeration.  Values for this field are found in various sections of EBV-DOC as specified by the Sensor Type Source field value.  See Table 15-1 of EBV-DOC.    d)	Station.	  This field shall indicate the station to which the sensor is assigned.  A zero value shall indicate that this Sensor record is not associated with any particular station and represents the total quantity of this sensor for this entity.  If this field is non-zero, it shall either reference an attached part or an articulated part, as defined in Annex A and enumerated in Section 4.7 of EBV-DOC.  In this case, the Sensor record indicates the quantity of a sensor at the specified station.  e)	Quantity.  This field shall identify the quantity of this sensor.  The format of the Sensor record shall be as shown in Table 90.10.Table 90.10 - Sensor recordField size (bits)Field Names and Units8Sensor Type Source8-bit enumeration8Sensor On/Off Status8-bit enumeration16Sensor Type16-bit enumeration32StationParameter Type field (see Annex A and Section 4.7 of EBV-DOC)16Quantity16-bit unsigned integer16Padding16 bits unusedTotal Sensor record size = 96 bits5.2.71		Ownership Status recordThe Ownership Status record is used to convey entity ownership and ownership conflict status information.   The Ownership Status record shall contain the following fields: Ownership Status.  The ownership and/or ownership conflict status of the entity represented by the Entity ID field.  This field shall be represented by an 8-bit enumeration.  Values for this field are found in Section 14 of EBV-DOC.  Entity ID.  This field shall identify the entity that is the subject of the Ownership Status record.  This field shall be represented by an Entity Identifier record (see 5.2.14).The format of the Ownership Status record shall be as shown in Table 90.11.  Table 90.11 – Ownership Status recordField size (bits)Field Names and Units8Ownership Status8-bit enumeration48Entity ID Entity Identifier record(see 5.2.14)8Padding8 bits unusedTotal Ownership Status record size = 64 bits5.2.72		Location record[To be inserted after design is completed.] 5.2.73		Location Set record[To be inserted after design is completed.]5.2.74		Formation record[To be inserted after design is completed.]5.2.75		Formation Member record[To be inserted after design is completed.]Appendix CTransfer Control Changes to EBV-DOC (Enumerations)1.0	GeneralThe changes to the enumerations to support the Transfer Control function contained in the IST-CF-03-01 EBV Document, dated 5 May 2003, are listed here.3.4  PDU Status  (new)3.4.1	Transferred Entity IndicatorThis section specifies the 1-bit enumeration for the Transferred Entity Indicator field.  This field is set, when applicable, for the Entity State, Entity State Update and Environmental Process PDU.Field value	Purpose0	No difference.  The Simulation Address of the Entity ID is the owner 1	Difference.  The Simulation Address of the Entity ID is not the owner.7.0  Simulation Management familyListed here are the changes/additions to the EBV-DOC that are necessary to support the Transfer of Control records.  	7.1  Datum and Record Specification records[Replace the first paragraph with the following.] This section specifies the 32-bit enumerations for Datum ID in the Datum Specification Record and Record ID in the Record Specification record, as found in the Action-Request, Action-Response, Data-Query, Set-Data, Data, Event-Report, Message, Transfer Control Request, Set Record-R, and Record-R PDUs.  Also shown for each datum and record are its type, length, units, and an abbreviated description.[The following entries are to be added to the existing table in Section 7.1 of EBV-DOC.] IDNameTypeLength (bits)UnitsLimits/Ranges/Ref15800Ownership StatusOwnership Status record64See IEEE Std 1278.1500001MunitionMunition recordSee IEEE Std 1278.1500002Engine FuelEngine Fuel recordSee IEEE Std 1278.1500003Storage FuelStorage Fuel recordSee IEEE Std 1278.1500004DesignationDesignation recordSee IEEE Std 1278.1500005ExpendableExpendable recordSee IEEE Std 1278.1500006Total Record SetsTotal Record Sets recordSee IEEE Std 1278.1500007Launched MunitionLaunched Munition recordSee IEEE Std 1278.1500008AssociationAssociation recordSee IEEE Std 1278.1500009SensorSensor recordSee IEEE Std 1278.1500010LocationLocation recordSee IEEE Std 1278.1500011Location SetLocation Set recordSee IEEE Std 1278.1500012FormationFormation recordSee IEEE Std 1278.1500013Formation MemberFormation Member recordSee IEEE Std 1278.17.3  	Acknowledge PDU7.3.2  Response FlagThis field specifies the 16-bit enumeration for the Response Flag field in the Acknowledge PDU.Field Value	Response Flag0	Other1	Able to comply2	Unable to comply3	Pending operator action    (new)7.6  Event Report PDUThis section specifies the 32-bit enumeration for the Event-Type field in the Event-Report PDU.Field Value	Event Type0..16	already defined in EBV-DOC17	Ownership Report7.7  Record-R PDUThis section specifies the 16-bit enumeration for the Event-Type field in the Record-R PDU.Field Value	Event Type0	Other1-66535	unused7.8  Record Query-R PDUThis section specifies the 32-bit enumeration for the Event-Type field in the Record Query-R PDU.Field Value	Event Type0	Other1	Internal entity state data2-66535	unused	11.4  Transfer Control PDU    The transfer types are changed as shown.11.4.1  Transfer TypeThis section specifies the 8-bit enumeration for the Transfer Type field of the Transfer Control PDU.		Field ValuePresent	0Other	1Push Transfer- Entity.  A federate automatically or manually initiates a request for transfer of an entity it owns.	2*Pull Transfer- Entity.  A federate automatically initiates a request to assume ownership of an entity presently owned by another federate. 	3*Not used	4 Push Transfer - Environmental Process.  A federate automatically or manually initiates a request for transfer of an environmental process it owns.	5Pull Transfer - Environmental Process . A federate automatically initiates a request to assume ownership of an environmental process presently owned by another federate.	6*Not used.	7Cancel Transfer.  The present transfer is cancelled.	8*Manual Pull Transfer - Entity.  A federate manually initiates a request to assume ownership of an entity presently owned by another federate.	9*Manual Pull Transfer - Environmental Process. A federate manually initiates a request to assume ownership of an environmental process presently owned by another federate.	10*Remove Entity - If the entity specified in the Transferred Entity field exists as a local entity at the Receiving Federate, it is to be automatically removed.*denotes change in meaning or new enumeration from IEEE 1278.1a    14.0  General RecordsThis section lists all the enumerations for records that are not limited to a particular family.  14.1  Munition record14.1.1	Munition StatusThe 8-bit enumeration for the Munition Status field is defined as follows: Field Value	Purpose		0 		Other	1 	Ready	2 	Inventory	3-255	Unused14.2  Engine Fuel record14.2.1	Fuel Measurement UnitsThe 8-bit enumeration for the Fuel Measurement Units field is defined as follows:  Field Value	Purpose		0 		Other	1 	liter	2 	kilogram	3-255		Unused14.2.2	Fuel TypeThe 8-bit enumeration for the Fuel Type field is defined in Section 4.2.3.6, Supply type, and uses the Specific field values defined as part of the supply type enumeration.  14.2.3	Fuel LocationThe 8-bit enumeration for the Fuel Location field is defined as follows: Field Value	Purpose	0 	Other	1-255  	Sequential IDs for model-specific fuel locations*		*To be defined for specific platforms per federation agreement.  When an exercise defines locations for a specific platform type (e.g., 1 = Central Fuel tank for an F15C aircraft), it is recommended these locations be submitted for inclusion here to facilitate standardization.	14.3  Storage Fuel record14.3.1	Fuel Measurement UnitsThe 8-bit enumeration for the Fuel Measurement Units field is defined in 14.2.1.14.3.2	Fuel TypeThe 8-bit enumeration for the Fuel Type field is defined in 14.2.2.14.3.3	Fuel LocationThe 8-bit enumeration for the Fuel Location field is defined in 14.2.3.14.4  Designation record14.4.1	Designation TypeThe 8-bit enumeration for the Designation Type field is defined as follows: Field Value	Purpose	0  	Other call sign	1	Voice call sign		2	Tactical call sign	3	Collective call sign	4	Indefinite call sign	5	International call sign	6	Net call sign	7	Visual call sign	8	Basic Encyclopedia  (BE number used in targeting)	9-255 	Unused14.5  Expendable record14.5.1	Expendable StatusThe 8-bit enumeration for the Expendable Status field is defined in 14.1.1.  14.6  Association record14.6.1	Association TypeThe 8-bit enumeration for the Association Type field is defined as follows: Field Value	Purpose	0 	Other	1	Target entity	2	Target location	3 	Home base location 	4 	CAP point location	5  	Flight leader 	6  	Flight member	7  	IP point	8  	Rendezvous point	9  	On-station location	10  	Landing zone location	11 	Downed pilot	12 	Tanker entity that is currently refueling the transferred entity	13 	Tanker entity the transferred entity is headed towards to refuel	14 	Entity headed towards to join up with 	15-255	Unused14.7  Sensor record14.7.1	Sensor Type Source  The 8-bit enumeration for the Sensor Type Source field is defined in Table 15-1 and is the value shown in the Sensor Type Source column of that table. 14.7.2	Sensor On/Off StatusThe 8-bit enumeration for the Sensor On/Off Status field is defined as follows: Field Value	Purpose	0 	Off		1 	On		2+	Not used14.8  Location recordTBD14.9  Location Set recordTBD14.10  Formation recordTBD14.11  Formation Member recordTBD14.12 Ownership Status record14.12.1	Ownership Status  The 8-bit enumeration for the Ownership Status field is defined as follows: Field Value	Purpose		0 = 		Other1 = 	New Owner 2 = 	Ownership Query Response3 = 	Ownership Conflict4 = 	Local Entity Cancelled - Auto Resolve Conflict5 = 	Local Entity Cancelled - Manual Resolve Conflict6 =	Local Entity Cancelled - Remove Entity TCR Received15.0  SensorsThere are many types of passive and active sensors that exist and need to be portrayed in a distributed simulation event.  This document contains many types of sensors grouped by type or the PDUs that are related to them.  Some sensors do not have their own section in other parts of this document. This section serves two purposes. One is to be a single place to find where various sensor enumerations are located in EBV-DOC.   Second is to include sensors that do not fit in a specific section elsewhere.  DIS functions such as transfer control may require the passing of information on sensors associated with an entity.  The identification of such sensors uses the same reference scheme as is implemented for the sensor in various tables and paragraphs in this document.   Sensors and emitters that are not part of another platform or system are listed in paragraphs 4.2.1.9 and 4.2.3.9.  The sensor or emitter Entity Type is a 64-bit record.  Radios, IFF and data link emissions are not included here.  Table 15-1 lists the Sensor Type Source for each type of sensor found in this document.  The Sensor Type Source is a field contained in the Sensor record (see IEEE Std 1278.1, Section 5.2.70). Table 15-1.  Sensor Type SourcesSensor Type Source CategoryAssociated PDUReference Paragraph Sensor Field NameField Size0OtherNone8.1.1.3Other Emitters(Field value column)16-bit1ElectromagneticElectromagnetic Emission8.1.1.1Emitter Name(Field value column)16-bit2AcousticNone8.1.1.2Acoustic Emitters(Field value column)16-bit3Minefield SensorsMinefield QueryMinefield Data10.2.4Sensor Type16-bit4UnderwaterAcousticsUnderwater Acoustic 8.4.2Acoustic System Name16-bit5LasersDesignator  8.2.1Code Name16-bit6+Not used	Appendix DTransfer Control Required PDUsThis appendix describes a new annex to be included in IEEE 1278.1.  The purpose of this annex is to provide the detailed requirements related to PDUs that directly support the transfer control function.  This information is normative in nature and levies a requirement to adhere to the practices described herein.Annex D(normative)Transfer Control Required PDUsD.1	ScopeThis annex provides the detailed requirements related to PDUs that directly support the transfer control function.  This information is normative in nature and levies a requirement to adhere to the practices described herein.  D.2	Related PDUsThe following PDUs are used as part of the Transfer Control Function.  Only the Transfer Control Request PDU is unique to transfer control.  All other PDUs used to support transfer control are also used to support other DIS functions.  These will be referred to here as non-unique PDUs.  The general and detailed requirements for a non-unique PDU specified in Sections 4 and 5 of IEEE 1278.1 apply in addition to the requirements specified here when used in support of transfer control.  If a conflict exists between the PDU requirements contained outside of 4.5.8.3 and those contained in this annex, the requirements specified herein shall be considered superseding.  If a conflict exists between the requirements in 4.5.8.3 and those contained in this annex, the requirements in 4.5.8.3 shall be considered superseding.  D.2.1	Transfer Control Request PDUThe Transfer Control Request PDU shall be used to request the transfer of an entity and to cancel such a transfer. This PDU is only used in conjunction with the Transfer Control Function. 	a.	Information Content.   The fields shall be set as specified in Table D.1.  See also 5.3.9.3 for the format and definition of the fields for the Transfer Control Request PDU.Table D.1 Transfer Control Request PDUFieldsSubfieldsValue PDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating Application0Receiving Entity IDSiteApplicationEntity IdentifierThe Receiving Entity ID shall be set based on the Transfer Type field value as follows:If Transfer Type = 1, 4 Push TransferReceiving SiteReceiving ApplicationNO_ENTITY  (0)If Transfer Type = 2, 5, 8, 9 Pull TransferEither the specific federate may be specified:Receiving SiteReceiving ApplicationNO_ENTITY  (0)Or broadcast to all federate may be specified:ALL_SITES   (FFFF-Hex)      ALL_APPLIC  (FFFF-Hex)      NO_ENTITY  (0)If Transfer Type = 7 Cancel TransferThe other federate involved in this transfer transaction shall be specified:Receiving SiteReceiving ApplicationNO_ENTITY   (0)Or broadcast to all federate may be specified:ALL_SITES    (FFFF-Hex)      ALL_APPLIC  (FFFF-Hex)      NO_ENTITY   (0)If Transfer Type = 10 Remove EntityA specific federate shall be specified:Receiving SiteReceiving ApplicationNO_ENTITY   (0)Request IDA unique number assigned by a federate that identifies this transfer transaction.  Any subsequent PDU containing a Request ID field from a federate that is involved in this transfer transaction shall use this value. Required Reliability Service1 = UnacknowledgedTransfer TypeAs appropriateTransfer Entity IDThe Entity ID of the entity being transferred.Site = non-zero valueApplication = non-zero valueEntity = non-zero-valueNumber of Record Sets0 =	No records are associated with this transfer control request PDU.  In this case, no Record Set fields are included.  n = 	Number of record sets in this specific PDU.  If the total number of record sets is more than can be contained in this PDU, then the PDU must include a Total Record Sets record, and one or more Set Record-R PDUs are used to send the remaining records.  Record Set #1 See 5.3.9.3As appropriate.Record Set #R See 5.3.9.3As appropriate.	b.	Issuance of the Transfer Control Request PDU.   		The Transfer Control Request PDU shall be issued as follows:		1)	When a federate desires to initiate the transfer of an entity or environmental process.  In this case, the appropriate timer shall also be set.		2)	When a federate desires to terminate a transfer transaction.		3)	When a federate desires to send a Remove Entity TCR PDU.  In this case, the TCR PDU must be originated by operator action as a result of an operator being informed of an ownership conflict.  		4)	If this is a Push or Pull transfer request, the appropriate timer shall be set, if applicable, upon sending this PDU.  	c.	Receipt of the Transfer Control Request PDU.   		A received Transfer Control Request PDU shall be processed by the addressed or applicable federate as follows:		1)	If it is a Pull transfer request and the Receiving Entity ID field value indicates a broadcast to all federates, the receiving federate shall determine if the entity in the Transfer Entity ID field is one that it owns.   If it is the owner, then rules 2) and 3) below shall apply.  If not, the PDU shall be ignored and no Acknowledge-R PDU shall be output.		2)	If this is a transfer request, and it has passed initial validity checks, an Acknowledge-R PDU shall be output to the federate indicated in the Originating Entity ID field of the TCR PDU with one of the following responses:			a)	An Unable to Comply response shall be issued if, for whatever reason, the federate determines that the request cannot be automatically complied with. 			b)	An Able to Comply response shall be issued if the federate determines that the request can be automatically complied with. 			c)	A Pending Operator Action response shall be issued if the federate is in the Manual Transfer Mode. 		3)	If this is a Cancel Transfer Request that has passed validity checks, the receiving federate shall cancel the transaction.  No Acknowledge-R PDU shall be output in this case.		4)	If this is a Remove Entity TCR PDU, the federate contained in the Receiving Entity ID field shall determine if it has a local active entity that matches the Entity ID in the Transferred Entity field. If it does, it shall proceed as follows:			a)	The receiving federate shall stop simulating and issuing updates for the local entity.  A Final Entity State PDU shall not be issued.  			b)	Send an Ownership Event Report with Reason = Local Entity Cancelled - Remove Entity TCR Received.  D.2.2	Acknowledge-R PDUThe Acknowledge-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.5 and 5.3.12.5.  It is used in support of the Transfer Control process to acknowledge the Transfer Control Request PDU when it contains a request to transfer an entity and when an operator has manually determined whether it can accept a transfer (i.e., Able to Comply, Unable to Comply).  Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content		The Acknowledge-R PDU when used in support of transfer control shall be set as specified in Table D.2.Table D.2 - Acknowledge-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierSite of originator of the transfer request.Application of originator of the transfer request. 0Acknowledge FlagNone5 (Transfer Control Request)Response FlagNoneOne of the following, as applicable:1 = Able to comply.2 = Unable to comply.3 = Pending operator response.Request IDNoneSet to the Request ID value in the Transfer Control Request PDU to which this Acknowledge-R PDU is responding.	b.	Issuance of Acknowledge-R PDU 		The Acknowledge-R PDU shall be issued in support of transfer control when any of the following conditions occur:		1)	A Transfer Control Request PDU is received with a transfer type of 1, 2, 4, 5, 8, or 9.  In this case, the acquiring federate shall send an Acknowledge-R PDU with the Response Flag set to 1, 2 or 3.  If the TCR PDU is accompanied by one or more Set Record-R PDUs, the Acknowledge-R PDU shall not be sent until all expected Set Record-R PDUs have been received. (See 4.5.8.3.3 for the when not all expected Set Record-R PDUs are received.). 		2)	An Acknowledge-R PDU was previously sent with the Response Flag = 3 and the acquiring federate has now determined whether or not it can comply with the request.  In this case, the acquiring federate shall send an Acknowledge-R PDU with the Response Flag set to 1 or 2. 		3)	If the Response Flag is set to 2 (Unable To Comply), the transfer transaction shall be automatically terminated.	c.	Receipt of Acknowledge-R PDU 		When an Acknowledge-R PDU is received in support of transfer control, it shall be processed as follows by a federate that has implemented transfer control:		1)	If the Response Flag = 1 (Able to Comply), the receiving federate shall proceed to the next phase of the transfer transaction as specified in 4.5.8.3.2.		2)	If the Response Flag = 2 (Unable to Comply), the receiving federate shall automatically terminate this transfer transaction.		3)	If the Response Flag = 3 (Pending operator response), the receiving federate shall initiate the TC_MAN_RESPONSE_TIMER and await another Acknowledge-R PDU with the Response Flag set to 1 or 2.D.2.3	Set Record-R PDUThe Set Record-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.14 and 5.3.12.14.   The Set Record-R PDU is used in support of transfer control to pass internal state data.  Only the requirements related to its use in support of transfer control are specified here.	a.	Information Content		The Set Record-R PDU fields shall be set as shown in Table D.3.Table D.3 - Set Record-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLIC0Request IDNoneSet to the Request ID from the original TCR PDU. Required Reliability ServiceNone1 (Unacknowledged)Padding- - - -0Number of Record SetsNoneR = Number of Record Sets in this PDU.Record Set #1See 5.3.9.3As appropriate.Record Set #RSee 5.3.9.3As appropriate.	b.	Issuance of Set Record-R PDU		The Set Record-R PDU shall be issued in support of transfer control to transmit internal state data as follows:		1)	By the divesting federate that initiated a Push Transfer Request when all the necessary records cannot be contained in the TCR PDU.  Multiple Set Record-R PDUs may be required to send all the necessary data.		2)	By the divesting federate that has sent a Can Comply Acknowledge-R PDU in response to a Pull Transfer Request.  If no internal state data is required to be sent, a single Set Record-R PDU shall be output with the Number of Record Sets field set to zero.	c.	Receipt of Set Record-R PDU		A received Set Record-R PDU in support of transfer control shall be processed by the federate to whom it is addressed as follows:		1)	For a Push Transfer Request,			a)	If all Set Record-R PDU(s) have been received, mandatory record data shall be processed as required by this standard.  Other record data shall be processed as agreed to in a federation agreement.			b)	Optionally, Record-R PDU(s) may be output in accordance with 4.5.8.3.3.4. 		c)	If processing the data contained in a Set Record-R PDU results in terminating the transfer, the acquiring federate shall reply with an Unable To Comply Acknowledge R-PDU to the originating federate.		3)	For a Pull Transfer Request, the acquiring federate shall perform either of the following:			 a) 	Complete the transfer in accordance with 4.5.8.3.2.3 and, optionally, send one or more Record-R PDUs as specified in 4.5.8.3.3.4.					b) 	 If processing the data contained in a Set Record-R PDU results in terminating the transfer, the acquiring federate shall reply with a Cancel Transfer TCR PDU and automatically terminate the transaction. D.2.4	Record-R PDUThe Record-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.15 and 5.3.12.15.  The Record-R PDU is used by the Transfer Control function to provide feedback on internal state data received from the divesting federate during a transfer transaction.  It may also be used to transmit internal state data for an entity in response to a Record Query-R PDU received when no transfer transaction is in progress.  Only the first use involving transfer control is covered in this paragraph.   (Use of the Record-R PDU to respond to a Record Query-R PDU is specified in 4.5.11.3.15.)    	a.	Information Content		When the Record-R PDU is used to return a copy of the internal state data received from the divesting federate during a transfer transaction, the fields shall be set as shown in Table D.4.Table D.4 - Record-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Request IDNoneThe Request ID that was contained in the original TCR PDU.Required Reliability ServiceNone1 (Unacknowledged).Padding- - - -0Event Type0 (Other)Response Serial NumberA sequential number beginning with zero (0) that indicates the Record-R PDU(s) that make up this response. If more than one Record-R PDU is part of the response, each one shall have the same number.Number of Record Sets (R)NoneNumber of Record Sets in this Record-R PDU.Record Set #1See 5.3.9.3As appropriate.Record Set #RSee 5.3.9.3As appropriate.	b.	Issuance of the Record-R PDU. 		The Record-R PDU when used as part of a transfer transaction shall be optional.  It may be issued in response to a Transfer Control Request PDU containing records or in response to one or more Set Record-R PDUs received by a federate as part of a transfer transaction.  The issuance requirements of 4.5.11.3.15.2 shall apply.  	c.	Receipt of the Record-R PDU.		Receipt of the Record-R PDU when used as part of a transfer transaction shall be optional.  If implemented, the receipt requirements of 4.5.11.3.15.3 shall apply.  D.2.5	Event Report PDUThe Event Report PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.5.4.11 and 5.3.6.11.  When used in support of transfer control, the Event Report PDU shall be used to report ownership of an entity by a federate that has implemented transfer control. When used for this purpose, it shall be referred to as the Ownership Event Report PDU.  Only the requirements related to its use in support of transfer control are specified here.  Note that the Ownership Data PDU is used to respond to a an Ownership Data Query PDU.	a.	Information Content	When the Event Report PDU is used to support the Transfer Control Function, the fields shall be set as shown in Table D.5. Table D.5 - Ownership Event Report PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLICALL_ENTITIESEvent Type17 = Ownership ReportPadding0Number of Fixed Datum Records0Number of Variable Datum Records1Variable Datum record #1Variable Datum ID15800 = Ownership StatusVariable Datum Length64Variable Datum Value = Ownership Status record (see 5.2.71)Ownership Status value (see below)Entity ID of the transferred entity0 (8 bits unused padding)	b.	Issuance of the Ownership Event Report PDU 		The Ownership Event Report PDU shall be transmitted with the Ownership Status value (see Section 14 of EBV-DOC) set as follows: 		1)	New Owner.   An acquiring federate assumes ownership and has transmitted the initial Entity State PDU.  It shall transmit the Ownership Event Report PDU immediately following the initial Entity State PDU.  The Ownership Event Report PDU shall be output regardless of the PDU Status record Transferred Entity Indicator field value.  		2)	Ownership Query Response.   A transfer-capable federates receives an Ownership Data Query PDU and it believes it is the owner of the referenced entity.  		3)	Ownership Conflict.   A transfer-capable federates determines that an ownership conflict exists and it believes that it is the rightful owner. 		4)	Local Entity Cancelled - Auto Resolve Conflict.   A federate automatically cancels a local entity that it has determined is involved in an ownership conflict and it is not the rightful owner.		5)	Local Entity Cancelled - Manual Resolve Conflict. A federate manually cancels a local entity by operator action after it has determined that it was involved in an ownership conflict and it was not the rightful owner.		6)	Local Entity Cancelled - Remove Entity TCR Received. A federate automatically cancels a local entity upon receiving a Remove Entity TCR PDU addressed to it. 			c.	Receipt of the Ownership Event Report PDU	When an Ownership Event Report PDU is received, it shall be processed as follows:	1)	If the receiving federate is the Divesting Federate in a transfer transaction for this entity, it has previously received the Initial Entity State PDU from the Acquiring Federate, and is in the process of completing the transaction and setting the entity to remote status in its data base, it shall ensure that the entity is no longer a local entity before processing the Ownership Event Report PDU.  If a transfer transaction is presently active for this entity involving the receiving federate, the receiving federate shall ignore the report.  	2)	If no transfer transaction is active for the entity and the Reason = New Owner or Ownership Conflict, and the entity is a local active entity, and the receiving federate has an indication that it terminated a transfer transaction with the Federate shown in the Originating Entity ID field, it shall process the PDU as specified in 4.5.8.3.2.1.g.2).	 	3)	If the Reason = Ownership Conflict and the receiving federate believes it is the rightful owner, it shall send an Ownership Event Report PDU with Reason = Ownership Conflict.	4)	All other reason codes not specified in c. above shall be ignored and the PDU may be discarded without further processing.  	D.2.6	Entity State PDUThe Entity State PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.2.1 and 5.3.3.1  When used in support of transfer control, the Entity State PDU is used by a new owner to report the entity upon assuming ownership and thereafter in accordance with the rules for reporting an entity except for requirements related to entity state data fields whose values must be maintained which are contained herein. Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content	The initial Entity State PDU sent by the acquiring federate shall have the fields and subfields set in accordance with Table D.6.  Initial values that are subsequently changeable are also specified in the table. Table D.6 - Initial Entity State PDU FieldSubfieldValue*PDU HeaderAllPer standardEntity IDAllNot changeableForce IDForce IDPer standardNumber of Articulation Parameters (n)NumberPer standard Entity TypeAll  Not changeableAlternative Entity TypeAll  Not changeableEntity Linear VelocityAllPer standardEntity LocationAllPer standardEntity OrientationAllPer standardEntity AppearanceAllPer standardDead Reckon ParametersAllPer standardEntity MarkingsAll  Not changeableCapabilitiesAllPer standardArticulation ParametersAllPer standard*ValuePer Standard.   As specified by the IEEE 1278.1/1a Standard. Not changeable.  The values in this field and all its subfields, if any, shall remain the same as was contained in the last Entity State PDU received from the divesting owner prior to creation of this entity in the local data base.	b.	Issuance of the Entity State PDU 			When the Entity State PDU is generated by a federate that has accepted ownership of an entity or environmental process due to a transfer transaction, the following requirements shall be met.  Any reference to Entity State PDU shall also apply to the Environmental Process PDU unless otherwise specified.   If there is a conflict between the requirements here and those specified elsewhere in 4.5.8.3, this paragraph shall be considered superseding.		1)	The fields in the Initial Entity State PDU and subsequent Entity State or Entity State Update PDUs shall be set as specified in Table D.6.		2)	The Initial Entity State PDU shall be output immediately after the entity has been converted or instantiated as a local entity.  		3)	Further remote data received on the entity from the divesting federate after the entity has been converted or instantiated as a local entity shall be ignored.		4)	Issuance of the Initial Entity State PDU ends the transfer transaction at the AF at the time the PDU is sent and at the DF at the time the PDU is received.  However, the AF still has a requirement to send the Ownership Event Report PDU as described in 4.5.8.3.2.1.e).	c.	Receipt of the Entity State PDU 			When an Entity State PDU is received by a federate involved in a transfer transaction, the following requirements shall be met.  Any reference to Entity State PDU shall also apply to the Environmental Process PDU unless otherwise specified.  		1)	If the federate receiving the Entity State PDU is the acquiring federate, it shall continue to process remote entity state data until such time as it has established the entity as a local entity.  Once it is established as a local entity, received entity information shall be ignored.		2)	If the federate receiving the Entity State PDU is the divesting federate, it shall cease transmission of the Entity State (or Entity State Update) PDU and any other PDUs (e.g., IFF/NAVAID/ATC PDU) that has local data for the entity.			D.2.7	Data Query PDUThe Data Query PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.5.4.8 and 5.3.6.8.  When used in support of transfer control, the Data Query PDU shall be used by a federate to request ownership information for an entity.  When used for this purpose, it is referred to as an Ownership Data Query PDU.  Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content		The information contained in an Ownership Data Query PDU shall be as shown in Table D.7.Table D.7 - Ownership Data Query PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierThe Entity ID of the entity being queriedRequest IDIdentifies this specific Data Query PDU request.  Starts at 0 and incremented by one for each succeeding Data Query PDU sent after a simulation is initialized.Time Interval0Number of Fixed Datums 0Number of Variable Datums 1Variable Datum ID #1Variable Datum ID15800 = Ownership Status	b.	Issuance 		Any federate may issue an Ownership Data Query PDU whether or not they have implemented the Transfer Control function.   This request may be automatically generated or initiated by manual operator action.  		The Receiving Entity ID field identifies the specific entity for which ownership information is being requested.  	c.	Receipt 		Each federate that has implemented the transfer control function shall process the Ownership Data Query PDU and respond with an Ownership Data PDU.  If a federate has not implemented the transfer control function, this PDU shall be ignored.D.2.8	Data PDUThe Data PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.5.4.10 and 5.3.6.10.  When used in support of transfer control, the Data PDU shall be used by the present owner of an entity that has implemented transfer control to respond to an Ownership Data Query PDU.    Only the requirements related to its use in support of transfer control are specified here. 	a.	Information Content		The information contained in an Ownership Data PDU shall be as shown in Table D.8.Table D.8 - Ownership Data PDUFieldsSubfieldsValuePDU Header- - - -As applicableOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierData Query SiteData Query Application0Request IDSet to the Request ID contained in the Ownership Data Query PDU to which this Data PDU is responding. Padding0Number of Fixed Datum Records0Number of Variable Datum Records1Variable Datum record #1Variable Datum ID  15800 = Ownership StatusVariable Datum Length64Variable Datum Value = Ownership Status record (see 5.2.71)2 = Ownership Query Response (see Section 14 of EBV-DOC)Entity ID of the transferred entity0 (8 bits unused padding)	b.	Issuance of the Data PDU.		The Ownership Data PDU shall be issued in response to the receipt of an Ownership Data Query PDU.  	c.	Receipt of the Data PDU.		A federate that has sent an Ownership Data Query PDU shall process any Data PDU where it is the Receiving Entity ID and the Request ID equals the Request ID contained in the original Data Query PDU.  A federate may also process a Data PDU not addressed to it where the Variable Datum ID = 15800.  D.2.9	Record Query-R PDUThe Record Query-R PDU is a non-unique PDU used by transfer control and other DIS functions.  It is described in 4.5.11.3.13 and 5.3.12.13.  When used in support of transfer control, the Record Query-R PDU shall be used by a federate when requesting internal state data on an entity in preparation for deciding whether to initiate or respond to a transfer request.  A federate that implements transfer control is not required to either initiate or respond to a Record Query-R PDU if it has no requirement to request internal state data outside of a transfer transaction.  Any request for internal store data not related to a transfer transaction is beyond the scope of this standard.   a.	Information Content		The information contained in a Record Query-R PDU shall be as shown in Table D.9.Table D.9 - Record Query-R PDUFieldsSubfieldsValuePDU HeaderStandardAs appropriateOriginating Entity IDSiteApplicationEntity IdentifierOriginating SiteOriginating App0Receiving Entity IDSiteApplicationEntity IdentifierALL_SITESALL_APPLICALL_ENTITIESRequest IDIdentifies this specific Data Query PDU request.  Starts at 0 and incremented by one for each succeeding Data Query PDU sent after a simulation is initialized.Required Reliability Service 1 = UnacknowledgedPadding0Event Type16-bit enumeration1 = Internal Entity State dataNumber of Records32-bit unsigned integerRecord ID #132-bit enumeration Record ID #n32-bit enumeration 	b.	Issuance of the Record Query-R PDU.		When the Record Query-R PDU is used to request internal store data related to a possible transfer transaction, it shall be for a specific entity, be addressed to the owner of the entity, and contain the Record IDs for the data it is requesting.  It shall be sent once.  If no Record-R PDUs are received in response to the query within a federate’s timeout parameter, it shall be assumed that the federate to which it is addressed does not have the capability to provide internal store data related to a pending transfer transaction.  	c.	Receipt of the Record Query-R PDU.		If the federate to which the request is directed implements the receipt of this PDU for the purpose of providing internal state data for an entity it owns, it shall respond with the requested data, if available, in one or more Record-R PDUs.  If data is not available for a requested Record ID, the Record ID shall be returned with zero values in the data fields for that record.  Appendix EStudy Group Participants1.0	GeneralThe following is a list of the subscribers to the Transfer Control Study Group at the time this final report was approved.  The core members who contributed to most of the work are as follows:Frank Hill, chairperson	SDS InternationalPat Merlet, vice-chair	Sparta Inc.Al Ludwig	The Boeing CompanyAlan Berry	SRC Inc.Dwight Drager	SRC Inc.Jerry Szulinski	Lockheed MartinScott Wilson	Raytheon Inc.	Subscribersadindb@gmail.com adinb@usa.net alan.berry@kirtland.af.mil Alan Berry albert.j.ludwig@boeing.com Albert Ludwig bjorn.lofstrand@pitch.se Bj bob.strini@ebs-inc.org Robert A. Strini brivera@systechnologies.com Braulio Rivera=20 Chris.Rule@tbe.com Chris Rule Dale.Sexton@engenuitytech.com Dale Sexton dperme@gestalt-llc.com David Perme frank.hill3@us.army.mil Frank Hill Gene.Griffith@afams.af.mil Gene Griffith=20 gene.mclaughlin@gdds.com Eugene McLaughlin gldouglas@link.com Greg Douglas iakgun@harpak.tsk.mil.tr ilker akg James.Evans1@wpafb.af.mil Jim Evans jerry.szulinski@kirtland.af.mil Jerry Szulinski jkraisser@northropgrumman.com Jeffrey Kraisser jmsardella@link.com Joe Sardella john.hancock@kirtland.af.mil John Hancock John.Scimeca@afams.af.mil John Scimeca KCromes@northropgrumman.com Ken Cromes kefarwell@raytheon.com Kent Farwell Kelley.Moore@kirtland.af.mil Kelley Moore kevin.morello@kirtland.af.mil Capt Kevin Morello Larry.Boyce@hurlburt.af.mil larry.boyce@hurlburt.af.mil Lee_Marden@Raytheon.com Lee Marden liqun_nudt@sina.com LiQun Lisa.Patton@engenuitytech.com Lisa Patton little@sei.cmu.edu Reed Little marcher@sdslink.com Matt Archer mark.a.rybka@boeing.com Mark Rybka Michael.Bachmann@wpafb.af.mil Mike Bachmann Mike.Mora@kirtland.af.mil Mike Mora Mike.VanBoening@Boeing.com Mike Van Boening mmyjak@virtualworkshop.com Michael Myjak Molly.Curl@kirtland.af.mil molly.curl@kirtland.af.mil MOSSDI@mail.northgrum.com Moss Diane mpetty@odu.edu Mikel Petty mweber@novonics.com Michael Weber Nathaniel.Shippee@hanscom.af.mil Nathaniel Shippee Neil.Morris@thales-tts.com Neil Morris Patrick_Merlet@sparta.com Patrick Merlet Peter.Ross@dsto.defence.gov.au Peter Ross prochnow@mitre.org Dave Prochnow Ray.Shellman@ngc.com Ray Shellman Richard.Dobson@PeoAvn.Redstone.Army.Mil Richard Dobson=20 rob.carter@afams.af.mil Rob Carter Robert.Lillie@wpafb.af.mil Robert Lillie sajones@cae.co.uk Steve Jones Samir.Karazivan@engenuitytech.com Sam Karazivan Scott.Wilson@hanscom.af.mil Scott Wilson stefanb@adacelcanada.com Stefan Beaubien Timothy.D.Jones3@boeing.com Tim Jones tom.brown@kirtland.af.mil Thomas Brown vlowe@ist.ucf.edu Van Lowe zoujun19760126@163.com zou jun -----------------------------------------------------------------Total subscribers: 56Transfer Control DIS Standards Document	SISO Reference DocumentPAGE     PAGE 1 A- PAGE 1 B- PAGE 12 C- PAGE 6 D- PAGE 14 E- PAGE 2By definition, the entity that is the subject of an ownership conflict cannot be involved in a transfer transaction.   Revised wording suggested by Frank Hill.  Rationale: Someone could have initiated a transfer for it.  We need to discuss this further.  My notes from 11/22 indicate we agreed to use a site:app:entity ID (SAE) form of Designation Identifier vs. a 16-bit unsigned integer.  And also to use a 32 byte ASCII field instead of 13 bytes. This constraint should be removed from the standard.  Guidance may be provided in the guidance document.  Update 3/28: Frank Hill disagrees and sent out another data call.  