Merging Disparate SOMs into a Reference FOM – A Case StudySteven M. SheasbyRaytheon Electronic SystemsP.O. Box 660246M/S 8518Dallas, TX  75266-0246(972)-575-6126ssheasby@raytheon.com Keywords:FOM, SOM, Reference FOM, RPR FOM ABSTRACT: Creating a Reference FOM is not an easy task.  In a company the size of Raytheon, groups with diverse backgrounds and different HLA experiences make the process even harder.  However, a working group in the company managed to produce a Raytheon-wide Reference FOM.  In this paper, we present our Reference FOM.  We will discuss how this Reference FOM came into being.  The background and the interests of the various groups will be highlighted.  In addition, we will discuss the future of this Reference FOM with regard to life-cycle maintenance, and out-year FOM development.1. OverviewLast year, a number of Raytheon modeling and simulation labs participated in a company-wide simulation effort -- the ISTB project.  One goal of this project was the start of a company-wide modeling and simulation framework.  Two company-wide HLA experiments were conducted to test the initial state of this framework.  As part of this framework, a company-specific Reference Federation Object Model (RFOM) was developed [1].  The use of this new Raytheon RFOM was demonstrated during the latter HLA experiment.2. Participants and Process2.1 ParticipantsFive teams from the different segments of the company came together with the intent of developing an initial version of a Raytheon RFOM.  These five teams had different modeling and simulation experience and backgrounds.  Each team also had different experiences with the HLA.The first team was from Tucson, Arizona.  This team models missile systems – from flyout to intercept.  They develop HLA native applications with the use of a proprietary HLA middleware layer.  Prior versions of these simulations developed by this lab were not DIS compliant.The second team was from Plano, Texas.  This team’s history was legacy DIS simulations, specifically reconfigurable simulators.  These simulations were primarily entity-based.  The experience of this team in HLA was through DIS/HLA Gateways.The third team was from El Segundo, California.  This team was responsible for simulation of aircraft, specifically a JSF simulation.  As this was a relatively new simulation, the specific networking (DIS or HLA) had not been determined.The fourth team was from Tewksbury, Massachusetts.  This team was responsible for missile defense simulations.  Native HLA applications were developed for some components while others used DIS/HLA Gateways.  In addition, this team had the experience with the widest set of HLA products (from DMSO tools to MaK Technologies products).The fifth team was from Huntsville, Alabama and provided the experience of air defense testbeds.  These simulations provided both friendly and enemy weapons capabilities.  Previous versions of these testbeds were DIS based.  Recent HLA native versions were developed using Aegis-based software.2.2 ProcessThe process followed doesn’t quite match the approaches specifically listed in the FEDEP [2:14-15].  Our process is a combination of merging SOMs from participating federates and using a FOM with a common frame of reference.3. Development of the Reference FOMDevelopment of this Reference FOM borrowed from a number of sources, as we had no experience in creating a Reference FOM from scratch.  Inputs from the FEDEP as well as previous SIW papers gave us a few starting points.  In the end, we made decisions that made sense to us during development of our Reference FOM.3.1 FOM/SOM InventoryThe first step was to inventory the SOMs and FOMs available for this Reference FOM effort.  The team from Tewksbury provided a SOM based on an earlier version of the RPR FOM [3,4] with mostly additional interactions.  The Tucson team provided a SOM loosely based on an earlier version of the RPR FOM.  Many more objects were added to this SOM.  In addition, changes were made to some of the base class objects.  The Huntsville team provided a SOM based on missile simulation models and had very little to do with the RPR FOM.  The Plano team, using a DIS/HLA Gateway, used RPR FOM v0.5.  The El Segundo team did not have a SOM.3.2 Do we use the RPR FOM?One of the first discussions centered on how should the FOM be designed.  Should we include the RPR FOM as the base for our new Reference FOM or should we start from scratch and develop a brand new structure?Since not all of our simulations were DIS-based, an argument could be made for a new structure optimized for the SOMs in the inventory.  This structure would eliminate large unused structures of the RPR FOM.  For instance, in some of our legacy DIS-based simulations, only a fraction of the DIS PDUs (27 in the original IEEE 1278.1 set) is used.  While this doesn’t make a huge impact in the interaction table (the RPR FOM interactions are located at the highest level, except for the four radio interactions), this would impact the Object Class Structure as certain object trees would vanish (such as the EmbeddedSystem object tree).Plus, a statement would be made that this new Reference FOM would not be based on “old” technology.  We would use as much of the capabilities that the HLA architecture would allow.In the end, we decided that we needed the RPR FOM as the base for our new RFOM.  The Plano and Tewksbury teams have a large number of DIS-based legacy simulations.  It would be some time before these simulations are migrated to the HLA.  Plus, with the large number of DIS-legacy simulations in other parts of the company, it made sense to include the RPR FOM.A number of our simulations interact with our government clients, as well as our partners in industry.  For most, the first foray into the HLA would be through the DIS/HLA Gateway, which uses the RPR FOM.3.3 Which RPR FOM Version?After we decided to include the RPR FOM as the basis for our new Reference FOM, we had to make a decision on which RPR FOM version to include.  We had two choices:  (1) RPR FOM, draft version 0.5, and (2) RPR FOM version 1.0, draft version.At the time of our initial meeting, the work for RPR FOM Version 1.0 was nearing completion.  However, the official SISO approval was still in the future.  In addition, RPR FOM version 0.5 was used as the FOM by the various HLA tools used by our different labs.  For instance, the latest releases of the DIS/HLA Gateway use RPR FOM, version 0.5.  In the SOMs from the Tewksbury and Tucson teams, RPR FOM, version 0.5 is included.However, RPR FOM version 1.0 would become the first SISO standard.  As a standard, it’s use in tools was probable (not guaranteed, but probable).  This standard would also be maintained by SISO during the life of the standard and of the HLA.  Unlike a draft version, this version of the RPR FOM was complete.  The previous draft version, while passing the DMSO OMDT consistency check, had a number of omissions that one would see in a draft version.The overall consensus was to use the official standard of the RPR FOM.  While our current HLA toolset uses the draft RPR FOM version, it wasn’t enough to convince us to include that older version.  The next question asked is whether to include future RPR FOM versions.  The work has already started on RPR FOM version 2.0 (this RPR FOM would reference the official IEEE 1516 HLA standards as well as including the IEEE 1278.1A set of DIS PDUs).  These decisions are best left to the maintainers of this RFOM.3.4 Additions to the Object Class StructureWe had to be careful about adding classes to the base RPR FOM.  We didn’t want to lose our RPR FOM compliance [3:5].First, we made changes to the Munition class.  Two subclasses were added for missile and missile interceptors.  At first glance, this adds specific classes (specific to missiles and missile interceptors) in a BaseEntity hierarchy designed to be as generic as possible.  While this may appear to be a contradiction, we decided it was the best place to add these classes.The same argument applies to our additions to the EmbeddedSystem class.  We added a new Submunitions subclass.  In this case, we “bent” the definition of the EmbeddedSystem class from the RPR FOM, since a submunition can easily be considered an embedded part of a larger object [3:26].  In this situation, an “IS-A” or “PART-OF” relationship would be more appropriate, but we using the RPR FOM 1.0.  The IsPartOf PDU [5:119] from IEEE 1278.1A will be included in RPR FOM 2.0.  We wait to see how the RPR FOM SDG will handle this type of relationships.  Until that is determined, adding to the EmbeddedSystem class made sense.We also included a brand new object class tree – C2Data.  This structure would include all of the weapons track data generated by the various missile and missile defense simulations.3.5 Objects or Interactions?As we included the new subclasses of the C2Data, we stopped to discuss the nature of this data.  In the “real world,” these are actually transmissions sent from one entity to another (or a group of entities).  If that is the case, should this data be modeled as interactions instead?We decided that in this design of our Reference FOM, that we weren’t modeling the real world.  The nature of our missile and missile defense simulations did not accurately model the real world.  What was more important was the data contained in these messages as they relate to the threats and the interceptors.  As we develop more realistic models, these objects may migrate to interactions in the future.In addition, this tracking data was considered “persistent.”  Once again, we “bent” the definitions a bit.  Weapon tracking data will constantly change, but they will always be associated with an object (either the threat or the interceptor).3.6 Additions to the InteractionsAdding to the interactions was much easier than adding to the object class, but not without some thought.  We noticed that in the RPR FOM, the interaction classes are all highest level classes, with the exception of the RadioSignal interaction.  For historical reasons, the first drafts of the RPR FOM were developed under the HLA/RTI 1.0.X series.  In the original HLA, an object class hierarchy existed but an interaction hierarchy did not.  With that, RPR FOM interactions were listed one-by-one.  As an interaction hierarchy was added in later versions of the HLA, the decision was made to keep the interaction structure the same.In addition, while many of the interactions may appear to have a grouping capability (for instance, grouping together all simulation management interactions, or logistics interactions), not enough of the parameters were the same to warrant the regrouping at a late stage in the RPR FOM development.We decided to change that for our inclusions to the interaction table.  We added a new high level interaction, C2Messages.  In the last section, we discussed the addition of C2Data to the object class hierarchy.  There were a few events that made more sense in the interaction table versus the object class table.  These events included initialization messages as well as commands from one missile defense federate to another.  We also included a “Man-machine” interaction class.3.7 Not Everything was Included in the RFOMThe Huntsville team provided a SOM that was quite different from the other teams’ SOMs.  They developed a SOM from scratch and it had very little in common with the RPR FOM.  Their object class hierarchy was based on scenarios and scenario elements.  The data in these scenario classes and subclasses had no relation to the corresponding classes in the BaseEntity class structure.  This made it difficult to include their SOM into our Reference FOM.  In the end, it was not feasible to include their SOM into our Reference FOM.  This was a tough decision.  Our goal was to include SOMs from as many and different simulations from the company as possible.  But sometimes it’s just not possible.  We decided it was best and not try and force a fit that wasn’t there.3.8 ISTB Community InvolvementAfter the initial version of the Reference FOM was developed, a wider audience was given the opportunity to review the RFOM and suggest changes.  Other participants in the ISTB project, with HLA and FOM experience, were able to provide comments on our Reference FOM.3.9 Reference FOM DemonstrationAs the final part of this year’s effort, a demonstration was developed using the Reference FOM.The exercise occurred in November 1999.  As with most federations (and right in lockstep with the FEDEP – tailoring of an existing FOM/RFOM for use in a federation), the RFOM was tweaked in order to work with the existing software of the federates involved.The exercise involved a missile threat from an air defense testbed federate.  A JSF federate intercepted this target with an AMRAAM federate.  It was a simple run (about two to three minutes in length).  However, it demonstrated to the ISTB project community and the company how a Reference FOM developed by various divisions within the company can be brought together to form something that can used by multiple users.4.  The Reference FOMFigure 1 shows the Reference FOM Object Class Structure.  The RPR FOM Version 1.0 object class hierarchy is shaded in the table.  Figure 2 shows the Reference FOM Interaction Table.  The RPR FOM Version 1.0 interactions are shaded in the table.There are three parts to our Reference FOM.  The first piece is the FOM created using the OMDT tool.We borrowed (once again) from the RPR FOM effort for the other two pieces of the RFOM.  The first is a User’s Guide (or Interoperability Guide).  A number of the users of this Reference FOM would be new to the concepts of RFOMs (and perhaps even HLA).  The User’s Guide explains how to use this Reference FOM for use in their federate/federation.  However, we decided to leave some of the explanations in the original RPR FOM [4] and the GRIM [3].The final part of our RFOM is the Rationale Document.  It is the same concept as the GRIM document, except it has background and e-mail regarding the decisions and questions relating to the creation of our Reference FOM.  This will be useful as others find out why certain decisions were made (or not made).5.  Future of the Reference FOMNow that we have developed this RFOM, what happens next?Maintenance of this RFOM will be necessary.  Even though we attempted to make a complete RFOM, a few omissions are inevitable.  The OMDT tools makes sure that all of the table elements are filled.  They don’t make any claim of validity.  As more organizations use this RFOM, recommendations will be made for changes, additions, or possibly even deletions to the various table elements.  This will also require changes to the Rationale Document and possibly the User’s Guide.  We want the RFOM to be useful to as many users as possible.This maintenance question also applies to the RPR FOM at the heart of our RFOM.  RPR FOM 2.0 is in the works.  Plus, there is a chance that RPR FOM 1.0 will be modified to keep up with changes with the HLA Rules and Interface Specs.  Do this mean that every RPR FOM change automatically mean updates to our RFOM?  We don’t know the answer to that one yet.Another debate in the company is where do you draw the line between one all encompassing solution versus a small number of smaller, more specific solutions.  In other words, will one RFOM be enough or are we going to have a small library of RFOMs, with each RFOM tailored to a different community?  Perhaps one RFOM can be used by a majority of users while other RFOMs have specialized tasking.The idea of Base Object Models (BOMs) [1:16] could be the way to go as a bridge between creating multiple RFOMs and the “plug-and-play” capability of BOM components.  Instead of multiple RFOMs, inserting BOM components into a FOM might be easier.6. SummaryUsing the SOMs from the various teams across Raytheon, we created a company-wide Reference FOM.  It serves as a Reference FOM that any user in the company can utilize as well as demonstrate the type of work that can be accomplished by teams from different parts of the country and different Raytheon segments.7. References[1]	“Reference FOM Study Group – Final Report.  Version 1.0”, Simulation Interoperability Standards Organization, March 9, 1998.[2]	“High Level Architecture – Federation Development and Execution Process (FEDEP) Model – Version 1.4”, Defense Modeling and Simulation Office, June 9, 1999.[3]	“Guidance, Rationale, and Interoperability Modalities for the Real-time Platform Reference Federation Object Model (RPR FOM) – Version 1.0 (Draft 2)”, Simulation Interoperability Standards Organization, September 14, 1999.[4]	“Real-time Platform Reference Federation Object Model (RPR FOM) – Version 1.0 (Draft 2)”, Simulation Interoperability Standards Organization, September 14, 1999.[5]	IEEE Standard 1278.1a-1998, “IEEE Standard for Distributed Interactive Simulations – Application Protocols,” Institute of Electrical and Electronic Engineers, March 19, 1998.Author BiographiesSTEVEN M. SHEASBY works in the Visualization and Simulation Technology Branch for Raytheon Electronic Systems.  He is a RPR FOM Standard Development Group Assigned Reviewer and was a member of the IEEE ballot poll for both the various DIS standards as well as the HLA standards.  He is a member of IEEE, ACM, and the SIW.Figure 1 – Raytheon Reference FOM Object Class Structure Table(with RPR FOM version 1.0 in shade)Figure 2 – Raytheon Reference FOM Interaction Table(with RPR FOM version 1.0 in shade)