04E-SIW-025BANDWIDTH REDUCTION TECHNIQUES USED IN DIS EXERCISESJoe SorrocheASRC Communications, Ltd.Distributed Mission Operations Center4500 Aberdeen Dr. SE, Building 942Kirtland Air Force Base, New Mexico 87117505-853-0372, DSN 263-0372joe.sorroche@kirtland.af.milJerry SzulinskiLockheed Martin CorporationDistributed Mission Operations Center4500 Aberdeen Dr. SE, Building 942Kirtland Air Force Base, New Mexico 87117505-853-0252, DSN 263-0252jerry.szulinski@kirtland.af.milKeywords:DMOC, Virtual Flag, DIS, DIS Filter-Analyzer, DSR. ABSTRACT: The Air Force Distributed Mission Operations Center of Excellence (DMOC) located at Kirtland AFB, NM, conducts four Virtual Flag (VF) distributed training exercises each year.  The exercises are Distributed Mission Operations (DMO) events that train hundreds of Air Force, Army, Navy, and Marine warfighters annually.  The focus is C2ISR horizontal and vertical integration across all Combined Air Force (CAF) mission areas.  Specific exercise objectives include the development and execution of realistic tactical and operational-level C2ISR shooter-training activities, and the expansion of Distributed Mission Training (DMT) and DMO into real-world theater mission rehearsal capabilities.  These are Joint services exercises, including coalition forces that integrate live, virtual, and constructive systems. The VF exercise network architecture is based upon the Distributed Interactive Simulation (DIS) and NATO-EX Data Standards with connectivity to external sites through point-to-point T-1 lines.  The simulation network is managed with two DMOC-developed utilities; namely, the DIS Filter Analyzer™ (DFA) and the DMOC Software Router™ (DSR).  The DFA provides a filtered connection between different LANs and WANs (Local and Wide Area Networks, respectively), and acts as a highly configurable gateway controlling dataflow between networks.  The DSR is used to reduce bandwidth requirements by packaging broadcast data into multicast packets; and, functions as a carrier for any User Datagram Protocol (UDP) packets, including DIS, NATO-EX, and video-conferencing packets that are broadcast to multiple LANs.  The DFA acts as a gateway between networks, whereas the DSR acts as a transport utility.This paper presents research findings at the DMOC in bandwidth reduction techniques that comply with DIS and NATO-EX based distributed exercise objectives, and describes in detail how the DFA and DSR are used at DMOC to remain within the bandwidth limitations of the VF simulation network architecture.IntroductionThe Air Force Distributed Mission Operations Center of Excellence (DMOC) conducts at least four Virtual Flag Distributed Exercises each year.  The exercises focus on Command and Control (C2) Mission Operations Training.  To date, exercises have been run, focusing on conventional assets to fulfill training objectives.  The exercises integrate C2ISR assets in synthetic battlespace environment; exploit and expand unique capabilities and expertise of DMOC; design, develop and execute realistic C2ISR/shooter training exercises; expand DMT/DMO to real world theater rehearsal training capability; and leverage DMOC’s leadership role in engineering, science, and training.The Virtual Flag Exercise network architecture is based on IEEE 1278.1a, the Distributed Interactive Simulation Standard.  The distributed exercises have encountered bandwidth limits, because the external sites are connected by T-1 or smaller links.  The links must send voice and data, fulfill all exercise objectives, and conduct Video Teleconferences within their bandwidth limits.  This paper discusses three bandwidth reduction techniques used for meeting exercise objectives while not exceeding bandwidth limit.  The techniques are the bandwidth rules, the DIS filter, and the DSR.DMOC LANs and WANsDMOC uses different Local Area Networks (LANs) in the DMOC Battlespace.  There are three common LANs, an "Air" LAN, a "Ground" LAN, and a "UAV" LAN.  Each exercise may require different local LANs, depending on the requirement.  The three common LANs are described in detail in the next section.DMOC common LANsThe Air LAN has most of the DMOC virtual simulators connected to it, and has two constructive environment generators that send DIS data: Scenario Toolkit And Generator Environment (STAGE), and the Master Simulator (MSIM).  The Air LAN is also connected to other sites via T-1s.  Even though the LAN has a bandwidth capacity of 100 Mbits/sec, it is limited by the T-1 bandwidth of 1.5 Mbits/sec.  The Ground LAN contains some of the Virtual simulators, and also an environment generator, Joint Conflict and Tactical Simulation (JCATS).  JCATS is capable of generating several thousand tracks.  The Ground LAN is isolated from the Air LAN, and it also has a 100 Mbits/sec bandwidth.  The DIS Filter Analyzer (DFA), as described later in this paper, is used to connect the two LANs and is used as a gateway between them.  It filters and monitors the data packets on each LAN as well as the packets going from one LAN to the other.  The UAV LAN is a separate 100 Mbits/sec LAN that has the UAV constructive simulators on it; it is also connected via a T-1 to the Nellis AFB.  Another DFA is connected between the UAV and the Ground LAN.  Each LAN is monitored for bandwidth usage and data analysis.As stated before, the DMOC Air LAN is connected to other sites via T-1s.  The UAV LAN is connected to the Guardnet WAN, which has an allocated capacity of 768 Kbits/sec.  The DSR is the method used to send data via the Guardnet to other Army National Guard sites, and is described in detail in a later section.DMOC external WANThe DMOC external WAN consists of several networks, the T-1s, and the Army Guardnet.  There are 12 different T-1s or smaller outside links.  They are connected to:The AFC2TIG (2), 19th Special Operations Squadron (SOS), 58th Special Operations Wing (SOW), Air Force Research Laboratories (AFRL) Mesa, Luke AFB, Information Warfare Center (IWC), Joint National Integration Center (JNIC), Offutt AFB, Fallon Naval Air Station (NAS), Guardnet, which is connected to several Army bases.  Bandwidth Reduction TechniquesThis section describes three bandwidth reduction techniques that are used in the DMOC VIRTUAL FLAG exercises.Simple bandwidth rulesThe Bandwidth Rules are put in place to limit the amount of data on the DIS WAN, limit the users allowed on the DIS WAN, and limit the types of data on the DIS WAN.  They are:Network use for only exercise data (DIS/NATO-EX/etc.) during the exercise.No FTPs during exercise or integration testing.Maximize bandwidth by adjusting Protocol Data Unit (PDU) heartbeat rates.Remote terminal activity on other LAN, if possible.Point-to-Point DIS PDUs transmitted on other LAN, if possible.Tactical data transmission on STU IIIs is preferable.The network rules control the data format that is on each network, the heartbeat rates of specific PDUs, and the ability to control the flow of data on the WANs.  Continuous monitoring of the DIS WAN during the integration testing and exercise is required: 1) to determine if data packets are lost, 2) unauthorized data is on the WAN, and 3) to determine if the predicted bandwidth is accurate.  These measurements are recorded and analyzed for post exercise review and lessons learned.   The DIS Entity State PDU heartbeat rates commonly used are 55 seconds for ground targets, and 5 seconds for air entities.  Emission PDUs are sent once every 15 seconds, or when a change occurs as needed.  However, filtering of specific DIS PDUs is also required to limit what data is sent to which DIS LAN.  Filtering is accomplished by the DIS Filter, as described in the next section.The DIS Filter-AnalyzerThe DIS Filter-Analyzer (DFA) is a DMOC-developed software application that acts as a DIS gatekeeper between two LANs.  It reads DIS PDUs from both LANs and determines if they pass or fail the filter criteria set by the user.  The filter criteria are applied to PDUs as they are read from the network interfaces.  If a PDU passes the filter criteria, it is immediately passed to the outgoing LAN.  If the PDU fails any of the filter criteria, then it is not passed.  The Filter settings are configured independently for each LAN.  The DFA is hosted on a Linux computer.The DFA receives DIS traffic from two separate DIS LANs, which will be referred to by example as the Air DIS LAN and the Ground DIS LAN as shown in Figure 1.  Based on operator-selected parameters, PDUs received on the Air DIS LAN are forwarded to the Ground DIS LAN, and PDUs received on the Ground DIS LAN are forwarded to the Air DIS LAN.  The primary functionality is to reduce the PDU traffic between the two LANs, while ensuring there is enough PDU enchange such to satisfy the training objectives.   Secondary functions are to separate voice and data PDUs received on one port onto two ports, or to combine voice and data PDUs received on two ports onto one port.  							Figure 1.  DIS Filter-Analyzer LAN Configuration.The DFA sends DIS traffic using up to four routes.  Each route is one way, so usually, two routes are used to send DIS data between the Ground and Air LANs, and two more routes are used to send DIS Voice.  The DFA LAN Setup GUI is shown in Figure 2.  Each route is defined by Internet Protocol (IP) address and UDP Port number.  Configuration can be saved, thus configurations for several different exercises can be constructed and saved for later use.  All user-entered parameters are shown on the DFA LAN Setup GUI, including DIS Exercise ID, Debug level (Up to 5 levels can be chosen), the label of each route, and the incoming and outgoing routes.  Once the DFA is started, no routes can be added or modified.The status bar on the bottom of the GUI are mostly self explanatory, such as the start, stop, add route, delete route, modify route, and enable, disable.   The route shown in Figure 2, working from left to right, shows the route is enabled, and the label of the route.  Next, the Incoming route shows the UDP port at 3000, the IP broadcast address at 164.217.255.255.  The filter sends this traffic to UDP port 5095, IP broadcast address 197.1.15.255.  All the route and PDU filter data are stored in the configuration file test.cfg.The Host ID contains the name of the host that the DFA is running on.  The next field is the Running/Not Running field, which shows the DFA is Not Running.  The next status window contains four letters, which corresponds to each route.  If there are four routes, then there will be four letters in this field.  The letter changes as the status of each route is taken.  If a route is not receiving any PDUs then an “I” (i.e. Idle) appears in this field for the corresponding route.  If a route is not being used then an “N” (i.e. None) appears, and if the route is receiving PDUs then an “R” (i.e. Receiving) appears.  Next, the Exercise ID field is displayed, and the debug level 0 is shown.  There are 4 levels of debug available for the user, and the debug can be written to a text file for later analysis.The next step is to setup which DIS PDUs will be filtered on a per-route basis.  By choosing the Edit Filter button, the display shown in Figure 3 will appear.  Note that there are several filter types available within the DFA: DIS PDU type, DIS Site, Application, and Entity ID, Enumeration filter, and the range filter.  The other capabilities include DIS Version translation, a teleport function, a frequency filter, and a delay for PDU processing.   It is important to note that several filters are being applied at the same time.  For a PDU to be forwarded, it must pass all filters.  Also, an entity and its interactions will be considered.  For example, if an entity turns on its radar and sends an Emission PDU, the Emission PDU is forwarded only if that entity passes the filter.  Conversely, let us say that some entity is being filtered (not allowed to pass the DFA), and that entity fires a weapon.  The Fire and Detonate PDUs belonging to that entity will also be blocked.  The only exception in filter AND relationship is the range and DIS Enumeration filters. A PDU must pass only one of these filters in addition to the other active filters to be forwarded.  The sequence of filter checking is outlined below.Exercise Identification (ID).  The DFA can allow or deny any PDU by Exercise ID.PDU Type enabled filter.  The DFA can allow or deny any PDU by type, such as Entity State, Fire, Detonation, Start, Stop, etc.  Entity State PDUs and their interactions are allowed or denied, based on the filter criteria.Allow/Deny Site filter.  The DFA can allow or deny PDUs generated from a specific site/application/entity id, including wild cards. DIS Enumeration.  The DFA stores the allowed DIS entities based on their enumeration.  The DIS enumerations are marked such that the filter can deny certain types of Entity State PDUs based on DIS enumeration.  PDUs sent by the denied entities are also disallowed (e.g.: enumeration for a MiG29 is disallowed - Entity State PDUs from all MiG29's are filtered, as well as any fire/detonation/emission/etc. PDU's from those entities).Range filter.  The DFA has 400 spherical range filters.  The filter allows Entity State PDUs within a range of a selected Site, Application, and Entity ID, or a specific latitude/longitude/altitude location.  This range filter can allow “bubbles of high fidelity” onto the LAN.  Controlling the amount of high fidelity data allowed onto a LAN, reduces the required bandwidth.  It is presented in detail in the following section.DIS Version Translation.  The DFA can modify the DIS version number in the PDU header.Teleport.  The DFA can “teleport” PDUs (i.e. Entity State, Fire, Detonate, etc.), such that the x, y, and z location of each PDUs can be teleported to another location.High fidelity regionsThe DFA Range filter has several different applications that are used as bandwidth reduction techniques.  One example, during the DMOC VIRTUAL FLAG exercises, is to send ground targets to an external site that has air to ground simulators.  As mentioned before, DMOC operates the Air LAN and the Ground LAN.  The ground LAN is a 100 Mbits/sec internal LAN, where all entities generated for the exercise reside.  The ground entities usually number around 7,000 – 11,000 tracks, which would exceed the bandwidth of a T-1.  However, Air to Ground mission simulators at external sites require many of the ground tracks within their visual/radar range.  The Range filter is set such that it is within the radar range of the air to ground mission simulator, such as a F-15E, F-16, A-10.   All other ground entities are filtered out, so only the entities of interest are sent via the T-1.  The ground entities could have an increased update rate, such that fidelity is increased, and the internal LAN can handle the increased bandwidth usage, but the bubble of high fidelity could be sent via a T-1 and not exceed the bandwidth.  The concept is shown in Figure 4.Another use of the range filter is to limit the amount of entity processing a simulator must do in an exercise of several thousand ground-entities, thus eliminating unneeded processing by the simulator’s DIS interface.   For instance, if a constructive environment generator generates tens of thousands of ground tracks, a JSTARS simulator can have a range filter applied that equals its radar range.  Therefore, the simulator does not have to process the tracks outside its radar range.A third application that has been used in VIRTUAL FLAG exercises is for identifying bad data that crashes simulators during a distributed exercise.  One such example is when an incorrect PDU, sent by one simulator could potentially bring down several other participants in a distributed exercise.  The DFA would be installed between the distributed LAN, and another virtual LAN where the bad PDUs could be identified and filtered.  This application has proved invaluable in problem solving during VIRTUAL FLAG Exercises, as well as integration testing.DMOC Software Router (DSR)DMOC exercises support various data formats within its synthetic battlefield, commonly referred to as the battlespace.  The most prevalent is the Distributed Interactive Simulation (DIS) protocol as defined by the IEEE Std 1278.1a.  Most of the battlespace simulations use this protocol to communicate between each other to present the warfighters with an underlying synthetic environment.  Many of the live-fielded systems, however, use the NATO-EX format for communication; data also needs to be sent between the remote sites and DMOC.  One such particular instance is the connection of the remote Army National Guard Patriot, Joint Services Work Station (JSWS) and MCE systems through DMOC and outside.  Partial T-1 links connect these live systems through a network known as the Guardnet, and the DSR acts as a transport utility for this network and the data carried within it.  The DSR additionally supports video teleconferencing for after action debriefs.ConstraintsWhen presented with the challenge of establishing the Guardnet connectivity to the VIRTUAL FLAG exercises, the DMOC team was also presented with two major constraints.  One of those constraints was seamless integration into the existing Guardnet network.  This meant modifying the remote sites' networks and system configurations as little as possible.  Great care was taken to ensure that no modifications were necessary to the existing Guardnet network of live systems and simulations.  This allows for a minimal impact of the VIRTUAL FLAG exercises on the existing infrastructure reducing the manpower required to support the exercises, and day-to-day training.  It also reduces the amount of system reconfiguration, thus reducing the dependency on outside contractors, and therefore, reducing the operating cost.  Another constraint is the bandwidth.  The Guardnet limits its participants to the bandwidth of 768 Kilobits per second (Kbps).  This bandwidth needs to support the DIS protocol simulation data, the NATO-EX live System formats (MPI), Synthetic Aperture Radar (SAR) image request and transmittal, the free text messages, and the exercise radio/voice communications.  Network architectureThe DSR software was created to act as a single point of entry and exit for all of the exercise data.  It acts as a gateway and a transport utility while eliminating redundant broadcast data on a simulation network.  It also ensures that the Guardnet bandwidth is not exceeded.  Figure 5 below depicts the DSR’s role in typical exercise network architecture from the functionality point of view.  This figure omits the many physical devices in the network path; it only concentrates on the functional components of the architecture.Host platformThe DSR software is hosted on a rack mounted Personal Computer (PC) platform running Linux operating system.  The current configuration includes a 1 GHz Intel Pentium III microprocessor, 1 GB of RAM, and 3 network cards.  It uses the Red Hat Linux distribution Version 7.3 with kernel Version 2.4.  The Host computer can be configured with as many network cards as needed to ensure the connectivity to all nodes.In the DMOC Battlespace the application is compiled using the latest GNU 'C' compiler.  It is suspected, however, that any recent version and distribution of Linux and GNU compilers should be compatible with this application due to the nature of Linux.DSR functionalityThe DSR bandwidth requirement reduction is achieved by two means.  First and most importantly, DSR uses a metering algorithm, which minimizes the probability of loss of the unreliable UDP messages.  This is accomplished by monitoring the amount of data being fed into the T-1 connection, and limiting that data on a per second basis.  The user can specify the number of individual messages as well as the number of bytes allowed onto the partial T-1 link per second.  Any messages above that quantity are buffered and transmitted in the future when the network load is reduced.  This approach, of course, can add to the network latency, but it ensures that all of the data gets transmitted without the added overhead of reliable TCP connection.  DSR can additionally assign priorities to messages based on their type and originator such to minimize the latency impacts depending on system requirements.  It is important to note, however, that when the network load is below the critical threshold, there is no message buffering, and the latency due to the DSR is negligible. The second way the DSR reduces the bandwidth is by using the multicast transport protocol wherever typically UDP broadcast is used.  In order to understand this process, one needs to understand how DSR processes information.  Each instance of the DSR running on the simulation network has dual functionality.  First, the application software simply listens to multiple ports and local networks for predetermined UDP broadcast data.  Once data arrives, it is packaged inside another data packet, and then it is multicast to all other potential DSR hosts.  This functionality is referred to as a Local Interface, meaning it services the local LAN’s data.The other functionality of a DSR node is to listen for multicast packets originating from other DSRs on the network.  When these multicast packets arrive, they are unpacked from their DSR wrappers, and then they are sent to their original intended recipients, or broadcast on the local networks.  This functionality is referred to as a Remote Interface.  Every DSR instance has only one Remote Interface, but it can have any number of Local Interfaces.  Typically for each network there are several Local Interfaces, which vary by the port numbers they are assigned to listen to.  One other functionality of the DSR is when it is used in the Multicast mode on its own dedicated multicast subscription port/IP combination.  In this mode, the DMOC uses the existing T-1 lines to transmit the DSR packets with the simulation data wrapped inside.During certain exercises, DMOC also uses the Distributed Mission Training (DMT) Portals for simulation data transport.  The DMT Portals currently only support DIS data, therefore, the DSR also has capability of operating in DIS mode.  In DIS mode, the incoming (local) UDP packets are wrapped into a Set Data PDU.  The UDP (e.g. NATO-EX) data is wrapped into the standard DSR packet, which stores the incoming parameters, and then all of DSR packet is wrapped inside the DIS PDU packet so that the DMT Portal can transmit it.  Some additional parameters have been added to the DSR configuration when operating in the DIS mode.  The user specifies the exercise id and site/app/entity id associated with the instance of the DSR.  Additionally, the user specifies the site/app/entity ids of all remote DSRs, which are expected to be transmitting data in DIS mode.  This prevents the DSR confusing the Set Data PDUs that are carrying the DSR data from any other Set Data PDUs within the exercise.Application softwareThe DSR application is written using the ANSI 'C' programming language.  Recently a Graphical User Interface (GUI) has been added to it.  As with the DFA, configurations can be stored to files, and recalled at later time for use.  It also has a set of simple run-time commands, which alter the debug reporting and enable logging data to hard disk.The application uses POSIX threads to manage the multiple Local and Remote Interfaces.  Each Interface is assigned its own POSIX thread to run in.  A POSIX Mutex is used when incrementing and resetting internal counters.  These counters are used for reporting the DSR status and packet throughput.DSR configuration fileAt startup the DSR reads a configuration file, which defines the routing information for the current session.  A sample configuration file is shown in Figure 6.  The file serves three primary purposes.  It defines the Local Interfaces, the Remote routing data, and miscellaneous configuration data such as the buffering and threshold data, and the default debug level.The LOCAL keyword identifies the Local Interfaces DSR listens to for data.  REMOTE keyword identifies how to route the remote messages, which arrive from other DSR applications on the Guardnet.  FIFO_SIZE specifies how much data will be buffered in the event it exceeds the allowed bandwidth.  MAX_BYTE_RATE and MAX_MSG_RATE indicate the maximum number of bytes and individual messages that are allowed through the DSR per second.  Once either of those parameters is exceeded, the messages are buffered.  The buffered messages in turn are sent as soon as the message flow falls below the threshold values.DEBUG_LEVEL indicates the default debug level at startup.DSR runtime commandsAll route-related configuration data is loaded into the DSR from the configuration file at startup.  The only runtime control relates to the engineering level reporting facilities.  Similarly to the DIS Filter, the application uses the concept of Debug Levels where each successive level includes the debug information from all of the previous levels. There is an exception to the cumulative nature of the debug levels, however.  Debug level –1 is a periodic reporting feature, which provides a statistical view of the system.  Typical output in this mode is shown in Figure 7.  The user may observe how much data arrived on the local and remote interfaces, and how much data was sent out to the network.  This data is represented as an individual message count as well as a byte count.  This feature proves extremely useful when verifying the “health” of the simulation network.  The number of remote messages received at a given DSR host should always equal to the sum of the messages sent from all Local Interfaces from the remaining hosts.The diagnostic messages can also be logged to a file for post-processing.  This is also accomplished by a runtime command.ConclusionIt is imperative to provide today's warfighters with a realistic training environment that emphasizes battlespace realism and prepares the warfighter for coalition operations.  Distributed training and simulation such as the DMOC's VIRTUAL FLAG exercises provide unique Joint training environments.There are many DIS-based distributed exercise infrastructures in the simulation and training community. In many cases, these infrastructures will remain in place for years to come.  Hence it is imperative to use the available network bandwidth more efficiently.  As the role of distributed virtual, constructive and live simulation intensifies, tools such as the DIS Filter-Analyzer and the DSR allow us to move forward, and to add to the training realism.The tools described in this paper, however, offer maximum flexibility while maintaining minimal impact to the existing network and exercises infrastructures.5.	References[1]	IEEE 1278.1a, 1998 [2]	DIS Filter-Analyzer Software User’s Manual, 2002.6.	BiographyMr. SORROCHE has 16 years professional experience; 8.5 years experience in the Modeling and Simulation field. He currently works at the DMOC as the Exercise Engineering Integrated Product Team Lead for distributed exercises, and has been the Engineering lead for the DMOC for EFX 98, JEFX 99, JEFX 2000, Millennium Challenge 02, JEFX 04, and many Blue Flag and VIRTUAL FLAG exercises. He is the Vice Chair for the SISO Signal PDU Study Group, and the Chair for the Signal PDU Product Development Group.  Mr. Sorroche was a co-recipient of the Fall 2002 SIWZIE Award for 02F-SIW-119 titled “TADIL TALES”.  He has Bachelors and Masters of Science in Electrical Engineering from New Mexico State University.  He is a member of Tau Beta Pi and Eta Kappa Nu Honor Societies.  Mr. Szulinski has 14 years of experience in the modeling and simulation field, and currently works for Lockheed Martin as a System Engineer at the DMOC.  During his career he has been involved with constructive, live and virtual simulation including rotary- and fixed-wing flight simulation, physics-based weapons effects modeling, live air combat maneuver ranges, mission rehearsal and exercise support for Navy’s Fleet Battle Experiments and Air Force’s VIRTUAL FLAG exercises.  His primary area of expertise is within distributed simulation (DIS/HLA), visual simulation and computer networking.  He holds a Bachelor of Science in Aeronautical Engineering from Embry-Riddle Aeronautical University.  He has co-authored and presented multiple SISO SIW and IITSEC papers.Air DIS LAN1DEBUG_LEVEL 150 MAX_MSG_RATE 20000 MAX_BYTE_RATEFigure 3.  DFA Route Filters Configuration WindowFigure 2. DFA GUI Main WindowRemote DSRFigure 4.  High Fidelity RegionsCGS   F-16 Air to AirF-16 Air to groundJSTARSLOCAL SAR messages  received 	= 653 LOCAL SAR bytes received 	= 995172 REMOTE SAR messages received	= 419REMOTE SAR bytes received 	= 6385556FIFO Used Space 		= 12.4%sent bytes Local 			= 12704sent messages Local 		= 148received bytes Remote 		= 3876received messages Remote 	= 89Figure 7. Sample DSR debug outputRemote DSR EMBED Word.Picture.8  Ground DIS LANDIS Filter 5000000  FIFO_SIZE   4010   175.12.5.255 TE         4010          REMO   9735   175.28.3.255 TE         9735          REMO9724   175.28.50.255     TE         9724      REMO9723   175.28.5.255       9723          REMOTE    4010 LOCAL   9735 LOCAL   9724 LOCAL   9723 LOCAL  Figure 6: DSR Configuration File