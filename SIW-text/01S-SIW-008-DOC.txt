Integrating Army M&S-to-C4I Requirements into the DII COEDonald H. TimianLogicon – Sterling FSG5502 Leesburg Pike, Suite 1200Falls Church, VA  22041(703) 824-4020don.timian@sterling-fsg.comStephen R. WhitsonMITRE Corp.Whitfill CTSF, Bldg. 27Fort Hood TX, 76544-5000(254) 532-8321 ext. 2063 HYPERLINK mailto:mhicks@c3smail.monmouth.army.mil swhitson@mitre.orgRichard J. HydeLogicon – Sterling FSGWhitfill CTSF, Bldg. 27Fort Hood TX, 76544-5000    (254) 532-8321 ext. 2505    rick.hyde@hood-ctsfmail.army.milKeywords:C4I, CMP, DLRC, Eagle, M&S, M&S-to-C4I Interface, RTM, SIMCI OIPT, TSIU, and WARSIMABSTRACT:  In November of 1999 the Army’s Director for Information Systems for Command, Control, Communications, and Computers (DISC4) and the Army’s Deputy Under Secretary of the Army for Operations Research (DUSA(OR)) charrted a specific Integrated Product Team to manage and coordinate the Army’s Modeling and Simulation (M&S) to Command, Control, Communications, Computers, and Intelligence (C4I) efforts.  This is the Simulation-to-C4I Interoperability Overarching Integrated Product Team (SIMCI OIPT; http://www.simci.org).  One of the working groups within the SIMCI OIPT is a “consortium” of Army M&S-to-C4I Interfaces.  This consortium includes the primary M&S-to-C4I interfaces being used either by the Army’s training and analytical communities or in development:  the Warfighter Simulation 2000 (WARSIM) C4I Interface; the Enhanced Tactical Simulation Interface Unit (ETSIU); the Run Time Manager (RTM); and Eagle, the dominant federate in an High Level Architecture federation know as the Digital Leader Reaction Course (DLRC).Over the last year, all of the consortium members have been cooperating in their integration of the Common Operating Environment Message Processor (CMP) and other Army Foundation Software into their interfaces.  This effort has resulted in a set of the Army M&S-to-C4I requirements that will be incorporated into the CMP System Requirements Specification (SRS) with the hope of developing an M&S “friendly” Defense Information Infrastructure Common Operating Environment (DII COE) interface.This paper will describe some of the SRS changes recommended by the consortium, as well as briefly describe the DII COE, the CMP, and the four consortium interfaces.  We will also briefly describe the SIMCI consortium’s FY01 planned project.  It is hoped that this effort will result in other DII COE components being integrated into Air Force, Army, Navy, and Marine M&S-to-C4I interfaces, as well as M&S programs.IntroductionIn 1998 the Army spent just over ten million dollars to maintain limited interoperability between its suite of analytical and training simulations and its division-and-below Command and Control (C2) systems; specifically the Army Tactical Command and Control System (ATCCS) and the Force XXI Battle Command Brigade and Below (FBCB2).  This interoperability is accomplished via a set of specific software interfaces linking Modeling and Simulation (M&S) to Command, Control, Communications, Computers, and Intelligence (C4I) systems.  Unfortunately, because reuse, standardization, and interoperability were often not key design criteria, most of these M&S-to-C4I interfaces link a specific simulation to a specific C4I system and typically handle only a small sub-set of the messages or data the "target" – or stimulated – C4I system can accept and/or the simulation can pass.To help reduce the money the Army is spending on its M&S-to-C4I interfaces and to help improve reuse, standardization, and interoperability, on November 3, 1999 the Army’s Director for Information Systems for Command, Control, Communications, and Computers (DISC4) and the Army’s Deputy Under Secretary of the Army for Operations Research (DUSA(OR)) charted the Simulation-to-C4I Interoperability (SIMCI) Overarching Integrated Product Team (OIPT) –  HYPERLINK http://www.simci.org http://www.simci.org – to manage and coordinate the Army’s M&S-to-C4I efforts.  One of the working groups within the SIMCI OIPT is a “consortium” of Army M&S-to-C4I interface developers.  This consortium includes the primary M&S-to-C4I interfaces being used either by the Army’s training and analytical communities or in development:  the Eagle based, Digital Leaders Reaction Course (DLRC); the Run Time Manager (RTM); the Enhanced Tactical Simulation Interface Unit (ETSIU); and the Warfighter Simulation 2000 (WARSIM) C4I Interface.As described in Timian et. al. [21] and Heib and Sprinkle [10], the keys to common, reusable M&S-to-C4I interfaces are the Army Foundation Software Suite and the Defense Information Infrastructure Common Operating Environment (DII COE).  Specifically, from the Army Foundation Software Suite, the Command and Control Registry (C2R) and, from the DII COE, the COE Message Processor (CMP) and the Ground Communications Server (Comms Server).Over the last year, all of the consortium members have been cooperating in their integration of the CMP, Comms Server, and C2R into their interfaces.  This effort has resulted in a set of Army M&S-to-C4I requirements that will be incorporated into the CMP System Requirements Specification (SRS) with the hope of developing an M&S “friendly” Defense Information Infrastructure Common Operating (DII COE) interface.The focus of this paper is the description of the SRS changes – to include the why – made by the consortium members.  The remainder of this paper is organized as follows.  Section 2 will introduce the DII COE.  Section 3 will describe the CMP.  Section 4 will address why M&S-to-C4I interface developer should use common C4I components.  Section 5 will briefly introduce the reader to the four consortium interfaces.  Section 6 will describe some of the recommended changes to the CMP’s SRS.  And, in conclusion, Section 7 will briefly describe the SIMCI consortium’s FY01 planned project.2.	The DII COEThe DII COE was born in 1995 from the Global Command and Control System (GCCS) COE.  Because the DII COE is not only an architecture for configurable mission applications, but is also a philosophy, a process, and a practice, it has been mandated as the basis for the creation of future C4I systems.  The Joint Technical Architecture (JTA) [14] gives the overall framework for developing systems within the DoD and specifies the use of the DII COE.The users and developers of C4I systems recognized the need for standardization to reduce system-to-system interoperability issues and rampant redundancy.  The Services have adopted the DII COE concept and mandated its baseline, integration, and runtime specifications [8].It is sometimes convenient to think of the layered software of the DII COE as an Operating System (OS).  Since the DII COE may either be resident on Windows™ or UNIX platforms, it is obviously not an OS.  Rather it is a collection of software that collates common support applications and augments infrastructure/kernel functions.  This results in a DoD-specific DII COE/Windows™ or DII COE/UNIX operating system.Development of a DII COE compliant software component ultimately results in that software going through a segmentation process.  This step is crucial for the independent and distributed development of applications.  Thus, when a software component is made to work within the DII COE “environment” it is said to be segmented, and then can be submitted to the Defense Information Support Agency (DISA) for compliance testing.  The segmentation process requires that public Application Programmer Interfaces (APIs) be identified in the file structure or “Segment Directory.”  This means that there is a process-enabled method for application developers to reuse previously accepted, compliant software with well-established public interfaces.Per the DII COE Architecture Oversight Group Charter [5], portions of the DII COE are being updated using requirements generated by 19 Joint Service Technical Working Groups (TWGs).  Several of these TWGs are critical to M&S-to-C4I interface developers:Message Processing (responsible for the CMP; Army lead);Communications Services (Army lead);Data Access Services (Army lead);Alerts (Army lead);Common Operational Picture;Visualization; and Mapping, Charting, Geodesy, and Imagery (responsible for the JMTK); andM&S (Defense Modeling and Simulation Office lead;  HYPERLINK http://diicoe.disa.mil/coe/aog_twg/twg/mstwg/ http://diicoe.disa.mil/coe/ aog_twg/twg/mstwg/).Figure 1.  The DII COE ArchitectureThe DII COE ArchitectureFigure 1 depicts the DII COE as a layered software architecture comprised of Mission Applications, Common Support Applications, Infrastructure Services, Kernel Services, and Database Applications and Services.  The cubes shown are software modules.With the exception of Databases, the software layers are organized from the most common and generic at the Kernel level to most unique and specific at the Mission Application level.  Since their use is required by software existing in all the layers, Databases can exist anywhere along the range from common to specific.  The Databases layer contains intelligence, combat support, tactical specific, and strategic specific databases.The Kernel software runs on all DII COE compliant platforms and contains such things as Security System Management, Windowing Software (X-Windows, Windows™), executive management, network configuration, disk management, install/de-install, kernel patches, printing, runtime services, and the operating systems (Windows™ and UNIX).  The Kernel contains critical services that all infrastructure, common applications, and mission applications either directly or indirectly depend upon.The Infrastructure layer software emphasizes the movement of data through the network of DII COE systems and contains communications, distributed computing, presentation and web, network management and data, and object management services.  The Infrastructure layer allows common and mission applications to take advantage of the distributed nature of DoD computing.The Common Support Applications layer begins to address interoperability through an emphasis on a common view of the data and contains message processing, alerts, on-line help, office automation, correlation and data access functions.  The APIs provides access to essential software functions in the layers below them.We call Mission Applications “lightweight” or “heavyweight” depending on their reuse of functionality available through the software layers below them.  A Mission Application is considered “lightweight” after it ascends through the DII COE compliance levels shedding redundant functionality.  It adapts itself to use capability from Common Support Applications, Infrastructure, Kernel, or Database Services.  It still is “heavyweight” if it is self-reliant upon capabilities from its internal, redundant software and consequently, little reuse or interoperability occurs between it and other DII COE applications.There are currently no standard Simulation Infrastructure Components in the DII COE, although work is ongoing to segment the High Level Architectur’s (HLA’s) Run Time Infrastructure (RTI), under the DII COE M&S TWG.  Segmenting the RTI is only a first step, however. The challenge is to identify which functionality is needed to perform M&S within the DII COE and to modify the DII COE Software Modules appropriately.  This issue is more fully described in Hieb and Sprinkle [10], who delineate four different technical approaches for integrating simulation functionality into the DII COE.Army Foundation SoftwareA significant lesson learned during Army Experiment 4 was that an M&S-to-C4I interface must be viewed as an end-to-end system comprising the simulation, the interface software, and the C4I system [2].  In other words, to accomplish full interoperability with C4I systems, it is not sufficient for M&S developers just to build better messaging capabilities into their systems.  C4I systems must also have automated interfaces and simulation functionality “built-in” based on a system specification rather than added on ad-hoc at a later date.There are three areas where C4I systems will change in ways that make interoperability easier.  First, C4I systems will increasingly utilize database updates as opposed to sending messages with a particular message protocol.  Second, C4I system developers will increasingly use common data models that will utilize standard data elements. And lastly, C4I systems will move to a set of standard software components or COE.As an example of the future C4I system architecture, with the January 2000 release of Army Battle Command System (ABCS) version 6.0.  The Army has begun an effort to make its ABCS system interoperable via a common architecture (the DII COE) that uses the specified Joint DII COE components plus specific Army C2 software components (the Army Foundation Software Suite).  The Army Foundation Software Suite is used in the Army Common Information Infrastructure (ACII), which was developed by the Horizontal Technology Integration Office of the Program Executive Office – Command, Control, and Communication Systems (PEO-C3S).  The ACII is shown in Figure 2 and provides a flexible capability to achieve Army, Joint, and Coalition interoperability.  It is based on an information management model rather than a message transaction model, while still providing support for current formatted messages for data distribution.  The ability to use current and evolving message, data distribution, and data replication technologies permits implementations to support interoperability across a wide spectrum of operations and interfacing systems.The ACII architecture is database centric with the database being the focus of all information operations.  It is based upon Joint DII COE products as well as the Army Foundation Software thus promoting a high degree of software reuse.Two key Army developed components within the Army Foundation Software Suite are the Joint Common Database (JCDB) and the Command and Control Registry (C2R).  The JCDB is an American National Standards Institute (ANSI) Standard Query Language (SQL) database management system.  The JCDB conforms to DoD and NATO standards.  The JCDB focuses on data that is shared by two or more ABCS systems.  Functional areas supported by the JCDB include – but are not limited to – intelligence, logistics, communications, network and system management, fire support, Army aviation, air defense, and maneuver.The JCDB used to be called the Army Common Database (ACDB) [12].  It was renamed because of on-going work between DISC4 and DISA, and because of incorporation of enemy tables and data elements from the Modern Integrated Database (MIDB) into the ACDB.The C2R is a means of dynamically and consistently coordinating and collaborating C2 naming, addressing, net structures and configurations, operations, and relationships across many different types of systems potentially deployed globally.  Used by battlefield applications, system service software, and warfighter personnel of the Army Signal Corps, the C2R will also support Joint and Allied interoperability.3.	The CMPThe Army currently chairs the DII COE Message Processing TWG [6].  The primary function of the TWG is to manage a baselined set of requirements for messaging and provide traceability between these requirements and the current COE releases and build plans.  This TWG is comprised of one voting member from each Service/Agency, to include the Army, Navy, Air Force, and Marines.  TWG decisions are made based on consensus of the voting members.  TWG participation is encouraged by all agencies within each service and allows members to:Assess and develop proposed change requests;Coordinate requirements with other TWG chairs;Support technical reviews;Assure requirements are defined and implemented in accordance with the Service/Agency needs; and Propose API retirement or expansion.DII COE Messaging requirements are published in the DII COE Message Processing Software Requirements Specification (SRS).  A formal call for Message Processing requirements from Joint services is done every six months.  These requirements are submitted and reviewed by the TWG, and if accepted, prioritized and added to the SRS.  All CMP software development efforts strictly adhere to the requirements defined in the SRS [7].The CMP is a multi-functional automated message processing system that contains state-of-the-art technology to process both inbound and outbound messages using a standard Graphical User Interface (GUI).  Functional capabilities include:Internal routing;Extraction of data from messages and their headers for forwarding to other applications or databases;Standing request for information;Automatic and interactive message generation;Validation of inbound and outbound messages;Autofill of data from the database of a message or application;Journaling of both character oriented and bit oriented messages; andError handling.Figure 2: Army Common Information InfrastructureAs shown in Figure 3, CMP software is logically bound by the Comms Server on one side and processes specific to a Mission Application on the other.  Processing of inbound messages from the communications front end includes essential functions such as field/format validation, profiling, standing request for information, parsing and routing.  Extracted data from inbound messages can be automatically posted to a database and/or application.  The processing of messages for hand off to the DII COE Comms Server includes essential functions such as message and header preparation, validation, and coordination/release.  Messages may be manually or automatically generated by pulling data from a database and/or application and transferred to the communications module for forwarding.  The message processing module permits components to be employed independently, or in combination with other components, to perform a single, or group of, function(s).The message processor is capable of processing any formatted or unformatted message that is validated by tables derived from the Joint Interoperability Engineering Office (JIEO) Central Data Base System (CDBS).  The CMP software has been officially certified to run on all DII COE Operating Systems.As described in Newcomb et. al. [16] and Timian et. al. [21], APIs are being developed to allow M&S systems and other C4I Mission Applications to 1) use the CMP to format both message headers and message bodies and 2) use the CMP to parse messages and extract data from the message headers and message bodies.  The CMP program is not developing specific APIs for M&S, but rather APIs that allow automated message processing for any mission application. CMP software and documentation is free to U.S. Joint Services with no up front cost.  Requirements determined to be Service unique, rather than Joint, may be implemented at an additional cost.The WARSIM effort to develop a common M&S-to-ABCS tactical messaging interface began in April 1998.  Simulation specific requirements are continually being developed and added to the CMP SRS for implementation.  Many of these requirements have been addressed in the most recent Java version of CMP.  With the use of a generic Java object to store both inbound and outbound message data, the CMP is now being used to parse and format specific United States Message Text Format (USMTF), Joint Variable Message Format (JVMF), and Variable Message Format (VMF) Package 11 messages to provide two-way communications between WARSIM and ABCS systems.  API calls allow the parsing of incoming data, formatting outgoing data, and the creating of C4I classes.  Attendance at monthly software engineering meetings to discuss CMP integration and ongoing communication between WARSIM and CMP developers guarantees the continual successful accommodation of simulation specific requirements.Figure 3.  Functional Description of the CMPIn addition to WARSIM, the CMP customer list includes 26 Army, Air Force, Navy, Marine Corps, and Joint C2 Systems.4.	Why Use Common C4I Components?To improve interoperability between M&S and C4I systems, it is not sufficient for M&S developers to build better “custom” software to link their simulations to C4I systems.  Reuse and standardization must become the key design criteria.Because M&S is not a warfighting skill – but command and control is – whenever possible, M&S developers should attempt to integrate common C4I components into their simulations.  Obviously, if the appropriate APIs are available, this option has the potential of saving the M&S developer both time and money.  It also eases the amount of time needed to integrate future drops of C4I software and the M&S developer continues to ensure that the appropriate common C4I components are in fact common.  (In other words, the version number of the common component(s) being used by both the C4I system and the simulation are the same.)An excellent example of the power of using common C4I components  can  be  seen in  Figure  4.  By  the  spring ofFigure 4.  DoD CMP Implementation2001 the vast majority of DoD’s C4I systems will have implemented the CMP.  Thus, an M&S developer who elects to use the CMP to interface their simulation to a specific C4I system – say the GCCS – will have built into their simulation the ability to interface with all of the Army’s Tactical Command and Control Systems (ATCCS), as well as the Contingency Theater Automated Planning System (CTAPS) and GCCS-Maritime  (GCCS-M).The Four Consortium InterfacesEagle based, Digital Leaders Reaction Course (DLRC)As described in Ogren [17], the primary objective of the Eagle-based, DLRC is to train a battle staff to leverage the advances in information warfare to win the next war. It provides an environment for training leaders on how to visualize the battle space and make tactical decisions in a time constrained, digitized environment.To create this environment the DLRC combines several simulations and interfaces them to the ATCCS family of systems.  The core simulation used to drive the DLRC is the Eagle Combat Simulation.  Eagle combines techniques normally associated with artificial intelligence for representing command and control decision making and classic algorithmic solutions for representing the physical dynamics of the battlefield.  The simulation represents commanders and staff sections at each level of a tactical military operation, all performing battle management tasks based on operations orders, driven by combat message traffic being passed up and down the chain of command [17].Run Time Manager (RTM)The RTM is a software and database application that stimulates a live network of C4I systems during simulation supported events by managing the transformation of data to and from a set of simulations to the C4I network.  In essence, the RTM appears to the live portion of the C4I network as the simulated portion of the C4I network.  The RTM implements unit guidelines to create a realistic flow of information between the live network and the simulated network as it is required to meet the testing or training objectives of the using units.  The RTM has supported numerous Division, Corps and Theater level events involving stimulation of all five ATCCS systems using combinations of the Corps Battle Simulation (CBS), the Combat Service Support Training Simulation System (CSSTSS), and the Extended Air Defense Simulation (EADSIM).  The RTM can also support Brigade and Battalion events using the Brigade/Battalion Battle Simulation System (BBS).  RTM version 3.1 runs on the DII COE foundation and has integrated the CMP and associated ACII components [3]. The next release will be used to stimulate ATCCS and FBCB2 information flow for the Army's Division level Digital Capstone Exercise in October 2001.Enhanced Tactical Simulation Interface Unit (ETSIU)The Tactical Simulation Interface Unit (TSIU) provides the capability to interface simulation with tactical C4I systems while minimizing the tactical communications protocol implementation dependencies within the simulations and providing non-intrusive tactical communications with the C4I systems.  The TSIU interfaces with simulations using Distributed Interactive Simulation (DIS) transmitter and signal Protocol Data Units (PDUs) to exchange the dynamic data necessary to support C4I interactions between simulated and live systems.  It communicates with C4I systems using tactical messages, and it translates and routes information between the simulated and live systems to enable live tactical system operators/cells/staffs to perform their tasks and missions in the same manner as in a live operation.Per the JTA, when the requirement to upgrade the TSIU to be HLA compliant was levied, a decision was made to combine this upgrade with other pre-planned improvements such as implementation of a more robust two-way communications framework, addition of a comprehensive graphical user interface, and support for reuse of DII COE and other Army Common C4I Software [1].  The resulting “Enhanced” TSIU is currently being developed via a series of builds that will run through calendar year 2001.  Build 2 was just completed in December 2000.Warfighter Simulation 2000 (WARSIM) C4I InterfaceWARSIM is the Army's next generation command and control training environment.  In conjunction with the Joint Simulation System (JSIMS), it will support the training of unit headquarters and command posts from battalion through echelons above corps in joint and combined scenarios.  It is designed to allow units world-wide the capability to train in their command posts using their organic C4I systems.  WARSIM will replace a number of existing legacy training simulations including CBS, CSSTSS, and the Tactical Simulation (TACSIM) [16].At WARSIM’s Initial Operating Capability (March 2002), the WARSIM C4I Interface will support all five ATCCS systems.  As described in detail in Newcomb et. al. [16] and Timian et. al. [21], via the CMP, the WARSIM C4I Interface will provide a seamless, two-way interface between WARSIM and ABCS.6.	Recommended Changes to the CMP’s SRSCMP, as part of the DII COE, has numerous customers across DoD.  As a result, CMP must cater to many customer requirement requests each year.  As mentioned previously, the Army funded the SIMCI OIPT and more specifically a SIMCI CMP Software Development Team (SDT) to assess CMP’s interoperability with simulations and C4I Interfaces based on the SDT’s own integration efforts.   The goal of this SDT was to  produce and submit ITEM NOREQUIREMENT DESCRIPTION SRS PARA REFCOMMENTS1 Improve CMP message processing rates.  The current message processing rate slows to one per 20 seconds when under load (sending multiple messages per minute).  Problem concerns the number of units in the message.  With a K.5.01 (JVMF), the more units, the slower the transfer rates.  With 20 units it slows to one message in 20 seconds.  May also be a Comms Server issue.SRS:  3.2.1 and  3.2.3.13.1Does not apply to architectures that have multiple CMP instances.2 Currently all new CMP APIs are written only in Java.  Not all M&S-to-C4I interfaces are written in Java.  Most are written in C++.  Request that when a new API is written, a C++ API also be provided. SRS:  3.9.1Eagle, ETSIU, and RTM are written in C++.3In addition to current message protocols, request support for CSSCS "USMTF-Like" messages, FDL messages,  and USSID, as well as OTH-Gold, TADIL-J, and AFATDS RO.SRS:  3.2.1.2.7OTH-Gold and TADIL-J to be done in 2001.  4APIs should support exchange of tactical objects—not strings or formatted messages . . . something like XML.SRS:  3.3.2  5CMP should allow for "tailored" applications that others have developed so that installation is configured for better reliability.  Invoke CMP at a more efficient implementation than current, without the server burden.  Allow for use of only the active components needed.SRS:  3.2.3.1.1 6Need to better document the APIs and tools used to support building CMP message databases.  And, once validated, a process to add to their (CMP) library.SRS:  3.14Much of the API interface information is undocumented.Table 1.  Proposed Changes to the CMP SRS (Table 1 of 2)a list of requirements for CMP to consider in future software versions that would permit enhanced interoperability with simulations.The SDT met several times between May and November 2000.  Meetings were conducted via telecon, VTC, and face-to-face.  Participants in the meetings were SIMCI representatives from Fort Hood, Texas, along with program office representatives (both software engineers and management) from Eagle, ETSIU, RTM, WARSIM, and, of course, CMP.  This ensured there would be a thorough understanding of the advantages and disadvantages – with respect to M&S-to-C4I interfaces – of the current CMP software.The SIMCI CMP SDT submitted 15 proposed changes and/or additions to CMP functionality on December 21, 2000 (See Tables 1 and 2).  There was no priority to the list since some of the fixes are easy and involve little cost, while others may require additional funding for CMP in the future.  However, that being said, we will highlight four of the suggested requirements.The CMP, as well as other DII COE components, were used extensively by RTM during the recent November/December III Corps and 4th Infantry Division (Mechanized) Warfighter Exercise.  For the Warfighter, RTM stimulated – via CBS – both the Corps’ and the Division’s ATCCS systems.  The National Simulation Center led RTM team reported that CMP worked well throughout the exercise; however, the message transfer and processing capability needs improvement to handle the larger volume of messages needed by fully digitized units.  Specifically, when RTM sent a set position location messages, JVMF K5.01s, which identify multiple unit locations, such as all the units in a Division’s area or operations, CMP processed those messages very slowly.This slow transfer rate into ABCS may also be due to the Comms Server, but it appears that both pieces of software are clearly involved.  The SIMCI CMP SDT asked that CMP improve their message inbound and outbound processing and performance requirements.  This is not to be interpreted as a shortfall in CMP.  CMP has had to adapt continually with the latest version of ABCS software.  The pace of ABCS software change has left little time for refinement and improvement of CMP.  Nor, prior to the recent III Corps and 4th Infantry Division (Mechanized) Warfighter, has ABCS been given as rigorous a workout.  However, ABCS  version 6.2 was base-lined on December 12, 2000, so this should allow the CMP team some time for product improvement.Another item of interest to multiple parties was the necessity of CMP to provide software upgrades to accommodate both Java and C++.  CMP is a Java based product.  However, Eagle, ETSIU, and RTM are written in C++.  CMP usually writes and releases a C++ wrapper to allow the other simulations to integrate the release, but timely, fully C++ compliant APIs will significantly improve interoperability.Also requested by the SDT was 1) CMP documentation and 2) tools to support building CMP message databases.  Once validated, the M&S-to-C4I interface developers would like a way to add the tools to their CMP library.  Due to the spiral development nature of CMP, the documentation for APIs needs improvement.  With thorough documentation, the M&S-to-C4I software engineers are better able to port their application interfaces to CMP without the time and expense of frequent coordination with the CMP program office.Finally, a need was expressed for CMP to support additional message protocols.  For 2001, CMP already plans on adding support for Over the Horizon (OTH) Gold and Tactical Digital Information Link – Joint.  But WARSIM and others would like to see support for some of the ATCCS unique message protocols such as the Combat Service Support Control System (CSSCS) “USMTF Like” database updates and the Advanced Field Artillery Tactical Data System (AFATDS) – Remote Object (RO) messages.  Currently, each consortium member – as well as most of the Army’s other C4I Interface programs – must build “custom” message generators to handle these two messages formats.7.	ConclusionIn order to achieve interoperability between C4I systems and M&S systems, technology alone will not suffice.  There is a growing understanding and consensus that technological solutions (software and standards-based) are necessary but not sufficient to bring about interoperability between simulations and the C4I systems that they must interact with [10].As discussed in Hieb and Diem [10], to "solve" the M&S-to-C4I interoperability problem, there must be a solution that persists over the life cycle of both sets of systems.  This can only be accomplished by working on a number of tasks.There will no doubt be other requirements as the CMP, Army M&S, and ABCS continue to evolve.  In 2002 SIMCI OIPT SDT will examine interoperability through the use of the JCDB, which will increasingly become the major database for ABCS messages.  The strong teamwork and cooperation evinced this year by all the participants portends a strong relationship between the simulation and PEO-C3S community and continued progress on achieving “true” M&S-to-C4I interoperability.8.	AcknowledgmentsThe authors would like to thank Dr. Michael Hieb (AB Technologies/IITRI) and Mr. John Diem (Chief, National Simulation Center's Digital Integration Office at Fort Hood, Texas) for their assistance.  Thanks also to Mr. Ron Sprinkle (AEgis Technologies Group) who contributed the material for the description of the DII COE in Section 2 and Mr. Hank Rose (Computer Sciences Corporation), Mr. Gene Hardin (Coleman Research Corporation), and Ms. Susan Wright (Institute for Defense Analysis) for their feedback and assistance.References [1]	Anderson, J.R., Anderson, T., and Hardin, G.:  “The Tactical Simulation Interface Unit (TSIU) Program,” Paper 00F-SIW-046, 2000 Fall Simulation Interoperability Workshop, 2000. [2]	Brennan, J.M.: “The Army Experiment 4 Simulation to Army Battle Command System Experiments,” Paper 98S-SIW-002, 1998 Spring Simulation Interoperability Workshop, 1998. [3]	Buehler, K., Buehler, S., Hicks, E, McNeely, J., and Ressler, R.L., “Using the M&S/C4ISR Conceptual Reference Model as a Framework for Integrating DII COE Segments into C4ISR Stimulation,” Paper 01S-SIW-122, 2001 Spring Simulation Interoperability Workshop, 2001. [4]	Carr, F.H. and Hieb, M.R.: “Issues and Requirements for Future C4I and M&S Interoperability,” 7th Conference on Computer Generated Forces and Behavioral Representation, 1998. [5]	Defense Information Infrastructure Common Operating Environment (DII COE), Architecture Oversight Group (AOG) Charter, Defense Information Systems Agency, http://diicoe. disa.mil/coe/ aog_twg/aog/aog_page.html, January, 1997. [6]	Defense Information Infrastructure Common Operating Environment (DII COE), Message Processing Technical Working Group, Defense Information Systems Agency, October 1999.  HYPERLINK http://diicoe.disa.mil/coe/aog_twg/twg/mptwg/mptwg_page.html http://diicoe.disa.mil/coe/aog_twg/twg/mptwg/ mptwg_page.html, December 1999. [7]	Defense Information Infrastructure Common Operating Environment (DII COE) Message Processing Technical Working Group Software Requirements Specification (SRS), Defense Information Systems Agency,  HYPERLINK http://diicoe.disa.mil/coe/srs/srs_base_page.html. http://diicoe. disa.mil/coe/srs/srs_base_page.html., July 13, 1997. [8]	Defense Information Infrastructure Common Operating Environment (DII COE), Integration and Runtime Specification (I&RTS), Version 4.0, Defense Information Systems Agency;  HYPERLINK http://dod-ead.mont.disa.mil/cm/general.html http://dod-ead.mont.disa.mil/cm/general.html [9]	Hieb, M.R. and Diem, J.W.:  “Beyond Integration Standards:  The Elements of C4ISR to M&S Interoperability,” Paper 01E-SIW-068, Euro-Simulation Interoperability Workshop, 2001[10]	Hieb, M.R. and Sprinkle, R.:  “Simulation Infrastructure for the DII COE Architecture: The Army Vision,” Paper 00F-SIW-035, 2000 Fall Simulation Interoperability Workshop, 2000.[11]	Hieb, M.R. and Timian, D.H.:  “Using Army Force-on-Force Simulations to Stimulate C4I Systems for Testing and Experimentation,” Paper 1999 Command and Control Research and Technology Symposium, 1999.[12]	Hieb, M.R. and Blalock, J.:  “Data Alignment between Army C4I Databases and Army Simulations,” Paper 99S-SIW-034, 1999 Spring Simulation Interoperability Workshop, 1999.[13]	Hieb, M.R. and Staver, M.J.:  “The Army’s Approach to Modeling and Simulation Standards For C4I Interfaces,” Paper 98F-SIW-259, 1998 Fall Simulation Interoperability Workshop, 1998.[14]	Joint Technical Architecture, Versions 1.0, 2.0. 3.0, 3.1, and 4.0 draft 1, Defense Information Systems Agency, http://www-jta.itsi.disa.mil, 14 April 2000.[15]	Lightner, M., Schanduaa, J., Cutts, D., and Zeswitz, S.: “The High Level Architecture Command and Control Experiment Lessons Learned in Designing an Extended Federation,” Paper 98S-SIW-93, 1998 Spring Simulation Interoperability Workshop, 1998.[16]	Newcomb, M., Gustafson, J., and Nguyen, P.:  “The WARSIM C4I Interface,” Paper 99F-SIW-036, 1999 Fall Simulation Interoperability Workshop, 1999.[17]	Ogren, J.:  “Command and Staff Training and the Practical use of the HLA,” Paper 00F-SIW-061, 2000 Fall Simulation Interoperability Workshop, 2000.[18]	Paola, A.R. and Ressler, R.L.: “Stimulating the Army Tactical Command and Control System Using the Run Time Manager: Concepts and Implications,” Paper 99S-SIW-162, 1999 Spring Simulation Interoperability Workshop, 1999.[19]	Ressler, R.L., Hieb, M.R., and Sudnikovich, W.:  “M&S/C4ISR Conceptual Reference Model,” Paper 99F-SIW-60, 1999 Fall Simulation Interoperability Workshop, 1999.[20]	Timian, D.H., Hieb, M.R., Lacetera, J., Tolk, A., Whertman, C., and Brandt, K.:  “Report Out of the C4I Study Group,” Paper 00F-SIW-005, 2000 Fall Simulation Interoperability Workshop, 1999.[21]	Timian, D.H.; Hicks, M.W., and Hieb, M.R.:  “An Approach for Using DII COE Components to Link Simulations and C4I Systems:  A Case Study Using the CMP,” Paper 00F-SIW-011, 2000 Fall Simulation Interoperability Workshop, 2000.[22]	Timian, D.H., Hieb, M.R., Glass, J., and Staver, M.J.:  “Using Standard C4I Components to Interface to Simulations,” Paper 98F-SIW-035, 1999 Spring Simulation Interoperability Workshop, 1999.Author BiographiesDON TIMIAN is a Senior System Analyst at Logicon-Sterling Federal Systems Group.  Prior to joining Logicon, Mr. Timian served over 20 years in the United States Army.  While in the Army, he served as an Operations Research and Systems Analyst/Simulation Specialist in all three of the Army’s Modeling and Simulation (M&S) domains; Analytical Concepts and Requirements (ACR), Research Development and Acquisition (RDA), and Training Exercises Military Operations (TEMO).  Just prior to retiring, Mr. Timian was assigned as Deputy, Policy and Technology Division, Army Model and Simulation Office where he helped to develop a pair of prototype interfaces to link M&S and C4I systems via common C4I components.  Mr. Timian has a Bachelor of Arts degree in Chemistry from the University of Arizona and a Master of Science degree in Operations Research from Kansas State University.STEPHEN WHITSON is a Software Systems Engineer for the MITRE Corporation.  Mr. Whitson has been with the MITRE Corporation for over three years and is a member of the SIMCI OIPT Council of Architects.   Prior to working with the SIMCI OIPT, Mr. Whitson worked at MITRE’s Fort Huachuca, Arizona facility developing and integrating the network architecture for the First Digitized Division, as well as Enterprise Management solutions for the U.S. Army Forces Command Headquarters and its subordinate Directorate of Information Management. He now directly supports the Chief of the National Simulation Center’s Digital Integration Office at Fort Hood, Texas overseeing several M&S-to-C4I interoperability efforts.  Mr. Whitson is currently working on his Bachelor of Science degree in Computer Science from Tarleton State University.RICHARD HYDE is a Senior Systems Engineer with Logicon-Sterling Federal Systems Group.  He currently supports the SIMCI process as the facilitator for the SIMCI CMP SDT the WARSIM program by constant liaison with the Fort Hood Central Technical Support Facility.  He is retired from the United States Army where he served as an Armor Officer.  For the past seven years he has supported the Army’s digitization effort as a member of the Army Staff and as a military contractor at Fort Hood.  Mr. Hyde has a Bachelor of Science degree from the United States Military Academy and a Master of Arts degree in History from Cornell University.Figure 1. The DII COE ArchitectureITEM NOREQUIREMENT DESCRIPTION SRS PARA REFCOMMENTS7Need support for non-standard or invalid (e.g., simulation specific) messages and have it reconciled for Solaris and Windows OS.SRS:  3.3.18CMP does not handle alternate fields for USMTF Messages.  This makes constructing a code generator difficult . . . a manual process.SRS:  3.2.1.29CMP assumes all Bit Oriented Messages (BOM) start with a K, but FDL messages do not start with K, need support for messages other than K. SRS:  3.2.1.210Field area designator and message number can only take a certain range (0-10 for FAD and 1-25 for Msgnumbr). SRS:  3.2.2.1.2.411CMP is supposed to be able to determine the message standard when the message standard is not given, but the feature is not working (i.e., difference in USMTF 93 and 2000 format).SRS  3.2.3.8.312Implement the Java JDK 1.3 as soon as possibleSRS:  3.9.113CMP APIs need to have a return status to allow programs to know message status and exception handleing to notify the user.  Need to have this in both Java and C++SRS:  3.3.1 or 3.2.3.2.114CMP should provide the ability to create or parse a BOM without the 47001B (or any) header.SRS:  3.2.3.615CMP needs to document the API that is in their software that parses the header without parsing the entire message body.SRS:  3.3.1Table 2.  Proposed Changes to the CMP SRS (Table 2 of 2)Figure 5.  Conceptual SIMCI API to CMP