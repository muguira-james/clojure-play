Representation of Link 16 Communications in the Joint Distributed Engineering Plant (JDEP)  Zach FurnessDr. Judith DahmannThe MITRE Corporation7515 Colshire DriveMcLean, VA, 22102zfurness@mitre.orgjdahmann@mitre.org Keywords: JDEP, Link 16, TADIL-J, E2C, HWIL, SWIL, SIAP, HLAABSTRACT: The Joint Distributed Engineering Plant (JDEP) is supporting the Single Integrated Air Picture (SIAP) Systems Engineer through the development of federations of simulations and hardware-in-the-loop (HWIL) systems in order to address critical issues in engineering of system-of-systems.  An important component of these federations is the representation of the tactical data communications between systems.  Current representation of Link 16 in distributed simulations focuses on the passing of JTIDS messages between simulations – not in the representation of the underlying characteristics of the network itself.  This paper will outline the functional characteristics of Link 16 and identify some of the more important characteristics required for representation in SIAP analyses.  This paper will also review a recent SIAP-sponsored HWIL event, that highlighted the need for Link 16 network representation.  Finally, the paper will discuss the evolving  SISO Tactial Data Link (TDL) Product Development Group (PDG) Link 16 standard and its potential application to JDEP.1.  BackgroundThe Joint Distributed Engineering Plant (JDEP) is an OSD-sponsored program that provides capabilities for performing analysis, integration, and testing of systems-of-systems.  It does this through the development and application of simulation environments,  that combine both hardware-in-the-loop (HWIL) and software-in-the-loop (SWIL) components.  One of the primary motivations for its use is to improve the interoperability of service, joint, and multi-national systems prior to fielding [1,2].The initial focus of JDEP, upon its inception in 2000, was its application to Joint Theater Air and Missile Defense (JTAMD).  This was initiated to provide the basies for JDEP support across DoD mission areas.  Shortly after the program began, planning for a proof-of-concept event started in earnest featuring a series of existing Navy Distributed Engineering Plant (DEP) sites.  The customer for the event was the Single Integrated Air Picture (SIAP) System Engineer, (now the Joint Single Integrated Air Picture Systems Engineer), an organization created by the Joint Requirements Oversight Council (JROC) for addressing cross system engineering of the tactical air picture. SIAP partnered with JDEP to address critical issues in their block upgrade process. A series of "pilot" federation events were initiated during FY02 and are continuing during FY03 are underway during FY02 and 03 to address identify the sensitivity of the SIAP attributperformance metrics (also referred to as SIAP “attributes”)ed to biases in time synchronization and data registration. Three major sites are planned for these events:These events included   (1) the E2C test facility at Pax River, MD, in November of 2002, and will include (2) the Patriot test facility in Huntsville, AL, and (3) the Lockheed Martin AEGIS test facility in New Jersey during FY03. .  Each of these sites will conduct a pair of test events site will be configured to run both a  - first using HWIL-based event followed by components followed by a SWIL test - in order to validate that the SWIL environments have the requisite fidelity necessary.  This series of "pilot" events will culminate in a combined event which will federate the AEGIS, E-2C, and Patriot facilities.Representation of Tactical Data Link - J (TADIL-J, also commonly referred to as "Link 16") communications is an important component of the SIAP systems engineering process, since Link 16 provides a primary communications mechanism for exchange of air picture data [3].  SIAP experiments in areas like such as time synchronization and data registration require inclusion of a faithful representation of Link 16.  However, this representation must be flexible enough so that the impact of communications improvements can be observed in the air picture and captured in the SIAP attributes.this process but there is a need to investigate possible changes in the data exchange process itself as part of the SIAP analysis.In the initial SIAP JDEP federations, Link 16 message exchanges were represented in the same way theyit areis currently handled in other HWIL environments, with through the use of the terminal emulators.  The SPAWAR Gateway Terminal Emulators (GTE) is one of the more common JTIDS terminal emulators used today, and was selected to help demonstrate how existing components could be re-used within JDEP federations. o link the HWIL systems.  However, the requirements for higher fidelity representation of Link 16 in the SIAP pilot event could not be met by the GTE (or any existing JTIDS terminal emulator). (REUSE first) As will be discussed in this paper, issues with this approach arose in the initial pilot federation event andThis has motivated a re-examination of how to best support representation of Link 16, and communications systems in general, in JDEP.2.  JDEP and SIAP Link 16 RequirementsAs JDEP is a detailed, engineering-level simulation environment, meant to explore issues related to development and interoperability testing of systems, its requirements for communications fidelity are very high.  However, in many DoD simulation applications, the requirements for transmission of Link 16 data have focused more on the delivery of messages, rather than subjecting data transmissions to the complete set of possible delays and errors that may occur.  While such implementations have served the training community well, they are not appropriate for adoption in high-fidelity environments needed by the SIAP SE.In order to codify the requirements for Link 16 implementation in JDEP, a functional decomposition of Link 16 was conductedrecently initiated.  Such a conceptual analysis is part of the normal application of the Federation Development and Execution Process (FEDEP) one of the current set of simulation standards that JDEP has adopted [4].  Since the SIAP objectives could levy communications requirements for Link 16 that cannot be met by other current Link 16 implementations, this functional decomposition was is critical.  Also, since SIAPs area of interest includes the generation of the entire air picture, the decomposition was is not limited to the transmission medium alone , but also includesed the JTIDS interface terminal and the interfaces to the host mission computer.  Understanding the complete end-to-end set of processes in which data is passed from one host computer, across the network, to another host computer is essential to understanding what functionality is critical for representation in JDEP.  Figure 1 shows an overview of the major functional elements of the system.These functions that make up each of the subcomponents in Figure 1pictured above can be grouped into logical categories that can then be evaluated to see which functions are most critical for representation within JDEP.  Table 2 provides a description of the major functions that comprise the end-to-end picture above.Figure 1.  Overview of Major JTIDS Functional componentsTable 2.  Overview of Major End-to-End JTIDS Communications FunctionsFunctionIncludesDescriptionNet EntryCoarse SynchronizationDone to perform rough synchronization of time between JTIDS Units (JUs).Fine SynchronizationDone to refine the time synchronization between JUs.  Can be either active or passive.Net AccessDedicatedTransmission within time slot and net limited to single userContentionMultiple users attempt to access the same timeslotTime Slot Re-AllocationRe-allocation of time slots to users based on demandNet TopologyNetwork Participation GroupsDedicated time slots associated with operational functions (air control, surveillance, etc.)Stacked NetsDifferent nets associated with the same NPG that can operate within the same timeslot, by utilizing different frequency hopping patternsMulti-NettingDifferent nets associated with different NPGs that operate in the same timeslotRelayRelays information across two different netsData ForwardingForwards data from Link 16 network to a different tactical data link (e.g. Link 11)Transmission / ReceptionPowerPower required to transmit the waveformAntenna CharacteristicsNumber of antenna per platform and orientationNavigationRelative / Absolute NavigationRefinement of the positional accuracy of a platform based on receipt of Link 16 data from other platforms.Information ExchangesFixedJTIDS formatted messagesVariableVariable message formatFree Text / VoiceProvides for transmission of voice / teletype dataMessage FormattingData PackingFour types:  Standard Double Pulse (STDP), Packed 2 Single Pulse (P2SP), Packed 2 Double Pulse (P2DP), Packed 4 Single Pulse (P4SP)Error Detection EncodingBoth Reed Solomon (RS) and Cyclic Code Shift Keying (CCSK)EncryptionMessage Security (MSEC)External InterfacesMission Host Computer InterfaceExchange of Terminal Input Messages (TIM) and Terminal Output Messages (TOM).1553B or X.25 data exchanges3.  Overview of Link 16 Simulation ImplementationsThe majority of current Link 16 implementations have been done using either Distributed Interactive Simulation (DIS) or the Standard Interface for Multiple Platform Link Evaluation (SIMPLE).  DIS implementations are used in several real time training environments to include those at Theater Aerospace Command and Control Simulation Facility (TACCSF), at Kirtland AFB NM, and within the Air Force’s Distributed Mission Training (DMT) program.  SIMPLE is a NATO Standard Agreement (STANAG) that, which also uses DIS Protocol Data Units (PDUs) to exchange messages between terminal emulators.The problem with the current implementations is that they are largely focused on emulating the exchange ofpassing JTIDS messages between sender and receiver, and not on accurately portraying the aspects of the network itself.  Very few of the functional elements described in Table 2 are addressed in current implementations, including net entry, net access, topology, or navigation.  Only the information exchanges and transmission and reception aspects are typically highlighted.Over the last two years, SISO has sponsored a Tactical Data Link (TDL) Study Group (SG), and more recently a Product Development Group (PDG) that is developing a standard for Link 16 representation.  The motivation for the SG and PDG arose from the various many different implementations of Link 16 across within DoD and the lack of detail in representation of the networkLink 16. Theis PDG standard is addressing defining implementations in both in DIS and HLA [5].  The basis of the DIS portion of the standard consists of the sending of one Transmitter PDU (which contains information about the JTIDS waveform) and one Signal PDU (containing data about the actual JTIDS message itself).  In the HLA portion of the specification, these two PDUs have been translated into a set of HLA Interactions that form a Link 16 Base Object Model (BOM) [6].The draft version of standard addresses much of the missing functionality mentioned above.  In particular, the standard coversNet Entry Procedures (Passive Synchronization and Fine Synchronization)Segmenting of data into Net Participation Groups (NPGs)Time Slot Allocation (TSA)All JTIDS Message ExchangesWaveform / RF characteristicsEncryption, Transmission Security (TSEC) and Message Security (MSEC)The draft standard also calls for implementing multiple "Levels of Fidelity" to provide different capabilities, as appropriate” that would allow different users to access different portions of the standard, as appropriate.  In the lower fidelity modes, the focus is on exchange of JTIDS messages with no TSA, no Net Entry, and noor encryption are performed.  In the higher fidelity modes functions such as TSA, Net Entry/ Synchronization, and Encryption are supported.One of the functions still under discussion is the representation of navigation.  There is no implementation of navigation within the current DIS implementation - a significant shortcoming.  This capability is planned to be addressed, prior to release of the final version of the PDG standard.4.  E2C HWIL Pilot EventIn November of 2002, the SIAP SE sponsored a JDEP pilot event with the objective of characterizing the sensitivity of the E-2C air picture (as displayed on its onboard mission computer) to biases in time synchronization and data registration [7].  This event would be performed using an hardware-in-the-loop (HWIL) environment, composed of the actual E2C Mission Computer (MC) driven by a set of inputs simulatinged radar, sensor, and tactical data messages.  Figure 2 shows the overall test configurationFigure 2.  E2C HWIL Test Configuration [8]In order to generate appropriate stimulus to the E2C Mission Computermission computer, several inputs are required.  First, a set of tracks, derived from the E2C's own onboard rRadar and sSensor systems must be supplied to the mission computer.  Secondly, a set of tracks that would normally be transmitted by other E2C or surveillance aircraft, in the form of Link 16 messages, must be supplied so that the MC can perform the appropriate correlation functions as it normally would.  Next, information about the E2C's platform position (usually provided via an onboard inertial navigation system or GPS) must be provided to the MC.   Finally, identification friend or foe (IFF) data also needs to be directed into the MC to augment the correlation functions.  The configuration of elements in Figure 2 provides such an environment through the use of the following components:Common Reference Scenario Driver (CRSD).  The CRSD is responsible for providing all platform updates across the RTI.IFF Response Server.  The IFF Response Server provides appropriate IFF responses for friendly aircraft, based on interrogations by the onboard E2C Mission Computer.E2C Mission Computer.  This is a version of the actual Advanced Control Indicator Set (ACIS) display terminal and mMission cComputer (MC) that resides on most of the E2C aircraft currently in operation.  The MC correlates track data received from its own generic sensors and other reporting platforms and provides this correlated picture to the terminal display.Utility Player (DLSPlayer / Dual Link System (DLS)).  The DLSA Northrup Grummand Information Technology (NGIT) product that provides remote tracks from simulated friendly platforms participating in the scenario.  It generates Link 16 formatted messages that are passed to the E2C MC, as if it were received from actual live reporting platforms.Gateway Terminal Emulator (GTE).  The GTE is a component developed by SPAWAR Systems Command (SSC), San Diego, that acts as a JTIDS terminal emulator.  It's primary function is to interface directly with the E2C MC via a 1553B BUS and emulate the functions that would normally be provided by a JTIDS terminal operating over the actual Link 16 network.  It sends and receives data with the other GTE, attached to the DLS, using the SIMPLE protocol.HlaResults.  A Virtual Technology Corporation (VTC) product that provides data logging capability for all data transactions that pass over the RTI.4.1  Time SynchronizationAs mentioned above, one of the objectives of the E2C HWIL was to examine sensitivity of the E2C MC to biases introduced in time synchronization and data registration.  Each MC on an E2C maintains its own time reference, which can be synchronized with other MCs using the Link 16 network.   Failure to maintain synchronization can potentially If the MCs fail to maintain synchronization, this could potentially introducelead to inconsistencies in the air picture shown on the E2C display.During execution of the event, time offsets where introduced into the E2C MC that forced the MC to run at different times (both ahead and behind) of the Utility Player.  The hypothesis of the experiment was that such synchronization errors would have no impact on the correlated air picture, as air track messages being passed across the network (JTIDS 3.2 messages) have no time stamp associated with them.  This was indeed observed during the event.Figure 3.  Time Synchronization Experiment [8]4.2  Data RegistrationThe second experiment performed involved the generation of geodetic and sensor biases to examine the corresponding impact on the air picture.  The term "data registration" refers to the condition in which there is correct geodetic alignment between local and remote track positions.  There are four categories of data registration, two of which were to be examined during the E2C HWIL event:  Sensor measurement and alignment and geodetic navigation position [7]. In order for the MC to implement data registration, a geodetic correction must be provided to the MC which is normally provided from the JTIDS terminal (in the case of the E2C HWIL it is provided by the GTE).  During normal operations, this geodetic correction is calculated by the JTIDS terminal using received Precise Position Location Information (PPLI) messages sent by other aircraft over Link 16.  By using time-of-arrival (TOA) information, the JTIDS terminal can refine its own position estimate and forward this to the MC as part of the data registration process.  If the platform uses this information to update its relative position to the other aircraft JTIDS units on the network, this process is also referred to as "relative navigation" (RELNAV).Figure 4.  Data Registration Experiment [8]For the purposes of running the HWIL event, the major functions that had to be represented, relative to Link 16, were (1) the exchange of JTIDS 3.2 messages (air track) and JTIDS 2.20 messages (PPLI) between the Utility Player and the E2C MC and (2) tThe emulation of the RELNAV functions of Link 16, in order to trigger data registration within the E2C MC.  The first of these functions was successfully provided by the configuration.  However, initially initial attempts to performthe data registration was were not successfulable to be conducted because the GTE does not portray the RELNAV functions of the JTIDS terminal.  The GTE currently only represents the platform position provided by the MC and not the one derived from receipt of PPLI messages via the Utility Player.  was receiving “perfect” position updates from the Utility Player since no TOA delays where being introduced to trigger the RELNAV functions that would normally be associated with a Link 16 netwoSince there was no difference that ever arose between these two reported positions, there was no geodetic correction sent to the MC from the GTErk.  Without this, the impact of the introduction of navigational biases into the MC could not be evaluated.  A workaround eventually allowed data registration to occur within the MC, but the problem highlights the need for improved representation of Link 16 network behavior in JDEP / SIAP federations.5. Infrastructure Build Given the planned multiple series of SIAP events, and the potential for different implementations in each, a common, configuration- managed test bedenvironment is required where excursions can be performed to support these events.  The A JDEP Infrastructure Build is being created that Test Bed, will provide such an environment by allowing commercial vendors to come in and test potential Link 16 federates and identify issues in performance and scalability of the federation. Such testing is often difficult to conduct at a test event, given time limitations due to scheduling of competing events.  The Infrastructure Build Test Bed will contain representations of all the major functions required by SIAP (sensors, communications, mission computers, etc.), so that a subset of its components could be used in specific SIAP events.  However, it is also a place where the JDEP Reference Implementation and Reference Federation Object Model (FOM) would will be maintained and where any changes implemented in SIAP other events could be rolled into the baseline to ensure that configuration management is maintained.Figure 5.  Notional Infrastructure BuildThe nature of JDEP applications places a high degree of emphasis on the modularity of the Infrastructure Build.  Because of the desire to modify characteristics of the sensors, communication terminals, mission computers, or other components it is important that these be decomposed into constituent federates, to the largest extent possible.  This will enable vendors to integrate federates that comprise a single functional element (new radar, new host computer, new communications terminal, etc.) without having to make modifications to multiple larger simulation componentsfederates. Since some of these applications are intended to be simulation representations of new systems, and not current HWIL implementations, it makes sense to build interfaces for these applications directly into to the simulation infrastructure.  For example, rather than developing a new mission computer simulation that interfaces through the GTE, it may be desirable to experiment with such as application without going through the GTE.6.  Link 16 Implementation in Infrastructure BuildAs shown in In Figure 5, the communications server will provides the majority of Link 16 functionality to in the Reference ImplementationInfrastructure Build.   Since is to become its own federate in the Infrastructure Build Test Bed, the means separating the functions associated with the host mission computerIt will contain representation of both the , JTIDS terminal and the Link 16 network at a , and other environmental effects (propagation) at a minimum.  Thiese means thatwill require representation ofof the key data  TIM/TOM message exchanges between exchanged between the MCP and terminal will need to be represented within the Federation Object Model (FOM).Since the Infrastructure Build will be tailored for a variety of SIAP events, it must also include ways for dealing with both HWIL and SWIL communications interfaces. This will require developing a capability to allow HWIL components to interface to the infrastructure, as well as simulations.  This notion is captured in Figure 6, which is a more detailed picture of the communications functionality in the ReferenceInfrastructure Build Implementation and shows the added “HWIL Comm Interface..”  Figure 6 also shows a notional data flow between federates that would include exchanges interactions that mimic the “TIM/TOM-like” data exchanges seen between MC and JTIDS terminal (TIM/TOM), as well as important portions of Link 16 messages “Link 16 message-like” exchanges that might are exchangedoccur between other federates.  The idea is not to strictly encapsulate the data that is actually exchanged between real components, but to represent those exchanges.  It is hoped that this will allow the FOM to adapt to different host-terminal pairings and new communications representations. Figure 6.  Notional CommsComms Portion in Infrastructure Buildof Reference ImplementationThe HWIL requirements in the Infrastructure Build would still be satisfied by a terminal emulator (GTE or other similar component).  One possibility for the HWIL communications interface is to maintain the GTEs, but insert a translator in the loop that converts the SIMPLE protocol to HLA.  A mapping between the Link 16 SISO Standard and the SIMPLE Protocol is given in  [10].  This reference presentation shows how elements within the SIMPLE protocol could be mapped to the PDU structures within the SISO Standard.  Carrying this through to the HLA BOM formulation, there appears to be amay be a straight-forward mechanism way offor implementing creating a SIMPLE-HLA translatranslatortion.  One of the first communications simulations that will be introduced into the Infrastructure Build will be the Electronic System Command (ESC) Air Defense Simulation (ADSIM). ADSIM is a MITRE-developed simulation that represents the engineering details of tactical datalinks, sensors, and trackers in theater air defense operations.  It has been used to support a number of studies for sponsors such as the Ballistic Missile Defense Agency (BMDO), SIAP, and Joint Strike Fighter (JSF) Joint Program Office (JPO) [9].  ADSIM represents not onlyboth the details of Link 16 and the JTIDS/MIDS terminal, but also the host air platform systems.  As ADSIM is already HLA compliant, it was felt that modifications to integrate it into the E2C test environment would be manageable.It is unclear at present how well the SISO Link 16 Standard could support the JDEP Reference Infrastructure Build and Reference Implementation.  Certainly, the representation inclusion of additional Link 16 functions in the standard is of more of the Link 16 network functions could be useful, but the draft standard still does not atpresent lack of present address RELNAV, must at a minimum, be addressed.  Also, the HLA portion of the draft standard is in large part a mapping of the DIS implementation into an HLA FOM, (with HLA interactions associated with the Transmit and Signal PDUs).  While there is nothing inherently wrong with such an implementationapproach, there may bethe use of HLA functionality not found in DIS that could improve the representation.  For example, the use of data distribution management (DDM) could be used to handle routing of messages across different NPGs operating in the same timeslot and thewithout broadcasting to every member of a DIS network. Ttime management functions might provide the capability for preserving event-ordering  (in non-realtime applicationsimplementations).  The introduction of JTIDS equipment objects and attributes that could be owned and updated by multiple federates could enhance the representation of terminal effects.  The lessons learned from the Infrastructure Build Test Bed should help in the refinement of the SISO Link 16 standard.76.  Future SIAP EventsAs mentioned earlier, the SIAP SE will require Link 16 representation in several other events.  Among the events planned for FY03 are  an HWIL event using the Army’s Patriot Air Defense system in Huntsville, AL and an Aegis HWIL event in New Jersey.  Both Patriot and Aegis utilize the Link 16 network to exchange data in the development of their air air picture, so there will be a similar emphasis on representation of Link 16 in both those these events.  Later in FY03, there is a planned “combined” event that will look at issues when all three platforms (E2C, Aegis, and Patriot) are operating together over the same network.While Link 16 will be required for representation in each of the events above, the level of fidelity required will vary from event to event.  For example, as the Patriot is a stationary ground-based system, there is not updating of is geodetic position within the JTIDS terminal and there is no RELNAV functionality required to emulate within the simulation.  Also, the JTIDS terminal interfaces differ from host to host, so the same set of TIM/TOM messages implemented in E2C will not be the same in Patriot or Aegis (in fact, Patriot uses an X.25 variant as its interface spec).  The message buffering schemes between host and terminal also differ between these systems - some employing a "dumb" scheme that simply forwards the message to terminal when ready, while others employ a "smart" algorithm that anticipates the upcoming time slot on the network and forwards data accordingly.  In the combined event, the Aegis, Patriot, and E2C platforms may not be operating within the same NPGs, so the portrayal of multi-netting may become important.  All of these differences will have to be well understood, prior to employing simulation capabilities to represent these functions within JDEP.87.  SummaryThe implementation of a high-fidelity, tailorable, and extensible representation of the Link 16 tactical data link is essential for support to the SIAP SE, and future JDEP applications.  The use of the FEDEP is helping to gain a better understanding of the most important Link 16 functions, and how they related to SIAP analysis objectives.  Several Link 16 functions that appear to beare  of interest for JDEP // SIAP representation include navigation and host-JTIDS terminal interface functions – neither of these are  is currently represented in any distributed Link 16 implementation.  The Infrastructure Build Test Bed should provide an opportunity to refine a common, configuration- managed implementation of Link 16 for JDEP federations that can be used across multiple SIAP eventsmultiple future users.  It is also hoped that the lessons learned through the Infrastructure Build Test Bed will be able to feed the development of the HLA-portion of the Link 16 standard, currently under development by the SISO TDL PDG.98.  References[1]	 Dahmann, J., Crisp, M, "Joint Distributed Engineering Plant Next Generation Infrastructure for Network Centric Systems Engineering and Test", ITEA Workshop, September 2002.[2]	 Dahmann, J.,  and Clarke, R., "Joint Distributed Engineering Plant Technical Frameworkk:  :Applying Industry Standards to System--of--System Federations for Interoperability", Fall SIW, Orlando, FL, September 2002.,[3] Giaquinto, J., Barto, J, "Single Integrated Air Picture, System Engineering Task Force Analysis:   People, Tools, and Processes", Sping SIW, March 2002.[4]	 IEEE P1516.3™, "Recommended Practice for High Level Architecture (HLA) Federation Development and Execution Process (FEDEP)," (In Ballot)Federation Development and Execution Process (FEDEP).[5]  Burroughs, A., Sorroche, J., Barrett, N., Byers, R., Butterfield, R., Shanks, G., "Tactical Digital Information Link - Technical Advise and Lexicon for Enabling Simulations (TADIL-TALES)", Paper 02F-SIW-119, Fall Simulation Interoperability Workshop (SIW), Orlando, FL, September 2002.[6]	 Shanks, G., "High Level Architecture FOM Proposal for TADIL J (Link 16) Simulation", Paper 02F-SIW-120, Fall Simulation Interoperability Workshop (SIW), Orlando, FL, September 2002. [7]	  SIAP System Engineering Task Force (SE TF).  SIAP JDEP Federation E-2C Pilot Test Plan, September 20022., [8]	  Talbot, J., Rock, M., Rieffer, A., SIAP SE TF E2C JDEP Pilot Event (Briefing), 14 November 2002, Pax River, MD [9]	 USAF Electronics Systems Center, Enterprise Integration Office (ESC/CXC), "Air Defense Simulation (ADSIM) Overview (Briefing)", December 2002 (Briefing).[10]	 Snape, R., Burroughs, A., “Enabling Interoperability:  SIMPLE to DIS-J”, Paper 03S-SIW-79, Spring 2003 SIW, March 31-April 4, Orlando, FL9.  Author BiographiesZach FurnessZACH FURNESS is an Associate Department Head at the MITRE Corporation and technical lead supporting the C4I-Simulation Interoperability program at the Defense Modeling and Simulation Office (DMSO).  Since 2000, he has helped to develop automated capabilities for initializing simulations directly from C4I systems such as GCCS and worked to integrate M&S functions into the DII COE. Prior to supporting DMSO, Mr. Furness led the MITRE Systems Engineering team that supported the development, integration, and testing of the Joint Training Confederation (JTC).  Since joining MITRE in 1990, Mr. Furness has worked on a variety of M&S projects related to the application of simulation in the training, analysis, and acquisition of C4ISR systems and has published numerous papers on the subject.  He holds an MS in Electrical Engineering and BS in Physics, both from Virginia Tech.Dr. Judith DahmannDR. JUDITH DAHMANN is a principal senior scientist at the MITRE Corporation and the Scientific Advisor to Dr. Garber, Director of Interoperability for the US Under Secretary of Defense for Acquisition, TechnologyUSD AT&L and Logistics.  In this capacity, Dr. Dahmann provides technical review, assessment and recommendations on interoperability plans, issues and initiatives, including the application of emerging commercial technologies throughout the system acquisition cycle.   Dr. Dahmann is also participating in the technical development of a DOD enterprise infrastructure initiative to support creation of distributed system- of- system federations with simulation, hardware-in-the-loop and live systems to support integration and test throughout the life cycle. Prior to this, Dr. Dahmann was the Chief Scientist for the Defense Modeling and Simulation OfficeDMSO for the US Director of Defense ResearchDDR&E and Engineering, a position she held from 1995 to April 2000.  In her role as Chief Scientist, Dr. Dahmann led the development of the High Level ArchitectureHLA, a  general-purpose software architecture for the development and interoperation of simulations, now an IEEE Standard (IEEE 1516)..