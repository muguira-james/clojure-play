The Kadena Instrumented Training System (KITS) and the Distributed Interactive Simulation (DIS) ProtocolsJoseph J. TestaJohn F. Fay, Ph.D.Patrick N. Carlton, Ph.D.Sverdrup Technology/TEAS GroupP.O. Box 1935Eglin AFB, FL 32542-5000850-678-2001 HYPERLINK "mailto:joseph.testa@eglin.af.mil" joseph.testa@eglin.af.mil HYPERLINK "mailto:john.fay@eglin.af.mil" john.fay@eglin.af.mil HYPERLINK "mailto:pat.carlton@eglin.af.mil" pat.carlton@eglin.af.milKeywords:Air Combat Training System (ACTS), Distributed Interactive Simulation (DIS)ABSTRACT: The Kadena Instrumented Training System (KITS) is a rangeless air combat training system that allows real-time execution of air-to-air missile simulations for fighter aircraft.  KITS employs airborne instrumentation contained in an AIM-9 missile shell carried on participant aircraft.  The KITS airborne instrumentation pods communicate with each other via a data link that exchanges data packets that are termed Protocol Data Units (PDUs) of the Distributed Interactive Simulation (DIS) paradigm.  There are differences between the KITS PDU paradigm and the DIS standard.  This paper explores these differences and the reasons behind them.1.  IntroductionThe Kadena Instrumented Training System (KITS) [1] is a set of devices that allow pilots to practice air combat skills while flying real aircraft.  Its airborne component consists of a set of electronics pods that can communicate with each other using radio links.  These pods are called Kadena Airborne Instrumentation (KAI) pods.  The system also contains a ground station at which the crews plan their missions beforehand and evaluate the missions afterwards.  Data is transferred between the pods and the ground station by means of data transfer devices such as data cartridges.The airborne pods communicate with each other using a protocol that borrows heavily from the Distributed Interactive Simulation (DIS) protocols [2].  The interface specification states that it is “based on unique applications of IEEE 1278.1995, Distributed Interactive Simulation (DIS) Standard (sic).”  There are several differences between the KITS standards and the DIS protocols.  Some of these differences are driven by the specific KITS application while others may apply to DIS simulations in general.2.  Differences Between KITS and DIS2.1  Time Division MultiplexingThe players in a KITS exercise broadcast their state in a time-division multiplexed fashion.  The aircraft states are updated at a usual rate of 1 Hz, although the rate is a variable and can be adjusted as a function of the number of aircraft.  Before the exercise begins, each KAI pod is assigned a 10-millisecond window within the update interval in which it is to broadcast its information.  The current upper limit on the number of players in a KITS exercise is 72.  While this is plainly inappropriate for DIS exercises in general, it makes sense for a structure such as the KITS.2.2  Aircraft State Update RateThe DIS protocols specify dead reckoning algorithms for entity position, velocity, and orientation.  When the entity’s actual state has diverged enough from its dead-reckoned state, the simulation broadcasts an update to the other simulations in the exercise.  Additionally, entity states are broadcast in a “heartbeat” every ten seconds.In contrast, in a KITS exercise the players broadcast their state at a constant rate of 1 Hz as described earlier.  In a large DIS exercise this would flood the network, but for a KITS exercise it is appropriate.2.3  Weapon DetonationIn a KITS exercise, when an aircraft fires a weapon at another aircraft the weapon trajectory is simulated by the KAI pod on the launching aircraft.  Under DIS, the weapon trajectory may be simulated by any of a variety of players.  When the weapon detonates, the KAI pod sends a detonation PDU that contains the identity of the target aircraft.  On receiving this PDU the target aircraft knows that it has been killed by the detonation.  The DIS specification, in contrast, requires that the detonation PDU tell the position and type of the detonation.  Damage or kill assessments are made by the target aircraft.The KITS developers implemented the detonation PDU protocol in this non-DIS-compliant way because of security concerns.  The lethal radius of many weapons is sensitive or classified information; using the DIS protocol would require the network to be encrypted.  This is an issue that the larger DIS community may wish to address.2.4  Time Stamp FormatThe header of every PDU contains a time stamp.  Under the DIS specification, this time stamp contains the “units of time passed since the beginning of the current hour.”  The least significant bit contains a one if the time stamp is absolute and a zero if it is relative.The KITS specification also uses a time stamp, but its format differs from that of the DIS time stamp.  The KITS time stamps are specified to contain the number of milliseconds since the start of the year, scaled by a factor of ten.  In effect, they contain the time since the beginning of the year in units of a hundredth of a second.The DIS specification does not specify how simulations are to use its time stamp.  It is possible for them simply to ignore it entirely.  Since the quantity is relative to the start of the current hour, the DIS specification implicitly assumes that network latencies will be less (and, one would hope, significantly less) than an hour so that there is no ambiguity over which hour the PDU is relative to.KITS does not allow for the possibility of a relative time stamp.  This stems from the fact that the zero point of the time stamp needs to be sent out in a different type of PDU that the KITS system does not support.  Additionally, the KITS time stamp has the advantage of making the PDU self-contained in that one can tell unambiguously what time it was sent without having to refer to the larger exercise as a whole.2.5  Sub-Protocol FieldThe KITS PDUs contain a sub-protocol field of the PDU header.  While the 1995 version of DIS does not contain this field (the bits in the header are padding and unused), the 1998 version of DIS [3] does contain this field.  The KITS PDUs form a backward-compatible extension to both the 1995 and the 1998 DIS PDUs in this matter.The 1998 DIS specification reserves a value of zero for the sub-protocol to mean that the rest of the PDU will be interpreted according to the DIS standard.  The KITS field supports this specification and adds a new enumerated value to mean interpretation by a different sub-protocol.  This sort of extension to DIS is probably exactly what the designers of this field had in mind when this part of the specification was generated.2.6  Aircraft State UpdatesIn a KITS exercise, each aircraft sends its state updates by means of a TSPI PDU.  This sort of PDU is not found in the 1995 version of DIS, although (as with the sub-protocol field) the 1998 version of DIS includes this.  According to the 1995 DIS, the aircraft state is to be updated by means of an Entity State PDU.3.  Suggested Changes to the DIS ProtocolsOne of the changes listed in Section 2 merits discussion by the DIS community as a whole.  This change is the option in the Weapon Detonation PDU for the sending entity to include simply the identity of the target and a notice that the target has been damaged or destroyed.  This will ease the security concerns of exercise managers.A second change, the additional enumeration value in the sub-protocol field, shows the wisdom of the DIS designers in making the specification extendable.  Without something like this, the KITS designers would have been forced to make additional changes to the DIS specification with the attendant extra work and chances for error.4.  Summary and ConclusionsThe Kadena Instrumented Training System is an excellent example of a system which, while not compliant with the Distributed Interactive Simulation protocols, has benefited greatly from these protocols.  The KITS developers have taken those parts of DIS that suit their needs and have modified or omitted the rest.  The result is a system that, while not completely DIS-compliant, has avoided considerable duplication of effort by building on the work that went into DIS.Some of the changes required for the KITS protocols point to possible or actual changes in the DIS specification.  Two of the changes, the TSPI PDU and the Sub-Protocol field, were recognized several years ago as being necessary for DIS and were implemented in later versions of the protocol.  Another change, the detonation PDU, has not been implemented by DIS and should be considered.  Finally, three other changes (the time division multiplexing, the update rate, and the time stamp format) apply specifically to the KITS environment and are not extensible to the larger DIS community.AcknowledgementThis work was performed in support of the Next Generation Range Instrumentation Program Office (AAC/YBR) under Air Force Contract F08635-01-C-0002.  Inquiries concerning this work should be forwarded to AAC/YBR, Building 11, Eglin Air Force Base, FL 32542.5.  References[1]	“Subsystem Design Analysis Report, Interface Control Descriptions for Common Modular Pod (CMP),” Cubic Defense Systems, Inc., San Diego, CA 92123, Document Number ICD801500B, 11 January 1999.[2]	“IEEE Std 1278.1-1995, IEEE Standard for Distributed Interactive Simulation – Application Protocols,” IEEE, Inc., 345 East 47th Street, New York, NY 10017-2394, 21 September 1995. [3]	“IEEE Std 1278.1a-1998, IEEE Standard for Distributed Interactive Simulation – Application Protocols,” IEEE, Inc., 345 East 47th Street, New York, NY 10017-2394, 19 March 1998. Author BiographiesJOSEPH J. TESTA is a Principal Engineer at Jacobs Engineering/Sverdrup Technology, Inc. at Eglin Air Force Base, Florida.  He is the Technical Engineering Acquisition Support (TEAS) Deputy Director for engineering support to the Range Instrumentation and Aerial Target System Program Offices responsible for the procurement of Air Force test, training, and aerial target systems.  He has 16 years systems engineering experience and 20 years of USMC tactical flying experience in the F-4 Phantom.  He earned the B. S. in Physics at Glassboro State College.JOHN F. FAY earned the Ph. D. in 1984 from Princeton University and is presently a Technical Fellow with Sverdrup Technology / TEAS Group.  His fields of expertise include modeling and simulation, aerodynamics, computational fluid dynamics, penetration modeling, and applied mathematics.PATRICK N. CARLTON earned the Ph. D. in physics at the University of Florida and is presently a Systems Engineer with the Orion International Technology, Inc. TEAS Group.  He has worked in academia and for the Navy and Air Force, and industry on a variety of Army, Navy, Marine Corps, and Air Force programs.  He is presently working on the Next Generation Range Instrumentation (NEXRI) program.DRAFT