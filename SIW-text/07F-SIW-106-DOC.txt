Managing Simulation to C4I Entity Mappings by Standard CompositionsKevin GuptonBruce CarltonCarolyn HareGary FarmerSignal and Information Sciences LaboratoryApplied Research LaboratoriesThe University of Texas at Austin10,000 Burnet RdAustin TX 78758-4423 HYPERLINK "mailto:kgupton@arlut.utexas.edu" kgupton@arlut.utexas.edu,  HYPERLINK "mailto:bcarlton@arlut.utexas.edu" bcarlton@arlut.utexas.edu,  HYPERLINK "mailto:hare@arlut.utexas.edu" hare@arlut.utexas.edu,  HYPERLINK "mailto:farmer@arlut.utexas.edu" farmer@arlut.utexas.eduKeywords: C4ISR, Compositions, DIS Enumeration, Entity-Types, JC3IEDM, JCATS, National Stock Number, XMLABSTRACT: A prime component in achieving interoperability between C4I systems and simulations has been resolving the misalignment of concept models and representations between the two communities.  The paradigms by which each C4I system and simulation represent equipment and modeled entities has been particularly challenging, the problem arising most prominently in attempts to use C4I source data in preparation of data products for initialization of simulations.  Simulations used in conjunction with live C4I systems need to know the “ground truth” configuration of the live entities to achieve a consistent common operating picture.  Simulations utilize common entity representations such as DIS Enumerations.  C4I systems represent equipment items—and thus, entities relevant to simulations—in terms of basic piece items identified by a National Stock Number (NSN) or something similar.If the process of initializing simulations with “ground truth” entities is to be automated and generalized to operate “on the fly,” the problem of mapping source data representations (e.g., NSNs) to simulation-specific representations (e.g., DIS enumerations) must be addressed rigorously.  The current process of defining entities by their types within a simulation is a manual one, whereby a human operator performs the deduction of appropriate entity-type, introducing errors, subjectivity, and time costs.Rather than directly proposing a strict set of mappings that an organization employing DIS enumerations might be required to follow, we propose an architectural framework for representing and managing NSN-to-DIS enumerations.  Borrowing from the OBJECT-ITEM-ESTABLISHMENT structure of the JC3IEDM, we developed data models and mapping management software with which mappings can be defined and managed by a human operator.  Mappings are formed by decomposing entity-types (DIS enumerations) into a data graph, or “composition,” of primitive equipment types identified by their NSNs.  Compositions are typically defined to be a primary equipment item (e.g., vehicle or aircraft) potentially containing additional, nonstandard equipment items (e.g., weapons or sensors).  Mapping interpretation software libraries have been built to autonomously perform the translation of source data into the simulation-specific entity-types.  Mappings are used as a sort of inclusion filter by which entities in C4I data may be sieved and classified based on well-defined rules and structures.  Situations where multiple equipment NSNs might map into a single entity-type are handled through use of substitution groups that might be defined as part of the mappings.This approach has been demonstrated to be very successful in automating the translation process.  Not only have the mappings shown potential savings in data preparation time, but also the architecture described here produces an adaptable and modifiable mapping definition.  Since the mappings vary between organizations and the mappings thus far have not been well defined, this adaptability has been crucial as the understanding of the manual translation process has evolved.  Mappings can solidify from “best fit” approximations into strictly enforced definitions.  This solution can be adapted or generalized for any source data with some representation other than NSNs and any federation with some entity representation other than DIS enumerations.  On a broader scale, this architectural framework lays the foundation for standardizing these mappings across multiple simulations, federations, and simulation sites, contributing to the interoperability of C4I systems, JC3IEDM, and simulation entity models such as DIS.IntroductionNet-centric warfare requires interoperability between digital C4ISR systems and a federation of simulations for mission planning, course of action (COA) analysis, mission rehearsal, training, testing, and experimentation.  These different operations involve C4I systems interfacing with live, virtual, and constructive (LVC) simulations.  The level of required interoperability between disparate C4I systems and disparate federations of simulations ranges from the system level down to the individual data element level.  Scenario-specific or exercise-specific data must be synchronized between the C4I systems and the federation of simulations before the start of the exercise or event.A typical scenario involves Command Posts (CPs) and Tactical Operations Centers (TOCs) with live manned C4I systems interfacing with LVC simulations.  Operations may range from brigade to fire team level.  Entity-level simulations represent units, platforms (vehicles, aircraft, ships, etc.), systems (weapons, sensors, C2 systems, communications, etc.), other simulation-relevant equipment, and personnel (human life forms).  For mission planning, COA analysis, mission rehearsal, and training purposes, the force structure of friendly units must accurately represent the platforms, systems, equipment, and personnel actually on hand in the units, across both the live C4I systems and the simulations.  This force structure data must also be accurately aggregated and disaggregated between different C4I systems and different simulation systems.  For example, this force structure may be represented in two ways:  1) within a multi-resolution federation including both the aggregate-level Joint Theater Level Simulation (JTLS) and entity-level Joint Conflict and Tactical Simulation (JCATS) and 2) within US Army C4I systems at different levels of aggregation from GCCS-A, to MCS, to FBCB2/BFT (individual platform), to Land Warrior (individual soldier).Entity-Type Definition and RepresentationEntity-level simulation systems define entities or platforms as a base entity (such as a wheel vehicle, a track vehicle, or an aircraft) with certain weapon systems, sensors, and other simulation-relevant equipment mounted on or associated with the base entity.  Each of these defined composite entity-types includes certain associated characteristics and performance attributes, such as capability, lethality, vulnerability, etc.  The Distributed Interactive Simulation (DIS) protocol uses DIS enumerations to define a platform and life form entity-type.  Each DIS enumeration entity-type is defined by a unique seven-field code:Entity Kind (platform, life form, etc.)DomainCountryCategorySubcategorySpecificExtra REF _Ref175474694 \h Table 1 is an excerpt from the standard DIS Enumerations (SISO-REF-010-2006) for a US M1 Abrams tank. SHAPE  \* MERGEFORMAT Note that the entity-type representation can range from a generic “M1 Abrams” (Scat) tank to different specific models of the M1 Abrams such as M1A2 and M1A1D (Specific).  Each model may include different weapon systems, sensors, and other simulation-relevant equipment mounted on or associated with the entity.  Each unique DIS enumeration represents an entity-type with different characteristics and performance attributes, capability, lethality, vulnerability, etc. [1]. REF _Ref175372836 \h Table 2 above presents an excerpt from the standard DIS Enumerations for a US HMMWV, which include many different models, weapon systems, sensors, levels of protection (armor), and other simulation-relevant equipment that is mounted on the HMMWV.All U.S. human life forms have a Kind field value of 3 (Life Form) and a Country field value of 225 (US).  Human life forms include the following Category types:Dismounted InfantryCivilianParachutistSwimmerDiverAstronautOne or more different types of weapons (pistol, rifle, grenades, launchers, etc.) can be associated with a particular human life form type.  For example, the following are the codes for US life forms carrying rifles:17	Advanced Combat Rifle 5.56-mm, AAI18	Commando assault rifle, Model 733 5.56-mm, Colt19	Infantry rifle, Mini-14/20 GB 5.56-mm, Ruger20	Mini-14 5.56-mm, Ruger21	Mini Thirty 7.62-mm, Ruger22	Semi-automatic model 82A2 .50, Barrett23	Sniper Weapon System M24 7.62-mm24	Sniping rifle M21, Springfield Armory25	Sniping rifle M40A1 7.62-mm26	Sniping rifle M600 7.62-mm27	AR-15 (M16) 5.56-mm28	M1 .3029	M14 7.62-mm, NATO30	M14 (M1A, M1A1-A1), Springfield Armory31	M14K assault rifle, LaFrance32	M16A2 assault rifle 5.56-mm, Colt33	M21 7.62-mm, U.S.34	M77 Mark II 5.56-mm, Ruger35	M77V 7.62-mm, Ruger36	S-16 7.62 x 36-mm, Grendel37	SAR-8 7.62-mm38	SAR-4800 7.62-mmStandard Entity-Type DefinitionThe entity-level simulation JCATS has the capability to represent any operator-defined entity-type, including the capability to define characteristics and performance attributes, munitions for each weapon system type, capability, lethality, vulnerability, etc.  A recent U.S. Joint Forces Command (USJFCOM) initiative defines a standard set of entity-types and associated entity data attributes, not only for JCATS, but for the other federates of the Joint LVC (JLVC) federation.  This is a standard set of all the entity-types that can be represented in the federation.  This standard set of entity-types improves interoperability among the federates of the JLVC, and between JLVC and other external federations.  A standard set of entity-types and associated data attributes for each type also facilitates the Verification, Validation, and Accreditation (VV&A) process.  However, the JCATS operator has the flexibility to define a non-standard entity-type that may be required for a particular exercise or event.In the JCATS Vista Editor User manual, entity-types are called “systems.”  Systems can be described (defined) as composite force objects, consisting of various combinations of other force objects such as weapons, munitions, sensors and the like.  A system can contain multiple weapon stations.  Each weapon station can have several weapons and one sensor.  Each weapon can have several munitions.  System characteristics can come from publications such as JANE'S Armor and Artillery or from personal knowledge of system performance parameters and technical manuals.  The standard JCATS system classes are: Dismounted, Fixed Wing, Four By Four, Four By Two, Helicopter, Robot, Stationary, Submarine, Track, Track 2, and Watercraft.  The USJFCOM JLVC standard set of entity-types includes many different composite entity-types (“systems”) under each of these system classes.JCATS uses a unique DIS enumeration for each entity-type.  The standard set of entity-types includes many of the DIS enumerations from the SISO standard.  A local JCATS operator may assign a “best-match” enumeration from this set or define a new DIS enumeration using the “Extra” field.  In addition to the DIS enumeration, the entity type also has a unique local JCATS ID or federation ID.In addition to a standard set of entity-types that can be represented in JCATS and other federates of the JLVC federation, USJFCOM has developed a standard Unit Generation Utility (UGU) XML Schema data interchange format.  The Joint Integrated Database Preparation System (JIDPS) can access authoritative source data to rapidly generate scenario-specific unit force structure data in the UGU format.  This data specifies the standard entity-type names for each platform and life form assigned to the units.  Each simulation of a federation can import the UGU XML data file, parse the data, and generate the required force structure initialization data files in the simulation’s native format.  The UGU XML Schema includes the name of the entity-type and the DIS enumeration.  For example, JCATS can import a UGU XML data file with the proper entity-type name to generate the JCATS Force Plan file (.fplan).  The entity-type name in the UGU XML file and the .fplan file matches the entity-type name in the standard .setup, .fchar, .param, .phpk, and .symbol files that reside in JCATS itself and that include data to define the characteristics and performance attributes.JCATS is also a federate of the US Army Joint Land Component Constructive Training Capability (JLCCTC) Entity Resolution Federation (ERF).  However, the U.S. Army wants to use a different set of standard entity-types for this Army federation than what has been established for the USJFCOM JLVC federation.  Many of these entity-types represent the same system, but may use different entity-type names.  In addition, there are entity-types that are unique to one federation or the other.C4I systems databases, such as GCCS-A, MCS, BCS3, and FBCB2/BFT, include the friendly unit force structure, platforms, equipment, and personnel.  However, C4I systems databases do not include the association of a certain weapon system, sensor, and other simulation-relevant equipment with a particular platform, or the association of a certain weapon system with a particular life-form type.  The C4I databases do include a certain type of platform with a proper name, unique National Stock Number (NSN) or Line Item Number (LIN) (e.g., M1A1 with an NSN of 2350-01-087-1095).  This model of M1 tank (“A1”) implies certain weapon systems, sensors, and other simulation-relevant equipment; however, the C4I databases will not designate which M1A1 tank has a mine plow/roller mounted.  Or the database may include an instance of an M1025 HMMWV, but not what type of weapon system (e.g., Mk-19, 50 MG, etc.) is mounted on a particular M1025 HMMWV.  The C4I databases also include personnel, grade/rank, and Military Occupational Specialty (MOS) code; however, there is no association of a certain weapon system with a specific life-form type.Currently, there is a misalignment between the C4I systems and the simulations with respect to the entity-type conceptual and physical models.  To achieve interoperability and synchronization of unit force structure between C4I systems and a federation of simulations, a new framework needs to be established to define entity-type compositions within a common underlying conceptual data model.U.S. Army C4I and Simulation Initialization System (ACSIS)The recent development of the Army C4I and Simulation Initialization System (ACSIS) provides the capability to rapidly generate scenario-specific or exercise-specific initialization data products for both Army C4I systems and a federation of simulations.  The paradigm of ACSIS is that simulation initialization data products should be generated with the same unit force structure that is used to initialize the live Army C4I systems.  This includes the mission-specific or exercise-specific Unit Task Organization (UTO), platforms, systems, and other equipment, all of which are relevant to the simulations.  The ACSIS database includes the UTO and the platforms assigned to each echelon.  These platforms are identified by the proper name of the equipment, NSN, and/or LIN.  Weapon systems, sensors, and other equipment are also included in the ACSIS database (also by proper name, NSN, and/or LIN); however, this equipment is not associated with a particular platform.Recent Army Simulation-to-C4I-Interoperability (SIMCI) OIPT initiatives include expanding the unit force structure data in ACSIS to include the association of a certain weapon system, sensor, and other simulation-relevant equipment with a particular platform that is assigned in the actual unit.  These associations can be defined in the ACSIS database through equipment parent-child associations based on the equipment NSNs.  In addition, certain weapon systems can be associated with a particular personnel (life form) entity-type within the ACSIS database.The ACSIS Simulation Initialization Tool accesses the appropriate data from the ACSIS database and translates it to a standard XML data output file based on the UGU XML Schema.  However, the ACSIS Simulation Initialization Tool must generate the UGU XML files based on either the Army JLCCTC ERF or the USJFCOM JLVC standard set of entity-types, as shown in  REF _Ref175111524 \h Figure 1. SHAPE  \* MERGEFORMAT The technical challenge for the ACSIS Simulation Initialization Tool is to identify the proper entity-type for each instance of a platform or individual life form in the ACSIS database and map this entity-type pattern to the proper entity-type name in the Army JLCCTC ERF or the USJFCOM JLVC standard set of entity-types.  The primary key of these two standard sets of entity-types is the entity-type name.  The tool identifies the base entity-type’s equipment with the particular weapon type, sensor, and equipment associations, and places the proper Army JLCCTC ERF or the USJFCOM JLVC standard entity-type name in the UGU XML data file along with the standard DIS enumeration.  The tool is coded based on mappings of ACSIS database entity-types (platforms and associated equipment) compositions to both the Army JLCCTC ERF and the USJFCOM JLVC standard set of entity-types.  These mappings have led to the beginning of a new framework and conceptual model to define entity-type compositions for both C4I systems and simulations.New Entity-Type Definition FrameworkThe specific objectives of developing this framework include the following:Provide a disciplined process to define entity-types that are common to both the C4I and M&S communities.  This process must be responsive, consistent, repeatable, and scalable to the needs of both communities.Facilitate interoperability, reuse, and composability of entity-types across many C4I systems and federations of simulations.Establish a common conceptual model for the definition of entity-types in both C4I systems and simulations.Conceptual ModelArmy C4I systems will often describe equipment types in terms of the equipment’s NSN.  Personnel types will often be described in terms of grade/rank and military occupational specialty (MOS) code.  Equipment may be composed of other equipment, mounted to other equipment, and/or carried by personnel.  Whether this equipment item is a vehicle, aircraft, sensor, or weapon, each has a unique NSN that differentiates it from other equipment types.Sometimes when two or more different equipment types are aggregated, the new composition is designated with a new, unique NSN.  An example of this is an M1059 Smoke Generator Carrier, composed of the M113A2 APC vehicle and an M157 smoke generating set.  Two equipment items are composed to create the aggregate M1059.  Not every composition of equipment is given a unique NSN, but is done at the discretion of the NSN’s controlling authority.In analyzing the basic equipment referenced by DIS enumeration entity-types, one can see that the M&S community will also refer to single pieces of equipment or composed pieces of equipment as “entities.”  The “M1A1” tank is recognizable as the single equipment item with NSN “2350-01-087-1095.”  The “M1A1 w/mine plow” is recognizable as the composition of two equipment items—the M1A1 tank mentioned above and a mine plow.  There is no NSN for an “M1A1 w/ mine plow,” but simulations will discriminate this from a plain M1A1 by assigning different performance characteristics for each (able to breach a minefield or not).  To enforce this distinction, DIS enumerations choose to treat each as independent entity-types.As mentioned already, entities are composed of either equipment or personnel who are carrying other equipment, arranged in a pattern.  Some of that equipment is “simulation-relevant” and some is not.  Equipment is deemed simulation-relevant if it has the capability to effect a software algorithm interaction in the simulation.  The pattern formed by different associations of simulation-relevant equipment is what we recognize here as a simulation-relevant composition.  Any entity that is to be modeled in the simulation must match one of the patterns for a standard DIS enumeration or non-standard entity-type in the simulation or it cannot be represented.  More precisely, the graph formed by all mounted equipment must contain a simulation-relevant sub graph to be considered relevant to a simulation. REF _Ref175118269 \h Figure 2 above illustrates the basic conceptual model developed to capture the composition patterns.  The left half of the diagram is where basic types can be described—equipment by the NSNs and personnel by their MOS and grade/rank.  On the right, composition structures are described.  Compositions have a name (such as “M1A1 W/ MINEPLOW”) and potentially any metadata necessary for tracking a composition.  The composition includes a primary item, the CompositionPrimaryObjectType, which identifies the base host item of the composition, most likely a person, vehicle, or aircraft.  Other equipment items are mounted on this item.  The composition may (but is not required to) contain CompositionDetails—the items that are attached to the composition’s primary item.In the simplest case, a composition contains only a primary item and no detail components, as exemplified by the “M1A1” in  REF _Ref175118350 \h Figure 3 below.  Frequently, a Composition will have one or more additional items mounted to the primary item, as exemplified by the “M1A1 w/ Mine plow” in  REF _Ref175118350 \h Figure 3.Referring back to  REF _Ref175118269 \h Figure 2, the CompositionDetail can have either a single item as its DetailValue (such as a Mine plow), or it can have another composition nested within.  Although this feature of the framework was not used in the authors’ implementation, it provides extensible support for any nested level of aggregation. REF _Ref175118392 \h Figure 4 illustrates a notional example of a nested composition.  This example is not taken from any known standard DIS enumeration or non-standard entity-type, simply because no known M&S entity-type has required a 2nd-generation nested composition of equipment.  In this example, a “50 CAL MG w/ Night Sight” composition is defined as a “50 CAL MG” item with a “Night Sight” item attached to it.  The “NotionalComposition” entity-type is then defined as a “HMMWV” primary item with a “GLID” attached to it in addition to the composition “50 CAL MG w/ Night Sight.”Every entity-type dependent only on the personnel, equipment and the direct attachment/mounting of each can be modeled and managed in this way.Physical ModelAfter understanding the conceptual model and seeing how instance data might appear, more implementation-level details need to be addressed.  The Class Diagram in  REF _Ref175118269 \h Figure 2 could easily be implemented as a SQL database, but the authors choose instead to show an XML Schema implementation of the model.  In the cases of JCATS, UGU, and MSDL, all scenarios (e.g., fplan, UGU XML, MSDL XML, respectively), characteristics, and entity-type definitions (e.g., fchar) are stored and maintained as mobile, freestanding files, and our intent is for the composition mappings to be regarded in the same way.  Our rationale will become clearer as we look at applications in the next section. REF _Ref175118409 \h Figure 5 below shows a simple XML schema for describing entity-type compositions.  The Metadata element describes to what federation/organization the composition set belongs, the version of the mappings for configuration management purposes, and for what version of entity-types the compositions are specifically generated.  This particular XSD was created to satisfy specific composition issues with the JCATS, JDLM, and TACSIM simulators.  JCATS entity-types are described in an “.fchar” file, and therefore the compositions in this document would be created to map specifically to the entity-types listed in an .fchar file.  This is document-level metadata that can be adapted or generalized for other applications.The next two elements, EquipmentTypeDefinitions and PersonTypeDefinitions, are lists for including every primitive equipment or person type that is used anywhere else throughout the mapping document.  Compositions reference types from these lists, and including them is necessary for the document to be complete.The CompositionDefinitions element is a list of all composition mappings.  The Composition element is expanded in  REF _Ref175118428 \h Figure 6.  Just as in the Conceptual Model, the composition includes a name (corresponding to the accepted entity-type name),the primary type in the composition, the list of CompositionDetails, a list of GeneralizationCompositions (to be explained later), and the complete DIS Enumeration code.Note that this physical model contains no scenario- or event-specific data, and no instance data to be transported from a data source to the simulation or vice versa.  This mapping document is strictly a bridge between two models, mapping types of data in one model to types of data in another.Generalization/SpecializationCompositions will frequently have overlapping content, apparent in the cases of an “M1A1 w/ mine plow” and a plain “M1A1”.  There is an apparent relationship or dependency within these groups of entity-types, though this relationship has not been formalized.  The object-oriented concept of generalization appears to apply in that “M1A1” is a generalization of “M1A1 w/ mine plow” and the “M1A1 w/ mine plow” is a specialization of the “M1A1” entity-type.  The “M1A1 w/ mine plow” entity-type inherits the M1A1 equipment from the “M1A1” entity-type.  See  REF _Ref175118350 \h Figure 3 for a graphic of this example.  Another example is the “M1025,” “M1025 w/.50 cal MG,” and “M1025 w/ MK 19.”  The M1025 is the top-level item and is represented in the most generalized “M1025” entity-type.  “M1025 w/ .50 cal MG” and “M1025 w/ MK 19” are specializations of the “M1025,” sharing the M1025 root equipment item.Determining the inheritance relationships for entity-types may appear arbitrary and ambiguous at first, but when viewed as equipment graphs, generalization/specialization is yet another application of graph pattern matching.  The equipment graph for the “M1A1” is just the M1A1.  The equipment graph for the “M1A1 w/ mine plow” is the M1A1 linked with a mine plow equipment item.  When viewed this way, the “M1A1” graph is clearly a subgraph of the “M1A1 w/ mine plow” graph.  Thus, we define an entity-type E1 as a generalization for entity-type E2 if and only if the graph for E1 is a subgraph of the graph for E2.  A corollary following from above is that entity-type E2 inherits from (and is a specialization of) entity-type E1 if and only if the graph for E1 is a subgraph of the graph for E2.The analysis of generalization/specialization of entity-types is important in capturing the logic behind how entity data from C4I data sources will be mediated into the M&S model.  If an application is processing an M1A1 item from a C4I data source, it must determine whether to align the item with the “M1A1” entity-type or the “M1A1 w/ mine plow.”  If the M1A1 has no mine plows, then it obviously matches the “M1A1.”  If the M1A1 does have a mine plow, then the application must determine which entity-type is the better match.  “M1A1” and “M1A1 w/ mine plow” are both valid matches, but we must determine which entity-type is the optimal match.  One possible solution (and the solution implemented by the authors) is to choose the matching entity-type that is most “specialized.”  The “M1A1 w/ mine plow” is a specialization of the “M1A1,” making the “M1A1 w/ mine plow” the “optimal” match.However, the inheritance relationship presented here is limited to the face-value equipment graph of a composition and does not necessarily extend to all the performance characteristics of an entity-type.  While adding equipment to a vehicle might strengthen/improve the vehicle’s force projection capability or communication capability, the aggregation might adversely affect the vehicle’s performance.  For example, adding equipment adds weight that might change the vehicle’s top speed over certain terrain.  The management of other entity-type properties than those mentioned here is outside the scope of this paper; discretion is recommended in handling how inheritance will apply to other properties of the entity-types.Relating to JC3IEDMThe developed data models and mapping management software are compatible with the Joint Consultation, Command, and Control Information Exchange Data Model (JC3IEDM).  The JC3IEDM supports composed types within the OBJECT-TYPE-ESTABLISHMENT structure as shown in  REF _Ref175118443 \h Figure 7.  The OBJECT-TYPE-ESTABLISHMENT structure has a parent/child relationship that consists of an OBJECT-TYPE as the parent and either an OBJECT-TYPE or an OBJECT-TYPE-ESTABLISHMENT as the child.  The OBJECT-TYPE can be MATERIEL-TYPE/EQUIPMENT-TYPE or PERSON-TYPE.  This structure allows the specification of weapons mounted on vehicles or carried by a war fighter.  Using this structure allows the sharing of the data across the simulation community.  It also facilitates a human operator to define and manage the mappings. SHAPE  \* MERGEFORMAT Common Registry of Entity-Type DataIn addition to a common framework consisting of a common conceptual and physical model to define entity-type compositions, an on-line registry is required to configuration manage the entity-type graphs and the associated metadata and to share/reuse the entity-type data across the enterprise.  A web-enabled registry would need to be established with a baseline including all of the US entity-type graphs and metadata as shown in  REF _Ref175118452 \h Figure 8.  This baseline could be initially established based on the current entity-types in the SISO DIS enumeration standard for US platforms and human life forms.  This common registry of entity-type data would be maintained and configuration managed thorough a web-enabled automated system that would allow a user to search/find an existing entity-type composition and associated data in the baseline and a list of interim entity-types.  The user would be able to download a data set associated with the entity-type composition based on the standard common physical model (i.e. proper name, NSNs, DIS enumeration, etc.).  If the user cannot find the entity-type composition needed, he can request that a new composition be established as an interim entity-type for immediate use.  The next user who logs on to the system could then also search/find a required entity-type composition graph or request that a new interim entity-type composition be established.  The list of interim entity-type compositions would be periodically reviewed by the configuration management authority for inclusion in the baseline.  As current and future Net-Centric Warfare includes coalition forces, this entity-type registry would be expanded to include the entity-types of other nations similar to the SISO DIS enumeration standard. SHAPE  \* MERGEFORMAT This paper has primarily addressed the establishment of a framework to define common entity-type compositions across the C4I and M&S communities.  However, the next logical expansion of this concept would be to include common standard metadata to define characteristics and performance attributes, munitions for weapon system types and other weapon type attributes, sensor type attributes, capabilities/limitations, lethality, vulnerability, symbol codes, etc. for each entity-type composition.  When these entity-types are being represented in a number of C4I systems and simulation federations for mission planning and COA analysis purposes, it is essential, in order to produce valid results, that not only are the entity-types defined correctly, but the same accurate characteristics and performance data are used in all models and simulations involved.ConclusionsModels and simulations are currently being tightly integrated and even embedded in C4I systems for decision-aid, COA analysis, and mission rehearsal.  Net-Centric Warfare has blurred the lines between C4I and M&S systems.  To achieve system interoperability and to facilitate reuse, the C4I and the M&S communities must establish common metadata structures, define common ontologies, and catalog and post data with appropriate metadata.  These Communities of Interests must standardize common data elements and establish distributed databases and Service Oriented Architectures (SOA) to exchange data and information through net-centric web services based on standard XML information exchange formats.  C4I and M&S data mediation tools/services must be established to map, translate, and transform data so that it is useable by a diverse federation of simulations and C4I systems, each with its own information exchange requirements (IERs) and native data file and database formats.  Establishing a common framework to define entity-type compositions that is responsive to the needs of both the C4I and the M&S communities is just a very small part of the larger effort to implement the DoD Net-Centric Data Strategy.AcknowledgementsThe authors wish to acknowledge the expert contributions of Donna Bustamantes, the technical editor at ARL:UT.References[1]	Enumeration and Bit Encoded Values for use with Protocols for Distributed Interactive Simulation Applications, SISO-REF-010-2006, 12 May 2006, http//www.sisostds.org.Author BiographiesKEVIN GUPTON is a research engineer in the Signal and Information Sciences Laboratory, Applied Research Laboratories, The University of Texas at Austin.  He has over 6 years’ experience in enterprise system engineering, data modeling, and scientific software engineering, and is a member of the SISO MSDL Drafting Group.BRUCE CARLTON is a program manager in the Signal and Information Sciences Laboratory, Applied Research Laboratories, The University of Texas at Austin.  He is the ARL:UT Technical Lead for the project developing rapid initialization of Simulation Systems (SIMC06).  Mr. Carlton is a retired U.S. Army officer with 20 years’ experience in tactical and real-world military operations.CAROLYN HARE is a systems analyst in the Signal and Information Sciences Laboratory, Applied Research Laboratories, The University of Texas at Austin.  She currently works as a key analyst in the development of a formal data model for the CSMM.  Ms. Hare has 20 years’ experience working in support of various projects in the defense community.GARY FARMER is a research engineer in the Signal and Information Sciences Laboratory, Applied Research Laboratories, The University of Texas at Austin.  He has over 18 years’ experience in data engineering, database modeling and design, and database administration in the defense community.  Mr. Farmer was one of the principle designers of the ACSIS database.Figure  SEQ Figure \* ARABIC 2 Conceptual ModelFigure  SEQ Figure \* ARABIC 1 Entity-Type Composition Mapping ManagerFigure  SEQ Figure \* ARABIC 3 Example Instance SpecificationFigure  SEQ Figure \* ARABIC 4 Example Instance SpecificationFigure  SEQ Figure \* ARABIC 5 Physical Model - XML SchemaFigure  SEQ Figure \* ARABIC 6 Physical Model - XML Schema (cont.)Figure  SEQ Figure \* ARABIC 7 JC3IEDM Establishment StructureFigure  SEQ Figure \* ARABIC 8 Entity-Type Composition RegistryNote:	All U.S. platforms have a Kind field value of 1 (Platform) and a Country field value of 225 (US).Table  SEQ Table \* ARABIC 1 Standard DIS Enumerations for US M1 Abrams TankTable  SEQ Table \* ARABIC 2 Standard DIS Enumerations for US HMMWV