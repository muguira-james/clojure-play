Web Services for Natural Environment RepresentationThomas MaxwellSteve Lowe Naim Alper, Alice Nakajima, Joanna WensellScience Applications International Corporation7021 Harbor View Blvd., Suite 117Suffolk, VA 23435757-686-9817, 757-686-9820Thomas.P.Maxwell@saic.com, Steven.J.Lowe@saic.com Keywords:Environmental, Modeling & Simulation, Defense, Web Services, MetadataABSTRACT:  A wide range of DoD M&S applications, including training, analysis, mission planning and mission rehearsal, require the capability to rapidly generate environmental representations tailored to specific customer needs to satisfy operational requirements.   The Environmental Scenario Generator (ESG) has been in development since 1998, with the support of DMSO and the M&S Executive Agents, as a system to support this community with ready access to customized environmental databases.   It provides functionality required to capture and translate customer requirements into a complete environmental data set specification, which can include environmental conditions making up a scenario, and then ultimately to construct and deliver a data set to that specification.  The ESG infrastructure and the web services that it exposes are the focus of this paper.The ESG exposes a set of web services that allow for the registration and integration of data-producing resources through the use of foundational metadata, a data model, and terminology mapping components.  A robust order processing architecture can then utilize a wide range of data resources in the production of customized, integrated environmental databases.   These data resources include both static data repositories and dynamic physics-based models.  A number of environmental data analysis applications have been developed to consume these services, featuring powerful tools such as fuzzy-logic searching, and weather effects analysis & plotting.The ESG infrastructure enables seamless integration of environmental data providers, yielding a consistent interface against which applications can be developed to support the DoD M&S community. Providing ESG services as a component of the Global Information Grid (GIG) will be a major step toward achieving the fully integrated authoritative representations needed to effectively simulate the effects of the environment on mission operations.    1. IntroductionThe Department of Defense (DoD), in the Modeling and Simulation Master Plan [1], has identified a need for the inclusion of realistic environmental representations in Modeling and Simulation (M&S) applications.  Fully integrated authoritative representations are required to effectively and efficiently simulate the effects of environment on mission operations.  A wide range of M&S applications, including training, analysis, mission planning and mission rehearsal, require the capability to rapidly generate environmental representations tailored to specific customer needs to satisfy operational requirements.   These authoritative representations must portray the natural environment in a physically consistent manner, both within and among the atmosphere, ocean, space, and terrain domains.  The environmental data must be delivered in a timely manner in a standard format at a resolution that is appropriate to the intended application.   Environmental data providers must develop strategies to respond to requests for environmental data needed by simulation customers.  A gap exists between the environmental scientists who “own” the vast array of available environmental data sets and the simulation engineers who are responsible for injecting these new environmental data types into their applications and developing new behaviors that make use of the information.  Within the environmental data provider community, the range of data models, formats, and taxonomies is staggering and there are many pitfalls for the simulation engineer when trying to massage data from the scientific community into their applications.  2. Environmental Scenario GeneratorThe Environmental Scenario Generator (ESG) has been developed as an application to support the DoD M&S community with ready access to customized environmental databases [2].  The ESG application provides functionality required for subject matter experts to execute the Integrated Natural Environment Authoritative Representation Process (INEARP) [3].  It enables them to capture and translate customer requirements into a complete environmental data set specification, which can include environmental conditions making up a scenario, and then ultimately to construct and deliver a data set to that specification.  If existing data sets are not sufficient, full physics models can be used to produce a data set at the resolution necessary to support their needs.  While the ESG is developed to serve the data consumers, it can be viewed as a “bridge” capability that serves to connect the DoD M&S community to the environmental data providers.   In this capacity, the requirement for a significant infrastructure layer supporting the ESG application has emerged with the goal of presenting a uniform interface atop the many disparate data resources involved in supporting DoD M&S customers.  The ESG infrastructure has its foundation in a common metadata model and in-memory data object.  Atop these two foundational elements is built a robust ordering architecture that treats data and model resources identically and provides process control to seamlessly link together sequences of resources yielding new customized data sets.   The ESG infrastructure components are domain and resource independent.  They are not designed for specific environmental resources, and in fact the resources themselves are treated as entirely external (resource provider owned) elements from the infrastructure.  Providing ESG services as a component of the Global Information Grid (GIG) will be a major step toward achieving the fully integrated authoritative representations needed to effectively simulate the effects of the environment on mission operations.    The ESG exposes a set of important environmental data services to support the M&S community, including data cataloging, access, generation/transformation, and intelligent search capabilities.  These services, working together, produce an integrated, physically consistent environmental representation according to a customer specification.  The ESG Web Services and the infrastructure supporting them are the focus of the remainder of this paper.3. Overview of the ESG Web ServicesThis section describes the functionality of the ESG Web Services from the perspective of a notional web service enabled application.  The ESG Application leverages these services to provide a range of functionality to its own customer base.  These services may also be utilized in custom end-user applications, via direct calls to the Web Services or via the ESG provided client side Java API.  The Java API, which can be used to transparently interact with the services from a Java application, provides classes representing the data model components described below (ResultSet, Content, ScenarioComposition, etc.). These data model classes include serialization methods for mapping to/from the XML formatted strings used as argument and result objects of the services.A typical ESG interaction involves the construction of an environmental representation to meet a set of user-defined specifications and constraints (e.g. a particular spatial region and resolution, constraints on time resolution and extent, a list of required parameters, a set of environmental conditions, etc.).   This process potentially entails six steps, which are shown as the numbered calls to the ESG Web Services depicted in Figure 1 and described below.  Figure 1 also shows the relationship between the ESG Web Services and the underlying ESG Infrastructure modules, which will be described in Section 4.Throughout the discussion below, methods of the web services are shown italicized, while the key data models used as arguments in the methods, or returned by them, are shown bold and italicized.  It should be noted that user authentication and authorization for use of the services is presumed to be handled prior to interaction with the ESG Web Services, and that some form of User ID or Token (not shown or discussed below) would also be included in every call to a service. 3.1 Catalog ServiceThe first step in the construction process is the identification of ESG resources that address the user’s requirements using the ESG Catalog Service. The Catalog Service provides the capability to service requests for the search and retrieval of metadata that describe ESG resources. The Catalog Service’s search( ) method provides for query and browsing of ESG metadata records based on descriptive information such as title, abstract, keywords, etc.  The search method requires a single argument that is an XML structured Query string, and returns a list of candidate resources in a ResultSet.   The service’s getCoreMetadata( ), getNativeMetadata( ), and/or getContent( ) methods can then be employed to get more information about any resource of interest to the user.   The first two of these methods return the resource’s metadata in either the form stored by ESG or its original form, respectively.  The getContent( ) method returns detailed inventory-level metadata describing the resource’s output capability in the form of another XML structured Content string, which facilitates precise ordering of data from the resource.  Section 4.1 provides more details of the ESG approach to metadata.3.2 Scenario Search ServiceThe concept of Scenario Searching involves looking for a specific sequence of environmental conditions that have occurred historically in some user-defined location.  Users that already know the specific time frame and location for which they need data will typically skip this service.  The user application must construct a ScenarioComposition search string, made of up one or more segments defined by a set of criteria associated with a set of search locations.   Because the search must be performed against specific data locations supported by a resource, the ScenarioComposition also indicates the resource to be used for the search.  Resources in the ESG Catalog that are capable of delivering data in time-series form, with a response time of a few seconds, are deemed “mineable” and can be used to perform these scenario searches.  The user application can restrict the Query string (in Step 1 above) to include only mineable resources in the ResultSet, and/or each resource in the ResultSet can be inspected for its ability to support scenario searches.The primary method of the ESG Scenario Search Service is scenarioSearch( ), which responds with a ScenarioResultSet that contains a sorted list of the top-scoring dates, along with their overall score.  The ESG Scenario Search Service uses the same infrastructure modules employed by the ESG Order Service to get the required data into a Five Dimensional Representation (FDR) Server (discussed in Section 4.2), before performing a fuzzy-logic classification scheme to identify dates in the specified resource that support the desired conditions.3.3 Order ServiceThe ESG Order Service is the point of submission for all resource orders, regardless of type and/or the time it will take to produce the desired output.  The user application must construct a valid Content string based on the one obtained from the resource metadata.  This string, along with a DeliverySpecification string that captures the details of how the user would like his data set packaged, is submitted to the submitOrder( ) method of the service, which provides a JobID string for subsequent tracking assuming the submitted job is accepted.  The details of how orders are processed are presented in Section 4.3.  Once submitted, the status of a job can be checked and/or cancelled via additional methods on Order Service.  Upon completion, whether successful or not, the processing log from the job can also be obtained.3.4 Delivery ServiceThe ESG Delivery Service provides for data set pickup of completed orders submitted at the ESG Order Service.  In order to alleviate traffic on the ESG Order Service, the status of a job is also available from the Delivery Service as soon as a job is submitted.  A user application can either elect to be notified by email when a job is completed, or can begin polling its status at the Delivery Service until a status of “Packaged” is reached.  The Delivery Server, operating in support of the Delivery Service, maintains all references to data sets resulting from the submitted order, including the FDR data objects (discussed in Section 4.2) representing the assembled final data set and any packaged data sets indicated by the user in the DeliverySpecification.The getDataCollection( ) method is used to retrieve information on the collection of data sets that were produced for the completed order. Each DataSet describes the location of the data (a URL), its format, and the list of objects making up the data set.  Packaged data sets (i.e. format encoded) can be readily downloaded and ingested into the user application using a third party decoder.  Data sets that are left in FDR form can be further interacted with via the FDR Service described next.3.5  FDR ServiceAs an optional final step, customer applications can interact directly with the ESG FDR Service via a required client-side Java API provided by ESG.  The FDR Service allows applications to directly interact with one or more FDR Servers (see section 4.2 for details) and its associated utilities.   These utilities allow for the transformation of any FDR data set, including terminology and/or units mapping, changes in representation (e.g. transform from spatial grid to time-series), and interpolation. FDR Server also provides analysis functions such as fuzzy searches, and for efficient remote access to all or part of an FDR data set.  The ESG FDR Service provides a powerful mechanism for embedding geospatial data analysis and/or access into a custom application. EMBED Visio.Drawing.6  Figure 1. ESG Web Services4. The ESG InfrastructureThe ESG Web Services are intended to provide a simple and decoupled set of interfaces for accessing integrated natural environmental representations.  The consumer of such services is not required to become familiar with the complex processing architecture behind the services.  However, for the purposes of this paper it is appropriate to discuss the underlying ESG infrastructure to provide a better understanding of the connective tissue behind the ESG Web Services.  The key components of the ESG Infrastructure are the Catalog Server, the Application Data Server, and the Resource Access Architecture, consisting primarily of a centralized Process Controller and distributed network of Service Performers. 4.1 ESG Catalog ServerThe ESG Catalog Server provides a simple Java interface for the search and retrieval of metadata records.  The server architecture itself is independent of the metadata schema, and relies on an independent search engine to perform the actual queries on the metadata repository.  The primary method of the server, search( ), requires a single argument that is an XML structured string modeled after the Z39.50 query protocol [4].  The ESG Catalog Server maps the elements of the query string onto the query language of the search engine it is deployed with, and returns the result set as another XML structured string.  A client side Java API can be used to construct and manipulate Java objects from these XML strings.  This architecture allows great flexibility in Catalog Server deployment, allowing the Server to remain independent of the metadata schema.  In order to reduce the demands on resource providers, the ESG approach to metadata allows providers to use their own local schemas to describe resources as long as the important parts of these schemas can be mapped to the ESG core metadata schema. For instance, a provider may choose to use FGDC [5] as a content standard. As long as the pertinent fields in the FGDC XML schema can be mapped to the core schema (and we have made sure this happens for backward compatibility with the MEL [6]) then the resource’s metadata can be transformed to the core schema and added to the repository. Other providers may choose different standards, or have their own local form of metadata.  As long as mappings are provided to support the ESG core schema, these local schemas can be used to provide resources to ESG.  Providers without any form of local metadata may choose to use the ESG core schema directly, and in some cases core metadata can be generated automatically from their resources.The ESG core metadata schema retains the elements of the FGDC metadata standard that are relevant to the INEARP, adding new elements as required for security and processing information.  The schema is organized into four main sections: (1) the Identification section containing descriptive information such as title, abstract, keywords, etc.; (2) the Auxiliary section containing elements such as browse graphics that may provide extra information about the resource; (3) the Access section containing information on how the resource can be ordered; and (4) an optional Content section that provides more detailed information about the structure of a resource’s data content to support precise ordering of data from the resource.The Content section can be implemented in entirely independent ways to support the unique ordering mechanisms of a particular system.  The ESG Content section defines an Output element that declares the structural details of the resource’s output – this concept is fairly typical of many environmental data ordering systems.  The unique feature of the ESG Content section is the optional Input element that declares the resource’s dependence on other resources when it is ordered.  The Input element can also declare data transformations that are applied to the output of the input resources, resulting in new content.   A resource with a defined Input element is termed a “virtual resource” in ESG, and may imply an entire data flow network involving multiple resources (some of which may also be “virtual”) that need to be accessed before the final content declared in the Output element can be delivered.4.2 ESG Application Data ServerThe ESG Application intelligent search and associated data analysis capabilities require in-memory access to whatever data resource the customer wishes to interact with.  In addition, the ESG Infrastructure itself, tasked with generating integrated and consistent environmental representations, must manipulate the data from one or more data resources.  These two requirements demand an in-memory data object that provides a consistent representation of any ESG data resource.  For overall efficiency this data object should, like the ESG, be developed entirely in Java.  Furthermore, because the data providers and the ESG system components are intended to be distributed across multiple platforms, the requirement emerged for a Java data server that enabled efficient in-memory data object inspection, access, and manipulation without regard to physical storage location.The Five Dimensional Representation (FDR) data model provides the structural definition of this ESG in-memory data object.  The FDR data model is well-suited to point, time-series, profile, and spatial grid data types.  In contrast to the SEDRIS [7] approach, which is aimed at allowing any environmental data resource’s structure to be captured intact without loss of information, the FDR data model defines a rigid schema that is exploited in all ESG components.  Data resources are converted into FDR data objects when imported into the ESG system – mechanisms for doing this, including those based on standard formats, are discussed below.  This strict requirement on the delivery of data allows the ESG infrastructure, and applications using it, to be guaranteed a standard form for each data type it knows how to process, and can therefore proceed with confidence in the manipulation of those data.  It should be noted that ESG can order and deliver data from providers without forcing it to be loaded into FDR, however these data sets are not well-integrated into the complete environmental representation and can not be used with any of ESG’s data analysis tools.The FDR Server is the ESG component that provides for management of these FDR data objects as they are created, manipulated, and moved about the distributed ESG System.  The FDR Server catalogs the FDR objects under its management, and stores the associated data files under an FDR Data Store.  The FDR Data Store provides for physical storage of the data in multiple formats, and also provides for caching of data to improve the performance of FDR Server.  This deliberate split between the in-memory data object providing the structural description of the data set, and the data itself, allows remote applications to access and inspect the structure of a data set before requesting that any of its data be brought into memory.   Furthermore, some applications can choose to leave the FDR data set on the FDR Server, and manipulate it remotely using the built-in FDR Utilities.   This allows ESG application components to operate on FDR data objects as if they are local, without burdening their local platform with the significant memory requirements for handling these often large data sets.The utilities built into FDR Server include transformation services to change the type of an FDR (e.g. from spatial grid to time-series), interpolation services to change the grid representation of an FDR, various “fill” and “merge” services to construct new FDR’s using others as the source, and even some analysis services such as a fuzzy-logic search method to identify conditions of interest within an FDR object.  In addition there are decode and encode services for a range of standard formats such as GRIB, netCDF, and SEDRIS.4.3 ESG Resource Access ArchitectureThe ESG Resource Access Architecture is shown in Figure 2.  Orders are submitted to the ESG Order Server, the top-level component providing overall process control for the entire job.  Orders consist of the Content section from a selected metadata record and a Delivery Specification detailing how the final data set should be packaged.   The Order Server inspects the Content for dependencies specified in the Input element, and creates tracking objects for each resource to be ordered.  Each tracking object is told which objects it is waiting on before it can execute, and which objects are waiting on it to complete.  This makes the set of tracking objects “self executing” because each object can decide for itself when it is able to execute.  Once all of the tracking objects have executed, the job is presumed completed, and the final customer data set can be assembled from the component data sets generated by individual tracking objects.  This final assembly and packaging is done by the ESG Delivery Server component, per the customer provided instructions contained in the Delivery Specification.  Packaged data sets imply encoding of the assembled data into one or more customer specified formats; currently ESG supports encoding to standard formats such as GRIB, SEDRIS, and MicrosoftTM CSV, as well as some DoD application specific formats such as HPAC and WxFx.  Each tracking object contains a reference to a Service Performer, a Java class responsible for delivering the output content from a resource as specified by declarations in the metadata.  A Service Performer can simply load a data set off of disk, execute one or more data transforms (i.e. algorithms) within Java, or execute a full-physics model via a command-line script.  Usually a Service Performer will also generate an FDR object from the resulting data set, but this is not strictly required.  A Service Performer can be executed locally to the Order Server, or can be executed remotely via a Request Handler (RH) Server that resides on another platform.  Communication between Order Server and RH Server can be over Java RMI or over HTTP via web services.  In the case of a virtual resource, the tracking object also contains references to the prerequisite data sets required for the Service Performer to execute.  Upon completion, the Service Performer updates the tracking object to contain a reference to the data set it just created. Figure 2. The ESG Resource Access Architecture5. ESG Application ModulesThe ESG services work together to enable discovering, ordering, and managing the environmental data resources required to support a customer.  The ESG Web Application is composed of a number of modules that have been built on these services.  These modules can also be used in custom applications, providing a wide range of environmental data services to the M&S community.   5.1 Resource Query and Browse ModuleThe ESG Resource Query and Browse Module provides a convenient interface for constructing search and retrieval requests for metadata describing ESG resources, allowing users to query for resources based on spatial extent, temporal extent, keywords, and resource site selections.  The keywords feature allows the user to enter freeform text, pick keywords from thesauri, or select military systems of interest.  The resource site selection feature allows users to choose from a list of the Catalog Server’s available resource sites.  This module also provides a Query Results Browser for managing the results of a submitted query.  The browser displays a list of the resources that were returned from the query.   Interfaces are provided for a number of resource management tasks, including saving favorite resources, viewing metadata, and links to load Scenario Search and Resource Order modules with a selected resource.  5.2 Scenario Search ModuleThe ESG Scenario Search Module facilitates searches through FDR data for events which satisfy a set of user defined criteria.  The search can be performed on data already residing in an FDR server or on any “mineable” resource selected from the ESG Catalog.  In the latter case, the required data is ordered and stored in a FDR server prior to the initialization of the search procedure.  In both cases the design response time for the module is a few seconds. This module orchestrates the construction of a ScenarioComposition search string by providing an interface for the specification of a series of consecutive scenario segments, each representing a span of time, a spatial extent, and a list of search criteria.  The criteria are defined as constraints on parameter values (e.g. “Visibility < 800m and BlowingSand”).   The criteria can be defined directly or indirectly using the ESG System Effects Browser (described below), which constructs lists of search criteria based on system effects.  The fuzzy logic search algorithm computes a degree-of-match score for each criterion and aggregates over criteria and segments to produce a score for each point in time (event).  Launching a query locates a set of events that best satisfy the criterion, each with a ranking value describing the degree of match.  Selecting an event plots the selected time-series around that point in time. The ESG System Effects Browser can be used to construct lists of search criteria based on system effects.  The interface allows users to construct a set of criteria derived from environmental effects on combat systems and components, based on the use of the IWEDA rules database.  The browser presents the user with a list of all the system effects rules in the effects database that refer to parameters in the current data set.  The rules list can be filtered by class (e.g., AIR FORCE, INTELLIGENCE, MISSILES), system (e.g. B-1B, B-2A, B-52), or component (e.g. TARGET ACQUISITION, WHEELED PLATFORM).  Each rule is represented by a name (e.g. “Sand Storm”), a short description, an impact level (“moderate” or “unfavorable”), and a set of conditions on parameter values (e.g. “Visibility < 100m and BlowingSand = True”).   The System Effects Browser can also be used to define criteria for the spatial analysis applications described below.5.3 Resource Ordering ModuleThe Resource Ordering Module allows users to customize the content of an ESG order prior to submission.  The user is presented with an interface showing the spatial and temporal extents of the resource, which can be restricted to order a subset of data.  The user can select from a list of format types appropriate for the resource and as supported by the Delivery Server discussed in Section 4.3.  The ESG Content Manager interface allows users to specify which parameters and levels should be included in the order.When an order is submitted, an order record is built based on the user’s selections.  The ESG Order Browser provides a list of the user’s orders.  For each order, the order ID, submitted date and time, completed date and time, and the status are displayed.  The user can delete orders, view order details, search for new resources, and bookmark favorite resources.5.4 Data Browse Module The ESG Data Browse Module provides interfaces for browsing, visualizing, and selecting the data stored in an FDR server.  It facilitates interactive, online exploration of datasets while allowing users to directly download data of interest.This module includes customized visualization tools for each FDR type.  The currently supported FDR types are point, profile, spatial grid, and time-series.  From this interface the user can view the FDR metadata describing the data’s temporal, spatial, and vertical extents.   The FDR’s parameters, levels, and data elements can be browsed, and a data subset may be chosen for closer inspection by selecting elements directly and/or filtering by temporal range or spatial area of interest.    The data values for time-series and profile FDRs can be viewed in a table format and saved to CSV format for easy import into MicrosoftTM Excel.  Graphing applets are also available for plotting time-series and profile data.  The applets allow synchronized zoom (in/out) and pan on plots of multiple parameters.  The spatial area of interest (AOI) for time-series FDRs is chosen using a mapping applet.  The map applet displays the set of points corresponding to time-series locations overlaid on a map of the geographic region containing the data.  The user clicks and drags a rectangular box to define the AOI and all points that fall within the AOI will be selected.   Multiple named AOIs can be saved and retrieved by the user.   Spatial data is plotted using the Spatial Grid Plotter applet, which displays 2D pseudocolor maps of the spatial data from any of the selected parameters.   The plotter maps parameter values to colors (using an editable color-map) in each cell of the spatial grid.  It then magnifies the colored image and overlays a GIS layer, fetched from a remote web mapping service, to establish geographic location.  The visible GIS layers, which typically include country boundaries and a reference grid of Latitude and Longitude lines, can be modified by the user.    The color images (one for each time-step) can be displayed sequentially as an animation (forward or reverse) or stepped through one at a time.  The parameter data used to compute the map can be displayed in a spreadsheet format.  A rendering panel allows the user to edit the color-map and other display attributes such as smoothing.5.5 Data Analysis Modules A number of custom data analysis modules have been built into the ESG application suite, including Stoplight Charting and Threshold Plotting.   These applications use criteria that are defined as constraints on parameter values (e.g. “Visibility < 800m and BlowingSand”).   The criteria can be defined directly or indirectly using the ESG System Effects Browser (described in section 5.2), which constructs lists of search criteria based on system effects.  The Stoplight Charting Module is a spatial plotting applet which displays a time varying spatial grid of weather data and weather impacts on system components. A set of editable criteria is executed on the parameter values in each cell of the map.  Out of all the criteria that are satisfied in that cell, the most severe impact is chosen and designated as the impact value of that cell. The cell is then colored according to impact value: green for no impact, orange for moderate impact, and red for unfavorable impact.  The user can choose to display the impact map, maps of any of the weather parameters that are used in evaluating the rules, or the raw data used to generate any of the maps.  All maps are displayed using the Spatial Grid Plotter. The criteria page displays, for each criterion, the system effect name, the impact level, the equation used to evaluate the criterion, the criterion's parameter value in the selected cell, and a checkbox indicating whether the criterion has been satisfied. The Threshold Plotting Module is used to display a time varying spatial plot of user created threshold criteria. Each criterion is satisfied for every cell in which a parameter has exceeded a user-specified threshold.  The application evaluates all criteria in each cell of the spatial grid and, dependent on the results of the criteria evaluations, assigns a color to that cell. Each criterion is assigned a numeric rank which corresponds to a color in a fixed color map. The color assigned to a cell corresponds to the highest (numeric) rank of the criteria that were satisfied in that cell. The map display applet is very similar to the one used in the stoplight charting application.6. ConclusionThe ESG provides the functionality required to execute the INEARP, enabling users to capture and translate consumers’ requirements into a complete environmental data set specification, which can include environmental conditions making up a scenario, and then ultimately to construct and deliver a data set to that specification.  The ESG infrastructure enables seamless integration of environmental data providers and transformers, providing a consistent interface against which applications can be developed to support the DoD M&S community.   The ESG exposes a set of important environmental data web services to support the M&S community, including data cataloging, access, generation/transformation, and intelligent search capabilities.  These services, working together, produce an integrated, consistent environmental representation according to a customer specification.   Providing ESG services as a component of the Global Information Grid (GIG) will be a major step toward achieving the fully integrated authoritative representations needed to effectively simulate the effects of the environment on mission operations.    The ESG System, its supporting infrastructure, and a significant suite of atmosphere, ocean, and space resources are all deployed as an operational prototype at the Air Force Combat Climatology Center (AFCCC) under the guidance of the ASNE MSEA [8].  This site will also be the access point for the ESG Web Services described in this paper.  The ESG System is expected to reach IOC in the spring of 2006, under the full management and control of AFCCC staff.   For up to date information on the current capabilities of ESG, and to gain access to the system, please visit the ESG Storefront [9].7. References[1]   DoD Modeling and Simulation Master Plan: https://www.dmso.mil/public/library/policy/guidance/500059p.pdf[2]   The Environmental Scenario Generator (ESG).  SEDRIS Technology Conference, Orlando, FL, January 7 – 9, 2004: http://www.sedris.org/stc/2004[3]   INEARP CONOPS: https://www.dmso.mil/public/library/projects/ine/inearpconops.pdf[4]   National Information Standards Organization Z39.50 Information Retrieval Protocol: http://www.niso.org/z39.50/z3950.html[5]   Federal Geographic Data Committee (FGDC) Content Standard for DigitalGeospatial Metadata (FGDC-STD-001-1998): http://www.fgdc.gov/metadata[6]   Master Environmental Library: https://mel.dmso.mil/[7]  SEDRIS: http://www.sedris.org/[8]   Modeling & Simulation Executive Agent for Air & Space Natural Environment: https://msea.afccc.af.mil/[9]   ESG Storefront: https://esg.afccc.af.milAuthor BiographiesTHOMAS MAXWELL is a Senior Scientist at SAIC and an ESG developer.  His Ph.D. in physics focused on pattern recognition and machine learning in artificial neural systems.  He has served for five years as a principal investigator within the National Computational Science Alliance, funded and directed research programs, and developed widely used cyber-infrastructure supporting large scale collaborative modeling and simulation. STEVE LOWE is a Senior Scientist and Program Manager with SAIC, and serves as the Principal Investigator on the ESG Program.  He received BS and MS degrees in Aerospace Engineering, with an emphasis on the study of fluid dynamics and the Marine Atmospheric Boundary Layer.  Since joining SAIC in 1993, Mr. Lowe has performed research in environmental science through the development and applied use of numerical weather models, data exchange and analysis tools, and distributed computing systems.  Mr. Lowe also provides subject matter expertise to many DoD M&S programs on the inclusion of realistic natural environment representations.NAIM ALPER is a Senior Software Developer consulting for SAIC.  Since obtaining his Ph.D. in computer engineering on scientific visualization, he has been working on the MEL and ESG projects on the development of metadata schema and tools for the query, browsing, and analysis of environment data resources.ALICE NAKAJIMA is a Software Engineer with SAIC.  She has a BS degree in Computer Science and nearly 20 years of development experience across a range of technologies and languages.  Ms. Nakajima is responsible for the development of the Resource Access Architecture for ESG, as well as the integration of the environmental resources it relies on.  Prior to her work on ESG, she developed a GRIB library for the MEL Program that continues to be utilized throughout the community. JOANNA WENSELL is a Software Engineer with SAIC.  She has BS and MS degrees in Applied Mathematics, as well as a BS degree in Meteorology.  Ms. Wensell is responsible for the development of the FDR Server technology for ESG, as well as the compilation and integration of database resources used in support of scenario searching.  Prior to working on ESG, she developed the GRIB processing sub-system of the DTRA Meteorological Data Server, and contributed to SAGE experiments at NASA, Langley.