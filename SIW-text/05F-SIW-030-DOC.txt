Transitioning Large-Scale Federations from from IEEE 1278 to IEEE 1516 Jennifer E. JonesScience Applications International CorporationTitusville, FL407-247-2320 HYPERLINK "mailto:jennifer.e.jones@saic.com" jennifer.e.jones@saic.comfor Large-Scale FederationsABSTRACT:  The relative merits and riskstechnical limitations of Distributed Interactive Simulation (DIS) and the High Level Architecture (HLA) interoperability approaches are well known. However, special considerations must be taken into account when transitioning a large-scale federation from DIS (IEEE 1278) to HLA (IEEE 1516). SAIC’s Applied System Technology and Solutions Business Unit, Huntsville, AL, is currently has a team on task to the Army’s TRADOC Futures Center support such a transition for Tthe Battle Lab Collaborative Simulation Environment (BLCSE) maintains an unusually large, complex, federation-of-federations architecture, comprising multiple instances of 29 different constructive and virtual simulations at 14 geographically distributed sites. Under direction from the Army’s TRADOC Futures Center and with the support of SAIC’s System Technology and Solutions Business Unit, Huntsville, AL, BLCSE is tin their transitioning from a highly customized Distributed Interactive SimulationDIS interoperability standard (IEEE 1278) to the High Level Architecture (IEEE 1516). BLCSE maintains an unusually large, complex, federation-of-federations architecture, comprising multipleincluding numerous instances of 21 different constructive and virtual simulations at 14 geographically distributed sites. BLCSE’s participants have invested significant time and money to create a suitable modified non-standard DIS environment to meet their almost uninterrupted experiment requirementsserve from  the Army’s analytical community. Therefore, the benefits of implementing implementation of IEEE 1516 must must demonstrate immediate performance advantages and must be accomplished on a compressed schedule,  become apparent in a short period of time, even as thewhile allowing the BLCSE community continues to expand operate and meet theirto almost uninterrupted experiment taskingsschedule. This paper discusses the DIS-to-HLA trasnsition process established and executed by the SAIC team, including Given such a diverse environment and short timeline, the transition team, in addition to developing a Federation Object Model (FOM) that describes the complex and customized and customized federation architecture, , must identifyingy specific criteria for selecting the most amenable and meaningful federates for immediate prioritized development and spiral integration, and. The transition team must also identifyying the Run Time Infrastructure (RTI) services the federation requires (or must not use) to meet performance expectations, improve data credibility, and achieve consistent repeatability. Theis paper also describes the cultural, technical and managerialspecific issues uncovered during BLCSE’s ongoing transition to IEEE 1516 and the lessons learned for transitioning future large-scale, rapid-growth federations. 1. IntroductionOperating and maintaining a large-scale federation is a full time job. This type of federation operates almost continually and changes almost daily. Therefore, the impact of upgrading its communications architecture can be unacceptable. For this reason, some of the most valuable and comprehensive systems are the last to implement new industry standards.The Battle Lab Collaborative Simulation Environment (BLCSE) is just such a federation. It is maintained by the Army’s Training and Doctrine Command (TRADOC) Futures Center to conduct analytical experiments using capabilities from each of the future force’s 14 functional areas (see Table 1). It is a rapidly evolving, federation-of-federations, which is geographically distributed among the Army’s Battle Labs and Centers. Over the past year, BLCSE nearly doubled in size. It now includes 28 federates and two sub-federations in its analysis toolset (see Table 2). During this time of rapid growth, the community also submitted itself to outside scrutiny, as the SAIC System Technology and Solutions Business Unit planned the optimal strategy to overhaul the BLCSE communication architecture. 2. BLCSE CommunicationsAlthough BLCSE currently implements a customized version of the IEEE 1278 (DIS) standards, the community has adopted terminology more commonly associated with the High Level Architecture (HLA). Specifically, the term federate refers to a single, self-contained simulation, while the term federation refers to two or more federates interoperating via a communications protocol.  As of this writing, BLCSE federates communicate using 28 DIS standard and 24 user-created protocol data units (PDUs). These user-created PDUs are known as experimental PDUs and are created as needs arise during and between experiments. Many more experimental PDUs have been created and used since BLCSE adopted persistent capabilities in September 2003. In some instances the experimental PDUs simply reformat information found in the DIS standards to the preferences of the BLCSE developers. However, in most cases, the experimental PDUs fill very real voids in the data available for transmission by certified DIS implementations. These voids include the capabilities to transmit perceived truth for command and control (C2) simulations, to give battlefield commands, and to mimic real-world communications effects. The implementation of these experimental PDUs worked. However, because BLCSE is used for analytical purposes, it is imperative that experiments have identical outcomes each time the scenario is run. As BLCSE expanded and evolved so rapidly, the inherent limitations of DIS’s broadcast communications became evident, making repeatable experiment results highly unlikely. In addition, the simplicity of the DIS protocol contributed to an unstable environment where PDUs could be continually created, modified and retired without a centralized configuration management process.  The DIS protocol also limits possible solutions to issues introduced by the heterogeneous nature of the federation. BLCSE federates have widely varying levels of fidelity and methods of modeling simulation events. This results in inconsistencies in many areas, such as terrain traversal, damage modeling and communications effects. The community overcame some of these issues by introducing auxiliary server federates which give the final word on what level of fidelity or which modeling algorithm will be used within the federation execution. However, this approach requires new software to be written and maintained whenever a new problem arises and only contributes to an already complex and unstable environment. The environment is further complicated by the federates’ commitments outside of BLCSE. While BLCSE implements DIS, many of its federates implement native HLA capabilities, which are used for internal testing or for experimentation within other simulation groups. These commitments lead to varying levels of HLA expertise among the federate developers and introduce additional anxieties about changes to BLCSE. 3. A New StandardThese issues led the small team of engineers tasked with planning BLCSE’s transition strategy to focus on IEEE 1516 as a method to tame BLCSE’s object ownership, reliable transport, bandwidth and configuration management issues. Although more development tools exist for the HLA 1.3 standard, the transition team felt upgrading to an outdated standard would be performing a disservice to the BLCSE community. Because BLCSE had no requirement to interoperate with existing HLA federations, it was the perfect candidate to skip the HLA 1.3 standard altogether. The team also considered IEEE 1516 a more appropriate architecture for analytical testing than the Test and Training Enabling Architecture (TENA). One problem with this decision was the availability of IEEE 1516 run-time infrastructure (RTI) software with proven capabilities to handle the load BLCSE produces. Functional AreaBLCSE Functional Area ProponentUnit of ActionFt. Knox, Unit of Action Maneuver Battle Lab (UAMBL)Mounted ManeuverFt. Knox, UAMBLIndividual CombatantFt. Benning, Soldier Battle Lab (SBL)FiresFt. Sill, Depth and Simultaneous Attack Battle Lab (DSABL)Manned and Unmanned AircraftFt. Rucker, Air Maneuver Battle Lab (AMBL)Maneuver SustainmentFt. Lee, Maneuver Sustainment Battle LabManeuver SupportFt. Leonard Wood, Maneuver Support Battle Lab (MSBL)EnvironmentFt. Leonard Wood, MSBLUnit of EmploymentFt. Leavenworth, Battle Command Battle Lab (BCBL)-LIntelligenceFt. Huachuca, BCBL-HCommunicationsFt. Gordon, BCBL-GAir DefenseFt. Bliss, Air and Missile Defense Battle Lab (AMDBL)SpaceRedstone Arsenal, Space and Missile Defense Battle Lab (SMDBL)Special OperationsFt. Bragg, Army Special Operations Battle Lab (ARSOBL)A BLCSE experiment can be very taxing on the communication architecture, including up to 500 instances of the 30 federates listed in Table 2, up to 60,000 active entities producing roughly three object updates per second, and up to 60,000 additional inactive entities across 14 sites nationwide. As such, the transition team searched for an RTI with highly distributed services, including increased client-side processing at remote sites and division of services across multiple CPUs. To prepare for an even larger BLCSE federation in the future, the team also sought an RTI with a multi-threaded architecture, which could use segmentation and additional processing power to support growing federations. In the end, the team found at least two commercial vendors meeting the above criteria, which could also provide sufficient technical support to make upgrades to their products in step with the BLCSE HLA transition process, if and when such upgrades are needed.Table 2. BLCSE Federates and Model ManagersFederate NameBLCSE Model ManagerAdvanced Concept Research Tool-Air Variant (ACRT-AV)AMBLAdvanced Concept Research Tool-Ground Variant (ACRT-GV)UAMBLAggregate-Level Communications Environment Server (ALCES)Communications-Electronics Research, Development and Engineering Center  (CERDEC)Advanced Simulation Technology Inc. (ASTi)UAMBLAdvanced Tactical Combat Model (ATCOM)AMBLAdvanced Warfighting Simulation (AWARS)BCBL-LArea of Interest (AOI) Network Server UAMBLChemical Biological Radiological and Nuclear (CBRN) DefenseMSBLCollection Manager’s Console / Intelligence Request Logger (CMC/IRL)SMDBLComprehensive Mine and Sensor Simulation (CMS2)CERDECCounter Mine Server UAMBLData AnalysisUAMBLData LoggerUAMBLEffect ServerUAMBLExercise ManagerUAMBLExtended Air Defense Simulation (EADSIM)SMDBLFire Support Simulation (FIRESIM)DSABLJoint Approval Console (JAC)SMDBLMobile Command and Control (MC2)CERDECNetwork Planning Simulation Tool (NPST)BCBL-GOneSAF Testbed (OTB)UAMBLRadio Server UAMBLReporterUAMBLSA ServerUAMBLSIGINT Model Suite CERDECSimulation of Location and Attack of Mobile Enemy Missiles (SLAMEM)SMDBLSpace ServerSMDBLSVSTM SBLSystem Interface Unit (SIU) InterfaceUAMBLUniversal Controller (UC)CERDEC4. A New GoalAfter this initial work had begun on BLCSE’s transition to HLA, another evolution of the federation occurred. In addition to meeting federate and performance objectives using the overhauled communication architecture, BLCSE would also participate in a newly developed Cross Command Collaboration Effort (3CE) federation. The 3CE federation is a coordinated Army environment involving TRADOC, Research, Development and Engineering Command (RDECOM), Army Test and Evaluation Command (ATEC) and the Future Combat Systems (FCS) Lead Systems Integrator (LSI). Contrary to the direction BLCSE was heading, the 3CE federation would implement the HLA 1.3 standard using the Modeling Architecture for Research, Technology, and Experimentation (MATREX) version of the Defense Modeling and Simulation Organization’s RTI1.3NGv4.2.Even more problematic to the BLCSE transition was the introduction of yet another schedule to meet. While the transition team planned to begin internal BLCSE testing late this year, 3CE planned its initial connectivity testing during the summer. To accommodate this acceleration to the schedule, the transition team decided to delay the implementation of enhancements to take advantage of advanced RTI services, such as object ownership management and data distribution management. In effect, the team would attempt to duplicate the existing BLCSE federation functionality (and inherent limitations) using HLA. While this decision would not address differences in the different commands’ architectures, it would prove a basic level of interoperability and provide a solid basis for further experimentation.5. The Transition StrategyFrom their initial work and directives, the transition team recognized schedule was the key component of the BLCSE transition strategy – not only maintaining theirs, and 3CE’s, but also limiting interference in the original community’s. Because of BLCSE’s intense experimentation schedule, the entire transition would have to be completed “under fire”, allowing the federation to operate as usual throughout the process. With this goal in mind, the transition team first set out a deliberate process with exit criteria for each of its three phases – discovery and analysis, development and spiral testing. 5.1 Discovery and Analysis Phase Phase 1 lasted approximately six months and resulted in a set of documents, which would create the foundation of all future work. During Phase 1, the transition team traveled to most, and teleconferenced with all, BLCSE sites to assess areas of opportunity and potential stumbling blocks to the HLA transition. However, due to schedule constraints, the transition team had limited access to the developers with the most insight into these issues and many of the most knowledgeable developers were, themselves, contractors who had no requirement to assist the transition.Using the information gleaned from these interviews, the transition team created interface control documents (ICD) for each BLCSE federate and for the federation as a whole. The ICDs were the first consistent set of documents to capture the BLCSE federation at a single point in time. They provided a detailed description of the purpose and structure of each PDU used in the BLCSE federation, including valid data types and enumerations used within the PDUs. They also clarified which federates populate and process which PDUs. Not only did these documents allow the transition team to formalize and verify their knowledge of the existing federation, they also provided immediate results to the customer and lent credibility to the work still to be completed. To further accommodate BLCSE’s experimentation schedule, the SAIC team also maintained and managed these documents. In conjunction with the ICDs, the transition team created a BLCSE Federation Object Model (FOM) and related Simulation Object Models (SOMs). Knowing the 3CE federation would use the MATREX v0.7 FOM, the team decided to use it as a baseline for the BLCSE FOM. The transition team compared the data in the MATREX FOM to the data being transmitted in each of the 52 BLCSE PDUs. In many cases, the MATREX FOM used identical or similar data to represent battlefield, C2 and other conditions. Whenever appropriate data did not exist, the transition team made and documented required additions or modifications. The team decided to limit cosmetic improvements to these changes, such as renaming a PDU data field called “count” to an interaction parameter called “NumberOfEntitiesInRange”. The intention of this design decision was to reduce the learning curve for federate developers who were already familiar with the meaning and use of “count”.The transition team also produced a detailed mapping document showing federate developers how to find the information from each data field of the 52 BLCSE PDUs in the new BLCSE FOM. In addition, the document explained the reasons for any variation from the DIS environment. The transition team used this document extensively during a series of five weekly review sessions, which were conducted to obtain the community’s final approval of the BLCSE FOM.  During these sessions, a member of the transition team walked through a pre-determined portion of the FOM, pointing out potential issues for consideration and action. Each Monday, a new version of the FOM and mapping document, containing updates from the previous week’s meeting, was distributed along with a list of objects and interactions to be discussed at the next meeting. The detail provided in the mapping document, and the systematic approach to the approval process, contributed extensively to the confidence the community had in the transition team. This, in turn, greatly increased the support the community gave to the transition process as a whole.5.2 Development PhasePhase 2 lasted approximately five months and resulted in an accredited software library designed specifically to accommodate the heterogeneous and rapidly evolving nature of the federation. During this phase, the transition team developed and lab tested a multi-layer middleware library, which will be linked into each federate application. The library requires a minimal level of integration effort, while providing several advantages over a traditional gateway. For example, because the library runs in the same context as the federate application, they can communicate using memory instead of a network, which enhances the overall federation performance. The library also provides a point of departure for the federation to take advantage of RTI features not typically available from a gateway approach, such as data distribution management, object ownership and time management. From a life-cycle maintenance perspective, the middleware library centralizes configuration control of the entire communications architecture for the federation. Currently within BLCSE, if a change is made to one experimental PDU, up to 30 separate applications at 14 sites must be updated to ensure consistent communications. Using the middleware library, one application is changed and pushed out to all affected federates who then only need to re-link their software. This technique creates a more stable simulation environment and lowers the technical risk to the federation both during and after the transition. In addition, the library can perform version checking at federation startup to ensure federate compatibility during each experiment.The architecture of the library (see Figure 1) is extremely flexible and provides incremental incorporation of legacy simulation clients. Written in C++, the library contains language bindings to accommodate Fortran, Java and Ada federates. The traditional middleware API abstracts and simplifies the RTI application program interface (API). Multiple plug-ins to this layer make it platform independent and adaptable to any communications library, including HLA 1.3, IEEE 1516, TENA, a proprietary protocol, or any future communications architecture. It is important to note that the FOM and protocol libraries listed in Figure 1 are representative of what could be developed using the middleware architecture. For now, the transition team is implementing only the MATREX FOM v0.7 and HLA 1.3 NG libraries to meet near-term 3CE goals. Soon after, the BLCSE FOM 1.0 and IEEE 1516 libraries will be developed, with other libraries coming into play as needs arise. The DIS adapter API, the front-end of the middleware library, will further limit the work required from the BLCSE community developers. The middleware API may be implemented natively by any federate. However, the transition team expects most federates to opt to use the DIS adapter API to interface with the middleware. The API emulates the low-level socket API used to send and receive DIS PDUs. Its six calls support both synchronous and asynchronous polling. The number of lines of code within a federate application that must change to integrate with the DIS adapter will depend directly on the design of the federate, itself. A highly modularized federate, using defined routines for sending and receiving PDUs, may require changes to less than 10 lines of code. However, a federate using a structured programming style will require a change to each line of code containing a call to the low-level socket API.5.3 Spiral Testing PhaseThe final phase of the transition process sets up a controlled HLA federation testing plan, beginning with two instantiations of one federate at a single site. The next step will use one instantiation of two unique federates at a single site and will slowly increase the number of instantiations and the number of unique federates until the federation becomes too complex to execute at a single site. The plan then will test two instantiations of one federate at two sites and follow the previous spiral until three sites are required. The spiral testing phase of the transition process will be complete once all 14 sites have been included in a single testing event. The spiral approach was chosen because it limits technical risk to the overall BLCSE schedule. It also allows the small transition team to personally oversee and, if the federate developers desire, perform each federate integration and testing spiral. In addition, each successful integration and test will provide further confidence to the customer for the overall success of the transition. The team decided to restrict wide area network testing at the beginning of the phase to limit the federation resources needed during preliminary tests. The goal is to reduce the time and the number of engineers needed to complete an integration task, even as the complexity of the task increases.Before any testing can begin, the transition team must identify logical federates for single simulation and small-scale federation testing. The chosen federates should be highly modularized and perform only basic tasks in the federation. They should not perform highly specialized tasks that pertain only to special cases or affect only some federates. Integrating a federate with these characteristics allows the most federation-wide issues to be addressed early in the testing phase. It also limits the surprises that may hide in more complex and time-consuming integrations.After much debate, the transition team identified ACRT-GV as the first federate with which to integrate the middleware libraries. More simplistic federates exist in the federation. For example, CMC/IRL implements only four of the BLCSE PDUs and interoperates only with instantiations of the SLAMEM federate. However, the transition team decided ACRT-GV represented the federation more completely. The 16 BLCSE PDUs it sends and receives contain move and shoot and perceived truth data that is relevant to the majority of the BLCSE federates. Choosing the correct federate with which to begin testing will also limit the possibility of internal simulation issues affecting metrics which will be used to determine the success or failure of the federate’s transition. For the BLCSE federation, performance is the key metric. The transition team will document current and post-integration network latency. Once the test federation’s hardware is set up, including both host machines and the local area network, the transition team will take baseline measurements of the one-way and round-trip network latency. The one-way network latency is the time from the local federate’s low-level socket API call, such as send or sendto, to the time a remote federate detects the incoming data packet. The round-trip network latency is the time from the low-level socket API call to the time the local federate detects an incoming data packet acknowledging its original transmission. The two latency values will help identify whether performance bottlenecks occur during the send or the receive procedures. Once the DIS adapter API is compiled into the federate source code and the middleware library integration is complete, the transition team will again measure the one-way and round-trip network latency. These measurements will be taken twice, once during an execution using reliable transport and once during an execution using best effort transport. These metrics will help characterize the performance of the HLA-centric federation and will give the BLCSE community a better picture of the impact of reliable and repeatable communication. In addition, the team will document the percentage of lines of code that required change during the integration process. This metric is a simple way to analyze the transition’s persistent goal to reduce workload on the federate developers.6. SummaryThe technical work required to transition a large-scale federation from IEEE 1278 to IEEE 1516 is no different from that required to transition a small-scale federation. However, large-scale federations require a much higher level of requirements planning and design flexibility. The team performing the transition must not interfere with federation’s ongoing experimentation schedule. Therefore, every design decision should be crafted to minimize the workload and time required of federate developers, without affecting the quality of the transition process. The team must also recognize the timeline to complete a large-scale federation transition is long, even on a highly compressed schedule. Therefore, it is important to deliver valuable products throughout the process, whether they are in the form of documentation, approved object models or software libraries. In addition, the team should be prepared to maintain each deliverable in an effort to centralize the management burden of the entire transition process.Most importantly, the team must prepare for ongoing changes to the complexion of the federation. Large-scale federations became large by growing and adapting to the community’s needs. The team must look beyond their technical work to anticipate changes throughout the transition. While a pre-defined process is a vital key to obtaining the contract, the ability to adapt the process to maintain the pace of a rapidly evolving federation is vital to finishing the work. 7. AcknowledgementsThe author acknowledges the helpful insights of the following colleagues in writing this paper: LTC Bob Kleinhample (TRADOC), Mr. Paul Hanover, Mr. Steven Wurster, Mr. Don Gordon and Ms. Engin Altan (SAIC).  8. ReferencesHanover, Paul, 2004, Progress Report on the Battle Lab Collaborative Simulation Environment Interservice/Industry Training, Simulation and Education Conference (I/ITSEC) Paper 1563 Institute of Electrical and Electronics Engineers, Inc., 2000, IEEE Standard for Modeling and Simulation High Level Architecture Institute of Electrical and Electronics Engineers, Inc., 1998, IEEE Standard for Distributed Interactive Simulation – Application ProtocolsJENNIFER E. JONES is a software engineer supporting TRADOC’s Battle Lab Collaborative Simulation Environment transition from IEEE 1278 to IEEE 1516. She holds a MS in Computer Science with an emphasis in Telecommunications and Networking from the University of Texas at Dallas.Figure 1. BLCSE Middleware Architectural DiagramFigure 1. BLCSE Middleware Architectural DiagramTable 1.  BLCSE Functional Area ProponentsTable 1.  BLCSE Functional Area ProponentsFigure 1. BLCSE Middleware Architectural Diagram