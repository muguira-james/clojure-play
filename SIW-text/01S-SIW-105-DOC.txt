Improving the Verification of Synthetic Environments:A Three-pronged Approach toEarly-stage Interoperability Checking of HLA FederationsMajor M. C. MoralesDepartment of Computing & Information SciencesPhilippine Military AcademyFort del PilarBaguio CityRepublic of the Philippines+63-74-447-3692mikem@pma.edu.phM.  R.  MouldingComputing Information Systems Engineering GroupDepartment of Informatics and SimulationRoyal Military College of ScienceCranfield UniversityShrivenham, Swindon, Wiltshire, UK.+44-1793-785522 HYPERLINK mailto:moulding@dial.pipex.com moulding@dial.pipex.comKeywords:Synthetic Environments; Verification and Validation; Consistency Checking; Compositional Checking; Semantic Checking; HLA/OMT/FOM/SOM; Interoperability; CORBA.ABSTRACT: This paper reports on a recently concluded research project, at the Royal Military College of Science (RMCS), which was concerned with improving the early-stage verification of Synthetic Environments (SEs) by applying automated checks to the Simulation Object Models (SOMs) and Federation Object Models (FOMs) of SEs developed with the High Level Architecture (HLA).  The starting point for this project has been the Defense Modeling and Simulation Office (DMSO) Object Model Template (OMT) Test Procedures, which specify Consistency Checks to verify that an individual FOM or SOM is well-formed.  An earlier paper (99S-SIW-171) reported research that refined and validated these consistency checks, and implemented them in our RMCS HLA Checker Toolset.  A subsequent paper (00S-SIW- 076) reported the formalisation of the OMT and the Consistency Checks using Relational Algebra, as well as the formulation of Compositional Checks that detect inconsistencies between the federates that define a HLA federation.  These Compositional Checks have been implemented in the RMCS HLA Checker Toolset, and applied to a set of published FOMs and SOMs, revealing numerous data inconsistencies that could have resulted in interoperability problems between federates.  In this latest paper, we take a retrospective look at our research, and report the findings of our pilot investigation into Semantic Checks that can be applied to FOMs and SOMs, in order to detect some of the substantial interoperability problems reported by Dahmann et al at the Fall 1999 SIW.  Finally, we offer a possible application of the results and insights derived from this HLA-based research to the early-stage verification of the interoperability of other component-based approaches, such as that provided by the Common Object Request Broker Architecture (CORBA).1.	IntroductionIn the High Level Architecture (HLA), the Object Model Template (OMT) Test Procedures specify checks to verify that an individual Federation Object Model (FOM) or Simulation Object Model (SOM) is internally consistent [1, 2].  Our research was concerned, initially, with validating and formalising these OMT Test procedures, and investigating enhanced checking approaches that would enable more extensive verification and validation to be performed on FOMs and SOMs.  Subsequently, our research has been divided into three phases, as illustrated in Figure 1.  Each phase focused on a type of verification that can be performed on FOMs and SOMs: consistency checks, that determine whether an individual SOM or FOM is well formed; compositional checks, which verify that a FOM and its associated set of SOMs are mutually compatible; and semantic checks, that seek to establish that a FOM and its set of SOMs have interoperable dynamic behaviours.  A key to our work was the desire to formalise the specification of the OMT so that the checks that are devised could be described as precise mathematical invariant properties of that formal specification, thus removing ambiguity and facilitating mathematical analysis.  We also recognised that semantic checks would require some extension to the information which is currently defined by the OMT. At the Spring 1999 Workshop, we presented a paper [3] which reported on the early part of our consistency checking research, which was concerned with refinement and validation of the published OMT Test Procedures, and their implementation in our RMCS HLA Checker Toolset. In a subsequent paper [4] presented at the Spring 2000 Workshop, we offered a more formal view of the consistency checks, which completed the first phase of research.  In addition, we reported on the completed second phase of the research, which was concerned with the formulation, validation and formalisation of compositional checks.  The proposed compositional checks were implemented in a Compositional Checker extension to our Toolset, and applied to a number of published Federation Model Sets (FMSs); the results of these verification trials revealed numerous interoperability problems in the federations tested, demonstrating the validity and utility of the compositional checks. Our research project concluded in the middle of 2000, following an investigation into the role of ‘deeper’ semantic checking of FMSs. This paper takes a retrospective look over our entire work, as well as providing the first published results of this last semantic checking phase of our research.  Section 2 discusses the rationale behind our three-pronged approach towards the early-stage verification of interoperability within HLA federations.  Sections 3 and 4 give an overview of consistency checking and compositional checking, respectively, while section 5 briefly describes how the proposed checks have been validated through their implementation in a checker toolset, which has been applied to a set of FMSs.  Section 6 then presents the results of the last phase of our research, semantic checking, and how the OMT could be extended to enable the automated detection of some of the substantive interoperability problems described by Dahmann et al [5].  The conclusions that we draw as a result of our research are summarised in section 7.  Finally, section 8 suggests areas of future research, and offers possible applications of the results of our research to other component-based approaches; specifically, CORBA. 2.	Rationale for the Three-pronged ApproachOur research, which is fully presented in the PhD thesis of reference [6], proposes a three-pronged approach towards verifying interoperability within HLA federations, through three types of checks that can be applied to FOMs and SOMs: consistency checks, compositional checks, and semantic checks. This section discusses the rationale for each ‘prong’, which corresponds to a phase of research.2.1  	Consistency CheckingConsistency checks verify that a FOM or SOM conforms to the OMT definition, and that the data it contains are consistent across its tables.  In this light, the motivation for consistency checking is parallel to that for conformance testing, which is concerned with assessing a product for compliance with some reference standard [7].  Although compliance with a standard does not guarantee interoperability, non-compliance would almost guarantee non-interoperability.  Thus, the OMT Test Procedures are important because they provide assurance that compliance with the requirements of the HLA OMT, a precondition for interoperability, has been achieved.  For such assurance to be justified, the checks specified in the OMT Test Procedures must be correct and complete.  This can only be determined by subjecting the OMT Test Procedures to rigorous validation, which is difficult due to the natural language specification of the OMT Test Procedures.  To address this weakness, this research has produced separate tabular, abstract and formal specifications of the OMT Test Procedures, given in [6], which revealed holes in the checks, and validated the checks in the process.2.2  	Compositional CheckingInteroperability problems can exist even when components conform to the same standard [8].  Hence, checking a FOM or SOM for consistency in isolation, as provided by the OMT Test Procedures, is a necessary but insufficient step towards achieving interoperability.  Checking a FMS would provide a more accurate assessment of the compatibility of federates.  However, HLA does not define such checks; our research has proposed compositional checks to provide this type of compatibility checking at the specification level.  The checks have been applied to five FMSs, revealing numerous compatibility errors embedded in their FOMs and SOMs [4, 6].  2.3  	Semantic CheckingThe problems encountered by the HLA protofederations [9, 10, 11, 12], and their various ad hoc remedies, hinted at the need for greater semantics to be captured in the OMT.  The substantial interoperability problems encountered by later federations confirmed this need [5].  Semantic checking was the most ambitious phase of our research, given that FOMs and SOMs are not functional specifications that admit semantic checking.  Nevertheless, this research has broken new ground by identifying some semantic nuances that can be captured by the OMT, and proposing semantic checks on FMSs for two types of interoperability problems described in [5].The three-pronged approach towards the verification of FOMs and SOMs is analogous to the type checking applied to Ada packages [13].  FOMs and SOMs are comparable to Ada package specifications, in that they specify the data interfaces of composable software components.  Ada's facility for checking the specifications of individual packages corresponds to consistency checking of FOMs and SOMs, and its checking of the interfaces between packages corresponds to compositional checking of FMSs.  However, we depart from the Ada model with semantic checking, which has no equivalent in Ada because the interface specifications of Ada packages do not carry semantic information.3.  	Phase I : Towards a More Formal View of the Consistency ChecksThis section presents a brief overview of consistency checking.  The aim of this phase of the research was to validate the OMT Test Procedures, which have been expressed in natural language.  Figure 2, below, depicts the check validation framework that was used, which involved the progressive extraction and abstraction of the checks defined in the OMT Test Procedures.  Although this method returned satisfactory results, the lack of formalism of the tabular specifications limited the verification and validation that could be applied to the checks, to largely visual inspection techniques.  Hence, the checks that are specified in the HLA OMT Test Procedures, which we had broken down into simpler Sub-checks in our Tabular Specification, have been expressed in Relational Algebra [14].  This is illustrated in Figure 3, which gives an extract from the full definition of the FOM Consistency Checks, given in  [6].By considering the individual tables of FOMs and SOMs as relations, the consistency checks can be expressed using powerful Relational Algebraic operators over those tables; the benefit of this approach is illustrated in Figure 3.  First, the Tabular Specification of the Sub-checks, using natural language in the second column, clearly provides greater resolution and definition, compared with the statement extracted from the OMT Test Procedures, in the first column.  Secondly, the formal specification of each. OMT Test Procedures Specificationversion 1.3Tabular Specification ofSub-checks(Error if statement is true)Relational Algebraic Expression ofSub-checks"Any object class referenced in any other component (table) of a HLA FOM shall be included in the Object Class Structure Table"Section 3.3, paragraph 6F4.2.3(a): Object class appears in the Attribute Table but not in the Object Class Structure TableAttribute_Table_A [Object_class_name] MINUS Object_Class_Structure_Table [Object_class_name]F4.2.3(b): Object class appears in the Attribute Definitions but not in the Object Class Structure TableAttribute_Definitions [Object_class_name] MINUS Object_Class_Structure_Table [Object_class_name]F4.2.3(c): Object class appears in the Object Class Definitions but not in the Object Class Structure Table (Object_Class_Definitions [Term] RENAME AS Object_class_name) [Object_class_name] MINUS Object_Class_Structure_Table [Object_class_name]Figure 3    Relational Algebraic View of Consistency ChecksSub-check, using Relational Algebra in column three, provides mathematical precision without increasing the detail of the specification.  There is good correspondence between the formal and informal expressions of the Sub-checks.  In effect, the transition from column one to three shows how the HLA OMT Test Procedures have become precise mathematical invariant conditions, in a visible and traceable way.Apart from the inherent benefits of removing ambiguity, the Relational Algebraic specification of the consistency checks enabled clearer reasoning about their overall correctness and completeness.  Moreover,  the Relational Algebraic expressions can be tested by animating them using a Relational Algebra interpreter [15].  Furthermore, the Relational Algebra is sufficiently close to SQL [16] so as to facilitate direct implementation and optimisation of the checks, using relational database technology.4.  	Phase II :  Formulation and Validation of Compositional ChecksThis section gives a brief discussion of compositional checking.  Having demonstrated the utility of the multiple-view framework for validating the consistency checks, we decided to use the same approach to formulate and validate the compositional checks.  This is illustrated in Figure 4.  However, since HLA does not define test procedures to verify the compositional consistency between the FOM and SOMs of a Federation Model Set (FMS), we began with a high-level conceptual view that a FOM represents a subset of the union of its associated SOMs, as depicted in Figure 5.  Compositional checks to verify whether federates satisfied the requirements of a federation, and vice-versa, were then formulated.  To date, 48 compositional checks are proposed for the main FOM/SOM tables, and 12 for the lexicon; these are given in full in [6].The compositional checks were placed in a tabular format, which gave a graphical view of the checks that exposed omissions or redundancies, and facilitated the validation of the checks.  The individual compositional checks were then expressed in Relational Algebra, as with consistency checks earlier, to provide an unambiguous specification of the checks, which also facilitated their animation using a Relational Algebra interpreter.  Implementation of the Relational Algebraic expressions as SQL queries was straightforward.The compositional checks that we have devised can be viewed as a natural extension to the consistency checks defined in the OMT Test Procedures.  Without defined compositional checks, there is no way to verify whether a FMS is well-formed.  No definitive claim is made about the completeness of the compositional checks proposed in [6], although the framework that we applied to formulate and validate the checks has increased our confidence that the checks enforce the conceptual view of a well-formed FMS illustrated in Figure 5.  Moreover, the embodiment of these checks in a Compositional Checker extension to our RMCS HLA Checker Toolset has provided further evidence of the potential utility of automated compositional checking of FMSs.5. 	Validating the Proposed Checks through the Compositional Checker Figure 6 shows the overall architecture of the RMCS HLA Checker Toolset.  The individual FOM and SOM Consistency Checkers, as well as the Compositional Checker, have been completed.  The remaining stage of the Toolset’s development will be to implement the Semantic Checker.  The toolset was constructed using Microsoft Access, with customisation using Visual Basic.  A third-party parser component was configured to import the OMT-DIF files.  Functionally, the FOM or SOM Checker verifies a FOM or SOM, respectively, for internal consistency.  The Compositional Checker component, on the other hand, allows the creation and storage of FMSs, each of which comprises a FOM and up to fifteen SOMs, in OMT-DIF format.  It reports possible compositional errors detected in the FMS.  Figure 7 is a screen shot of the Compositional Checker in execution, depicting the selection of the FOM and SOMs which form the FMS to be verified.We have conducted experimental runs of the Compositional Checker, over some FMSs downloaded from DMSO's Object Model Library.  The results of these trials, first reported in [4], and given in full in  [6], tend to affirm the utility of our approach.  In summary, the experimental findings suggest that:The FOMs and SOMs of some certified HLA-compliant federations contain conflicting declarations that indicate possible interoperability problems.Figure 7   The RMCS HLA Compositional Checker, Showing the Federation Model Set Creation ScreenCurrently, nothing prevents developers from building federates and federations that deviate from their FOMs or SOMs; a formal definition of the relationships between a FOM and its associated SOMs will demand that these relationships be maintained by developers when they implement the federates and the federation. Without defined compositional checks, FOMs and SOMs cannot be used for early-stage interoperability verification.  These findings highlight the difficulty of building consistent FMSs in the absence of defined compositional semantics.  More significantly, they underscore the need for compositional checks to be defined for the HLA OMT.  The fact that an individual FOM or SOM is checked for validity under the OMT Test Procedures strongly argues for at least the same level of verification to be applied to a FMS.6.	Phase III:  Extending the OMT to Enable Semantic CheckingThis section reports on the results and insights of the final phase of our research, semantic checking; a full discussion is given in [6].  As experience in building HLA federations grows, interoperability problems have surfaced that go beyond the scope of HLA, as it is currently defined.  We have considered how the information within a FOM and SOM might be extended, in order to enable automated checking of key behavioural properties across a federation, so that these problems may be detected early in the HLA development process.  The check validation framework, which had proven effective in the previous two phases, was adapted to  produce semantic checks; this is shown in Figure 8, below.Not all entities within a federation need to resolve all aspects of the simulation (e.g. time, space, etc.) in a strictly uniform manner, but in a way that is sufficient and appropriate to the needs of the federation.  It is difficult to make judgements about the appropriateness of a model for an application without an understanding of its inner workings, which the OMT has no means of capturing.  Currently, a FOM/SOM specifies objects and interactions in terms of their static data structures; that is, a FOM/SOM is a data interface specification.  However, abstract qualities, relating to the dynamic behaviour of a federate/federation, could also be defined at this interface, by extending or refining the definition of some aspects of the OMT.  Semantic checks could then be carried out on the ‘extended’ FOMs and SOMs, to verify whether the abstract behavioural qualities at each interface are adequately consistent across the federation.  6.1	Purpose: the Key to Semantic CheckingThe purpose of a simulation is the prime consideration when specifying FOMs and SOMs, and when defining FMSs.  Purpose itself is too abstract a concept to be captured in a FOM or SOM.  In practice, however, FOMs and SOMs cannot be properly specified or understood without a clear view of the simulation's purpose [17].  Our concept of semantic checking applies in the context of a clear and consistent understanding of federation objectives across the federation [18, 19]. 6.2	The OMT's Unused Semantic PotentialA FOM carries more information about a federation than is provided to the RTI at run-time.  The purpose of the additional information is ostensibly "to ensure semantic consistency across a federation" [20, p. 32].  In practice, federate developers depend heavily on prior knowledge and face-to-face meetings to understand the semantics of a federation.  Significantly, certain fields of FOMs and SOMs, namely 'Units', 'Resolution' and 'Update Condition', that could have contributed towards making such meetings more fruitful by the additional semantics they capture, have been largely ignored [6].  This may be attributed to the loose specification of the said fields, which renders virtually every entry legal.  Consequently, the ‘Units’, ‘Resolution’ and ‘Update Condition’ fields are practically useless for verification purposes.  This phase of research focused on these ignored fields, and how to improve their specifications, in order to achieve the capacity for capturing greater semantics, and making them more verifiable. 6.3	Scope and Limitation of the OMTSemantic checking, in the context of our research, is concerned with answering the question: "Will the simulation results be valid?"  Intuitively, this question cannot be answered using FOMs and SOMs alone.  Object models, in the usual object-oriented sense [21], model both data and methods, with a view toward their eventual implementation by a computer program.  HLA object models, on the other hand, only contain data and their properties (data type, units, etc.), with no implementation assumed [22].  This reflects the fact that HLA objects do not always have an underlying computer program, but can represent interfaces to live entities as well.  We have restricted the scope of our research into semantic checking by adhering to the OMT’s current format and level of abstraction.An alternative approach of extending the OMT with a formalism that departs radically from its current format is now discussed, in order to place our adopted approach in context.  The relative levels of abstraction of the OMT, and of Discrete Event System Specification (DEVS) [23], over a simulation model, are illustrated in Figure 9.  At the federate/federation  level, a simulation consists of a dynamic model, data interfaces, and an optional data filtering mechanism that optimises communications across a federation.  At the highly-abstract level of the OMT, data interfaces and data filters can be considered as classes of objects, interactions or routing spaces.  Significantly, the OMT makes no attempt to capture model dynamics.  Zeigler and Sarjoughian [24] have shown that the transition functions of DEVS can be used to model dynamic  behaviour, to supplement the OMT.  However, DEVS is a functional specification language that operates at a much lower level of abstraction than the OMT, and extending the OMT using this results in an unbalanced view of a federation, which is difficult to reason over.  This undermines the deliberate simplicity of the OMT.  EMBED Word.Picture.8  6.4	Making Implicit Assumptions Explicit: Key to Enhancing the OMTThe decision to adhere to the OMT's tabular format ruled out capturing model dynamics, and focused this last phase of our research on identifying abstract, quantifiable properties or assumptions governing the data being exchanged between federates.  Effectively, this was concerned with identifying some of the assumptions that developers make when designing federates, and making those assumptions explicit, through a semantically-enhanced OMT [18]. To test this approach, an analysis was made of two interoperability problems described in [5], namely: temporal interoperability and spatial interoperability.  A search was made for quantifiable properties that pertain to these two problem areas.  This led to the refinement of the question, "Will the simulation results be valid?", into two sub-questions, which are discussed in the next two sub-sections; if the response to either of these questions is negative, then potential interoperability problems exist.6.5	Are entities modelled at an appropriate level of 'data freshness' to satisfy federation objectives?Some federates require that the entities they perceive be up-to-date, in order for their own behaviour to be valid.  An example is given in [5] of a Surface-to-Air Missile (SAM) site federate that is ‘destroyed’ because it updates its environmental awareness too infrequently, resulting in an unfair fight with a supersonic aircraft.   The OMT tries to capture ‘up-to-dateness’ through the 'Update Condition' field.  This could hold a static value, a frequency of updates per unit time, or a condition describing when an update should occur.  These values give an indication of a simulation entity's 'freshness', which is the abstract property that 'Update Condition' tries to capture.  The degree of 'freshness' required is determined by the purpose of the simulation, and by the modelling capability of federates within a federation.  Given that not all federations require a uniform update rate among its federates, but allow a degree of variation, we introduce the concept of a 'Range of Update Conditions'.  Figure 10 presents the proposed extensions to the  OMT that would allow ‘data freshness’ to be captured in a FOM or SOM; the greyed portion indicates the current legal values, and are included for backward compatibility.Update TypeUpdate ConditionSemanticsStatic*N/AAttribute value is constant.Periodic<string>Number of updates per unit timeConditional<string>Condition under which attribute value is updatedStrict*<positive integer> / <unit time> | <Boolean expression>Exact update condition; may be expressed as number of updates per unit time, or as a Boolean expression that triggers an update if true.Figure 10    Proposed Extensions to the Attribute Table's Update FieldCheck Check Performed (Error if true)SemanticsSC1.3An Attribute is declared in a FOM with Update_Type = 'Static', and Update_Condition = 'N/A', but is declared in a SOM with Update_Type <> 'Static' or Update_Condition <> 'N/A'.FOM declares that Attribute value should remain constant, but SOM declares otherwiseSC1.4An Attribute is declared in the FOM with Update_Type = 'Strict', but is declared in a SOM with Update_Type <> 'Strict'.FOM declares that Attribute should be updated periodically under strict update conditions, but SOM declares otherwise. Figure 11   Examples of Semantic Checks that Detect Temporal Interoperability ProblemsWith the additional ‘Strict’ and ‘Range’ update types, seven new checks have been proposed, to detect inconsistent assumptions of data freshness between federates; Figure 11 gives examples of these checks, which are given in full in [6].  The level of freshness may be relaxed by widening the range, which may be required to accommodate a slower federate.  The question "Are entities modelled at an appropriate level of 'data freshness' to satisfy federation objectives?", should be asked about federations and federates, when specifying or interpreting the 'Update Type' and 'Update Condition' values for an attribute.  Effectively, the proposed extensions add constraints to the OMT, in order to make a FOM and the SOMs within a FMS more verifiable. 6.6	Are entities modelled with an appropriate level of 'spatial tolerance' to satisfy federation objectives?To ensure a 'fair fight', changes in a modelled entity's spatial attributes (position, size, orientation, etc.) must be perceptible to federates that are in a position to resolve such changes, especially if such changes present a threat, or would normally elicit a reaction.  The OMT captures this property in the 'Resolution' field, which defines the smallest value that can be added to, or subtracted from, an attribute value, and reflect a change in that value.  The 'Resolution' field gives a measure of the granularity of the spatial attributes of simulation entities.  When federates of variable resolution are composed together, a more useful abstraction is 'spatial tolerance', or how much variation in resolution a federation can tolerate before it breaks down.  In order to capture 'spatial tolerance' in FOMs and SOMS, we propose the concept of a 'Range of Resolutions'.  Figure 12, below, illustrates one way to extend the OMT in order to capture this concept in a FOM or SOM.  A ‘Resolution Type’ can be defined to constrain the ‘Resolution’ field, thereby making it more amenable to automated verification.  Consequently, six new checks that can detect spatial interoperability problems have been proposed in [6]; examples are given in Figure 13.Like 'data freshness', the degree of 'spatial tolerance' allowed is determined by the purpose of the simulation, and by the modelling capability of federates within the federation.  Federations that require highly accurate results would specify a uniform resolution across the federation, or a very narrow range of resolutions.  Federations with greater spatial tolerance would specify a wider resolution range, possibly admitting more federates, in exchange for a larger margin for error.  Hence, the question "Are entities modelled with an appropriate level of 'spatial tolerance' to satisfy federation objectives?", should be asked of federations and federates, when specifying or interpreting the 'Resolution' or the proposed 'Resolution Type' values for an attribute. Resolution_TypeResolution SemanticsFixed<numeric value> Federation/federate expects attribute value to be at a  fixed resolution levelRangen1 - n2 where n1 & n2  are positive integers and n1 < n2Federation/federate expects attribute value to be within an allowed range of resolutions'N/A''N/A'Resolution does not apply to the attributeFigure 12  Proposed Extensions to the Unit and Resolution Fields of the OMTCheck Check Performed  (Error if true)SemanticsSC2.3An Attribute is declared in the FOM with Resolution_Type = 'Fixed', but is declared in a SOM with Resolution_Type other than 'Fixed'. FOM declares attribute value resolution to be fixed, but SOM declares otherwise.SC2.4An Attribute is declared in both FOM and SOM with Resolution_Type = 'Fixed', but the corresponding resolution values in FOM and SOM are different. Both FOM and SOM declare attribute value resolution to be fixed, but FOM and SOM do not agree on the resolution value (granularity).Figure 13  Examples of Semantic Checks that Detect Spatial Interoperability ProblemAs with consistency checks and compositional checks, outlined earlier, the proposed semantic checks have been formally specified using Relational Algebra.  This also gives assurance that the checks could be implemented in SQL.  However, since FOMs and SOMs that incorporate the proposed OMT extensions do not exist, we have left the actual implementation of the checks in a checker tool for future work.6.7	Tolerance Promotes Interoperability'Tolerance' is a useful abstraction when composing something from several components of less-than-perfect fit.  In the established engineering disciplines, 'tolerance', normally specified by a range, is a standard parameter of electrical, mechanical or structural components.  To prevent misuse, tolerance ranges are clearly visible on components or in their accompanying documentation.  Similarly, to prevent federate misuse, tolerances in 'data freshness' and 'spatial resolution' should be made explicit in FOMs and SOMS.  Significantly, the approach described for capturing 'data freshness' and 'spatial tolerance' in FOMs and SOMs could be used to address the more general problem of specifying 'tolerance' for other numeric attributes. 7.	ConclusionsIn light of the results of our research, we draw the following conclusions:The formal specification of the checks specified in the OMT Test Procedures validated those checks, and revealed holes in the OMT Test Procedures.  Moreover, the Relational Algebraic expression of the checks provides an unambiguous specification of the checks that is useful for tool builders and researchers. Checks that verify the compositional compatibility of FOMs and SOMs within a federation need to be defined.  Their absence gives rise to problems that could hamper the development of HLA federations.The multiple-view framework for validating FOM/SOM checks has proven effective and adaptable; it was used, not only to validate the derived consistency checks, but also to formulate and validate compositional checks and semantic checks. Relational Algebra has proven to be a useful formalism with which to define the HLA OMT from which consistency and compositional checks can be derived.  The abstract expressions with which such checks are expressed lend themselves well to verification and validation through animation, and direct implementation in SQL.The OMT could be enhanced at its present level of abstraction by adding semantic features to existing tables, in order to quantify certain abstract qualities, which relate to the dynamic behaviour of a federation and its federates.  These semantically-extended tables could help to ensure a more uniform view of entities and interactions across a federation, and support early-stage automated checking for interoperability problems.8.	Future WorkThe logical extension of our research would include the following:Investigation of other interoperability problems reported by the HLA community, to identify behavioural aspects that can be abstracted, quantified and captured in semantic extensions to the OMT.Formulation of semantic checks, in addition to those proposed in [6], that verify the coherence of the extended semantics of FOMs and SOMs, and validation of these checks via the framework illustrated in Figure 4.Development of a Semantic Checker to complete the RMCS HLA Checker Toolset, as identified in Figure 6.Furthermore, given that HLA FOMs/SOMs and CORBA IDL specifications are similar in many respects, and  experiments by Gang and Lyu [25] have demonstrated that inconsistent IDL specifications result in low interoperability between CORBA applications, we suggest that our HLA-based research has particular relevance to the CORBA community.  The research of others has demonstrated the feasibility of consistency and compositional checking on non-standard, semantically-enhanced versions of CORBA IDL specifications [26].  Therefore, our work offers the opportunity to define verification checks for CORBA IDL specifications, using the method for establishing checks devised and applied in our research.  The formal specification of the derived checks could constitute the 'CORBA IDL Test Procedures', which could serve a similar authoritative purpose as the OMT Test Procedures.  These CORBA IDL Test Procedures could then become the basis for the construction of checker tools for the CORBA community.9. 	References[1]	“HLA Object Model Template”, Version 1.3, DMSO, 5 Feb 1998.[2]	Horst, M.,  “Test Procedures for the HLA OMT Version 1.3”, Georgia Tech Research Institute, 6 April 1998. [3]	Morales, M. C., Moulding, M. R. & Newton, A. R., “Improving the Verification of Synthetic Environments: Towards a More Rigorous Approach for the Automated Checking of HLA Specifications”, Spring 99 SIW (Paper #171).[4]	Morales, M. C. & Moulding, M. R. "Improving the Verification of Synthetic Environments: Advanced Checking of HLA Specifications across a Federation”, Spring 00 SIW (Paper #076).[5]	Dahmann, J., Salisbury M., Turrell C., Barry P. & Blemberg P., "HLA and Beyond: Interoperability Challenges", Fall 99 SIW (Paper #073).[6]	Morales, M. C. “Early-stage Verification of Interoperability within HLA Federations using FOM and SOM Checks”, PhD Thesis, Cranfield University/Royal Military College of Science, Shrivenham, UK, August 2000 (supervisor Prof. M. R. Moulding).[7]	Kindrick, J.D., et al.  “Improving Conformance and Interoperability Testing.  StandardView, Vol 4, No 1. March.  Pages 61-68.[8]	Malek, M. and Dibuz, S. “Pragmatic Method for Interoperability Test Suite”.  Proceedings of the 24th EUROMICRO Conference.  Vasteras, Sweden. August, 1998.  Pages 838-844.[9]	Platform Protofederation Lessons Learned Document.  Technical Report.  TASC, Inc.  1996.[10]	Joint Training Federation Prototype (JTFp) Final Report.  Aegis Research Corp.  Huntsville, AL.  December, 1996.[11]	Lewis, C.  ‘Engineering Proto-federation Evaluation of the High Level Architecture Developed by the Defense Modeling and Simulation Office’.  Mitre Corp.  Bedford, MA.  January, 1997.[12]	Ogren, J.  “The Analytical Community and the High Level Architecture: A Happy Marriage”.  Spring 97 SIW  (Pages 129-138).[13]	Sommerville, I., and Morrison, R. “Software Development with Ada”,  Addison-Wesley, 1987.[14]	Date, C. J. “An Introduction to Database Systems, Vol. I", 5th ed., Addison-Wesley, 1990.[15]	LEAP (a public-domain Relational Algebra interpreter), version 1.2.5, 1999. http://www.dogbert.demon.co.uk/leap.html/[16]	Pratt, P.J., “A Guide to SQL”, 2nd ed. 1991.[17]	Pratt, S., et al.  “Starting Points for Representing Humans within the High Level Architecture”.  Fall 99  SIW (Pages 523-529).[18]	Garlan, D. et al.  “Architectural Mismatch: Why Reuse is so Hard”.  IEEE Software.  Vol 12 No 6.  November. Pages 17-26.[19]	Igarza, J.L., and Dugone, T.D. “The WARRIOR/ELYSA Experience: A FEDEP Use Example”.  Spring 00 SIW (Pages 876-884).[20]	Kuhl, F. et al.  “Creating Computer Simulation Systems”.  Prentice-Hall, 1999.[21]	Rumbaugh, J. et al.  “Object-Oriented Modeling and Design”.  Prentice-Hall, 1991.[22]	Lutz, R. “A Comparison of HLA Object Modeling Principles with Traditional Object-Oriented Modeling Concepts”.  Fall 97 SIW.[23]	Zeigler, B. et al.  “Theory of Modeling and Simulation”.  Academic Press, 2000.[24]	Zeigler, B. P., & Sajoughian, H. S., "Support for Hierarchical Modular Component-based Model Construction in DEVS/HLA." Spring 99 SIW (paper #066).[25]	Gang, X., and Lyu, M.R.  “Testing, Reliability and Interoperability Issues in the CORBA Programming Paradigm”.  Proceedings of the Sixth Asia-Pacific Software Engineering Conference.  Takamatsu, Japan.  December, 1999. Pages 530-537.[26]	Ning, J.Q.  “Component-Based Software Engineering”.  Proceedings of the Fifth International Symposium on Asessment of Software Tools and Technologies.  Pittsburgh.  June, 1997.  Pages 34-43.Author BiographiesMajor MICHAEL C. MORALES is a serving officer of the Armed Forces of the Philippines, and is a member of the Computer Science faculty of the Philippine Military Academy.  His PhD was on improving the early-stage verification of the interoperability HLA-based simulations. MICHAEL R. MOULDING is Professor of Software Engineering, and Head of the Computing Information Systems Engineering Group, at RMCS.  Over the past decade his main research activities have been in the fields of high integrity software, requirements analysis, mathematically formal specification techniques, and the verification, validation and accreditation of Distributed Interactive Simulation (DIS) systems.  Currently, his main activities are associated with Battlespace Digitization, and he is Chairman of a new MSc course in this topic at RMCS.  	We define a Federation Model Set (FMS) as the FOM and the SOMs that constitute a federation.