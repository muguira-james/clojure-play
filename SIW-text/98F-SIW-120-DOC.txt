Migration of MLRS Family of Simulations to HLA Using a HLA Based PrototypeBernard D. Granger Jr.MLRS Project OfficePEO Tactical MissilesSFAE-MSL-ML-TR-ARedstone Arsenal, AL 35898(256) 842-6255   DSN 788-6255granger-bd@redstone.army.milJeffrey A. BrownCarla X. GladstoneJohn K. McFeeDavid D. TarkowskiThe MITRE Corporation1500 Perimeter Parkway, Suite 310Huntsville, AL 35806(256) 830-2606jbrown, carlaxg, jmcfee, or dtarkows@mitre.orgKeywords:HLA, migration, prototyping, C2ABSTRACT:  The Army’s Multiple Launch Rocket System (MLRS) Project Office (PO) has been developing a family of distributed simulations to support applications across all of the M&S domains.  The next generation of simulations will be HLA compliant and interoperable with Fire Support simulations and live systems.  This family of simulations will be implemented within the MLRS Advanced Tactical Simulation (MATS).  MATS consists of MLRS fire direction and fire control system C2 simulations, ground vehicle simulations, munition and submunition simulations, the MATS Runtime Environment (MRTE), and a suite of support modules and external communication interfaces. The current conceptual MATS design approach is for each instantiation of a MATS application to be essentially an HLA federation of selected MATS components.The requirements analysis and definition phase of this MLRS M&S upgrade effort involves the development of a Windows-based MATS prototype and the conduct of several experiments to provide familiarization with RTI concepts and to address MATS design issues.  The prototype consists of MLRS components, simulated by surrogates, which have very limited functionality, but closely approximate the data flow and timing requirements of the MLRS component being emulated.  The end result will be a protofederation consisting of surrogates approximating the outward C3, ground movement, flight state, dispense, and submunition impact and kill functionality of the MLRS components.The goal of MATS is to allow the MLRS PO or external users to select from the MATS those simulations which best support their objectives and assemble them into a specific MATS application/product.  It is envisioned that the MATS architecture will provide a broad framework that will enable simulation components and support modules to be readily reconfigured to support Research, Development, and Acquisition applications, Advanced Concept and Requirements applications, and Training, Exercises, and Military Operations applications.1.	IntroductionThe emerging recognition of the value of modeling and simulation within the Department of Defense [1] with regard to its application over the life cycle of a system has focused the spotlight on the Materiel Developers.  Many developers have long recognized the value of modeling and simulation in addressing design analysis, test planning, and test analysis to mitigate performance, cost, and schedule risks.  The emphasis on Simulation Based Acquisition now challenges project managers, product managers, and technology demonstration managers to broaden their acquisition view by applying existing simulation methods to new areas and to explore new simulation methods to address all areas.  Investments in the development and application of M&S now assume a more central position in the materiel developer program planning and involves input and review from each program area.  It is this increased scope of M&S as well as the policies and mandates that govern M&S that demands that comprehensive, consistent, and coordinated plans be prepared for the development, testing, fielding, and support of M&S tools.  In particular, the requirement for HLA compliance [2] for existing and new simulations forces the simulation manager to carefully consider the resource consequences of continuing support of non-HLA simulations while planning for and modifying/developing HLA compliant simulations.  The migration of existing and new simulations to the HLA standard must be balanced between the needs of current users and development programs, the near term need for HLA interoperability, the long term goal for HLA compliance, and the availability of resources.  This paper discusses the MLRS Project Office’s approach to allocating its resources to achieve several goals.  These goals include migrating the family of distributed simulations to the HLA standard while maintaining its commitments to the development, support, and fielding of test and training simulations that are currently available to the Army Field Artillery community.  Issues such as the selection of computer platforms, operating systems, software languages, simulation architectures, and their influence on the migration strategy are discussed.1.1	MLRS OverviewThe Multiple Launch Rocket System (MLRS) was designed to supplement artillery cannon weapons available to the U.S. division and corps commanders. System requirements called for delivery of a large volume of firepower in a very short time against critical, time-sensitive targets such as enemy artillery and air defense batteries.  The MLRS system is composed of a launcher which fires free flight rockets or guided missiles that deploy either grenades or smart submunitions.  The launchers are organized into platoons, batteries, and battalions within an Army Field Artillery Brigade and currently communicate using an advanced version of the TACFIRE digital message protocol on SINCGARS radio nets.  The MLRS System of Systems is depicted in Figure 1.  The components and the mission of the MLRS system has evolved since its IOT&E in 1983 and new launchers are in development and in planning along with new rockets, missiles, and submunitions as well as the incorporation of AFATDS message protocol in accordance with its migration to the Joint Technical Architecture.In 1994, the MLRS Project Office recognized that the interoperability of this system within the Army and DoD would be significantly enhanced with the development of modeling and simulation tools to support requirements analysis, design, test, and training within a distributed simulation environment.  It initiated the management process, program and technical planning and M&S development that ultimately would be labeled as Simulation Based Acquisition.  The Project Office partnered with TRADOC, the Redstone Technical Test Center (RTTC), and the Missile Research, Development, and Engineering Center (MRDEC) in the rapid development and application of simulation prototypes to enhance testing and training while exploring implementations within DIS and eventually the HLA.  The overall simulation effort has been designated the MLRS Family of Distributed Simulations (MFODS).1.2	Overview of MLRS Family of Distributed SimulationsA PC/Windows based simulation of a MLRS launcher was developed in 1995 to support user evaluation of the C3 system that would service future MLRS components.  This Tactical C2 Launcher simulation interfaced with a SINCGARS radio and communicated with the Battery Fire Direction System using actual TACFIRE digital messages.  The simulation was used to represent a battery of nine launchers and emulate the digital message traffic during the conduct of dry firing missions with live firing units.  The purpose of the simulation was to provide an accurate and realistic communication environment to the live Fire Direction Centers under evaluation.  This PC/Windows based simulation was enhanced with additional message capabilities and tactical movement capabilities and used in the ATACMS Block IA Operational Test in 1996 to represent 24 launchers alongside 3 live launchers.  Two 96-hour field exercises were conducted with a 99% message transmission/reception success at the launcher simulation.As a result of the successful application of the launcher simulation to the testing environment, the US Army Field Artillery School and the TRADOC System Manager for Rockets and Missiles, in 1996, initiated sponsorship of the development of a prototype Command and Control Tactical Trainer (C2TT) and joined with the MLRS Project Office’s development of its MLRS Family of Distributed Simulation (MFODS).  The objective of the MFODS is to simulate the tactical movement and conduct of fire missions of a MLRS Battalions that consisted of Battalion and Battery Fire Direction Systems, MLRS Launchers, rocket/missile flyouts, submunition dispense and detonation.  MFODS is to interoperate with live or simulated higher C2 echelons using tactical message protocols and tactical radio nets or using distributed simulation information protocols in support across all simulation domains.  C2TT is being developed alongside MFODS specifically to address training of Fire Direction System operators at Platoon/Battery and higher C2 echelons and to stimulate staff training at Battalion and above.  Depending on the training audience, C2TT is configured with a Scenario Generator to control and drive the training exercise, a live tactical C2 system, a launcher, battery, or battalion simulation to represent the responding unit, and an After Action Report analysis package.  Examples of two C2TT configurations are presented in Figure 2 to demonstrate Battalion and Battery FDS operator training.  To support C2TT training requirements, the MFODS launcher simulation was enhanced to include the decisions of a ‘smart crew chief’, maintenance faults, launch failures, and ammunition resupply in order to stimulate battalion staff actions.  The evolution of the MLRS will require a simulation environment and components with the ability to select munition type (rocket/missile plus submunition), launcher variant, C2 system, and unit configuration.  The MFODS component concept is shown in Figure 3.  In addition, interoperability requires compliance with current and planned digital message sets, compliance with the Joint Technical Architecture, and compliance with the High Level Architecture.  These developmental requirements in conjunction with current needs to support test and training, have resulted in the development of a coordinated strategy to migrate simulations which are disparate in operating system implementations and platforms to a single common operating system, platform, and simulation architecture.  Figure 1.  MLRS System of SystemsFigure 2  MLRS Command and Control Tactical Trainer (prototype)Figure 3  MLRS Family of Distributed Simulation (MFODS) Components2.	Simulation Environment BackgroundThe MFODS software, originally designed for the DIS environment, was developed within an UNIX operating system on a Silicon Graphics computer.  Its role was seen to support laboratory based exercises.  On the other hand, C2TT and its field test predecessors was developed in a PC/Windows95 environment due to the eventual need for multiple installations within tactical MLRS units as well as test and training locations.  In order to establish a common simulation framework for MFODS and C2TT, the MLRS Project Office decided that a single or multiple processor PC compatible platform running Windows NT would be the most cost effective alternative.  The new HLA-based simulation would be known as the MLRS Advanced Tactical Simulation (MATS).  A conceptual description of MATS is provided in Figure 4.As a minimum simulations belonging to the MATS will:•	interface with the MRTE to facilitate synchronization, control, and communication with interacting MFODS components•	act upon information provided by the MRTE in a timely fashionThis proposed architecture will consist of the MLRS simulations, a suite of support modules and external interfaces, and the MATS Runtime Environment (MRTE).  The MRTE will provide a set of common services to allow the selected MATS component simulations to interoperate with each other, the support modules as required, and the HLA RTI.  Each of the individual MATS component simulations will be developed with the appropriate internal interface capabilities to allow interaction with and control by the MRTE.  The MRTE will be developed with HLA RTI concepts in mind so that the goal of MATS HLA compliance is supported.  The MRTE will obey all HLA federate rules and provide function calls to allow the MLRS federate to interact with the MATS based HLA federation RTI as required.As a minimum the MRTE will:•	provide a standard interface for interacting MATS components•	manage synchronization, communication between, and control of all interacting MATS components•	provide consistent information, with appropriate fidelity, in a timely fashion, to all interacting MATS•	be capable of sending, receiving, and interpreting PDUs to/from interacting MATS components•	support all required communication modes and protocols between interacting MATS components•	support various MATS configurations, including partial or total distribution of MATS components•	be developed with the goal of becoming HLA compliant•	allow seamless interfacing with the HLA RTIFigure 4  Conceptual Description of the MLRS Advanced Tactical Simulation (MATS)3.	StrategyThe objective of the migration strategy is to maintain current capability to support test, training, system development, warfighting, and conceptual study exercises, while incrementally implementing a new simulation architecture.  The migration steps include the following activities: •	Rehost existing simulation software to multiple PC platforms running Windows NT; •	Develop a DIS Server to provide DIS interfacing services for the Tactical C2 Simulations; •	Develop new simulations in a common language; •	Conduct experiments with the HLA Run Time Infrastructure to establish MATS design requirements; •	Incorporate an HLA gateway into MFODS to provide a near term HLA capability; •	Redesign existing simulations into the MATS architecture; •	Implement initial version of RTI services into MATS; and •	Implement final version of RTI services into MATS.  The three evolving simulation architectures are presented in Figure 5.4.	MATS Prototype Experiments4.1  OverviewThe development of the objective MATS architecture is an evolutionary process that can be aided and accelerated by the development and utilization of an MATS prototype.  This prototype will be utilized to investigate and ultimately determine the architectural and functional requirements for the MATS including the associated MATS Run-Time Environment (MRTE).  This prototype will provide a learning tool during the during the development phase, and when mature will be utilized as a testbed to support the development of future MATS applications.The completed MATS prototype will be used to determine and specify:  •	MATS architectural and functional requirements•	MATS component architectural and functional requirements•	MRTE architectural and functional requirements•	requirements for migrating existing MLRS simulations and support modules to the MATS architectureIn addition, the MATS prototype will be used to support specifying, designing, and developing:•	new MATS components (i.e.; HLA federates)•	MATS applications (i.e.; HLA federations) incorporating MATS simulation components•	MATS support modules•	MATS application (i.e.; federation) development toolsThe development and execution of the MATS Prototype effort will also serve as an experiment to identify and resolve certain issues related to the objective MATS design.  Currently identified issues:•	Use of the HLA RTI as a basis for the method of allowing interoperability between MATS simulation components and support modules.•	Selection of HLA RTI features for incorporation as the MRTE•	Choice of whether to have the HLA interface code native to each MATS component, or instead use a common middleware for each MATS component•	Degree of shared capabilities between MATS components and other federation members.  This decision affects the development of the published SOM•	Choice of which MFODS software components to be retained "as is" and which to be rewritten for MATS•	How to facilitate tactical and simulated communications between MATS components, and between the MATS and other federation members.•	Definition of an executive to control initialization of MATS components.•	Performance and other implications of interfacing the MRTE with the HLA RTI4.2  ApproachCurrently, it is envisioned that the MATS architecture will provide a broad framework that will enable simulation components and support modules to be readily reconfigured to support Test and Evaluations, Requirements/Concept Development, Training, and Demonstration/Exercise.  It is intentional that these architectural objectives mirror those of the DoD HLA, specifically training, contingency planning, analysis, and acquisition.  The current conceptual MATS design approach is for each instantiation of a MATS application to essentially be an HLA type federation of selected MATS components and support modules.  Based upon this premise the MATS prototype will include the same basic components as the DoD HLA.The initial prototype will utilize the DoD HLA RTI VERSION 1.0 as the MRTE.  MATS components will be emulated by surrogates which will be developed as a part of this effort.  These surrogates will have very limited functionality, but should closely approximate the dataflow and timing requirements of the MATS component being emulated.  This approach should allow for addressing issues associated with interfacing the MATS component to the MRTE, as well as allowing the development of a SOM which should closely approximate the SOM for the MATS component being emulated.  The initial prototype application will use as a minimum two surrogate MATS components, as shown in Figure 6.The approach to developing the initial MATS prototype will include as a minimum the following activities:•	Acquisition and installation of the DoD HLA RTI VERSION 1.0 (or latest version available) which will be used as the initial MRTE•	Defining an initial MATS prototype application (i.e.; federation)•	Defining and Developing surrogates for MATS components representing battalion, battery, launcher, etc. (i.e.; federates that will interact in the federation execution)•	Developing the Simulation Object Model(s) (SOM) for the surrogates that will interact in the MATS prototype application•	Developing the Federation Object Model (FOM) for the MATS prototype application•	Execution of the initial MATS prototype application (federation execution)•	Analysis and reporting of the results and findings associated with the initial MATS prototype application executionThe initial MATS prototype application execution follow on activities should include:•	Defining additional MATS prototype applications•	Refining the MATS surrogates representing battalion, battery, launcher, etc. (i.e.; federates that will interact in the federation execution)•	Replacing MATS surrogates with MLRS simulations and support modules•	Interfacing with another RTI over a WAN•	Porting to a WINDOWS NT environmentFigure 5  Migration of MLRS Simulations to the HLAFigure 6  MATS Prototype and Surrogate Component SimulationsConclusionsTo date, the MATS Prototype development effort has produced a proto-federation containing five federates.  The federation executes on two personal computers connected by a LAN, using RTI version 1.0, release 3.  Each federate contains two components, a surrogate simulation of an MLRS element and a shared-library interface to communicate with the RTI.  A shared-library approach allows the interface to encapsulate the details of RTI interactions and isolates the surrogate software from changes resulting from future releases of the RTI.  The surrogates are low-fidelity representations of MLRS Battery, Platoons, and Radio Communications for basic command and control functions.The prototype approach to migrating the MLRS Family of Simulations to a HLA compliant MATS capability has resulted in a number of lessons learned as well as providing a basis for developing requirements for the objective MATS architecture.  In particular, the separation of each federate into a surrogate-plus-interface will facilitate re-use of simulation software developed outside the HLA/RTI framework.  Continued prototyping is expected to produce a maturation of the MRTE and the MATS simulation components that will require a minimum amount of code rewrite when they are finally integrated into the overall MATS simulation architecture.References[1]	Under Secretary of Defense for Acquisition and Technology, “Department of Defense Modeling and Simulation (M&S) Master Plan, DoD 5000.59-P,” October 1995.[2]	Under Secretary of Defense for Acquisition and Technology , “Memorandum, DoD High Level Architecture (HLA) for Simulations,” September 1996.Author BiographiesBERNARD GRANGER is the Simulation and Analysis Team Leader for the MLRS Project Office at Redstone Arsenal, AL. He is responsible for the development of all simulations related to the MLRS Family of Distributed Simulations (MFODS) and the migration of those simulations to the High Level Architecture.  He is also responsible for the development and implementation of Simulation Based Acquisition plans for the Project Office.JEFFREY BROWN is a Senior Defense Systems Engineer for the MITRE Corporation in Huntsville, AL.  He is responsible for the definition of C2 system requirements for MLRS simulations and is a technical adviser to the MLRS M&S IPT.  He is the task leader for the requirements definition effort to develop the MLRS Project Office’s HLA-based family of distributed simulations.CARLA GLADSTONE is a Senior Software Applications Development Engineer for the MITRE Corporation in Reston, VA.  She is responsible for building and analyzing models and developing simulation applications.  She contributed to the design and implementation of the MLRS HLA-based simulation prototype.JOHN MCFEE is a Lead Software Systems Engineer for the MITRE Corporation in Huntsville, AL.  He is responsible for the application of new simulation technologies to address battle management and C2 issues.  He is a technical adviser to the MLRS M&S IPT on simulation and software technology topics.DAVID TARKOWSKI is the MITRE Project Leader for MLRS Project Office activities in Huntsville, AL.  He is responsible for the formulation of MLRS Simulation Based Acquisition strategies and provides technical oversight of the overall MLRS distributed simulation development and exercise effort.