FEDERATION MANAGEMENTWITHINSBA-BASED COLLABORATIVE ENVIRONMENTSLawrence B. JobsonBall Aerospace & Technologies Corp8381 Old Courthouse Road, Suite 340Vienna VA 22182-3818703-917-9125ljobson@ball.comLawrence J. FilippelliBall Aerospace & Technologies Corp8381 Old Courthouse Road, Suite 340Vienna VA 22182-3818703-917-8788lfilippe@ball.comKeywords: Agents, Collaboration, High Level Architecture, Simulation Based AcquisitionABSTRACT: HLA-based Federations are viewed as a resource for a SBA-based Collaborative Environment (CE). To maximize the value that HLA-based Federations have to any CE there must be a comprehensive Federation Management framework that is highly integrated into a CE. This highly-integrated Federation Management framework must implicitly capture all the HLA-based Federation Development and Execution Process (FEDEP) model as a Federation authoring and control process within the highly-iterative CE context. Recent CE prototyping within the Distributed Knowledge Environment (DKE) program has developed a concept for integrating FEDEP into a CE that employs Run-Time-Adaptive Federation Management Agent (RTAFMA).  The DKE program views RTAFMAs as foundational FEDEP “Business Objects” within a CE. This paper will: (a) present the functional components of a RTAFMA within the context of a baseline CE Reference System, (b) show why the RTAFMA is integral to the seamless interoperation of HLA-based Federations within a CE, and (c) discuss lessons learned to date about the scope of the RTAFMA languages that the RTAFMA must support in order to be forward compatible with emerging COTS solutions for intelligent agent software.  The paper will characterize the set of RTAFMA languages that enable agent-to-agent Transaction Negotiation, agent-to-enterprise resource Transaction-Processing, and agent-to-enterprise resource query/archival.  Lastly, the paper will associate the RTAFMA’s programmable methods with the required processing components of the FEDEP.  The work presented in this paper is part of on-going SBA implementation experimentation in support of the DKE Program in USD(L) and the Collaborative Enterprise Environment (CEE) program in AFRL.IntroductionThis paper presents in-progress work on the formulation of a class of Run-Time Adaptive Federation Management Agents (RTAFMAs).  To present this work several assertions are necessary.  First, we assert that the realm of Federation Management can be partitioned into six distinct “workspaces” that support end-user interests in (1) planning, (2) design, (3) development, (4) deployment, (5) execution, and (6) post-execution of HLA-based exercise activity. We also assert that these six workspaces can be supported by a common processing framework whose business objects can be programmed via procedural scripts to fully represent the FEDEP model. Finally, we assert that our RTAFMAs are well suited to capture and embed the FEDEP within a Collaborative Environment (CE).We define our RTAFMAs to be autonomous software objects that perform tasks on behalf of humans or other agents.  Our RTAFMAs may be mobile but most importantly, their behavior can be modified during run-time and they can converse using RTAFMA-role-dependent “workspace” dialects.  Our RTAFMAs know how to interpret and transform native workspace directives into executable work procedures and subsequently, into executable resource transactions.The goal of this paper is to describe the current state of our RTAFMAs in the context of an SBA-based DKE/CEE Reference System being implemented in part by Ball Aerospace & Technologies Corp. (BATC) for the DKE and CEE Programs. DiscussionThere are six foundational statements that drive our RTAFMA formulation:The primary purpose of a SBA-based Collaborative Environment (CE) is to support the lifecycle management of either real or virtual war-fighter products.A CE must have an underlying processing model that consistently supports the execution of all classes of work on these war-fighter products.Development of an HLA-based exercise should be considered a war-fighter product development process since the war-fighter uses the exercise components in a military context.Development of these HLA-based exercise products must be done concurrently with the development of the war-fighter’s mission products.A reusable set of RTAFMAs can be built and supervised to execute production work tasks and workflow that is required to advance the lifecycle of war-fighter mission products.Developing distinct RTAFMA dialects in association with distinct exercise development workspaces will promote a high degree of community acceptance and reuse.The structural model for our RTAFMAs is patterned after the recommendations in Reference [1]. The current implementation for our RTAFMAs is based on the current scope of the DKE/CEE Reference System. Figure 1 presents the functional components of our DKE/CEE Reference System as they support Exercise Management for an HLA-based Exercise Activity Space. An HLA-based Exercise Activity Space by definition contains all the objects/entities that may from time-to-time persist or be configured into an HLA-based exercise. The process model that underlies the DKE/CEE Reference System is based on the “Means-Ends Hierarchy” paradigm of Reference [2].Figure 1 – Exercise Management Domain CharacterizationFigure 1 illustrates the fact that the DKE/CEE-based Means-Ends Hierarchy completely captures the essentials of the FEDEP through the implementation and integration of a set of well-defined workspaces for the planning, design, development, deployment, execution, and post-execution of a general class of distributed engineering exercises.  The DKE/CEE Reference System explicitly employs an abstraction of distributed engineering exercise work as an object within the reference system and, hence, the RTAFMA can operate on production work objects as its core activity. Since production work is represented within the DKE/CEE Reference System as an object, its methods can be declared and, hence, be discovered and remotely invoked/executed by RTAFMAs. An additional foundational element of the current DKE/CEE Reference System is the accommodation for on-line adaptation of the DKE/CEE Reference System production work objects. Our RTAFMAs know how to send and receive messages to execute production work which is manifest in run-time adaptable  procedure/task scripts (See Section 2.2). This accommodation for on-line production work object adaptation enables the HLA-based exercise production work processes to evolve concurrently with the maturation of the exercise products and its customers. This evolutionary process promotes a true collaborative design practice where the tools (e.g., FEDEP-driven HLA Federations) evolve as the engineering process that is using these federations evolves.SBA-based Collaborative Environment (CE) Reference SystemThe DKE/CEE Reference System is an implementation of the SBA Reference Architecture.  It is comprised of a set of JAVA-based components and a CORBA-based infrastructure in support of its distributed object computing paradigm.  This Reference System is a distributed engineering design system that is currently being enhanced by numerous pilot projects associated with the DKE and CEE programs and corporate IR&D projects on going at Lockheed Martin Missiles and Space, BATC, SAIC, and Boeing Aircraft Company (St. Louis).Figure 2 – DKE/CEE Reference SystemFigure 2 illustrates the current DKE/CEE Reference System.  Figure 2 shows that this Reference System is based on a “N-Tier” Enterprise Component processing architecture, a HTTP/CORBA/DCOM-based infrastructure, and a HLA-compliant Exercise Activity Adapters.  The DKE/CEE Reference System is fully capable of supporting lifecycle management of the HLA-based engineering exercise.  This is due to the implementation of fundamental processing components for object authoring, object persistence management, workspace execution management, and interface to HLA-based Exercise Activity Space.  Figure 2 also shows the processing spaces where agents “live” within the DKE/CEE Reference System.Figure 3 illustrates an overview of the RTAFMA-based processing interactions that are inherent to the DKE/CEE Reference System.  Figure 3 clearly shows that Exercise User Agents perform work directly in support of Exercise Users, Workspace Execution Agents perform work directly in support of either Exercise User Agents or Exercise Resource Agents, and Exercise Resource Agents perform work in association with Exercise Resource Procedures. The RTAFMA hierarchy depicted in Figure 3 promotes extensibility, openness, and ease of use due to the fact that clients can specify high-level tasking objectives to the “system” and not need to know who is working on his tasks.Figure 3 – Baseline RTAFMA Interactions in the DKE/CEE Reference SystemCurrently, the DKE/CEE Reference System is operating at Wright Patterson AFB in support of the CEE technology prototyping. Section 3 discusses the lessons learned to date surrounding the use of the RTAFMAs within prototype distributed collaborative enterprise environments.  References [3] and [4] describes more details of the DKE/CEE Reference System.RTAFMA Roles and Behaviors CharacterizationOur RTAFMAs are structured to perform roles and have behaviors in direct correspondence to the specific instance of a DKE/CEE Reference System workspace to which they are associated. Each workspace encapsulates a working society within which agents can perform programmable tasks associated with the production of HLA-based exercise work.  Figure 3 illustrated how our RTAFMAs interact with exercise resources or other agents in order to execute work. Figure 1 illustrated six workspace types that must be accommodated by our RTAFMA structural model. Within each of these six workspaces our RTAFMA has a base class of Roles and Behaviors which are specialized for the particular work procedures within the workspace. Figure 4 illustrates the set of Roles that our generic RTAFMAs may assume over the course of the distributed engineering exercise activity.  By combining specific role processes and task behaviors, the spectrum of FEDEP processes can be fully represented within an instance of the DKE/CEE Reference System.    Figure 4 – Workspace Mgmt. and RTAFMA Roles within the DKE/CEE Reference SystemThe executable RTAFMA roles shown in Figure 4 are activated within each RTAFMA through the parsing of work directives to which each RTAFMA subscribes.  Figure 4 illustrates that a RTAFMA has the capability to perform roles of task negotiator, executable task procedure assembler, task procedure executor, execution results distributor, and task/procedure destroyer.In concert with the base class set of roles illustrated in Figure 4, the RTAFMAs have a base class set of behaviors whose purpose is to generate DKE/CEE-based method invocations to all the “producer objects” in the DKE/CEE Reference System. Figure 5 illustrates the minimal set of behaviors that any RTAFMA must  have to integrate the roles and behaviors of the RTAFMAs into a cohesive HLA-based exercise management system.Figure 5 – RTAFMA Behaviors within the DKE/CEE Reference SystemAs currently implemented, within the DKE/CEE Reference System, our RTAFMAs are CORBA components that operate on the “Directive” class of agent “Communicative Acts” (See Reference [1]). RTAFMAs send and receive the  invoke_work(work prescription,…) directives.  The work prescription within the body of the invoke_work(work prescription,…) message is interpreted and parsed by the RTAFMA into a pre-established set of procedure scripts which in turn generate work through DKE/CEE producer object method invocations or other invoke_work() directives.  Since the procedure scripts are viewed as data by the system, these scripts can be modified on the fly to initiate new agent or inter-agent behaviors.Lessons Learned and Future DirectionsThe DKE/CEE Reference System has been used to implement a set of RTAFMAs that capture the interactions illustrated in Figure 2.  We have demonstrated that RTAFMAs can be used to build up a FEDEP-like workflow system that can be used to fully manage a HLA-based exercise.  Fundamental to this workflow system are the Means-End paradigm, the distinct workspace processing models, and the authoring/persistent management of the Federation Object Model.  The DKE/CEE generalizes the authoring and persistent management of the FOM in its facility for Exercise Object Model management (see Figure 3).  Over time, we expect that libraries of RTAFMA-based roles/behaviors will be built that will support a robust and highly integrated DKE/CEE-based HLA FEDEP model. One of the attributes of the parsed RTAFMA message is “language”(or dialect) which can be used to enable the RTAFMA to understand a spectrum of Agent Conversation Languages (ACLs) such as KQML. Currently, our RTAFMA understands a custom SBD Tasking Language and JAVA Scripting Language.  Within these two current languages, we are able to effectively execute many of the required FEDEP model processes within the boundaries of the DKE/CEE workspace.  In the long run, the RTAFMAs must expand to accommodate a more complete set of communicative acts (see Reference [1]) in order to have be fully conversant with a broad class of RTAFMA-based system. Lastly, there is a tremendous need for a class of “transacting" behaviors that translate between the common object model space of a DKE/CEE workspace and the legacy exercise resource activity space.  We are planning to expand the behaviors of our RTAFMAs to include a more robust treatment of this translation transaction through collaboration with researchers in the field of Adaptive Ontology (see Reference [5]). Concluding RemarksThe technical concepts for this paper are in part derived from BATC’s on-going RTAFMA-based work on both the DUSD(L)-sponsored Distributed Knowledge Environment (DKE) program being managed by Mr. Gary Jones (detailed from DARPA/TTO) and the AFRL-sponsored Collaborative Enterprise Environment (CEE) program being managed by Mr. William McQuay (AFRL/IF).This paper has highlighted the manner with which the DKE/CEE-based RTAFMAs can be used to support the FEDEP. We believe that both the RTAFMA formalism and the DKE/CEE Reference System are foundational to the desired integration of HLA-based exercise management into the broader context of distributed collaborative engineering.  Taking a standards-based approach toward our RTAFMAs and the DKE/CEE Reference System will enable broad commercial community participation in the RTAFMA maturation process. In the near-term, however, since the DKE and CEE programs have the luxury of more narrowly defining the scope of our workspaces, the current RTAFMA formalism is sufficient for making progress in rapidly prototyping CE technologies.	References[1]  Munindar P. Singh: “Agent CommunicationLanguages: Rethinking the Principles, Computer; December 1998.[2] Rasmussem, Pejtersen, Goodstein, Cognitive Systems Engineering, John Wiley & Sons; 1994[3]  Jobson, CEE/DKE Technology Assessment Report, Ball Aerospace & Technologies Corp; November 1998[4]  Simulation Based Design Architecture Definition Document Beta Release Version, Lockheed Martin Missiles and Space; June 1998[5]  http://www.mcc.com/projects/infosleuth/publicationsAuthor BiographiesLAWRENCE B. JOBSON has over 29 years of technical and managerial (project, program, line, and organizational) experience in the aerospace industry. As BATC’s Advanced Distributed Systems Business Initiative manager, Mr. Jobson is managing the development and integration of innovative Enterprise-wide software systems into “legacy business enterprises”. Mr. Jobson oversees the ADS-based enterprise component solutions associated with Web-/CORBA-based infrastructures, Client/Server Frameworks, Intelligent Information and Knowledge-production services, and Adaptive/Distributed Engineering Product and Process Models. Currently, Mr. Jobson is performing a role as Lead Architect on the Distributed Knowledge Environment (DKE) program for OSD/USD(L).LAWRENCE J. FILIPPELLI has over 26 years of experience in the area of software development related to modeling and simulation, distributed client/server architectures and domain-specific agents. He was the principal investigator for the DARPA-sponsored Simulation Based Design (SBD) program responsible for development of the workflow management components, mediation agent and decision support business logic for intelligent agents. Currently, Mr. Filippelli is working on the development and application of Ball’s agent technology to act as adapters/controllers for legacy applications and for HLA Federations within the context of distributed collaborative engineering and virtual prototyping enterprises. 