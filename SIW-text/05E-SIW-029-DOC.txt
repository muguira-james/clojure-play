SEA4000 Air Warfare Destroyer Modeling and Simulation Definition StudyDr. Gary EisermanVirtual Technology Corporation5510 Cherokee RoadSuite 350Alexandria, Virginia, USA 22312703-333-6209 HYPERLINK "mailto:geiserman@virtc.com" geiserman@virtc.comKeywords:  SEA4000,  Air Warfare Destroyer, Royal Australian Navy, HLAABSTRACT:  In 2004, Virtual Technology Corporation (VTC) completed a Modeling and Simulation Definition Study for the Royal Australian Navy in support of the SEA4000 Air Warfare Destroyer (AWD) Project.  The objective of the study was to articulate a recommended approach for employing Simulation Assisted Acquisition in support of AWD so as to maximize the benefit of M&S to the project across its lifecycle.  This paper will provide a summary of the study’s findings and recommendations, including the recommended implementation and maintenance processes and the notional HLA based federation architecture that was developed to support AWD.1.  Introduction to SEA 4000The SEA4000 Air Warfare Destroyer (AWD) will be developed as a multi-role platform with capabilities in the following mission areas:Area air defence capabilityTheatre Ballistic Missile Defence (TBMD)Surface warfareUndersea warfare Tactical control and coordination of joint and combined forcesProtection of shipping and defence of associated Sea Lines of Communication (SLOC);Maritime/land strikeSupport for forces ashoreCoordinated coalition maritime operations Operations other than war Border controlDisaster reliefMaritime Intercept Operations (MIO).The systems required to meet this multi-role capability will integrate a considerable array of sensor, weapon, command, control and communication components to meet operational requirements described in the SEA4000 Project Air Warfare Destroyer Operational Concept Document and other operational requirement documents. In 2004, Virtual Technology Corporation (VTC) completed a Modeling and Simulation Definition Study for the Royal Australian Navy in support of the SEA4000 Air Warfare Destroyer (AWD) Project.  The objective of the study was to articulate a recommended approach for employing Simulation Assisted Acquisition (SAA) in support of AWD so as to maximize the benefit of M&S to the project across its lifecycle.  The study demonstrated that SAA can provide benefits across the full life-cycle of acquisition and cited a number of examples of cost and schedule savings from other programs. Currently, M&S is applied within the Australian Defence Organisation (ADO) for the following purposes:Concepts and technology evaluationRequirements determinationSystems design and development Supportability and affordability analysisSystems test and evaluationForce designTactics and procedures developmentMilitary operations planning and assessmentTraining. M&S finds effective application for these diverse uses when it is appropriately applied to meet compatible purposes.  One of the lessons learned from the review of prior M&S work is that simulation programmes that begin by building an M&S environment and then strive to match the capabilities of that environment to emerging SAA needs are much less likely to succeed than programmes that have well articulated near, middle, and long term objectives at the outset.  Recognizing this, the study authors recommended that the implementation of an SAA programme should be undertaken in a manner that reflects AWD Project priorities and schedule, which means that the implementation process must begin with AWD operational requirements and be able to support: Determination of AWD operational capabilities suitable for M&S analysisDetermination of level of analysis (engineering approach)Identification of required M&S resources appropriate for SAA Prioritization of SAA support, weighing desired capabilities, available resources, reuse of existing M&S infrastructure, and the AWD development timelineDefinition of SAA architecture and managementExecution of the M&S engineering process.  Using the above considerations, targeting and prioritization of the implementation of M&S resources to appropriate AWD Project issues can be accomplished to meet SEA 4000 AWD project development needs.  In this way, the most pressing issues may be addressed in a timely manner while directing implementation of the necessary architecture and M&S resources to develop SAA capabilities iteratively through the AWD build life-cycle.  2.  SAA Architecture and Management DefinitionThe definition of an appropriate SAA architecture and associated management requires application of a process that examines project needs and matches them with an appropriate architecture and compatible M&S resources.  Based on extensive previous experience working to develop SAA architectures, the Coalition Interoperability through Standards-based collaborative Environments (CISE) was recommended to support this architecture and management determination. This process has been used successfully in several U.S. DoD programs for this purpose. The CISE process is a distillation of the practical experiences of US and Swedish simulation experts from the successful design and execution of numerous simulation projects.  Its relevance at this point is that the CISE process is structured so as to generate and document very early the detailed information about the real world problems to be investigated in such a way that engineers can relate architectural and software development decisions back to the problems that they are intended to solve.  This can be invaluable in focusing and prioritizing development efforts and can help avoid the all too common failing of spending time, money, and effort adding components to a simulation environment that may be interesting and challenging in their own right, but which add nothing substantive to the quality of the information produced by that environment.	2.1  SAA Architecture OverviewThe M&S study illustrated the fact that simulation has become an invaluable tool to enhance military readiness through force structure analysis, simulation-based acquisition, mission rehearsal, test & evaluation, and training. Distributed simulation—networking multiple, separate simulation components together—has become a key technology in realizing the benefits of simulation, allowing a wide range of simulation components to be used together for a common purpose. Experience with a number of US and European programmes has shown that one of the most valuable applications of simulation is the exploration and analysis of the overall performance and effectiveness of complex systems of systems.  In such an environment, simulation can be used for such purposes as quantifying the effectiveness of a system within the context of a larger military organisation or task force, exploring design tradeoffs between different candidate components and subsystems, examining interoperability issues between systems and subsystems (including the effects of timing, accuracy, and varying data loads), or investigating new or modified concepts of operation for the system as a whole.  Models and Simulations at this level will be referred to “Operational Models” or “Operational Simulations” in the remainder of this document.In addition to simulating these ‘big picture’ system of systems situations, it can also be critically important to have focused, highly detailed models of individual components, such as specific sensors or weapons.  These models will be referred to as “Engineering Models” in the remainder of this document.  Engineering models are valuable tools for developing detailed understanding of the form, fit, and function of each component within a larger system.  The results of such models can then be used to calibrate and validate the less detailed representations that are often used in operational models and simulations.  They can also be used as inputs into cost models, discussed below.Cost modeling is the third area in which M&S can be usefully employed.  Once candidate systems and subsystems have been identified and their effectiveness has been demonstrated, cost models can be used to estimate the cost to manufacture, employ, maintain, and dispose of them.The study authors recommended an M&S architecture that respects the natural separation of the three domains discussed above.  Three separate M&S tracks would implement Operational, Engineering, and Cost models and simulations.  Processes, tools, and common standards would be implemented to facilitate the transfer of data and understanding between the three tracks at appropriate points.   The remainder of this paper will focus on the Operational domain, as this is the area in which distributed simulation will figure most prominently.2.1.1  Operational Model ArchitectureThe authors recommended what has been described as a component and service based architecture.  This will be a High Level Architecture (HLA) based federation of simulations, tools, and general services.  The proposed architecture is illustrated in  REF _Ref78350119 \h  \* MERGEFORMAT Figure 1.  EMBED PowerPoint.Show.8   EMBED PowerPoint.Show.8  Figure  SEQ Figure \* ARABIC 1 Notional SEA 4000 Operational Model ArchitectureWithin this architecture, there are three classes of components; Tools, Services, and Simulations.  2.1.1.1  Tool Federates:The tools are general purpose utilities that are used to control, monitor, and collect data from the federation.   These are frequently commercial products and are common to many federations.  The RTI itself, indicated by the horizontal blue line, is also considered to be one of the federation’s tools.  The suite of tools used to manage the SEA 4000 federation is not likely to change very frequently.   The authors are recommending that the federation tool suite contain the following types of tool federates:2.1.1.1.1 Federation ManagementThis would be a federate that can be used to create and join an HLA federation, remotely launch and terminate other federates, monitor the status and progress of the federation, and destroy the federation upon completion of the exercise.2.1.1.1.2 Blackboard FederateA blackboard federate is a general purpose tool that serves several purposes.  It provides, via a blackboard FOM object, a single location from which other federates can obtain configuration data to verify at run time that they are properly configured for the federation execution that is about to begin.  It also provides a simple mechanism to control the start of execution of a real-time federation.  If the contents of the blackboard object are recorded by the data logging tool, it provides a mechanism of capturing the configuration of each execution in the same database as other data from that execution.  Finally, it can provide a convenient mechanism for remote federates to publish free text status, warning, and error messages to human operators anywhere in the federation.2.1.1.1.3  Data Collection and PlaybackIn almost every case, the value of an operational federation execution lies in the data produced by that execution.  Tools for reliably collecting the data produced by the various federates are a critically important part of any such federation.  Given the broad range of cost, capacity, and complexity of commercial and open source databases, the data collection tool should be able to load data into most, if not all, commonly used databases.In addition to collecting data from a federation, it is also important to be able to play previously recorded data back into a new federation execution.  This is important for debugging of new federates as well as for providing repeatable input data over the course of multiple federation executions.  Replay capability is also useful in cases where one or more of the federates either executes too slowly or takes too long to initialize.  In such cases, a single run from the slow federate can be recorded and later replayed at different rates or rapidly started and restarted over the course of repeated runs.2.1.1.1.4  VisualizationThere is no substitute for a visual depiction of the physical entities and processes being simulated during the course of a federation execution.  Not only is such a capability invaluable for demonstrating the scope and scale of the federation, but it is often a critical tool for confirming the correct functioning of scenarios and for validating the correct modeling of platform and weapon movement and behavior.  Depending upon the exercise being conducted, the required level of visualization may vary, and so the SEA 4000 federation will likely need to acquire a relatively simple 2 dimensional display tool as well as a more realistic 3 dimensional one.2.1.1.1.5  Data Reduction and AnalysisThe final tools in the recommended operational architecture are ones for examining the data produced by the federation and preparing it for further analysis by other tools.    The types and amounts of data reduction and analyses to be done will always depend upon the objectives of the federation being executed, but there are several general considerations that should be addressed by whatever tools are employed.  The first of these is that the analysis tool should be able to provide a means of examining the data being collected while the federation is executing without imposing a performance penalty on the rest of the federation.  The second is that the tool should be as FOM agile as possible.  In other words, a small change to the federation object model should not require a significant reworking of existing database queries.  Finally, the tool should be able to present and save the results of database queries in a variety of formats in order to facilitate the transfer of data to other analysis tools or to engineering or cost models.2.1.1.2  ServicesServices are federation components that simulate processes that support the execution of other federates.  Often, services model natural processes, such as weather and signal propagation through the environment, that are common to multiple federates.   Services can also be used to model other processes, such as damage from munitions or execution delays caused by human operator workloads.  Separating such common processes into distinct federates provides several advantages.  First of all, it ensures that the processes are modeled in the same way for each federate that uses them, ensuring a ‘fair fight’ across the federation.  Second, multiple instances of a service can be stood up in a federation in order to enhance overall execution speed without requiring software changes to the federates that use the services.  Finally, adding new functionality via service federates can provide a more effective means of enhancing an existing federation, as services can be developed in parallel with simulation components, reducing the development period.  Also, services can be used to overlay additional functionality on to existing federates without requiring extensive modification of those existing federates.  2.1.1.2.1  Environment ServicesMany of the processes that the operational models will simulate are affected by the state of the natural environment around them.  This is especially evident in the case of sensors, but environmental conditions in the sea and atmosphere can also affect processes such as platform motion or the ability to launch and recover aircraft.  The fidelity with which the natural environment is represented within a federation varies widely, from no representation at all, through static, homogeneous conditions that are agreed to before exercise start, to dynamic and heterogeneous conditions.  Data describing environmental conditions may come from databases of historical measurements, be generated by mathematical models, or be fed in from live weather measurements.  Environment services federates are those that are responsible for accessing environmental data and publishing it out into a federation at rates and in formats that are useable to the other federates.   Serving environmental data from a common source helps to ensure a consistent representation across all of the consuming federates.  It also reduces the cost of developing new scenarios by only requiring that a single environment data format, that required by the service, be supported.2.1.1.2.1.1  Propagation ServicesAs signals and signatures of various kinds (RF, acoustic, visual and infrared, etc.) propagate from their sources to whatever sensors or receivers may detect them, they may be blocked, attenuated, or otherwise degraded by the natural environment.  The SEA 4000 federation will need to model these effects for all of the different kinds of signal sources, sensors, and receivers that are to be simulated.  The SEA 4000 federation should contain different propagation federates for each kind of propagation (RF, acoustic, etc.) that is of interest.  The reason for recommending separate federates rather than developing a single propagation service for all signals is that the physics underlying the propagation of various kinds of signals, RF vs. acoustic, for example, is very different.  There are different communities of experts on each kind of signal, and each community has its own nomenclature and mathematical models.   Trying to combine all of these into a single “one size fits all” propagation service would be impossible.  In addition, designing and implementing separate classes of propagation services allows them to be implemented in parallel or in a phased programme, depending upon when they are needed by SEA 4000.2.1.1.2.2  Lethality and Vulnerability ServicesAs will be discussed below, the proposed operational architecture includes simulation components that will represent weapons and their targets, both friendly and otherwise.  The SEA 4000 federation should also include separate federates to model weapon lethality and target vulnerability.  Separating lethality and vulnerability (L/V) modeling from both the weapon and target models serves several purposes.  First of all, it provides the desired ‘level playing field’ by ensuring that target damage is modeled in a consistent fashion regardless of the weapon being simulated.  Secondly, this architecture recognizes that weapon endgame and target damage models vary widely in terms of fidelity, speed of execution, data availability, and level of classification.  Implementing a separate L/V federate will enable federation planners to select and integrate the level of L/V modeling that is appropriate to the needs of each individual study without requiring changes to the weapon or target platform models.  In cases where the fidelity of damage modeling is particularly high, this architecture will also support multiple instances of the L/V federate in order to maintain acceptable execution rates.2.1.1.2.3  Human Performance ServicesThe overall effectiveness of different concepts for the Air Warfare Destroyer cannot credibly be evaluated without realistically representing the performance of the crew in the conduct of AWD activities.  This is especially true for studies of time critical tasks where there are human actors involved in the process.   The Human Performance Models (HPM) federate will provide this representation.   The HPM federate will contain algorithms that will compute the time required for a human operator to respond to a new task, given current task loading and other factors such as operator fatigue, experience level, and environmental conditions.  2.1.1.2.4  HWIL ServicesAs the SEA 4000 program moves through its successive phases, more and more hardware components (or the software that drives them) will become available for inclusion within the operational federation.  The ability to include developmental or fielded systems within the federation may be desired for a number of reasons.  For example, it may enable the testing of such systems in operational contexts that may be unavailable in the real world, or it may be desired in order to increase the realism and validity of the federation execution as a whole in order to better support training or other federation applications.In practice, it is very difficult, if not impossible, to modify fielded systems to add a native HLA interface to them, and so the authors are proposing that the SEA 4000 federation architecture include Hardware In the Loop (HWIL) federates to provide the interface points between real systems and the rest of the federation.  The nature of the HWIL federates will be very dependent upon the real system to be integrated and the nature and completeness of the existing interfaces to that system.   In some cases, the translation between the system and the HLA can be done entirely in software, in which case an existing protocol bridging tool such as VTC’s InterdaptorTM or DSTO’s DSILI, may be all that is required.  In other cases, specialized hardware, such as analog to digital converters, may be required to complete the interface.2.1.1.3  Simulation FederatesThe Simulation Federates are the third and final class of federates that will constitute the SEA 4000 federation.  The Simulation Federates are those components that model functions and systems that are specific to the Air Warfare Destroyer and its surrounding environment, as opposed to those that might apply equally well to a broad set of operational federations.  The following sections provide an overview of the nature and scope of the kinds of Simulation Federates that should be included within the SEA 4000 federation.2.1.1.3.1  Weapon FederatesThe federation will need to be able to simulate a variety of weapon systems, including ownship, threat, and other friendly weapons.   The federates that model weapons must be capable of accepting targeting and firing commands from other federates.  They must also be capable of providing weapon endgame information (time and location of hit or point of closest approach, detonation success or failure) to the L/V federate.  If legacy models such as JSAF are used to simulate threats or other friendlies, they may already include embedded weapons models of their own.  In such cases, separate weapon and L/V federates may not be required.2.1.1.3.2  Sensor FederatesThe Air Warfare Destroyer will almost certainly employ a suite of sensors, including active and passive sonar, radar, and electro-optical and infrared sensors.   The AWD program can be expected to undertake trade studies to examine the effectiveness of varying mixes of sensor systems, to explore and refine concepts of operation for sensors during different missions, and to examine the effect of proposed sensor system upgrades.  This requires that each of the different classes of sensors be simulated within the SEA 4000 operational federation.The Sensor federates will receive incoming signals from the Propagation federates, described above, and will provide detections or track updates to other federates in the federation, including operator workstations, weapon system federates, and combat system federates.  Sensor federates must also be capable of receiving and acting upon tasking or cross-cueing from other systems or human operators.2.1.1.3.3  Combat System FederateIn broad terms, the phrase ‘combat system’ often encompasses sensing, weapons, and communications functionality.  Within the context of the proposed M&S architecture, a Combat System federate will implement functionality not already allocated to Sensor, Weapon, Communications, and Countermeasures federates.  The precise definition of that functionality will necessarily depend upon the real world system being modeled, but it can be expected to include such capabilities as data fusion, track maintenance and display, support for weapon/target assignment and fire control, and sensor tasking.2.1.1.3.4  Communications ModelingThe Communications Federate will model the explicit, ‘real world’ messages that will pass between the components of a system such as AWD, as well as the message traffic exchanged between ships and other players.  The Communications federate will be responsible for modeling the latency, reliability, and capacity of the communications system under investigation.   Communications performance should reflect the capabilities and limitations of the components that make up the communications architecture, levels of damage to communications systems, and environmental effects such as jamming, weather, and the effects of physical separation and intervening terrain. 2.1.1.3.5  CountermeasuresGiven the current and growing variety of techniques in use, the modeling of countermeasures will not likely be done by a single federate.  The Countermeasures federate shown in the architecture diagram should be viewed as a placeholder for a suite of federates at varying levels of fidelity.  At a minimum, a Countermeasures federate will need to be able to receive commands to deploy countermeasures or signals from incoming threats that will trigger automated deployment.  It must also publish sufficient information about the countermeasure to enable affected systems to model its effects.  How this is done will depend greatly upon the technique being modeled as well as how the affected systems are being modeled.  For example, a relatively straightforward technique such as an infrared flare might be simulated by a federate that had a motion model that simulated (and published) the launch and subsequent fall of the flare, along with a signature model that published the IR characteristics of the flare as it ignited, burned, and faded.  Such a signature would be received by IR sensors on an equal footing with other IR sources from targets or other environmental source.  On the other hand, such an approach would be inadequate for sophisticated jamming techniques that depended upon a rapid and complex iteration between sensor and jammer.  In such cases, the coordinated exchange of data between two federates would probably not be possible at high enough rates to produce a valid simulation.  In these cases, the usual approach is to embed the details of the jamming technique in the sensor federate and have the countermeasures federate publish only high level parametric data that does not change very rapidly, such as the location and operating state of the jammer.2.1.1.3.6  Organic Air AssetsThe AWD may carry rotary wing aircraft that it is capable of deploying and recovering during a mission.  The functionality required to simulate these organic air assets may be adequately implemented in the federate(s) chosen to model other friendly players.  However, it is equally likely that for some exercises, organic assets will need to be modeled at a higher level of fidelity, or they may require specialized behaviors or message sets that may require that they be simulated separately.  The proposed architecture reflects this, and the authors recommend that during the conceptual modeling stages of any exercise plan or developmental increment that Organic Air Assets be treated as a separate federate until the required behaviors, fidelity, and interfaces for it have been defined.  At that point the decision can be made as to whether Organic Air is to be modeled separately or can be handled by another federate.  2.1.1.3.7  Hull ModelThe Hull federate will simulate the mobility of the AWD as well as other ships.  It will interact with the Environment federate to obtain sea state and other pertinent environmental conditions and will move the ship being simulated within the synthetic natural environment in accordance with the ship’s limits on speed, turn rate, etc.  It should also take current levels of ship damage into account when modeling ship movement.2.1.1.3.8  Operator StationsOperator Station federates will provide exactly what their name implies.  They will provide realistic simulations of the human machine interfaces between AWD systems and crew, to include information displays and control inputs.  2.1.1.3.9  Behavior ModelsThe Behavior Models component of the federate will consist of one or more federates that will simulate the behaviors and actions of human beings within the exercise.   Most of the existing models of complex systems already include a representation of crew behaviors, but these often represent ‘as built’ manning and concepts of operations and may not be flexible or extensible enough to support the investigation of new concepts.  Inclusion of separate behavior federates within the architecture will provide a means of extending or replacing those embedded behaviors without reworking legacy models.  The burden that this will place upon the federation is that the set of messages and command and control interactions that are defined within the FOM must be complete and detailed enough to satisfy the interfaces between the behavior models and the other federates and human beings with which they must interact.2.1.1.3.10  Other FriendliesThe AWD will almost never operate in complete isolation from other friendly forces, and so the federation architecture must include representations of those forces.  While other friendlies and threats may be viewed as subsets of the class of ‘other platforms’, in practice other friendlies will often need to be modeled at a higher level of fidelity in order to communicate and interact meaningfully with the AWD federates.  In cases where other friendlies need not be modeled at a higher level of fidelity than the threat, they can probably be represented within the same federate as the threats.2.1.1.3.11  Threat ModelsThe proposed architecture also includes a component to represent the threat.  This component may also simulate more distant or lower fidelity friendly or neutral forces.   The threat is represented as a single component within the architecture instead of being broken out into separate subcomponents because it is expected that the level of fidelity of the representation required for the threat will be lower than that of the AWD and its constituent systems.  There are a number of existing simulations, including ModSAF, JointSAF, and OTB, that are widely used to represent ‘other’ forces in distributed simulation environments.2.1.1.4  RTI Spec:  1516 vs. 1.3 One of the perennial arguments within the HLA community is whether a federation should adopt the 1.3 NG specification or the IEEE 1516 spec.  Some of the arguments put forward in favor of the 1.3 NG spec are that it is more mature and has a larger user base and more available simulations and tools.  Advocates of the 1516 spec point out that it is a newer spec that improves on the older 1.3 NG spec, and that it is an IEEE standard, and that, unlike the 1.3 NG spec, it is a living specification that will evolve and be maintained in accordance with established IEEE practices.Several important factors need to be understood about the decision to work with one specification over the other.  The first is that there is nothing in the proposed architecture that favors one specification over the other, and there is no M&S functionality required in order to implement this architecture that cannot be satisfied under either spec.  Secondly, an increasing body of experience is demonstrating that the effort required to move a federation from one version of the HLA to the other is generally far smaller than the effort required to build the federates in the first place, and so the choice of one spec over the other should not be viewed as an irrevocable decision that must be adhered to for the life of the program.   Finally, there are already a number of tools, including DSTO’s DSILI and VTC’s Interdaptor, that can be used as bridges or adaptation layers to enable federates that were built to one standard to participate in federations that use the other.The decision as to which version of the HLA to begin with should be based upon purely practical reasons.  Once the initial experiments or exercises are defined and the required federation components have been identified, then the nature of their HLA interfaces should drive the choice of HLA spec.  If the majority of the components use one spec, and the remainder can be adapted, then that spec should be chosen, at least for the near term.   This is a decision that should be periodically reviewed in light of evolving program requirements and the cost and availability of tools and software that comply with each spec.2.1.1.5  FOM Development:  VMSA FOM and RPR FOM comparisonAs a part of the M&S study, the authors compared two FOMs that were being used within the Australian military and related industry.  The two candidate FOMs were the Virtual Maritime Systems Architecture (VMSA) and the SISO Realtime Platform Reference (RPR) FOMs. The FOM comparison conducted in this study included consideration of the following object model characteristics:Organizing PrinciplesRepresentation of Discrete EntitiesRepresentation of Subsystems, Components, and Articulated PartsRepresentation of AggregationsSimulated ‘Real World’ Communication of InformationSynthetic Natural EnvironmentNaming/Numbering SchemesAssociation SchemesTime ManagementScalability and Data Distribution ManagementSimulation ManagementThe study authors found that the object class hierarchies of the two FOMs were similar enough in their representations of simulated objects and systems that either could be credibly taken as a starting point.  They identified a number of features of both FOMs that should be retained in whatever object model SEA 4000 implements.  In addition, the authors would recommend that SEA 4000 make use of a blackboard federate for synchronization, run time configuration, and configuration logging, and that this be reflected by the addition of a Blackboard object class to whatever FOM is used.  Another recommendation was that explicit timestamps be added to all object and interaction classes in order to support multiple time management schemes.The final word on the FOM comparison was that this initial analysis should be taken only as an early indication of what a SEA 4000 FOM might look like.  Only after the federation objectives have been defined for the first development iteration and the CISE process executed can all of the correct choices be made that will define the SEA 4000 FOM.  In addition, NATO Study Group 61 is currently drafting a Maritime Reference FOM.  This draft was not yet available for general review, but once this FOM is made generally available it should also be reviewed and considered as a basis for the SEA 4000 FOM.3.  Implementation and Maintenance Processes for the M&S ArchitectureNo useful M&S environment of any complexity remains static for very long.  This will be especially true for any program that is intended to support successive phases of an acquisition program.  Changes to hardware and commercial software, evolution in system components as they are developed, and even changes in operational concepts driven by political, economic, or other external forces may all conspire to motivate revisions to and expansion of the environment.  Bearing this in mind, any SAA environment that is to remain relevant to the program that it is supporting must establish and maintain a structured, repeatable process for defining, establishing, assessing, and revising the overall environment and all of its constituent parts.3.1  Process OverviewA complete SAA environment will be a combination of documentation, software, and hardware.   These things can be broadly grouped into four categories, which we will refer to as Physical Infrastructure, System Infrastructure, Federation Infrastructure, and Federation Development and Execution.   This organisation was chosen because the activities that fall within each group are independent enough from the other groups that many of them can be carried on in parallel.  In addition, the recommended intervals for revisiting and upgrading the processes and components within each group tend to be different.A notional process recommended for establishing and maintaining the SAA environment is shown at a high level in  REF _Ref75163978 \h  \* MERGEFORMAT Figure 2.   (The durations of each task have been shortened so as to fit them all within the picture.)Figure  SEQ Figure \* ARABIC 2.  Notional SAA PlanThe Physical Infrastructure tasks are those that are required to procure, install, and maintain the computers and networking hardware required to support the federation.  Included among these tasks are the selection, installation, and use of tools to verify the connectivity of machines on the network and the bandwidth available among them.  This should also include procedures and any required hardware to perform regular, verified backups of the entire environment.  The state of the Physical Infrastructure should be reviewed and decisions made for upgrading it on roughly an annual cycle, or whenever changes in the required scale or execution speed of the federation demand.The System Infrastructure tasks relate to the development and use of general purpose tools and processes that would apply to any software engineering environment.  This includes the establishment of a configuration management system, such as CVS, along with documented procedures for its use, the establishment of a problem tracking and reporting (PTR) system for recording, assigning, and tracking problems, issues, and suggested improvements to the environment, tools for the testing of individual federation components or subsets of components before they are integrated into the environment, and tools and processes to regularly rebuild and retest the entire federation to ensure that it remains in a consistent, well understood state.  Once established, the System Infrastructure should remain fairly stable, but the PTR system should be reviewed at least annually to assess metrics such as numbers of new problems reported over time after major system changes, time between report and fix, etc.  The Federation Infrastructure tasks are those that are specific to a distributed HLA federation, but not specific to SEA 4000.  This includes the selection, installation, and testing of RTI software, tools for controlling and monitoring the start-up, execution, and shutdown of a federation execution, tools for collecting data during execution, for reducing and analysing collected data, and for visualizing the state of an exercise during execution.  The Federation Infrastructure should also remain relatively stable once it is established.  Federation managers should keep abreast of developments in RTI software and supporting tools, and should make decisions on upgrades on a case by case basis.The final category, Federation Development and Execution, is the most complex and will generally be the longest in duration.  This includes all of the activities related to planning and executing experiments, demonstrations, or exercises within the SAA environment.   This set of activities should be revisited whenever a new experiment, exercise, or demonstration needs to be planned, but tasks within this category may be omitted, depending upon what changes to the federation are required for the new exercise.4.  SummaryMilitary decision makers and procurement authorities have embraced the use of simulation to support acquisition, termed Simulation Based Acquisition (SBA) or Simulation Assisted Acquisition (SAA).  An effectively conceived SAA program can address key acquisition issues such as technology and design trade offs, system effectiveness analysis, performance analysis; and also reduces program technical, cost, and schedule risk.   SAA allows an acquisition authority to better understand complex relationships between system design and system effectiveness and allows focused attention, and if necessary intervention, on critical program issues.   A well conceived SAA program can provide leveraged reuse of simulation tools and infrastructure across the system lifecycle, providing consistent, validated, and coherent simulation support, and lower system life cycle cost.  SAA requires a combination of relevant disciplines, including Integrated Synthetic Environment development expertise and military system simulation expertise.  While system knowledge and expertise is necessary to implement an effective SAA program, the application of system knowledge without an effective SAA framework generally fails to realize the potential of SAA.  An appropriate balance of SAA infrastructure, Integrated Synthetic Environment, and military system simulation expertise is required to achieve a successful SAA program.  The architecture and processes proposed for SEA 4000 will provide the robust and flexible synthetic environment needed to support this complex system.  It will provide a framework for the focused integration of military system simulation expertise as needed in order to support the programme as it evolves throughout its projected lifetime.Author BiographyDR. GARY EISERMAN is the Senior Technical Advisor for the Acquisition and Analysis Group at Virtual Technology Corporation, Alexandria VA.  He led VTC’s SAA Study Effort for the Royal Australian Navy’s SEA 4000 programme.  He is the technical lead for a number of VTC tasks, including JPSD’s Aerial Common Sensor (ACS) Testbed and the for the Matrix Mapping Tool effort that VTC is undertaking for the US Office of the Secretary of Defense for Acquisition, Technology, and Logistics (OSD AT&L).  Dr. Eiserman has more than 17 years of experience in modeling and simulation. Defense Simulation Proposal Guide, First Edition, 4 October 2002, Australian Defense Simulation Office, DOD Canberra Australia.