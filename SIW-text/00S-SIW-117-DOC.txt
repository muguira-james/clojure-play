Atmospheric Representations in SEDRISLouis HembreeNaval Research LaboratoriesMarine Meteorology Division7 Grace Hopper AveMonterey, CA 93943831-656-4787hembree@nrlmry.navy.milRob CoxSAIC12479 Research Parkway Suite 600Orlando, FL 32826407-207-3609ROBERT.M.COX@cpmx.saic.comValerie PastorSAIC550 Camino El Estero Suite 205Monterey, CA  93940831-649-5242valerie.l.pastor@cpmx.saic.comKeywords:SEDRIS, SDCS, Atmosphere, GRIB ConversionABSTRACT: It has been an objective of the DoD to analyze its fielded and prototype systems, train its warfighters, and simulate the next war using Modeling and Simulation (M&S).  A significant component in this M&S activity is the creation of environmental databases that represent the physical world.  The Synthetic Environment Data Representation and Interchange Specification (SEDRIS) facilitates the transmission and reuse of environmental data among M&S systems through a standard data representation model and interchange mechanism.  It fully represents the environment by capturing all data elements and their relationships.  It also provides a standard data interchange mechanism and format to support the distribution of environmental data and promotes the sharing of databases between simulations.SEDRIS is a method of distributing integrated environmental data sets.  During the past year, SEDRIS identified and begun including atmospheric parameters not already in the SEDRIS Data Coding Standard (SDCS).  By identifying these parameters and mapping them into SEDRIS, simulations now can use representative atmospheric data as identified in the Master Environmental Library (MEL) and prepare a SEDRIS transmittal.  Missing atmospheric parameters were identified by examining atmospheric representation requirements as compiled by the Air and Space Natural Environment Executive Agent and crosschecking them with the existing SEDRIS Data Coding Standard (SDCS).  The Gridded Binary (GRIB) standard parameters were also crosschecked with the SDCS.  Required parameters not already in SDCS were identified and submitted for inclusion.  The atmospheric parameters were also cross checked against the Defense Data Dictionary System (DDDS).  A mapping was performed for atmospheric forecast fields and an initial conversion program was developed to convert atmospheric forecast fields in GRIB format to the SEDRIS Transmittal Format (STF) based on the SEDRIS 2.5.1 Release.  The converted atmospheric data was checked for loss-less transfer into the STF.IntroductionAn objective in the U.S. Department of Defense (DOD) for years is to analyze its fielded and prototype systems’ capabilities.  In order to accomplish part of this objective, a modeling and simulation (M&S) activity was developed.  A significant component in this M&S activity was the creation of databases, that represent the physical world, at the lowest possible cost, both in terms of time and money.The DOD attempted to address this problem in the 1980’s with a multi-service program called Project 2851.  The result of this project was the Standard Simulator Data Base (SSDB) Interchange Format (SIF) and the Standard Simulator DataBase Facility (SDBF) at Kirtland Air Force Base, New Mexico.  About the same time, the Simulation Networking (SIMNET) program began at the Defense Advanced Research Projects Agency (DARPA).  The key concept was the networking of homogeneous and later heterogeneous simulations to include a common representation of the environment.  This highlighted the new environmental data representation needs, as used by networked heterogeneous systems, which could not be met by the existing interchange methods.  Further requirements were placed on the M&S community; in particular, those of the computer generated forces, high-density terrain, ocean, atmosphere, and space databases.Without an effective way to interchange the full range of environmental data in the networked M&S community, it became apparent a new database interchange mechanism was required.  Thus, the Synthetic Environment Data Representation and Interchange Specification (SEDRIS) program was initiated.  SEDRIS facilitates the transmission and reuse of environmental data among heterogeneous systems through a standard data representation model and interchange mechanism.  It fully represents the environment by capturing all data elements and their relationships and provides a standard data interchange mechanism and format to support the distribution and sharing of environmental data.SEDRIS OverviewThe SEDRIS vision (and its process) is the creation of a data representation model (DRM) that supports easy access to interchanged data through the use of Application Programmer Interfaces (APIs).  The DRM enables the open interchange of data by providing a common representation from which native (possibly proprietary) data can be converted to and from SEDRIS.  The specific objectives of SEDRIS are:By using a data representation model, capture the complete set of environmental data elements and their relationships.Implement a standard API for accessing data elements.Minimize the cost to access and reuse data by lowering the software barrier to entry.Provide a standard interchange mechanism between database builders and consumers.Facilitate interoperability of networked heterogeneous simulations.Support reuse of environmental databases between disparate simulations.Use the same data model as an access mechanism to import and export source data into and out of various database generation systems.Promote consensus understanding of the diverse requirements and implementation choices used within the M&S community through education.SEDRIS Data Representation ModelWith the 2.5 release of SEDRIS there are three hundred and sixty SEDRIS classes.  The object model template (OMT) diagram covers twenty-three pages (and is available in either PostScript or PDF format).  The data dictionary, which defines and describes each of the classes, is also available in either plain text or in HTML.  SEDRIS and its components have been discussed extensively in other papers and at other meetings including SEDRIS Technology Conferences.  Technical documents are being written to cover the following topics within SEDRIS: Topology, Control Links, Data Tables, Hierarchical Index Tables, Images and Color Models, Attribute Inheritance and Contexts, and the SEDRIS Data Coding Standard.  These can be found at the SEDRIS web site, www.sedris.org.   From all of these topics, only the SEDRIS Data Coding Standard (SDCS) will be briefly discussed here because of its applicability to what was accomplished for the atmospheric mapping.  The SDCS fulfills a very important need in SEDRIS — the need to be able to identify (label) an object and to identify parameters.  The SDCS defines a set of SEDRIS Classification Codes (SCC), SEDRIS Attributes Codes (SAC), and SEDRIS State Codes (SSC).  All are important, but from the atmospheric point of view the SCC and SAC are the most important.  How does a user find what they are looking for inside of a SEDRIS transmittal?  By knowing which SCC values to search for.  Want to find railroads?  Then look for objects in SEDRIS that have the code for railroad attached.  Want to find waterfalls?  Look for waterfalls based on the SCC value for waterfall.  The same is true for atmospheric parameters and understanding the SCC and/or SAC identifier for the given parameter.SEDRIS APIThe SEDRIS API has been broken into distinct sections or ‘functional groups.’  All SEDRIS APIs are defined by ANSI C ‘header’ files.  Those groups are the conversions API, data model API, read API, write API, and “passthrough” API.The Conversions API provides the ‘low-level’ functionality to convert coordinate values between coordinate systems, to convert color values between color models, and to convert measurements for certain units.  		The Data Model API provides information about the SEDRIS data model.  It is independent of any transmittal.  It is primarily useful for developing applications that benefit from knowing the structure of SEDRIS classes.  Level 0 Read API is used to find and extract information from one or more SEDRIS transmittals.  There are many implementations of the Level 0 Read API.  One implementation allows a user to read SEDRIS transmittals from the SEDRIS Transmittal Format (STF) files.  STF is not a library or repository of databases, just as SEDRIS is not a library or repository of databases.  To find a synthetic environment database, see the projects responsible for collecting and cataloging environmental databases, such as the Master Environmental Library (MEL) at  HYPERLINK http://www.????.???.?? www.mel.dmso.mil.The Level 1 Read API is a collection of utility functions.  Level 1 never accesses a SEDRIS transmittal directly.  Instead, Level 1 gathers its data from both parameters passed in by the user and from making calls to the Level 0 Read API.SEDRIS ApplicationsThere are several applications that have been developed by SEDRIS.  The reader is directed to the SEDRIS web site for a review of the current applications or to previous SIW papers that are posted there.Atmospheric Environment In SEDRISThe actual incorporation of atmospheric parameters into the SEDRIS involved a process of mapping the requirements as stated by the DMSO Air and Space Natural Environment (ASNE) Modeling and Simulation Executive Agent (MSEA) to the existing SDCS and ensuring the SDCS was updated for any parameters that were required.  The primary document used to map atmospheric requirements to SEDRIS is the ASNE Modeling and Simulation Baseline Requirements Assessment (ASNEM&SBRA).  This report describes the ASNE requirements of a selected subset of major simulation programs that are now in development (e.g. JWARS, JSIMS JMASS, and STOW).  For the purpose of mapping the ASNE requirements into SEDRIS, we considered the requirements as listed by table 5-1 in the ASNEM&SBRA.  Those requirements were listed by category of natural environment information (data, products, and tools) that are required by the M&S community.  The table also cross-references the source documents that specifically state ASNE requirements for that information.  The table is further divided by category.  The following are the definitions as taken from the ASNEM&BRA.  Category I is for ASNE data.  These are data arranged for by the MSEA and provided in a just-in-time manner through the MSRR/MEL by providers approved by the MSEA.  These data can include both “ground truth” digital data needed by the object models and any “perceived truth” data needed by the people setting up, using, or playing in a simulation.  Category II is derived from Category I, such as altimeter setting.  These data elements are derived from the basic data elements, but they may require some external (to the ASNE) additional information like terrain elevation.  They generally do not require environmental information beyond that available within the natural environment community.  In some circumstances, simulation exercise teams may prefer to derive these elements internal to the simulation.  The MSEA will arrange for the tools necessary for these derivations to be available through the MSRR/MEL.  Category IIIa is derived from categories I and II.  These are data elements that would normally be arranged for by the MSEA.  They can be used to support standard classes of weapons or platforms.  For example, contrail data can be provided for standard engine-types or icing data can be provided for standard aircraft types.  In some circumstances, simulations may prefer to derive these elements internal to the simulation.  The MSEA will provide or arrange for the tools necessary for these derivations to also be available through the MSRR/MEL Category IIIb is for simulation tools using ASNE data.  These tools may be arranged for by the MSEA or the MSEA may be able to help arrange for their development through an appropriate laboratory or other industry provider.  Relevant A&SNE aspects of such tools must be verified, validated and accredited before the MSEA approves their use and inclusion in the MSRR/MEL.  While ASNE data will be needed as input, producing this type of information prior to or during a simulation is not the province of the MSEA.  Category IV is for ASNE products.  Among these are ASNE data and products needed by trainees in a simulation.  Additional products may be needed for human use during pre-simulation planning, runtime management, and post-simulation analysis.  These products may be general enough in nature to warrant MSEA involvement to prevent needless duplication of effort and to promote reuse of the products among simulations or simulation federations.  The final category is for other M&S natural Environment Requirements.  A number of M&S requirements that are Land (Terrain) and Ocean Natural Environments are often included in documents along with ASNE M&S requirements.  While not all inclusive, they are listed for reference.  In some cases, coordination will need to occur between the MSEAs to ensure the “natural environment” is represented seamlessly, e.g., sea-state and winds are correlated and consistent.Table  SEQ Table \* ARABIC 1:  Extraction from the ASNE Weather Requirements Table.IIIASNE Data/Tools Cont'd  A&SNE Data/Tools, derived from Cats I/II + outside inputIn SDCSSDCS CodeCorrect  Definition DDDS SDEIcingTypeN33584,36409IntensityN33588, 36408CoverageNThis is an SCC not a SACLevelsN36407 (base fcst) 33587 (base obs), 36410 (top fcst), 33586 (top obs)TurbulenceTypeYTUY_N42463, 33598IntensityYTUI_Y33597, 36418CoverageNThis is SCC not SACLevels		YTUB_ TUT_Y33601 (base obs), 36417 (base fcst), 33602 (top obs), 36419 (top fcst)Contrails PersistenceN36434 (fcst), 33618 (obs)LevelsN36433 (base), 36435 (top)Visibility (visible wavelength)w/Hydrometeors & SuspensoidsYVDI_VDT_Y29422 (obs), 36832 (fcst)Based on the requirements table we created a mirror of it for all the listed parameters and categories.  From there we eliminated the table columns of where the requirement was derived from a source document and added four columns that were specific to whether the required parameter was mapped into SEDRIS.  Those columns included whether the parameter was already in the SDCS and if it was we listed its SDCS code.  Then we checked its current definition for accuracy and listed either yes or no if the definition was correct.  The last column was a mapping to the Defense Data Dictionary System (DDDS) number for that atmospheric requirement.  In some cases, we were unsure of the ASNE requirement and its definition as it pertained to the M&S community.  In those cases, we requested clarification from the MSEA.  There were cases where the definition of the parameter in either the SDCS or the DDDS was in question.  Those cases were identified and the appropriate maintainer of that system was notified.  Finally, there were those parameters that did not exist in the SDCS.  After discussions with the MSEA and the SEDRIS team, those missing parameters were identified in a SEDRIS change request so they could be added to the SDCS.  Table 1 is an extraction from the ASNE weather requirements table.  The full table is far too long for presentation here.  Therefore, we have selected a section that clearly shows the various options in classifying the ASNE requirements.  As discussed above there were several iterations of this table with the ASME representatives.  Those discussions lead to additions and deletions to the table.  The section displayed is for Category III.  Table 2  contains examples of the atmospheric SCCs and Table 3 contains example atmospheric SACs.Table  SEQ Table \* ARABIC 2:  Sample atmospheric related SEDRIS Classification Codes.SCCNameWA210Atmospheric Climatology, LocalWA220Atmospheric Climatology, SurfaceWA230Atmospheric Climatology, Earth SurfaceWA400Atmospheric ForecastWA410Atmospheric Forecast, LocalWA420Atmospheric Forecast, ProfileWA430Atmospheric Forecast, SurfaceWA440Atmospheric Forecast, Earth SurfaceWA450Atmospheric Forecast, VolumeWA500Atmospheric AnalysisWA510Atmospheric Analysis, SurfaceWA520Atmospheric Analysis, Earth SurfaceWA530Atmospheric Analysis, VolumeTable  SEQ Table \* ARABIC 3:  Sample atmospheric related SEDRIS Attribute Codes.SACNAMEAEP_Aerosol Particle ConcentrationASSIAir Stability, Showalter IndexATX_Air Temperature, MaximumCCCHCloud Cover, Climatology - HighDET_Dewpoint TemperatureEDRHEvaporation Duct Refractivity HeightFPR_Fog ProbabilityGHE_Geopotential HeightMIR_Mixing RatioMLD_Mixing Layer DepthPAS_Pressure, Altimeter SettingTUI_Turbulence IntensityWDI_Wind DirectionAfter all the parameters were mapped, then the process of developing the atmospheric converters for SEDRIS was begun.  It was decided that the first converter would be the for GRIB data.Atmospheric Forecast/Grib MappingIn the previous sections the SEDRIS Data representation Model (SDRM) and the SEDRIS Data Coding Standard (SDCS) have been discussed.  In this section we will present a mapping of atmospheric model forecast data to SEDRIS using the SDRM and the SDCS.   Figure 1 shows a simplified version of the SEDRIS Data Representation Model (DRM).  Only those classes required for the current discussion are shown.Numerical atmospheric models are used to produce forecast data and simulated atmospheric environments.  Some models that are in use by DoD include, Mesoscale Model 5 (MM5) used by the U.S. Air Force, the  Navy's Coupled Ocean/Atmosphere Mesoscale Prediction System (COAMPS) and the Naval Operational Global Atmospheric Prediction System (NOGAPS).  Atmospheric model output typically consists of fields at mean sea level, the earth’s surface and at various levels in the atmosphere.  The fields are also output for the base time (analysis time) and at forecast times usually expressed as a delta (tau) from the base time.  These fields are usually distributed as grids using the World Meteorological Organization (WMO) Gridded Binary (GRIB) format in the form of GRIB messages.  These messages may each be a separate file or be concatenated together into one or several files.  There is no implied organization to the GRIB messages except what might be provided by the data provider in a file naming convention and how the messages are concatenated or otherwise organized using some directory structure.  Typically, one receives either hundreds of files with one message per file, or one file with hundreds of messages contained in the file.  This simple flat structure can be captured by SEDRIS (Figure 2).  This is a simple SEDRIS mapping.  We have the required Synthetic_Environment, Transmittal_Summary, and Metadata Classes.  Since the origins of all of the grids are located at the same point only one Property_Grid_Hook_Point is required.  The Property_Grid_Hook_Point serves to locate the property grid on the earth's surface.  This simple structure is not very useful when dealing with a large number of grids, since a consumer of the data must examine each grid to discover what it contains and how it relates to the other grids.  No organizational information is explicitly included in the mapping.A better way to organize the data is to group it by forecast time and the level type.  Figure 3 shows an organization based on this approach.  The first level of organization is provided by the first Time_Related_Geometry class, which organizes multiple model outputs using their base times (for simplicity, a single base forecast time is shown in the diagram).  This class contains another Time_Related_Geometry as a child class which corresponds to each of the forecast times (taus).  This is possible because a Geometry_Hierarchy can contain another Geometry_Hierarchy (Figure 1).   Each of the Time_Related_Geometries corresponding to a forecast tau contains a Property_Grid_Hook_Point to locate all of the corresponding Property_Grids.  There would typically be several Property_Grids classes per Property_Grid_Hook_Point corresponding to different level types.  For example there could be a Property_Grid that contains parameters at the earth's surface, another that contains parameters on a 3D grid of pressure levels, and another that contains a parameter defined at a single specified level of the atmosphere such as the 500 mb vorticity.  Detail MappingIn this section we will discuss details about various aspects of the mapping.  The Synthetic_Environment contains SEDRIS version information. The Transmittal_Summary class contains a summary of what is contained in the transmittal, classes, coordinate system, and hierarchies.  A consumer can use this information to decide if the transmittal contains what they need and if they can process the transmittal.  Figure 4 shows more detail about Geometry_Hierarchy organization of the mapping below the Environmental Root class.The Spatial Domain under the Environmental Root is used to locate the general area covered by the data set.  It contains the coordinates of opposite corners of a box defined in the transmittal coordinate system.  Two Geometry_Hierarchies are used in creating three levels of hierarchy: Time_Related_Geometry and Property_Grid_Hook_Point.  Two Time_Related_Geometries are used, one to identify the base forecast time and one for the forecast deltas.  These are indicated by the Classification_Data class.  The fields of the Time_Related_Geometry provide information about the uniqueness and organization of the classes below the Time_Related_Geometry.  Each child of a Time_Related_Geometry is identified using the link class Geometry_Time_Constraints_Data.  The first hierarchy, the first Time_Related_Geometry below the Environmental Root, corresponds to the base forecast time as identified by the Classification_Data class.  The Geometry_Time_Constraints_Data link class for each child, points to an Absolute_Time_Point class whose fields specify the corresponding date and time.  Each of these children contain a second hierarchy level, another Time_Related_Geometry, that corresponds to the forecast deltas (taus).  In this case the Geometry_Time_Constraints_Data link class points to a Relative_Time_Point class which specifies the delta from the base forecast time as indicated by their association with the corresponding Absolute_Time_Point.  Note that the Absolute_Time_Point can be shared between the Relative_Time_Points under the same hierarchy.  This   conserves space.  Each of these children contains the third hierarchy level corresponding to the Property_Grid_Hook_Point.  Note that while the Property_Grid_Hook_Points for each tau are probably identical in contents, the objects cannot be shared.  This is because if you "shared" the Property_Grid_Hook_Point, you would essentially merge the property grids for each tau into one set since an object can have only one set of components.  However, the GDC_Location_2D object which locates the Property_Grid_Hook_Point can be shared.Figure 5 show more detail at the lowest hierarchy level for just one Property_Grid_Hook_Point.  Two Property_Grids are shown, an analysis volume and an analysis at the earth's surface.  The Property_Grid field data_table_type uses a SEDRIS Classification Code to indicate the type of Property_Grid.  In the figure SCCs for an analysis are used,   as the example is for a tau of zero.  For other taus the SCCs corresponding to forecasts are used.  The spatial_axes_count field gives the number of spatial axes.  Notice that an atmospheric volume only has two spatial axes.  This is because the vertical coordinates are not in units of height above the vertical datum.   The normal atmospheric vertical units of pressure or sigma are not considered spatial units because they are not referenced to a fixed datum.  Therefore, the vertical axis is not a spatial axis.  The location_index identifies the grid point that corresponds to the Property_Grid_Hook_Point location.   The coordinate system is defined as a Geodetic Coordinate System.  The data_present field is a flag used to indicate if data are actually present.  In some applications where the terrain is represented using triangulated irregular networks (TIN), it is desired to be able to describe the grid from which the TIN was derived.  In this case no data is actually contained in the property grid.Figure 6 shows the axes classes referenced in Figure 5.  Note that the axes are ordered and that the spatial axes always come first.  The two Regular_Axis classes define the two spatial axes.  The class fields define the axes.  Note that these two classes can be shared by the property grids.  The symbols β and ε reference the corresponding symbols in Figure 5.  The vertical axis of the atmospheric volume is defined using the Irregular_Axis class.  The actual values of the axis tick marks are supplied in an array.Figure 7 shows example Table_Property_Description classes.  A Table_Property_Description class is required for each parameter contained in the Property_Grid.  The Table_Property_Description fields define the parameter, its units, and its value type.  Each Table_Property_Description can have several Property_Characteristics classes associated with it.  The Property_Characteristics class is used to provide additional information about the parameter.  This class can be used to specify upper and lower bounds, significance digits, tolerance, missing data flags, and several other characteristics.  In this example, the lower and upper bounds and the tolerance are provided for each parameter.   The SEDRIS Write API will use these three characteristics when they are present to compress the data when it is written to the SEDRIS transmittal in the next release.So far there has been no mention of the actual data.  We have described how the data is organized and how we describe the data, but we have not said, "this is where you put the data."  This is because the data is not explicitly contained in the DRM.  However, it is implicitly contained.  Early on it was decided not to include the Data_Table and Property_Grid data in the DRM because the amount of data can be large.  Instead, hidden pointers are maintained that point to the data.   In a STF, the data is actually contained in files external to the DRM portion of the STF.  When creating a STF, after the classes as described are created and added to a transmittal, the user makes additional function calls to add the actual data to the transmittal.  When reading a STF, the opposite is done.  Once a user has found the Property_Grid that they want, the user makes explicit calls to load the Property_Grid data.GRIB to SEDRIS STF ConversionAtmospheric forecast model output is usually distributed using the World Meteorological Organization (WMO) Gridded Binary (GRIB) format.  A process was developed to convert GRIB files to a SEDRIS Transmittal Format (STF) using the above mapping.  The process uses two programs, one to perform the mapping and the other to create the STF.  The first program, GRIB2SED, analyzes the GRIB files and performs the mapping to SEDRIS.  It creates a mapping file that describes how the GRIB data is to be mapped using the SEDRIS DRM.    In addition to the GRIB files this program also requires a metadata record either in the form of a Federal Geographic Data Committee's Content Standard for Digital Geospatial Metadata Version 2 1998 metadata record or a file that uses the same tags to identify the metadata sections.  The metadata record is required to provide additional information required in a STF that is not available in the GRIB records.  After the mapping file has been created, the second program, GRIB2STF, reads the GRIB files and creates the STF.This mapping file approach was taken because, while the general form of the mapping is the same from data set to data set, the actual mapping depends on the number of base forecast time, number of taus, the parameters, and the surface types.  Also, by decoupling the mapping from the actual creation of the STF, future support for other formats is easier to provide.  Conversions have been done for COAMPS, MM5, and Wave Model (WAM) data sets.  As an example, one COAMPS data set converted has two base forecast time, 5 taus, and several parameters giving a total of 510 GRIB messages, with one grid per messages.  Execution time was approximately 114 seconds.  There is an increase of total data set size by a factor of 3.  This is because the GRIB files use internal compression and at the current SEDRIS release does not perform any compression.  Compression for Data_Tables and Property_Grids will be included in SEDRIS release scheduled for March 2000.To use the conversion programs, a user must provide three files: 1) a file that contains the GRIB table that contains the GRIB parameter information for their data set,  2) a file that maps the GRIB parameter IDs to SEDRIS Attribute Codes (SAC), and 3) a file that maps the GRIB level types to the type used within SEDRIS.  These files are in a specific format.  However, the existing files can be used with few if any changes for most GRIB data sets.  Any changes required will reflect local additional and modification to the GRIB standard.Future DirectionsFuture work includes the inclusion of additional atmospheric parameters. Specifically, climatologial and statistical parameters.  Also the conversion process will be enhanced to include support for additional formats.  These formats have not been identified at this time, but could include Binary Universal Form for the representation meteorological data (BUFR) or NetCDF.  Viewers for atmospheric and oceanographic transmittals are also under development.AcknowledgementThis work was sponsored by the Defense Modeling and Simulation Office (DMSO, through the Synthetic Environment Data Representation and Interchange Specification (SEDRIS) program.Author BiographiesDr. Louis Hembree is a Research Meteorologist at the Naval research Laboratory Marine Meteorology Division, Monterey, CA.  He has represented the Air and Space Natural Environment in the SEDRIS development as the subject matter expert for the atmosphere.  He is also Technical Lead and Resource Site Lead for the Master Environmental Library.Dr. Rob Cox is a Chief Scientist with SAIC.  Dr. Cox serves as project director and principal investigator for SEDRIS.  His Ph.D. is in Meteorology from Texas A&M University. He has served in a diverse set of positions inKorea, Nebraska, and Washington DC.  Through the years he has supported many experiments and war games.  Valerie Pastor is a Research Programmer at SAIC, Monterey, CA.  She has over 19 years of programming experience.  She is the principle developer of the GRIB to SEDRIS conversion routine.Figure  SEQ Figure \* ARABIC 4:  Geometry hierarchy organization used in atmospheric forecast mapping.  Shaded areas indicate hierarchy levels. EMBED PowerPoint.Show.8   EMBED PowerPoint.Show.8   EMBED PowerPoint.Show.8  Figure  SEQ Figure \* ARABIC 6:  Axis classes used in the example mapping.Figure  SEQ Figure \* ARABIC 3:  High level mapping for atmospheric forecast fields.   Based on SDRM 2.5.3.Figure  SEQ Figure \* ARABIC 1:  Simplified SEDRIS 2.5.2 DRM showing the classes used in atmospheric mappings.Figure  SEQ Figure \* ARABIC 7:  Typical Table_Property_Descriptions and associated Property_Characteristics used to define contents of a Property_Grid. EMBED PowerPoint.Show.8   EMBED PowerPoint.Show.8   EMBED PowerPoint.Show.8  Figure  SEQ Figure \* ARABIC 5:  Second and third hierarchy levels with two Property_Grid classes. EMBED PowerPoint.Show.8  Figure  SEQ Figure \* ARABIC 2: Simple mapping of atmospheric forecast data set.