The Base Object Model (BOM) Primer: A Distilled Look at a Component Reuse Methodology for Simulation InteroperabilityPaul L. GustavsonLarry RootSimVentions, Inc.1025 Ficklen RdFredericksburg, Virginia 22405 HYPERLINK "mailto:info@simventions.com" info@simventions.comJohn P. HancockArtisTech Inc.4301 N. Fairfax Drive, Suite 1090Arlington, Virginia 22203 HYPERLINK "mailto:jhancock@artistech.com" jhancock@artistech.comChristopher StapletonUCF Institute for Simulation Training (IST)3280 Progress Drive, Orlando, Florida 32826 HYPERLINK "mailto:christopher@stapleton.net" christopher@stapleton.net HYPERLINK "http://www.christopher.stapleton.net" www.christopher.stapleton.netKeywords: BOMs, HLA, Reuse, OMT, Interoperability, Patterns, FEDEP, Components, BehaviorABSTRACT: Base Object Models (BOMs) are a SISO approved form of Reference FOM.  They promise to offer a componentized overlay to conventional HLA FOMs without breaking the HLA paradigm, and provide an appropriate mechanism for HLA reuse as identified in the recent MoA on HLA for DoD Simulations (circa Nov. 3, 2000).  Moreover, BOM extensions have been recently proposed which might pave a migration path for HLA into exciting new add-in technologies and other simulation domains.  This concept expansion includes building BOM sets from a clean sheet of paper, adding behavior to BOM infrastructures, and applying BOMs to support Advanced Distributed Learning (ADL) and Experiential Consumer Media.In the work-a-day HLA world, FOM development, maintenance and reconfiguration become increasingly important concerns for the HLA simulation community.  Reuse is an important aspect of the HLA architecture, and the development of FOMs leveraging existing work helps to achieve simulation interoperability at a reasonable cost.  The size of monolithic FOMs becomes unwieldy with continued growth, and the options in the construction of new FOMs become confusing.  This paper proposes to capture and codify the emerging direction, approach, and methodology that is being developed and tracked by the BOM Study Group members.1. IntroductionFor many of us, Simulation Interoperability is the ultimate goal and objective of our work-a-day lives – at least we would like it to be.  Often times, however, we are inundated with unwanted integration maters or development issues that ultimately restrict our ability to achieve and benefit from the information interchange of mixed simulations and live systems.  By leveraging practices and ideas borrowed from other disciplines and fields however, we can put into place the appropriate methodologies that allow us to achieve interoperability more rapidly and easily.  One such method that appears to have significant merit in facilitating simulation interoperability is the idea of component reuse. This paper provides a distilled look at a component reuse methodology for simulation interoperability known within the Simulation Interoperability Standards Organization (SISO) community as Base Object Models (BOMs).  We will examine the BOM methodology and how it can be used as a building block mechanism for HLA federation development.  We will also look at how BOMs might be used to transfer the use of interoperability simulation standards to other industry applications and to the consumer media market (the mass market).   INCLUDEPICTURE "http://www.sisostds.org/webletter/siso/iss_73/images/347_3.GIF" \* MERGEFORMATINET 2.  HistoryBefore diving into the particulars of the BOM Methodology, it is important to understand the roots of simulation interoperability.  As a community, we have traveled quite a distance.  However, most realize we still need to go a bit further to reach a state where simulation interoperability is common and natural.  Looking back at where the footprints have fallen helps us to gauge how much further we still need to travel and what elements may be missing.2.1 Back in the Days of DISWhen the Distributed Interactive Simulation (DIS) standard was born many of us went to task and began building and integrating our simulations and systems to the DIS Protocol Data Units (PDUs).  These PDUs provided the common syntax message needed to perform information interchange.  At the time, it was pretty exciting.  We connected Army M-1 tank simulators, Air Force F-16 flight sims, Army Patriot interceptor models, and Navy AEGIS Tactical Combat Systems together despite their geographical separation.  They were able to share and reflect data simultaneously and perform virtual battles within a common battle space.  In addition, we had tools to capture and provide visualization of the synthetic battle space giving us the ability to review and replay an exercise.  Ultimately, this technology was used successfully to perform qualified testing, training, analysis, and prototype development.  Make no mistake, standards such as DIS, its predecessor Simnet, and the Aggregated Level Simulation Protocol (ALSP) were all important milestone technologies within our community in the pursuit of simulation interoperability – but it wasn’t enough.  As the number of DIS exercises increased, so did the need to modify or create new PDUs to better reflect the capabilities and features of a model or simulation.  Because of its growth and the custom changes often made to the PDUs, DIS 2.04 (IEEE 1278) plug-and-play interoperability could never be guaranteed.  Furthermore, the structured based approach of DIS in which complete packets (PDUs) had to be frequently sent when only a change may have occurred to one or two attributes revealed additional inadequacies of the DIS standard.  As far as future interoperability needs, DIS (and ALSP) was simply not enough.  We realized the need for a better method to share and reflect the capabilities of a greater variety of simulations and models (including live systems).  We also needed a method that allowed more appropriate interchange of data where only information that had changed since a previous update would be transmitted.  These experiences and needs forged the development of the High Level Architecture (HLA) in 1996.  (Prototyping 1994)2.2 HLA Liberations and LimitationsHLA’s uniqueness from its infancy has been its object-based design.  This was intended to optimize data distribution, and provide developers the flexibility to define (or refine) their own set of simulation object and interaction classes for data interchange rather than being restricted to a set of fixed PDUs.  The collection of these simulation object and interaction classes is typically identified and contained within an interchange document known as the Federation Object Model (FOM).  In theory, the flexibility offered by FOMs allowed for greater expansion of a battlespace environment compared to HLA’s predecessors.  Unfortunately, we currently only have a handful of recognizable FOMs that we are content with using.  The Real-time Platform Reference (RPR) FOM, for example, was provided as a supportive transition FOM for those who were migrating from DIS.  The RPR FOM has gained popular acceptance and is used by many systems (called Federates), but because of its DIS lineage (as far as data representation), it is restrictive in its ability to share and reflect new types of system data.  Furthermore, despite the increased availability of HLA implementation tools, and the well-regarded Federation Development and Execution Process (FEDEP) model, which provides insight into the sequence of activities needed to construct HLA federations (e.g. FOMs), the offering of other widely accepted FOMs has been slow and light.It is believed that the extensive effort and compromise required in developing FOMs is one reason that the M&S community has failed to deliver more FOMs.  In fact, the M&S community has been driving toward an “unstated but arising” restrictive FOM reuse philosophy.  In fact, several well-regarded middleware components are restricted to one or two de-facto FOMs.  This long-term exclusive use of one or two static FOMs is severely limiting the flexibility, capacity, and capability of simulations to be able to fully reflect their intrinsic capabilities within a distributed virtual environment.  Furthermore, a restrictive FOM reuse philosophy unintentionally limits HLA's capability to support a diverse range of conceptual and operational simulation domains. 2.3 The Advent of BOMsExamination of the HLA FEDEP model provides insight into some prospective concepts that can be used to divert these potential consequences.  Among these is the concept that federation design and development should begin with the exploration of reusing available FOM components or “piece parts”1.  This “piece part” concept was the seed that germinated the idea of the Base Object Model formally introduced by the Reference FOM (RFOM) Study Group in the Spring of 1998. From September 1997 to March 1998, the RFOM SG worked diligently to define and identify "Reference FOMs" in the context of the needs of all SISO communities.  The hope was that these RFOMs could be used to further encourage, guide and increase FOM development and use.  Because of this effort, an unambiguous, capstone RFOM definition was unanimously agreed upon (see Table 1-1), and five independent models (Classes) of Reference FOMs were defined.  One of the RFOM Classes identified by the RFOM SG was the BOM.  Table 2-1Reference FOM (n)A set of HLA OMT compliant tables and associated meta-data which forms: An identification of commonly used and accepted classes of objects, attributes, and interactions that have been supported by multiple federations. A Federation Object Model (FOM) and use-cases that have been used to represent the structure and/or behavior of multiple federations and has gained significant approval and acceptance in the simulation community. An endorsed FOM and meta-data which can be used as is or as a building block for the development and establishment of other FOMs (or public sections of SOMs).BOMs leveraged the idea of the FEDEP concept by placing emphasis on component reuse of FOM (and SOM) “piece parts”.  These particular “piece parts” recognized as BOMs are defined as "a simulation component representing a single aspect of federation interplay that can be used as a building block of FOMs and SOMs.” 2  Like a FOM or SOM, a BOM is documented as a set of the data elements required by the IEEE 1516 HLA Object Model Template (OMT) specification.  Thus, a BOM consists of one or more classes, interactions, associated attributes, parameters and relevant parent class data (as prescribed by the OMT).  Furthermore, BOMs are augmented with additional meta-data to help exploit its potential for reuse.  It is important to understand, however, that a BOM represents an object model set needed to represent a single aspect of simulation interplay.  Whereas, a FOM (or a SOM) often represents multiple object model sets need to represent the complete collection of simulation interplay activities.  BOMs provide a distinct way to represent simulation interaction and trigger components -- components that can be used to build or add to a federation. Following the RFOM SG report, which identified the BOM concept as a promising reuse technology, several papers were written and presented at subsequent SIWs that further expanded on the BOM concept3 4 5.  Due to the interest in the BOM Methodology, SISO formed a BOM SG that commenced at the Spring 2000 SIW to further study the BOM concept and methodology.  The results of the BOM SG are shared at a high-level within this paper, and are further elaborated within the BOM Methodology Strawman (BMS) specification to be presented at the Spring 2001 SIW.3. Component-Based Development  Although somewhat novel for HLA, what the SISO BOM SG is encouraging is not anything new.  As illustrated in Table 3-1, the idea of component-based development has been a driving force of many other industries for quite sometime.Table 3-1To better understand the concept of BOMs, let’s expand on the Home Construction analogy from Table 3-1.  When a person sets out to buy a home (i.e., a Federation), they will either: buy an existing home (i.e., Reference FOM); or select from a book of preset floor plans (i.e. conceptual models and template RFOMs); or generate his or her own floor plan that is either brand-new or a modification of an existing one (i.e., build from scratch / use template FOMs).  If choice (1) was selected then that individual is ready to move in (i.e., integrate and execute the FOM).  If either (2) or (3) was selected then a set of sub-contractors must be located and chosen (i.e., FOM implementers) who can bring their unique knowledge into the plan to allow it to become a reality.  These sub-contractors include carpenters, plumbers, electricians, and so forth.  They not only bring their unique tools but also the materials and building supplies (i.e., bricks, lumber, piping, and wiring & fixtures) required to perform and to complete the job.  These materials are nothing more than prebuilt, adaptable components (i.e., BOMs) used in the construction of a house or building.  Imagine a house or building being constructed that required the subcontractors to make the actual bricks or the windows, or carve out the lumber from a tree.  Like FOM development, the task would be tiresome and extensive, but a component-based approach simplifies and accelerates the building process.  The full range of flexibility within the M&S community is needed to properly meet the demands of its users.  Having ready-made FOMs for the high-end users and BOMs for the do-it-yourself users and developers allows HLA to be effectively applied throughout the entire M&S community. 4. BOM Architecture ElementsIn order to apply and try BOMs during Federation Development, it’s important to gain a general understanding of a BOM.  We won’t go into detail here (that’s left for the BMS spec), but we will provide the basic nuts and bolts of the BOM architecture elements.First, it’s important to understand that a BOM is distinguished by one or more object classes, interactions and associated attributes (in accordance with the Object Model Template).  In fact, a BOM looks and acts like a mini-FOM except that it is augmented with additional meta-data (such as requirements, conceptual model data, and use history).  The key thought is that a BOM is a “thread” of simulation interoperability.  It’s not just an object class piece or specific attribute for example.  It’s a complete model of a simulation interplay activity.  There are two types of BOMs that have been recognized by the BOM SG:  Interaction BOMs and Trigger BOMs (formerly called Attribute/Update).  In addition, there are two categories of BOMs that have been identified to help facilitate simulation interoperability: Interface (IF) BOMs and Encapsulated  (ECAP) BOMs.Let us quickly examine the Types and Categories of BOMs.4.1.  BOM TypesAs described previously, there are presently two types of BOMs, which are independent of categories, that can be modeled and represented: Interaction BOMs and Trigger BOMs.An Interaction BOM is an interaction class and any associated object classes that are impacted by the interaction class.  An example would be a radio transmission, which is an interaction that requires at radio to initiate the transmission and the addition of one or more radios to receive the transmission.   The BOM groups these elements together since they, by nature, represent an “aspect of simulation interplay” as required by the BOM definition.A Trigger BOM is an object class that possesses at least one attribute that may illicit a response from one or more other object classes when the condition of that attribute has changed.  Originally, we identified this type of BOM as an Attribute Update/Response BOM.  However, we have found the term Trigger to be more appropriate.  What we are looking for specifically, are attributes of an object that triggers a response within other objects when the attribute(s) has been changed through either an (1) internal update (i.e. the minute hand on clock has change) or (2) an object action or interaction has occurred (i.e. a human entity has tripped an alarm).  The idea is that when the condition (state) of an object that is of interest to other objects within a virtual environment has changed, then a response may occur by those other objects.  Within a virtual world such as depicted within a video game, there can be many types of triggers such as Traps, Exploding Boxes, Breakable Crates, Elevator Switches, and Guard Dogs that are angered by an entity presence (location attribute change).4.2  BOM CategoriesAs describe previously, there are two categories of BOMs that have been identified to help facilitate simulation interoperability:  Interface (IF) BOMs and Encapsulated (ECAP) BOMs.  Howeever, before further detailing each of these BOM categories, an understanding of the terms of “patterns” and “components” must first be reached.  The idea of “patterns” and “components” are two important concepts embraced by the BOM Methodology that are central to each of the BOM categories.  A Pattern is “an idea that has been useful in one practical context and will probably be useful in others.”  Patterns focus on design (and analysis) as opposed to implementation elements.  Components however are, in essence, pre-built elements (focusing on implementation) that encapsulate the modeling and behavior (methods) of the class(es) that are being represented.  These components can be used or inherited “many times, either within the same system or in various systems, without modification of the original component.”   The idea of “Patterns” is applied to the Interface (IF) BOM category by default of the OMT representation.  The OMT reflects design elements more so than implementation elements.  It describes what types of data are going to be represented, not necessarily how data is going to be represented.  It’s best to think of an Interface (IF) BOM representing a “pattern of interoperability” contained within a FOM or a SOM that can be inherited within other FOMs or SOMs.  IF BOMs are distinguished by one or more object classes, interactions and associated attributes (in accordance with the Object Model Template).  IF BOMS are also augmented with additional meta-data such as requirements, conceptual model data, and use history.  Any internal implementation defining how an IF BOM behaves, however, is not provided (contained) within the IF BOM meta-data.The “Component” idea is applied to the Encapsulated (ECAP) BOM category.  It’s best to think of an ECAP BOM representing a “component” of a federate or federation that can be leveraged within other federates and federations.  Now, we still need to know what type of data is going to be represented, therefore, like IF BOMs, the “interface” to ECAP BOMs are also distinguished by one or more object classes, interactions and associated attributes (in accordance with the OMT).  In addition, like IF BOMs, ECAP BOMs are augmented with additional meta-data such as requirements, conceptual model data, and use history.  However, the internal implementation defining the behavioral elements of the BOM can be encapsulated within an XML document supporting language independence, which is parse-able by participating federates.  The ECAP BOM, therefore, shares how data elements will behave and react; it provides the internal model.The OMT (IEEE 1516) provides the interface syntax used to represent the exposed functionality of the BOM (whether it be an IF BOM or ECAP BOM).4.3 Meta-DataWe alluded to meta-data earlier, and this should not be neglected.  Meta-data is an important component of BOMs and allows BOMs not only to be more easily understood, but also easier to find, select and apply.  This meta-data provides information not currently captured with OMT data.  Meta-data can be comprised of many elements including:Requirements Conceptual ModelIntended Domain and ScopeIntegration ExperienceProcessProductsLessons LearnedHow it was usedRevision HistoryOther StuffSequence DiagramsScenario ApplicationOne of the key meta-data components is the requirements.  Some of the early BOM papers written and presented at the SISO Interoperability Workshop,  99S-SIW-115 and 99F-SIW-112, focused on the concept of Use Cases to provide the necessary requirements meta-data (and a portion of the conceptual model meta data) for federation development, specifically for FOMs, SOMs and BOMs5 6.  The BOM SG has found merit in this approach and the Use Case concept.  The concept is further elaborated within in the BMS specification.  The importance of meta-data, specifically requirements meta-data, is the ability to understand the intent of the BOM, and, secondly, to understand how it’s been used historically.   This allows BOMs to be more easily found and used during FOM development.5.  BOM Development ConsiderationsThere are two basic approaches for developing BOMs.  Either the process of extracting “patterns” of interplay from an existing FOM or SOM can take place, or a BOM can be built from scratch.  In either case, the BOM is supplemented with meta-data that allows it to be re-used.  It’s also important to decide on the type of BOM you choose to have.  The choices are an Interaction-based BOM or a Trigger-based BOM, and the decision often depends on the requirement and scope (see Figure 5-1).  Figure 5-1Interaction BOMs, on the surface, are easier if object classes are associated with an interaction class.  The pattern of simulation interplay includes this one interaction and each of the object classes plus attribute types associated to the interaction (see Figure 5-2).  This works well for a Radio Transmission, for example, in which a radio signal is the interaction, and the receiving and sending radio types are linked to that interaction.     Figure 5-2In the long run, however, Trigger BOMs play a more cause and affect role often associated to simulation events.  The reason is that triggers provide a more authentic aspect of reality in which behavior can be captured, modeled and even encapsulated (via ECAP BOMs).  As a side note: this type of modeling is often used to convey Artificial Intelligence (AI) within modern computer games.  It provides a virtual reality a greater of dynamics.The easiest decision is deciding the level and breadth of the BOM (see Table 5-1).  Will it be an IF BOM or an ECAP BOM?  Obviously, IF BOMs are easiest since they strictly represent design issues based on the OMT.  Implementation matters (i.e. Behavior), however, are the responsibility of each federate.  The ECAP BOM, however, goes well beyond the IF BOM; it attaches behavioral modeling elements encapsulated within XML.  The XML Schema for this approach is something that still needs to be worked out and standardized within the community.  The issue is determining how to capture behavioral elements in XML.  Table 5-1Another important issue in building a BOM is deciding upon the level of abstraction (see Figure 5-3).  Will the BOM be specific to one particular type of simulation interplay thread, or will it be robust by scaling it back to support multiple forms of a particular simulation interplay thread.  By scaling it back, making it more abstract, the BOM can be inherited and used more frequently.  Yet, on the other hand, the BOM would require greater adjustment to suit specific needs and causes ECAP BOMs to provide and support greater behavioral modeling meta-data.Figure 5-3Once a BOM is built, several things should happen before it is provided to the community.  It should be tested and verified (with the result of the test being provided as meta-data).  Currently, libraries that can support BOMs are not available, which raises the issue as to where or when can BOMs be submitted and obtained from an online repository.  The BOM SG anticipates repositories will eventually be available.  In addition, finding OMT tools that know how to reflect a BOM so that it can be either built or used is a current deficiency that the BOM SG group anticipates will also be resolved in the near future.  Existing tools should support the OMT aspect of a BOM even though it may not provide the appropriate meta-data (for both IF and ECAP BOMs) and XML behavior modeling support (for ECAP BOMs).  As BOMs are used and exercised by various federates, use history meta-data should be appended to the BOM and provided back to the repository where the BOM was attained.6.  BOM Reuse ConsiderationsThe real winners of BOMs are ultimately the users, however it is important that BOMs are used appropriately and can be easily selected.  Otherwise, without guidelines, BOMs could add more complexities and difficulties to the Federation Development Process.  The bottom line is knowing how to select and reuse a BOM in the construction of an interoperable environment.  However, this effort is often contingent upon access to proper tools and BOM repositories. There are two key approaches for using BOMs:Clean Sheet Federation DevelopmentSecond Addition Federation DevelopmentTable 6-1The Clean Sheet Federation Development approach is really building a FOM or SOM from scratch using BOMs as add-in components.  The Second Addition Federation Development approach is simply using BOMs to supplement an existing FOM.   The most important element for either one of these approaches is to know what you’re looking for.  Never underestimate the importance of the requirements meta-data.  Requirements meta-data is important for both the FOM being built and for the BOM being selected.  Theoretically, BOMs can be located simply by searching through each BOM’s meta-data until a match is made; this is called meta-data matching.  Meta-data matching, however, is always contingent on knowing the requirements for the FOM in construction.  Also, part of making BOMs useful to others is hinged on use history and providing feedback to the BOM development community.  This feedback should include sharing the integration experience in the form of BOM meta-data.  It’s also a good idea to create (or add to) a FOM with a skeleton design approach.  This sometimes allows prebuilt BOMs to be located that match with the framework element of a FOM under design.  When unique threads of interoperability are identified from that skeleton design, the prospect of incorporating a particular BOM can be realized.  If a BOM does not exist, it creates an opportunity to build a BOM at that moment (see Figure 6-1).  Future FOM/SOM developers will then be able to reuse the BOM later. Figure 6-1In an ideal world, users of BOMs will hope to find BOMs that can be used “as is”.  These are “concrete” BOMs, independent of type or category, which provides almost the complete capability necessary to support the interoperability requirement for the FOM developer.  Most BOMs, however, must be inherited due to the level of “abstraction” performed on the BOM during its creation.  If a “concrete” BOM cannot be found, which might often be the case, it is important to keep in mind that once an “abstract” BOM is included into a FOM, it can be inherited.  Inheritance allows a BOM to be expanded and customized for a particular FOM need.  It’s anticipated that a majority of BOMs will require some level of inheritance.Finally, when an ECAP BOM is selected, be sure to maximize its capability by transitioning (making available) the behavior modeling contained within the BOMs XML meta-data to the federate.  One of the benefits of XML is that it allows data to be shared and accessed independent of language or platform.  As a result, this access can be performed dynamically at run-time without modification to federate code.7.0 BOM ImpactMany recognize that the time is ripe for bringing the idea of component-based development to the world of HLA to help propel us on our journey7.  The design and development of “interoperable environments” should begin with the exploration of reusing available simulation object model components.  The BOM methodology, introduced in this paper and further described in the BOM Methodology Strawman (BMS) Specification, supports this premise by encouraging simulation interoperability through component reuse.  In addition, the BOM methodology allows HLA to reach broader domains and markets including Entertainment and Gaming, Advanced Distance Learning, Medical and Biotechnology, and Manufacturing and Processing.7.1 Next Generation InteroperabilityIf next generation FOMs and SOMs were to be built based on BOMs, then we will ultimately find it even easier for systems (federates) to quickly map to FOMs, and for middleware to be able to support a broader selection of FOMs.  Ultimately, the FOM construction time and effort would be reduced, greater FOM flexibility would be achieved, and interoperability would be simplified. The meta-data associated to these BOMs also provide missing elements not currently captured with FOM and SOM data including requirements (such as Use Cases), conceptual model information, the intended domain and scope, the integration experience of others, revision history, and other relevant meta-data such as sequence diagrams and scenario application.  This meta-data allows BOMs not only to be more easily understood, but also easier to find, select and apply.  7.2 New Interoperability LandscapesBOMs may very well have more impact on the simulation industry economically and creatively than they do technically.  BOMs can be seen as the key to transferring the use of interoperability simulation standards to other industry applications and more importantly to the consumer media market (the mass market).  Presently, HLA is most widely used as a military training and testing tool, but it also has potential value as a tool to the commercial industry.  As simulation technology becomes more accessible to the consumer markets (ala video games and distributed learning environments), simulation will gain its biggest impact as a communication medium.  Simulation standards will have as much of a dramatic effect on communications as did standards of printing, recording, telecommunications and broadcast technology.  In order for standards to ultimately survive the test of time, it will eventually need to service the expansive and diverse mass consumer media market.  This market is valued into the trillions of dollars annually worldwide and will forge the new economic models for the simulation industry.7.2.1 Transforming Simulation Into the Next Media RevolutionFrom telling stories of the prehistoric hunt to sharing the immediacy of “history in the making” with CNN, media allows us to communicate the experience of humanity. Simulation will have the ability not just to distribute a limited and passive audio/visual view of the experience, but it will also offer the ability to provide duplication of the experience itself with multi-modal, interactive, immersive experiences in large-scale worldwide networked virtual environments.  This experience-based medium will revolutionize media.  In sparking that revolution, simulation standards will have even more dramatic results then did the standards of moveable type had with the printing industry; the recording of artistic performance had with motion pictures; and the immediate broadcast of multimedia has had with radio and television.Therefore, simulation standards for consumer use will need to be even more dynamic and interoperable. BOMs provide the critical and obvious development conduit by breaking down the units of virtual environments into smaller and more dynamically interchangeable objects.7.2.2 Application Of BOMs in Experiential Consumer Markets  In media markets, content is king.  FOMs, SOMs and BOMs become the creative commodity that fuels the information, entertainment and education media industries.  The flexibility and adaptability of this content is essential to increase productivity and efficiency as well as a way to open subsequent markets for the reuse of content.  BOMs become the basic currency or building blocks to create and deliver media content.The BOM approach, however, cannot be solely developed in the limited application of military training and testing.  Simulations and BOMs offer a whole new layer of content transferability and market potential.  Whereas, in today’s video game markets, for example, content is created similar to rigid SIMNET systems.  Like the monolithic FOM approach described earlier, a video game’s limited and exclusive content minimizes the potential for it to penetrate a wider share of the consumer market.   BOMs, however, will be able to offer an infinite array of content such as virtual characters, fantasy vehicles, cyber-merchandise that is of greater use to a wider audience.  Ultimately, BOMs will become independent commodities.  This phenomenon is already occurring on Ebay with the auctioning of virtual RPG characters.   BOMs represent the unique form of virtual content that will help define Experiential Consumer Media standards.The most important improvement BOMs would provide to the Experiential Consumer Media market is that it would increase productivity and efficiency regarding the production and delivery of content.  Currently, highly exclusive standards are employed with little interoperability.  However, the production of a diverse set of BOMs would allow the development and delivery of Experiential Consumer Media much like a television movie, but without the passiveness.  Without having to reinvent the wheel with proprietary graphic engines and assets, new genres and applications can be discovered which will open new markets for simulation.7.2.3 Commercial Market PotentialTechnological innovation has made possible a phenomenal growth of media in the last hundred years.  Optical, mechanical and electronic media has remained mostly passive and non-interactive.  Through the means of Internet systems, high-bandwidth communications and simulation technologies, simulation can become ubiquitous within our culture. Simulation technology will, as a result, dramatically transform media from passive entertainment to real-time, interactive, experience-based immersion (three dimensional and multi-modal).  Compared to the familiar world of military training and testing, the consumer media market is an entirely separate, yet appropriate application domain for simulation interoperability. This market brings with it entirely different requirements and limitations that will need to be considered in the evolution of BOM standards. The rapid expansion in the use of Experiential Consumer Media will be possible through the increase of high-bandwidth telecommunication lines being installed within public and private facilities. The Internet has shown us that these new markets will have easier access than did the channels of passive media.  The largest challenge to this highly lucrative application domain is that users will demand the highest level of fidelity, capacity, efficiency and robustness, and yet the actual users are mostly untrained, inexperienced, highly regulated, unsupervised, demanding and often challenged educationally.   The use of BOMs will allow the maximum ability to keep up with market demands and trends in simulation products.  As in the past, the consumer media market, being so large, tends to become the 800-pound gorilla that drives the acceptance of standards. The use of BOMs within the consumer market can lead a transformation of a billion-dollar MS&T industry to a trillion-dollar Consumer Media market through experiential digital media.  It can also help forge the future of HLA standards.8.0 ConclusionThe BOM methodology provides an appropriate building block mechanism not only useful for HLA federation development, but also for other markets such as Advanced Distanced Learning and Experiential Consumer Media.  BOMs are a promising simulation technology that will encourage greater abundance of interoperability and content usability across a wider breadth of domains.    The HLA community is encouraged to consider applying BOMs during federation development efforts and to pioneer its transformation to other domains through the development of content via BOMs.Conceptually, BOMs will work, but pilot projects and real world examples need to be prototyped and demonstrated in the short term to gain even more in-depth knowledge and applicability, and to provide incentive for others to build, share and use BOMs.   It is envisioned that future repositories and tools will make use of BOMs providing easy-to-access and easy-to-use capabilities for developers and users.  Once this occurs, the BOM Methodology will provide an opportunity not only for the community to attain high fidelity interoperability and simplified integration through reuse, but also will collectively expand and apply HLA to other territories and domains.9.0 Post NoteThere is much more detail to BOMs than can be described in this position paper.  However, if you would like to learn more about BOMs, further information can be retrieved at www.sisostds.org/stdsdev/bom/.  In addition, in March 2001, the Base Object Model (BOM) Methodology Strawman (BMS) specification will be offered to the community to further encourage the development and use of BOMs9.  The BMS specification will serve as an open SISO document that describes a strawman methodology for creating, selecting and using Base Object Models (BOMs).  Specifically, it will provide details of the architecture and describe how to build and use BOMs.  References[1]	Defense Modeling and Simulation Office (DMSO),  “High Level Architecture, The Federation Development and Execution Process, Version 1.5”, December 8, 1999.[2]	Hancock, John, P, et al. “Reference FOM Study Group Final Report” SISO Reference Product March 1998.[3]	Gustavson, Paul L., et al. ” Base Object Models (BOMs): Reusable Component Objects for Federation Development” 98F-SIW-034 Fall 98 Simulation Interoperability Workshop, September 1998.[4]	Hancock, John, P, et al. “A Structural Description of Base Object Models (BOMs)” 99S-SIW-185 Spring 99 Simulation Interoperability Workshop, March 1999.[5]	Gustavson, Paul L., et al. ”Object Model Use Cases: A Mechanism for Capturing Requirements and Supporting BOM Reuse” 99S-SIW-115 Spring 99 Simulation Interoperability Workshop, March 1999.[6]	Gustavson, Paul L., et al. “Use Cases – A Blueprint Approach for Federation Development, Testing, and Analysis” 99F-SIW-112 Fall 99 Simulation Interoperability Workshop, September 1999.[7]	Gustavson, Paul L., et al. ” BOMs: The Promised Land?”, Simulation Technology Magazine Vol. 4 Issue 2 January 4 2001.[8]	Gustavson, Paul L., et al., “BOM Methodology Strawman Specification” Unpublished draft.Author BiographiesPAUL GUSTAVSON has over eleven years of computer engineering experience supporting a wide variety of modeling and simulation, and software development efforts within the DoD and commercial communities.  Paul has been one of the key software developer’s of OMSuiteTM, an HLA implementation tool suite that utilizes Use Cases, BOMs and OM Mapping, and is based on the HLA FEDEP and CAFDE architecture.  Paul is a member of the Simulation Interoperability Standards Organization (SISO) and currently serves as the chair of the Base Object Model (BOM) Study Group and co-vice chair of the Federation Development Process (PROC) Group within SISO.  He has authored and presented numerous papers within the M&S community and is a contributing author of the “C++Builder 5 Developer’s Guide”.    JOHN P. HANCOCK has over fourteen years of engineering experience.  He is presently the President of ArtisTech Inc. in Arlington, VA.  Mr. Hancock’s involvement in simulation spans his entire career.  He has been an active member of the DIS and HLA community since 1993 and has authored and presented several SIW publications.  Mr. Hancock served as lead of the SISO RFOM Study Group, and is presently vice-chair of the SISO BOM Study Group He has also contributed directly to the HLA specifications effort. CHRIS STAPLETON is the Director of Entertainment Research at UCF's Institute for Simulation and Training (IST) where he is mixing reality with fantasy.  Within the Media Convergence Laboratory, Mr. Stapleton is bringing together both the art and science of simulation technology from many industries to create experiences that more effectively immerse mainstream audiences into physical, emotional and imaginative worlds.  His focus is to create intuitive and playful virtual experiences that breakdown the boarders between imagination and realty.  His studies focuses on developing the next generation content for art, education and entertainment through experience-based digital media. Mr. Stapleton has twenty years experience in creating immersive fantasy experiences for the entertainment industry around the world.  His latest work was as a Show Producer for Universal Studios Islands of Adventure in Orlando, Florida. His background includes work for theme parks, film, Broadway theater and museums for clients such as Universal Studios, Disney, Nickelodeon, and Paramount Parks. His education includes a Master of Fine Arts in Design for Film, and a Bachelor of Fine Arts in Design for Theater from New York University, Manhattan and London campuses.  LARRY ROOT has over sixteen years of experience in the areas of Software Engineering, System Engineering, Technical Management, and Financial Management.  Most of this experience has been in support of the Naval Surface Warfare Center Dahlgren Division (NSWCDD), but most recently, it has been in support of the commercial development of tool suites.  These tool suites, and their integrated development environments (IDEs), provide data visualization and large-scale modeling and simulation (M&S) support to M&S efforts using DoD’s newly defined High Level Architecture.  This work has offered the opportunity for Mr. Root to push the edge of technology within the world of modeling and simulation, allowing his experience and contributions to act as a unifier in bringing together various technologies within the commercial and DoD M&S communities. 