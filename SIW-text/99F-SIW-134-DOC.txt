Developmental Concepts for DigitalDistributed Product Descriptions (DPDs)Robert R. LutzJames E. CoolahanJohns Hopkins University Applied Physics Laboratory11100 Johns Hopkins RoadLaurel, MD 20723-6099240-228-7599, 240-228-5155robert.lutz@jhuapl.edu, james.coolahan@jhuapl.eduKeywords:SBA, Simulation Based Acquisition, Architecture, DPD, Distributed Product DescriptionABSTRACT: During 1998, the Joint Simulation Based Acquisition (SBA) Task Force, chartered by the Acquisition Council of the DoD Executive Council for Modeling and Simulation (EXCIMS), prepared an SBA Roadmap, which has evolved based on feedback from Industry, the Services, and other DoD Agencies. One of the architectural constructs proposed in the SBA Roadmap is the Distributed Product Description (DPD). A DPD is defined to be a distributed collection of digital product-centric information that is interconnected via web technology into what appears (to the user) to be a single, logically unified product representation, that is composed primarily of three types of information: product data, product models, and process models.The purpose of this paper is to present some developmental concepts for the contents of DPDs and their use in the acquisition of systems, building upon the high-level definition contained in the SBA Roadmap. A discussion is also provided on the relationships between DPDs and other proposed SBA systems architecture constructs, including the reference systems architecture for Collaborative Environments (CEs) and the DoD/Industry Resource Repository (DIRR).1. BackgroundIn 1997, the Vice-President’s National Performance Review (NPR) set a goal for cutting delivery time for new systems by 25%.  In response, the Department of Defense (DoD) stretched this goal to a reduction of 50% in acquisition cycle time and set an additional goal of reducing Total Ownership Cost (TOC).  In order to meet these goals, the Acquisition Council of the DoD Executive Council for Modeling and Simulation (EXCIMS) envisioned an acquisition process known as Simulation Based Acquisition (SBA), with the following goals:substantially reduce the time, resources, and risk associated with the entire acquisition process; increase the quality, military worth, and supportability of fielded systems while reducing total ownership costs throughout the total life cycle; and enable Integrated Product and Process Development (IPPD) across the entire acquisition life cycle.  In March 1998, the Acquisition Council established a Joint Task Force to develop a roadmap for SBA implementation.  A Terms of Reference (TOR) document [1] was developed for the Task Force that addressed architectural concepts for SBA, technical challenges, ownership of modules in the systems architecture, opportunities for reuse, investments, and recommendations for action.  Furthermore, the TOR identified three areas where changes would be required – culture, process, and technical environment.In order to complete the roadmap, the Task Force developed an approach that consisted of the following parallel but complementary efforts:The Task Force’s own literature reviews, related research, presentations by guest speakers at Task Force meetings, and Task Force internal discussions;Personal and small group discussions with DoD and industry visitors to the Task Force’s Study Room, where evolving Task Force concepts and ideas were displayed for review and feedback; andA two-session Quality Function Deployment (QFD) process (a structured decision analysis tool) to get customer input from a broad cross-section of government and industry personnel.The results of the first effort were used to populate the Task Force Study Room with concepts and ideas for discussion, and to provide initial inputs for the QFD sessions.  The feedback received during the Study Room walkthroughs and the results of the QFD sessions served to influence the Task Force’s subsequent work.  Ultimately, all three efforts led to the development of a notional architecture for SBA, and a roadmap of recommended actions to implement the architecture and address other related issues, both of which were documented in the Task Force’s report [2].The SBA architecture, as defined in the roadmap, consists of three views as specified in the C4ISR Architecture Framework [3], as shown in Figure 1.  First, an operational view of the architecture view was developed to examine organizational relationships, functions and processes for SBA.  Next, a systems architecture view was developed to highlight those physical components – platforms, data flows, interfaces and networks – that support the operational architecture.  Finally, a technical view of the architecture was developed, consisting of the standards, rules and conventions that must be followed to implement the systems and operational architectures.Figure 1.  Three views of architecture.In the roadmap, five principal SBA architectural constructs were proposed:Collaborative Environments (CEs);the Collaborative Environment Reference Systems Architecture (CERSA);Distributed Product Descriptions (DPDs);Data Interchange Formats (DIFS); andthe DoD/Industry Resource Repository (DIRR).A high-level description of these architectural constructs may be found in [4].  The third construct, the DPD, is fundamental to all three views of the SBA architecture.  The remainder of this paper is dedicated to examining this concept, describing in detail how DPDs affect each of the views of the SBA architecture.  2. Distributed Product DescriptionsA DPD is defined as a distributed collection of digital product-centric information that is interconnected via web technology into what appears (to the user) to be a single, logically unified product representation.  The purpose of a DPD is to provide a common reference for IPPD.  DPDs provide a shared view of the product’s developmental state to all participants in the acquisition process throughout all phases of the acquisition process.  This allows simultaneous evaluation of the current product configuration from the perspective of each functional discipline.  Thus, for instance, product designers can measure the performance of a product at the same time that product manufacturers can evaluate the producibility of the product and logisticians can assess the supportability of the product. DPDs are composed of three types of information: product data, product models, and process models.  Product data specifies the characteristics of a product at any point in its development cycle, including requirements, program management data, cost data, engineering data, manufacturing data, and test data.  Product models are authoritative representations of a product’s behavior and/or performance, which are exercised in support of  “what if” design optimization analyses throughout the development of the product.  Process models are used to define the business operations necessary to define, develop, manufacture, deploy, and dispose of the product throughout its life cycle.  DPDs may also contain other relevant product-related information as appropriate, such as metadata fields (e.g., verification, validation, and accreditation (VV&A) status) and applicable reference materials.The following three subsections define the role that DPDs assume in each of the three views of the SBA architecture.  This is not intended as a complete treatment of the overall architecture, but rather discusses the DPD concept from each of the three architectural perspectives.  This additional detail is intended to better define how DPDs relate to other architectural constructs defined in the SBA Roadmap.2.1 Operational ViewIn this view, the intent is to describe a notional high-level Concept of Operations (ConOps) for how DPDs support the acquisition process, along with how DPDs are developed. Since the DPD concept may be applied uniformly across all types of acquisition programs, Figure 2. Evolution of a DPD during system acquisition.specific organizational roles and functions are not addressed.  Figure 2 depicts how a DPD is intended to evolve during the acquisition of a system, with representatives of each functional discipline participating in an iterative spiral development process.Figure 3 shows the DPD ConOps at a more detailed level, overlaid on the current DoD acquisition process timeline.  The description of this ConOps begins with a high-level set of materiel requirements developed during pre-milestone 0 (Determination of Mission Needs) activities.  After the successful completion of milestone 0, Phase 0 (Concept Exploration) begins, and a Program Office would be established to manage the system acquisition and (in this case) the development of a supporting DPD.   Shortly after the Program Office is established, the designated Program Manager (PM) would select an appropriate Collaborative Environment (CE) to support the development of the product.  The purpose of the CE is to provide a persistent reusable set of Subject Matter Experts (SMEs), tools, and information resources that may be applied to the development of the class of system of interest.  A DPD that was developed in support of a previous program within this general domain may be selected as a starting framework for this new program, since many of the models, databases, and development processes that are identified in the existing DPD are likely to be at least partially reusable.  The identification of an initial DPD may be based on existing resources within the CE, or may be selected and downloaded from the DoD/Industry Resource Repository (DIRR).Once the appropriate personnel and supporting hardware/software resources for this program are identified, the system requirements are documented in an appropriate format within the DPD, and made visible to potential contractors via the DIRR.  Included in these requirements would be required formats for proposal submissions, and identification of the evaluation tools that will be used by the government.  The contractors would then access the DIRR, view the requirements, and begin to define system concepts for how these requirements can be addressed.  As these concepts are developed, the contractors incorporate them into the DPD using the approved formats.  Normally, this will include a product model, all data necessary for concept evaluation, and descriptions of supporting ConOps and development processes.  As these concepts are submitted, robust access controls ensure that all proprietary rights are preserved.  As the DPD is populated by proposed system concepts by industry, appropriate government agencies would access the DPD and begin to assess the relative utility of each concept.  Since each concept is globally viewable by all participants in the concept evaluation, the concept can be assessed by several functional disciplines at once.  That is, each stakeholder in the acquisition process can simultaneously apply an appropriate set of tools (e.g., simulations) to evaluate the concept from their unique perspective, such as performance, cost, maintainability, reliability, or supportability.  These stakeholders may then utilize appropriate collaboration tools within the CE to negotiate and ultimately agree to a global assessment of the concept relative to others.Those concepts that receive the best overall assessments would be further refined and reevaluated during Phase I (Program Definition and Risk Reduction) activities.  Here, contractors would refine the product models and supporting databases in the DPD as necessary so that virtual prototypes of their concepts could be exercised and demonstrated in synthetic environments.  Government evaluators (cost analysts, manufacturers, logisticians, etc.) and contractors would all share a common view of the Figure 3. DPD concept of operations overlaid on the current DoD acquisition process timeline.state of each system concept definition (through the DPD) at all times, while continuing to maintain appropriate access controls.  Through an associated spiral development process, the government team would provide continuous feedback to the contractor on how/where the system concept could be improved, and the contractor teams would react to this input by incorporating appropriate modifications in the DPD for reevaluation.  System requirements may also be refined as a result of this partnership between government and industry.As the best overall concept is selected for detailed Engineering and Manufacturing Development (Phase II), the DPD becomes the framework for detailed product development.  That is, the DPD represents a configuration-managed agreement across the full development team as to the current state of the product development.  Each member of the (potentially) distributed development team has access to this state, and may apply tools native to the CE (or downloaded from the DIRR) to optimize some aspect of the product design.  Team members may also collaborate on optimizing the product design from multiple perspectives simultaneously, utilizing the DPD to configure and initialize several cooperating simulations within a High Level Architecture (HLA) federation.  DPD data and models become more detailed during this phase in order to accurately reflect the characteristics and behaviors of the emerging design.  Collaboration and workflow management tools make use of applicable systems engineering methodologies specified within the DPD to control the process by which changes are introduced to the product state, thus ensuring that the implications of proposed changes are well understood and agreed to by all participants in the product development before incorporation in the DPD.  Note that the role of government in the development of the DPD transitions in this phase from that of an active evaluator of concepts to that of an overseer/controller of product development activities.Finally, during Production, Fielding, Deployment, and Operational Support (Phase III), the primary focus of DPD utilization is in support of manufacturing, training, and logistics.  Here, the DPD provides a consistent, electronically accessible view of all aspects of the product design to all production personnel, including the shop floor processes that drive the manufacturing process.   Utilizing this information, many production activities can become highly automated, decreasing the time required to fabricate the system and improving overall product quality.  Product data/models within the DPD are also utilized in the phase in support of product testing, operator training and logistical analysis.2.2 Systems ViewIn support of this operational view, the systems view identifies the hardware and software components necessary for the process model to operate effectively and efficiently.  In the roadmap, a high-level view of the SBA systems architecture is provided.  This view, shown in  Figure 4, illuminates the nature of the relationships between the DPD for a system, the collaborative environment in which that DPD is exercised, and the DIRR.  Each SBA collaborative environment is expected to be constructed, from a systems view, according to the Collaborative Environment Reference Systems Architecture (CERSA).  The CERSA is also depicted in Figure 4, in an exploded view.   Hardware and software components are identified as tool, resource, or infrastructure classes within the CERSA.2.2.1 DPD Relationship to the CERSAFrom the systems perspective, a DPD is a closed network (intranet) of information about a particular product.  Although this information is generally distributed among multiple host computer sites, single-server implementations are also valid.  The DPD itself does not consist of any of the components at the top layer of the CERSA, although a web browser is necessary to view a DPD.  It also does not consist of any of the components of the tool layer, although numerous tools are applied to DPDs throughout the product lifecycle.  For instance, design tools are utilized to define the product’s physical configuration in the DPD, simulations and static analysis tools use DPD data/models for product design optimization, and program management tools use DPD process models as the basis for control of product development activities.DPDs are also not considered infrastructure, although certain infrastructure components are necessary for DPDs to be useful to acquisition program participants.  For instance, hardware components such as host computers and physical networks will certainly be necessary for storing and exchanging DPD information.  Appropriate distributed operating systems and firewalling mechanisms will also be necessary in most practical applications to enable and control the flow of DPD information across a collaboration.Distributed simulation services are necessary for analyzing and optimizing the design of a product, as reflected in a DPD.  These services allow multiple simulations to interoperate in a meaningful way.  Examples of such services include time management, declaration management, and object management.  Such services are provided by all certified implementations of the HLA Runtime Infrastructure (RTI).  Throughout a typical product lifecycle, simulations are first identified and then assembled in different configurations using the RTI to address questions and issues that are pertinent to the phase of development of the product.  For instance, aggregate-level simulations may be used early in the product development to support requirements generation and concept exploration, while more detailed simulations may be used to support engineering development and operational training.  DPDs are used by HLA federations to unambiguously specify the product state information necessary to initialize the federation, and as a means of capturing changes in product state that result from analysis of federation results.  In other words, RTIsFigure 4. Top-level view of SBA systems architecture, with exploded view of the CERSA. provide the services that enable distributed simulation environments to analyze the current product state (as defined by the DPD), and provide insights into how the product design can be improved.  DPDs also provide authoritative product behavioral models that may be incorporated and exercised in HLA federations, and relevant supporting processes that may be emulated in (for instance) manufacturing or training federations.For DPDs, the infrastructure component that provides distributed data management services is considered most critical.  These are the services that manage access and storage of product data throughout an enterprise.  Through these services, multiple physically disparate data sources can be seamlessly integrated into a logically unified data environment.  Although there are several ways in which such services could be implemented, one possible method would be to require that all DPD data be appropriately categorized using metadata tags.  These tags would define the basic type of information that the data represents (cost data, structural data, logistics data), and also categorize the data according to other relevant factors such as degree of fidelity (or resolution) and the product configuration to which the data applies.  Users may “subscribe” to these data categories within a collaboration, meaning that they may register an interest in certain types of information depending on their role in the acquisition program and the types of tools they typically employ.  Although the services may restrict certain subscriptions due to access controls, the services would (upon user request) automate the assemblage of a view of the product data consistent with the stated interest of the user.  The format of the data would depend on the Data Interchange Format (DIF) that pertains to that category of product data; however, the data may be readily converted to a native tool format via appropriate parsers or translators.  These product data subscriptions may also drive the generation of  “alerts”.  This occurs when a participant (or class of participant) in an acquisition program desires to make a change to the current product configuration.  Instead of directly incorporating the modified product data or model into the latest “approved” product description, the proposed changes are stored in a temporary area of the DPD.  Alerts are then issued, via the services, to all subscribers of the data categories affected by the changes.  Only when all receivers of the alert verify acceptance of the proposed changes will the services implement the changes in the product description.  Various collaboration tools and techniques (e.g., electronic mail, videoteleconferencing, virtual whiteboards) may be used to gain the necessary consensus among distributed development team members.Finally, since the DPD is composed of resources (data and models) that define the product developmental state, it follows that the DPD itself resides in the Resources layer of the CERSA.  Note that although there are typically other resources that are maintained in CEs besides DPDs (e.g., data dictionaries, tool documentation), each CE resource must support some activity or task in the acquisition process, and thus indirectly contributes to the development of DPDs. 2.2.2 DPD Relationship to the DIRRAs previously shown in Figure 4, DPDs are components of both collaborative environments and the DIRR.  The DIRR, as defined in the SBA roadmap, is intended to provide a web-technology-based distributed repository of tools, information resources, and generic infrastructure components for use within and reuse across acquisition programs.  The current Modeling and Simulation Resource Repository (MSRR) is expected, through expansion, to provide the initial capability for the DIRR.  However, the contents of the DIRR will be much broader in scope than the current contents of the MSRR.Inasmuch as both the DIRR and DPDs are designed to be distributed, individual DPDs will logically reside in both individual collaborate environments (CEs) and the DIRR simultaneously.   Access control mechanisms can be used to prevent unauthorized users outside a given CE from accessing a DPD resident in that CE, even though the DPD is also logically resident in the DIRR.One issue associated with the expansion of the MSRR to DIRR capability to include DPDs is the need for the ability to create user-selectable views of data within a DPD.  This ability was discussed in the previous section as a distributed data management service in the CERSA.  Although several implementations are possible, Figure 5, adapted from [5], illustrates one possible implementation of the extraction of a user-selectable view, using cost data as an example.In this case, a cost modeler desires a cost data view of a particular DPD to which he/she has previously subscribed.  (It is assumed here that the user enters via the normal DIRR entry point, although direct requests to the DPD entry point would be possible.)  The user accesses the DIRR gateway, and performs two actions:determines the location of the gateway to the desired DPD; activates a DPD viewing tool, potentially stored in a tool library node of the DIRR. Figure 5. Illustration of possible user-selectable view of a DPD.Upon entry to the DPD gateway, the user’s access privileges are checked to verify that he/she is permitted to access cost data in the DPD, and the DPD viewing tool is configured for cost data access.  Metadata is checked to determine the locations of all of the potentially distributed components of the DPD representing the system.  For each such subsystem component, metadata is again checked to access and extract the appropriate cost data from each DPD component.  These data are then assembled and provided via the DPD viewing tool in an appropriate format to the cost modeler.2.3 Technical ViewThe technical view identifies the rules and standards that apply to the operational and system views of the SBA architecture.  From the operational perspective, these are the standard development and/or procurement practices and procedures that overlay the system acquisition process.  From the systems perspective, these are the rules and standards that define which and how system resources (e.g., hardware, software, data) are employed in acquisition programs.  These rules and standards may exist at many different levels of applicability.  For instance, some standards may be DoD-level mandates, that apply to all defense acquisition programs, while others may reflect simple agreements within a given community as to how certain classes of problems are addressed (e.g., which methodologies, which databases, etc.).  For DPDs, there are many potential rules and standards that may apply at multiple levels.  For instance, while it may be perfectly appropriate to standardize DPD configuration management, VV&A, and security procedures at the DoD-level, agreements on a viable set of tools to support DPD development within a given domain should generally be captured at the level of the individual CE.  In general, the mandated standards that apply across all DoD acquisition programs are identified in the Joint Technical Architecture (JTA) document [6], while local domain-specific standards are generally documented as a CE resource.Standards for the exchange of DPD information among the participants in an acquisition program represents a particularly critical need.  Specifically, standardized DIFs are needed to facilitate the exchange of DPD data among different tools and databases.  A DIF provides a common, intermediate format by which categories of DPD information can be described.  DIFs are derived from a common data model, which describes the semantics and syntax of shared data.  These intermediate formats can be readily converted to any number of related output formats without loss or distortion of content using appropriate translation software.  Thus, the native data formats of DPD databases and development tools can be maintained, with the DIF specifying the format by which data is exchanged with other tools or databases.  Although there are many categories of DPD DIFs that are needed, there is much prior work that can be leveraged.  For instance, STEP (Standard for the Exchange of Product Model Data), CDIF  (Common Data Interchange Format) and SEDRIS (Synthetic Environment Data Representation and Interchange Specification) all represent existing or emerging standards that may be pertinent to DPD development.  Other existing standards may also be leveraged to facilitate DPD development.  Examples include distributed simulation standards (e.g., HLA), distributed object computing standards (e.g., CORBA), and visualization standards (e.g., VRML).  As a general rule, DPD developers should always examine the JTA to identify the types of standards that apply within their domain area.3. ExampleIn this section, an illustration of the development and utilization of a DPD in a typical acquisition program is provided.  In this example, a new type of fighter aircraft is being designed.  For simplicity, only a limited portion of the acquisition process is addressed.  It is assumed that Milestone II has been achieved, and thus the program is in the Engineering and Manufacturing Development (EMD).  The example will be provided from the perspective of an aerodynamics engineer assigned to the program.As this engineer begins his day, he gets his coffee and danish, and boots up his workstation.  Using his web browser, he brings up the DPD gateway (home page), and is asked for his user ID and password.  By submitting this information, the DPD data services immediately recognize that this user:Has immediate access and change authority to all aerodynamic data and models (as the registered owner)Has access (upon request) to the following classes of product data at a “Level 1” degree of detail (highest level of detail available at this phase of product development):Structural dataPropulsion dataThermal data Guidance and Control dataIs denied access to data above the level of SECRETIs denied access to all costing dataBased on this user profile, the DPD data services collect and format the appropriate aerodynamic data/models (from multiple servers) and provides a “point and click” directory structure for easy user navigation/access.  In addition to the information which is “owned” by this individual, the services also provide links to all viewable (but not modifiable) data and models, and a list of all open alerts.  In this example, a new alert had been received the night before, indicating that the structural engineers have proposed a change to the current product configuration. The aerodynamics engineer responds to this new alert by clicking on the alert notification, which brings up a description of the desired structural changes including what functional disciplines are likely to be affected by the changes.  In this case, aerodynamics, thermal, guidance and control, manufacturing, logistics, and cost are identified, defining the scope of this collaboration.  Although the aerodynamics engineer is not directly subscribed to manufacturing and logistics, and cannot access cost information, collaboration with these program participants is still possible.  The engineer begins the collaboration by downloading the proposed structural modifications from the appropriate temporary storage area in the DPD into his local work environment (via the appropriate DIF), and translates this data into the formats required by his native “toolbox” of aerodynamic models and simulations.  By exercising these simulations, the engineer performs a preliminary assessment of the proposed changes, and concludes that there are no major negative effects of the changes, and there may be certain benefits.  As this assessment is completed, the program participants deliberate on the overall viability of the proposed changes.  Each of the collaboration participants begin by reporting their initial findings, which indicates that although the structural changes generally result in improved aircraft performance with no major adverse consequences, the logistics and manufacturing engineers report that there may increased long-term costs due to the need for modified production and maintenance processes.  In order to address these concerns, the logistics and manufacturing engineers agree to define and incorporate the necessary process model modifications (and supporting data) into the temporary area of the DPD, which the cost analysts can access to evaluate cost implications.   Although the aerodynamics engineer is not directly involved in this subtask, he nonetheless decides that he would like to have visibility into the process-oriented changes that are being developed.  Since he is not subscribed to either logistics or manufacturing, this requires the submission of an access control request to the designated DPD administrator, which includes the information type, the level of classification required, and an explanation as to why access to this information is necessary.  In this case, the request is quickly granted.  Based on the identified manufacturing and logistics process changes, the cost analysts determine that the increased lifecycle costs are within acceptable bounds, and thus propose to accept the structural changes.  The aerodynamics engineer has already verified that the process model changes are consistent with his understanding of the proposed structural modifications, and thus concurs with both sets of changes (data and process) by electronically signaling his acceptance of the original alert.  As the other participants in the collaboration do likewise, the DPD data services automatically:Stores the old DPD configuration under its current version numberTransfers the proposed modifications (in the temporary area of the DPD) into a new, revised DPD configurationAssigns a version number to the new DPD configurationImplements any subscription or data/model ownership modifications resulting from the most recent changesFrees the temporary storage area.As this alert is completed, the aerodynamics engineer continues the process of addressing his alert list.  At any point in the development process, several alerts may be open at once, pending analysis and feedback from other collaboration participants.  Responding to alerts originating from other areas may generate new alerts, as the requirement to adhere to certain aerodynamic properties in the aircraft design may necessitate counterproposals from the aerodynamics engineer.   The resolution of these alerts correspond to the normal types of design tradeoffs that occur in acquisition programs today.  However, as was shown in this example, the DPD provides an invaluable mechanism for providing a common view of the current product configuration to multiple collaborating disciplines/organizations, and for controlling access to and exchange of product information across distributed development teams.SummaryThe Distributed Product Description is a key SBA architectural concept that affects all three views of the SBA architecture.  The DPD provides a mechanism for the evolution of the collaborative design of a system, from the time that a materiel need is identified, through system production.  Further, it provides a current baseline view of the system for all functional disciplines to access at any point in the design process.  The definition and ConOps of DPDs will evolve as a variety of users experiment with the concept.  This paper has attempted to provide a beginning for that evolution.5. References[1]	Joint Simulation Based Acquisition Task Force Terms of Reference, Acquisition Council of the DoD Executive Council for Modeling and Simulation, February 1998.[2]	A Roadmap for Simulation Based Acquisition – Report of the Joint Simulation Based Acquisition Task Force, Acquisition Council Draft for Coordination, December 4, 1998.[3]	C4ISR Architecture Framework Version 2.0, C4ISR Architecture Working Group, Department of Defense, December 18, 1997.[4]	R. Lutz and J. Keane, “An Architecture for Simulation Based Acquisition,” 1999 Spring Simulation Interoperability Workshop, March 1998.[5]	J. Coolahan, “The DoD/Industry Resource Repository (DIRR) for Simulation Based Acquisition – Some Implementation Issues for Consideration,” MSRR/MEL Users Conference, April 29, 1999.[6]	Department of Defense Joint Technical Architecture, Version 2.0, Department of Defense, May 26, 1998.Author BiographiesROBERT LUTZ is a principal scientist at the Johns Hopkins University Applied Physics Laboratory.  He has over 18 years experience in simulation design and development.  He is currently a member of the HLA core technical support team, is the technical editor for IEEE Standard P1516.2 (Object Model Template), and supported the development of the systems architecture for the SBA Roadmap.  He also currently serves as the chair of the SISO Federation Development Process Forum.  Mr. Lutz holds a Master of Science Degree in Operations Research from the State University of New York at Stony Brook.JAMES COOLAHAN is the Assistant to the Director for Modeling and Simulation at the Johns Hopkins University Applied Physics Laboratory.  In his 27 years at  JHU/APL, his technical activities have included modeling and simulation, test and evaluation, and the development of oceanographic data acquisition systems.  In 1998, Dr. Coolahan provided leadership for the technical team supporting the Joint Simulation Based Acquisition Task Force.  He currently serves as the Vice-Chair of the SISO Test and Evaluation Forum.  Dr. Coolahan holds B.S. and M.S. degrees in aerospace engineering from the University of Notre Dame and the Catholic University of America, respectively, and M.S. and Ph.D. degrees in computer science from the Johns Hopkins University and the University of Maryland, respectively.