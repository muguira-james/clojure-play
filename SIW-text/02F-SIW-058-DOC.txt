C4I Simulation Based Embedded Team TrainingJohn J. DalyITT IndustriesNaval Research LaboratoryWashington, DC 20375-5000jjdaly@ninja.nrl.navy.milGene Layman, PhD.Naval Research LaboratoryWashington, DC 20375-5000layman@ninja.nrl.navy.mil Keywords:C4I, Embedded Simulations, Embedded Training, Team Training, Embedded Simulation Infrastructure (ESI), DII COE, HLA, CTTS, CMTABSTRACT: The design and implementation of embedded training capabilities within Military Command, Control, Communications, Computers, and Intelligence (C4I) computer systems requires an Embedded Team Training functionality to produce realistic and complex training scenarios exercising all capabilities of the system.  A discussion of the current state of the art in direct stimulation of a C4I system by an external training simulation is performed. This paper then explores the robust integration of a C4ISR training application with an external training simulation, and the use of self-contained embedded training simulations within the C4ISR system. Training specific issues related to simulated data are covered including: data security, user interaction, time synchronization, and realism. C4I Team Training is defined and discussed with attention to requirements, roles, and differing time bases depending on the types of simulations used and the type of training performed.   The requirements and development of an Embedded Team Training system for the Global Command and Control System (Maritime) simulating sensor system functionality in response to a tactical training scenario are discussed. This application can utilize various embedded training simulations, is network enabled with other platforms, and has the ability to integrate with large external simulation based training systems. 1. BackgroundCommand, Control, Communications, Computers and Intelligence (C4I) systems have been used as the focal point of decision making from the earliest days of their existence. In the U.S. Navy, the inception of the Combat Information Center (CIC) to meet the time critical situational awareness and decision support needs for air defense has evolved since World War Two.  This concept moved warfighting decision making from the bridge of the ship (its traditional home), to a windowless “CIC” more protected from attack lower in the ship.  It also evolved a system of Plexiglas status boards kept current in grease pencil by extensive manpower, fusing information from all sources available.  Eventually, these manpower intensive functions of information collection, dissemination, and display naturally migrated to computer based information technology. The evolving air defense mission drove that development, in order to speed reaction time to threats and increase situational awareness by  commanders. The Navy decentralized Composite Warfare Commanders (CWC) [1] concept and Command by Negation drove the requirements for a fully networked Fleet Command and Control system. As this migration to an electronic Command and Control system occurred, the need for more realistic training both on the use of the system itself, and the tactics in the use of the system for military objectives became apparent. This need for training on electronic Command and Control systems for both computer system use and operation, and the tactical use of the system in a military operational context became apparent as these systems are targeted for additional uses. [2] Training on Command and Control systems has been met utilizing some novel methods: Team Trainers, Simulators, and Computer Based Training (CBT) among others. Primarily though, training has been accomplished along traditional lines involving classroom training, and self study via manuals, or on-the-job training (OJT) from other users. In the last 10 years true embedded training technologies have made their appearance in some Navy and Joint Command and Control systems. At the same time, requirements for integrating simulation based training into C4I systems have been developed and disseminated as part of Joint and service visions for “Train as you Fight” functionality.[3],[4]  Large exercises driven by simulations that provide a training Common Operational Picture (COP) in C4I have become commonplace despite the lack of C4I functionality to support them. The basic requirements are:An intrinsic C4I system training capability.A need to train a combat center team as well as simply C4I system operators.A requirement for large scale simulation based training exercises in the C4I COP to involve key decision makers in the training.These dictate a requirement to extend the concept of C4I embedded training from primarily an operator based capability to true simulation based  C4I system Team Training.2. C4I Training SystemsComputer system Embedded Training is of the terms in information technology that has many definitions and is often misused. A true embedded capability is one that is intrinsic to the host system. Thus, a definition for Embedded Training is: A training capability that is an integral part of the computer system the training is targeted for.  This means if we are planning to train on how to use our operational C4I system, an embedded training capability would be part of that C4I system.  C4I training systems have traditionally been geared primarily towards the operator based on the following hierarchy:Formal Classroom TrainingBooks and ManualsSystem SimulatorsComputer Based Training 2.1 Classroom TrainingFormal classroom training has always been the first method of instructing and orienting a new user to the complex capabilities of a modern C4I system. Assuming the curriculum is adequate and comprehensive, it can serve as an important foundation for system use training and tactics.  However, this training is neither deployable nor is it timely. It is based on user recall and supplemented by books, notes and manuals.2.2 Books and ManualsA military staple for decades, books and manuals are a useful adjunct to classroom training, and an important resource for OJT. They do not qualify as training systems per se, but often are used as a self-study training program in the absence of any other system. 2.3 System SimulatorsA next step beyond the classroom, usually in conjunction with classroom training, is C4I system Simulators. These are generally C4I system facsimiles set up in a command center arrangement. These systems simulate the behavior of a C4I system in a command center environment and allow realistic training of new users.  This “mimic system” usually looks and functions similarly to an actual C4I system, but is designed to utilize scripted training scenarios and to allow user mistakes without consequences.Simulators also have the capability to realistically present training tactical situations as “real” events. For instance, a simulator might allow the detection, tracking, and engagement of a hostile “missile” with a degree of realism that is not possible on an operational C4I system.A major disadvantage of system simulators is the size, cost, and complexity of creating a “system inside a system”. This limits their use and usually requires the training audience to come to the simulator location. They may or not be realistic in look, feel, and operation as compared to the actual C4I system. Training is accomplished at specific times with the support staff.  One major advantage of simulators is that they are often used to train a group of operational users in a realistic watch situation: Team Training.   2.4 Computer Based TrainingComputer Based Training (CBT) has become more and more popular in delivering C4I user training to the trainee. This is a general term that encompasses everything from briefing slides in a web browser, to animated movies, to a mimic C4I system hosted on a ubiquitous platform, usually a Windows PC.Since the widespread adoption of multimedia CD-ROM technology in the late 1990’s, much effort has been expended re-casting traditional training materials (books and manuals) as “new” training systems. These efforts often present printed material onscreen with animation and often sound voice-overs. As an alternate means of presenting training material it is useful, but not much more effective than printed manuals. Where this approach is particularly useful is in the ability to electronically catalog the information as context sensitive help, to be exploited by the C4I system itself or by its applications.CBT has also migrated to mimicking C4I systems. These implementations range from animating a visual chronicle of users actions in performing C4I system functions, to a true Simulator of the C4I system. While a C4I Simulator can now be portable, it is capable of only single user training, not team training.CBT has some obvious advantages, including portability, and usability on C4I users home or administrative machines. The major disadvantage is realism, as a CBT mimic system is only as realistic as the effort that went into creating it.  CBT is not the C4I system, and has to be continually revised and configuration managed to keep up with C4I system changes.3. C4I Embedded TrainingC4I Embedded Training is an integral part of the operational C4I system. It is not a device connected to the C4I system for training purposes, nor is it only training material presented on the same screen by another application or system.  It involves complete system immersion by the training audience, utilizing realistic C4I training data in the C4I system and applications just as one would do for operational uses. This implies a high level of integration both to the C4I display and internal databases. A properly designed C4I Embedded Training system will have the capability of performing user or team training functions on an operational C4I system, with minimal impact on regular operations. This means the system must be designed to:Keep training data separate and distinct from real-world data.Provide training content development and management tools in the C4I training application.Maintain the capability to be converted from training mode to real-world mode immediately.Produce training scenarios that are realistic and indistinguishable  (to the training audience) from a real-world event.Provide positive management for trainers of the training event. 3.1 Embedded Training ContentEmbedded Training content usually consists of training instructions presented visually or audibly, and C4I training data produced and delivered by the C4I system just like real-world data. This training data can be training C4I tracks, or other training information presented to the user from a C4I application such as; training intelligence reports from a C4I intelligence application.This training content can be arranged in many ways.  The most popular are as a:Self contained “lesson” similar to a system tutorial.Checklist or system status tutor.Scenario that emphasizes some tactical or system training objectives.Scenario based training is the most powerful, realistic, and the C4I system training most unique to Embedded Training on a C4I system. Scenario based training will be the focus of the remainder of this discussion, and is the only mode envisioned for C4I Team Training.3.2 Embedded Training ModesC4I Embedded Training has two modes of utilization: User/Operator level training and Team Training.Operator level training emphasizes training scenarios that are geared towards the single user utilizing that C4I console. These scenarios can emphasize system operation and features, or tactical use of the system in a realistic operational environment. Team Training involves a scenario that drives the training activities of the entire command center, and all console users. This scenario is usually tactical in nature, and can be designed to emphasize either basic combat system operation, or a warfare tactical use of the system. In the Team Training mode, often it is desirable to produce a “Training Common Operational Picture” (TCOP) for the C4I system that drives the training event. This TCOP can be a track display, or a mixture of track and other information that supports the training. In the Team Training mode a training device (simulation) used to generate the track picture or to alter the users’ perception of a track picture is most useful. 4. C4I Team Training Operational ArchitectureC4I team training concepts and requirements have developed based on Command and Control (C2) training concepts developed  during World War Two, and refined as the shift occurred from manual synthesis and display of sensor information, to today’s computer networked and fused  view of the battlespace. While the manpower intensive and slow WWII modes of collecting, distributing, analyzing, and displaying C2 data are much different from current state of the art networked C4I systems, some basic concepts  are the same. When we are concerned with C4I system Team Training we need to include the lessons learned in 50 years of C2 Combat Team Training in devising our computer applications and architectures for this purpose.4.1 Manual TrainingThe simplest architecture, it consists of using a physical Trainer next to each C4I console working collaboratively with a written scenario. They provide verbal and manual prompts (grease pencil marks on a screen, paper pictures etc.) to the operator and C4I watchstanders to pace them through an operational scenario for training purposes.  The C4I system is usually in a normal operational mode during this process, requiring no reconfiguration of the C4I LAN.While the simplest and most unrealistic type of C4I team training , this is also the most widely used and can always compliment more realistic computer based training.4.2 Direct Stimulation of the C4I LANIn this architecture, the C4I LAN is configured off the operational WAN, and isolated so that a training simulation can populate the C4I system with training tracks and information. “Stimulation” implies a one way feed to the C4I LAN, usually through C4I messaging ports designed to communicate with other C4I systems, now re-configured for training.The training device can be another computer with a scripted scenario, replaying it through the target C4I system or an external simulation sending its unique output “picture” to the training audience via their C4I system.  For the purposes of this discussion, all such devices will be considered training simulations. This arrangement with a training simulation “stimulating” a C4I LAN is shown in the top level of Figure 1.While this is the current architecture of choice due to its simplicity and use of a totally unmodified C4I system, this approach has some key disadvantages:The simulation has to be “timed” to the C4I system time and run in real-time only mode at 1:1.The simulation can only send its picture to the C4I system, feedback is accomplished manually, usually through roleplayer Trainers.The C4I system has to be completely disconnected from the real-world WAN, with a corresponding loss of operational efficiency and readiness.     Figure 1    C4I Training Simulation Architecture4.3 Networked Interoperability between simulation and C4I LANAn improvement upon direct stimulation, is to modify the C4I system with a training application that has network connectivity with an external training simulation. This connectivity can allow functionality between the C4I system and the simulation, enabling two-way track and information synchronization between them, as well as other training enhancements not possible with stimulation.  Currently, the network protocol most commonly used is the High Level Architecture. This arrangement is show in the middle of Figure 1. The C4I application can be a simple communications terminal, or an application integrated into the C4I databases and operational picture. Since this architecture involves C4I system modification with a training application, new requirements and enhancements for  Team Training can be enabled at the same time.  These enhanced requirements include:Running faster or slower than C4I real-time.Direct insertion of track and other data into C4I databases.Feedback of C4I data back to the training simulation.Management of exercise tracks and data utilizing C4I system features and the C4I training application.It becomes obvious that an extension of an existent C4I Embedded Training capability for Operator Level training on a single console, to a Team Training capability using the same type of approach, is desirable4.4 Embedded Team TrainingA natural migration of this approach to Team Training is to fully embed the training simulation into the C4I architecture. While not always appropriate, as in the case of large training simulations or legacy training devices, it has the advantage of making moderate sized training simulations readily available via operational C4I architectures for deployed unit training.  It also has the advantage in that a C4I application capable of hosting an embedded training simulation, can also act as the local host to an external training simulation.This Embedded Training embedded simulation architecture is shown in the lower section of Figure 1. The arrangement has all the advantages of a networked simulation and additional advantages:Portability of the training simulation application enabling easier use, and deployed unit use.Integrated C4I Archiving, Analysis and Replay of training events for After Action Reporting (AAR) and training metrics analysis. Interchangeability of simulations or models to allow a tailored training environment.Full configuration management of the training simulation and application within the C4I system.Full access to all C4I functionality and data within the C4I system architecture.This multiple functionality of a C4I Embedded Training application, from operator level to full Team Training with both embedded training simulations and large external training simulations, is a unique product of Naval Research Laboratory R&D in this area for over 10 years. This development effort is currently focused on C4I systems utilizing the Defense Information Infrastructure, Common Operational Environment (DII COE)5.  The DII COE ArchitectureThe Defense Information Infrastructure Common Operating Environment (DII COE) [4] is the framework upon which many modern U.S C4I systems are developed. Systems such as the Global Command and Control System (GCCS), the Navy Maritime Version (GCCS-M), the Army Global Command and Control System (AGCCS), and the Air Force Theater Battle Management Core Systems (TBMCS) rely on the DII COE to provide a robust set of common services and facilitate interoperability among those service systems.  The DII COE segments are organized into the Kernel, Infrastructure Services, and Common Support Applications. They include such general services as message processing, office automation, data access services, and security as well as more C4I specific applications such as: map servers, force track management, communications, message generation, and tactical decision aids.The DII COE provides a configuration managed software environment for C4I systems to draw upon in developing tailored applications.  By creating an environment in which different C4I systems utilize common components (such as map displays, message processors, etc.) redundancies between different C4I systems are eliminated, and interoperability between systems is improved. [5]Figure 2 shows the categories of the main elements of a DII COE based C4I system. At the top layer, the C4I system specific Mission Applications will tend to maintain functionality that is not widely used by other applications. Figure 2 The DII COE ArchitectureThese C4I systems also have the advantages of generally spanning the C4I hierarchy from sensor processing to key decision makers, and have access to many different types of databases and inputs from multiple C4I systems. This breadth of use makes them a good choice for embedded training applications that have a high probability of reuse, as well as the possibility of reaching a wide range of users.Some of the functions required by a simulation based embedded training application already exist within the DII COE. Other simulation support services required are currently under development by NRL as part of the Embedded Simulation Infrastructure (ESI) program or envisioned. [6],[7]The Embedded Simulation Infrastructure (ESI) Development Program was initiated in FY 2000 to remove the barriers between DII COE and simulations. It is managed and funded by the Navy Modeling and Simulation Office (NAVMSMO) with the development performed by the Naval Research Laboratory (NRL).6.0 Embedded Training in the GCCS and GCCS-MC4I Embedded Training technologies were developed at the NRL in the early 1990’s  for the  for the Navy Tactical Command System Afloat (NTCS-A). This capability was then revised and became a part of the Navy Joint Martime Command Information System (JMCIS) in 1995 and the GCCS-M in 1997. The Joint GCCS received this Embedded Training Capability in 2000. [8] These Embedded Training Tools for the GCCS and GCCS-M have the capability to:Create Track Scenarios, store, replay, and edit them.Develop and display scripted training instructions/scenario information with or without a Track Scenario.Record, edit and replay GCCS COP events at any speed from 1:1 to over 600:1 and any past time base.Integrate imagery and other information into the training event.The currently fielded GCCS Embedded Training capability is a DII COE level 7 application (highest level of Mission Application integration in the DII COE), and is the first application capable of handling non-real-time track data in a real-time DII COE C4I system. This current capability creates scripted track scenarios that are replayed in a “ground truth” manner. This capability is for Operator Level (single C4I console) training only. As part of the original design of the Embedded Training capability for the NTCS-A and JMCIS Navy C4I systems, the ability to use the C4I network for Team Training was recognized. While this capability was prototyped successfully, implementation was difficult due to the limitations of the legacy C4I environment and the demonstrated need for a training simulation to be integrated into the system. The Navy has a long history of Combat Systems Team Training, and standards for watch team accreditation and qualification through that training.  This has been accomplished primarily through a mix of Classroom, Simulator, and manual on-site training.  The Navy has been in the forefront of building CIC watch Team Training Simulators, usually at a base in an area of large fleet concentration. Chartered Fleet Mobile Training Teams have long been used for shipboard CIC scenario based Team Training, qualification/accreditation, and assessment.  This historical training philosophy matches well to the concept of a scenario based Team Training capability in the GCCS-M.The capabilities that have been successfully demonstrated in NTCS-A, JMCIS, GCCS-M, and the GCCS are:Ability to mix training (virtual) and real tracks in an operational system on an operational LAN. Use of a Track Database client to insert tracks directly into the C4I system track database, enhancing security and control over virtual or synthetic training tracks.Ability to operate track scenarios at faster and slower than real-time speeds in a real-time operational C4I system.Ability to provide meaningful, tactical or system training in an operational C4I systemThese capabilities are also requirements for any C4I Team Training application.7. GCCS-M Embedded Team TrainingAs part of the migration of the GCCS-M Embedded Training capability to the DII COE 4.x object-oriented Windows PC architecture, the opportunity has arisen to utilize the Modeling and Simulation services of the Embedded Simulation Infrastructure to build an embedded simulation  based Team Training capability into the GCCS-M.  This capability, the C4I Team Training System (CTTS) is managed and funded by the Navy Space and Naval Warfare Systems Command (SPAWAR) with the development performed by the Naval Research Laboratory (NRL). The CTTS uses the common Mission Editor service of the ESI to produce “ground truth” Scenarios for storage, editing and eventually execution during a training event through the CTTS.7.1 The ESI Mission EditorThe Mission Editor shown in Figure 3 provides the Trainer a means to easily create operational track scenarios in a familiar C4I geographic “waypoint” methodology. These scenarios areFigure 3      	         Mission Editorstored  to edit, modify and use with the CTTS. The Mission Editor is a fundamental M&S application used as the backbone for a series of simulation based situation assessment and decision support C4I applications, as well as the CTTS. For the CTTS it is a training scenario, for a decision support tool it is a planning scenario. In both cases the same generation/editing tools are used with tabbed functionality and GUI’s  appropriate for the type of intended use. The Mission Editor is fully integrated with the DII COE. It allows other GCCS and GCCS/M applications to access the planning/training scenarios and data through DII COE databases. 7.2 The CMT ServerThe CTTS utilizes an embedded simulation to produce a perception of the “ground truth” scenario based on organic and non-organic sensors, their detection and counter-detection ranges, and their coverage, usage, and disposition. This simulation is called the “CMT Server” in the CTTS application. It is configured as a server to the ESI services that handle the I/O, database connectivity, GUI’s and displays in the DII-COE COP. The CMT server is based on the Cruise Missile Training (CMTpc) standalone simulation currently in use in the Fleet.  There is an active Navy Fleet user community of the current CMTpc and similar AIMPOINT simulations used to stimulate GCCS-M for various team training purposes; classroom GCCS-M instruction, afloat GCCS-M training, and Navy Tomahawk missile launch proficiency accreditation. The CTTS application is designed to replace these systems with an embedded capability in the GCCS-M.In Figure 4, the CTTS is shown as a simplified block diagram during run-time. The “ground truth” training scenario produced by the Mission Editor, is run through the CMT server where a sensor analysis is performed. A perceived operational picture based on the sensor analysis is then displayed in the GCCS-M COP in a training mode. This can be at any time base and from slower to faster than real time.      Figure 4                  CTTS Run-Time DiagramThe Training COP can be archived, replayed and analyzed by the Archive/Replay ESI service for Exercise debrief and after-action analysis. This architecture allows for one or more simulation servers to process the scenario concurrently to allow for more an even more complex Operational Picture for training.      8.0 ConclusionThe requirements for Navy Fleet Combat Systems Team Training drive the requirements for a GCCS-M Embedded Team Training capability. This intrinsic capability of GCCS-M to produce a realistic C4I training environment, with engineered control and flexibility for the Trainer will enhance readiness. The key improvement over previous efforts is the full integration of one or more embedded training simulations. The GCCS-M Embedded Team Training capability will also allow robust integration with external training simulations utilizing the same ESI services that the embedded CTTS utilizes. These external training simulations will benefit from this enhanced level of C4I integration.9.0 References[1]	United States Naval Reserve Intelligence Program: “Ready-for-Sea Modular Course & Handbook, Module 3-Battlegroup Commanders & the CWC Concept”, http://reserveweb.fitcpac.navy.mil/rfs/,April 1999[2]	Andreas Tolk, Dietmar Kunde: "Decision Support Systems - Technical Prerequisites and Military Requirements", Proceedings of the 2000 Command and Control Research and Technology Symposium (CCRTS), Naval Postgraduate School, Monterey, California, June 2000[3]	Chairman Joint Chiefs of Staff: “Joint Vision 2020”, http://www.dtic.mil/jv2020/, June 2002[4]	Chief of Navy Operations (N6): “U.S. Navy IT-21”, http://cno-n6.hq.navy.mil/N60/about.html, May 2001[5] 	Defense Information Infrastructure Common Operating Environment Home Page http://diicoe.disa.mil/coe/[6]	Layman, G.E., Weatherly, J. and Daly:  “C4I Embedded Simulations,” Paper 01S-SIW-082, Simulation Interoperability Workshop, Spring 2001; Orlando, Florida [7]	  Michael R. Hieb, Ron Sprinkle: "Simulation Infrastructure for the DII COEArchitecture: The Army Vision", Paper 00F-SIW-035, Simulation Interoperability Workshop, Fall 2000, Orlando, Florida[8] 	Layman, G. E. & Giovanis G.: “Embedded Training for the Global Command and Control System” Interservice/Industry Training, Simulation & Education (I/ITSEC) Conference, November 1999; Orlando, Florida Author BiographiesJohn J. Daly is a Research Engineer with ITT AES at the Naval Research Laboratory, and works in the Command and Control Development Team with responsibilities in: C4ISR/Simulation Interoperability, the Embedded Simulation Infrastructure, and GCCS Embedded Training Technologies for C4ISR. A retired Naval Officer, John previously worked on the staff of the Director, Defense Information Systems Agency, as well as in the Modeling and Simulation Directorate on C4I and simulation interoperability. Dr. Gene Layman is a Research Engineer at the Naval Research Laboratory and directs a Command and Control Development Team that has been active in GCCS and GCCS-Maritime developments since their conceptions. Earlier he managed the Radar Branch and the Guidance Branch at the Naval Surface Weapons Center. Before that, Dr. Layman was a Program Manager in the Missile and Ordinance Division at Texas Instruments, Inc. and a Circuit Designer at The Boeing Company on the Minuteman Program. He has led or participated in the design of more than two-dozen military systems with more than half becoming fully operational.PAGE  PAGE  9DatabasesKernelInfrastructure  ServicesDIICOECommon   SupportApplicationsMission Applications