Merging the DII COE and the HLA:  Overview of Options and TradeoffsDoug FlournoyThe MITRE Corporation202 Burlington RoadBedford, MA  01730781-377-1760 HYPERLINK mailto:rflourno@mitre.org rflourno@mitre.orgKeywords:HLA, DII COE, C2 system interfacesABSTRACT :  At the Electronic Systems Center (ESC), members of the DoD simulation community and the C2 community work together to develop, test, and train Air Force C2 systems.  The High Level Architecture (HLA) mandate for DoD simulations and the migration of Command and Control (C2) systems to the Defense Information Infrastructure (DII) Common Operating Environment (COE) represent different approaches adopted by the two communities to address the challenges of distributed computing.  ESC leaders were initially concerned about the implications of the HLA and DII COE migrations on simulation-to-C2 system interoperability and called for a merging of the two infrastructure paradigms.  Research was initiated to address these concerns and identify steps that can be taken to align the HLA and DII COE so that they might instead enhance connectivity between simulations and C2 systems.  This paper presents some initial findings from this work.  Steps that can be taken to leverage the HLA and COE for simulation-to-C2 system interoperability can be grouped in three categories:  (1) potential HLA software additions to the COE, (2) HLA participation options for C2 systems, and (3) COE compliance options for simulations.  In each category there are steps ranging from “low-hanging fruit” options that provide initial benefits with minimal investment to more expensive possibilities that offer additional benefits.  Within each of the three categories, the candidate steps are reviewed and tradeoffs between them are discussed.1.  IntroductionC2 systems and simulations must interoperate to fulfill development, test, training, and other operational requirements.  Within the Department of Defense (DoD), the Defense Information Infrastructure (DII) Common Operating Environment (COE) is mandated via the Joint Technical Architecture (JTA) for the Command and Control (C2) community, while the High Level Architecture (HLA) is mandated in the modeling and simulation (M&S) community.  Migrations to these standards are occurring simultaneously and will be well underway by the turn of the century.At the Electronic Systems Center (ESC), developing agency for many of the Air Force’s C2 systems, the Modeling, Simulation, and Training (MST) Product Area Directorate (PAD) is performing research and experimentation aimed at determining how to take advantage of these HLA and COE migrations to further C2-to-simulation interoperability.  This report is the second in a series of white papers from this ESC project.  This paper presents an overview of steps that could be taken to integrate the HLA with the COE.  The first paper in the series assessed HLA and COE compatibility, concluding that in spite of their differences the two approaches do not contradict each other and are in some ways complementary.  Future papers will discuss the impact of the HLA and COE migrations on the C2 and M&S communities, respectively.2.  Why Consider Merging the HLA with the COE?Often C2 systems are developed with an internal simulation capability to support testing, demonstration, and some level of operator training.  For many systems this is the only simulation support anticipated during system design and development.  However, in recent years there have been a growing number of cases where additional training or operational capabilities were achieved by connecting existing external simulations with certain C2 systems.  Development and maintenance of the custom interface software required to do this has been expensive.  Now, with the emergence of the COE and HLA, there is the potential to leverage these middleware paradigms to provide a framework that encourages simulation-to-C2 system interoperability at the infrastructure level, potentially reducing the resources necessary to develop and maintain simulation-to-C2 system interfaces.3.  Mechanisms for MergingWhat does it mean to merge the HLA and the DII COE?  Because the COE represents a repository of software components for building C2 systems, one enabling step to be considered is the inclusion of HLA-compliant infrastructure software and support tools in the COE.  There is top-level direction that paves the way for this possibility:  the HLA is an approved element of the Joint Technical Architecture (JTA).1  One could argue that incorporating an agreed-to set of HLA support software into the COE completes the merging of the two paradigms.However, in actual practice the HLA and COE engage at runtime between specific sets of C2 and simulation applications exchanging specific data.  Representatives of individual C2 systems must decide how to best take advantage of available HLA software and processes, within program-specific resource limitations, to reap the benefits of tapping into an HLA-compliant simulated battle environment.  Representatives of each individual simulation must decide whether it makes sense for their simulation to run on a COE platform; and if so, at what level of compliance.Figure 1 illustrates possible steps toward integrating the HLA and COE, broken into the 3 categories mentioned above:  incorporation of HLA components in the COE, level of participation of individual C2 systems in the HLA arena, and level of participation of individual simulations in the COE arena.  These categories are represented by the three horizontal bars.  Options within each category range from very little integration between HLA and COE at the left end of the scale to a very high level of integration at the right.Achieving the highest levels of integration (moving to the right in Figure 1) appears to offer the most benefits to both the C2 and simulation communities; however, this may be infeasible because significant dedication of resources and inter/intra-community coordination are required to get there.  Where should we aim on each of these scales for the 2000 - 2002 timeframe, when the HLA and COE transitions are expected to be well underway?  The rest of this paper attempts to shed light on this question by providing an overview of the issues associated with the options displayed in Figure 1.It should also be noted here that the development of an HLA Runtime Infrastructure (RTI) interface, whether for a simulation or C2 system, depends to a large degree on the specific data exchanges necessary to support the specific goals of a particular grouping of distributed applications.  Even slight changes to the data exchange requirements can involve substantial rework to the RTI interface software.  For this reason it is difficult to envision interface software components that are reusable across different sets of distributed applications, or even different use cases of the same set of applications, unless a standard data exchange model is followed.  Therefore the formation of a set of common data models for different classes of simulation-to-C2 system interfaces, a daunting task, could pay off by facilitating the development of reusable interface components.Figure 1:  HLA-COE Integration Options4.  Options for Incorporating HLA software in the COEAvailability of segmented COE-compliant RTI software gives C2 system engineers the option to install and use RTI libraries and executable components on their COE-based workstations.  This translates to the capability to design and build a “local” HLA interface that resides on a C2 system platform rather than having to develop a remote HLA interface application on a non-COE machine and communicate with it over a network.  In the past, C2 systems engineers have been hesitant to allow simulation interface software to share a platform with C2 applications.  However in some cases, sharing the platform may be the best configuration, especially when tight coupling between simulation software and a C2 application is necessary to handle large amounts of data over short update intervals.Submitting an RTI for approval into the COE as an Infrastructure Services component goes a step further to provide C2 systems access to RTI software and solidify the position of the HLA in the COE.  However,  the process of incorporating a COE-compliant RTI in the COE raises the question:  what constitutes an appropriate RTI for inclusion in the COE?  It is unlikely that DISA would approve multiple RTIs into the COE, as there would be a perceived duplication of functionality,2 raising the possibility that different C2 systems would choose to interface to different RTIs.  In this scenario the HLA interfaces representing the systems could not participate in the same HLA Federation because different RTIs are rarely compatible with one other.  Therefore agreement may be necessary on a single “best” RTI for incorporation in the COE.The primary HLA runtime infrastructure (RTI) being used in the simulation community today, the DMSO RTI Version 1.3 prototype, is recognized to be functionally COE-compliant to level 5.  That is, no reengineering of this RTI would be necessary to segment it and incorporate it as an Infrastructure Services component of the COE.  In addition, there are ports of the RTI v1.3 for all the hardware platforms supported by the COE including Windows NT.  A commercially-built RTI that is functionally similar to the v1.3 prototype is due to be released at the end of 1998.In addition to an HLA RTI , a version of the HLA Object Model Development Toolkit (OMDT) could be considered for COE compliance or incorporation.  OMDTs are being used by the simulation community to perform the pre-runtime object modeling required for HLA operations.  From these object models, an OMDT generates a runtime profile of the data to be passed within an HLA Federation.  This profile, or  “fed” file, is required at runtime by the RTI.  Like the current version of the RTI prototype, OMDT software is available for both UNIX and PC platforms.  Having a segmented, COE-compliant OMDT available for use on COE platforms could help C2 systems engineers with the HLA-style object modeling tasks necessary to complete their systems’ HLA interfaces.The items farthest to the right on the “COE Additions” scale in Figure 1 would further HLA/COE integration but at considerable cost.  Reengineering an RTI for level 6, 7, or 8 COE compliance could keep simulation components from being the lowest-compliance piece of a C2 system as C2 organizations push for higher levels of compliance.  However, developing such an RTI probably means replacing the low-level network layer software from an existing RTI with COE-provided communications services and networking software.  There are concerns within the simulation community that may not be possible without adversely affecting RTI performance and/or integrity.Another possibility for adding simulation capabilities to the COE is to add common support applications such as an HLA Federation execution management console or a data logger.  In addition, a set of interface modules could be considered that would help bridge the gap between HLA and common C2 data exchange mechanisms (for instance, USMTF messages, JTIDS communications, or CORBA-based interfaces).  However, as discussed previously, the potential for reuse of these modules across different Federations of simulations and C2 systems may depend heavily on the amount of commonality that can be achieved in the data models used by the variety of potential Federations.5.  HLA Participation Options for C2 SystemsThe simplest way for a multi-application C2 system to provide access for HLA-based simulation support is through a single “gateway” HLA interface that brokers the passing of data between its applications and HLA-compliant simulations.  Or, a more integrated approach can be taken that involves developing HLA interfaces for multiple system applications.  For example, a C2 system involving display applications, algorithmic processing applications like tracking software, and software that processes inputs from external sensor hardware could be driven by simulated sensor inputs that exercise both the tracking and display applications.  Alternately, display could be exercised apart from the rest of the applications for the purpose of user interface testing by providing simulated tracks “downstream” of the sensor interfaces and tracking algorithms.  Since there might be a wider variety of HLA-based simulations capable of providing track or truth data than sensor inputs, the 2nd interface downstream of the tracker could give system testers more options for driving custom scenarios through the display to solicit user feedback.A key issue for C2 system program officers deciding to what extent to adopt HLA is the up-front investment involved to build an HLA knowledge base and develop a usable HLA access point to the system.  The world of HLA-based software development is unique and  involves a significant learning curve.  At a time when C2 system development efforts are already constrained by COE and Y2K concerns, the level of resources necessary to build and manage one or more HLA interfaces is a deterrent to active HLA participation.6.  COE Compliance Options for SimulationsVirtually every operational C2 system can benefit from simulation interfaces for testing and training, but not all simulations can serve any useful purpose by connecting with an operational system.  For example, a high-fidelity physics model designed for survivability analysis of a specific weapon system could very well have no use coupled to operational software.  So for many DoD simulations, COE compliance is not an issue.For many simulations that do interface with C2 systems, COE compliance may not be a technical necessity.  A non-COE-compliant simulation can interface with the C2 system by residing on a separate workstation or set of workstations not running the COE.  For example, a wargaming simulation can interface with a C2 system for a battlestaff training exercise if custom hardware is brought to the exercise to support the simulation or there are enough workstations on site to dedicate some for non-COE operation.  However, simulations of this sort may wish to consider at least minimal compliance to the COE to facilitate on-site operations where COE platforms and COE-trained systems administrators are the norm.In some cases simulations can be incorporated into C2 systems as operational decision aids or embedded training modules.  To become a component of a deliverable C2 system, a simulation must be minimally COE compliant and may be required to comply at higher levels.What work is involved to create a COE-compliant version of an existing simulation?  The DII COE Integration and Runtime Specification (I&RTS) provides detailed checklists that must be met for each level of COE compliance.3  Here are the highlights:If the simulation already runs on a COE-approved platform, chances are good that no significant reengineering will be necessary; if not, then the simulation must first be ported to a COE-approved platform.At the very least, the simulation software needs to be repackaged or “segmented” following a COE-approved process so that the simulation can be installed and removed from a COE workstation using COE systems administration tools.After verifying that the segmented software can be loaded, run, and removed from the COE without adversely effecting other processes on the workstation, the simulation is registered and submitted for inclusion in the COE online library.Thereafter, maintaining the COE-compliant version of the simulation requires some additional effort as changes need to be reverified and reloaded into the online library.7.  Bridging the GapA long pole in the HLA-COE integration tent appears to be convincing the C2 community to consider participating in the HLA arena.  The HLA world can be intimidating to the C2 newcomer as even the highest-level introductory tutorial presents unique terminology, object modeling processes, and runtime interface methods.  Building the first HLA interface for a C2 system is a challenging task indeed, and there are not many HLA-experienced software professionals on the job market to draw from.  The simulation community can help by promoting HLA software for inclusion in the COE and making as much tutorial-style information available as possible.  Still, there appears to be a disconnect between materials the simulation community can provide and the willingness of the C2 community to accept and use the materials.One way to bridge this gap could be to develop HLA interface federates that translate information from simulations into formats or protocols that are commonly used for communication and interfacing within the C2 community.  A combined HLA-COE runtime environment that employs such interface federates is being investigated by members of the ESC MST PAD.  For these interface federates to achieve some degree of reusability, it may be necessary to employ common data models that support classes or categories of simulation-to-C2 system interplay.Another way to facilitate HLA-based simulation support to C2 systems is to influence the evolution of COE-based C2 system architectures so that future systems are developed with simulation access in mind from the get-go.  One such architecture is the Air Force’s C2 System Target Architecture (C2STA).  The C2STA specifies Data Access Interface Modules (DAIMs) for C2 system components that can be configured to act as HLA Federates.  These DAIMs then serve as simulation data entry points to the C2 system.48.  ObservationsAppropriate integration of the HLA and the COE to facilitate C2 system-to-simulation interoperability depends not only on adding HLA components to the COE, but also on the extent to which C2 systems consider leveraging the HLA and simulations consider complying to the COE.HLA RTI and OMDT software exists that may not need any internal reengineering to be segmented for minimal compliance to the COE.  Actual incorporation of the RTI and OMDT as components within the COE triggers additional issues for coordination.With a single “gateway” HLA interface, a C2 systems can begin to benefit from HLA-compliant simulation support.  Multiple HLA interfaces may make sense for many C2 systems depending on the variety of anticipated testing and training needs.  However it may be difficult for the C2 community to see beyond the perceived complexity of HLA terminology and practices to consider the benefits HLA interplay offers.Many simulations can disregard the issue of COE compliance if they are not intended to be connected with operational C2 systems for any purpose.  Other simulations that may be used to C2 system testing, demonstrations, or exercises should consider complying with the COE in order to facilitate these connections.  Simulations that are candidates for inclusion within a C2 system for decision aid or embedded training purposes must become COE-compliant to be installed on workstations running the COE.A critical factor in determining the level of HLA-to-COE integration achieved in actual practice is whether or not C2 programs will consider participating in the HLA arena.  It may be necessary to reduce the resources needed for C2 systems to develop an HLA connection by providing HLA-compliant components that take advantage of common C2 data exchange mechanisms in the COE.  However the reuse of these federates across different simulation-to-C2 system interfaces may only be feasible to the extent that the interfaces share a common data model.  Over the longer term, simulation access can be designed into new systems by influencing COE-based C2 system architectures like the C2STA.References[1]	Department of Defense, “Joint Technical Architecture,” Version 2.0, 26 May 1998, Modeling and Simulation Domain Annex[2]	Defense Information Systems Agency, “Defense Information Infrastructure (DII) Common Operating Environment (COE) Integration and Runtime Specification (I&RTS),” Version 3.0, July 1997, p. 2-29[3]	Defense Information Systems Agency, “Defense Information Infrastructure (DII) Common Operating Environment (COE) Integration and Runtime Specification (I&RTS),” Version 3.0, July 1997, Appendix B[4]	Defense Information Infrastructure—Air Force Chief Architect’s Office, “Command and Control System Target Architecture Specification,” Release 2.0, 31 August 1998, p. 47, 48Author BiographyDOUGLAS FLOURNOY is a Lead Simulation and Modeling Engineer for the MITRE Corporation in support of the ESC MST PAD on Hanscom AFB outside Lexington, Massachusetts.  He is currently investigating methods for providing simulation support to Air Force Command and Control systems.  Previously he developed user interface and algorithmic software prototypes for MITRE’s Center for Advanced Aviation System Development (CAASD).  Mr. Flournoy holds a Bachelor of Science Degree in Mechanical Engineering from the Pennsylvania State University and a Master of Science Degree in Operations Research from the George Washington University.