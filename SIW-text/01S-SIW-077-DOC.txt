A Unified Modeling Language Representation of the Paint the Night Terrain Build ProcessMr. Maximo Lorenzo, Mike Pastore, Don TidrowCECOM Night Vision and Electronic Sensors Directorate10221 Burbeck Road, Building 309Fort Belvoir, VA 22060703-704-3185lorenzo@nvl.army.milBill Riggs, Mike Caruso, John LangworthyScience Applications International Corporation4001 N. Fairfax Drive, Arlington VA 22203briggs@nvl.army.mil, caruso@nvl.army.milKeywords: UML; TCDM; SEDRIS; Paint the NightAbstractOver the past, several years, a variety of process and data modeling schemes have been used in the effort to address terrain database interoperability, productivity, and usability issues. This paper will examine the potential for Unified Modeling Language semantics and tools to integrate past efforts into a "common data model" and to permit the expansion of these efforts to support credible virtual simulation of multispectral sensors. Unified Modeling Language (UML) is an emerging standard for expressing object-oriented software models, representing  the unification of three object-oriented modeling techniques: OMT (James Rumbaugh), Booch (Grady Booch), and OOSE (Ivar Jacobson).  The current UML standard, Version 1.3, was adopted in the summer of 1999.  Past terrain data modeling efforts within the modeling and simulation community involved Rumbaugh and IDEF modeling standards; these efforts will be examined with respect to their continued viability and utility in the light of emerging business process engineering and software design technologies, including UML. A variety of UML-compliant tools will be examined and compared in conjunction with this paper.1. Terrain Process and Data Modeling: A Historical OverviewOver the past, several years, a variety of process and data modeling schemes have been used in the effort to address terrain database interoperability, productivity, and usability issues. Most prominent among these was the SEDRIS program’s exploitation of object oriented data modeling from the inception of the program in 1994. The data modeling phase of SEDRIS was completed in 1996-97, followed by the development of SEDRIS APIs, together with the elaboration of the SEDRIS Data Representation Model, Environmental Data Coding Standard, and Spatial Reference Model.  SEDRIS goals included support for multiple views and representations of environmental data, based on a common data representation model, and the capture of data requirements for multiple simulation domains and applications. [1]The original SEDRIS Data Representation Model (SDRM) used Rumbaugh Object Model Template (OMT) conventions, which have been subsequently incorporated into the Unified Modeling Language (UML). UML is an emerging standard for expressing object-oriented software models, representing the unification of three object-oriented modeling techniques: OMT (James Rumbaugh), Booch (Grady Booch), and OOSE (Ivar Jacobson). The UML concept seeks to model systems (not just software) using object oriented concepts that allow the creation of a modeling language that can be used both by humans and computers. Optimal exploitation of UML allows the conceptual and executable portions of the system to be explicitly linked. [2] The current UML standard, Version 1.3, was adopted in the summer of 1999.UML supports five different views of a system. These are:Use Case View: System functionality as perceived by external actorsLogical View: How functionality is designed inside the system (state structure and dynamic behavior)Component View: Organization of code componentsConcurrency View: Shows concurrency within the system, addressing communications and synchronizationDeployment Views: Shows the system deployment into physical architecture with computers and devices called nodesIn UML terms, the SDRM described a logical view of environmental data, with a view towards building component views to construct applications programmer interfaces (API) to support data conversion across heterogeneous database production systems and runtime simulation platforms. Analogous efforts within the geospatial data and geographic information systems community tended to use IDEF standards. IDEF stands for Integrated Computer Aided Manufacturing (ICAM) Definition Language, a methodology first developed by the US Air Force for CAD-CAM applications in the 1970s to develop semantic and syntactical structures for standard terrain database formats such as NIMA vector product format (VPF). [3]  For example, NIMA employs IDEF1X (Integrated Definition for Information Modeling) in the development of VPF data dictionaries. IDEF1X focuses, therefore on database design, as expressed in a physical data model that describes its attributes and relationships. In order to describe the processes by which environmental data is processed and manipulated terrain database producers. The IDEF0 function modeling methodology has been most frequently employed.  Figure 1 depicts an IDEF0 model, which describes activities or functions in relation to their inputs, outputs, controls and mechanisms. Input arrows describe data or objects that are transformed by the function into output. Control arrows express conditions or parameters required to produce correct output.  Mechanisms are the means used to perform a function, with a special representation, a “Call Arrow” that denotes linkage to child functions within the models, or the sharing of detail among models. EMBED Word.Picture.8  Figure 1: IDEF0 Model More recent efforts, including the JSIMS Terrain Common Data Model [4], have attempted to define a methodology by which system developers and system users may model synthetic environments in terms of Requirements as defined by subject matter experts and end users, Geospatial features and attributes, facilitating source data processing, data transformation in a terrain/environmental database production system, and runtime database formatting/compilation,Development of more realistic logical and physical behaviors in runtime models, which use a combination of human-computer interactions to represent battlefield events,Generation of scenario-specific databases rapidly to support simulation exercise requirements. The JSIMS program has very exacting requirements for on-demand terrain database turnaround, in order to fulfill the need for limited notice training exercises and mission rehearsal.In this paper we will examine the potential for expanded use of Unified Modeling Language semantics and tools to supplement and integrate past efforts into a "common data model” that supports credible virtual simulation of multispectral sensors. 2. Paint the Night Terrain Development: Requirements and Infrastructure IssuesThe NVESD Paint the Night Effort arose in response to the US Army’s need for a credible, physics-based simulation of electro-optical/infrared sensors. For some time, it has been recognized that night vision devices in the close combat domain represent a significant combat multiplier and a technological advantage for the US and its allies. NVESD search and target acquisition (STA) sensor programs seek to develop and field the capability to:Detect and identify OPFOR targets before OPFOR detectsSearch faster for targets, over wider areasReduce target misclassification and false alarms through automation of target detectionAs advanced imaging and non-imaging sensor and tactical communications technologies are conceptualized, developed, tested, and fielded, it is becoming more apparent that the US Army Objective Force is moving towards “network-centric” sensor solutions, in which these target search detection, identification, and engagement functions are distributed across system platforms.As Paint the Night has been implemented to simulate this diverse and complex networked sensor simulation environment, the virtual, constructive, and C4ISR terrain and environmental requirements have been elaborated. The initial implementation of this approach was done in the Battle Command Reengineering (BCR IV) experiment conducted in April 2000 [5] and then more extensively for the Smart Sensor Web experiment conducted in late summer 2000. In these experiments, ModSaf/ctdb format terrain was universally required along with the sensor image generation database. Smart Sensor Web C4ISR applications also used 2D map displays with a combination of raster maps and vector overlays representing building outlines and transportation features. As was the case in BCRIV [6], correlation of road features across simulation and C4ISR applications was an active concern for exercise planners and system developers. During the Smart Sensor Web effort, the Paint the Night team developed a high resolution ModSAF terrain database of the Mckenna MOUT site, which allowed for full correlation of terrain geometry across constructive and virtual simulation applications, including the incorporation of all 15 Mackenna buildings, allowing the projection of live and virtual soldiers into the sensor simulation, which was used to model unattended ground sensors for force protection both within and outside buildings at Mckenna.As with many terrain modeling systems, therefore, the Paint the Night terrain modeling system is evolving from an application-specific process, focused on the need to credibly represent EO/IR phenomena in a real time graphics system, to a set of integrated tools able to support various simulation components. This need is underscored by the habitual “attachment” of the PTN sensor simulation to platform simulations, with ModSAF (or some other entity-based simulation model) providing the vehicle dynamics, field of view, orientation, etc. to the sensor model, which draws the 3D scene and applies sensor specific effects, such as convolution, blurring, or noise. EMBED Word.Picture.8   Figure 2: Functional View of PTN Terrain ProcessingThe PTN terrain modeling system consists of a set of batch processes which process predefined source data into 3D objects into Performer Fast Binary (PFB) format. Figure 2 depicts the PTN terrain process flow in traditional IDEF0 syntax.While this representation sufficiently tracks data flow, and describes tools and control parameters used to specify the density and resolution of terrain database content, this schema only provides a “cost of quality” view of the synthetic environment to end users. What PTN and many other terrain generation systems need is the means to assess database functionality and usability in terms of end user requirements. Likewise, as PTN sensor databases become more widely used throughout the modeling and simulation community, it becomes more and more important to consider the ease of extensibility of database content and of course its linkage both to authoritative source data products and to visual databases for virtual environments, constructive representations for CGF and aggregate constructive simulations such as JSIMS, and C4ISR/MC&G planning and terrain visualization environments. UML offers a flexible and very powerful means to accomplish these goals.3. Assessing the Value of Unified Modeling Language Tools and SemanticsIn conjunction with a study of network centric sensor modeling, the NVESD/PTN team has been using UML to consider user level requirements for sensor simulation environments. This analysis has been incorporated in UML Use Case Diagrams.  The PTN Team has also developed UML representations of its internal sensor simulation federation classes in conjunction with a recent system redesign, using GD Pro, a UNIX-based UML modeling tool. NVESD also has site licenses for Visio and Rational Rose, and efforts are underway to integrate these tools’ capabilities into the NVESD modeling and simulation effort. A. Use Case View of Paint the Night TerrainFigures 3 and 4 depict use case diagrams as developed under the network centric sensor study effort. Use case diagrams describe relationships between a system and the actors (both human and nonhuman) that use the system. These relationships may include generalization, association, and dependency.  EMBED PowerPoint.Slide.8   Figure 3: Use Case Modeling: Warfighter Actor HierarchyIn Figure 3, a hierarchy showing a parent-child relationship among actors is shown.  These actors represent the various kinds of warfighter actors who use data from simulated sensors in a synthetic environment. Scouts perform purely reconnaissance and surveillance functions, searching for and observing targets. Staffers assess observations made by scouts and recommend courses of action to Commanders. Commanders make targeting decisions and provide direction to Shooters, who engage the target. While this paradigm applies across all services, branches, and battlefield operating systems, the identity of various actors will change based on the role, tasks and structure of the organization of which the actors are a part. For example, a tank crew has a Commander, who acts in that capacity, but either the tank commander or gunner may act as a shooter. Paradoxically, a cavalry scout generally behaves as a scout actor, but may take on a shooter’s role, based on the mission and tactical circumstances.  Figure 4 shows an activity diagram the delineates how these actors perform reconnaissance, surveillance, target acquisition and target engagement functions as they interact with the synthetic environment. This activity diagram shows the flow of actions and communications that must occur in order to realize these functions.  EMBED PowerPoint.Slide.8  Figure 4: Warfighter Use Case Activity DiagramB. Logical View of Paint the Night Terrain Paint the Night is currently in the process of upgrading and redesigning its terrain generation tools. Goals for this effort include:Development of SEDRIS APIs and converters to and from Paint the NightImprovement of the consistency and reliability of terrain generationIncorporation of externally developed image processing and geographic information system tools. Extension of PTN terrain functionality to easily accommodate destructible buildings and bridges, multiple elevation structures, hydrology with river and lake bottoms.Preserving and improving the simplicity and rapidity of the terrain generation process.The maturation of PTN terrain generation, therefore, calls for UML data modeling to capture the data classes and objects that must be supported in the terrain generation process. Figure 5 depicts a notional class diagram based on current PTN data structures. As a disclaimer, it should be noted here that while there is an effort ongoing to map PTN data into SEDRIS, this chart merely reflects our internal analysis of the status quo ante in Paint the Night terrain, and does not reflect any PTN to SEDRIS mappings that may exist, either now or in the future. The purpose of this class diagram is to show how UML notations may be used to describe these relationships and to assist in the definition of PTN terrain databases, in an evolving sensor simulation.For the most part, these notations follow the same Rumbaugh OMT conventions that are familiar in SEDRIS. One distinction is the use of text notation to clarify and elaborate associations. At the highest and most abstract level of this class diagram, we see that the entire synthetic environment is logically divided among targets and backgrounds. Both targets and backgrounds have unique signatures, which are comprised of geometry, textures, and material properties. These relationships represent the essential problem of getting the synthetic scene “right” with respect to ground truth data, as evidenced in equivalent “real” imagery that has been collected from electro-optical/infrared sensors. The background class represents both the terrain surface, and cultural features on that surface; in PTN, these are represented either as arrays of T-meshed polygons or by 3D models.  EMBED Word.Picture.8  Figure 5: A Notional PTN UML Data RepresentationAs Figure 5 shows, we have chosen to clarify the association between the T-Mesh and Model classes and the signature class children with the “consists of “ notation. The T-Mesh and Model classes are in themselves aggregate classes; their children represent the lowest level of abstraction currently extant in PTN terrain databases. It should be noted that as this model becomes further elaborated and detailed, such information as found in the EDCS standard may either be assigned as attributes, or generate further subclasses, but for the purpose of this paper, we have chosen to limit the elaboration to a level which facilitates ease of presentation.C. Dynamic Modeling Considerations UML supports the following a variety of conventions to model data flow and transformation within a system As noted in Section 1, these include Collaboration Views in the form of state, sequence, collaboration, and activity diagrams. For the purpose of this discussion the collaboration and activity diagrams appear to have the greatest value. In addition to the “warfighter use case” previously discussed, the activity diagram appears to have the greatest value in defining the database generation process (similar to the IDEF0 function model), with a view towards database testing and utilization. Collaboration diagrams may reflect either the dynamics of the terrain generation system, a database interchange process, or the interactions between actors (e.g. the human scout searching for a target, a ModSAF vehicle performing local obstacle avoidance on a set of building or vegetation features). 5. ConclusionsThis paper has attempted to provide an overview of UML with respect to its implementation and usefulness to PTN in the synthetic environment domain. Because UML is designed to be applicable to all aspects of a system life cycle, it has only been possible to touch on a few highlights that reflect its power and flexibility. In order to more fully exploit UML’s potential, it will be necessary to go beyond many of the familiar conventions inherited from OMT and other modeling methods. UML’s unique value may not lie in the arena of object oriented design, but in the definition of customer/end user requirements, and the testing of complex systems.This issue is particularly relevant to Terrain Common Data Model (TCDM) initiatives. Expansion of such existing models as the JSIMS TCDM or even the NIMA UCDM to attempt to capture operational requirements for terrain or to understand how actors use terrain during simulation or real world operations cannot be done comprehensively without a commonly agreed upon semantics and notations. UML has a great deal to offer in this regard, since the issue transcends the question of why “Johnny can’t read geospatial data”. In order to gain a comprehensive understanding of how actors, in fact, interact with synthetic environments, using data visualization systems to obtain information and make decisions, a more comprehensive understanding and exploitation of UML semantics and notions is needed. We recommend that this question be further discussed with a view towards either acceptance or extension of these conventions as standards for developing SISO products.References[1] http://www.sedris.org/ab_2trpl.htm[2] Eriksson, Hans-Erik, and Magnus, Penker, “UML Toolkit” Wiley and Sons, 1998, pp 13-14.[3]  HYPERLINK http://www.sdct.itl.nist.gov/~ftp/idef/ http://www.sdct.itl.nist.gov/~ftp/idef/[4] JSIMS Terrain Common Data Model, Revision 1.2a, 27 July 1999[5] Lorenzo, Maximo; Riggs  B., Caruso M. and Schell D. “Integration of Engineering Level Sensor Federation into a Brigade Level C4ISR Experiment Using RTI V1.7” SIW Paper Number 00f-SIW-050, September 2000[6] Lorenzo, Maximo; Riggs  B., Caruso M. and Pastore, M. “Interoperability Versus Performance: Applicability of Paint the Night Terrain Generation BCR IV Lessons Learned to Integrated Natural Environments” SIW Paper Number 00f-SIW-049, September 2000BILL RIGGS is the SAIC Team Lead for the development team supporting the NVESD Paint the Night Program. Mr. Riggs has eleven years experience in developing computer generated forces and virtual terrain databases. He has a M.S.F.S. degree from the Walsh School of Foreign Service, Georgetown University.MAX LORENZO is the Chief of the CECOM Night Vision and Electronic Sensors Directorate Virtual Prototyping Systems Branch. He has a B.S. in Geology from The College of William and Mary.