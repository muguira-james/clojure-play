An Open Architecture for Synthetic Environment Database GenerationKenneth B. Donovan, Ph.D., Mark Field, Glenn Gutowski      Lockheed Martin Information Systems PO Box 780217, Orlando, Florida 32827-0217Ph: 407-306-3368, Fax: 407-306-4387 HYPERLINK mailto:ken.b.donovan@lmco.com ken.b.donovan@lmco.com,  HYPERLINK mailto:mark.field@lmco.com mark.b.field@lmco.com,  HYPERLINK mailto:glenn.gutowski@lmco.com glenn.a.gutowski@lmco.comKeywords:Synthetic Natural Environment,  Database Generation System, SEDRIS, TerrainABSTRACT: Synthetic environment database generation systems (SE/DBGS) produce the simulated landmass and entities that are used by the simulation system. Lockheed Martin Information Systems has played a major role in this area over the last two decades and has produced two DBGS products, TARGET and S1000.   However, the area of synthetic environments is undergoing rapid changes.  Simulation systems have greater capabilities to represent greater detail of the synthetic environment over larger, real-world areas. New data sources and commercial products are being introduced.  The SEDRIS (SE Data Representation and Interchange Specification) initiative is establishing for the simulation community a standard for interchanging synthetic environments.  To address future synthetic environment requirements, we have developed a new SE/DBGS architecture based on commercial products and SEDRIS.  SE/DBGS systems typically provide three sets of tools for the different components of the synthetic environment: an Imagery Tool for the photo-imagery; a Model Tool for the 3D models and a Land Tool for the terrain surface features.  Several commercial products provide good capabilities for the Imagery Tool and Model Tool.  However, the Land Tool presents a particular challenge due to the large data sets and complicated processing required for the surface features (transportation, hydrography, etc.) and the terrain elevation surface (downward flowing streams, road cut/fill, etc.).  We have developed a new Land Tool that uses a commercial GIS (geographic information systems) product with simulation-specific methods.  The new Land Tool is currently being used to build a detailed tactical ground database from 1:50,000 scale source data (VMAP2).The SE/DBGS architecture uses SEDRIS as the principal exchange mechanism within the simulation community to share databases  with other simulation systems.  SEDRIS is also used to produce correlated databases for all simulation subsystems such as semi-automated forces, visual image generators, radar simulators, and plan view displays.1. Introduction This paper describes a new synthetic environment database generation system (SE/DBGS) being developed by Lockheed Martin Information Systems to support various simulation applications.  The new system is intended to maximize the use of COTS software and SEDRIS, while leveraging the extensive database production experience gained through our prior DBGS capabilities: S1000 and TARGET.  S1000 has been used to develop small area databases for virtual tactical ground simulators.  S1000 has also developed medium gaming areas for semi-automated forces (SAF) such as the Southwest Asia database (covering 35 geo-cells).  TARGET has been used to produce large area  databases for virtual flight simulators and mission rehearsal (covering over 2000 geo-cells).  The area of synthetic environments is undergoing rapid changes that place new requirements on the SE/DBGS.  1) Simulation systems have greater capabilities and capacities to represent greater detail of the synthetic environment over larger, real-world areas.  The SE/DBGS is required to provide both fine detail, such as stream beds cut into terrain, as well as continent size gaming areas.  2) Previous solutions for producing databases are too expensive, take too long and are prone to errors and inconsistencies.  The SE/DBGS must be able to efficiently process the various sources, from imagery to maps, with minimal specialized training. 3) The SEDRIS initiative is emerging to provide a simulation community standard for interchanging synthetic environments.   The SE/DBGS must be able to efficiently consume and produce SEDRIS for database re-use and interoperability.  4) New COTS data sources and software tools are being introduced at a rapid pace which have strong potential to more cost effectively satisfy SE requirements.   Both S1000 and TARGET were based on simulation-specific software and database formats which required significant investments to insert new technologies.  The SE/DBGS must be able to readily leverage the advantages of emerging COTS products.  In order to address these demanding requirements, Lockheed Martin information Systems started an effort in 1997 to develop a new SE/DBGS to support a wide range of simulation applications; efficiently support producing and consuming other simulator databases using SEDRIS; and leverage the advantages of multiple COTS tools.  The following sections of this paper describe the approach we selected, our current capability and our plans for the future.  2. System Approach to SE/DBGS Figure 2-1 illustrates the scope of the SE/DBGS within the context of a simulation system.  The SE/DBGS is responsible for consuming a variety of data sources and then producing a Common SE representation for each of the simulation subsystems such as the radar, image generator, SAF, or electronic warfare (EW). The Common SE is consumed (or compiled) by each subsystem as needed for efficient run-time operation.  Each subsystem may require different run-time representations and/or resolutions of the Common SE (such as different grid samplings or polygon samplings of the terrain surface, or different feature attributions).  A critical element of the SE/DBGS is to provide the necessary geometry and attribution needed for each subsystem functionality.  Another critical element of the SE/DBGS is to support the system level  design tradeoffs to provide sufficient correlation of the different run-time representations to meet the system application requirements.  Many of the correlation or interoperability problems experienced on previous simulation systems are attributed to a “subsystem level approach” to defining the SE.  In this case, the SE is optimized for one subsystem (typically the image generator, sometimes the SAF).  The resulting subsystem SE often does not   provide the necessary information needed for all subsystems to operate and correlate.  Additionally, the subsystem SE optimizations made for efficient run-time representation may severely constrain the level of correlation achievable if the subsystem is used.  For example, a SAF that requires a regular Cartesian grid will not be able to accurately represent the ellipsoidal earth surface needed for databases bigger than 150km to 200km on a side.   Therefore, a system level approach is required to ensure SE accuracy and capacity requirements are flowed down to each subsystem.  Similarly, a system level design is required of the Common SE to support each of the subsystems.Another issue with some previous “subsystem SE” approaches has been the primary focus on optimizing the SE to support subsystem acceptance.  The subsystem DBGS tools can be difficult to use as they are optimized for a single subsystem (for example viewing and editing primarily the visual polygon representation).  A key system requirement for the SE/DBGS is that it must effectively serve the needs of the entire simulation system during on-going field operations, including mission planning or rehearsal.   New areas must be built or enhanced efficiently with an emphasis on re-using existing databases.   The SE/DBGS must be able to scale up to support medium scale database production (10+ simultaneous users)  for quick turn production.   The SE/DBGS must be able to rapidly update small areas of the gaming area (such as a particular target area) and transmit the updated area of the Common SE to the subsystems.  Each subsystem has a corresponding requirement to compile the small area update into the run-time representation within a specified time.2.1 Data Representation and Process Model A key element of the SE/DBGS approach is the model used to represent data within the system from the time the sources are consumed until the final outputs are produced.   The Landmass data model that we adopted is illustrated conceptually in Figure 2.1-1 below.  The Landmass is composed of a collection of features, where each feature corresponds to a real world object such as a lake, road, or forest.  Each feature generally has three representations, named Source, Map and Expanded.  The Source Data captures the feature in terms of the original source data, for example the VMAP2 geometry and attributes.  Each data input (VPF, DFAD, DTED, etc) is captured based on their native geometry and attribution scheme. The geometry and attributes from any Source data are then translated into the standard Map data.  The Map data represents the feature as it is corrected, attributed,  and simplified for the requirements of the simulation system. Using the example shown below, the lake, road and forest features are simplified between the Source Data and the Map Data.  The Map data provides “ground truth” of the final simulator database, and is so named because it contains the information required to generate simulator database maps. The Expanded data provides the full description of the Map data features as required to drive the simulator.  The Expanded data typically includes both “abstract” descriptions used by computer generated forces (such as a road centerline with terrain elevations), and “geometry” descriptions used by visual image generators (such as the road bed and shoulder polygons and textures).  The Expanded data also contains positional references to models, such as trees or bridges, that provide the representation needed by the simulator for these features.  The referenced models and texture images are built using the Model Tool and Image Tool.  Within each of the data representations (Source, Map, and Expanded), each feature is categorized into one of several “layers”, such as hydrography, vegetation, transportation, physiography, etc.  Topological connections are needed only within a layer for Source and Map data, but are required across layers for Expanded data.  The data model supports multiple resolutions for a feature (or group of features).  For example, the lake feature shown in Figure 2.1-1 can be represented in the Map data at both a 1:50K scale, as well as at a 1:250K scale.  Multiple features at the 1:50K scale can be aggregated to represent a single 1:250K scale  feature.The data coordinate system is required to support modeling in either geodetic or “flat earth” (e.g. UTM).  The geodetic coordinate system used in the TARGET system is preferred because of the ability to seamlessly support large areas.   The flat earth approach is also provided to support heritage simulator subsystems which require data on regular Cartesian spacing in a flat earth system over a small area.The SE/DBGS data model approach is similar to the new STOW database process [1].  Both approaches: 1) translate each data source into a standardized geometry and attribute representation (call the Terrain Common Data Model in [1]); 2) retain intermediate results for staged production; 3) use the geodetic coordinate system to support large areas; 4) delay application-specific tiling.    Some differences in the approaches are due to the different data sources and simulations (STOW is focused on 1:250K scale for constructive simulations, while the SE/DBGS is focused on 1:50K scale for virtual simulations).  Lockheed Martin Information Systems continues to contribute to the development of the STOW efforts to address interoperability between constructive and virtual.A typical data processing flow using our data model is illustrated in Figure 2.1-2.  The data sources (DTED, VMAP2, etc) are imported into the system and stored as Source Data objects, normalized into the selected coordinate system (such as geodetic, or Cartesian using a Transverse Mercator projection ).  The Source Data is then processed into the standard Map Data form for each data layer.  In the case of the terrain elevation, the Map Data is an Adaptive Triangulated Regular Network (ATRN) due to SAF constraints.  Transportation Map lineal features, such as the road centerline, are  simplified, snapped to close network gaps, and deconflicted to ensure adequate space for the road width.  Vegetation Map data such as the forest feature is created from the Vegetation Source with operations such as simplification, aggregation, mapping into a selected number of standard types, and populating with collections of three dimensional vegetation features (called basis sets).  After the Map Data for a layer has been completed in a given area, the layer is processed into the Expanded Data, with additional description of the feature as needed for the simulation systems.  For the SAF, a road centerline may be represented by several linear segments with various vertex elevations for cut and fill areas.  For the visual system, the same road is represented by a collection of polygons for the road bed and the conforming road shoulders.  These 3D expanded polygons are used to develop an ITIN (integrated triangulated irregular network) for a polygonal terrain surface with cut and fill.Key advantages of this data process model are: a) the data can be processed incrementally by layer and/or area; b) intermediate results are retained to facilitate modifications from source updates or database review feedback; and c) the integrated data model with object associations allows seamless comparisons and operations between Source, Map and Expanded data. As an example, once the hydrography has been expanded into river beds and banks, the Expanded river data is available to deconflict roads or vegetation Map data that would be too close to the river bank.This also facilitates small area modification without starting from scratch, which is especially significant due to the large amounts of Land data being processed.   In most cases, changes can be made to a selected area of a Map layer without requiring rework of other areas or layers that are not directly effected by the change.2.2 Open System Architecture A top level view of the architecture is shown in Figure 2.2-1.  The primary data processing tools are shown at the top: the Image Tools, Model Tools and Land Tools.  The Import/Export tools shown at the bottom provide the simulation community interfaces such as SEDRIS, SIF, OpenFlight(, and DTED.  In order to provide access to the widest selection of COTS tools, a Simulation “Toolbox” provides the translation between the COTS tools and the simulation community interfaces.  The primary export interface to drive all simulation subsystems, or to interchange with another simulation system, is through SEDRIS.  Other export formats are provided as required to interface with systems that do not handle SEDRIS.3. COTS Technology AssessmentThe commercial market demands some degree of functionality that is common with the simulation market.  This is highest with image processing tools.  Model tools are also well suited for both types of applications.  Land tools require the greatest amount of customization.  The following table compares this commonality and lists the simulation specific functions not supported directly by most commercial products.Image and Model Tools are driven by commercial customers and are based on industry standards.  The widespread use of these tools has resulted in increased competition between tool vendors.  This is a benefit to the tool users who get increased functionality at reduced costs.Land Tools are also driven by the commercial GIS (geographic information system) market, but typically requires application-specific data modeling and functionality or user interface. This requires some customization of the "out of the box" capabilities to fully satisfy the simulation application domain.  Several different GIS technologies are available to be customized for Land Tool functionality.  The technology we selected for our data process is described in the following section.4. Object Oriented GIS Land Tool We selected a COTS GIS package, called Smallworld(, as the basis for a new Land Tool.  The key functions and infrastructures supported by the product “out of the box”   are described in the following section 4.1.  Examples of simulation specific methods that we have developed on top of the robust COTS infrastructure are provided in 4.24.1 COTS Object Oriented GIS Features The database storage is a relational database, however access to this database is through an object oriented programming language. Each stored feature in the database is considered an object which is an implementation of a table definition (a class) in the database. These classes can have several different types of attributes associated with them. They include physical attributes, which are characteristics of the object (e.g., material, height); geometric attributes, (points, lines, and areas); and logical fields, which are automatically derived (e.g., road length). The coordinate system can be Cartesian or geodetic. While in geodetic, the GIS system supports transformations to different types of projections on the fly.The relational database storage mechanism is a relational database similar to an Oracle database. In fact, the GIS provides the option to store its data within an Oracle database. We have chosen to use the native GIS database implementation. There are tools provided for maintaining the relational database, such as hot backups, integrity checks, replication, and extraction.This relational database technology natively supports wide area database storage using a seamless virtual storage.  This minimizes the issues associated with spatially partitioning the data into a large collection of files, such as: needing to open and close a large number of files to process a layer, or having to ensure neighboring files are checked for boundary data.  Current GIS product implementations include applications that have online over 1 million geometry objects, and have data storage of multiple terabytes. The object classes can be related together in different types (0:0, 1:1, 0:n, 1:n, or m:n). These class relationships can be used to relate an Expanded object to the Map object it was derived from, as well as to the Source object that was imported into the Land Tool. These relationships also allow us to relate objects together so geometric searches can be dramatically reduced by limiting the search criteria to those objects "connected" to a reference object.  The topological infrastructure allows the seamless implementation of different geometric types. The geometry of an object (point, line, and/or area) can belong to one topological manifold. There are many different topology rules that can be set up to have different topological interactions for all possibilities of point, chain, and area interactions..  For example, two transportation objects will normally interact with each other where the geometry of the objects intersect. At each of the intersections a topological node is created and is used to do a topological network analysis. An example of how different topological rules are used is the representation of a bridge crossing over a road, without topologically intersecting that road. We used the topology rule "connect at ends" for bridge lines.  This allows topological connections to be located only at either end of the bridge line. Therefore, a bridge line can cross over another transportation geometry without interacting with it. The object-oriented representation of a feature allows for "versioning” at the object level. Versioning allows multiple users to operate on data in the same geographic area. When user A begins making modifications to the database, only the changes that user A makes are stored in an “alternative”. User A does not actually check out or lock up that geographic area. This allows user B to make changes to the same area, even the same type of features (hydrological, transportation, etc.). Once the changes are completed over any time frame (minutes to months), the user merges the changes from the alternatives back to the master. If user A and user B updated different objects, then both updates can be merged without conflict.  If user B made changes to the exact object that user A modified, the system will identify the object conflict that must be resolved to update the master.This versioning technology lends itself to support multi-site database development. Multi-site support allows users at a different location to make updates to the database and receive updates from the database. This is done in several ways: a) direct network connection to the database server; b) database caching that sends updates to the main database server periodically c) database replication by intermittent network transfer and d) database extraction on tape.  For option c and d, the database is resident on both sites and only changes to the database are transmitted. In summary, the COTS GIS provides the technology for scaling database production staff, handling very large spatial data sets, performing small area updates,  taking advantage of  topology and relationships, and providing traceability back to source data.4.2 Simulation methods While the COTS GIS package provides a powerful infrastructure, the Land Tool functionality requires simulation-specific customizations including the data model design for representing data objects (already discussed in section 2), and the methods for operating on the data objects. Examples of the simulation methods are discussed in this section.Generalization: these methods simplify the geometry according to a distance parameter.  The sample screen shot below shows the “before and after” effect of generalization. The Source Data for a river and a road is displayed with all of the source vertices.  The Map data for each feature is also displayed with the simpler geometry (fewer vertices).Snapping: The example below shows how snapping ensures that small gaps in a road network are automatically closed.  The original Source road did not end exactly at the intersection.  Even a small gap could cause problems for a network following computer generated force.  The snapping function moves the end of the road to be connected with the intersection. (The display shows both the source geometry and the snapped geometry.)  The snapping example also shows the operation of the Quality Control Review browser that allows the user to quickly see any of the objects that were modified by the snap method.  Expansion: These methods translate each Map feature into the full definition of the Expanded features as required for the simulation subsystems.  The example below shows the expansion of several hydrographic Map features into the corresponding Expanded features.   A linear stream is expanded into multiple areas to represent the water surface and stream banks.  The expansion methods use the expansion profile information that is associated with each Map feature  object to determine stream width, bank width, etc.  Deconfliction: This method resolves spatial conflicts between features to eliminate overlaps and provide adequate space between Map features for expansion.  For the example shown to the right, a road line comes too close to a river.  If the road were expanded as is, the expanded road bed would overlap the river.  This example moves the road end away from the river based on the road expansion profile.  Other typical examples of deconfliction include: separating neighboring roads so their road beds do not overlap, cutting a road through a forest, and moving a building off a road or stream.3D Expansion and Integrated TIN:  Some of the areas and lines provide topographic relief that impacts the terrain surface, such as cut/fill roads, streams, or embankments.  Two examples of the 3D expansion are shown to the right for Fill and for Cut.  For Fill, the method computes areas (polygons) with elevations as needed to represent the flat road surface, as well as the road shoulders that match up to the individual terrain triangles that lie underneath the fill.  The bottom example illustrates cut.  Here the topographic feature is integrated into the terrain triangles.  Cut generates more triangles than fill because the original terrain triangles must be fragmented to match the topographic area. For each geometry expansion created, there is a corresponding abstract expansion.  The abstract expansion provides the centerline segment with vertex elevations to match the cut/fill geometry.  The centerline expansion also provides the abstract profile (e.g. road bed width and shoulder width) that is needed to interpret the abstract centerline feature definition.5. Current Capability The SE/DBGS with the new Land Tool is currently producing Cartesian databases (approximately 100 km x 100 km) suitable for virtual training systems for ground or aviation tactical training. The SE/DBGS is also compatible with the TARGET Land Tool which provides direct access to the extensive library of flight databases in geodetic coordinates.For one current application, the source data is 1:50K NIMA VMAP2 and DTED2, augmented with features digitized from 1:50K maps or overhead imagery and processed by the new Land Tool. MultiGen( was selected as the Model Tool, and PhotoShop( as the Image Tool. The Map data is exported to the Map Tool to generate the appropriate map style and symbology.  The Expanded data is exported in SEDRIS format (STF) to all simulation subsystems such as SAF, visual image generation, mission functions (such as collision detection) and plan view displays. Lockheed Martin Information Systems SEDRIS software is used to export the Expanded data to the STF, as an extension of the capabilities described in [2]. Current year activities include enhancing the STF outputs to most efficiently support the different subsystems. The current database production capability uses a  network of Windows NT( PCs for the Land Tool, Map Tool, Model Tool and Image Tool.  A Sun( server maintains the master database for the network and provides the platform for the Simulation Toolbox, TARGET Land Tool, and Export Tools. 6. Future Plans A significant focus for future development is to build on the current infrastructure to better address difficult interoperability issues.  We see a strong potential to address multi-resolutions of terrain data within the Land Tool.  Part of this effort will add simulation methods that incorporate algorithms already used in TARGET, such as the multi-resolution geodetic triangulation, described in  [3].  We also plan to leverage the results of the on-going work to advance the TCDM for interoperability between virtual and constructive simulations.  Finally, various COTS tools will continue to be evaluated and incorporated to improve the capabilities of the SE/DBGS system.  7. Conclusions We have discussed our strategy to provide an open architecture for an SE/DBGS based on COTS tools and SEDRIS.   The architecture is designed to rapidly incorporate COTS packages which are being driven by commercial markets and standards.  At the same time, the architecture provides the infrastructure to interface these COTS packages with the simulation-specific data modeling, data process and format (SEDRIS).The current implementation of this architecture uses COTS tools for all the major data processing tools.  The current COTS market does not provide a fully compliant Land Tool product alternative.  A new Land Tool capability is described which is based on a COTS GIS system, with the addition of simulation-specific methods we developed.  The present SE/DBGS capabilities  are being used to produce a tactical ground database that is provided to the simulation subsystems in SEDRIS format.  The architecture has been designed to span multiple resolutions of virtual simulation, from ground to flight, and to provide a basis for tackling the constructive to virtual interoperability issues. 8. References[1] P. Birkel, K. Cauble, D. Miller, T. Miller: ``Pushing the Envelope: The Worldwide Terrain Database''. Spring Simulation Interoperability Workshop, March 1999.[2] K. Donovan, L. Lyons, B. Vanderlaan: ``SEDRIS/CCTT Data Interchange Experiment''. Fall Simulation Interoperability Workshop, September 1998.[3] K. Donovan, J. Howie, W. Wojciechowksi: “A Multi-Resolution Integrated Terrain (MRITIN) Database”. Fall Simulation Interoperability Workshop, September 1997.Author’s BiographiesKENNETH B. DONOVAN is a product manager of advanced simulation technologies at Lockheed Martin.  He has 20 years experience in the simulation industry, and has numerous publications and patents in the field. MARK FIELD is the systems engineer for SE/DBGS at Lockheed Martin.  He has 8 years experience in the simulation industry in the area of database generation systems.GLENN GUTOWSKI is a project engineer of advanced simulation technologies at Lockheed Martin.  He has 20 years experience in the use and development of simulation data base generation systems.Notice:  All trademarks are property of their respective owners.Copyright 1999, Lockheed Martin Corporation.Deconfliction example EMBED Word.Document.8 \s 3D Expansion: Cut example3D Expansion: Fill example