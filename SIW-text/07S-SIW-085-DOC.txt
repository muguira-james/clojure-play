Testing the Test: Distributed Testing in support of System of Systems IntegrationScott WolfsonU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:scott.wolfson@us.army.mil" scott.wolfson@us.army.milRyan NormanU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-T-IM, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" ryan.t.norman@us.army.milJason BolinU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-T-IM, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" jbolin@rttc.army.milJosh SellsU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:darryl@amtec-corp.com" jsells@rttc.army.milAdam TroupeERC IncorporatedHuntsville, Alabama555 Sparkman Dr., Suite 1622Huntsville, AL 35816 HYPERLINK "mailto:darryl@amtec-corp.com" atroupe@rttc.army.milKeywords: TENA, FCS Experiment 1.1, RIAB, RTTC Camera Control, SIMDISABSTRACT:  Over the years, Redstone Technical Test Center (RTTC) has developed a mature but constantly evolving distributed M&S capability in support of systems testing.  However, new programs, such as Future Combat Systems (FCS) and its Experiment 1.1, have required RTTC to expand beyond support of systems testing and into support of system of systems testing in distributed environments either locally or distant in nature.  System of systems testing requires organizations with different areas of expertise to come together to formulate a common test infrastructure.  The Test and Training Enabling Architecture (TENA) was chosen to facilitate data sharing across the test network infrastructure.  This paper describes how the use of the TENA Middleware and TENA standards can make a test infrastructure “plug and play” compatible with other components while greatly reducing the time needed to integrate test components.In order to assess the ability to perform system of systems testing, RTTC deployed several key components in support of the horizontal integration of the test infrastructure.  Range-in-a-Box was used to collect and send data onto the test network infrastructure.  The RTTC Camera Control was used to provide live video of any instrumented or tracked experiment participant.  The SIMDIS Visualization Tool was used to provide real-time situational awareness of the entire experiment, including sensor data and tactical position information.  Finally, the Reflect Suite was used to log all TENA data on the test network and playback test runs as-needed.  This TENA-enabled integrated test network infrastructure allowed for full situational awareness and real-time remote instrumentation command and control from any point on the test network, including from over 2,000 miles away.In addition to system of systems testing, RTTC has started to investigate the benefits of being more actively engaged in the Integration Phase of the system acquisition process.  This will enable RTTC to help system developers troubleshoot and solve integration issues with their systems at a very early stage before the systems enter evaluation.IntroductionOver the years, Redstone Technical Test Center (RTTC) has developed a mature but constantly evolving distributed M&S capability in support of systems testing.  However, new programs, such as Future Combat Systems (FCS) and its Experiment 1.1, have required RTTC to expand beyond support of systems testing and into support of system of systems testing in distributed environments.  These distributed environments can be physically located either locally, within the many test facilities of Redstone Technical Test Center for example, or across any number of test or training sites located throughout the United States or even the world.  System of systems testing requires organizations with different areas of expertise to come together to formulate a common test infrastructure in order to fuse all collected test data into a complete depiction of the test event.  Failure to do so will prohibit complete evaluation of the systems under test both at the system level and the systems of systems level as requirements will not be properly evaluated.  The Test and Training Enabling Architecture (TENA) was chosen to facilitate data sharing across the test network infrastructure in order to form a unified collection of test data across the entire distributed test environment.  Using TENA, the US Army Developmental Test Command (DTC) was able to share test data across disparate test centers in support of Experiment 1.1.  This paper describes how the use of the TENA Middleware and TENA standards can make a test infrastructure “plug and play” compatible with other components while greatly reducing the time needed to integrate test components.  Additionally, this paper will discuss how RTTC and the test community should move forward in order to address all test and evaluation requirements for systems of systems testing in distributed environments.  Throughout this paper, RTTC’s participation in FCS Experiment 1.1 will be used as a use case for its ability to support system of systems testing.  Therefore, it is important to first provide background information on RTTC’s support of FCS Experiment 1.1.FCS Experiment 1.1 at a GlanceAt the end of calendar year 2005, the US Army Developmental Test Command (DTC) headquarters issued a directive for the DTC test centers to provide test planning for FCS battle command network (BCN) testing, in accordance with the FCS Test and Evaluation Master Plan (TEMP) and System Evaluation Plan (SEP) and subsequent updates.  The DTC Network Test and Analysis Planning (NTAP) working group, of which RTTC is a member, was chartered in early 2006 with the goal of planning and executing end-to-end performance testing of the FCS network in support of this directive.  The NTAP consists of POCs from each of the other test centers and provides extensive testing expertise from the NTAP members and a forum to coordinate activities.  RTTC was assigned responsibility for the testing of FCS sensors to include testing of the individual unattended tactical and urban ground sensors as well as the sensor equipment on unmanned aerial and ground platforms. As part of its role in NTAP, RTTC supports the design, execution and reporting of these sensors as components of the overall FCS network test program.  Experiment 1.1 was broken up into several Sub-experiments.  RTTC was primarily focused on Sub-experiments 2, Distributed Fusion Maturity, and 4, Technology Development.  As it relates to RTTC, one of the goals of Sub-experiments 2 and 4 was to integrate Tactical Unmanned Ground Sensors (T-UGS) such that threat vehicles could be detected and identified as they traversed through the test environment.  Threat vehicles drove into and out of the T-UGS sensor fields and the data was examined to determine whether or not the threat vehicles were detected within the parameters of the T-UGS.  Thus, a mechanism to collect data from the individual sensors, from the resultant object derived from sensor fusion, and from the threat vehicles to provide ground-truth on the resultant object was needed in order to verify that an evaluation could be supported at a later date.  Additionally, a mechanism was needed to provide situational awareness in real-time as the test occurred. It is important to note that the goal of FCS Experiment 1.1 was not to evaluate any future-force weapon systems that will be fielded as a result of the FCS program.  The intent was to begin integration of the FCS weapon systems well ahead of any official evaluation to identify interoperability issues well in advance.  Similarly, DTC’s goal with Experiment 1.1 testing was to ensure that, once FCS systems are ready for evaluation, the test community can work together to collect and fuse the appropriate data at the system level to make an evaluation decision at both the system and systems of systems levels.  In other words, the goal of the DTC NTAP efforts was to determine whether or not DTC could successfully execute system of systems testing in support of an evaluation decision.  By working together through NTAP, DTC was able to collect the necessary sensor data and collect the threat vehicle data necessary to provide ground-truth of the sensors.  During FCS Experiment 1.1 Sub-experiments 2 and 4, RTTC verified that it could collect sensor data to validate instrumented data collection and ground truth at the sensor layer, while also utilizing data visualization, reduction and analysis tools, and NTAP agreed upon data management processes.  Distributed Test Layers at a GlanceAs RTTC began to support system of systems testing and distributed testing efforts, it became apparent that a method for segmenting network traffic was necessary in order to formulate a complete depiction of the test event and ensure that all test data was collected and accounted for.  Thus, RTTC began to divide their support of test efforts into three Distributed Test Layers: the tactical layer, the instrumentation layer, and the data layer.  The tactical layer contains the communications traffic of all the systems under test or that are joined at the system of systems level.  The tactical layer consists of all the communications that would occur in an operational or “real-world” scenario.  Loggers are used to collect the tactical layer data and send it to the data layer.  The instrumentation layer consists of all the instrumentation or other sensor data being used to monitor the tactical layer.  This data is collected on the instrumentation layer and sent to the data layer.  The data layer is where the information from the tactical and instrumentation layers is brought together.  The data layer is used to perform data reduction and analysis and perform system evaluation.  This paper will focus on test integration within the instrumentation layer.  These Distributed Test Layers proved invaluable to the execution of DTC goals for FCS Experiment 1.1.  Figure 1: Distributed Test LayersTENA Middleware and OM StandardsA real-time data transport architecture was necessary in order to construct the necessary distributed instrumentation layer essential in supporting system of systems testing and, eventually, evaluation required by future-force, net-centric warfare based programs such as FCS. TENA was selected as that architecture. TENA, part of the jointly sponsored CTEIP and JNTC TENA Software Development Activity (SDA), is an object-oriented data transport architecture.  TENA sanctions real-time, distributed testing and simulation through the use of a Logical Range Execution, or LRE.  The LRE is a collection of all the objects available for receipt via subscription in a particular distributed test and/or training environment.  Communication between entities in the test execution environment using TENA is accomplished with servant objects and proxy references to these servant objects.  In terms of the publisher-subscriber paradigm, Servant objects are publishers and proxy objects are subscribers.  Together, servant objects and their corresponding proxy references form Stateful Distributed Objects (SDOs), the building blocks contained within every Logical Range Execution.  SDOs contain both data attributes and control methods.  TENA relies on SDOs within a LRE to publish test data in an object-oriented format and deliver that test data to any number of interested subscribers real-time.  With an SDO, the data attributes are updated across the network via an SDO’s publication state.  A publishing, or servant, object represents the source of data and reports any changes made to the publication state to all applications that are connected to the servant object via a subscription, which is otherwise known as a proxy reference.  These updates occur atomically, meaning an object’s attributes are updated as one single entity to preserve the state of the published object.  Furthermore, a proxy is only notified about servants it has told TENA it is currently interested in; that is, a proxy only receives objects of types that it has “subscribed” to.  An SDO, however, facilitates more than just publishing and subscribing.  TENA also allows for both Remote Method Invocation and One-Way Methods, which permit a subscriber to remotely command its publisher to perform certain methods.  Methods defined within an SDO’s design are set up by TENA for either remote invocation or to perform as a one-way method.  To remotely invoke a method, TENA relies on SDO subscriber proxy references that use its middleware to connect with the publishing servant.  One-way methods work exactly like remote invocation, with the exception that they do not have return values from the servant back to the proxy upon completion of the method  Applications can be defined to handle TENA servants and TENA proxy references simultaneously.  That is, TENA allows for a publisher application to also be a subscriber application and for an application to be attached to multiple publishers or subscribers within the Logical Range Execution.  In short, TENA is a complete real-time data transportation solution for test execution data.TENA is driven directly by requirements from the user community.  These requirements are collected and discussed in an open forum known as the Architecture Management Team (AMT).  Anyone using TENA can define any number of SDOs in the formulation of Object Models to formulate the LRE.  However, one of the key roles of the AMT is the formulation and standardization of community standard Object Models.  These standard Object Models enable the community to achieve interoperability while maximizing reuse of testing applications.  Examples of current standardized Object Models include TSPI and Platform.The success of the DTC NTAP efforts was greatly affected by the use of the community standard Object Models.  The combined use of TENA community and DTC standard Object Models enabled the participants on the distributed test layer, which were all geographically disparate from each other, to formulate a Data Exchange Agreement.  The Data Exchange Agreement specified all data that would be published by test assets and the test assets that would subscribe to that data in order to form a complete depiction of the test environment.  With the Data Exchange Agreement in place, the participants were able to complete development of their test assets and, without any up front integration or interoperability testing, were able to achieve “plug and play” interoperability immediately upon arrival at the test site at White Sands Missile Range.  Additionally, use of community and DTC standards enabled the test assets to be reusable in other RTTC test endeavors, such as the Cross Command Collaboration Effort (3CE) FY06 Simulation Environment Characterization Assessment (SECA), with little or no code modification as long as other participants adhere to community standards.  All that is needed is another test-specific Data Exchange Agreement.  Simply put, without TENA, DTC NTAP would have been unable to quickly and effectively implement the data collection, command and control (C2), and situational awareness capabilities described below.RTTC FCS Experiment 1.1 ComponentsThe TENA-enabled integrated test environment allowed for full situational awareness and real-time remote instrumentation command and control from any point on the test network, including from over 2,000 miles away.  There were many other test assets implemented by both White Sands and Electronic Proving Ground (EPG) that were as instrumental in successfully testing DTC’s ability to support system of systems testing.  This paper focuses only on the test assets implemented by RTTC.  Please see Figure 2 below for a Logical Design view of the Instrumentation Layer in use by DTC NTAP during FCS Experiment 1.1.  In order to assess the ability to perform system of systems testing, RTTC deployed several key components in support of the horizontal integration of the test infrastructure.  Range-in-a-Box (RIAB) was used to collect and send test data from the integrating systems on the distributed tactical layer and onto the distributed test layer.  The RTTC Camera Control was used to provide live video of threat vehicles as they drove through the sensor fields and provide ground truth on the threat vehicle relative to the fusion of sensor data.  SIMDIS was used to provide Situational Awareness on the entire distributed test layer while providing an easy method for determining accuracy of the sensors while trying to detect the threat vehicles.  Reflect was used to Log all the data on the distributed test layer and replay the entire test as-needed.  The following sections discuss, in greater detail, these key components of the distributed test layer and how they would enable evaluation at both the systems and systems of systems level.Figure 2: FCS Experiment 1.1 Instrumentation Layer Logical DesignRIABRange-In-A-Box (RIAB) is a TENA-enabled generic data collection and control instrument used by RTTC to collect real-time test data from various sensors on any number of systems under test.  RIAB was designed with size and space restrictions in mind and, therefore, creates a very small footprint when used in testing.  Beyond data logging, RIAB has been used in previous tests to perform functions ranging from arming or disarming a weapon system to even remote controlling a live vehicle.  The RIAB system is designed to provide five key functions related to performing tests in a DT/OT open range or lab environment.  These functional areas are data acquisition, Unit Under Test (UUT) control & stimulus, UUT status monitoring, instrumentation control, and range safety.  Meeting these design requirements required careful attention when selecting COTS components and designing custom circuit boards such that the RIAB could survive the extreme conditions experienced on an open range or in a tactical vehicle.  The compact size and autonomous features of the RIAB design allow it to perform its desired test function while exhibiting little to no interference on the test itself.  During normal operation, the RIAB is powered using a battery pack allowing the system to operate on vehicles without effecting the power budget or at unimproved test ranges were AC power is unavailable.The RIAB provided data acquisition, status monitoring and hardware control capabilities during FCS Experiment 1.1.  During test execution, the data acquisition process involved collecting digital data from the FCS tactical sensors and ground truth video from the RTTC Camera Control, which is discussed in greater detail in Section 5.2 below.  This raw data was logged locally to solid state memory while a subset of the data and video was passed through a TENA interface to the RTTC command and control facility.  RIAB utilized TENA in order to inject sensor and camera data back into the distributed instrumentation layer.  This enabled applications such as STARSHIP, developed by EPG, and SIMDIS, which is discussed in greater detail in Section 5.3 below, to provide real-time status monitoring of the current test run.  Finally, RIAB was used as the hardware interface to the RTTC Camera Control and full control of the live cameras providing ground truth video.  This setup allowed RTTC to provide critical System-of-System test information to the decision makers using real time displays and detailed post test analysis.  Figure 3 logically diagrams the RIAB connectivity into Experiment 1.1.In summary, the RIAB system was design with the flexibility and ruggedness to provide field and lab system-of-system test support capabilities for both current and future tactical systems with minimal redesign and development costs. Figure 3: RIAB in FCS Experiment 1.1RTTC Camera ControlThe RTTC Camera Control (RCC) was used in FCS Exp 1.1 to provide situational awareness, visual ground truth and video documentation of live entities.  Using hardware and software components, the RCC can be controlled remotely (over IP) while streaming video back to the controller system.  Along with the ability to stream live video, the RCC also has the ability to capture and store video.  It can rotate 310 degrees horizontally (155 degrees in each direction which leaves a 50 degree blind spot directly behind the RCC) and tilt 77 degrees vertically (31 degrees up and 46 degrees down) at a rate of 60 degrees per second.The hardware components of the RCC consist of a PTU computer, a client computer, a tripod, a pan-tilt unit (PTU) and a camera.  The camera is mounted on the PTU which is mounted on the tripod.  A serial cable from the PTU computer to the PTU is used to send control signals.  As mentioned previously, a RIAB was used to send control signals to the camera for this experiment.  The PTU computer is connected to the client computer through a network connection.  The software components of the RCC consist of a client side control application, a client side MPEG4 viewer, a server side control application and a server side MPEG4 streamer application.  The client side control application (Figure 4 and Figure 5) launches the client side viewer, and talks to the server side control application which launches the server side MPEG4 streamer.The main part of the client side control application is the MPEG4 Manager (M4M) (Figure 4).  This part allows the user to connect to and control up to 16 different remote cameras.  During FCS Experiment 1.1, two cameras were utilized.  The M4M launches the client side MPEG4 viewer and a Pan/Tilt/TENA Control (Figure 5) for each connection that is made to a camera.  The M4M also allows the user to send a video capture command to the server side control application which will start recording video to the PTU hard drive. The RCC has the ability to see TSPI data and auto-track targets.  This is accomplished by using the TENA middleware to subscribe to TENA enabled platforms and instrumentation.  The RCC subscribes to the TENA community standard Platform Object Model.  Therefore, the RCC can point and auto-track any entity that derives from the TENA community standard Platform in any executing test.  Once an entity begins publishing TENA target information, its call-sign will show up in the Target Information list box.  Clicking the call-sign will cause the Target Information text boxes to update with the target’s TSPI data.  Clicking the “Track Selected Target” check box will cause the camera to begin auto-tracking the target.The RCC’s ability to provide situational awareness, visual ground truth, and video documentation was demonstrated in FCS Experiment 1.1.  Two cameras were set up at the WSMR FCS Test site with the client computers being setup within the test control building about 2 miles away.  Visual ground truth was demonstrated by the ability to visually show the discrepancies between targets that were publishing their own information and the target information that was being published from other sensor instrumentation.  Video documentation was accomplished by storing standard format video files on the PTU Computer (RIAB).  In addition to proving the remote capabilities to the control building near the physical test site, the RCC was also controlled from RTTC, including video display and auto-track capabilities.  RTTC, which is about 1200 miles from the physical test site, resided on the distributed instrumentation layer via a Wide Area Network (WAN) connection using the ATEC Test Integration Network (ATIN) and, therefore, had access to all data on the instrumentation layer in real-time.   EMBED MSPhotoEd.3  Figure 4: Client Side Control Application (MPEG4 Manager) EMBED MSPhotoEd.3  Figure 5: Client Side Control Application (Pan/Tilt/TENA Control)SIMDISSIMDIS is a Navy Research Laboratory (NRL) developed Government-off-the-Shelf (GOTS) 2D and 3D Visualization tool that is designed to provide real-time situational awareness of test events through the use of virtual terrains and real-time entity updates.  Users can load their terrain files into SIMDIS for display.  Then, SIMDIS uses a data transport architecture, such as TENA or HLA, to receive data from event participants and populates the virtual terrain with entities.  SIMDIS relies on community sponsors to fund new capabilities within SIMDIS.  These new capabilities are then worked into the code baseline and delivered free to the rest of the SIMDIS community as part of an updated version of the viewer.  The visualization tool is now available as a public release package.  Therefore, SIMDIS is free to anyone that registers for an account at  HYPERLINK "http://simdis.nrl.navy.mil/" http://simdis.nrl.navy.mil/.  During FCS Experiment 1.1, the SIMDIS Visualization Tool was incorporated into the test event to provide real-time situational awareness of the entire experiment, including sensor data and tactical position information.  A recently developed TENA plug-in for SIMDIS allowed the tool to provide real time 3D situational awareness of the entire experiment, including sensor and tactical position data, in a virtual representation of the experimental environment.  The real time awareness provided was invaluable to the experiment in respect to following the scenario timeline alone.  However, through its use during the test event, SIMDIS proved much more valuable than its original intent.  Inconsistencies in both the sensors and tactical position data were discovered in real time simply by looking at the SIMDIS visualization.  This was accomplished by comparing the TENA community standard Platforms they generated with the ground-truth TENA Platforms coming directly from the threat vehicles.  Sensor developers were even able to take this comparison and improve the performance characteristics of their sensors in real-time.  Without this real time display, problems in both the sensors and tactical equipment would have taken much longer to find and correct or could even gone unnoticed until extensive post-test analysis was complete. Thus, much time, money, and effort was saved.   Combined with a distributed instrumentation layer, SIMDIS is an extremely powerful tool.  All Subject matter Experts (SMEs) for all systems cannot be in the same location at the same time so distributed testing must be used in system of systems testing and evaluation.  Using SIMDIS, SMEs can stay at their duty station and evaluate systems in real-time without having to travel to the test site.  Figure 6: Example SIMDIS Screenshot showing multiple Threat RepresentationsReflectThe Reflect Suite was used to log all TENA data on the test network and playback test runs as-needed.  Reflect is a cross-platform, Government Off-the-Shelf (GOTS) suite of applications that provides general Test and Training Enabling Architecture (TENA) event management support, such as Logical Range Object Model (LROM) logging and playback capabilities and overall TENA Middleware situational awareness.  Logging and Playback in Reflect is done in relative real-time, meaning that items played back will occur in the same sequence and at the same iteration of time as they did when originally logged.  During Experiment 1.1, Reflect enabled all test data published using TENA on the distributed test layer to be logged in a single, standard format.  Data could then be examined for accuracy or replayed as-needed in order to replay the test runs without the need of running live threat vehicles back through the sensor field.  More information on Reflect can be found in the 2007 Spring Simulation Interoperability Workshop paper “Standardized TENA Logging and Playback using the Reflect Suite of Tools” (07S-SIW-084).RTTC Distributed Test Support into the FutureIn addition to system of systems testing, RTTC has started to investigate the benefits of being more actively engaged in the Integration Phase of the system acquisition process.  Being engaged at this early stage will facilitate the creation of a common data picture well in advance of any actual testing and enable RTTC to more easily collect test data for the systems under evaluation.  Having foresight of the systems at the Integration Phase will enable RTTC to better determine the testing requirements and test data that needs to be collected and fused in order to test and evaluate the systems both as an independent system and as part of its system of systems.  Additionally, this will enable RTTC to help system developers troubleshoot and solve integration issues with their systems at a very early stage before the systems enter evaluation.  The incorporation of testers in the Integration Phase is also beneficial to the system developers.  Having testers available to the system developers enables early feedback on the suitability of the system to meet its desired mission and allows for changes to occur to the system before any dollars are spent testing or even before a negative evaluation is received. ClosingThis paper has described how a portion of the test community is working to expand its test capabilities to support system of systems testing.  System of systems testing requires many subject matter experts of varying backgrounds and physical locations to come together to determine if a suite of systems meet both independent system requirements as well as requirements of working together in support of net-centric warfare.  It is not cost effective to send all of these subject matter experts to the test site for the duration of the test event.  Additionally, the subject matter experts may only have certain tools they need to evaluate the systems at their duty station.  This paper has shown that the use of distributed test environments enables these disparate subject matter experts to fully support the evaluation of the systems in real-time without having to travel to the physical test site.  Distributed test environments can and should be used to effectively enhance the collection and evaluation of test data in support of system of systems testing.DTC NTAP efforts during FCS Experiment 1.1 focused on the formulation of a common test infrastructure in order to fuse all collected test data into a common data picture ready for evaluation at the system and system of systems level.  These efforts proved that TENA is a viable method for sharing test data and distributing it for both a locally run test or in a distributed test environment.  By using TENA, the DTC was able to show that it is capable of collecting the necessary data at a system of systems level to support evaluation of future-force weapon systems.  However, more work must be done with data reduction, data fusion, and personnel responsible for system of systems evaluation to completely and effectively evaluate future force systems at the system of systems level.  Through its support of DTC NTAP and FCS Experiment 1.1, RTTC has shown that it has many test assets and capabilities available to effectively support system of systems testing either physically on-site at the test location or within the constructs of a distributed test environment.Author BiographiesSCOTT WOLFSON is currently serving as Lead Technologist for the U.S. Army Redstone Technical Test Center (RTTC) under the Flight Test Branch.  Along with his primary duties, Mr. Wolfson serves as an RTTC representative on the Army Test and Evaluation Command (ATEC) Instrumentation Domain Team and specializes in custom printed circuit board, field programmable gate array and micro-controller designs used in support of weapon system testing in harsh environments.  Mr. Wolfson holds a Master's degree in Electrical Engineering from the University of Alabama in Huntsville and is pursuing a PhD. RYAN NORMAN is currently serving as Software Architect for the U.S. Army Redstone Technical Test Center (RTTC) under the Information Management Branch.  Along with his primary duties, Mr. Norman serves as Hardware Integration Lead for the Cross Command Collaboration Effort (3CE) M&S Working Group, contributes to the TENA Architecture Management Team (AMT) as RTTC representative, supports Joint Test and Evaluation Methodology (JTEM) efforts for methods and processes in joint mission environments, and is a frequent contributor to SIW conferences.  Mr. Norman holds a Bachelor of Science degree in Computer Science from the Georgia Institute of Technology.JASON BOLIN is currently serving as Enterprise Application Development Manager for the U.S. Army Redstone Technical Test Center (RTTC) under the Information Management Branch.  Along with his primary duties, Mr. Bolin serves as RTTC Representative for the Development Test Command (DTC) Community of Interest Croup (COI) and Range Commanders Council (RCC) Data Reduction & Computer Group (DR&CG) and is a frequent contributor to SIW conferences.  Mr. Bolin holds a Bachelor of Science degree in Computer Science from Tennessee Technological University and is pursuing a Master’s of Software Engineering degree from the Naval Postgraduate School. JOSH SELLS is currently serving Redstone Technical Test Center (RTTC) as a software engineer under the Flight Test Branch. His primary duties include TENA and Web software development. Mr. Sells holds a Bachelor of Science degree in Chemical Engineering with a minor in Computer Science from Tennessee Technological University and is a frequent contributor to SIW conferencesADAM TROUPE is currently serving as a Software Engineer for ERC Incorporated at the U.S. Army Redstone Technical Test Center (RTTC) under the Information Management Branch.  Mr. Troupe holds a Bachelor of Science degree in Computer Science from the University of Alabama in Huntsville.