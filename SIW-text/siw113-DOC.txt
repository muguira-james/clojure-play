An Architecture for Simulation Based AcquisitionMr. Robert LutzJohns Hopkins University Applied Physics LaboratoryLaurel, MDPhone: 240-228-7599Email:  HYPERLINK mailto:robert.lutz@jhuapl.edu robert.lutz@jhuapl.eduMr. Jack KeaneJohns Hopkins University Applied Physics LaboratoryLaurel, MDPhone: 240-228-8886Email:  HYPERLINK mailto:jack.keane@jhuapl.edu jack.keane@jhuapl.eduKEYWORDSSBA, Simulation Based Acquisition, Architecture, Collaborative EnvironmentAbstract: The vision for Simulation Based Acquisition (SBA) is an acquisition process in which DoD and industry are enabled by robust, collaborative use of simulation technology that is integrated across acquisition phases and programs.  The goals of SBA are to reduce the time, resources, cost, and risk associated with procuring new systems, while increasing system quality, supportability, and military worth.  In March 1998, the Acquisition Council of the Executive Council for Modeling and Simulation (EXCIMS) chartered a Joint Task Force (JTF) to develop a roadmap for SBA.  In particular, the JTF was tasked to 1) identify current technical and cultural barriers to more effective use of simulation in the current acquisition process, 2) define key architectural elements and interoperability/reuse mechanisms needed to facilitate modern Integrated Product and Process Development (IPPD) practices, and 3) recommend a set of specific actions to achieve the SBA vision.  The SBA Roadmap was formally delivered to the Acquisition Council in September 1998, and has continued to evolve since that time based on feedback from industry, the Services, and other affected government agencies.The purpose of this paper is to describe the architectural constructs defined in the SBA Roadmap.  First, an operational view of the architecture will be described, highlighting the concept of an SBA Collaborative Environment (CE).  Next, a systems view of the architecture will be provided, highlighting a baseline reference architecture for CEs and key elements within the architecture (Distributed Product Descriptions, DoD/Industry Resource Repository, etc.).  Finally, the foundations for a technical architecture for SBA are discussed, highlighting potential opportunities for standardization within the CE reference architecture and how existing standards and standards organizations may be leveraged to meet future needs.BACKGROUNDIn 1997, the Vice-President’s National Performance Review (NPR) set a goal for cutting delivery time for new systems by 25%.  In response, the Department of Defense (DoD) stretched this goal to a reduction of 50% in acquisition cycle time and set an additional goal of reducing Total Ownership Cost (TOC).  In order to meet these goals, the Acquisition Council of the DoD Executive Council for Modeling and Simulation (EXCIMS) envisioned an acquisition process known as Simulation Based Acquisition (SBA), with the following goals:substantially reduce the time, resources, and risk associated with the entire acquisition process; increase the quality, military worth, and supportability of fielded systems while reducing total ownership costs throughout the total life cycle; and enable Integrated Product and Process Development (IPPD) across the entire acquisition life cycle.  M&S IN ACQUISITIONThe acquisition community has long utilized Modeling and Simulation (M&S) as an enabler of key functions and activities.  Because the scope of potential applications of M&S for acquisition is extremely broad, there is a correspondingly wide variety of different types of models and simulations in use today.  For instance, virtually all functional disciplines in the acquisition process (e.g., engineering, logistics, training, test, manufacturing, etc.) have developed and utilize models and simulations in support of their assigned responsibilities.  Within each functional discipline, these models and simulations may be further characterized as to their class (constructive, virtual, or live) and according to the level of granularity they support.There is little question that most segments of the acquisition community have embraced M&S as a necessary tool.  However, it is widely recognized that there are many issues related to how M&S is used in support of acquisition which lead to inefficiencies and unnecessary costs.  A sampling of some key issues follows:Models and simulations built in support of different functional disciplines tend not to interoperate, limiting the ability for multi-functional IPTs to collaborate throughout the lifecycle of a given product.There is little sharing and reuse of models, simulations, and supporting databases, which results in unnecessary costs and schedule delays in acquisition programs.There are significant gaps in the standards that are needed to facilitate efficient product development processes.Procedures for Verification, Validation, and Accreditation are frequently inadequate, leading to credibility problems or an unjustified acceptance/reliance on potentially inaccurate simulation output data.Mechanisms for protection of proprietary data are still immature, hindering the degree to which industry is willing to openly share information with government.Clearly these and other similar problems must be addressed if there are to be gains in quality and cost efficiency in future acquisition programs.  The purpose of this paper is to describe a “To Be” view of an architecture for SBA, which identifies the key components, interrelationships, and mechanisms necessary to achieve SBA goals.  This architecture specification represents one element of the SBA Roadmap, which is introduced in the next section.SBA JOINT TASK FORCEIn March 1998, noting the existence of a number of previous SBA-related studies, the Acquisition Council established a Joint Task Force to develop a roadmap for SBA implementation.  A Terms of Reference (TOR) document was developed for the Task Force that addressed architectural concepts for SBA, technical challenges, ownership of modules in the systems architecture, opportunities for reuse, investments, and recommendations for action.  Furthermore, the TOR identified three areas where changes would be required – culture, process, and technical environment.In order to complete the roadmap, the Task Force developed an approach which consisted of the following parallel but complementary efforts:The Task Force’s own literature reviews, related research, presentations by guest speakers at Task Force meetings, and Task Force internal discussions;Personal and small group discussions with DoD and industry visitors to the Task Force’s Study Room, where evolving Task Force concepts and ideas were displayed for review and feedback; andA two-session Quality Function Deployment (QFD) process (a structured decision analysis tool) to get customer input from a broad cross-section of government and industry personnel.The results of the first effort were used to populate the Task Force Study Room with concepts and ideas for discussion, and to provide initial inputs for the QFD sessions.  The feedback received during the Study Room walkthroughs and the results of the QFD sessions served to influence the Task Force’s subsequent work.  Ultimately, all three efforts led to the development of a notional architecture for SBA, and a roadmap of recommended actions to implement the architecture and address other related issues.  The focus of the remainder of this paper is to provide an overview of the SBA architecture.OPERATIONAL ARCHITECTUREBefore discussing the operational architecture, it is necessary to briefly discuss the process by which the Joint Task Force developed three architecture views for both the “as-is” and “to-be” architectures.  These three views, as shown in Figure 1, are the operational, systems and technical architectures, which are more fully described in the C4ISR Architecture Framework Document developed by the C4ISR Architecture Working Group in December 1997.  Even though C4ISR architectures are used to support warfighter interoperability under real-world operational conditions, the Task Force found these views useful in providing structure to the M&S domain.The operational architecture view was developed to examine organizational relationships, activities, functions and processes from which systems and technical architectures could be derived and analyzed by the Task Force.  Ordinarily an operational architecture would include information flows.  However, given the scope of the TOR and the time allotted to the Task Force, detailed information flows were not developed for the roadmap. The systems architecture view was developed to highlight those physical components - platforms, data flows, interfaces and networks - that support the operational architecture.  From the operational and systems architectures, the technical architecture was developed, consisting of the standards, rules and conventions that must be followed to implement the systems and operational architectures.In terms of the environment that promotes the DoD enterprise, Figure 2 presents a practical view of the as-is operational architecture.  Within this environment, industry and the DoD have formed Integrated Product Teams (IPTs) and working groups as a part of Integrated Product and Process Development (IPPD).  As such, they support the full range of functional disciplines from Strategic Planning to Operations.But there are shortcomings.  Most IPTs within program offices are intra-functional - they tend to align themselves under the acquisition functional areas – and, they have limited connection to functional areas outside of a particular program office.  Additionally, many parties who are heavily involved at the later stages of the life cycle, such as maintainers, trainers, testers and operators, have very limited involvement at the earlier stages.  These IPTs also tend to use specialized and incomplete sets Figure 1: Three Views of an Architecture.Figure 2: As-Is Operational Architecture.of tools which are supported by a wide variety of specialized data bases, which has led to the proliferation of a non-standard and non-interoperable M&S capability that cannot be effectively transported across phases and programs.When the top-level view of the Acquisition Process is examined, an opportunity appears to exist for stakeholders to become more involved in activities outside development and production areas on which they have concentrated in the past. This to-be collaborative environment, as depicted in Figure 3, emphasizes the concept of bringing government, industry, and academia closer together through inter-functional rather than intra-functional IPTs.Sets of integrated/interoperable tools would enable M&S and data to be shared among different functional areas, improving coordination between functional area experts. They would also ease the chore of  maintaining configuration control over a core suite of tools as well as in performing VV&A of these tools. Opportunities for reuse would increase because those functional areas that receive greater emphasis later in the program would be able to influence the M&S program early in the acquisition cycle.Figure 4 depicts a notional Collaborative Environment structure. The first two levels of collaborative environments, strategic and operational, are aligned with the levels of conflict described in Joint doctrine publications. The next level is the tactical mission level of conflict, where multiple systems are brought together to perform specific missions or functions. The next three levels of collaborative environments, product area, system, and subsystem, are natural alignments from an acquisition perspective, just as the first three levels are natural alignments from an operational perspective. Service materiel commands are responsible for overseeing the development and fielding of systems. Product areas are usually established by general categories of platform (e.g., aircraft, missiles, and ships) within the different Services in order to integrate similar programs.One of the key ingredients that would allow these environments to promote more effective collaboration is a robust SBA support system consisting of the right people, processes, andFigure 3: To-Be Collaborative Environment.Figure 4: Notional Collaborative Environment Structure.tools to meet the special needs of a given collaborative environment and also capable of supporting collaborative environments at other levels.  Another key requirement of the SBA support system is that it must accommodate distributed activities. If SBA is going to have high payoff, all stakeholders must have ready access to product models and data through distributed networks and repositories.SBA SYSTEMS ARCHITECTURECollaborative environments represent the fundamental operational concept upon which the SBA vision is based.  The hardware, software, and information resources that support collaborative environments (along with their interrelationships) together define a systems level view of the SBA architecture. Based on long term efficiency and cost reduction goals identified for SBA, this systems architecture is required to exhibit (at a minimum) the following general characteristics:Facilitate collaboration and effective use of M&S within the systems acquisition process via ready, dependable access to supporting tools, resources, and infrastructure.Facilitate interoperability among, and reuse of, models, simulations, data, and other infrastructure components (networks, facilities, etc.) across different functional disciplines and programs and between government and industry.Make maximum use of existing Government/Commercial Off-The-Shelf (GOTS/COTS) products and standards to minimize new tool and infrastructure development.Be open, scaleable, and flexible, allowing many different implementation approaches. A depiction of the top-level view of the SBA systems architecture is provided in Figure 5.  The three primary components of the architecture are collaborative environments, a DoD/Industry Resource Repository (DIRR), and Distributed Product Descriptions (DPDs). Collaborative Environments:  From a systems perspective, this component represents an alignment of functional area experts and supporting sets of reusable, interoperable tools and resources with particular classes of applications.  For instance, product area collaborative environments would consist of personnel and hardware/software resources that typically address the design, development, and evaluation of products in that class (e.g., avionics, weapons, ground vehicles).  Collaborative environments are intended to be persistent, providing managers of new acquisition programs with a reusable framework of tools, resources, and Subject Matter Experts (SMEs) within the bounds of a given application domain.DoD/Industry Resource Repository (DIRR):  This component provides a web technology-based distributed repository of tools, information resources, and generic infrastructure components for use within and reuse across acquisition programs.  The DIRR can be considered to represent the union of the capabilities provided by all collaborative environments, providing a means for any individual collaborative environment to share local resources with other domains and for a collaborative environment to access and use external resources as required for new applications.  The gateway to the repository provides a directory structure, browsers, and tailored commercial search engines to enable users to quickly discover resources (each described by a common metadata format) of user interest. Intelligent user interfaces provide extensive on-line assistance for employing the repository and building complex search patterns.  Firewalls and encryption devices are also included within the repository (as required) to support access and distribution of classified data and to enforce access restrictions on proprietary materials.Distributed Product Descriptions (DPDs):  This component defines a distributed collection of product-centric information that is interconnected via web technology into what appears (to the user) to be a single, logically unified product representation.  DPDs are composed primarily of three types of information: product data, product models, and process models.  Product data specifies the characteristics of a product at any point in its development cycle, including requirements, program management data, cost data, engineering data, manufacturing data, and test data.  Product models are authoritative representations of a product’s behavior and/or performance.  Process models are used to define the business operations necessary to define, develop, manufacture, deploy, and dispose of the product throughout its life cycle.  DPDs may also contain other relevant product-related Figure 5: Top-Level View of SBA Systems Architecture.information, such as functional descriptions of product behavior and various categories of applicable metadata (e.g., VV&A status).DPDs provide a common reference for Integrated Product and Process Development (IPPD) when coupled with appropriate automated support tools and a valid workflow model.  That is, a DPD provides a common product view to all IPT participants at all times during the acquisition process, allowing simultaneous evaluation of the current product configuration from the perspective of each functional discipline.  Thus, product designers can measure the performance of a product at the same time that product manufacturers can evaluate the producibility of the product and logisticians can assess the supportability of the product (assuming proper configuration management and version control).  Collaborative Environment Reference Systems ArchitectureTools and resources within a given collaborative environment are always selected to maximize the overall effectiveness and efficiency by which applications are addressed within that domain.  However, such flexibility may also introduce the danger of stovepipes.  That is, it is entirely possible for any given collaborative environment to focus and align its internal structure and supporting resources so strongly on a particular class of applications that cross-domain tool reuse and data sharing are impeded.  For this reason, a reference systems architecture for all DoD collaborative environments is needed that globally defines the types of components that one can find in a collaborative environment, and (at a high level) how these components interrelate to one another.  The primary intent of this reference systems architecture is to highlight the required “pieceparts” and opportunities for interface standards associated with a collaborative environment while providing developers with a high degree of flexibility regarding specific implementation approaches. An illustration of the Collaborative Environment Reference Systems Architecture (CERSA) is presented in Figure 6.  The architecture is organized according to a layering strategy, where each layer represents a logical grouping of components that access and utilize components of underlying layers in order to  EMBED Word.Picture.8  Figure 6: Collaborative Environment Reference Systems Architecture.perform certain types of functions.  A short summary of the CERSA is provided below:User Environment:  This topmost layer of the architecture includes those system components that directly interface with the end users of the system.  This includes the user interface (which can be defined in terms of viewers and controllers) and a web browser to provide an external interface to the DIRR and other collaborative environments.Acquisition Support Tools:  This next layer of the architecture includes those systems components that directly access, manipulate, and generate product information for the purpose of gaining knowledge and insight about the product.  The classes of tools that support acquisition programs are identified in the architecture diagram, and range from simple desktop support (e.g., word processors, spreadsheets, etc.) to far more sophisticated tools to support program management, process management, and product design (e.g., CATIAR, AutoCAD, etc.).Two critically important elements of this architectural layer are the simulations that support product design and development, and the tools that support the development of High Level Architecture (HLA) federations.  The fundamental concept that underlies the use of simulations and associated tools in the SBA systems architecture is known as a persistent federation2.  Persistent federations can be loosely defined as a highly stable superset of simulations, federation products (FOM, FEPW, etc.), and knowledgeable people that are associated with a longstanding set of high-level requirements under an appropriate management structure.  As new applications are identified, federations are formed be reusing an appropriate subset of the simulation superset and defining appropriate modifications to relevant, reusable federation products.  The concept of a collaborative environment represents an important extension to the persistent federations concept, incorporating the full set of tools and information resources relevant to acquisition programs.In addition to the tool components themselves, there are two optional “sublayers” that may be defined at this level of the architecture.  First, in circumstances in which tools are designed and implemented as client programs that operate from a core set of common services, the architecture explicitly identifies these common services as a sublayer below the tool components.   These services would normally be accessed via an appropriate Application Program Interface (API) using an appropriate infrastructure component (e.g., Object Request Broker).  Second, there may be circumstances in which tightly integrated application (product development) and (software) development environments are desirable and/or needed in certain types of collaborative environments.  These types of environments interconnect selected components from multiple layers into a single unifying framework, and are recognized as an optional sublayer above the tool components. Resources:  The next layer of the architecture is composed of two partitions.  The first partition identifies the classes of information resources that are necessary to conduct an enterprise. This primarily includes reusable libraries of supporting documentation resources and reusable data resources for product design and development.  Note that this partition includes the reusable databases, planning documents, and federation resources necessary to support the concept of a persistent federation, and also contains the DPDs themselves. Infrastructure:  This second partition identifies the basic equipment (hardware and other facilities) and low-level software mechanisms that enable basic enterprise operations and the processing and exchange of product information within a collaborative environment.  This ranges from basic hardware components such as host computers and physical networks to advanced software services to support distributed simulation applications (e.g.,, HLA Runtime Infrastructure services) and distributed database management. SBA Technical ArchitectureThe SBA Technical Architecture specifies the standards and local conventions that govern the implementation of collaborative environments.  As discussed above, collaborative environments should be developed in alignment with the CERSA.  However, it is important to recognize that the architecture components specified in the CERSA simply enable information sharing and reuse, and that appropriate sets of supporting standards must be defined to achieve the interoperability, reuse, and generalized efficiency and cost savings goals identified for SBA.The evolving DoD Joint Technical Architecture (JTA) currently mandates the minimum set of standards and guidelines that are necessary to facilitate interoperability among systems that use information technology.  As such, as the DoD JTA continues to mature, it is expected that many of the standards specified in the JTA document will apply to the development of new components within collaborative environments.  For instance, the information processing section of the JTA specifies explicit standards for data management services (Structured Query Language), document interchange (Hypertext Markup Language), and graphics interchange (Graphics Interchange Format).  Other example mandates include the use of TCP/IP and UDP/IP for transport services, and the Defense Data Dictionary System (DDDS) for standard DoD terminology.  In addition to mandates that apply to all DoD information systems, the JTA also specifies standards that apply only to specific domains.  The standards defined in the Modeling and Simulation Annex to the JTA (such as the HLA standard) are expected to be especially important to SBA applications.  Data Interchange Formats (DIFs) represent an area in which the need for new standards will be paramount, since the existence of such standards significantly enhances tool reuse and interoperability within and across collaborative environment boundaries.  A DIF provides a common, intermediate format to facilitate the exchange of DPD information.  DIFs are derived from a common data model, which describes the semantics and syntax of shared data.  These intermediate formats can be readily converted to any number of related output formats without loss or distortion of content using semi-automated, rapidly configurable parsing software.  By defining an appropriate set of DIF standards, translators can be developed that allow different tool classes or implementations to consume relevant product information without manual translation.  Tools with various internal product data formats can also use translators to generate and exchange product information with other tools or repositories via these same DIF Figure 7: Distributed Product Descriptions (DPDs) and Data Interchange Formats (DIFs).standards.  This basic concept is illustrated in Figure 7.Although broad standards for product data templates and associated DIFs are strongly needed by the acquisition community, there is much prior work that can be leveraged.  For instance, STEP (Standard for the Exchange of Product Model Data), CDIF  (Common Data Interchange Format) and SEDRIS (Synthetic Environment Data Representation and Interchange Specification) all represent existing or emerging standards that may be pertinent to DPD development.  In general, it is critically important for suitable representatives of the acquisition community (particularly in the M&S area) to become active participants in the development of standards relevant to acquisition programs, and to ensure that these standards are appropriately reflected in the JTA.  Other possible opportunities for standards to support acquisition include process models (e.g., test, VV&A, security), HLA federation resources (e.g., Object Model Data Dictionary (OMDD)), and supporting databases (e.g., threat, environmental).ConclusionThis paper has provided an overview of the SBA Architecture as described in the SBA Roadmap.  The purpose of this paper was to describe key architectural constructs from an operational, systems, and technical perspective.  It is important to recognize that each of these views are intended as a starting point for initial collaborative environment and DPD development, and that the overall architectural structure will continue to evolve based on lessons learned from early implementations.  Although many existing COTS/GOTS products are immediately available to support collaborative environment development, these early implementations are also expected to highlight new requirements and key technical issues that must be addressed via a focused Science and Technology (S&T) program.  Appropriate resolution of these technical issues and the development of needed standards will be a prerequisite to broad promulgation of collaborative environments throughout the acquisition community.The Modeling and Simulation Operational Support Activity (MSOSA) currently maintains an SBA Special Interest Area (SIG) on its website ( HYPERLINK http://www.msosa.mil.inter.net/sba/ http://www.msosa.mil.inter.net/sba/), which provides the most current information regarding SBA activities.  Readers are invited to visit this website to access the SBA Roadmap and other documents relevant to the specification and continued development of the SBA architecture.REFERENCES[1]	A Roadmap for Simulation Based Acquisition – Report of the Joint Simulation Based Acquisition Task Force, Acquisition Council Draft, December 1998.[2]	Dahmann J., Lutz R., “Persistent Federations”, Simulation Interoperability Workshop (SIW), March 1998.[3]	Frost R., Thomen D., “Simulation Based Acquisition; An Ongoing Look”, Simulation Interoperability Workshop (SIW), September 1998.Author BiographyROBERT LUTZ is a senior scientist at the Johns Hopkins University Applied Physics Laboratory.  He has over 18 years experience in simulation design and development.  He is currently a member of the HLA core technical support team, is the technical editor for IEEE Standard P1516.2 (Object Model Template), and supported the development of the systems architecture for the SBA Roadmap.  He also currently serves as the chair of the SISO Federation Development Process Forum.  Mr. Lutz holds a Master of Science Degree in Operations Research from the State University of New York at Stony Brook.JACK KEANE is a senior scientist at the Johns Hopkins University Applied Physics Laboratory.  He has ten years experience in VV&A of M&S for military weapons systems.  He currently serves as chair of the MORS Power Projection, Planning and Execution Working Group.  Mr. Keane holds a Master of Science Degree in Operations Research from the Naval Postgraduate School.