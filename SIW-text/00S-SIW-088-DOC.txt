Conceptual Modeling Framework for Complex Synthetic Systems – an Example from F-15C Distributed Mission Training Robert M. ChapmanIIT Research Institute, AB Technologies GroupAir Combat CommandDistributed Mission Training Team205 Dodd Blvd, Suite 101Langley Air Force Base, VA 23665-2789757-764-6965bob.chapman@langley.af.milKeywordsDistributed Mission Training, HLA, Conceptual Models, Simulators, VV&AABSTRACT: Simulations are not replications of real world systems but a restricted representation of selected aspects of the real system.  Creating a simulation requires an understanding of the real system’s parameters and interactions.  These factors are then limited and approximated, creating a distillation of the original system that contains the features and behaviors of interest.  Although not rigorously defined, the notion of “conceptual modeling” is generally accepted as the process that accomplishes this initial translation of reality.  Conceptual models describe how a real system, including inputs, outputs, and external environments, is abstractly represented.  For simple systems and simulations, the process of translating a real system into a digital representation may be apparent.  The framework for conceptual modeling of simple systems is primarily oriented to abstracting the real world.  With complex systems and simulations, the framework for conceptual modeling relies not only on abstracting the real world system but can also be heavily influenced by the expected use of the simulation.  Recently, a third type of simulation-based application, the complex synthetic system, has received a significant amount of interest.  A complex synthetic system is composed of several complex simulations and virtual devices, often operating in tightly integrated networks.  An example of a complex synthetic system is the F-15C Mission Training Center, which is composed of four high fidelity cockpits with 360 degree visual displays linked together with several simulations to produce a common synthetic battlespace.  A conceptual modeling framework for complex synthetic systems is based not only on representing the real world domain and expected use but is also dependent on how the user is immersed in the application.  This paper describes a conceptual modeling framework for complex synthetic systems by extending previous efforts in developing conceptual modeling frameworks for simple and complex simulations.  In particular, the conceptual modeling framework presented in this paper relies on Defense Modeling and Simulation Office-sponsored efforts, including papers previously developed by members of the Conceptual Modeling Tiger Team.  1. Introduction1.1 PurposeThe purpose of this paper is to extend the current conceptual modeling framework efforts being accomplished for simulation development programs to a framework useful for complex synthetic systems, such as F-15C Mission Training Centers (MTCs).  These MTCs are the first components of the Air Force’s Distributed Mission Training (DMT) program, a readiness effort that will become the primary team training and rehearsal tool of combat squadrons in the next century.  When mature, the DMT wide area network will link together advanced simulators, simulations, and selected real-world command and control systems to support readiness and rehearsal events in a distributed synthetic battlefield.  DMT will be established incrementally with team training as the initial focus.  In 2000 the network will include two F15C and one AWACS site.  By 2003, additional F15C sites will be added, as well as the first F16 site.  The DMT network will increase in capability and size as other fighter, bomber, and intelligence, surveillance and reconnaissance (ISR) sites join the network. Establishing a conceptual modeling framework for Distributed Mission Training (DMT) is necessary because there is not an existing framework suitable for describing the essential attributes of these systems in relation to their operational context, contemporary military operations, and the battlespace in which these operations are conducted.  DMT was initially established as a continuation of an experimentation and technology demonstration program.  It proved to be extremely valuable, demonstrating uses unforeseen in its founding vision.  The specific utility patterns of DMT emerged only after extended exposure of the system to its users in an operational context.  Future expansion of DMT will involve activities that require a more structured approach than experimentation and technology exploration.  A conceptual modeling framework can help provide structure to the future expansion of DMT.  The framework can be especially useful in areas such as:Articulating operational requirements for DMT components.Developing DMT capabilities.Verification, validation and accreditation (VV&A) of DMT components.Building High Level Architecture federations for DMT.Pursuing a coherent DMT investment strategy.1.2. Organization of the PaperThe theme of this paper is that current efforts in the defense modeling and simulation (M&S) community, combined with model engineering theory found in the M&S academic community, can be used to create a conceptual modeling framework for DMT.  Furthermore, the creation of such a framework can be established so that it can be applied to complex synthetic systems in general.  This theme is developed through the following sequence of topics:Conceptual modeling is the initial activity in model engineering.Conceptual modeling is both reflective and projective - linked back to reality and forward to its digital implementation and intended use.Conceptual modeling frameworks of simple systems/simulations emphasize the referent reality domain. Conceptual modeling frameworks of complex systems/simulations emphasize the referent reality domain as well as the operational user’s requirements and expected use.Conceptual modeling frameworks for complex synthetic systems can use modified versions of development and documentation techniques established for complex systems.2. Modeling and Simulation “Modeling” and “simulation” are words that have many meanings and uses.  Broadly speaking, a model is a “a physical, mathematical, or otherwise logical abstract representation of a system, entity, phenomenon, or process with its own assumptions, limitations and approximations [1].” Although common vernacular tends to use “model” and “simulation” interchangeably and sometimes together, simulation has a meaning distinct from models.  Banks [2] describes a simulation as a dynamic, digital implementation of a model over time that generates an “artificial history” of the modeled systems.  Figure 1 depicts the relationship between real world systems, models, and simulations.2.1 Simple ModelingFigure 1 also emphasizes that, ideally, modeling is an activity that is distinct from simulation.  Modeling also precedes simulation and is the beginning of a structured simulation effort.  This can be further interpreted as the basis for “model engineering.”  Fishwick [3] describes model engineering not in terms of the simulation but in terms of the reality of the original system.  “The topic of model engineering (or how to design, create and revise models over time) is of central importance to system study, just as software engineering is a key aspect of computer science.”  For this reason, one premise of model engineering is that modeling should be reflective. Reflective – Modeling should be reflective, linked “back” to the real-world domain being modeled. Another way to describe modeling is to view it from the perspective of its implementation.  To create a simulation, one must first distill the objects and relationships of some portion of the real world, a domain, into a conceptual model.  Modeling, therefore, should form the basis for the software engineering of the simulation.  At the same time, most M&S practitioners [4] describe modeling as being independent of the implementation method (simulation).  For this reason, the modeling activity in Figure 1 does not overlap the simulation activity.  The same practitioners, however, recognize that modeling is not done without considering the implementation and use of the application being developed.  If implementation were not considered, then there would be little incentive or basis for constraining the abstraction of the real world system.  Therefore, in addition to being reflective, modeling must be projective.Projective – Modeling should be projective, linked forward to its intended implementation.The relationship depicted in Figure 1 is also consistent with the modeling and simulation activities and applications as described in current textbooks.  These texts, and other references on modeling and simulation, normally assume that the simulation developer accomplishes the modeling.  Furthermore, it is also assumed the simulation developer is the same person (or team) that uses the simulation.  An implicit assumption is that the modeler understands the real world system.  (Alternatively, the real world system is easily understood without significant intervention of a domain expert.)  2.2 Complex ModelingAs the modeling and simulation profession has matured and computing power improved, there has been a desire to apply simulation to increasingly complicated domain problems using increasingly complex simulations.  In such cases, a number of modeling challenges emerge because of one or more of following:The modeler is not the simulation developer (code writer).The modeler is not a domain expert.The domain being modeled is complex.The simulation being developed is complex.The simulation developer is not the user.The user is not a domain expert.The response to these challenges has been to develop a modeling framework to mitigate the issues faced in large-scale modeling and simulation efforts.  The basis for developing these frameworks is to refine or expand the modeling process to include more detail about how the referent domain is abstracted and how the model will be implemented - the reflective and projective attributes previously described.  2.3 Conceptual ModelingConceptual modeling is the term most frequently assigned to the initial model engineering activity.  Conceptual models provide the first abstraction of the real world domain and are descriptions of system objects and their relationships.  Conceptual models, which are implementation independent, can be used to create schematic models.  Schematic models, in contrast, are implementation dependent because they become the foundation for writing simulation code.  Because schematic models lead quickly to code, Figure 2 depicts a more realistic relationship between modeling and simulation than was depicted in Figure 1.  (Because this focus of this is conceptual modeling, there will be no further discussion of schematic modeling.)Conceptual models do not depend on the expected implementation [4]. They describe objects and relationships, including internal representations, logic and algorithms and explicitly recognize assumptions and limitations [1].  Conceptual models are viewed in various ways.  Most modeling and simulation developers describe conceptual models in relation to the purpose of a simulation.  Modeling and simulation analysts emphasize problem formulation.  Many have listed the benefits or necessity of a conceptual model.  Pace [5], Law and Kelton [6], as well as Norman and Banks [7], emphasize the conceptual model as the foundation for VV&A.  Mussleman [8] emphasizes the utility of using conceptual models to direct, manage, and “take risks” in a modeling and simulation-based analytical effort.  According to Prikster [9] and also Pace [5], conceptual models can be used to determine the necessary detail or fidelity of a simulation.  Various authors [10,11] refer to conceptual modeling as the bridging function for the domain “owner” to provide an authoritative source for object description to the simulation developer.  McGurie [12] maintains that conceptual models are necessary to help scope the data collection effort and provide formats for input and output data. In summary, these various observations on conceptual models can be generalized as being applicable to three aspects of model engineering.Architecture – forms the basis for coding a simulation system, collecting initial supporting data, prescribing data/object formats and relationships, etc.Acceptance – determines the fidelity needed, forms basis for VV&A, and increases the client’s confidence in the simulation application.Collaboration – provides a common nexus for the domain expert, model engineer, software developer, and user to participate in the model engineering process.3. Conceptual Model Development and DocumentationRecently, there has been an effort by many, including the Defense Modeling and Simulation Office (DMSO), to explain, structure, and conduct conceptual modeling.  One notable effort is the Conceptual Model of the Mission Space (CMMS) which is intended to be a source of data-oriented descriptions of military objects and relationships that can be used by the entire M&S community.  Another effort closely related to conceptual modeling is the DMSO-sponsored effort to develop recommended practices for VV&A.  The need for rigorous VV&A has in turn fostered interest in conceptual modeling, because the conceptual model is the foundation for measuring the degree to which a simulation emulates reality.  Pace [5] identifies four steps in conceptual modeling development.  These steps are listed below and depicted in Figure 4.  Although the steps are presented as a sequence, the alternation between reflective and projective perspectives makes it clear that conceptual modeling is a dynamic, iterative effort.Step 1– collect authoritative data on the domain. Step 2 – identify domain entities and processes that must be represented to satisfy the simulation’s intended application.Step 3 – develop simulation elements that will represent the domain entities and processes identified in step 2.Step 4– define relationships among simulation elements so that, to the degree needed, they adequately represent behaviors found in the original domain and meet the objectives of the intended application.3.1 Conceptual Model DocumentationIn addition to outlining a conceptual model development process, Pace [5] recommends that more effort be devoted to documenting conceptual models.  He identifies four types of frameworks that can be used to document conceptual models.  The “Ad Hoc” is a format with no particular end use or consideration of wider application.  “Design accommodation” is a descriptive format, which is created to support simulation design.  One class of formats follows the “CMMS paradigm,” which emphasizes database management system structures such as entities, actions, tasks, and interactions.  The fourth and preferred format is one that is constructed similar to a “scientific paper.”  It provides explicit identification of assumptions, algorithms, constraints, and limitations of the conceptual model. Of the four, the scientific paper method is the one most useful for M&S activities that extend beyond simulation development, such as VV&A, simulation modification, HLA federation object model (FOM) development, etc.  Pace also proposes that a conceptual modeling documentation using the scientific paper format be organized into nine parts.  Of particular interest is part six, which identifies the states, tasks, actions, behaviors, relationships and interactions, events, parameters, and factors for entities and processes.  He suggests that this information be presented in several complementary orthogonal views, such as functional, data, and behavioral.  This paper will return to the subject of orthogonal views following a short discussion of DMT and complex synthetic systems. 4. Distributed Mission TrainingCurrent resources and training methods limit the Air Force’s ability to prepare warfighters for the complexity of contemporary military operations.  DMT will provide warfighters with team training and mission rehearsal capabilities in a common synthetic battlespace.  The DMT synthetic battlespace will be formed by networking virtual (high fidelity flight or mission simulators), live (ground radar displays), and constructive (computer generated forces in wargaming simulations) components.  The DMT network will be created incrementally, initially focusing on team training.  F-15C and AWACS Missions Training Centers (MTCs) will be the first DMT constituents.  MTCs will house the unit’s simulators or mission training system, briefing and debriefing systems, threat stations and simulations, and the infrastructure needed for local and wide area networking [13]. Figure 5 depicts the F-15C MTC.  The central feature of the MTC is four high-fidelity cockpits with full 360( visual systems.  Other major components include 4 instructor operator stations, 4 medium-fidelity threat stations, 2 briefing/debriefing stations, a separate mission observation center, and a weapons director station.  A brief description of these components follows.High Fidelity F-15C Cockpits – The cockpits are high fidelity representations of the actual aircraft cockpit.  Performance of the aircraft, its sensors, and weapons are also simulated to a high fidelity.  A 360-degree, high-resolution visual display can support dynamic visual air combat.  Instructor Operating Stations (IOS) – The IOS provides the ability to monitor the simulations, all displays, and instrument indications of each cockpit independently or together. It will also include the ability to simultaneously operate local and long haul network devices and monitor training activity.Threat Server and Stations – The threat server will house simulations that provide airborne and surface threats, both preprogrammed and interactive.  Threat stations are medium fidelity cockpits that will allow instructors to fly adversary aircraft in a local or distributed training event. Brief/Debrief/Mission Observation Center (B/DB/MOC) – The brief/debrief capability will be able to display a “God’s eye” view of the battlespace or the view from selected cockpits.  The system will include the ability to observe sensor outputs, including radar or visual displays.  Larger audiences may view training events in the MOC, a separate observation center that may be run during ongoing missions. AWACS/GCI Station – A weapons director station will be provided so that locally based air weapons officers can control flights.  It has the capability to emulate either GCI (Ground Control Intercept) or AWACS displays. Each MTC will be capable of conducting stand-alone events or participating in distributed events with other MTCs.  Team training will include both stand-alone and distributed events.  Mission rehearsal will normally be distributed.  The DMT network will accommodate multiple, simultaneous stand-alone and distributed events.  As the DMT network expands, many MTCs can be linked together to large-scale, distributed events such as expeditionary force training or rehearsal.4.1 Complex Synthetic SystemsThe MTC described above is an example of a complex synthetic system.   Although it can be considered a unique application of M&S technology, the existence of such systems is likely to increase in the future.  One can begin to characterize a complex synthetic system by extracting the significant attributes from the preceding example.  Based on current experiences with the F15C MTC, one can compare them to more traditional simulation applications.  A complex synthetic system is composed of numerous models, simulations and virtual elements, not a single application or simple federation of similar types of federates.  In addition, the application’s operational and technical architecture is highly variable from one event to another (multiple federations with frequent modifications).  Most other types of simulations or federations are relatively stable once constructed.  But the most distinguishing characteristic of complex synthetic systems is that the user is immersed in the application.  This is different than most simulation-based applications for warfighters, which are designed to isolate the user from the application.  The emphasis on providing an immersive experience extends to both representation and presentation.Immersive representation – Realistic or physics-based simulation of critical objects and interactions.Immersive presentations – High-fidelity visual systems, sound, and in some instances, movement. Because of the above characteristics, the conceptual model for a complex synthetic system is similar but slightly different than that required for a strictly simulation-based application.  Figure 6 depicts the modeling process for a complex synthetic system.4.2 DMT Conceptual Development and Documentation DMT-A Mission Essential CapabilitiesAir Force TaskPrimary SecondaryAir and Space SuperiorityPerform Offensive Counterair (1.1.1.1)Perform Defensive Counterair (1.1.1.2)Precision EngagementLethal Precision Engagement (2.1.1)Combat Search and Rescue (2.3.1)Information SuperioritySurveillance (3.1.1.1.2)Reconnaissance (3.1.1.13)Electronic Warfare (3.1.1.2.1.1.2)Physical Attack (3.1.1.2.1.1.5)Global AttackPerform Strategic Attack (4.1)Interdict of Enemy Land Power (4.2.1)Conduct Close Air Support (4.2.1.2)Agile Combat SupportGlobal MobilityTrain AEF Forces (5.4.2)Command and ControlExecute Military Operations (7.4)As indicated in Figure 6, it is impractical to directly develop conceptual models for DMT because there is not a direct link between the domain and the specific DMT components.  An intermediate or higher level conceptual model must be developed before conceptual models of the individual systems can be created.  The basis for this high-level conceptual model in DMT is mission essential capability. DMT mission essential capabilities are based on tasks found in the Air Force Task List [14].  They are divided into primary and secondary capabilities.  Primary mission essential capabilities are those which describe the desired functionality of a specific DMT use case.  Secondary mission essential capabilities are those which result from attaining the primary capability.  For example, attacking an adversary’s air defense network is an activity conducted under the primary capability of Offensive Counterair (OCA).  In pursuing this task, some elements of the adversary’s command and control system will be attacked.  Physical attack of command and control systems is also an activity done under the task of Information Superiority.  As a result, although a DMT system may be designed to provide the mission essential capability of OCA, it will have a secondary capability of Information Superiority because of the linkage between the tasks.  The accompanying table lists the seven core Air Force tasks and those sub-tasks supported by the aircrew DMT system.  As previously stated, one of the primary requirements of conceptual models is the need to address the level of fidelity required in the intended use of the system.  For DMT, fidelity is related to the two major intended uses of the system, team training and mission rehearsal.  These two uses also provide a convenient way to describe fidelity requirements with respect to the quality and performance of a DMT system.  In general, the technical requirements of a system accredited for rehearsal are higher than the requirements established for a training accreditation.  “Team Training” and “Mission Rehearsal,” therefore, are also utility measures.  Differentiation between the two is defined below. Source – For team training, data and scenarios are derived from combat readiness training requirements.  For mission rehearsal, data is derived from real-world conditions, such as the adversary’s air order of battle. Currency – For team training, representation of military capabilities and the natural environment should be up to date (within several months).  For mission rehearsal, representations should mimic existing conditions (several hours/days old.)  Specificity – Team training requires representations that accurately approximate real world interactions (deterministic and stochastic modeling).  Mission rehearsal requires physics-based modeling of mission essential objects, such as air-to-air missiles.Using mission essential capabilities as a guide, the conceptual model development process previously described can be modified and applied.  The process is depicted in Figure 7.Step 1– Collect authoritative domain data on the task environment of the specific mission essential capability. Step 2 – Identify the mission essential objects and interactions that must be represented to satisfy team training and mission rehearsal.Step 3 – Develop system (virtual, constructive, or live) elements that will be represent the mission essential objects and interactions identified in step 2.Step 4– Define relationships among system elements so that, to the degree needed, they provide an immersive representation of the mission essential capability and support both team training and mission rehearsal.Similarly, the format for documenting the conceptual model can follow the scientific paper format previously outlined.  In particular, part six will identify the mission essential objects and interactions of each mission essential capability and interaction.  For each mission essential capability, several orthogonal views will be provided.  Most views will have a common axis, the mission essential objects and interactions.  Other axes can include system components, data source, specificity, currency, etc. 5. Concluding RemarksConceptual modeling is the initial step in a model engineering effort.  In addition, conceptual modeling forms the basis for subsequent activities, some of which, such as HLA federation development, may be conducted years after the model has been implemented in a digital simulation.  Because conceptual models should serve as the basis for developing a simulation and later provide critical information about the simulation, the development and documentation of conceptual models should be rigorous and organized.  The rapid and continuing improvements in the capability of digital technologies to support immersive training and rehearsal systems for military applications has produced complex synthetic systems composed of numerous simulator and simulations systems.  The Mission Training Centers established for the Air Force’s Distributed Mission Training program are examples of complex synthetic systems.  While complex synthetic systems are not simulations, the conceptual modeling development and documentation techniques developed for simulations can be applied if appropriately modified.  The basis for the modifications is the mission essential capabilities, which are derived from the Air Force Task List.  The F-15C Mission Training Centers are already in existence but their conceptual models are not. Obviously it is too late to develop a conceptual model for this system for the purpose of designing and creating the F15C MTC and its constituent components.  Nevertheless, such a model should be developed for the following reasons.  If the F15C MTC is successful, MTCs for other weapons systems will be established.  An F15C MTC conceptual model would be of great value as a template.Eventually the F15C MTCs (and others) will be linked together in an HLA federation(s).  MTC conceptual models would facilitate the federation development process by identifying the mission essential objects and interactions.A conceptual model that describes the fidelity of the systems would be invaluable in supporting training effectiveness evaluations.  These evaluations serve as the basis for accrediting the MTCs for team training and mission rehearsal events. This paper outlines the framework for creating a conceptual model for DMT systems.  The next step is to create and document an example.  Several DMT implementation and technology strategy efforts are currently being pursued.  It is recommended that these efforts shoulder the responsibility of establishing prototype conceptual models for DMT Mission Training Centers.5. References[1]	David C. Gross, “Report from the Fidelity Implementation Study Group,” 98 Spring Simulation Interoperability Workshop Papers, CD-ROM.[2]	Jerry Banks, “Principles of Simulation,” Handbook of Simulation, John Wiley & Sons, New York, 1998.[3]	Paul A. Fishwick, Simulation Model Design and Execution, Prentice-Hall, Englewood Cliffs, NJ,  1995.[4]	Dale K. Pace, “Conceptual Model descriptions,” 99 Spring Simulation Interoperability Workshop Papers, CD-ROM.[5]	Dale K. Pace, “Development and Documentation of a Simulation Conceptual Model,” 99 Fall Simulation Interoperability Workshop Papers, CD-ROM.[6]	A.M. Law and W.D. Kelton, Simulation, Modeling and Analysis, 3rd Edition, McGraw-Hill, 1999.[7]	Van Norman and Jerry Banks, “Managing the Simulation Project.” Handbook of Simulation, John Wiley & Sons, New York, 1998.[8]	Kenneth J. Musselman, “Guidelines for Success,” Handbook of Simulation, John Wiley & Sons, New York, 1998.[9]	A. Alan B. Prikster, “Principles of Simulation Modeling,” Handbook of Simulation, John Wiley & Sons, New York, 1998.[10]	Dale K. Pace, “Use of Subject Matter Experts (SMEs) in Simulation Evaluation,” 99 Fall Simulation Interoperability Workshop Papers, CD-ROM.[11]	Manfred Rosa, Fidelity Requirements Specification: A Process Oriented View, 99 Fall Simulation Interoperability Papers, CD-ROM.[12]	Frank McGuire, “Simulation of Healthcare,” Handbook of Simulation, John Wiley & Sons, New York, 1998.[13]	Air Combat Command, “Concept of Operations for Distributed Mission Training,” October 1998.[14]	US Air Force, “Air Force Task List,” Air Force Doctrine Document 1-1, August 1998.Author BiographiesROBERT M. CHAPMAN is the Senior Program Analyst for the Air Combat Command Distributed Mission Training Program.  He has is a retired fighter pilot currently with the AB Technologies Group of the Illinois Institute of Technology Research Institute (IITRI).  He holds a BS from the Air Force Academy and a MA from the University of Michigan, Ann Arbor, and is now pursuing a PhD in Modeling and Simulation at Old Dominion University. The Fidelity ISG Glossary has nearly 100 entries containing the word “model” or “simulation” (beginning with “activity model” and ending with “warfare simulation.”)  There is even an entry for “simulation model”:  “A digital or physical realization of a conceptual model in a specific programming language based on some software design methodology; software model, e.g., the layout of instrument panel in a mock-up or motion platform.” The term “schematic modeling” is not a commonly used term like “conceptual modeling.”  It is used here to describe the broad set of processes and tools that are employed to develop software architectures or support other implementation-oriented simulation development activities.  The Fidelity ISG Glossary [1] has several dozen entries of modeling terms that might be considered as examples of schematic models.  “Synthetic” has two closely related meanings in the military modeling and simulation community.  The first meaning is the notion that a simulation can provide a synthetic or artificial representation of a natural environment.  The second meaning is one of synthesis, or bringing together; for example, combining constructive, virtual or live entities to provide a synthetic battlefield.  In this paper, the second meaning will be used.  Subtasks numbers are found in AFDD 1-1 Air Force Task List.  Note that not all core tasks or sub tasks within a core task are covered by aircrew DMT.  For example, Defensive Counterspace, a subset of the core Air and Space Superiority task, is not supported in DMT-A.Figure 1  EMBED Word.Picture.8    EMBED Word.Picture.8   EMBED PowerPoint.Slide.8  Figure 5 EMBED Word.Picture.8  