Dynamic Terrain and Objects in the STOW 97 Advanced Concept Technology Demonstration using the High Level ArchitectureDale D. Miller, Ph.D., Steve Adelson, Ph.D., Annette Janett, John EskewLockheed Martin Information Systems - Advanced Simulation Center3605-132nd Ave. SE, #400 - Bellevue, WA  98006  USA Steve Haes, Barron GibsonBDM International7701 Telegraph Rd., Cude Bldg. 2592 - Alexandria, VA  22315Jack HuntleyUS Army Topographic Engineering Center7701 Telegraph Rd., Cude Bldg. 2592 - Alexandria, VA  22315Colin Rayment, Brenda Stroud, Tony UsherUK Defense Evaluation and Research Agency DERA Fort Halstead, Building Q27/4, Sevenoaks, Kent TN14 7BP, UKSteve KasputisTechmatics, Inc.2231 Crystal Drive, #1000 - Arlington, VA  22202ABSTRACT:  Dynamic Terrain and Objects (DTO) capabilities were developed as part of the Synthetic Theater of War (STOW) Synthetic Environments program supporting an Advanced Concept Technology Demonstration (ACTD). These include the ability to place and breach engineering obstacles, create vehicle and infantry fighting positions, change states of buildings, bridges and other structures from munition detonations, and tailor the synthetic environment at exercise initialization through placement or modification of objects and engineering works.The STOW ACTD and a series of Full System Tests (FST) leading up to it generated new requirements for DTO. These included a reliability mechanism for the DT Scribe (which is responsible for arbitration and serialization of changes), design of appropriate RTI routing spaces, run-time repair of cratered runways, communication of large numbers of environmental changes to late joiners without overwhelming the network, and support for thousands of changes to the synthetic environment during exercise initialization.This paper describes the design and implementation of solutions to these challenges and discusses the trials and successes encountered during the FSTs and ACTD. Following the ACTD, an independent assessment of the DTO technology was conducted by the STOW program and is summarized in the final section.IntroductionSynthetic Theater of War (STOW) is the major application of the Defense Advanced Research Projects Agency (DARPA) initiative in Advanced Distributed Simulation (ADS). To support ADS applications from individual combatants to Joint Task Force levels, STOW developed and demonstrated technologies enabling the seamless integration of virtual and constructive simulations from geographically distributed locations into a common synthetic battlespace.Following the highly successful STOW-Europe (STOW-E) program demonstrated in 1994, STOW began to develop additional capabilities and increase the fidelity and realism of the synthetic battlespace. A series of four Sub-System Integration and Test (SSIT) events lead up to the first major milestone in October 1995 called Engineering Demonstration (ED) #1. For ED #1, engineering obstacles such as fighting positions and anti-tank ditches needed to be pre-compiled into the terrain databases, thus making scenarios very inflexible. Following a successful ED #1, a series of Combined Test (CT) events were held in preparation for ED #2, scheduled for January 1997. The ED #2 event was changed, however, to shift the focus from demonstration to integration. By this time, DTO had runtime capabilities for placing fighting positions, anti-tank ditches, craters, dragons teeth, and other obstacles. The STOW Program focused on an Advanced Concept Technology Demonstration (ACTD) termed STOW97, sponsored by DARPA with the United States Atlantic Command (USACOM). A series of four Full System Tests (FST) led up to the actual ACTD event. DTO had further extended its capabilities to include runtime emplacement of cultural features and automated runway repair as well as compliance with the High Level Architecture (HLA) and addition of a reliability mechanism. The successful demonstration of STOW97 technologies in October 1997 within the Unified Endeavor 98-1 Exercise provided an enhanced operational capability to USACOM's Joint Training, Analysis and Simulation Center (JTASC). Additional exercises will utilize the STOW technologies in 1998 and 1999.DTO Architecture OverviewThe DTO architecture has the following essential components.  (See reference [1] for a more detailed description of the architecture.)Full distribution of the capability to describe changes, called Environmental Change Notices (ECNs), to the world. The JointSAF Obstacle Editor, crewed simulators, and DT Simulator are examples of applications creating ECNs. ECN generation requires that all federates share the same geometry of the world or that the DT repolygonization service be used.Dynamic Terrain Simulators (DT Sim) may serve several purposes. For example, one may provide modeling of global weather effects on the terrain, another may determine collateral damage to structures, while a third DT Simulator may simulate DT events such as the repair of runway craters.A Dynamic Terrain Scribe (DT Scribe) orders, records, and distributes all changes to all appropriate DT Agents, and provides for reliability mechanisms and logging of DT events.Dynamic Terrain Agents (DT Agents) at each interested simulator convert the ECNs from the DT Scribe to the local run-time data base format.Dynamic Terrain Repolygonization (DT Repoly) service converts high-level parameterized ECNs into ECNs containing specific data for all potential DT Agents (i.e., ECNs that contain complete geometry and attribution for all data bases being modified by DT Agents).The Dynamic Terrain Data Base (DTDB) provides an authoritative representation of the synthetic environment for terrain changes. The DTDB is used by the DT Repoly service and the DT Sim to make DT changes.The distributed DT Architecture incorporating the essential components is shown in  REF _Ref406566609 \* MERGEFORMAT Figure 1. All DT changes are created by peers. Although changes refer to different types of events, cover different geographical extents, and may be created and updated at different rates, no change directly takes priority over another, either for distribution over the network or for inclusion in the run-time data base of any module. Changes are accepted or rejected by the scribe using a sequencing mechanism which will accept the first change received and assign a world state sequence number for the change. As long as a change contains the proper sequence number indicating it is derived from the current state of the world, it will be accepted, and the sequence number will be incremented.Figure  SEQ Figure \* ARABIC 1. DTO Architectural ComponentsFull System TestsFollowing the cancellation of STOW Engineering Demonstration #2, a series of Full System Tests (FST) involving all service SAFs on a wide area network were planned to support debug, test and integration prior to the ACTD, see Table 1. DTO was one of many new technologies from the Synthetic Environments and Synthetic Forces components of STOW which were integrated and tested during this series of FSTs.Table 1. Full System Test and ACTD ScheduleFST 1June 2 - 6, 1997FST 2July 7 - 11, 1997FST 3August 11 - 15, 1997FST 4September 15 - 20, 1997Dress RehearsalOctober 22 - 24, 1997ACTDOctober 29 - 31, 1997The STOW system is highly complex, and the problems encountered during the FSTs were often not repeatable, were difficult to isolate, and were sometimes caused by operator error. On more than one occasion, the same problem was diagnosed and fixed multiple times because the original fix had not been correctly propagated to the official software release. While initial plans called for one software release per FST, during the later tests multiple releases were made because of catastrophic problems with the initial FST releases.DTO utilization in the STOW ACTD198 multi-state objects of 16 different types were placed during exercise initialization90 U-shaped earthen berms were placed around SAM sites and other locations requiring cover and concealment during exercise initialization75 survivability positions were created by simulated engineer vehicles during the exercise50 multi-state object targets were destroyed20 runway craters were created on two airfields which were automatically repaired after a realistic delaymultiple minefields were breached with bladed breaching vehicles and MICLICsDTO certainly endured maturation pains during this process. The latent requirement for using DTO for pre-exercise environment tailoring stressed several DT applications. The Scribe reliability mechanism required substantial tuning to accommodate unforeseen problems in the WAN environment with nearly 500 computers. On one occasion, DTO was blamed for creating 45% of all network traffic; as it turned out, a service SAF developer inadvertently transposed a less-than sign to a greater-than sign while making an authorized source code change over the telephone, inadvertently causing continuous requests for new subscriber updates. During FST 4, DTO problems nearly caused DT capabilities to be eliminated from the ACTD. In the end, however, DTO contributed to the success of the ACTD, with the use of multi-state objects, protective berms, survivability positions, runway craters, and minefield breaching.Prior to FST 1, it was known that anti-tank ditches and dragon’s teeth could crash the DT Simulator. Pentium-based machines were unable to initiate DTO changes, caused by bugs in the little endian byte swapping code. However, basic interconnectivity issues and running simple distributed scenarios dominated this first FST. Very little DTO testing occurred.For FST 2, elaborate plans were made to test interoperability of pre-exercise multi-state object (MSO) placement between US and UK sites. At Synthetic Environments (SE) Central at JTASC, buildings were placed in the data base near GCS cell boundaries, but these buildings were not instantiated in the data bases at the UK sites. This problem is believed to have been due to unexpected WAN problems which had not been previously observed. There were not sufficient clues for the SE team to diagnose the problem, and it was not subsequently repeatable in a laboratory setting.For FST 3, DTO capabilities were more fully exercised, and several repeatable problems were observed and corrected. Pentium problems continued -- tanks floated in the air above their intended survivability positions. This was due to another byte swapping error, and the Pentium DT agents were not updating their terrain geometry. Hence the vehicles were planted on the original terrain surface, which, on the stealth, gave the illusion of floating above the modified terrain surface. This gave a false sense of security to the Response Cell operators, which believed their simulated vehicles had the cover afforded by the survivability position as shown on the JointSAF Plan View Display (PVD). Additional cross-platform testing should have been performed prior to FST 3.During exercise initialization, a Scribe backup file of over 500 KB was used, containing many MSO instances and survivability positions. Most federates would receive only a partial set of changes and were subsequently deaf to all future DTO changes. Debugging showed that when the Scribe announced itself with its first heartbeat, all federates switched to the new subscriber routing space to receive the history of ECNs. The Scribe would blast the ECN log to the new subscriber space, overrunning the input buffers of most of the federates. The federates, having processed their input queues, awaited additional ECNs to bring them up-to-date. This became their stable state, and since they had no way to determine when ECNs should be expected, waited infinitely for the remaining ECN history. This was initially corrected by adding code to return the federate to the validated ECN space after 30 seconds passed without receiving addition new subscriber ECNs. In the validated ECN space, the usual NACK mechanism ensured the application would receive the complete ECN history. Subsequently, this fix was enhanced by two others. First, rather than service each new subscriber request individually, upon receipt of a request the Scribe schedules the service for a programmable number of milliseconds in the future. The subsequent playback of all ECNs in the new subscriber space will then service all federates who had made a new subscriber request during the ensuing time interval. (This is especially important at exercise initialization from a Scribe backup file, when all federates make new subscriber requests.) Second, new subscriber ECNs from the Scribe to the new subscriber(s) are now regulated with a programmable interval between bursts. This prevents overflow of the new subscriber input buffers.During FST 3, one participant complained that during the night, both solar and lunar illumination were set to zero, rendering the stealth viewport completely black. However, the night in question was one of a new moon, and the stealth was displaying a physically correct image.With the initial fix, a new software release, FST 3C, was made. However, other essential previously made DTO bug fixes were inadvertently omitted from this release. This had the unfortunate effect of crashing all federates whenever DTO changes were made during exercise initialization. DTO testing was ceased for the remainder of FST 3.Testing from JTASC continued on the WAN between FST 3 and FST 4. Software configuration management problems were resolved, and numerous DTO bug fixes were made. By August 20, all major DTO bugs observed in FST 3 were believed to have been fixed. Exercise initialization from the Scribe was working properly, and all applications could be restarted and were properly updated by the Scribe. Expectations were set for a successful FST 4.Surprisingly, the first two days of FST 4 were disastrous. DTO activity consistently crashed all federates running on Pentium-based machines at the Applied Research Laboratory, University of Texas at Austin. A memory allocation error was found and fixed. After consideration that DTO would be dropped from the ACTD, the software fixes together with a manually intensive failure recovery mechanism at SE Central allowed DTO to participate successfully in the remainder of the test.FST 4 was effectively extended for 3 weeks until just prior to the ACTD dress rehearsal. The STOW System Engineering, Integration and Demonstration (SEID) instrumentation showed that DTO was creating as much as 45% of the total network traffic, especially during the latter part of a multi-day exercise. Many federates were periodically sending short messages (later determined to be new subscriber requests) in the new subscriber routing space, and the DT Scribe was sending a nearly continuous stream of data to this space. The DTO team studied the problem and could not offer an explanation -- a new subscriber request should be fulfilled by the Scribe and the federate should return to the validated ECN space. Tests suggested that the problem was linked to specific hardware platforms. Whenever the SAF application was brought up on certain platforms, it always exhibited this periodic new subscriber request problem. On other platforms, the problem never arose. Ultimately it turned out that a service SAF developer had incorrectly applied a DTO software patch over the telephone. Reversal of a less-than sign reversed the logic and caused the applications to periodically make new subscriber requests without ever leaving this routing space. Compounding the problem, this “corrected” software was installed on only some of the machines.STOW 97 ACTDProblems continued to be identified and fixed until just before the dress rehearsal. An RTI mine subscription problem was fixed which allowed minefields to once again be breached. A problem with incorrect substitution of volume features when an MSO changed state was found and corrected. A new release of the SEID munitions effectiveness table eliminated the ability for munitions to destroy bridges. This new table required a direct hit for the bridge to sustain damage. However, SAF detonation locations are determined by the intersection of the round’s trajectory with the terrain; models are ignored. Thus the detonations occurred on the terrain below the bridge, and direct hits could never occur. The munitions table was modified to permit damage to bridges.For the ACTD, DTO performed well. For several reasons, the DTO capabilities were not stressed as much as initially expected. Problems with air missions reduced the ability to target multi-state objects. (All detonation interactions contained an elevation of mean sea level, usually well below the terrain surface.) While several hundred survivability positions had been expected to be placed at initialization and during the exercise, the decision was made that emplacement of positions should be consistent with engineer assets; all fighting positions were created by simulated ACE vehicles, which had the capacity to create only 75. In addition, shortly before the ACTD, it was determined that tanks were calculating line of sight from the base of their turret rather than the gun barrel position, limiting the visibility of other vehicles to a dug-in vehicle. This was fixed prior to the ACTD, but the change was not used due to the lateness of the fix. Finally, the scenario was modified from the initial plans, causing the Blue forces to more forward more quickly than expected, reducing the need for position fortification.At exercise initialization, a 588,944 byte Scribe backup file was used to tailor the environment to specific scenario requirements. It contained ECNs to create 198 buildings and other objects as well as 300 ECNs to create earthen berms (10,000 polygons created or modified). At the end of the exercise, the Scribe file was 1.8 MB, for a total of 3,665 validated ECNs. Over 17,000 polygons were added, deleted or modified. Surprisingly, 2,808 “disturbed dirt” ECNs created some 29 km. of bladed minefield breach markings. We can only speculate that an operator forgot to remove the breach blade from an M1A2 or other breaching vehicle after the minefields were breached.During the ACTD, the STOW Intelligence Cell was responsible for Battle Damage Assessment (BDA). This cell would routinely consult the DT Sim to determine the number of targets destroyed during any particular mission and the exact damage sustained by each target. Depending on the munitions type and point of impact, it could take several strikes to render a target fully destroyed.In addition to the Army conducting minefield breaching operations with M1A2s with plows and Mine Clearing Line Charge (MICLIC) vehicles, the Navy also successfully conducted breaching operations in the surf zone with mine sweeping gear and towed sleds from a helicopter.Although not directly related to DTO, the ability for vehicles to traverse over and under bridges was non-functional and not fixed until just before the dress rehearsal, too late for inclusion into the ACTD. Several DTO problems remained after the ACTD. Thirty munitions types were not mapped in the munitions effectiveness table, due to inconsistent naming conventions between the SEID munitions effectiveness table and the SAFMaster data base. Had these munitions been correctly mapped, more objects would have been damaged or destroyed. During the ACTD, a new problem was discovered with the Runway Simulator, viz., a cratered runway, having been repaired, could not be consistently cratered again. A manual workaround was used for the ACTD, and the problem, having to do with the patch reset functionality in the S1000 data base, has since been corrected.Last minute bridge fixesOn October 20, four fixes were made to allow vehicles to route and move over and under bridges and overpasses. While these fixed most problems during laboratory testing, it was judged too risky to propagate them to the ACTD release. The changes were:1. Treat soil defrags as penetrable (small change in libvterrain). This allows vehicle movement on islands.2. Fix polygon clipping problems leading to infinite loops and segment faults (change in libgeometry).3. Fix call to ctdb_place_vehicle (small change in libtracked). Note that the same problem appears in libwheeled, and should probably be fixed in the same way.4. Fix soil lookup in libctdb to include MES's (one-line change in libctdb), which fixes bridge routing problems.The UK ExperienceThe UK gained experience with DTO by working closely with the US SE Team. Of particular significance were the networked tests performed during FST 2 between SE Central at JTASC, SEID and the UK SE Team at Chicksands. The tests included the construction of built-up areas using multi-state objects and the creation of anti-tank ditches and survivability positions. Objects instantiated in the US were seen in the UK and vice versa, except when objects were placed near GCS cell boundaries. Problems were experienced with repolygonization which were mainly attributed to Pentium endian issues. Although the US/UK network was not available for subsequent FSTs and the ACTD, close communication between the US and UK SE Teams continued.The ability to instantiate multi-state objects at system initialization was particularly useful to the UK. It allowed a stretch of road to be transformed into a hastily assembled airfield, providing a militarily strategic objective, without affecting the integrity of the terrain database. The UK also used this capability to build a Water Plant in a specific location to support a Courses of Action review. In practice, however, the usefulness of this capability was somewhat negated by the fact that vehicles and dismounted infantry did not recognize as obstructions objects positioned at exercise initialization. (Earlier, a similar problem was observed in US testing when vehicles did not recognize as obstacles buildings which were placed at run time via the DT Sim. This was corrected in September, but apparently was not tested with infantry.)Prior to the ACTD the UK experienced problems concatenating DT Scribe files which necessitated rebuilding the hasty airfield and appending it to the US file to produce a single US/UK DT Scribe file comprising 555 ECNs. However, for the ACTD the UK were unable to use this file since it was reported to be causing significant network traffic, both at initialization and for late joiners, so a small file of approximately 17 ECNs containing only the hasty airfield was used. This is thought to be a consequence of network configuration problems, since this symptom was not observed in the US. The smaller Scribe file was also judged to reduce risk for the UK portion of the ACTD.Table 2. ECN Routing SpacesECN TypeDescriptionECN_REQUESTRequest from any application for validation by DT ScribeECN_VALIDATEDValidated ECN from DT Scribe to all DT AgentsECN_REJECTRejected ECN from DT Scribe to requesting applicationECN_HEARTBEATHeartbeat from DT Scribe containing current Scribe sequence numberECN_NACKRequest from any application to DT Scribe for retransmission of specified ECNsECN_NEW_SUBSCRIBERRetransmission of all ECNs from DT Scribe to a new subscriber (latecomer to the simulation)DTO performed well during the ACTD although the full functionality was not exercised by the UK, mainly due to the nature of the vignettes. However, minefield breaching was successfully conducted using bladed breaching vehicles and MICLICs, and on completion of the military scenarios several survivability positions were created. A small change had to be made by the UK to the ModSAF Obstacle Editor just prior to the ACTD to support survivability positions sized for UK vehicles.One component of the UK STOW ACTD involved carrying out a Course of Action Analysis to assess options for recapturing a water pumping station. One of the key criteria was the avoidance of collateral damage to the pumping station which was generated using the DT Sim and included a number of multi-state objects. The enemy force consisted of infantry and a number of trucks parked close to the buildings of the pumping station. To avoid collateral damage, no use was made of close air support or indirect fires during the simulated attacks on the pumping station. However, despite this it was found that buildings were still being destroyed during the attacks. It was determined that, although friendly fire was not directly responsible for the collateral damage, the secondary detonations generated when the enemy trucks were destroyed were damaging buildings in their vicinity. This unexpected, although realistic consequence required changes to the proposed course of action to avoid targeting vehicles that were in close proximity to buildings.Because the UK component of the STOW exercise took place on relatively featureless desert, it was found that the dismounted infantry had little cover. In particular, they were extremely vulnerable to indirect fire. As a potential solution to this, limited experiments were carried out to determine feasibility of using the DTO infantry ditches as fighting positions. Although it was possible to manually place the infantry in the ditches (which did provide a greater degree of cover and protection), infantry behaviors had not yet been developed to reason about them. In addition, because of the tight confines of the trench, it was necessary to place the infantry exactly in the center of the trench to avoid them exhibiting large values of pitch and roll and colliding with the trench walls.. It should be borne in mind that, in real life, lifeforms follow terrain differently from the simulated infantry in that they usually remain vertical when standing, even on very steep slopes such as the sides of a trench. A recommended future DTO enhancement is to include the centerline of the ditch as a vector feature in the ECN when the trench is created. Attributed with depth and width, this feature would allow infantry to reason about the trench and move within it.Benefits of the HLAThe HLA Run Time Infrastructure (RTI) significantly reduced DTO induced network traffic to the federates as compared to a DIS simulation (reference [2]). Six routing spaces were created for ECNs, corresponding to the number of ECN types, see Table 2. A DT Agent, DT Sim, or DT Scribe subscribes to a subset of these six routing spaces based on its current mode, which guarantees that each one receives only relevant ECNs. This subscription method significantly reduces the bandwidth used for DTO communications. Each ECN is transmitted twice on the network, once from the requesting federate to the DT Scribe (ECN_REQUEST), and again from the Scribe to all subscribers (ECN_VALIDATED), which, for STOW, comprised the entire federation. By using separate routing spaces for ECN requests and validated ECNs, the DTO network traffic received by a federate is reduced by half.The ECN_NEW_SUBSCRIBER type is used to update a new DT Sim or DT Agent (DT Entity) entering an exercise. New subscribers can cause considerable ECN traffic, since the Scribe must transmit to the new subscriber a complete history of validated ECNs. Because JointSAF applications are susceptible to crashing after several hours and must be restarted, new subscribers were common for the duration of the ACTD. By separating this from other types of ECNs, a DT Scribe is able to send all the validated ECNs directly to the new subscriber instead of to the entire federation. When the DT Entity is finished updating, it then changes modes and subscribes to the subset of the ECN routing spaces for normal operations.Assessment of the Technology A requirement of an ACTD is to perform an independent assessment of the technologies it develops or improves. The goal of the assessment of the STOW technologies was to evaluate the potential for broader application within military modeling and simulation and to identify areas for further development. Delineation of known capabilities and limitations of the technology provided the basis for an understanding of the potential for broader application. Recommendations for further development were developed to either correct known limitations, or to evolve the technology to support likely future simulation environments.CapabilitiesThe Dynamic Terrain and Objects (DTO) architecture successfully supported runtime emplacement and modification of obstacles and damage effects on cultural features, terrain based targets, and terrain. No performance problems with respect to the DTO architecture have been experienced to date so its limits have yet to be reached or tested in a simulation scenario.The DT architecture allows for scaling through the addition of extra simulators and scribes. This requires the capability to divide functionality of these agents in a definitive and non-redundant manner. The DT Scribe responsibility can be divided by geographic area. The DT Sim responsibility can be divided by functionality and by geographic area. Significant additional processing power can thus be accommodated within this architecture to facilitate the execution of very large simulations.The models which represent dynamic objects and determine damage effects can be modified or replaced to provide the level of resolution required by the force simulation. The architecture is therefore capable of supporting simulations of any desired resolution. With a suitable set of models, this architecture could also be used to support a representation of a multi-resolution battlespace although ensuring consistency between representations at different resolutions has not yet been investigated.The DTO architecture is responsible for modeling effects which are persistent such as obstacles or damage. It is thus important that the force simulation have access to a current and accurate version of this data if valid results are to be generated. In the realm of distributed simulation, this means that each processor have this knowledge available to it. The DTO architecture maintains a history of all appropriate changes in a central location; the DT Scribe. Therefore, if a processor running some part of the force simulation suffers a fault (crashes), it can obtain the history from that central location. In addition, the architecture allows for a redundant Scribe so information need not be lost in the event of a Scribe fault. This provides a robust fault tolerance capability for ensuring consistent and accurate presentation of the representation modeled within this architecture. LimitationsThere are some limitations with the models currently used within the DTO architecture. For example, only predefined engineering position geometric types can be placed on the terrain data base. For STOW, this was mitigated through an extensive knowledge acquisition phase with the US Army Engineer School resulting in a prioritized selection of features to be implemented. Also, there are a limited number of preset alternate states for Multi-State Objects (MSOs) and Multi-Elevation Surface (MES) structures. Improvements to these models are possible and can be accommodated within the architecture. This requires not only the development effort for the models, but also the knowledge acquisition to determine the most important aspects to model and the systems engineering needed to trade off model detail with processor requirements.A second limitation is that polygonal changes can accrete without limit from munitions detonations and engineer operations in a region. Knowledge acquisition has shown that such locally concentrated changes seldom occur, but nevertheless it is possible for the resulting polygonal complexity to overwhelm the SAF and visual applications. Aggregation algorithms should be investigated for simplifying the representation of concentrated changes.Neither of the above limitations are architecturally imposed. The simulation which this architecture supported did not stress it, so any of its major limitations are yet unknown.RecommendationsSeveral aspects of the DTO architecture have yet to be truly stressed. Testing is required to examine the limits of the architecture. These tests should stress the architecture in various ways. For example, highly detailed, computationally intensive models could be incorporated into the architecture to examine performance under high processor loads to determine if additional granularity in the possible division of DT Sim functionality is required. Other tests could examine the architectures timing and message passing schema performance under faster than real time operations. If appropriate models do not exist to support each desired test, suitable tools may need to be built. It may also be necessary to build or adapt tools which measure the appropriate aspects of architecture performance. The effort to determine the limits of this architecture therefore includes test design, additional model integration, and production of any necessary supporting tools.Execution of simulations in a multi-resolution environment is a concept which is not yet fully developed. The requirements for this architecture within such an environment are therefore not yet defined. This precludes any substantial DTO architectural investigations or modifications for working in such an environment. However, substantial work could be accomplished in determining the relation between representations at various levels of resolution. If one model in the federate requires target damage representations at a low level of resolution, and another requires that information for the same targets at a higher level of resolution, how are consistent and appropriate representations provided to both? Investigations into providing consistency across multi-resolution representations of obstacles and damage effects are therefore recommended.Integral to the refinement of the architecture or improvement to the models exercised within the architecture is knowledge of the critical factors relative to the purpose of the simulation. Certain factors are critical to the realistic representation of synthetic force behaviors and interactions. Some minimal resolution of these factors must be maintained to obtain such realistic representations. Identification of these factors and the required level of resolution is an essential task for efficient future development. Since much of this effort can be expected to be both simulation system and purpose dependent, some amount of the cited knowledge acquisition must wait until these are defined, although some of this knowledge may prove to be more general and can be accomplished early. Still, since this type of knowledge acquisition has not been done before, the main focus in this area should be the development of the framework and procedures which facilitate this specialized effort. Within the STOW implementation of this architecture, effects are computed more or less centrally and distributed. Data packaging and distribution techniques are therefore of importance in the execution of this architecture. Investigations into the most efficient methods of collating, aggregating, packaging, and distributing this data should be pursued to ensure use of network resources is minimized. Investigations into a more distributed implementation of the architecture are also recommended.ReferencesD. Miller, A. C. Janett, R. M. Waters, J. T. Turner, “Dynamic Terrain in Distributed Simulation Systems”, Proc. of the 18th Interservice/Industry Training Systems and Education Conference, Dec., 1996.D. Miller, S. Adelson, T. Moore, A. Janett, J. E. Smith, R. Waters, “Dynamic Terrain Implementation using the RTI”, Proc. Fifteenth Workshop on Standards for the Interoperability of Distributed Simulations, Paper 96-15-093, Sept., 1996.Author BiographiesDale D. Miller is the manager of the Advanced Simulation Technology group at Lockheed Martin Information Systems in Bellevue, WA. He was the technical lead and program manager for the Dynamic Terrain and Objects program.Steve Adelson is a senior software engineer at Lockheed Martin Information Systems in Bellevue, WA. He contributed to many DTO components, including the repolygonization service, calculation of munitions effectiveness, and the reliability mechanism for the DT Scribe.Annette Janett is a senior software engineer at Lockheed Martin Information Systems in Bellevue, WA. She contributed to all aspects of the DTO effort and was the principal developer of the Runway Simulator, which simulates crater repair by engineer teams.John Eskew is a senior software engineer at Lockheed Martin Information Systems in Burlington, MA. He served as the liaison between DTO and the STOW JointSAF integration team and was responsible for development of the DTO routing spaces.Brenda Stroud Brenda Stroud is a Research Leader in the Simulation, Training and AI Group of Land Systems in DERA and is responsible for visualization activities within UK STOW. Previous positions held include College Lecturer, Technical Manager (Visuals) and Visual Systems Consultant.Tony Usher Tony Usher is a Research Leader in the Simulation, Training and AI Group of Land Systems in DERA and is responsible for Synthetic Environments within UK STOW.  Previous activities have included computer systems, visual systems technology and the simulation of weapons and radar systems.Steve Kasputis is the Technical Director of the Undersea Warfare Directorate of Techmatics, Inc.  He has a B.S. in physics, M.S. in engineering acoustics, and 13 years experience in the establishment and management of research and development programs.