Live-Virtual-Constructive (L-V-C) Fusion and Data Collection in a Classified Distributed Test Environment using the Test and Training Enabling Architecture (TENA)Ryan NormanU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" ryan.t.norman@us.army.milJason BolinU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:dbrowning@rttc.army.mil" jbolin@rttc.army.milJosh SellsU.S. Army Redstone Technical Test CenterHuntsville, AlabamaCSTE-DTC-RT-F-FL, Bldg. 7884Redstone Arsenal, AL 35898-8052 HYPERLINK "mailto:darryl@amtec-corp.com" jsells@rttc.army.milAdam TroupeERC IncorporatedHuntsville, Alabama555 Sparkman Dr., Suite 1622Huntsville, AL 35816 HYPERLINK "mailto:darryl@amtec-corp.com" atroupe@rttc.army.milKeywords: DTE-5, TENA, ILH, Distributed TestingABSTRACT:  The fifth Distributed Test Event, or DTE-5, was executed in August 2005 to universal success.  Among many other accomplishments, DTE-5 enabled the integration of live range assets into a classified distributed test environment.  In order to incorporate live assets into such a large distributed test, Redstone Technical Test Center (RTTC) implemented the Military Operations in Urban Terrain (MOUT) Scenario for inclusion in the overall event plan.  The scenario had two overarching objectives.  First, the scenario provided a tactical engagement of Live and Simulated Blue and Red Dismounts in a classified urban test environment.  Second, the scenario allowed for the collection of test data during the tactical engagement to facilitate post-test data analysis.  Successful execution of these ambitious goals required software integration with live range assets in order to facilitate the distribution of test data real-time throughout the simulation environment and aid in post-test data analysis.  To accomplish these tasks, RTTC relied heavily on its past successes resulting from the Unmanned Systems Initiative (USI) Exercise in FY04 and the Virtual Proving Ground (VPG) funded ROCIT Initiative, both of which have been presented at previous SIWs.The transition to classified operations required modifications to RTTC’s distributed network.  Classified Wireless and Wide Area Networks (WAN), one-way serial communications, and the Test and Training Enabling Architecture (TENA) were all essential components during execution of the MOUT Scenario.TENA-enabled applications were used to facilitate the collection and sharing of test data throughout the distributed test environment.  For the MOUT Scenario, RTTC integrated two Laser Trackers, a Track Mount Control, and four Common Instrumentation Platform (CIP) systems into its network with TENA.  Software interfaces to a Class I and Class II UAV were also developed and used to provide Time Space Positional Information (TSPI) for each live UAV on the network using TENA.  Additionally, a custom Platform server was used to provide real-time positional information of live Blue and Red Dismounts both indoors and outdoors with minimal transitional delay.  The Platform server received this positional information from custom-built instrumentation devices worn by the Dismounts during the execution of the scenario.  TENA-enabled 3D Viewers and Data Loggers were used throughout the exercise to aid in Data Collection and understanding.Scenario success depended on the seamless fusion of live, virtual, and constructive data within the distributed test environment.  Therefore, a DIS to TENA Gateway was used to manage the state of all MOUT live assets by injecting live asset test data into the simulation environment and vice versa.  This enabled the transition from virtual to live and, upon completion of the live MOUT Scenario, back to virtual.  The DTE-5 MOUT Scenario enabled RTTC to gain a great level of insight into the processes, procedures, and technologies necessary to transition between live, virtual, and constructive assets and collect data to facilitate data analysis in a classified distributed test environment. IntroductionThe fifth Virtual Proving Ground (VPG) Distributed Test Event, or DTE-5, was executed in August 2005 to universal success.  Among many other accomplishments, DTE-5 enabled the integration of live range assets into a classified distributed test environment.  In order to incorporate live assets into such a large distributed test, Redstone Technical Test Center (RTTC) implemented a Military Operations in Urban Terrain (MOUT) Scenario for inclusion in the overall event plan.  This scenario had two overarching objectives.  First, the scenario provided a tactical engagement of both Live and Simulated Blue and Red Dismounts in a classified urban test environment and the opportunity to mix live, virtual, and constructive forces.  Live Blue Dismounts began the DTE-5 exercise as surrogate virtual entities with simulated movement to the live exercise start position.  Once the live MOUT scenario began, the virtual entities were replaced by the live entities in the simulated battlespace and were allowed to execute their mission within the context of the overarching distributed event.  Second, the scenario allowed for the successful collection of test data during the tactical engagement to facilitate post-test data analysis.  The MOUT Scenario was designed to serve as a risk-reduction event with the goal of determining if the processes were in place to collect valid test data and perform relevant post-test data analysis in a distributed test environment.Successful execution of these ambitious goals required software integration with live range assets in order to facilitate the distribution of test data real-time throughout the simulation environment Wide Area Network (WAN) and aid in post-test data analysis.  This paper will examine the steps taken and methodologies defined to inject live range assets and test data into the distributed simulation battlespace of DTE-5.  Additionally, this paper will discuss the semi-automated method utilized to collect and distribute test data across physically disparate test sites. This aided in the overall quality of the data collected and in the post test system evaluation.  No data could be shared without first defining the network topology and the test data transport architecture.  Therefore, it is important to first provide an overview of the distributed network and the data transport architecture chosen for the live MOUT scenario, the Test and Training Enabling Architecture (TENA).2.0 Network OverviewDTE-5 leveraged existing infrastructure and capabilities developed through the course of previous distributed testing events.  Unlike previous distributed test events (DTEs), DTE-5 was conducted in a classified environment. The event included not only the Army Test and Evaluation Command (ATEC) test centers, but other Army commands such as the Training and Doctrine Command (TRADOC) and the Research, Development & Engineering Command (RDECOM). Therefore, the transition to classified operations required modifications to several key areas of RTTC’s distributed network topology in order to make RTTC test data, including the MOUT scenario, available to all DTE-5 test sites and to make test data from other sites available to assets at RTTC.  Due to the classified nature of the test event, complete security accreditation of the entire MOUT Site, including any wireless communication, was mandatory.  The temporary nature of the network at the MOUT site as well as time considerations allowed RTTC to bypass a full Department of Defense Information Technology Security Certification & Accreditation Process (DITSCAP) for the MOUT-portion of the DTE-5 network.  Instead, an Interim Authority to Operate (IATO) was granted by the Redstone Arsenal Designated Approving Authority.  Test data was encrypted and decrypted between the MOUT site and the RTTC Distributed Test Control Center (DTCC) using TacLanes.  KG-175 TACLANE E100 encryptors were placed at each location in order to transmit classified test data between the MOUT site and the RTTC Distributed Test Control Center (DTCC).  Additionally, the MOUT Scenario required the use of wireless Ethernet in order to accomplish the mission.  Therefore, Harris Corporation’s SecNet11, which at the time of the exercise was the only National Security Agency approved solution for classified wireless Ethernet, were deployed to communicate with instrumentation deployed on the live MOUT vehicles.   Please see the accompanying paper “Integration of Live Assets in a Classified Distributed Test Environment” for greater detail of the RTTC and overarching network topology, lessons learned, and best practices used during the construction of the DTE-5 distributed network.3.0 TENA OverviewA real-time data transport architecture was necessary to work in conjunction with the defined network topology and deliver live test data from the MOUT Scenario to the Simulation Environment. TENA was selected as that architecture. TENA, part of the CTEIP TENA Software Development Activity (SDA), is an object-oriented data transport architecture.  TENA is technically driven by interoperability, reusability, and composability requirements.  Interoperability requirements necessitate TENA applications to work together to achieve the goals defined by a user or users.  Reusability requirements involve TENA components, applications, or systems that can be used in configurations beyond those for which they were originally designed.  Composability requires an ability to rapidly assemble, initialize, test, and execute a system from members of a pool of reusable, interoperable elements.  TENA sanctions real-time, distributed testing and simulation through the use of a Logical Range Execution, or LRE.  The LRE concept allows TENA to meet the interoperability, reusability, and composability goals as defined by the user community.  Communication between entities in the test execution environment using TENA is accomplished with servant objects and proxy references to these servant objects.  In terms of the publisher-subscriber paradigm, Servant objects are publishers and proxy objects are subscribers.  Together, servant objects and their corresponding proxy references form Stateful Distributed Objects (SDOs), the building blocks contained within every Logical Range Execution.  SDOs contain both data attributes and control methods.  TENA relies on SDOs within a LRE to publish test data in an object-oriented format and deliver that test data to any number of interested subscribers real-time.  With an SDO, the data attributes are updated across the network via an SDO’s publication state.  A publishing, or servant, object represents the source of data and reports any changes made to the publication state to all applications that are connected to the servant object via a subscription, which is otherwise known as a proxy reference.  These updates occur atomically, meaning an object’s attributes are updated as one single entity to preserve the state of the published object.  Furthermore, a proxy is only notified about servants it has told TENA it is currently interested in; that is, a proxy only receives objects of types that it has “subscribed” to.  An SDO, however, facilitates more than just publishing and subscribing.  TENA also allows for Remote Method Invocation, which permits a subscriber to remotely command its publisher to perform certain methods.  Methods defined within an SDO’s design are set up by TENA for remote invocation.  To remotely invoke a method, TENA relies on SDO subscriber proxy references that use its middleware to connect with the publishing servant.  Applications can be defined to handle TENA servants and TENA proxy references simultaneously.  That is, TENA allows for a publisher application to also be a subscriber application and for an application to be attached to multiple publishers or subscribers within the Logical Range Execution.  In short, TENA is a complete real-time data transportation solution for test execution data.4.0 DTE-5 TENA ComponentsTENA-enabled applications were used to facilitate the sharing and collection of test data throughout the distributed test environment.  Please see Figure 1 for an overview of the scenario setup. For the MOUT Scenario, RTTC integrated two Laser Trackers, a Track Mount Control, and four Common Instrumentation Package (CIP) systems onto its network with TENA.  Software interfaces to a Class I and Class II UAV were also developed and used to provide Time Space Positional Information (TSPI) for each live UAV on the network using TENA.  Additionally, a custom Platform server, known as the Zigbee Platform Server, was used to provide positional information of live Blue and Red Dismounts both indoors and outdoors in real-time.  The Platform server received this positional information from custom-built instrumentation devices worn by the Dismounts during the execution of the scenario.  TENA-enabled 3D Viewers and Data Loggers were used throughout the exercise to aid in Data Collection and understanding.Figure 1: DTE-5 MOUT Scenario Setup4.1 Zigbee Platform ServerThe Zigbee Platform Server (Figure 2) was used during DTE-5 to provide real-time positional information on live Blue and Red Dismounts, SUGV, and T-UGS participating in the RTTC Urban MOUT scenario throughout the simulation environment.  Each of these live entities was given a battery-powered Zigbee/GPS combination tag.  The tag units utilized during the scenario execution are very inexpensive and small enough for a Blue or Red Dismount to carry throughout an exercise.  The tags can even be placed on vehicles or other devices where Positional Information is needed.  The Zigbee Platform Server received Real-Time Positional Information from these tags, time-stamped the data, and disseminated this information for each tag throughout the simulation environment using TENA and the TENA community standard Platform SDO.  Use of the community standard enables any compliant application in the test scenario to inherently receive positional data from any of the Dismount, SUGV, or T-UGS entities without additional modification.Depending on the location of the live entity, positional information was determined through one of two methods.  The combination tag automatically sent GPS data back to the Platform Server whenever it was located outside and therefore able to communicate with GPS satellites.  Once the tag entered a building, it would automatically switch to the Zigbee protocol to communicate with Zigbee beacons in order to determine its location within the building.  Due to resource constraints, each combination tag was able to use a limited number of strategically placed beacons to determine, in real-time, the room within the building it was currently occupying.  Additional Zigbee beacons would have increased the positional accuracy to within a foot of the actual location of the combination tag.  Upon exiting the building, the combination tag automatically reacquired its previously known GPS satellites and quickly provided GPS information for the tag back to the Platform Server.Figure 2: Zigbee Platform Server Screenshot4.2 Common Instrumentation Package (CIP)During DTE-5, CIP Boxes were placed on the ICV’s and Threat Vehicles in use during the Live Urban MOUT scenario at RTTC in order to provide real-time TSPI data to the simulation environment.  The CIP Box is an RTTC developed, multi-purpose, data acquisition device used in live range testing.  The CIP Box uses a GPS antenna to collect Position and Time information and has an optional IMU, called Cross-Bow, to provide Orientation information for either an on-board Target Acquisition System (TAS) or another vehicle subcomponent.  Additionally, CIP boxes can be configured to collect any test-specific data desired.  The CIP Box is also TENA enabled, which allows its test data to be shared Real-Time with systems interested in its data through use of the TENA community standard Platform Object Model.  Use of the community standard enables any compliant application in the test scenario to intrinsically receive TSPI data from any of the MOUT scenario vehicles without additional modification.  The CIP Box is configured to work over LAN or Wireless Ethernet networks.  For DTE-5, SecNet11 Encrypted Secret Wireless Ethernet was used to communicate to the CIP boxes and inject their TSPI data into the simulation environment.  The use of wireless technology enabled the vehicles containing CIP boxes to move freely throughout the scenario environment.  More information on the SecNet11 and wireless communication can be found in the accompanying paper “Integration of Live Assets in a Classified Distributed Test Environment.”4.3 Class I and Class II UAV PublishersThe Class I and Class II UAV Publishers served as the interface between the Simulation World and the Urban MOUT Site for the live Class I and Class II UAVs in use during the scenario.  These tools provided TSPI data from the live UAVs used during the scenario into the DTE-5 Environment.  Each Publisher uses a serial communication link to receive TSPI data from its respective UAV’s on-board GPS unit. These Publishers then inject the GPS Data received from the UAVs into the Simulation Environment.  The UAV Publishers disseminate their data across the network using TENA and the TENA community standard Platform Object Model.  Use of the community standard enables any compliant application in the test scenario to effectively receive TSPI data for both UAVs without additional modification.4.4 Laser TrackerTwo laser trackers were integrated into the live MOUT network for DTE-5 in order to provide real-time ground truth position information for the Class I and II UAV’s.  The Laser Tracker instrument provides high precision, 2-3 inch accuracy TSPI data as well as a video feed of the acquired target.  Each tracker is capable of tracking only one target at a time, thus the need for two.  Each Laser Tracker is controlled by a single Laser Tracker Control App (LTC), which communicates with the Laser Tracker via serial link.  These LTC received target TSPI data from their respective tracker and published this data, along with TSPI data for the Laser Tracker itself, throughout the simulation environment using TENA and the TENA community standard Platform SDO.  The LTC published the Tracker’s location for display in the 3D Viewer and the target TSPI information in real-time at an operator defined update rate of up to 100 Hz.  The LTC also subscribed to all TENA community standard Platform SDO’s and can send operator selected platform TSPI data to the Laser Tracker to aide target acquisition.  This enabled the LTC operator to be able to use TENA to automatically acquire any live targets in the battlespace that are being published as TENA community standard SDOs.  When the UAV’s published TSPI acquired from GPS on the TENA network, the LTC application was able to aide in acquisition of laser lock of the small UAV’s.  The Class I UAV’s start position was beyond the laser tracker’s line of sight at the MOUT site, so LTC auto-tracking greatly aided in target acquisition. Using the LTC to auto-track the live UAVs as their updates were published in TENA greatly reduced the time required for manual acquisition of such a small airborne target and, therefore, facilitated the publishing of more ground truth data by the LTC.  For the DTE-5 exercise, the target TSPI data was published at 10 Hz to provide a higher resolution TSPI than the 1 Hz available from the UAV’s on-board GPS instrumentation in order to aide the Track Mount in providing quality video documentation of the exercise.  More importantly, the LTC provided ground truth data on each live UAV for the data loggers and other instrumentation, such as the Track Mount, without overburdening the simulation environment with excess network traffic.  The laser trackers and LTC were also able to provide TSPI even when GPS was not available or not reliable due to weather, satellite positions, or hardware failure by allowing the operator to manually acquire the airborne targets.  Although the Laser Trackers are very old technology, they proved to be extremely valuable instrumentation assets during DTE-5.4.5 Track MountThe Video Track Mount (VTM) was used during DTE-5 to provide real-time video and video documentation of live assets participating in the RTTC MOUT area.  The VTM is a portable pedestal with a video camera mounted to it that can rotate 360 degrees horizontally and about 105 degrees vertically (90 up and 15 down).  With the use of the Track Mount Control Application (TMCA) (Figure 3), the VTM was controlled remotely from a distance of approximately 200 meters.  The TMCA used serial communications to send and receive calibration and orientation data to and from the VTM.  Video from the VTM was then sent in a raw format to the MOUT site control trailer via coax cable where it was processed by the Master Video Control System (MVCS).  Along with recording/backing-up the video, the MVCS amplified, and sent real-time video out to local and remote sites through the RTTC DTCC. The TMCA gave the user the ability to control the VTM by using either a manual control or an auto track mode.  Manual control was accomplished by either using the mouse in an orientation grid, by using the arrow keys on the keyboard, or by programming preset buttons.  When enabled, the user could use the mouse to click on a spot in the orientation grid.  This would cause the VTM to slew to the azimuth and elevation that corresponded to the “clicked” position on the grid.  Using the keyboard arrow keys, the user had the ability to change elevation and azimuth in one degree increments.  Ten programmable presets were also available to the user.  This provided the ability to scan between known points of interest during the event.  All three methods of manual tracking were employed during the DTE-5 exercise.Although manual control of the VTM with the TMCA proved to be valuable tool, a much greater benefit was found in the ability to auto track targets using TENA target information.  Targeting TENA platforms could be accomplished in one of two ways, both of which relied on the TMCA’s ability to subscribe to TENA platforms.  The first method of acquiring a target for auto tracking was through the platform list. This was a list that displayed all active TENA platforms.  Using this list, the user could select a desired target and begin auto tracking.  Once a target was selected and auto tracking was engaged, the TMCA would use the TENA position data to send to the VTM to update its orientation.  At this point, the VTM would continue to track the target until the target quit publishing its position information or until a different target was selected in the TMCA.  The other method of acquiring a target for auto tracking was accomplished through the use of a 360º viewing tool (Figure 4).  With this, the user is able to see a graphical representation of all TENA platforms as well as the current orientation of the VTM.  By clicking on a target in the 360º view and then clicking the “Auto Track” button, the track mount will start auto tracking the target in the same manner as stated in the first method.  The auto tracking capability provided by the TMCA made it possible to maintain video of targets that would have been quite difficult, if not impossible, to maintain manually.            Figure 3: Track Mount Control Application	       Figure 4: 360º Viewing ToolThe VTM together with the TMCA accomplished the mission of providing key video of event assets in the DTE-5 exercise.  The ability to quickly change between different live targets using both the manual tracking methods and the auto tracking methods mentioned above, gave viewers a comprehensive first person view of the DTE-5 event.  Without the VTM and the TMCA, this ability would have been compromised or would have been much more costly in terms of man power and or equipment.4.6 3D ViewerThe 3D Viewer provides the user with a visual interpretation of the battlespace for a given test event.  For DTE-5, the 3D Viewer was used primarily to simultaneously provide L-V-C views of the Urban MOUT Event at RTTC.  The 3D Viewer displayed both simulated and live entities on the virtual terrain and was very useful in determining status of many aspects of the test.  To do this, the 3D Viewer utilizes TENA Object Subscription, HLA Subscription, or DIS PDU Reception and displays each object on the virtual terrain relative to its reported TSPI data.  Additionally, the 3D Viewer was natively compliant with the TENA Standard Platform Object Model.  Therefore, it was able to receive all TENA-enabled MOUT Scenario Positional information without application modification.  Please see Figure 5 for a representative screenshot of the 3D Viewer.4.7 Platform LoggerThe purpose for any experiment is to collect data.  The complexities of setting up the distributed testing process and the collection of distributed testing lessons learned limited the amount of system test data that could be examined in past DTE’s.  RTTC’s work on the Unmanned Systems Initiative (USI) included a first attempt at developing some of the systems required for a minimally automated data collection and archival process of data collected on live assets.  However, the USI data collection process presented some problems for DTE-5 since data collection during USI was distributed across instrumentation interface applications.  The many different data loggers each needed access to the data store location, which presented a large problem in a classified distributed environment, such as DTE-5’s network configuration.  To mitigate this, a “one tool to log it all” design approach was used at the MOUT site for DTE-5.  This tool was the TENA Platform logger.Figure 5: 3D Viewer ScreenshotThe TENA Platform Logger is a .NET Windows application that subscribed to every TENA community standard Platform SDO publishing on the live TENA network, including any platforms or messages that were pushed through the DIS-TENA gateway.  The TENA Platform Logger also subscribed to and logged messages that were issued via TENA allowing it to create a complete XML database of the platforms and events in the scenario as it unfolded for post test analysis or replay.  XML was chosen as the database format for several reasons.  First, XML is plain text and therefore is easily recorded with minimal development resources and without the need for extra software licenses for relational database suites, such as MS SQL Server or Oracle, or for proprietary binary data formatting libraries.  Second, the fluidity of the scenario and delay in the delivery of the most recent version of the TENA community standard Platform object model used in the exercise required a database that could easily grow and change with the changing scenario.  Finally, XML is an independent standard which allows for tools to be easily developed for post test analysis.  At the very least, XML generates a test data file that is easily read by human eyes even without additional software development.  One draw back to using XML is, of course, the resulting size of the database.  However, this was remedied by integrating Zip compression of the generated database into the TENA Platform Logger application itself thereby reducing the size of the database by roughly 100 times before archival in the ILH.  The ILH will be discussed further in the next section.During execution of the scenario, the TENA Platform Logger displayed a list of discovered TENA standard Platform SDO’s and allowed the user to “peek” at any particular Platform’s current TSPI data by simply selecting the appropriate Platform from the list.  As the entities’ states were updated in TENA, the Platform Logger recorded the information in the database.  Destruction events issued by any discovered TENA Platform SDO were also recorded.  Upon the completion of the event, the Logger, which followed the process described in detail in Section 5.0 below, would take the ILH event meta-data published in TENA for the test run, zip the database files into one archive, and automatically insert the XML database into the data store in the correct location in the hierarchy tree. This automated process allowed for easy retrieval of the scenario for post event analysis.5.0 DTE-5 Data CollectionFor the MOUT Scenario, all live test data was collected by the TENA Platform Logger.  However, a process was still needed to collect and manage all test data collected from all testing sites during the entire DTE-5 event.  Data collection for all participating DTE-5 sites, including the RTTC MOUT, was performed by using the Integration Level Hierarchy (ILH) as the backbone for the collection and distribution of data. The ILH standard is a universal Army Developmental Test Command (DTC) naming convention for “Systems” under test, related “Projects”, and all other metadata necessary to uniquely identify a digital “Resource”. These standards have been designed, developed, approved and promoted by Army DTC facilities to establish a standard database architecture known as ILH. The ILH database schema holds the minimum required test metadata each test center’s data system must use to communicate with other test centers. Test Metadata within the ILH provides a “card catalog” on what is being tested, who conducted the test, project information on tests being conducted, types of tests conducted, test event information, and unique identification of test articles. See Figure 6 for the ILH database schema. All of this metadata is used to identify, store, and retrieve digital objects known as resources. The referenced digital objects are items such as documents, test data, images, models, simulations, and software.  The ILH generally enables the development and real-time deployment of metadata standards via database table replication across all sites utilizing ILH. However, due to the classified nature of DTE-5 there was merely one ILH database running, located at the Inter-Range Command Center (IRCC). It is important to note that this is not the recommended method for ILH to function.   Limited time, manpower, and funding resources for setting up classified data stores at each DTE-5 site left no other option but to have a single, centralized ILH data store. SHAPE  \* MERGEFORMAT Figure 6: ILH database schema5.1 Pre-Test Distributed Data Collection ProcessDTE-5 provided an excellent opportunity for evaluating the procedures needed to facilitate Distributed Testing Data Management in a classified environment. To begin the process, someone at the IRCC enters the information, or metadata, for the test event into the ILH database during the Pre-Test phase. This associates the test to be conducted with a System and Project in the ILH. Once the test enters the Test Execution Phase, the test metadata is available for dissemination throughout the network. This is done via TENA by using the VPG community standard ILH Object Model within a Test Event Controller application. Please see Figure 7 for an example of a Test Event Controller used for another test. In order to facilitate test event control from a single location, the Test Event Controller is able to notify all range assets of significant test events, such as the start or stop of a test and when to begin or end logging, with the single push of a button. Test event control also includes the publishing of ILH data in TENA. To publish the ILH data, the test being executed, previously entered by the test engineer, is first selected in a tree view on the application interface. All ILH data is then automatically published on to the network via TENA for all test entities to receive. SHAPE  \* MERGEFORMAT Figure 7: Test Event Controller ExampleDuring the Test Execution Phase, ILH-formatted test metadata was easily distributed amongst TENA-enabled assets participating throughout the country. Once the ILH test metadata is published in TENA, all test entities subscribing to that data will receive it. All TENA-enabled assets, such as the Track Mount and Platform Logger receive the ILH test metadata over the network from TENA and are instantly “aware” of the test that is occurring.  Being “aware” allows the entities to collect test data and automatically associate it with the current test’s metadata, the benefits of which will be described in the following section.  Each entity holds onto the metadata until the conclusion of the current test event. Test data is then collected during the Test Execution Phase by all applicable test entities.  5.2 Test Execution and Post-Test Distributed Data Collection ProcessOnce the test event is complete, the collected test data is associated with the TENA-distributed ILH test metadata each entity received from the Test Event Controller. The test data is then ready to be reduced and/or stored. Furthermore, since the collected data is “aware” of the executed test, it can automatically be moved into the database. Thus, a suite of development tools are used to automatically reference the test data in the ILH. The automated tool developed for this purpose is called a HotFolder. A HotFolder is a folder on either a local or networked machine that has a Windows service watching it at all times for the creation of XML files. Upon dropping an XML file into the HotFolder, code is executed that proceeds to look for and then parse the ILH Resource Header information, which contains the minimum amount of ILH metadata required to uniquely identify and associate a digital resource with a test, in order to insert a new resource in the database.  The test metadata contained in the ILH Resource Header is generated in a variety of different ways, each of which is described below. The header also associates any “child” files (such as pictures or documents) to the same test. The Windows service which is parsing the XML file then uses the ILH Header information to store the file or group of files (resources) and to update the ILH database with metadata describing the resource. For the DTE-5 event three methods, which are described below, were utilized to insert a resource into the ILH.The recommended method which was utilized by most test centers involved uploading data files through a website called the “ILH Viewer”. The ILH Viewer was developed by RTTC and was hosted at the IRCC. To reiterate, this centralized approach was chosen only due to the fact that DTE-5 was a classified exercise with limited resources for data management infrastructure and is not the recommended approach. It consisted of a web-based treeview of the ILH which allowed the users to browse through the hierarchal listing of Systems, Projects, and Tests to find the event they collected data for. Associating the Resource was accomplished by uploading the file, which required the user to enter specific meta-data such as: POC Name, Test Center Name, and Type of Resource. The ILH Viewer then proceeded to automatically create the ILH Resource Header file and drop both the uploaded file and the generated Resource Header into the HotFolder which inserted the Resource into the ILH. Another feature of the ILH Viewer is that after your file has been processed by the HotFolder (regardless of which of the three methods you use to get your file to the HotFolder) it can now be viewed or downloaded from the ILH Viewer. This enabled users to quickly and easily share their data with test centers located hundreds to thousands of miles away. This also facilitated post test data reduction and analysis, which greatly aided both the evaluators and testers in their verification of distributed testing as a viable method for conducting a test. Since the data files were accessible through the ILH Viewer, post test data analysis from disparate, classified locations was achieved. This colossal accomplishment proved to be of great use during the post-test analysis phase when the Data Analysis Working Group (DAWG) began coordinating with the ATEC Evaluators to evaluate the effectiveness of DTE-5.The second method of submitting data to the HotFolder consisted of using a TENA ILH Subscriber Application developed by Starship which subscribed to the ILH Object. Starship is an Electronic Proving Ground (EPG) developed software system that is used primarily for situational awareness as well as command and control of other range systems. Starship uses TENA to disseminate the ILH Test Metadata and receive operational status from other TENA-enabled range systems.  Upon test completion the user was required to enter the same specific meta-data as the previous method. At this point the program proceeded to create the Resource Header using information from the ILH SDO, which was received via the TENA architecture. The user then used a FTP program of their choosing to send the files into the HotFolder, which in turn inserted the Resource into the ILH.The third method, which was not recommended for anyone but experts, involved creating the Resource Header file by hand and then utilizing FTP to get the Resource and Resource Header into the HotFolder. This method caused many problems due to incorrectly formatted Resource Header files or incorrect database ID’s which caused the Resource to be inserted under the wrong Test Event or not inserted at all. This led to daily headaches for the administrators of the HotFolder when attempting to find the incorrect information contained in the Resource Header file.6.0 L-V-C Fusion and the TENA / DIS GatewayScenario success depended on the seamless fusion of live, virtual, and constructive data within the distributed test environment.  Therefore, a custom-built DIS to TENA Gateway was used to manage the state of all live MOUT assets by injecting live asset test data into the simulation environment and vice versa.  The TENA-DIS Gateway provides a bridge from the TENA protocol to the DIS protocol and vice versa.  In TENA, the gateway utilizes the community standard Platform Object Model to rebroadcast DIS Entity PDUs as TENA Platforms.  In DIS, Standard Platforms from the TENA network are converted into DIS PDUs and rebroadcast.  HLA traffic was converted to DIS for the MOUT Scenario by another gateway residing at the RTCC Distributed Test Command Center (DTCC).  Therefore, all live TENA instrumentation, vehicles, and Dismounts were seamlessly injected into the distributed test environment.  Conversely, all relevant distributed entities in the simulated battlespace appeared as TENA Platforms to all of the live entities and instrumentation deployed for the MOUT Scenario.In addition to translating across TENA and DIS, the custom gateway application provided the necessary functionality to “take over” DIS Entity PDUs and execute the jump from Live Entities to Virtual or Constructive and then back to Live.  Before event execution, a configuration file was designed to map the unique identification information of a DIS PDU to the Platform ID of the TENA Platform SDO and its corresponding live entity.  This enabled a one-to-one mapping between virtual and/or constructive DIS PDUs and their live TENA counterparts.  To execute the switch during DTE-5, the Gateway operator would only have select the entity to transition from live to virtual or constructive and click a button on the User Interface.  This button-click interface enabled the transition from virtual to live and, upon completion of the live MOUT Scenario, back to virtual.  Furthermore, the custom gateway was used to manage information in the DIS PDU, such as CAMO and Appearance bits, of the TENA entities to be rebroadcast onto the DIS Network.  For example, when the scenario Time Ordered Event List (TOEL) called for a threat vehicle to remove camouflage concealing a weapon, the gateway, in real-time, would change the DIS information for the TENA-enabled vehicle and report the weapon as revealed throughout the distributed battlespace.7.0 ClosingThe DTE-5 MOUT Scenario enabled RTTC to gain a great level of insight into the processes, procedures, and technologies necessary to transition between live, virtual, and constructive assets and collect data to facilitate data analysis in a classified distributed test environment.  The MOUT Scenario gave RTTC the opportunity to implement emerging technologies, such as Zigbee, to instrument and execute a tactical engagement of both Live and Simulated Blue and Red Dismounts in a classified urban test environment.  The MOUT Gateway allowed seamless fusion of and transition between L-V-C entities as required in the DTE-5 TOEL.  The ILH was utilized to enable a DTE-5 Distributed Testing Data Management process to provide the test data necessary to determine that distributed testing is a feasible option.  TENA and the Platform Logger enabled almost effortless data collection for the MOUT Scenario and aided the Data Management and Analysis processes.  Without question, DTE-5 and the DTE-5 MOUT Scenario successfully demonstrated that RTTC has the infrastructure, capabilities, and processes in place to collect actual system test data and perform post-test data analysis from any combination of live, virtual, and constructive test articles as part of a larger, distributed test environment.Cannot acquire a virtual target with the LT’sSentence had double negative in it (without and unnecessary)Please read overWhat is being tested…Project which testing is being conducted for…Who conducted thetest event…Type of testConducted…Actual Test Event,Test Number…Resources, the dataProducts of testing …