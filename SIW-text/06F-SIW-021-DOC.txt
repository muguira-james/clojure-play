Network Modeling and Simulation in the OneTESS ProgramWayne A. LindoAT&T Government Solutions111301 Corporate BoulevardOrlando, FL 32817 HYPERLINK "mailto:wlindo@att.com" wlindo@att.comDr. Robert J. HallAT&T Labs ResearchFlorham Park, NJ 07932 HYPERLINK "hall@research.att.com" hall@research.att.comKeywords:MANET, Geocast, Shooter Adjudicates, Targets Adjudicate, Centralized Adjudication, Routing, ScalabilityABSTRACT: The One-Tactical Engagement Simulation System (OneTESS) is a research and development program developing a standard and prototype to replace the operationally limited, laser-based training and testing systems in use over the last 25 years. OneTESS will provide realistic simulated combat engagements in outdoor or built up area environments with actual weapons platforms sending and receiving electronic bullets over radio frequency (RF) networks. The OneTESS network environment involves massive temporal and spatial-scale wireless networking of several thousand highly mobile entities executing combat engagement operations in an infrastructure-based mode supported by facility-based networking equipment, as well as a stand-alone mode with no infrastructure. This paper provides an overview of OneTESS Modeling and Simulation (M&S) network study efforts to address critical technology risks associated with network communications bandwidth, latency, reliability, engagement adjudication and data collection.IntroductionOne Tactical Engagement Simulation System (OneTESS) is a future Army training and testing system that will have the capability to support up to brigade-level, scaleable to theater-level, training and testing exercises.  OneTESS will provide live combined arms Force-on-Force (FoF) and Force-on-Target (FoT) training supporting all Army tactical missions, and crossing all Battlefield Operating Systems at Home-station, maneuver Combat Training Centers, test ranges, and deployed sites.  OneTESS will be a component of the Army’s interoperable, systems-of-systems, live-virtual-constructive operational architecture, simulating combat realism for live players.This paper focuses primarily on investigating technology risks associated with the OneTESS communications network environment. In this environment, large numbers of mobile player units (exercise participants) move as individuals or as a group, network topology is constantly changing as defined by the positions of the exercise participants at a particular time, and communications are constrained by the characteristics and limitations of the wireless network. In, addition, the network is required to support large combat engagements (10K real and simulated players) and real-time casualty assessment (RTCA) determination. OneTESS engagements must be completed in real-time as perceived in real world engagements in order to retain the required level of realism and positive training value. Furthermore, OneTESS must be capable of reporting and collecting data on unit locations, weapon firings, damage taken, and status changes. This data must be collected within the time required to support exercise management including situational awareness functions and after action reviews. OneTESS must also support combat engagements between players in virtual or constructive simulations environments.This paper is organized into seven sections (including the introduction) that describe initial Modeling and Simulation (M&S) efforts to provide data in support of OneTESS network design decisions. The M&S process is described first, and is followed by descriptions of the simulation environment, simulation goals, simulation results and recommendations.M&S ProcessModeling and Simulation (M&S) is used to analyze OneTESS functions and nonfunctional requirements as necessary to support mitigation of the OneTESS critical technology risk areas. The M&S results supports engineering tradeoffs and design alternatives for the OneTESS system. The inputs to the M&S process are the OneTESS system requirements and descriptions of OneTESS critical technology risks. The M&S process starts with analyzing these inputs with help from Subject Matter Experts (SMEs) and formally specifying mitigation alternatives. This process includes identifying modeling questions to be answered and generating the requirements specifications for modeling. Models are then designed and implemented, and simulations of alternatives to quantify tradeoffs are performed. Simulation statistics are collected and analyzed and reports are generated. In summary, the phases of the M&S process consist of model requirements specification, model design, software implementation, simulation execution and documentation of analysis results. The outputs of the M&S process are the work products documented at each phase and final reports addressing risk mitigation and system design recommendations.Modeling and Simulation EnvironmentTo support the communications network studies (refer to Figure 1.),  the OneTESS M&S environment is designed to run combat simulations and collect engagement data and network communications statistics across a wide range of scenarios for analysis.  The network simulation is built on Scalable Network Technologies’ (SNT) QualNet simulation software. QualNet provides the capability to build virtual networks in a laboratory environment by implementing the 7-layer Open System Interconnect (OSI) stack including the network, media access control (MAC) and physical (PHY) layer protocols for both wired and wireless (e.g. IEEE 802.11) communications.  QualNet also provides RF propagation models that can impact the simulation of wireless communications. The RF propagation models are the Terrain Integrated Rough Earth Model (TIREM) and Langley Rice.QualNet simulates networked nodes that engage each other over the network (e.g. movement, shooting “electronic bullets” and being shot). A node represents a participant in the scenario (i.e. a soldier or a vehicle). Node functions such as munition fly-out, terrain interaction, shot adjudication, casualty and damage assessment, data reporting and collection, are modeled in the QualNet simulation at the OSI application layer. Pre-defined scenarios are developed and executed using the OneSAF Test Bed (OTB) simulation or the BOBTool developed by Robert J Hall, of AT&T research Labs. BOB Tool is a tool for developing and executing large scale simulation scenarios [2] beyond the capabilities of OTB. Weapon fires and unit location information from these simulations are captured in a data file and converted to input configuration files to drive the simulation in QualNet. Although we have run QualNet simulations using OTB data, the scenario data used in the simulations described in this paper were mostly generated by Bob Tool.There are 2 types of configuration files that provide movement and engagement data for the QualNet simulation: Node files and application files.  The node files contain node trajectory information including positions of the nodes over time throughout the duration of the simulation. The application files contain engagement data such as the communications protocol the node will use to transmit the electronic bullet, type of shot adjudication architecture to use (i.e. Shooter, Target, or Centralized), shot vector (direction of the shot in the XYZ direction), time the shot was fired, node identifier for the shooter and a shot identifier.  QualNet runs the simulation based on the information contained in the configuration files and collects the desired statistics for subsequent analysis.    EMBED Visio.Drawing.11  Simulation GoalsOur primary goal has been to provide data to guide a critical design decision. The goal of this paper is the investigation of three critical networking problems and recommendations to support OneTESS network design decisions. This investigation involves the following:Choosing the distributed algorithm for shot adjudication. The three candidate approaches are Shooter Adjudicates (SA), Targets Adjudicate (TA), and Centralized Adjudication (CA). Determining the underlying network routing protocols for the three shot adjudication approaches. Determining the effects of adding a Data Collection (DC) function into the OneTESS network along with the Shot Adjudication algorithms. In particular, we wish to study the bandwidth needs of DC and any negative effects on shot adjudication that DC may bring.A set of combinatorial modeling studies was performed on the three candidate adjudication approaches. The results of these studies are reported in “Combinatorial Communications Modeling of RTCA Architectures” [1]In terms of processing requirements, the three shot adjudication approaches can be thought of as spanning the range of centralized versus distributed processing. Targets Adjudicate (TA) is fully distributed, with all processing occurring at or between the potential targets in the battlefield. Shooter Adjudicates (SA) is partially distributed, with a different communication pattern: the potential targets still perform most of the geometric and sensing computations, but the shooter is the final arbiter of hits.  Centralized Adjudication (CA) is mostly centralized, with all sensing information forwarded to one central point in the network for hit determination.   In networking terms, CA uses a global pattern of communication, while SA and TA require only local communication patterns.  Both common sense and the research literature support the idea that Mobile Ad-Hoc Network (MANET) performance is better using local communications patterns; our data below will bear out this fact empirically.The primary metrics of interest in this study are the fraction of shots that are correctly adjudicated and the average and maximum temporal latency of the adjudication process. Also of interest are numbers of bits transmitted overall and per second.  These metrics will be used in comparing the three candidates to each other and to support a recommendation as to which candidates are most viable in which situations.Of secondary interest is the performance of underlying networking routing protocols. A routing protocol solution is the ability to perform geo-routing: addressing a message to an area of space rather than a specific recipient. The M&S team developed the Geocast protocol to create an effective method of geo-routing that does not require prior knowledge of what nodes are present in the addressed area. In studying the performance of the underlying network protocols, we are interested in the scalability and reliability of geocast protocol variants. See reference [3] for the Geocast specification.  Also, we are interested in the relative performance of more traditional Mobile Ad-hoc Network (MANET) routing protocols in the context of the Central Adjudication method.  QualNet provides traditional MANET routing protocols such as Zone Routing Protocol (ZRP), Dynamic Source Routing (DSR), Ad-hoc On-demand Distance Vector (AODV), and Optimized Link State Routing (OLSR) for communication with other nodes in the simulation.Of tertiary interest is the Data Collection (DC) problem. DC investigation is a complex effort and report unto itself. For example, it is inherently impossible to implement a 100% reliable real time data collection algorithm when nodes can and will, through motion on the battlefield, become disconnected from the part of the network that can reach the DC. In this paper we simply present the information on the effects of one possible method of data collection on shot adjudication and the underlying network routing protocols and compare the performance.Future work will examine network protocol performance in the full context of data collection and other core OneTESS requirements.Scenario ClassesTo support our investigation, we need a set of representative scenarios on which to run our simulations.  These scenarios must represent the operational environment in which the OneTESS system will operate. We ran a wide range of scenarios, such as Convoy and High Intensity Conflict via OTB and Artillery, Fallujah Market, and Chase scenarios via BOB tool. These scenarios produced results in QualNet that are consistent with our findings described in this paper. We have chosen the Fallujah Market, Chase and Artillery scenario classes (described below) because they address important classes of behavior such as geographic density, limited radio line of sight, high firing rate, indirect fire, and network disconnectivity.  We will be looking for more scenarios in the future.Fallujah Market Scenario ClassFallujah Market (FM), a scenario class generated by BobTool, is a relatively simple setting that models a large crowd of noncombatants milling about in an open square area with a relatively small number of shooters firing randomly, leading to overall motion of all nodes.  A number NC of noncombatants and a number S of shooters are randomly placed within a 400m by 400m square, with no terrain or other obstacles. Each second, a given number of shooters each select a target randomly and shoot once.All nodes, both noncombatants and shooters, move according to a semi-random motion strategy, either contracting or dilating.  In the contracting motion strategy, a node has its highest probability of moving toward the center of the square (but other directions and no-movement are also possible).  In the dilating motion strategy, the highest probability is an outward step (away from center)FM currently has 17 instances, ranging from 23 nodes up to 1290 nodes, 10 or 20 shots per second, randomized-contracting/randomized-dilating/None motion patterns, 400m-by-400m square starting play box.Chase Scenario ClassThe Chase scenario, generated by BobTool, takes place in winding canyons, with small groups of teams chasing and shooting at other teams and running into ambushes. Chase models mountainous terrain, short lines of sight, and complex RF connectivity issues.  Chase currently has 6 instances, ranging from 4 nodes up to 121 nodes.Artillery Scenario ClassThe Artillery scenario class Arty, models an artillery attack by enemy forces indirect fire weapons on an encampment of friendly forces dismounted troops and vehicles. The friendly forces encampment takes place in terrain having obstacles that can provide cover from the attack, but the troops need to move to cover during the scenario. This motion to cover has the effect of splitting up the network connectivity into parts, which creates a challenge for the network architecture. The Arty class is challenging both from a scale perspective (number of nodes and shots) and from a network connectivity perspective. We have focused in this preliminary study on eight Arty instances, four each using 15 meter and 50 meter radius effect circles.Geocast ProtocolGeocast is a geo-routing protocol: its basic idea is to ensure a broadcast packet reaches every node geographically positioned within a specified geocast region by means of a self-limiting flood of forwarded (re-transmitted) broadcasts. This corresponds well to the intuitive notion of sending an “electronic bullet” message to all nodes that could possibly be hit by it. The Geocast region may be specified arbitrarily: for direct-fire weapons, it is an area containing the linear shot trajectory, and for indirect-fire weapons, it is the weapon’s blast radius around the detonation point. Weapon systems to be evaluated in the future may have yet still different geocast regions.To ensure connectivity, Geocast does not restrict forwarding to nodes within the geocast region: the forwarding zone, a superset of the geocast region is the geographic area from which nodes may forward the packets. Hence nodes outside the geocast region but in the forwarding zone will forward packets in the hope of getting them to nodes in the geocast region [3]. The path a Geocast message follows to reach any given point is cached within the message itself; hence, messages transmitted back to the sender can, and do, use reverse path forwarding.  Simulation ResultsThe OneTESS M&S team addressed three design decisions during 2005. In Iterations 1 and 2, we studied Real-time Casualty Assessment (RTCA) adjudication algorithms for direct fire. In Iteration 3, we studied the extension of these to indirect fire. Finally in Iterations 4 and 5 we studied the addition of the data collection function and traffic to RTCA. In all such studies, the process described in Section 2 above was followed, and we used the scenario classes discussed in Section 4 as the basis for the measured results. Due to space restrictions, we can only briefly overview the results here. Each model was setup for using a radio range of 500 meters and weapon range of 2500 meters. The terrain used was the National Training Center (NTC) DTED (level 2).  The comparative results for the scenario classes (with and without data collection operating) and summary of lessons learned and recommendations are discussed in turn below. Notes on Statistics shown on graphsDetailed statistics on all runs for each of the adjudication models are available upon request.  When referring to the graphs, please note that Kill Scoring “Number of Kills” indicates the number of shots that were adjudicated. Peek Network Traffic “Bits per second” (BPS) indicates the maximum (peek) amount of network traffic transmitted per engagement.  “Average engagement time” indicates the shot latency in seconds it took for each engagement. The graphs show statistics for engagements with and without data collection.Fallujah Market (FM) ObservationsThe Fallujah Market (FM) scenario class (see FM graphs below) stresses the candidates in the geographic density dimension. That is, as the parameters (numbers of player unit nodes) increase, they are distributed over the same 400 meter by 400 meter square, so the density of nodes increases, meaning more and more of them must share the common radio frequency medium. The high end of this range represents extremely high usage of the RF resource and is, therefore, quite challenging for MANET protocols and distributed algorithms depending upon real time messaging.We examined a total of 20 instances of Fallujah Market, partitioned among 3 motion patterns: Contracting Motion, and Dilating Motion. These also varied in total player nodes and numbers of shots per second.  The sparsest instances had 23 nodes (either 10 shooters and 13 non-combatants). The densest instances had 1290 nodes (either 10 shooters and 1280 NCs). Other instances used 138 nodes (10/128 or 20/118) and 650 (10/640) nodes. In all instances, each shooter fires once per second at a randomly selected in-range target.Baseline: small cases. As a baseline, all candidates handled the 10/13 and 20/3 cases satisfactorily, with highest adjudication fidelity and without exhausting the 2 Mbps RF resource. However, not all routing protocols behaved equally. Centralized Adjudication Scaling Failure. Our first and most obvious observation is the significant scaling failure of the Centralized Adjudication candidate. At 10/128/contract, shot adjudications started failing noticeably, even for the best routing protocol that proved most effective (ZRP, whose results are reported here). Doubling the shot rate (20/118/contract) exacerbates this significantly. While this does not appear to be due to exhausting the RF resource, we believe it is likely due to exceeded retry limits on acknowledged packets and other sources of packet loss. While it is possible to raise these limits, it is clear that the packet-per-second count is not scaling well. Shooter Adjudicates Success. Next, we observed that the Shooter Adjudicates candidate scaled well and handled all instances successfully, with the beginnings of failure starting to appear only for the worst-case instance examined (20/1270/contract), which achieved only 89% hits, where we expected near 100% hits. It should be emphasized that this case essentially had nearly 1300 players in close proximity (all radios could hear all others), with 20 shots per second occurring. In that case, the maximum shot latency rose to over 16 seconds as well, where in virtually all other cases it was below a half second.  It should be noted that for the 10/1280/contract case, the hits were acceptably high, but the maximum latency rose to around 6 seconds.  However, aside from the 20/1270/contract case, we believe SA performed acceptably.  Comparatively, it performed the best in all but the smallest cases; in those cases, while others may have slightly outperformed it, this difference was not significantTargets Adjudicate and Shooter Adjudicates Relative Performance. As a general trend, Targets Adjudicates performs similarly to Shooter Adjudicates, but as the scale increases, TA uses more bandwidth and successfully adjudicates slightly fewer shots than SA.  At the highest scales we successfully simulated (10/1280/dilate, 20/1270/dilate, 10/1280/NoMotion, 20/1270/NoMotion) it is clear that TA’s bandwidth needs are more than double those of SA and are growing slightly faster than Shooter Adjudicates. However, we had difficulty completing simulations of the highest scale cases in Qualnet (1290 node contracting cases), so there is some doubt as to how TA would perform at these highest levels. Latency performance.  Shooter Adjudicates operates by having the shooter wait  500 milliseconds after the trigger pull before sending out the final “kill” packet to the adjudicated target (if any). This is an approximation to the eventual OneTESS algorithm of basing this wait time on the computed munition flyout duration to each target. For comparing latencies of the candidates, we then wish to measure how long after this timeout it takes to deliver the “kill” to the target.  In all except two cases, SA delivers this final message in 500 milliseconds (max) or less. As discussed above, only the very highest scale cases result in significant lengthening of this latency to 6-16 seconds.Latencies in excess of 1 minute were observed even in the smaller cases for Centralized Adjudication, so it is clearly not going to scale well for latency either.Geocast Protocol Success. Both Shooter Adjudicates and Target Adjudicates are based in whole or in part on the use of the geocast MANET protocol, the idea of which is to address packets to geographic areas and have the nodes pass them on accordingly. This simple idea is controlled by a variety of parameterized heuristics (see reference [1] Hall, R.J.: Combinatorial Modeling of an Omniscient-Shooter RTEA Architecture, 21 May 2005, OneTESS Technical Memorandum. See [1] for an explanation Geocast scaled quite well. In moving from 10/13/contract to 10/1280/contract, for example, a factor of 100 in density and nodes, geocast packets-per-shot traffic only increased by a factor of two; if it had been scaling quadratically, as might be expected from a simple flooding algorithm, we would have expected geocasts-per-shot to increase by a factor of roughly 100.Geocast’s reliability in delivering packets was also acceptable. It supported the high fidelity performance in both Shooter Adjudicate and Targets Adjudicates throughout.Reverse Path Forwarding Success. Shooter Adjudicates’ design accumulates in the geocast packet of the path taken by the packet from shooter to target, then reverses this path for replies from target to shooter.  The intuition is that the reverse path is very likely still to be in place for the time immediately after the delivery of the geocast shot packet, even for scenarios with lots of chaotic motion around obstacles.  SA’s good performance bears out this intuition, showing that this heuristic performed well.Routing protocol failure. Our experience with the traditional off-the-shelf routing protocols (Centralized Adjudication candidate only) including AODV, DSR, PLSR and ZRP were not favorable. Overheads seemed to be large and scaling worse than linearly in the number of nodes. Moreover, the best Centralized Adjudication results were obtained from different protocols in different scenarios. Adopting any one for all purposes would lead to even worse performance. (Detailed statistics on these protocols are available upon request). Chase ObservationsThe Chase scenario class (see graphs below) stresses the candidates in the dynamic change of network connectivity and neighbor structure. We explored six instances of this class, from the smallest (1,1,1,1,0) involving five nodes, up through the largest (20,20,20,20,40) involving 121 nodes. The nodes are grouped into pursuers, fugitives, and ambushers. At any second of the 720 second simulation run, a node will select a target randomly from among visible members of the opposing team and shoot. Thus, the number of shots per second varies quite widely, with very little shooting when nodes are spread out along the canyons and a huge firefight at the end when everyone is in the ambush area.Baseline: smallest cases. In the smallest case (1,1,1,1,0), the three candidates performed similarly and well. However, interestingly, for the Centralized Adjudication candidate ZRP was much worse than either AODV or DSR protocols (which is the opposite of what happened with Fallujah).  The latter achieved very close to the same adjudication fidelity as SA and TA, but ZRP was 20% lower.  In this case, the candidates were nowhere near saturating the medium.Centralized Adjudication Scaling Failure. Centralized Adjudication (CA) failed much earlier in Chase even than for FM. The other five cases yielded significantly degraded shot adjudication fidelity. This was partly due to huge bandwidth usage as well as connectivity failures and other sources of packet loss, combined with CA’s generally fragile methodology: if either the shooter or the target cannot send a packet to the central adjudicator, the shot cannot be successfully adjudicatedSA Success. The SA candidate handled all cases well and handled the two largest cases the best (both for shot fidelity and bandwidth demand) of the three candidates by a significant margin. It was observed that the locality of SA’s communication patterns is more flexible and reliable when the network connectivity is dynamically changing than the global communication pattern of Centralized Adjudication. Whereas Centralized Adjudication needs to forward packets up and down the canyon to reach the adjudicator, shooters tend to be local to targets during engagements; so they do not depend on long chains of connectivity.TA compared to SA.  Here TA performs relatively poorly compared to SA, but still much better than Centralized Adjudication. The two perform comparably (within 1 % fidelity) for the lower four instances, but TA’s fidelity drops off significantly for (10,10,10,10,20) and (20,20,20,20,40). This is believed due to the higher bandwidth requirement of TA’s ImHit geocasts compared to the short-range unicast ImHits and Kills of SA.  The short lines of sight in the canyons degrade geocast’s heuristics so they end up sending more transmissions there. Latency performance. In five of the six scenarios, the SA latency (again, after the adjudication timeout) was around 0.5-0.6 second (max). There was some degradation in the largest case (up to 46 sec), again due to the huge firefight at the end of the simulation, indicating near saturation of the RF medium. Latency of Centralized Adjudication was disappointing (in addition to its low fidelity), with latencies in the 5-6 second range up to tens of seconds for larger cases, even for the best-performing routing protocols.Artillery ObservationsThese observations describe our first steps and first results for comparison (see graph below) of indirect fire adjudication. In general, Shooter Adjudicates performed with low packet loss in seven of the eight instances. Arty-100-16(50m) showed significant packet loss due to contention. The average packet rate reached to the vicinity of 900 packets per second and peak traffic periods reaching 1.83 million bits per second. Generally, the Arty-100-16(50) scenario is beyond the reach of either SA or TA, as both exhibit significantly degraded adjudication performance and high packet. The packets-per-second and bits-per-second (both average and peak) are significantly higher for Targets Adjudicate in all cases where data is available. (Note: this result will be firmed up in a future iteration.)Latency.  We look only at the total latency of shot adjudications without modeling the delay due to munition flyout time (which is necessary for realism in the eventual OneTESS system). For all 15meter Arty instances, the average shot latency was less than 69 milliseconds, and the maximum over all shots was less than 97 milliseconds. 15meter refers to the effect circle radius of 15 meters. This is approximately the effect circle for the MK19.  The "50meter" Arty instances are comparable with the effect circle of artillery shells. For Arty-50-8(50), the average latency was still only 59 milliseconds, but the maximum over all shots was 7.45 seconds.  Arty-100-16(50) had an average of 15.6 seconds and an extreme of 95.7 seconds. While 7.45 seconds could be covered by the actual physical flyout time for most long-range munitions, the largest Arty case is probably beyond the scale limit for latency.  Data collection via Geocast ObservationsGenerally, the DC-G data collection algorithm seems to be a success. It deals successfully with all scenarios, handling out of contact conditions and recovering from such conditions without flooding the network. It manages this relatively efficiently, without maintaining generic routing tables and without incurring overhead to support them. Essentially, it performs route discovery to the data collector while it is carrying out the application’s normal tasks, using the Geocast protocol.The negative news is that adding traffic to the network degrades the reliability of the shot adjudication algorithm (see graphs). Strikingly, this occurs even at very modest traffic levels, to the extent of a few percent (which can be critical for OneTESS realism). This degradation was shown in the vast majority of scenarios, across all classesLessons LearnedWhile work is still in progress to get comparative results for the indirect fire scenarios, we believe the following initial lessons follow from experience with the classes examined.The ShooterAdjudicates (SA) architecture candidate (direct-fire) outperformed both the Centralized Adjudication and Targets Adjudicate (TA) candidates in that it always attained within about 1 percent of the best fidelity percentage among the three and often was significantly better than the other two.  Moreover, in dense scenarios it used significantly less radio bandwidth than the other two, so can be expected to scale the best to such cases. The Targets Adjudicate (TA) candidate (Direct-fire) seems to be viable in most cases. It is harmed by complex radio environments as seen in Chase scenarios, but it may be useful if a decision is made to employ asymmetric antennas or other complex radio regimes. In short, it will handle most scenarios and may be particularly useful in certain atypical ones, but can be expected to fail well before SA in cases of high geographic density or in complex radio environments.Targets Adjudicate & Shooter Adjudicate Comparison (indirect-fire) Shooter Adjudicate (SA) out perform Target Adjudicate (TA) in packet traffic scalability. SA and TA achieve in excess of 95% success compared to the (unimplementable) theoretical best possible on the Perfect Adjudication statistic. SA may slightly outperform TA, but evidence for this is slim.The Geocast protocol studied is practical and scalable to over a thousand nodes standing close together (all in mutual radio range). It scales well beyond that as well.  So far, our studies indicate that Geocast protocol is a useful and viable way to get information to nodes in a geographic area without attempting to keep track of their locations in real time. The Centralized Adjudication is clearly not scalable to handle geographically dense scenarios, nor scenarios in which graph connectivity is poor or sporadic. Centralized Adjudication is not viable as a general adjudication architecture for direct fire. It may be useful in limited cases, but such cases will require that connectivity and low geographic density be guaranteed.Traditional routing protocols, such as AODV, DSR, OLSR or ZRP, perform with high overhead, or fail outright, in dense situations.Data Collection Via Geocast, appears to be a success, though the additional traffic added to the network has the potential to degrade the shot adjudication algorithm.RecommendationsThe following recommendations appear to be supported by our initial study.Use Shooter Adjudicates for direct-fire weapons. Adjust the radio range to match weapon range for each weapon type. That is, when originating or relaying a packet related to a weapon with range R, adjust the transmit power of the radio to at least range R. Of course, if the weapon range is longer than the radio’s maximum range, another approach may be better, such as a second, long-range network layer with bridge router functionality between the two layers.Explore Ggeocast-based candidates for other Applications. Explore other OneTESS applications in parallel with more traditional routed unicast style messaging. For example, location tracking and data collection must also deliver data across the MANET; OneTESS should explore a Geocast-based architecture for this in addition to a more traditional one. This is supported as a risk-reduction tactic by the success of Geocast for shot adjudication where traditional routing fails significantly.Explore nontraditional forms of unicast routing.  Off-the-shelf unicast routing protocols have been clearly shown to fail at OneTESS’s potential levels of scale and mobility.  To test unicast routing for data collection, location tracking, and other non-RTCA OneTESS applications at all, OneTESS must explore methods of unicast routing more specifically tailored to its communication needs.Explore more indirect fire scenarios. While the Arty scenario class is useful in exercising a wide range of scalability and network configurations, it is important to compare the models using other, different types of scenario, including MOUT, large geographic scale, and fast-mover scenarios.Avoid Single Centralized Adjudication for direct fire whenever possible.  The connectivity, packet load, and routing overhead problems make the Centralized Adjudication approach unlikely to succeed at scale with high reliability.Separate (isolate) RTCA and Data collection application from each other on the network. By this, we mean to ensure that the RTCA application should have reserved bandwidth to avoid degraded RTCA performance from the presence of Data Collection (DC) traffic. There are a number of ways to do this, including but not limited to having RTCA operate on a separate physical channel or on a reserved timeslice from DC and other best-effort applications ReferencesCombinatorial Communications Modeling of Real-Time Tactical Engagement Adjudication Architectures.  Robert J. Hall, AT&T Labs ResearchLSS: A Tool for Large Scale Scenario. Robert J. Hall, AT&T Labs ResearchGeocast: Functional Specs for Modeling. Robert J. Hall, AT&T Labs ResearchAuthor BiographiesWAYNE A. LINDO is a Senior Systems Engineer with AT&T Government Solutions, and currently working on the development of the One Tactical Engagement Simulation System (OneTESS). His work experience includes distributed simulation systems development on the Combined Arms Staff Trainer (CAST), One Semi-Automated Forces (OneSAF), War-fighter Simulation (WARSIM 2000), Joint Simulation Systems (JSIMS), and Northrop Grumman Flight Simulation and Avionics Integration programs. Mr. Lindo holds a Master of Science Degree in Computer Science, from Pratt Institute, Brooklyn, New York, Bachelor of Science Degree in Electrical Technology from The City College of New York and a Master of Science in Telecommunications, from Azusa Pacific University, Azusa California.Robert J. Hall earned the SM, EE, and PhD degrees in Electrical Engineering and Computer Science from the Massachusetts Institute of Technology. Since then he has been a Principal Investigator at AT&T Laboratories Research, working in the areas of automated software engineering, requirements engineering, and modeling and simulation. He serves on the Steering and Program Committees for the ACM/IEEE International Conference on Automated Software Engineering, as well as the editorial board of the Automated Software Engineering Journal (Springer) and I.F.I.P. Working Group 2.9 on Requirements Engineering. He has nine issued patents and over 40 publications.AcknowledgementsWe acknowledge the 2005 OneTESS M&S team for developing the simulations and generating the results described in this paper. These individuals are: Matthew Gerber (AT&T), Matt Janisz (ARA), Matt Murphy (SRC), Josh Auzins (SRC), Danny Lacks (SRI) and Tony Vernucci (GD)